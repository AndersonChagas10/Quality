@using PlanoAcaoCore
@{
    ViewBag.Title = "Index";
}

@section Styles {

    <style>
        body {
            padding-top: 86px !important;
        }
        /*table {

            table-layout: fixed;
            word-wrap: break-word;
        }*/


        /*table {
            table-layout: fixed;
            width: 100%;
            *margin-left: -100px;
        }*/

        .fix {
            position: absolute;
            *position: relative; /*ie7*/
            margin-left: -100px;
            width: 100px;
        }

        .outer {
            position: relative;
        }

        .inner {
            width: 100%;
        }

        .defaultDiv {
            padding: 3px;
        }

        .defaultDivInternal {
            background-color: #fff;
            padding: 5px;
        }

        .defaultSizeMin {
            height: 250px;
        }

        .defaultSizeMinPanel {
            height: 150px;
            width: 100%;
        }

        .defaultSizeMinPanel2 {
            height: 200px;
            width: 100%;
        }

        .defaultSizeMed {
            height: 370px;
        }

        .defaultSizeMedPanel {
            height: 290px;
            width: 100%;
        }

        .defaultSizeMax {
            height: 561px;
            font-size: xx-small;
        }

        .defaultSizeMaxPanel {
            height: 521px;
            width: 100%;
        }

        .defaultGroupTitle {
            float: left;
            /*width: 100%;*/
        }

        .defaultTitle {
            font-weight: bold;
            font-size: 14px;
            float: left;
        }

        .defaultSubtitle {
            font-weight: normal;
            font-size: 8px;
            text-transform: uppercase;
            float: left;
        }

        .defaultFilter {
            float: left;
            border-bottom: 1px dotted #ccc;
            margin-bottom: 5px;
            width: 100%;
            padding: 2px;
        }

        .defaultDivFilter {
            background-color: #06304e;
            color: #FFF;
            position: fixed;
            z-index: 999;
            top: 50px;
        }

        .btn-filter {
            font-size: 12px;
            height: 26px;
            width: 23px;
            padding: 0;
        }

        .dropdown-menu open {
            width: 150px;
        }

        /*tbody > tr > td {
            word-break: break-all;
        }*/

        button[data-id=valor1Filtro] {
            width: 200px !important;
        }

        div.dropdown-menu.open {
            max-width: 300px;
            word-wrap: break-word;
            white-space: normal;
        }

        div.daterangepicker {
            width: 750px;
        }

        #example_wrapper > div.DTFC_ScrollWrapper > div.DTFC_RightWrapper > div.DTFC_RightHeadWrapper > table > thead > tr {
            background-color: #fff;
        }

        /*#example_wrapper > div.DTFC_ScrollWrapper > div.DTFC_RightWrapper > div.DTFC_RightBodyWrapper {
            top: -12px !important;
        }*/

        .semDados {
            position: absolute;
            z-index: 10;
            background: #ffffff;
            height: 80%;
            width: 100%;
            top: 20%;
            font-size: 20px;
            display: none;
        }

            .semDados h1 {
                margin-left: 40px;
            }

        /*#body {
            overflow: auto;
        }*/
    </style>

    <style>
        span.select2 {
            min-width: 120px !important;
        }

        .select2-container {
            /*width: 278px;*/
        }

        select {
            /*min-width: 278px;*/
        }

        .hideEmail {
            display: block !important;
        }
        /*.dataTable td {
            max-width: 15ch;
            height: 125px !important;
            max-height: 125px !important;
            overflow: hidden;
            text-overflow: clip;
            white-space: nowrap;

            padding: 10px;


        }

        .dataTable td:hover {
            overflow: visible;
            white-space: normal;
        }*/

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            color: #333;
        }


        /*table {
            text-align: left;
            border-radius: .25rem;
        }*/

        table.borderedNinja {
            border: 2px solid #c1c1c1;
        }

        /*thead tr:first-child {
            background: #ffffff;
            border: none;
            height: 60px;
        }

        th:first-child,
        td:first-child {
            padding: 0 15px 0 20px;
        }

        tbody tr:hover {
            background-color: rgba(170, 170, 170, 0.20);
            cursor: default;
        }

        tbody tr:last-child td {
            border: none;
        }

        td:last-child {
            text-align: right;
            padding-right: 10px;
        }*/

        .button {
            color: #aaa;
            cursor: pointer;
            vertical-align: middle;
        }

        .edit:hover {
            color: #0a79df;
        }

        .delete:hover {
            color: #dc2a2a;
        }

        .modal-header .btnGrp {
            position: absolute;
            top: 8px;
            right: 10px;
        }


        .min {
            width: 250px;
            height: 35px;
            overflow: hidden !important;
            padding: 0px !important;
            margin: 0px;
            float: left;
            position: static !important;
        }

            .min .modal-dialog, .min .modal-content {
                height: 100%;
                width: 100%;
                min-width: 70%;
                align-self: center;
                margin: 0px !important;
                padding: 0px !important;
            }

        .modal-dialog {
            width: 80% !important;
        }

        .min .modal-header {
            height: 100%;
            width: 100%;
            margin: 0px !important;
            padding: 3px 5px !important;
        }

        .display-none {
            display: none;
        }

        button .fa {
            font-size: 16px;
            margin-left: 10px;
        }

        .min .fa {
            font-size: 14px;
        }

        .min .menuTab {
            display: none;
        }

        button:focus {
            outline: none;
        }

        .minmaxCon {
            height: 35px;
            bottom: 1px;
            left: 1px;
            position: fixed;
            right: 1px;
            z-index: 9999;
        }


        /*Datatable*/
        ul.pagination {
            margin: 0px;
        }

        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus {
            background-color: #428bca !important;
            border-color: #428bca !important;
        }

        .pagination > li > a, .pagination > li > span {
            color: #666;
        }

        .dataTables_wrapper input {
            border: 1px solid #666;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button,
        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled,
        .dataTables_wrapper .dataTables_paginate span span {
            background: transparent !important;
            margin: 0px !important;
            border: 1px solid #ddd;
            color: #666 !important;
            padding-top: 7px !important;
            padding-bottom: 7px !important;
        }

            .dataTables_wrapper .dataTables_paginate .paginate_button:hover,
            .dataTables_wrapper .dataTables_paginate .paginate_button:focus {
                color: #666 !important;
                background: #ddd !important;
                border: 1px solid #ddd;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button.current,
            .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover,
            .dataTables_wrapper .dataTables_paginate .paginate_button.current:focus {
                background: #428bca !important;
                border-color: #428bca !important;
                color: #fff !important;
            }

        #percentualConclusao {
            font-size: 40px;
        }
    </style>

}

<div class="container-fluid">
    <div class="row" style="width:100% !important">
        <div class="col-md-12" style="margin-left:10px;">
            <button type="button" class="btn btn-success showAsEstrategy" id="NovoPlanejamento" onclick="Clicked(false, false, false); ModalOpcoesEstrategico('Planejamento Estratégico', undefined, NovoPlanejamento);" data-toggle="modal" disabled> Novo Planejamento Estratégico</button>

            <button type="button" class="btn btn-success showModalNovoTatico" onclick="AbrirModalNovoApartirDeAlgo('tatico','Tático', 'Estratégico')" id="btnModalNovoTatico" data-toggle="modal"> Novo Tático</button>

            <button type="button" class="btn btn-success showModalNovaAcao" onclick="AbrirModalNovoApartirDeAlgo('acao','Ação', 'Tático')" id="btnModalNovaAcao" data-toggle="modal"> Novo Ação</button>

            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modalVisaoGeralProjetos" onclick="vgp('Gerencia');">Visão Geral dos Projetos Gerencia</button>

            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modalVisaoGeralProjetos" onclick="vgp('Diretriz');">Visão Geral dos Projetos Diretriz</button>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="modalVisaoGeralProjetos" class="modal fade modal-lg" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Visão Geral dos Projetos</h4>
            </div>
            <div class="modal-body container-fluid">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-4">
                            <div class="col-sm-12 panel panel-inf" style="background-color:dimgray; color:whitesmoke; text-align:center">
                                <h4 class="panel-heading">% Concluída</h4>
                                <div id="percentualConclusao" class="panel-body">0 %</div>
                            </div>
                            <div>
                                <div id="graficoPorGerencia"></div>
                                <div id="graficoPorDiretriz"></div>
                            </div>
                        </div>
                        <div class="col-sm-8">
                            <div id="graficoPorProjetos"></div>
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <h4>Tarefas em Andamento</h4>
                            <table id="tableAndamento" class="table table-striped"></table>
                        </div>
                        <div class="col-sm-6">
                            <h4>Tarefas Atrasadas</h4>
                            <table id="tableAtrasadas" class="table table-striped"></table>
                        </div>
                    </div>
                    <div style="clear:both; height: 40px;"></div>
                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <h4>Próximas Tarefas</h4>
                            <table id="tableProximas" class="table table-striped"></table>
                        </div>
                        <div class="col-sm-6">
                            <h4>Tarefas Concluídas</h4>
                            <table id="tableConcluidas" class="table table-striped"></table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
            </div>
        </div>

    </div>
</div>

<hr class="showAsEstrategy" />

<div class="container-fluid" style="background-color:#ccc;">
    <!--MENU DE FILTROS-->
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 defaultDiv">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 defaultDivInternal defaultDivFilter">
            <div class="defaultGroupTitle" style="width:auto; float:left; background-color:transparent;">
                <span class="defaultTitle" style="line-height:27px;">Filtros</span>
            </div>
            <div class="defaultFilter input-group" style="width:auto; float:right; background-color:transparent; border-bottom: 0px; margin-bottom:0px;">
                <div class="input-group-btn" style="width: 100px;">
                    <input type="text" class="form-control" name="daterange" value="01/01/2017 - 31/01/2017" />
                </div>
                &nbsp;
                <select style="font-size:xx-small;" id="campo1Filtro" onchange="distinctFilter(dados, $(this).val(), 'valor1Filtro');">
                    <option value="">Todos</option>
                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao">Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia">Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="_GrupoCausa">Grupo Causa</option>
                    <option value="_CausaGenerica">Causa Genérica</option>
                    <option value="_ContramedidaGenerica">Ação Genérica</option>
                    <option value="UnidadeName">Unidade</option>
                    <option value="_Quem">Quem</option>
                    <option value="_StatusName">Status</option>
                    <option value="Regional">Regional</option>
                    <option value="Level1Name">Indicador</option>
                    <option value="Level2Name">Monitoramento</option>
                    <option value="Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>

                </select>
                &nbsp;
                <select id="valor1Filtro">
                    <option>Todos</option>
                </select>
                &nbsp;
                <button class="btn btn-warning btn-filter" style="font-size:12px;" id="btnTop"><span class="glyphicon glyphicon-filter"></span></button>
            </div>

        </div>
    </div>
    <!--FIM MENU DE FILTROS-->
    <!--LINHA 1-->
    <!--<div class="col-lg-3 col-md-4 col-sm-4 col-xs-12 defaultDiv">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMin">
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Status das Ações</span>
                <br />
                <span class="defaultSubtitle">Total de ações por Status</span>
            </div>
            <div id="panel1" class="defaultSizeMinPanel"></div>
        </div>
    </div>-->
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12 defaultDiv">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMin">
            <div class="defaultFilter ">

                <select style="font-size:xx-small;" id="campo1FiltroPie2" onchange="distinctFilter(dados, $(this).val(), 'valor1FiltroPie2');">
                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao">Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia">Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="_GrupoCausa">Grupo Causa</option>
                    <option value="_CausaGenerica">Causa Genérica</option>
                    <option value="_ContramedidaGenerica">Ação Genérica</option>
                    <option value="UnidadeName">Unidade</option>
                    <option value="_Quem">Quem</option>
                    <option value="_StatusName">Status</option>
                    <option value="Regional">Regional</option>
                    <option value="Level1Name">Indicador</option>
                    <option value="Level2Name">Monitoramento</option>
                    <option value="Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>
                </select>
                &nbsp;
                <select id="valor1FiltroPie2">
                    <option>Todos</option>
                </select>
                &nbsp;
                <button class="btn btn-warning btn-filter" style="font-size:12px;" id="btnFiltroPie2"><span class="glyphicon glyphicon-filter"></span></button>
            </div>
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Tarefas vs Status</span>
                <br />
                <span class="defaultSubtitle" id="spanPie2">Todos</span><span class="defaultSubtitle">&nbsp;por status</span><br />
            </div>
            <div id="panel2" class="defaultSizeMinPanel"></div>
        </div>
    </div>

    <div class="col-lg-9 col-md-8 col-sm-8 col-xs-12 defaultDiv">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMin">
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Estoque de Ações</span>
                <br />
                <span class="defaultSubtitle">Formação do Estoque de Ações</span>
            </div>
            <div id="panel4" class="defaultSizeMinPanel2"></div>
        </div>
    </div>

    <div class="clearfix"></div>
    <!--FIM LINHA 1-->
    <!--LINHA 2-->
    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 defaultDiv">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMed ">
            <div class="defaultFilter">
                <select style="font-size:xx-small;" id="campo1Panel5" onchange="distinctFilter(dados, $(this).val(), 'valor1Panel5');" oncancel="filterEixoY('valor1Panel5')">

                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao" selected>Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia">Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="Acao._GrupoCausa">Grupo Causa</option>
                    <option value="Acao._CausaGenerica">Causa Genérica</option>
                    <option value="Acao._ContramedidaGenerica">Ação Genérica</option>
                    <option value="Acao.UnidadeName">Unidade</option>
                    <option value="Acao._Quem">Quem</option>
                    <option value="Acao._StatusName">Status</option>
                    <option value="Acao.Regional">Regional</option>
                    <option value="Acao.Level1Name">Indicador</option>
                    <option value="Acao.Level2Name">Monitoramento</option>
                    <option value="Acao.Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>
                </select>

                <select id="valor1Panel5"></select>

                <select style="font-size:xx-small;" id="campo2Panel5" onchange="distinctFilter(dados, $(this).val(), 'valor2Panel5');">

                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao">Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia">Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="Acao._GrupoCausa">Grupo Causa</option>
                    <option value="Acao._CausaGenerica">Causa Genérica</option>
                    <option value="Acao._ContramedidaGenerica">Ação Genérica</option>
                    <option value="Acao.UnidadeName">Unidade</option>
                    <option value="Acao._Quem">Quem</option>
                    <option value="Acao._StatusName" selected>Status</option>
                    <option value="Acao.Regional">Regional</option>
                    <option value="Acao.Level1Name">Indicador</option>
                    <option value="Acao.Level2Name">Monitoramento</option>
                    <option value="Acao.Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>
                </select>

                <select id="valor2Panel5"></select>
                <button class="btn btn-warning btn-filter" id="btnpanel5"><span class="glyphicon glyphicon-filter"></span></button>
                <button class="btn btn-danger btn-filter" onclick="btnOrder('campo1Panel5','campo2Panel5','panel5', this.id);" id="btnOrderFilterPanel5"><span class="glyphicon glyphicon-sort-by-attributes-alt" title="Ordem por Valor" id="spanOrder"></span></button>
            </div>
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Comparativo</span>
                <br />
                <span class="defaultSubtitle" id="FirstParamPanel5">Status </span>
                <span class="defaultSubtitle">&nbsp;por&nbsp;</span>
                <span class="defaultSubtitle" id="LastParamPanel5"> por Gerência</span>
            </div>
            <div id="panel5" class="defaultSizeMedPanel"></div>
            <div id="semDados1" class="semDados">
                <h1>
                    Sem dados
                </h1>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 defaultDiv Panel6">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMed">
            <div class="defaultFilter">
                <select style="font-size:xx-small; width:50px;" id="campo1Panel6" onchange="distinctFilter(dados, $(this).val(), 'valor1Panel6');">
                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao">Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia" selected>Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="Acao._GrupoCausa">Grupo Causa</option>
                    <option value="Acao._CausaGenerica">Causa Genérica</option>
                    <option value="Acao._ContramedidaGenerica">Ação Genérica</option>
                    <option value="Acao.UnidadeName">Unidade</option>
                    <option value="Acao._Quem">Quem</option>
                    <option value="Acao._StatusName">Status</option>
                    <option value="Acao.Regional">Regional</option>
                    <option value="Acao.Level1Name">Indicador</option>
                    <option value="Acao.Level2Name">Monitoramento</option>
                    <option value="Acao.Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>
                </select>

                <select id="valor1Panel6"></select>

                <select style="font-size:xx-small;" id="campo2Panel6" onchange="distinctFilter(dados, $(this).val(), 'valor2Panel6');">

                    <option value="Diretoria">Diretoria</option>
                    <option value="Dimensao">Dimensão</option>
                    <option value="Objetivo">Diretriz</option>
                    <option value="IndicadoresDiretriz">Indicadores / Diretriz</option>
                    <option value="TemaAssunto">Tema / Assunto</option>
                    <option value="Gerencia">Gerência</option>
                    <option value="Coordenacao">Coordenação</option>
                    <option value="TipoProjeto">Tipo de Projeto</option>
                    <option value="TemaProjeto">Tema do Projeto</option>
                    <option value="Iniciativa">Projeto / Iniciativa</option>
                    <option value="Acao._GrupoCausa">Grupo Causa</option>
                    <option value="Acao._CausaGenerica">Causa Genérica</option>
                    <option value="Acao._ContramedidaGenerica">Ação Genérica</option>
                    <option value="Acao.UnidadeName">Unidade</option>
                    <option value="Acao._Quem">Quem</option>
                    <option value="Acao._StatusName" selected>Status</option>
                    <option value="Acao.Regional">Regional</option>
                    <option value="Acao.Level1Name">Indicador</option>
                    <option value="Acao.Level2Name">Monitoramento</option>
                    <option value="Acao.Level3Name">Tarefa</option>
                    <option class="optionAlternativeRole" value="Acao.TipoIndicador">Tipo Indicador</option>
                </select>

                <select id="valor2Panel6"></select>

                <button class="btn btn-warning btn-filter" id="btnpanel6"><span class="glyphicon glyphicon-filter"></span></button>
                <button class="btn btn-danger btn-filter" onclick="btnOrder('campo1Panel6','campo2Panel6','panel6', this.id);" id="btnOrderFilterPanel6"><span class="glyphicon glyphicon-sort-by-attributes-alt" title="Orderm por Valor" id="spanOrder"></span></button>
            </div>
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Comparativo</span>
                <br />
                <span class="defaultSubtitle" id="FirstParamPanel6">Status</span>
                <span class="defaultSubtitle">&nbsp;por&nbsp;</span>
                <span class="defaultSubtitle" id="LastParamPanel6">Pessoa</span>
            </div>
            <div id="panel6" class="defaultSizeMedPanel"></div>
            <div id="semDados2" class="semDados">
                <h1>
                    Sem dados
                </h1>
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <!--FIM LINHA 2-->
    <div class="panel-group accordion">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a class="accordion-toggle collapsed" onclick="tableAcaoRedrown()" data-toggle="collapse" data-target="#divPlanejamentoAcao" aria-expanded="false" style="display:block;cursor:pointer">Tabela de Ações</a>
                </h4>
            </div>
        </div>
    </div>

    <!--LINHA 3-->
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 defaultDiv collapse" id="divPlanejamentoAcao">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMax">
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Gerenciador de Tarefas</span>
                <br />
                <span class="defaultSubtitle" id="spanSubTable">Todas as tarefas para filtrar</span>
            </div>

            <br /><br /><br />

            <div id="panel7" class="defaultSizeMaxPanel outer">
                <div class="inner">
                    <table id="example" class="display" cellspacing="0" style="font-size: 8pt;">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <!--FIM LINHA 3-->
    <div class="panel-group accordion">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a class="accordion-toggle collapsed" onclick="tablePlanejamentoRedrown()" data-toggle="collapse" data-target="#divPlanejamento" aria-expanded="false" style="display:block;cursor:pointer">Tabela de Projetos</a>
                </h4>
            </div>
        </div>
    </div>
    <!--LINHA 4-->
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 defaultDiv collapse" id="divPlanejamento">
        <div class="col-lg-12 col-md-12 col-sm-12 defaultDivInternal defaultSizeMax">
            <div class="defaultGroupTitle">
                <span class="defaultTitle">Gerenciador de Tarefas</span>
                <br />
                <span class="defaultSubtitle" id="spanSubTable">Todas os Planejamentos para filtrar</span>
            </div>

            <br /><br /><br />

            <div id="panel7" class="defaultSizeMaxPanel outer">
                <div class="inner">
                    <table id="TablePlanejamento" class="display" cellspacing="0" style="font-size: 8pt;">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <!--FIM LINHA 4-->
</div>

<div class="container">
    <div class="modal fade" id="modalLindo" role="dialog" aria-labelledby="" data-backdrop="static">
        <div class="modal-dialog" style="max-width:90%;  min-width:70%" role="document">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" class="times">&times;</span></button>

                    <h4 class="modal-title" id="Header">ID: Header</h4>
                </div>
                <div class="modal-body" id="body">
                    ID: Body
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="Fechar" onclick="Clicked(false, false, false);" data-dismiss="modal" style="display:none">Fechar</button>
                    <button type="button" class="btn btn-default" id="Fechar2" onclick="" style="display:none">Fechar</button>
                    <button type="button" class="btn btn-primary" id="Selecionar" onclick="" style="display:none" disabled>Selecionar</button>
                    <button type="button" class="btn btn-primary" id="Salvar" onclick="" style="display:none">Salvar</button>
                    <button type="button" class="btn btn-info" id="BuscarPlanejamentos" onclick="BuscarPlanejamentos();">Buscar Planejamento</button>
                    <button type="button" class="btn btn-info" id="TaticoVinculado" onclick="BuscarPlanejamentos(); Clicked(true, false, true);" style="display:none">Novo Planejamento Tático Vinculado a um Planejamento Estratégico</button>
                    <button type="button" class="btn btn-primary" id="NovaAcao" onclick="Clicked(isTaticoClicked, isNovaAcao); ModalAcao(true, true);" style="">Nova Ação</button>
                    <button type="button" class="btn btn-default" value="" id="new" style="display:none">Adicionar Ação</button>
                    <button type="button" class="btn btn-default" value="" id="Edit" style="display:none" onclick="SalvarAcaoAvulsa($('.Acao'), true)">Editar Ação</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal -->
    <div id="modalChangeEstrategico" class="modal fade" role="dialog" style="z-index:15000">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Alterar planejamento</h4>
                </div>
                <div class="modal-body">
                    <table id="tablePessego" class="table table-striped"></table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade in" id="modalNovo" tabindex="-1" role="dialog" aria-labelledby="">
    <div class="modal-dialog" id="" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true" class="times">×</span></button>
                <h4 class="modal-title" id="novoHeader"></h4>
            </div>
            <div class="modal-body" id="novoBody">

                <div class="col-sm-5">
                    <div class="panel panel-primary">
                        <div class="panel-heading">Formulário de <span id="nomeItemNovo"></span></div>
                        <div class="panel-body">
                            <form>
                                <div class="form-group">
                                    <div style="display:none" id="encadeado">
                                        <label id="labelPredecessora">Predecessor: </label>
                                    </div>
                                    <div class="col-sm-12 borderedNinja" id="divPredecessora">
                                        <label>Predecessor:</label>
                                        <label id="labelPredecessoraValue"></label>
                                        <br />
                                    </div>
                                    <div class="col-sm-12 borderedNinja">
                                        <label>Nome do Item:</label>
                                        <textarea style="min-width: 95%; height:150px;" type="text" class="form-control" id="newItem"></textarea>
                                        <input type="hidden" id="newIdItem" />
                                        <br />
                                    </div>
                                    <div class="col-sm-12 borderedNinja" id="divIsActive">
                                        <label for="newIsActiveItem">Ativo:</label>
                                        <input class="custom-control-input" type="checkbox" checked="checked" name="newIsActiveItem" id="newIsActiveItem" />
                                        <br />
                                    </div>
                                    <div class="col-sm-12 borderedNinja">
                                        <button type="button" class="btn btn-primary" id="btnSalvarNovo" onclick="SalvarNovo();">Salvar</button>
                                        <button type="button" class="btn btn-success hide" id="btnEditarNovo" onclick="SalvarNovo();">Salvar Edição</button>
                                        <button type="button" class="btn btn-default hide" id="btnCancelarNovo">Cancelar</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-sm-7">
                    <table id="tableNovo" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nome</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>        
            <div class="clearfix"></div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
        </div>
    </div>
</div>

<div class="minmaxCon"></div>

<script src="~/Scripts/PluginGRT/datatableGRT.js"></script>

@section Scripts {

    <script type="text/javascript">

        $('.container').each(function (i, o) {
            $(o).removeClass('container').addClass('container-fluid');
        });

    </script>

    <script src="~/Scripts/PANovo/js/underscore-min.js"></script>
    <script src="~/Scripts/lodash.min.js"></script>
    <script src="~/Scripts/PANovo/js/pt-br.js"></script>
    <script src="~/Scripts/select2.min.js"></script>
    <script src="~/Scripts/i18n/pt-BR.js"></script>
    <script src="~/Scripts/home2.js"></script>
    <script src="~/Scripts/DataTablePlanejamento.js"></script>

    <script>
        //Graficos Instancia

        //Cria Arr de dados e instancia HC para Grafico Estoque, panel4
        function graficoEstoque() {

            dadosEstoque = [];

            jQuery.each(dados, function (i, val) {
                dadosEstoque.push(dados[i]);
            });

            //MOCK Acompanhamento
            dadosEstoque.forEach(function (o, c) {
                var tamanho = o.Acao._Acompanhamento.length
                if (tamanho == 0) {
                    o.Acao['Acompanhamento'] = { AddDate: "1900-01-01" };
                } else {
                    o.Acao['Acompanhamento'] = { AddDate: o.Acao._Acompanhamento[tamanho - 1].AddDate };
                }
            })

            let categoriesArr = [];
            var data = new Date();
            data = new Date(data.getFullYear(), data.getMonth(), 1);

            data.setMonth(data.getMonth() - 23);

            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);

            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);

            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);
            categoriesArr.push(new Date(data.getFullYear(), data.getMonth(), 1));
            data.setMonth(data.getMonth() + 1);
            data = new Date(data.getFullYear(), data.getMonth(), 1);

            let arrayAndamento = [];

            let arrayFechadas = [];

            let arrayEstoque = [];

            let Aux = [];

            let apenasAcoesAbertas = [];

            let apenasAcoesFechadas = [];

            for (var i = 0; i < categoriesArr.length; i++) {

                arrayAndamento[i] = $.grep(dadosEstoque, function (o, j) {
                    return new Date(o.Acao.QuandoInicio).getFullYear() == categoriesArr[i].getFullYear() && new Date(o.Acao.QuandoInicio).getMonth() == categoriesArr[i].getMonth() && o.Acao._StatusName.indexOf('Cancelada') < 0;
                }).length;

            }

            for (var i = 0; i < categoriesArr.length; i++) {

                arrayFechadas[i] = $.grep(dadosEstoque, function (o, j) {
                    return new Date(o.Acao.Acompanhamento.AddDate).getFullYear() == categoriesArr[i].getFullYear() && new Date(o.Acao.Acompanhamento.AddDate).getMonth() == categoriesArr[i].getMonth() && o.Acao._StatusName && (o.Acao._StatusName.indexOf('Concluído') >= 0 || o.Acao._StatusName.indexOf('Finalizada')) >= 0;
                }).length;

            }

            arrayEstoque[0] = 0;

            for (var i = 0; i < categoriesArr.length; i++) {
                if (i == 0) {
                    arrayEstoque[0] = arrayAndamento[0] - arrayFechadas[0];
                } else {
                    arrayEstoque[i] = arrayEstoque[i - 1] + (arrayAndamento[i] - arrayFechadas[i]);
                }

            }

            let serieArrFinal = [{
                type: 'column',
                name: 'Abertas',
                data: arrayAndamento,
                color: andamentoColor
            }, {
                type: 'column',
                name: 'Fechada',
                data: arrayFechadas,
                color: concluidoColor
            }, {
                type: 'spline',
                name: 'Estoque',
                data: arrayEstoque,
                color: atrasadaColor,
                marker: {
                    lineWidth: 2,
                    lineColor: atrasadaColor,
                    fillColor: atrasadaColor
                }
            }];


            for (var i = 0; i < categoriesArr.length; i++) {

                retorno = '';

                switch (categoriesArr[i].getMonth()) {
                    case 0:
                        retorno = "Jan";
                        break;
                    case 1:
                        retorno = "Fev";
                        break;
                    case 2:
                        retorno = "Mar";
                        break;
                    case 3:
                        retorno = "Abr";
                        break;
                    case 4:
                        retorno = "Mai";
                        break;
                    case 5:
                        retorno = "Jun";
                        break;
                    case 6:
                        retorno = "Jul";
                        break;
                    case 7:
                        retorno = "Ago";
                        break;
                    case 8:
                        retorno = "Set";
                        break;
                    case 9:
                        retorno = "Out";
                        break;
                    case 10:
                        retorno = "Nov";
                        break;
                    case 11:
                        retorno = "Dez";
                        break;
                }

                categoriesArr[i] = retorno + '-' + categoriesArr[i].getFullYear();

            }


            makeChart('panel4', categoriesArr, serieArrFinal, 'column', '', {
            })

            $('select:not(#valor1Filtro)').select2({
                dropdownAutoWidth: true,
                width: '140px'
            })

            $('select#valor1Filtro').select2({
                dropdownAutoWidth: true,
                width: '250px'
            })

        }

        $(document).ready(function () {
            var zero = 0;

            $("input[name='daterange']").css('width', '140px');
            $("input[name='daterange']").css('height', '25px');

            $('#campo1Filtro').css('width', '200px');
            $('#valor1Filtro').css('width', '200px');

            if (IsAdmin) {
                $('#NovoPlanejamento').prop("disabled", false);
            }

        });

        var selectPredecessor;
        var tableModalNovo;
        /**/
        var visaoOperacional = @Html.Raw(Json.Encode(Conn.visaoOperacional));
        /**/
        /**/
        var nameCausaEspecifica = @Html.Raw(Json.Encode(Conn.nameCausaEspecifica));
        /**/
        /**/
        var nameComoPontosImportantes = @Html.Raw(Json.Encode(Conn.nameComoPontosImportantes));
        /**/
        /**/
        var nameContramedidaEspecifica = @Html.Raw(Json.Encode(Conn.nameContramedidaEspecifica));
        /**/
        /**/
        var urlGetPlanejamentoAcaoRange = '@Url.Action("GetPlanejamentoAcaoRange", "api/Pa_Planejamento")';
        var urlGetPlanejamentoRange = '@Url.Action("GetPlanejamentoRange", "api/Pa_Planejamento")';
        /**/
        /**/
        var urlGetUserColvis = '@Url.Action("Get", "api/ApiColvis")';
        /**/
        /**/
        var urlSaveUserColvis = '@Url.Action("Save", "api/ApiColvis")';
        /**/
        var urlGetListPlanejamento = '@Url.Action("GetListPlanejamento", "api/Pa_Planejamento")';

        var IsAdmin = getRole("Admin").length > 0;

        var counter = 0;
        var planejamentoCorrentId = 0;
        var isTaticoClicked = false;
        var isNovaAcao = false;
        var isClickedTaticoVinculado = false;
        var isClickedEstrategico = false;
        var NovaAcaoBuscaFeita = false;
        var tempInput;
        var tempName;
        var IdBotaoClicado;

        /**/
        //var win = window.open('@Url.Action("Relatorios", "Relatorios")', '_blank');
        /**/
        /**/
        var GETGrupoCausa = '@Url.Action("GETGrupoCausa", "Pa_Acao")';
        /**/
        /**/
        var GETContramedidaGenerica = '@Url.Action("GETContramedidaGenerica", "Pa_Acao")';
        /**/
        /**/
        var urlNovaAcao = '@Url.Action("Index", "Pa_Acao")';
        /**/
        /**/
        var urlEditAcao = '@Url.Action("Edit", "Pa_Acao")';
        /**/
        /**/
        var urlEditPlanEstrat = '@Url.Action("Editar", "Pa_Planejamento")';
        /**/
        /**/
        var urlEditPlanOp = '@Url.Action("Editar", "Pa_Planejamento")';
        /**/
        /**/
        var PlanejamentoDetalhes = '@Url.Action("Details", "Pa_Planejamento")';
        /**/
        /**/
        var urlNovoPlanejamento = '@Url.Action("Index", "Pa_Planejamento")';
        /**/
        /**/
        var urlBuscarPlanejamentos = '@Url.Action("Buscar", "Pa_Planejamento")';
        /**/
        /**/
        var urlFiltraPlanejamentos = '@Url.Action("Filtrar", "Pa_Planejamento")';
        /**/
        /**/
        var GETObjetivo = '@Url.Action("GETObjetivo", "Pa_Planejamento")';
        /**/
        /**/
        var GETIndicadoresDiretriz = '@Url.Action("GETIndicadoresDiretriz", "Pa_Planejamento")';
        /**/
        /**/
        var GETIndicadoresProjetoIniciativa = '@Url.Action("GETIndicadoresProjetoIniciativa", "Pa_Planejamento")';
        /**/
        /**/
        var GETCoordenacaoByGerencia = '@Url.Action("GETCoordenacaoByGerencia", "Pa_Planejamento")';
        /**/
        /**/
        var GETObjetivosGerenciais = '@Url.Action("GETObjetivosGerenciais", "Pa_Planejamento")';
        /**/
        /**/
        var urlSalvarPlanejamento = '@Url.Action("Save", "api/Pa_Planejamento")';
        /**/
        /**/
        var urlGetPlanejamentoAcao = '@Url.Action("GetPlanejamentoAcao", "api/Pa_Planejamento")';
        /**/
        /**/
        var urlGetPlanejamento = '@Url.Action("GET", "api/Pa_Planejamento")';
        /**/
        /**/
        var urlSalvarAcao = '@Url.Action("Save", "api/Pa_Acao")';
        /**/
        /**/
        var urlSalvarNovoItem = '@Url.Action("Save", "api/Generics")';
        /**/
        /**/
        var urlEditarNovoItem = '@Url.Action("Update", "api/Generics")';
        /**/
        /**/
        //var urlDeletarNovoItem = '@Url.Action("Delete", "api/Generics")';
        /**/
        /**/
        var urlGetAutoComplete = '@Url.Action("Get", "api/Generics")';
        /**/
        /**/
        var urlSalvarAcompanhamento = '@Url.Action("SaveAcompanhamento", "api/Pa_Acao")'
        /**/
        /**/
        var urlAcompanhamentoDetalhes = '@Url.Action("Acompanhamento", "Pa_Acao")'
        /**/
        /**/
        var AcaoDetalhes = '@Url.Action("Details", "Pa_Acao")'
        /**/

        function DisabilitaBotaoGerenciar() {
            $('#modalLindo').find('select[disabled]').each(function (i, o) {
                $(o).parents('tr').find('.novoItem').attr('disabled', true);
            });
        }

        function Clicked(isClickedTatico, isClickedAcao, isTaticoVinculado, clearId) {
            isTaticoClicked = isClickedTatico;
            isNovaAcao = isClickedAcao;
            isClickedTaticoVinculado = isTaticoVinculado;
        }

        /*Planejamento*/
        function ModalOpcoesEstrategico(title, IdParaNovaAcao, callback) {//Pos Modal1
            //console.log(ModalOpcoesEstrategico);

            IdBotaoClicado = IdParaNovaAcao;

            $('#modalLindo').modal();
            $('#modalLindo').find('.modal-body').empty();

            if (title != undefined) {
                $('#Header').html(title);
            } else {
                $('#Header').html("Planejamento");
            }

            if (callback != undefined) {
                callback();
                return false;
            }

            /*Botões*/
            $('#modalLindo').find('.modal-footer button').hide();
            $('#Fechar').show();

            if (isTaticoClicked) {
                $('#TaticoVinculado').show();
            }
            else if (isNovaAcao) {
                $('#NovaAcao').show();
                if (planejamentoCorrentId > 0) {
                    $('#BuscarPlanejamentos').show();
                }

                if (IdParaNovaAcao != undefined || planejamentoCorrentId > 0) { // Mostra Detalhes + BTN nova acao
                    $.get(PlanejamentoDetalhes, { id: planejamentoCorrentId }, function (r) {

                        var modal = $('#modalLindo').find('.modal-body').html();

                        $('#modalLindo').find('.modal-body').empty();
                        $('#modalLindo').append(r);
                        $('#NovaAcao').show();
                    });
                } else {
                    $('#modalLindo').find('.modal-body').empty();
                }
            }
            else {
                $('#NovoPlanejamento').show();

            }

            $('#Fechar').show();
            $('#Salvar').show();
            /*Fim Botões*/

        }

        function NovoPlanejamento() {//Pos Modal2
            //console.log(NovoPlanejamento);
            var title = $('#Header').html();
            var title2 = " > Novo"

            $('#Header').html(title + title2);

            $.get(urlNovoPlanejamento, function (r) {
                $('#modalLindo').find('.modal-body').empty().append(r);
                if (isTaticoClicked) {
                    $('.novoItem ').hide();

                    if (isClickedTaticoVinculado) {
                        //$('#Planejamento > table > tbody > tr:nth-child(1)').attr('disabled', true);
                        //$('#Planejamento > table > tbody > tr:nth-child(4)').attr('disabled', true);
                        //$('#Planejamento > table > tbody > tr:nth-child(5)').attr('disabled', true);
                        //$('#Planejamento > table > tbody > tr:nth-child(6)').attr('disabled', true);
                        //$('#Planejamento > table > tbody > tr:nth-child(7)').attr('disabled', true);
                        //$('#Planejamento > table > tbody > tr:nth-child(8)').attr('disabled', true);
                    } else {
                        //$('#Planejamento > table > tbody > tr:nth-child(1)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(4)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(5)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(6)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(7)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(8)').hide();
                    }

                    DdlChangeTatico();

                } else {
                    $('.novoItem ').show();
                    $('#Planejamento > table > tbody > tr:nth-child(2)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(3)').hide();
                    //$('#Planejamento > table > tbody > tr:nth-child(10)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(11)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(12)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(13)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(14)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(15)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(16)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(17)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(18)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(19)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(20)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(21)').hide();

                    DdlChangeEstrategico();
                }

                InitDatePiker();
                MoneyMask();

                MoneyMask('R$ ');

                $('.money').each(function () {
                    $(this).maskMoney('mask', $(this).val());
                });

            });

            /*Botões*/
            $('#modalLindo').find('.modal-footer button').hide()
            $('#Fechar').show();
            $('#Salvar').show();

            $('#Salvar').off('click').on('click', SalvarPlanejamento);

            //$('#Fechar2').off('click').on('click', function () { ModalOpcoesEstrategico(title) });
            /*Fim Botões*/
        }

        //Verificando
        function SalvarPlanejamento(form) {

            if (!isClickedTaticoVinculado) {
                isClickedEstrategico = true;
            }

            var sendObj = $('#Planejamento').serializeObject();

            let isValid = $('#Planejamento').find('.error').length == 0
            if (!isValid) {
                alert("Campos obrigatórios");
                return
            }

            if (isClickedTaticoVinculado)
                sendObj['IsTAtico'] = true;

            if (sendObj != undefined) {
                $.post(urlSalvarPlanejamento, sendObj, function (r) {

                    planejamentoCorrentId = parseInt(r.Id);
                    openMessageModal('Registro salvo com sucesso!', '');
                    $('#modalLindo').modal('hide');
                    $('#btnTop').click();

                }).fail(function (e, h, x) {
                    openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);
                });
            }

        }/*planejamentoCorrentId*/

        //Verificando
        function SalvarPlanejamentoEditado(form) {

            var sendObj = {};

            if (isClickedTaticoVinculado)
                sendObj['IsTAtico'] = true;

            sendObj = $(form).serializeObject();


            let isValid = ($(form).find('.error:visible').length == 0)
            if (!isValid) {
                alert("Campos obrigatórios")
                return
            }

            $.post(urlSalvarPlanejamento, sendObj, function (r) {

                planejamentoCorrentId = parseInt(r.Id);
                openMessageModal('Registro salvo com sucesso!', '');
                $('#modalLindo').modal('hide');
                $('#btnTop').click();


            }).fail(function (e, h, x) {

                openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);
            });

        }

        //Verificando
        function EditarPlanejamento(model) {
            //console.log(EditarPlanejamento);
            var title = $('#Header').html();
            var title2 = " > Novo"
            if (isTaticoClicked) {
                $('#Header').html("Planejamento Tático");
            } else {
                $('#Header').html(title + title2);
            }

            $.get(urlNovoPlanejamento, function (r) {
                $('#modalLindo').find('.modal-body').empty().append(r);
                if (isTaticoClicked) {
                    $('.novoItem ').hide();
                    if (isClickedTaticoVinculado) {

                        //Novo tatico
                        $('#Planejamento > #IsTatico').val(true);
                        $('#Planejamento > table > tbody > tr:nth-child(1)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(4)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(5)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(6)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(7)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(8)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(9)').find('input, select').attr('disabled', true);
                        $('#Planejamento > table > tbody > tr:nth-child(10)').find('input, select').attr('disabled', true);
                        if (model != undefined) {

                            //$('#Id').val(model.Id);
                            $('#Estrategico_Id').val(model.Id);
                            if (model.Diretoria_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(1)').find('input, select').val(model.Diretoria_Id);
                            if (model.Missao_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(4)').find('input, select').val(model.Missao_Id);
                            if (model.Visao_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(5)').find('input, select').val(model.Visao_Id);
                            if (model.TemaAssunto_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(6)').find('input, select').val(model.TemaAssunto_Id);
                            if (model.Dimensao_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(7)').find('input, select').val(model.Dimensao_Id);
                            if (model.Objetivo_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(8)').find('input, select').val(model.Objetivo_Id);
                            if (model.IndicadoresDiretriz_Id > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(9)').find('input, select').val(model.IndicadoresDiretriz_Id);
                            if (model.Responsavel_Diretriz > 0)
                                $('#Planejamento > table > tbody > tr:nth-child(10)').find('input, select').val(model.Responsavel_Diretriz);

                        }

                        $('.novoTatico').show();
                        DdlChangeTatico(model);
                    } else {

                        $('#Planejamento > table > tbody > tr:nth-child(1)').hide();
                        $('#Planejamento > table > tbody > tr:nth-child(6)').hide();
                        $('#Planejamento > table > tbody > tr:nth-child(7)').hide();
                        $('#Planejamento > table > tbody > tr:nth-child(8)').hide();
                        $('#Planejamento > table > tbody > tr:nth-child(9)').hide();
                        //$('#Planejamento > table > tbody > tr:nth-child(10)').hide();
                        $('#Planejamento > table > tbody > tr:nth-child(11)').hide();
                        DdlChangeEstrategico();
                    }
                } else {
                    $('.novoItem ').show();
                    $('#Planejamento > table > tbody > tr:nth-child(2)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(3)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(4)').hide();
                    //$('#Planejamento > table > tbody > tr:nth-child(10)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(12)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(13)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(14)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(15)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(16)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(17)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(18)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(19)').hide();
                    $('#Planejamento > table > tbody > tr:nth-child(20)').hide();
                }

                InitDatePiker();
                MoneyMask();

                MoneyMask('R$ ');

                $('.money').each(function () {
                    $(this).maskMoney('mask', $(this).val());
                });

            });
            /*Botões*/

            $('#modalLindo').find('.modal-footer button').hide()
            $('#Fechar').show();
            $('#Salvar').show();
            $('#Salvar').off('click').on('click', SalvarPlanejamento);
            //$('#Fechar2').off('click').on('click', function () { ModalOpcoesEstrategico(title) });
            /*Fim Botões*/
        }

        function DdlChangeEstrategico(v1, v2, v3, edit) {

            var change1 = v1 != undefined ? v1 : "";
            var change2 = v2 != undefined ? v2 : "";

            change1 = change1 == 0 ? "" : change1;
            change2 = change2 == 0 ? "" : change2;

            v3 = v3 == 0 ? "" : v3;

            let Dimensao_Id = $('#Dimensao_Id')
            let Objetivo_Id = $('#Objetivo_Id')

            var rdy = true;
            Dimensao_Id.off('change').on('change', function () {
                var valor = $(this).val();
                var form = $(this).parents('form');
                rdy = false;
                if (valor) {
                    $.get(GETObjetivo, { id: valor }, function (r) {
                        $('#Objetivo_Id').empty().html(r).attr('disabled', false);
                        $('#Objetivo_Id').parent().parent().find('.novoItem').attr('disabled', false);
                        rdy = true;
                    })
                }
                else {
                    $('#Objetivo_Id').val("").change().attr('disabled', true);
                    $('#Objetivo_Id').parent().parent().find('.novoItem').attr('disabled', true);
                    $('#IndicadoresDiretriz_Id').val("").change().attr('disabled', true);
                    $('#IndicadoresDiretriz_Id').parent().parent().find('.novoItem').attr('disabled', true);
                }
            });

            Objetivo_Id.off('change').on('change', function () {
                var valor = $(this).val();
                var form = $(this).parents('form');

                if (valor) {
                    $.get(GETIndicadoresDiretriz, { id: valor }, function (r) {
                        $('#IndicadoresDiretriz_Id').empty().html(r).attr('disabled', false);
                        $('#IndicadoresDiretriz_Id').parent().parent().find('.novoItem').attr('disabled', false);
                    });
                }
                else {
                    $('#IndicadoresDiretriz_Id').val("").change().attr('disabled', true);
                    $('#IndicadoresDiretriz_Id').parent().parent().find('.novoItem').attr('disabled', true);
                }
            });

            //if(edit == undefined){
            $('#Dimensao_Id').val(change1).change();
            //$.LoadingOverlay('show')
            if (v2 != undefined) {
                setTimeout(function () { $('#Objetivo_Id').val(v2).change(); }, 1500)
            } else {
                //$('#Objetivo_Id').val(change2).change();
                setTimeout(function () { $('#Objetivo_Id').val(change2).change(); }, 2000)
            }

            if (v3 != undefined) {
                setTimeout(function () { $('#IndicadoresDiretriz_Id').val(v3).change(); }, 3000)
            }
            //}
        }

        function DdlChangeTatico(model) {
            changeChainJsWithHTMLResponseGET('#formEditTatico #Gerencia_Id', GETCoordenacaoByGerencia, '#formEditTatico #Coordenacao_Id', function () {

            })
            changeChainJsWithHTMLResponseGET('#Planejamento #Gerencia_Id', GETCoordenacaoByGerencia, '#Planejamento #Coordenacao_Id', function () {
            })

            $('#Iniciativa_Id').off('change').on('change', function () {
                var Iniciativa_Id = $('#Iniciativa_Id').val() > 0 ? $('#Iniciativa_Id').val() : 0;
                manageButton(Iniciativa_Id, 'IndicadoresDeProjeto_Id', 'Selecione uma predecessor em Projeto / Iniciativa para Inserir / Gerenciar os Indicadores do Projeto / Iniciativa', 'Gerenciar Indicadores do Projeto / Iniciativa');

                $.get(GETIndicadoresProjetoIniciativa, { id: Iniciativa_Id }, function (r) {
                    $('#IndicadoresDeProjeto_Id').parent().html('').append(r);
                    $('#IndicadoresDeProjeto_Id').off('change').on('change', function () {

                        var Objetivo_Id = $('#IndicadoresDeProjeto_Id').val() > 0 ? $('#IndicadoresDeProjeto_Id').val() : 0;
                        manageButton(Objetivo_Id, 'ObjetivoGerencial_Id', 'Selecione uma predecessor em Indicadores do Projeto / Iniciativa para Inserir / Gerenciar os Indicadores do Objetivo Gerencial', 'Gerenciar Objetivo Gerencial');

                        $.get(GETObjetivosGerenciais, { id: Objetivo_Id }, function (r) {

                            $('#ObjetivoGerencial_Id').parent().html('').append(r);

                            //$('#ObjetivoGerencial_Id').addClass(' required tatico ');
                            $('#ObjetivoGerencial_Id').addClass('tatico');

                            try {
                                $('#modalLindo span.select2').prev('select').select2('destroy');
                            } catch (e) {
                            }
                            finally {
                                $('#modalLindo select').select2();
                            }

                        });
                    });

                    $('#IndicadoresDeProjeto_Id').change();

                });
            });
            $('#Iniciativa_Id').change();


        }

        function changeChainJsWithHTMLResponseGET(idMaster, urlGETChildren, idChildren, masterCB, childrenSelected) {
            let masterEl = $(idMaster)
            let masterElVal = $(idMaster).val()
            manageButtonDisabledWhenHaveParentSelect(masterElVal, idChildren, 'Selecione um predecessor acima', '');
            masterEl.off('change').on('change', function () {
                let seletedId = masterEl.val() > 0 ? masterEl.val() : 0;
                manageButtonDisabledWhenHaveParentSelect(seletedId, idChildren, 'Selecione um predecessor acima', '');
                $.get(urlGETChildren, { id: seletedId }, function (response) {
                    let childrenEl = $(idChildren)
                    childrenEl.parent().html('').append(response);
                    childrenEl.remove();
                    $(idChildren).select2();

                    if (masterCB)
                        masterCB()
                })
            })
        }

        function manageButtonDisabledWhenHaveParentSelect(parentSelectedValue, elementChild, messageForDisabled, messageForEnabled) {
            let elem = $(elementChild)
            if (elem.length > 0)
                if (parentSelectedValue == 0) {
                    elem.parents('tr').find('.novoItem').attr('disabled', true)
                    elem.parents('tr').find('.novoItem').attr('title', messageForDisabled)
                }
                else {
                    elem.parents('tr').find('.novoItem').attr('disabled', false)
                    elem.parents('tr').find('.novoItem').attr('title', messageForEnabled)
                }
        }

        function manageButton(id, idChildren, messageDisabled, messageEnabled) {
            if (id == 0) {
                $('#' + idChildren).parents('tr').find('.novoItem').attr('disabled', true)
                $('#' + idChildren).parents('tr').find('.novoItem').attr('title', messageDisabled)
            }
            else {
                $('#' + idChildren).parents('tr').find('.novoItem').attr('disabled', false)
                $('#' + idChildren).parents('tr').find('.novoItem').attr('title', messageEnabled)
            }
        }

        /*Fim Planejamento*/

        /*Acao*/
        var addButton = (function () {
            var counter = 0;

            return function () {
                var objectContainer = $('#obj:hidden');
                var header = objectContainer.clone();
                counter += 1;
                var collapseId = "collapsible_obj_" + counter;

                header.find(".collapse").attr("id", collapseId);
                header.find("button[data-toggle='collapse']").attr("data-target", "#" + collapseId);
                header.find("button[data-toggle='collapse']").html("Nova Ação")

                header.appendTo('#final');
                header.show();

                setTimeout(function () {
                    header.find("select.select2-hidden-accessible").next('.select2').remove();
                    header.find("select.select2-hidden-accessible").removeClass('select2-hidden-accessible');
                    header.find("select:visible").select2();
                    $('.UnidadeMedida').change();

                    $('[name="TipoIndicador"]').each(function () {
                        $(this).select2();
                    });

                }, 1);

                myfunction();

                //MoneyMask('R$ ');

                //$('.money').each(function () {
                //    $(this).maskMoney('mask', $(this).val());
                //});

                InitDatePiker();
            };

        })();

        $('#new').click(addButton);

        $('#modalLindo').on('change', '.UnidadeMedida', function (e) {

            let unidadeMedida = $(this).val();
            let valor = $(this).parent().parent().parent().find(".QuantoCusta").val();
            let inputQuantoCusta = $(this).parent().parent().parent().find(".QuantoCusta");

            if (unidadeMedida == 1) {

                $(inputQuantoCusta).get(0).type = 'text';

                let config = { prefix: 'R$ ', allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }

                $(inputQuantoCusta).maskMoney(config);
                $(inputQuantoCusta).maskMoney('mask');

            } else {

                $(inputQuantoCusta).maskMoney('destroy');
                //$(inputQuantoCusta).get(0).type = 'number';

                if (valor != "" && valor != NaN)
                    $(inputQuantoCusta).val(parseFloat(valor.replace("R$ ", "")));
                else
                    $(inputQuantoCusta).val(valor);

                $(inputQuantoCusta).on("keypress", function (event) {

                    if (unidadeMedida == 2 || unidadeMedida == 3) {

                        var $this = $(this);

                        if (($this.val().indexOf(',') != -1 || $this.val().indexOf('.') != -1) &&
                            ((event.which < 48 || event.which > 57) &&
                                (event.which != 0 && event.which != 8))) {
                            event.preventDefault();
                        }
                    }
                });
            }
        });

        $('#modalLindo').on('change', '.UnidadeDeMedidaTatico', function (e) {

            let unidadeMedida = $(this).val();
            let valorDe = $(this).parent().parent().parent().find(".ValorDe").val();
            let valorPara = $(this).parent().parent().parent().find(".ValorPara").val();
            let inputValorDe = $(this).parent().parent().parent().find(".ValorDe");
            let inputValorPara = $(this).parent().parent().parent().find(".ValorPara");

            if (unidadeMedida == 1) {

                //$(inputValorDe).get(0).type = 'text';
                //$(inputValorPara).get(0).type = 'text';

                let config = { prefix: 'R$ ', allowNegative: true, thousands: '.', decimal: ',', affixesStay: true, allowZero: true }

                $(inputValorDe).maskMoney(config);
                $(inputValorDe).maskMoney('mask');
                $(inputValorPara).maskMoney(config);
                $(inputValorPara).maskMoney('mask');

                $(inputValorDe).prop("disabled", false);
                $(inputValorPara).prop("disabled", false);

            } else if (unidadeMedida == "" || unidadeMedida == null || unidadeMedida == undefined || unidadeMedida == NaN) {

                $(inputValorDe).maskMoney('destroy');
                $(inputValorPara).maskMoney('destroy');


                $(inputValorDe).val("").prop("disabled", true);
                $(inputValorPara).val("").prop("disabled", true);
            }
            else
            {

                $(inputValorDe).maskMoney('destroy');
                //$(inputValorDe).get(0).type = 'number';

                if (valorDe != "" && valorDe != NaN)
                    $(inputValorDe).val(parseFloat(valorDe.replace("R$ ", "").replace(",", ".")));
                else
                    $(inputValorDe).val(valorDe);


                $(inputValorPara).maskMoney('destroy');
                //$(inputValorPara).get(0).type = 'number';
                if (valorPara != "" && valorPara != NaN)
                    $(inputValorPara).val(parseFloat(valorPara.replace("R$ ", "").replace(",", ".")));
                else
                    $(inputValorPara).val(valorPara);

                $(inputValorDe).prop("disabled", false);
                $(inputValorPara).prop("disabled", false);

                $(inputValorDe).on("keypress", function (event) {

                    if (unidadeMedida == 2 || unidadeMedida == 3) {

                        var $this = $(this);

                        if (event.which == 46 || event.which == 44) {//Caso for ponto ou virgula
                            if ($this.val().indexOf(',') != -1 || $this.val().indexOf('.') != -1) {//se já existir um ponto ou uma virgula
                                event.preventDefault();
                            }
                        } else {
                            if ((event.which < 48 || event.which > 57) && (event.which != 0 && event.which != 8)) {//se não for numero
                                    event.preventDefault();
                            }
                        }
                    }
                });

                $(inputValorPara).on("keypress", function (event) {

                    if (unidadeMedida == 2 || unidadeMedida == 3) {

                        var $this = $(this);

                        if (event.which == 46 || event.which == 44) {
                            if ($this.val().indexOf(',') != -1 || $this.val().indexOf('.') != -1) {
                                event.preventDefault();
                            }
                        } else {
                            if ((event.which < 48 || event.which > 57) && (event.which != 0 && event.which != 8)) {
                                event.preventDefault();
                            }
                        }
                    }
                });
            }
        });

        //Verificando
        function ModalAcao(isOpenModal, isFukingNewClicked, isTableClick) {
            if (!$('#body > table').length) {
                ModalOpcoesEstrategico('Planejamento Operacional', planejamentoCorrentId, function () {
                    if (isTableClick) {
                        $.get(PlanejamentoDetalhes, { id: planejamentoCorrentId }, function (r) {
                            $('#modalLindo').find('.modal-body').empty().append(r);
                        });
                    }
                });
            }

            if (isFukingNewClicked) {

                if (isOpenModal)
                    $('#modalLindo').modal();

                $('#Header').html("Nova Ação");

                $.get(urlNovaAcao, function (r) {

                    $('#modalLindo').find('.modal-body').append('<hr>');
                    $('#modalLindo').find('.modal-body').append(r);
                    $('#GrupoCausa_Id').empty().attr('disabled', true);
                    $('#ContramedidaGenerica_Id').empty().attr('disabled', true);

                    myfunction();
                    MoneyMask('R$ ');

                    $('.money').each(function () {
                        $(this).maskMoney('mask', $(this).val());
                    });

                    $('#new').click();
                    if (isFukingNewClicked) {
                        $('#new').show();
                    } else {
                        $('#new').hide();
                    }

                });

                /*Botões*/
                $('#modalLindo').find('.modal-footer button').hide()
                $('#Fechar').show();
                $('#Salvar').show();
                $('#Salvar').off('click').on('click', SalvarAcao);
                /*Fim Botões*/
            }
        }

        //Verificando
        function EditarAcao(html, data) {
            //console.log(EditarAcao);
            var acao = data.Acao;

            $('#modalLindo').modal();
            $('#Header').html("Editar Ação");
            $('#modalLindo').find('.modal-body').empty().append(html);
            $('#modalLindo').find('.modal-footer button').hide();
            myfunction();

            $('#CausaGenerica_Id').val(acao.CausaGenerica_Id).change();
            $('[name="_QuandoInicio"]').val(acao._QuandoInicio.split(" ")[0]);
            $('[name="_QuandoFim"]').val(acao._QuandoFim.split(" ")[0]);
            $('#Status').val(acao.Status);
            MoneyMask();
            $('#_QuantoCusta').val(acao.QuantoCusta);
            $('#_QuantoCusta').trigger('mask.maskMoney');
            $('#_QuantoCusta').trigger('blur');

            InitDatePiker();

            MoneyMask('R$ ');

            $('.money').each(function () {
                $(this).maskMoney('mask', $(this).val());
            });

        }

        //Verificando
        function myfunction() {
            $('[id=tipoIndicador]').off('change').on('change', function () {

                var valor = $(this).val();
                var form = $(this).parents('form');

                form.find('.IndicadorOutros').hide();
                form.find('.IndicadorSgq').hide();

                if (valor == 1) {
                    form.find('.IndicadorOutros').show();
                    form.find('.ProbDesv').hide();
                    form.find('.ProbDesv').val("");
                    form.find('.IndicadorOutros select').select2();
                } else if (valor == 2) {
                    form.find('.IndicadorSgq').show();
                    form.find('.ProbDesv').show();
                    form.find('.IndicadorSgq select').select2();
                }
            });

            $('[id=CausaGenerica_Id]').off('change').on('change', function () {
                var valor = $(this).val();
                var form = $(this).parents('form');
                if (valor) {
                    $.get(GETGrupoCausa, { id: valor }, function (r) {
                        form.find('#GrupoCausa').empty().html(r);
                        $('.showAsEstrategy select').select2();
                    });
                    $.get(GETContramedidaGenerica, { id: valor }, function (rr) {
                        form.find('#ContramedidaGenerica').empty().html(rr);
                        $('.showAsEstrategy select').select2();
                    });
                }
                else {
                    form.find('#GrupoCausa_Id').empty().attr('disabled', true);
                    form.find('#ContramedidaGenerica_Id').empty().attr('disabled', true);
                    $('.showAsEstrategy select').select2();
                }
            });
        } /*Causa Medida Etc...*/

        //Verificando
        function SalvarAcao() {
            var listaAcoes = [];
            $('.Acao').not(':first').each(function (c, o) {
                listaAcoes.push(SalvarAcaoAvulsa(o));
            });

            let isValid = $('.Acao').not(':first').find('.error').length == 0

            if (ValidaAcao(listaAcoes) && isValid) {

                $.post(urlSalvarAcao, { "": listaAcoes }, function (r) {

                    if (listaAcoes[0].isValid == '0') { return }

                    $.post(urlGetPlanejamentoAcao, {}, function (r) {

                        jaLiberouCallback = true;
                        $('#modalLindo').modal('hide');
                        openMessageModal('Registro salvo com sucesso!', '');
                        $('#btnTop').click();

                    }).fail(function (e, h, x) {

                        openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);

                    }).always(function () {

                    });
                })
                    .fail(function (e, h, x) {

                        openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);

                    });
            } else
                alert("Campos obrigatórios");

        }

        function ValidaAcao(listaAcoes) {

            let dataIsValid = true;

            $.each(listaAcoes, function (i, o) {

                let parts = o._QuandoFim.split('/');

                let DataInicio = new Date(parts[2], parts[1], parts[0]);

                parts = o._QuandoInicio.split('/');

                let DataFim = new Date(parts[2], parts[1], parts[0]);

                if (DataInicio < DataFim) {
                    alert("A Data de Início deve ser menor que a Data Fim!");
                    dataIsValid = false;
                    return;
                }
            });

            if (listaAcoes[0] != undefined && dataIsValid) {
                return true;
            } else {
                return false;
            }
        }

        function SalvarAcaoEditada() {
            var listaAcoes = [];

            $('#Status').prop("disabled", false);

            $('.Acao').each(function (c, o) {

                listaAcoes.push(SalvarAcaoAvulsa(o, true));

            });

            let isValid = $('.Acao').find('.error').length == 0
            if (!isValid) {
                alert("Campos obrigatórios")
                return;
            }

            if (!ValidaAcao(listaAcoes)) {
                return;
            }

            $.post(urlSalvarAcao, { "": listaAcoes }, function (r) {
                $.post(urlGetPlanejamentoAcao, {}, function (r) {

                    jaLiberouCallback = true;
                    $('#modalLindo').modal('hide');
                    $('.modal-backdrop').remove();
                    openMessageModal('Registro salvo com sucesso!', '');

                    $('#btnTop').click();

                }).fail(function (e, h, x) {

                    openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);

                }).always(function () {

                });
            })
                .fail(function (e, h, x) {

                    openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);

                });

        }

        var jaLiberouCallback = false;
        //Verificando
        function SalvarAcaoAvulsa(o, isEdit) {

            var sendObj = $(o).serializeObject();

            if (isEdit == undefined && sendObj != undefined) {
                sendObj['Panejamento_Id'] = planejamentoCorrentId;
            }

            return sendObj;

        }

        //Verificando
        function RemoveAcao(btn) {
            $(btn).parents('#obj').remove();
        }
        /*Fim Acao*/

        //Verificando
        function Adicionar(btn) {
            var $tr = $(btn).closest('.tr_clone');
            var $clone;

            $clone = $tr.clone();
            $clone.find(':text').val('');

            $tr.find('#remove').show();
            $tr.find('#adicionar').hide();
            $tr.after($clone);

        }

        //Verificando
        function Remover(btn) {
            $(btn).parents('tr').remove();
        }

        /*Novo item*/
        function Novo(btn, encadeado) {

            selectPredecessor = encadeado;

            //Remove select caso exista
            $('#encadeado').find('select').remove();

            if (encadeado == undefined)
                $('#encadeado').hide()

            tempInput = $(btn).parents('tr').find('input , select');
            tempName = $(btn).parents('tr').find('input , select').attr('name');

            var valorSelectSelecionado = $(btn).parents('tr').find('input , select option:selected').html();
            var tempIdNovo = $(btn).parents('tr').find('input , select option:selected').val();

            SetaValoresModal(tempIdNovo, valorSelectSelecionado, true);

            var label = $(btn).parents('tr').find('label').html();
            $('#modalNovo > div > div.modal-footer').hide();
            $('#modalNovo').modal();
            $('#novoHeader').html("Gerenciar: " + label);
            $('#nomeItemNovo').html(label);

            if (encadeado != undefined) {
                $('#labelPredecessora').children().remove()
                $('#labelPredecessora').append($('#' + encadeado).clone().removeClass('select2-hidden-accessible'));
                $('#labelPredecessora').find('select').val($('#' + encadeado + ' option:selected').val()).change();
            }

        }

        function SalvarNovo() {

            var params = {
                NomeDoItem: $('#newItem').val(),
                ParametroDeBusca: tempName.split('_Id')[0],
                PredecessorId: $('#encadeado').find('select').val(),
                Id: $('#newIdItem').val(),
                IsActive: $('#newIsActiveItem:checked').length == 1,
            }

            $.post(urlSalvarNovoItem, params, function (r) {
                if (r.Resposta != null) {
                    alert(r.Resposta);
                    return;
                }

                var jaExisteoptionNoDropDown = $(tempInput).find('option[value="' + r.Id + '"]').length > 0
                if (jaExisteoptionNoDropDown)
                    if (r.IsActive) {
                        $(tempInput).find("option[value= " + r.Id + "]").html(r.NomeDoItem);
                        $(tempInput).find("option[value= " + r.Id + "]").prop('selected', true);
                        $(tempInput).select2('destroy');
                        $(tempInput).val(r.Id).trigger('change');
                        $(tempInput).select2();

                    } else {
                        $(tempInput).find('option:first').prop('selected', true);
                        $(tempInput).find("option[value= " + r.Id + "]").remove();
                        $(tempInput).trigger('change');
                    }
                else {
                    $(tempInput).find('option:selected').prop('selected', false);
                    $(tempInput).append('<option value=' + r.Id + ' selected> ' + r.NomeDoItem + '</option>');
                    $(tempInput).find("option[value= " + r.Id + "]").prop('selected', true);
                    $(tempInput).trigger('change')
                }
                refreshDataTable();
                $('#btnCancelarNovo').click();
            });

        }

        var refreshDataTable = function () {
            /*Dados*/
            var param1 = $('#newItem').val();
            var param2 = tempName.split('_Id')[0];
            var param3 = 0;
            if ($('#encadeado').find('select').length) {
                param3 = $('#encadeado').find('select').val();
            }
            $('#labelPredecessoraValue').text($('#encadeado').find('select option:selected').text());

            if (param3 != 0) {
                $('#divPredecessora').removeClass('hide');
            } else {
                $('#divPredecessora').addClass('hide');
            }

            /*Ajax*/
            $.post(urlGetAutoComplete, { NomeDoItem: param1, ParametroDeBusca: param2, PredecessorId: param3 }, function (response) {

                $("#tableNovo").html('');

                //Gera a lista
                var list = [];
                $.each(response, function (index, value) {
                    list.push([value.Id, value.Name, value.IsActive])
                });

                tableModalNovo = $('#tableNovo').DataTable({
                    data: list,
                    destroy: true,
                    lengthChange: false,
                    pageLength: 3,
                    "bInfo": false,
                    language: {
                        "sEmptyTable": "Nenhum registro encontrado",
                        "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                        "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sInfoThousands": ".",
                        "sLengthMenu": "_MENU_ resultados por página",
                        "sLoadingRecords": "Carregando...",
                        "sProcessing": "Processando...",
                        "sZeroRecords": "Nenhum registro encontrado",
                        "sSearch": "Pesquisar",
                        "oPaginate": {
                            "sNext": "Próximo",
                            "sPrevious": "Anterior",
                            "sFirst": "Primeiro",
                            "sLast": "Último"
                        },
                        "oAria": {
                            "sSortAscending": ": Ordenar colunas de forma ascendente",
                            "sSortDescending": ": Ordenar colunas de forma descendente"
                        }
                    },
                    columns: [
                        { title: "ID" },
                        { title: "Nome" },
                        {
                            title: "Ativo",
                            "data": null,
                            "render": function (data, type, full, meta) {
                                if (data[2] == true) {
                                    return "ATIVO";
                                }
                                return "INATIVO";
                            }
                        },
                        {
                            "className": 'options',
                            "data": null,
                            "render": function (data, type, full, meta) {
                                return '<span class="btn btn-mini btn-info pull-right" data-id=' + data.Id + ' data-name=' + data.Name + '>Editar</span>';
                            }
                        }
                    ],
                    initComplete: function () { }
                });

                $('#tableNovo tbody').on('click', 'span', function () {

                    SetaValoresModal(
                        tableModalNovo.row($(this).parents('tr')).data()[0],
                        tableModalNovo.row($(this).parents('tr')).data()[1],
                        tableModalNovo.row($(this).parents('tr')).data()[2])
                });
            })
        };

        function SetaValoresModal(id, item, isActive) {

            $('#btnCancelarNovo').click();
            if (!!parseInt(id)) {
                $("#newIdItem").val(id);
                $("#newItem").val(item);
                $("#newIsActiveItem").prop('checked', isActive);
                $('#btnSalvarNovo').addClass('hide');
                $('#btnEditarNovo').removeClass('hide');
                $('#btnCancelarNovo').removeClass('hide');
                $('#divIsActive').removeClass('hide');
            }

        }

        function isPositiveInteger(n) {
            return n == "0" || ((n | 0) > 0 && n % 1 == 0);
        }

        var selecionado;

        function Relatorios() {
            win.focus();
        }

        function TesteRenan(r, tipo, model) {

            var form = $(r); //$('#Planejamento')

            if (tipo == 'Tatico') { //Novo tatico

                form.find('table > tbody > tr:nth-child(1)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(4)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(5)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(6)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(7)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(8)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(9)').find('input, select').attr('disabled', true);
                form.find('table > tbody > tr:nth-child(10)').find('input, select').attr('disabled', true);
                form.attr('id', 'formEditTatico');

                form.find('button').each(function (o, c) {
                    if ($(c).attr('onclick').split(',')[1]) {
                        let before = $(c).attr('onclick').split(',')[1]
                        before = before.slice(2, before.length)
                        //console.log(before)
                        let after = `Novo(this, 'formEditTatico #${before}`
                        $(c).attr('onclick', after)
                    }
                });

                $('#modalLindo').find('.modal-body .content2').append(form);
                if (model.Acao && model.Acao.Id > 0)
                    $('#modalLindo').find('.modal-body .content2').append("<button type='button' class='btn btn-warning pull-right' onclick=\"changePlanejamento('acao',$('#Acao'))\" data-toggle='modal' data-target='#modalChangeEstrategico'>Alterar Vínculo Tático</button>");
                $('#modalLindo').find('.modal-body .content2').append("<button type='button' class='btn btn-primary showAsEstrategy' id='save' onclick=\"isClickedEstrategico=false;isClickedTaticoVinculado=true;SalvarPlanejamentoEditado($('#formEditTatico'))\" >Salvar Tático</button><hr>");

                myfunction();

            } else {
                //if (tipo == 'Estrategico') {
                //$('#Id').val(model.Id);
                form.find('#Estrategico_Id').remove();
                form.find('#IsTatico').val(false).change();

                form.find('table > tbody > tr:nth-child(2)').hide();
                form.find('table > tbody > tr:nth-child(3)').hide();
                //form.find('table > tbody > tr:nth-child(10)').hide();
                form.find('table > tbody > tr:nth-child(11)').hide();
                form.find('table > tbody > tr:nth-child(12)').hide();
                form.find('table > tbody > tr:nth-child(13)').hide();
                form.find('table > tbody > tr:nth-child(14)').hide();
                form.find('table > tbody > tr:nth-child(15)').hide();
                form.find('table > tbody > tr:nth-child(16)').hide();
                form.find('table > tbody > tr:nth-child(17)').hide();
                form.find('table > tbody > tr:nth-child(18)').hide();
                form.find('table > tbody > tr:nth-child(19)').hide();
                form.find('table > tbody > tr:nth-child(20)').hide();
                form.find('table > tbody > tr:nth-child(21)').hide();
                form.find('table > tbody > tr:nth-child(22)').hide();
                form.attr('id', 'formEditEstrategy');

                form.find('button').each(function (o, c) {
                    if ($(c).attr('onclick').split(',')[1]) {
                        let before = $(c).attr('onclick').split(',')[1]
                        before = before.slice(2, before.length)
                        //console.log(before)
                        let after = `Novo(this, 'formEditEstrategy #${before}`
                        $(c).attr('onclick', after)
                    }
                })


                if (IsAdmin) {
                    $('#modalLindo').find('.modal-body .content1').append(form);
                }

                if (model.Tatico_Id > 0)
                    $('#modalLindo').find('.modal-body .content1').append("<button type='button' class='btn btn-warning pull-right' onclick=\"changePlanejamento('tatico',$('#formEditTatico'))\" data-toggle='modal' data-target='#modalChangeEstrategico'>Alterar Vínculo Estratégico</button>");

                if (IsAdmin) {
                    $('#modalLindo').find('.modal-body .content2').append("<button type='button' class='btn btn-primary showAsEstrategy' id='Salvar' onclick=\"isClickedEstrategico=true;isClickedTaticoVinculado=false;SalvarPlanejamentoEditado($('#formEditEstrategy'))\">Salvar Estratégico</button><hr>");
                }

                DdlChangeEstrategico(model.Dimensao_Id, model.Objetivo_Id, model.IndicadoresDiretriz_Id, true);

                //}

                //else {
                //    $('#Planejamento > table > tbody > tr:nth-child(1)').hide();
                //    $('#Planejamento > table > tbody > tr:nth-child(4)').hide();
                //    $('#Planejamento > table > tbody > tr:nth-child(5)').hide();
                //    $('#Planejamento > table > tbody > tr:nth-child(6)').hide();
                //    $('#Planejamento > table > tbody > tr:nth-child(7)').hide();
                //    $('#Planejamento > table > tbody > tr:nth-child(8)').hide();
                //}
            }

            InitDatePiker();
            MoneyMask();

            MoneyMask('R$ ');

            $('.money').each(function () {
                $(this).maskMoney('mask', $(this).val());
            });

            DisabilitaBotaoGerenciar();
        }

        function SalvarAcompanhamento(obj) {

            $('#modalLindo').modal('hide');
            $.post(urlSalvarAcompanhamento, obj, function (r) {

                //Colocar o retorno no modal
                formReset();
                //getAcompanhamento(obj.Acao_Id);
                $('#btnTop').click();
                openMessageModal('Registro salvo com sucesso!', '');

            })
                .fail(function (e, h, x) {

                    openMessageModal("Não foi possível salvar o registro:", e.responseJSON.Message);

                });
        }

        function formReset() {
            $('#acompanhamento #Name').val("");
            $('#acompanhamento #MailTo').val(0);
            $('#acompanhamento #Status_Id').val(0);
        }

        function getAcompanhamento(acaoCorrentId) {

            $('#modalLindo').modal('hide');

            $.get(urlAcompanhamentoDetalhes, { id: acaoCorrentId }, function (r) {
                $('#modalLindo').find('.modal-body').empty().append(r);
                $('#modalLindo').modal();
                $('#Header').html('Acompanhamento do Planejamento Operacional');
                $('.modal .modal-footer button').hide();
                $('#showAcompnhamentoForm').show();

                $("#SaveAcompanhamento").on("click", function (event) {
                    var obj = $("#acompanhamento").serializeObject();
                    if (obj.Name == "" || obj.Acao_Id == undefined || obj.MailTo == undefined)
                        alert("Os campos devem ser preenchidos")
                    else
                        SalvarAcompanhamento(obj);
                });

                $('.edit').off('click').on('click', function (data, a, b) {
                    var data = selecionado

                    $('#modalLindo').find('.modal-body').empty().append('<div class="content1"></div><div class="content2"></div><div class="content3"></div>');

                    if (data.Id > 0) {

                        getPlanOp(data, a, b);

                    } else if (data.Estrategico_Id > 0) {

                        getPlanEstrat(data, a, b);

                    } else if (data.Acao && data.Acao.Id > 0) {

                        getAcao(data, a, b);
                    }

                    $('#modalLindo').find('.modal-footer button').hide();
                    $('#Header').html("Editar");
                    $('#modalLindo').modal();
                    $('#Fechar').show();
                });

                setTimeout(function () {
                    $('#MailTo').select2();
                    $('#Status_Id').select2();
                }, 1000);
            })
        }

        $(document).ajaxSend(function () {
            $.LoadingOverlay("show");
            counter++;
        });

        $(document).ajaxStop(function () {
            $.LoadingOverlay("hide", true);
            counter--;

            //HideForOperacional();
        });

        $(document).ajaxError(function (e, h, x) {
            console.log(e);
            console.log(h);
            console.log(x);
            $.LoadingOverlay("hide");
            counter--;
        });

        $(function () {
            GetDataTable();

            GetDataTablePlanejamento();

            $('#modalNovo').on('hidden.bs.modal', function () {
                if (selectPredecessor != undefined) {
                } else {
                    $('#' + IdBotaoClicado).click();
                }

            })


            $('#modalNovo').on('shown.bs.modal', function (e) {

                $('#btnCancelarNovo').on('click', function () {
                    $("#newIdItem").val('');
                    $("#newItem").val('');
                    $('#btnSalvarNovo').removeClass('hide');
                    $('#btnEditarNovo').addClass('hide');
                    //$('#btnDeletarNovo').addClass('hide');
                    $('#btnCancelarNovo').addClass('hide');
                    $('#divIsActive').addClass('hide');

                });

                refreshDataTable();

            });
        });
        /*Table*/

        function getPlanOp(data, a, b) {

            $.get(urlEditPlanOp, { id: data.Id }, function (r) {

                TesteRenan(r, 'Estrategico', data);
                $('#modalNovo > div > div > div.modal-footer > button').show();

                if (data.Estrategico_Id > 0) {
                    getPlanEstrat(data, a, b);
                }
            });

        }

        function getPlanEstrat(data, a, b) {
            $.get(urlEditPlanEstrat, { id: data.Tatico_Id, isTatico: true }, function (r) {
                TesteRenan(r, 'Tatico', data);
                $('#modalNovo > div > div > div.modal-footer > button').show();

                //DDLs ENCADEADAS da PARTIAL VIEW
                changeChainJsWithHTMLResponseGET('#formEditTatico #Gerencia_Id', GETCoordenacaoByGerencia, '#formEditTatico #Coordenacao_Id', function () { })

                changeIniciativa();

                changeIndicadoresProjetos();

                //HideForOperacional();

                $('.UnidadeDeMedidaTatico').change();

                if (data.Acao && data.Acao.Id > 0) {
                    getAcao(data, a, b);
                }

            });
        }

        function changeIniciativa() {

            $('#formEditTatico').on('change','#Iniciativa_Id', function () {

                var Iniciativa_Id = $('#formEditTatico #Iniciativa_Id').val() > 0 ? $('#formEditTatico #Iniciativa_Id').val() : 0;

                manageButton(Iniciativa_Id, 'formEditTatico #IndicadoresDeProjeto_Id', 'Selecione uma predecessor em Projeto / Iniciativa para Inserir / Gerenciar os Indicadores do Projeto / Iniciativa', 'Gerenciar Indicadores do Projeto / Iniciativa');

                //if (Iniciativa_Id <= 0) {
                //    $('button[title="Gerenciar Indicadores do Projeto / Iniciativa"]').prop("disabled", true);
                //} else {
                //    $('button[title="Gerenciar Indicadores do Projeto / Iniciativa"]').prop("disabled", false);
                //}

                $.get(GETIndicadoresProjetoIniciativa, { id: Iniciativa_Id }, function (r) {

                    $('#formEditTatico #IndicadoresDeProjeto_Id').parent().html('').append(r);

                    //changeIndicadoresProjetos();

                    $('#formEditTatico #IndicadoresDeProjeto_Id').select2();

                    $('#formEditTatico #IndicadoresDeProjeto_Id').change();
                });
            });
        }

        function changeIndicadoresProjetos() {

            $('#formEditTatico').on('change', '#IndicadoresDeProjeto_Id' , function () {

                var Objetivo_Id = $('#formEditTatico #IndicadoresDeProjeto_Id').val() > 0 ? $('#formEditTatico #IndicadoresDeProjeto_Id').val() : 0;

                manageButton(Objetivo_Id, 'formEditTatico #ObjetivoGerencial_Id', 'Selecione uma predecessor em Indicadores do Projeto / Iniciativa para Inserir / Gerenciar os Indicadores do Objetivo Gerencial', 'Gerenciar Objetivo Gerencial');

                //if (Objetivo_Id <= 0) {
                //    $('button[title="Gerenciar Objetivo Gerencial"]').prop("disabled", true);
                //} else {
                //    $('button[title="Gerenciar Objetivo Gerencial"]').prop("disabled", true);
                //}

                $.get(GETObjetivosGerenciais, { id: Objetivo_Id }, function (r) {

                    $('#formEditTatico #ObjetivoGerencial_Id').parent().html('').append(r);

                    //$('#formEditTatico #ObjetivoGerencial_Id').addClass(' required tatico ');
                    $('#formEditTatico #ObjetivoGerencial_Id').addClass('tatico');

                    $('#formEditTatico #ObjetivoGerencial_Id').select2();
                });
            });
        }

        function getAcao(data, a, b) {

            $.get(urlEditAcao, { id: data.Acao.Id }, function (r) {
                var acao = data.Acao;

                $('#Header').html("Editar Ação");
                //$('#modalLindo').find('.modal-body').append(r); //colocar html depois
                $('#modalLindo').find('.modal-footer button').hide();
                $('#modalLindo').find('.modal-body .content3').append(r);

                $('#modalLindo').find('.modal-body .content3').find('#CausaGenerica_Id').val(acao.CausaGenerica_Id).change();
                $('#modalLindo').find('.modal-body .content3').find('[name="_QuandoInicio"]').val(acao._QuandoInicio.split(" ")[0]);
                $('#modalLindo').find('.modal-body .content3').find('[name="_QuandoFim"]').val(acao._QuandoFim.split(" ")[0]);
                $('#modalLindo').find('.modal-body .content3').find('#Status').val(acao.Status).prop('disabled', true);;
                $('#modalLindo').find('.modal-body .content3').find('[name="_QuantoCusta"]').val(acao.QuantoCusta);
                $('#modalLindo').find('.modal-body .content3').find('[name="_QuantoCusta"]').trigger('mask.maskMoney');
                $('#modalLindo').find('.modal-body .content3').find('[name="_QuantoCusta"]').trigger('blur');

                setTimeout(function () {
                    $('#modalLindo').find('.modal-body .content3').find('#tipoIndicador').val(acao.TipoIndicador).change();
                    $('.content3 select').select2();
                    $('.UnidadeMedida').change();

                    InitDatePiker();
                }, 1);

                $(r).attr("id", "formEditAcao");

                MoneyMask();
                myfunction();

                $('#modalLindo').find('.modal-body .content3').append("<button type='button' class='btn btn-primary' id='Salvar' onclick=\"isClickedEstrategico=false;isClickedTaticoVinculado=false;SalvarAcaoEditada();\" >Salvar Operacional</button><hr>");
                $('#obj').show(); //Apagar depois
                
                $('#CausaGenerica_Id').change();
                $('#modalNovo > div > div > div.modal-footer > button').show();

                MoneyMask('R$ ');

                $('.money').each(function () {
                    $(this).maskMoney('mask', $(this).val());
                })

                $("input[name='_QuandoInicio']")[0].value = $("input[name='_QuandoInicio']")[0].defaultValue.substring(0, 10);
                $("input[name='_QuandoFim']")[0].value = $("input[name='_QuandoFim']")[0].defaultValue.substring(0, 10);

                $('#Fechar').show();
            });
        }

        //Visao Geral dos Projetos
        $('#modalVisaoGeralProjetos').on('shown.bs.modal', function () {

            $('#graficoPorDiretriz').empty();
            $('#graficoPorGerencia').empty();

            let Categories = [];
            let Data = [];
            let Chaveamento = [];

            processarChaveamento();

            dadosfilter = dados;

            if (TipoGrafico == "Gerencia") {

                Categories = Object.values(MapeiaValorParaHC(dados, "Gerencia").filter(onlyUnique));

                Data = [];

                Categories.forEach(function (c, o) {

                    let qtdConcluido = $.grep(dados, function (r) {
                        return ((r.Acao.Status == 3 || r.Acao.Status == 4) && r.Gerencia == c);
                    }).length;

                    let listaGerencia = $.grep(dados, function (r) {
                        return r.Gerencia == c;
                    })

                    let qtdDeGerencia = listaGerencia.length;

                    let porcConcluidos = qtdConcluido == 0 ? 0 : (qtdConcluido / qtdDeGerencia) * 100

                    let gerencia = retornaChaveamentoPorGerenciaId(listaGerencia[0].Gerencia_Id)[0];
                    Data.push({ color: gerencia.color, y: porcConcluidos });
                });

                Highcharts.chart('graficoPorGerencia', {

                    title: {
                        text: '% CONCLUÍDA - ÁREA'
                    },
                    chart: {
                        height: 230
                    },
                    credits: {
                        enabled: false
                    },
                    subtitle: {
                        text: ''
                    },
                    yAxis: {
                        title: {
                            text: '% de Conclusão'
                        }
                    },
                    plotOptions: {
                        column: {
                            dataLabels: {
                                enabled: true,
                                format: '{point.y:.0f} %',
                                //distance: -10,
                                style: {
                                    color: 'black',
                                    fontSize: '10px',
                                },
                                //connectorColor: 'silver'
                            },
                            point: {
                                events: {
                                    click: function () {
                                        filterDados("Gerencia", this.category, getTablesModal);
                                        getGraficoPorProjetos("Gerencia", this.category, true);
                                    }
                                }
                            },
                        },
                    },
                    xAxis: {
                        categories: Categories
                    },
                    tooltip: {
                        pointFormat: '{point.y:.0f} %'
                    },
                    series: [{
                        type: 'column',
                        colorByPoint: true,
                        data: Data,
                        showInLegend: false
                    }]

                });

            } else {

                Categories = Object.values(MapeiaValorParaHC(dados, "IndicadoresDiretriz").filter(onlyUnique));

                Data = [];

                Categories.forEach(function (c, o) {

                    let qtdConcluido = $.grep(dados, function (r) {
                        return ((r.Acao.Status == 3 || r.Acao.Status == 4) && r.IndicadoresDiretriz == c);
                    }).length;

                    let listaDiretriz = $.grep(dados, function (r) {
                        return r.IndicadoresDiretriz == c;
                    });
                    
                    let qtdDeDiretriz = listaDiretriz.length;
                    
                    let porcConcluidos = qtdConcluido == 0 ? 0 : (qtdConcluido / qtdDeDiretriz) * 100

                    let gerencia = retornaChaveamentoPorGerenciaId(listaDiretriz[0].Gerencia_Id)[0];
                    Data.push({ color: gerencia.color, y: porcConcluidos });
                });

                Highcharts.chart('graficoPorDiretriz', {

                    title: {
                        text: '% CONCLUÍDA - ÁREA'
                    },
                    chart: {
                        height: 230
                    },
                    credits: {
                        enabled: false
                    },
                    subtitle: {
                        text: ''
                    },
                    yAxis: {
                        title: {
                            text: '% de Conclusão'
                        }
                    },
                    plotOptions: {
                        column: {
                            dataLabels: {
                                enabled: true,
                                format: '{point.y:.0f} %',
                                //distance: -10,
                                style: {
                                    color: 'black',
                                    fontSize: '10px',
                                },
                                //connectorColor: 'silver'
                            },
                            point: {
                                events: {
                                    click: function () {
                                        filterDados("IndicadoresDiretriz", this.category, getTablesModal);
                                        getGraficoPorProjetos("IndicadoresDiretriz", this.category, true);
                                    }
                                }
                            },
                        },
                    },
                    xAxis: {
                        categories: Categories
                    },
                    tooltip: {
                        pointFormat: '{point.y:.0f} %'
                    },
                    series: [{
                        type: 'column',
                        colorByPoint: true,
                        data: Data,
                        showInLegend: false
                    }]

                });

            }

            getGraficoPorProjetos(null, null, false);

            getTablesModal();
        });

        var TipoGrafico = null;

        function vgp(tipoGrafico){
            TipoGrafico = tipoGrafico;
        }

        function getAcoesEspecificas(arrayRetorno) {

            let AcoesEspecificas = [];

            arrayRetorno.forEach(function (i) {
                AcoesEspecificas.push(Object.values(i));
            });

            return AcoesEspecificas;
        }

        function getTableModal(id, dataSet, columnsSet) {

            let table = $('#' + id).DataTable({

                data: dataSet,
                columns: columnsSet,
                destroy: true,
                pageLength: 5,
                lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "Todos"]],
                language: {
                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "_MENU_ resultados por página",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "Pesquisar",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                }

            });

            return table;
        }

        function filterDados(prop, value, calback) {

            dadosfilter = $.grep(dados, function (item) {

                if (item[prop] == value) {

                    return item;

                }

            });

            calback();

        }

        function getTablesModal() {

            // Acão Em Andamento
            let AcoesEspecificas = [];

            var arrayRetorno = $.map(dadosfilter, function (o, c) {

            var valor = o['Acao'].ContramedidaEspecifica;

            if (o['Acao'].Status == 5) {
                return valor;
            } else {
                if (o['Acao'].Id == 0) {
                    return "Não possui Ação Específica";
                }
            }

        });

            Object.values(arrayRetorno.filter(onlyUnique)).forEach(function (i) {
            AcoesEspecificas.push([i]);
        });

            let TituloAcoesEspecificas = [{ title: "Ação Específica" }]

            var tableAndamento = getTableModal("tableAndamento", AcoesEspecificas, TituloAcoesEspecificas);

            //Acoes Atrasadas
            AcoesEspecificas = [];

            arrayRetorno = $.map(dadosfilter, function (o, c) {

            if (o['Acao'].Status == 1) {

                dataFim = new Date(o['Acao'].QuandoFim);
                dataHoje = new Date();

                var timeDiff = Math.abs(dataHoje.getTime() - dataFim.getTime());
                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));


                return { 0: o['Acao'].ContramedidaEspecifica, 1: String(diffDays) + " Dias" };

                return valor;
            } else {
                if (o['Acao'].Id == 0) {
                    valor = { 0: "Não possui Ação Específica", 1: "" };
                }
            }

        });

            AcoesEspecificas = getAcoesEspecificas(arrayRetorno);

            TituloAcoesEspecificas = [{ title: "Ação Específica" }, { title: "Dias de Atraso" }]

            var tableAtrasadas = getTableModal("tableAtrasadas", AcoesEspecificas, TituloAcoesEspecificas);


            //Proximas
            AcoesEspecificas = [];

            arrayRetorno = $.map(dadosfilter, function (o, c) {

            dataInicio = new Date(o['Acao'].QuandoInicio);
            dataHoje = new Date();

            if (dataInicio > dataHoje && o['Acao'].Status != 3 && o['Acao'].Status != 7) {

                var timeDiff = Math.abs(dataHoje.getTime() - dataFim.getTime());
                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));

                var valor = { 0: o['Acao'].ContramedidaEspecifica, 1: dataInicio.toLocaleDateString() };

                return valor;
            } else {
                if (o['Acao'].Id == 0) {
                    return { 0: "Não possui Ação Específica", 1: "" };
                }
            }
        });

            AcoesEspecificas = getAcoesEspecificas(arrayRetorno);

            TituloAcoesEspecificas = [{ title: "Ação Específica" }, { title: "Data de Inicio" }]

            var tableProximas = getTableModal("tableProximas", AcoesEspecificas, TituloAcoesEspecificas);


            //Concluidas
            AcoesEspecificas = [];

            arrayRetorno = $.map(dadosfilter, function (o, c) {

            if (o['Acao'].Status == 3 || o['Acao'].Status == 4) {

                let dataConclusao = new Date(o['Acao'].Acompanhamento.AddDate);

                var valor = { 0: o['Acao'].ContramedidaEspecifica, 1: dataConclusao.toLocaleString() };

                return valor;
            } else {
                if (o['Acao'].Id == 0) {
                    return { 0: "Não possui Ação Específica", 1: "" };
                }
            }

        });

            AcoesEspecificas = getAcoesEspecificas(arrayRetorno);

            TituloAcoesEspecificas = [{ title: "Ação Específica" }, { title: "Data de Conclusão" }]

            var tableConcluidas = getTableModal("tableConcluidas", AcoesEspecificas, TituloAcoesEspecificas);
        }

        function getGraficoPorProjetos(prop, value, isFilter) {

            let Categories = [];

            let dadosInternos = dados;

            if (isFilter) {

            dadosInternos = $.grep(dados, function (r) {

                return r[prop] == value ;

            });
        }

            Categories = Object.values(MapeiaValorParaHC(dadosInternos, "Iniciativa").filter(onlyUnique));

            Data = [];

            processarChaveamento();

            let dados2 = dados;

            if (isFilter) {
                dados2 = $.grep(dados, function (item) {

                    if (item[prop] == value) {

                        return item;

                    }
                });
            }

            Categories.forEach(function (c, o) {

            let qtdConcluido = $.grep(dados2, function (r) {
                return ((r.Acao.Status == 3 || r.Acao.Status == 4) && r.Iniciativa == c);
            }).length;

            let listaGerencia = $.grep(dados2, function (r) {
                return r.Iniciativa == c;
            });

            let qtdDeGerencia = listaGerencia.length;

            let porcConcluidos = qtdConcluido == 0 ? 0 : (qtdConcluido / qtdDeGerencia) * 100

            let gerencia = retornaChaveamentoPorGerenciaId(listaGerencia[0].Gerencia_Id)[0];
            Data.push({ color: gerencia.color, y: porcConcluidos });
        });

            Highcharts.chart('graficoPorProjetos', {

            title: {
                text: '% CONCLUÍDA - DEMANDAS'
            },
            credits: {
                enabled: false
            },
            subtitle: {
                text: ''
            },
            yAxis: {
                title: {
                    text: '% de Conclusão'
                }
            },
            xAxis: {
                categories: Categories,
            },
            plotOptions: {
                column: {
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.0f} %',
                        //distance: -10,
                        style: {
                            color: 'black',
                            fontSize: '10px',
                        },
                        //connectorColor: 'silver'
                    },
                    point: {
                        events: {
                            click: function () {
                                console.log(this.category)

                                filterDados("Iniciativa", this.category, getTablesModal)
                            }
                        }
                    },
                },
            },
            tooltip: {
                pointFormat: '{point.y:.0f} %'
            },
            series: [{
                type: 'column',
                colorByPoint: true,
                data: Data,
                showInLegend: false
            }]
        });

            let PercentualTotal = Math.floor(Data.reduce((soma, obj) => soma + obj.y, 0) / Categories.length);
            $('#percentualConclusao').html(PercentualTotal + " %");

        }

        function changePlanejamento(tipo,form){
            $.post(urlGetListPlanejamento +'/'+tipo,function(r){

                var col = r.columns;
                col.unshift({"render": function ( data, type, row ) {
                    return '<button data-id="' + row.Id +'" class="btn btn-large btn-primary">Selecionar</button>';
                }});
                datatableGRT.Inicializar({
                    idTabela: "tablePessego",
                    listaDeDados: r.datas,
                    colunaDosDados:r.columns,
                    initComplete: function(){
                        $('#tablePessego').off().on('click','button[data-id]',function(){
                            if(confirm("Deseja alterar o vinculo!?")){
                                var idParaMudar = $(this).attr("data-id");
                                var id = $(form).find('#Id').val();
                                //alert("Id: "+id+" Tipo: "+ tipo +" Id="+$(this).attr("data-id"));
                                $.post('@Url.Action("Cereja", "api/Pa_Planejamento")/'+tipo+'/'+id+'/'+idParaMudar,function(r){
                                    //alert("Atualizou o rolê!");
                                    openMessageModal("Vínculo atualizado!");
                                    location.reload();
                                });
                            }
                        });

                        setTimeout(function (e) {
                            var oTable = $('#tablePessego').dataTable();
                            if (oTable.length > 0) {
                                oTable.fnAdjustColumnSizing();
                            }
                        }, 1400);
                    }
                });
            });
        }

        function tableAcaoRedrown() {
            setTimeout(function () {
                table.draw();
            },500);
        }

        function tablePlanejamentoRedrown() {
            setTimeout(function () {
                tablePlanejamento.draw();
            },500);
        }

        // CRIAR TATICO E ACAO A PARTIR DE SELECOES PAIS
        function AbrirModalNovoApartirDeAlgo(tipoQueSeraCriado, NomeDoQueSeraCriado, NomeApartirDeQueSeraCriado){
            $('#ModalNovoApartirDeAlgo').find('h4').text("Criar "+NomeDoQueSeraCriado+" apartir de "+NomeApartirDeQueSeraCriado);
            $.post(urlGetListPlanejamento +'/'+tipoQueSeraCriado,function(r){
                var col = r.columns;
                col.unshift({"render": function ( data, type, row ) {
                    return '<button data-id="' + row.Id +'" data-tipo="'+tipoQueSeraCriado+'" onclick="AbreModalDePlanejamento('+row.Id+')" class="btn btn-large btn-primary">Criar '+NomeDoQueSeraCriado+'</button>';
                }});
                var tableModalNovoApartirDe = datatableGRT.Inicializar({
                    idTabela: "ModalNovoApartirDeAlgo table",
                    listaDeDados: r.datas,
                    colunaDosDados:r.columns,
                    buttons: {buttons: []},
                    initComplete: function(){
                        $('#ModalNovoApartirDeAlgo table').off().on('click','button[data-id]',function(){
                            if($(this).attr('data-tipo') == 'tatico'){
                                AbreModalDePlanejamento($(this).attr('data-id'));
                            }else if($(this).attr('data-tipo') == 'acao'){
                                AbreModalDeAcao($(this).attr('data-id'));
                            }
                            $('#ModalNovoApartirDeAlgo').modal('hide');
                        });

                        $('#ModalNovoApartirDeAlgo').modal('show');
                        
                        setTimeout(function (e) {
                            tableModalNovoApartirDe.draw();
                        }, 500);
                    }
                });
            });
        }

        function AbreModalDePlanejamento(id){
            Clicked(true, false, true);
            $.get(urlGetPlanejamento, { id: id }, function (r) {
                ModalOpcoesEstrategico("Novo Planejamento Tático Vinculado", 0, function () { EditarPlanejamento(r) });
            });
        }
        
        function AbreModalDeAcao(id){
            Clicked(true, true);
            
            $('#modalLindo').modal();
            $('#modalLindo').find('.modal-body').empty();
            $('#Header').html("Planejamento Operacional");

            $.get(PlanejamentoDetalhes, { id: id }, function (r) {
                $('#NovaAcao').show();
                $('#NovaAcao').click();
                $('#modalLindo').find('.modal-body').empty().prepend(r);
            });
        }

        var Chaveamento = [];

        function processarChaveamento() {
            if (Chaveamento.length > 0){
                return;
            }
            $.each(dados, function (index, obj) {

                var existe = retornaChaveamentoPorGerenciaId(obj.Gerencia_Id);
    
                if (existe.length <= 0) {
                    Chaveamento.push({ color: randomColor(),gerencia_id: obj.Gerencia_Id });
                }
            });
        }

        function retornaChaveamentoPorGerenciaId(gerencia_id) {
            return $.grep(Chaveamento, function (o, i) {
                    return o.gerencia_id == gerencia_id;
                });
        }

        function randomColor() {
            color = 'rgb(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ')';
            return color;
        }

    </script>

}<!-- Modal -->
<div id="ModalNovoApartirDeAlgo" class="modal fade" role="dialog" style="z-index:15000">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <table class="table table-striped"></table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>