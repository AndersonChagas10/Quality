Insert into MigrationHistory (Name, AddDate) VALUES ('Criar_ParLevel2EvaluationSample',GetDate())


IF COL_LENGTH('ParEvaluation','Sample') IS NULL
    BEGIN	
		ALTER TABLE ParEvaluation ADD Sample int null;
    END

IF COL_LENGTH('ParLevel2','ParDepartment_Id') IS NULL
    BEGIN	
		ALTER TABLE ParLevel2 
		ALTER COLUMN ParDepartment_Id int null;
    END

Insert into MigrationHistory (Name, AddDate) VALUES ('Alter_ParVinculoPeso_Add_ParLevel3Group_ParCargo',GetDate())

IF COL_LENGTH('ParVinculoPeso','ParLevel3Group_Id') IS NULL
    BEGIN	
		ALTER TABLE ParVinculoPeso 
		ADD ParLevel3Group_Id int NULL,
		FOREIGN KEY (ParLevel3Group_Id) REFERENCES ParLevel3Group(Id);
    END

IF COL_LENGTH('ParVinculoPeso','ParCargo_Id') IS NULL
    BEGIN	
		ALTER TABLE ParVinculoPeso 
		ADD ParCargo_Id int NULL		
    END

Insert into MigrationHistory (Name, AddDate) VALUES ('Add_ParCargo_ParCargoXDepartment_ParColaborador_ParColaboradorXCargo',GetDate())

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParCargo' AND xtype='U')
create table ParCargo(
	Id int not null identity(1,1) primary key,
	Name varchar(50) NOT NULL,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
)

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParCargoXDepartment' AND xtype='U')
create table ParCargoXDepartment(
	Id int not null identity(1,1) primary key,
	ParDepartment_Id int not null FOREIGN key REFERENCES ParDepartment(Id),
	ParCargo_Id int not null FOREIGN key REFERENCES ParCargo(Id),
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
)

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParColaborador' AND xtype='U')
create table ParColaborador(
	Id int not null identity(1,1) primary key,
	Name varchar(100) NOT NULL,
	Documento varchar(100) NOT NULL,
	ParCargo_Id int not null FOREIGN key REFERENCES ParCargo(Id),
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
)

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParColaboradorXCargo' AND xtype='U')
create table ParColaboradorXCargo(
	Id int not null identity(1,1) primary key,
	ParCargo_Id int not null FOREIGN key REFERENCES ParCargo(Id),
	ParColaborador_Id int not null FOREIGN key REFERENCES ParColaborador(Id),
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
)

Insert into MigrationHistory (Name, AddDate) VALUES ('Alter_ParVinculoPeso_ParCompany_Id_ParDepartment_Id_Null',GetDate())

IF COL_LENGTH('ParVinculoPeso','ParCompany_Id') IS NOT NULL
BEGIN
	ALTER TABLE ParVinculoPeso ALTER COLUMN ParCompany_Id int NULL
END

IF COL_LENGTH('ParVinculoPeso','ParDepartment_Id') IS NOT NULL
BEGIN
	ALTER TABLE ParVinculoPeso ALTER COLUMN ParDepartment_Id int NULL
END


IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParEvaluationXDepartmentXCargo' AND xtype='U')
create table ParEvaluationXDepartmentXCargo(
	Id int not null identity(1,1) primary key,
	ParCargo_Id int null FOREIGN key REFERENCES ParCargo(Id),
	ParCompany_Id int null FOREIGN key REFERENCES ParCompany(Id),
	ParDepartment_Id int null FOREIGN key REFERENCES ParDepartment(Id),
	Evaluation int not null,
	Sample int not null,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
)

 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='CollectionLevel2XParCargo' AND xtype='U')
 create table CollectionLevel2XParCargo (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	CollectionLevel2_Id int foreign key references CollectionLevel2(Id),
	ParCargo_Id int not null foreign key references ParCargo(Id)
)

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='Collection' AND xtype='U')
create table Collection (
	Id bigint identity,
	CollectionDate datetime,
	AddDate datetime,
	UserSgq_Id int,	
	Shift_Id int,
	Period_Id int,
	ParCargo_Id int,
	ParCompany_Id int,
	ParDepartment_Id int,
	ParCluster_Id int,
	ParLevel1_Id int,
	ParLevel2_Id int,
	ParLevel3_Id int,
	CollectionType int,
	--Result_Level3
	Weigth decimal(38,10),
	IntervalMin decimal(38,10),
	IntervalMax decimal(38,10),
	Value int,
	ValueText varchar(255),
	IsNotEvaluate bit,
	IsConform bit,
	Defects decimal(38,10),
	PunishimentValue decimal(38,10),
	WeiEvaluation decimal(38,10),
	Evaluation decimal(38,10),
	WeiDefects decimal(38,10),
	HasPhoto bit,
	--CollectionLevel2
	Sample int,
	HaveCorrectiveAction bit,
	Parfrequency_Id int,
	AlertLevel int,
	--HeaderField
	ParHeaderField_Id int,
	ParHeaderField_Value varchar(255),
	--outros
	IsProcessed bit default 0
)