
Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8CreateTabelaMotivoseSchedule',GetDate());

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='MotivoAtraso' AND xtype='U')
Create Table MotivoAtraso (   
	Id int not null identity PRIMARY KEY,
	Motivo varchar(250) not null,
	AddDate datetime not null,
	AlterDate datetime,
	IsActive bit not null default 1
)

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParEvaluationSchedule' AND xtype='U')
Create Table ParEvaluationSchedule (
		Id int not null identity PRIMARY KEY,
		ParEvaluation_Id int not null FOREIGN KEY REFERENCES ParEvaluation(Id),
        Av int not null,
        Inicio  int not null,
        Fim  int not null,
        Shift_Id  int null,
		AddDate datetime not null,
		AlterDate datetime,
		IsActive bit not null default 1
)

GO
 
 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='CollectionLevel2XMotivoAtraso' AND xtype='U')
 create table CollectionLevel2XMotivoAtraso (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	CollectionLevel2_Id int foreign key references CollectionLevel2(Id),
	MotivoAtraso_Id int not null foreign key references MotivoAtraso(Id)
)

GO



Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8',GetDate())

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParInputTypeValues' AND xtype='U')
create table ParInputTypeValues(
	Id int not null identity primary key,
	Intervalo int NOT NULL,
	Valor int NOT NULL,
	Cor varchar(7) NOT NULL,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
	ParLevel3Value_Id int not null FOREIGN key REFERENCES ParLevel3Value(Id),
)

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DicionarioEstatico' AND xtype='U')
create table DicionarioEstatico(
    Id int primary key identity not null,
    [Key] varchar(255) unique not null,
    ControllerName varchar(155),
    Value varchar(255) not null,
    Descricao varchar(255)
)

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8 Criação das colunas necessarias para o cadastro de agendamento nos volumes',GetDate()) 

GO
SET IDENTITY_INSERT ParFrequency ON 
GO

IF NOT EXISTS (SELECT * FROM ParFrequency WHERE Name = 'Diario com Intervalo')
	begin
		insert into ParFrequency(Id,Name,[Description],AddDate, AlterDate, IsActive) 
		values(10,'Diario com Intervalo','Diario com Intervalo',GETDATE(),NULL,1)
	end

GO
IF COL_LENGTH('VolumeCepDesossa','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeCepDesossa
			add Agendamento VARCHAR(255) NULL;

    END
GO

IF COL_LENGTH('VolumeVacuoGRD','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeVacuoGRD
			add Agendamento VARCHAR(255) NULL;
    END
GO

if  exists (select DATA_TYPE from Information_Schema.COLUMNS where TABLE_NAME = 'ParEvaluationSchedule' and COLUMN_NAME = 'Fim' and DATA_TYPE = 'int')
 BEGIN
	ALTER table ParEvaluationSchedule  alter COLUMN Fim VARCHAR(5) NULL;
 END

 GO

 if  exists (select DATA_TYPE from Information_Schema.COLUMNS where TABLE_NAME = 'ParEvaluationSchedule' and COLUMN_NAME = 'Inicio' and DATA_TYPE = 'int')
 BEGIN
	ALTER table ParEvaluationSchedule  alter COLUMN Inicio VARCHAR(5) NULL;
 END

GO
IF COL_LENGTH('ParEvaluationSchedule','Intervalo') IS NULL
    BEGIN	
		ALTER TABLE ParEvaluationSchedule
			add Intervalo VARCHAR(5) NULL;
    END
GO

IF COL_LENGTH('VolumeCepRecortes','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeCepRecortes
			add Agendamento VARCHAR(255) NULL;
    END
GO

Insert into MigrationHistory (Name, AddDate) VALUES ('20190207_AlterarTamanhoColunaDynamicValue',GetDate())

ALTER TABLE ParLevel3Value
ALTER COLUMN DynamicValue varchar(900) null
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParLevel3XParDepartment' AND xtype='U')
CREATE TABLE ParLevel3XParDepartment(
	[Id] [int] IDENTITY(1,1) NOT NULL primary key,
	[ParDepartment_Id] [int] NOT NULL FOREIGN KEY REFERENCES ParDepartment(Id),
	[ParLevel1_Id] [int] NULL FOREIGN KEY REFERENCES ParLevel1(Id),
	[ParLevel2_Id] [int] NULL FOREIGN KEY REFERENCES ParLevel2(Id),
	[ParLevel3_Id] [int] NULL FOREIGN KEY REFERENCES ParLevel3(Id),
	[ParCompany_Id] [int] NULL FOREIGN KEY REFERENCES ParCompany(Id),
	[AddDate] [datetime] NOT NULL,
	[AlterDate] [datetime] NULL,
	[IsActive] [bit] NOT NULL DEFAULT ((1))
)

GO
 
 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='CollectionLevel2XParDepartment' AND xtype='U')
 create table CollectionLevel2XParDepartment (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	CollectionLevel2_Id int foreign key references CollectionLevel2(Id),
	ParDepartment_Id int not null foreign key references ParDepartment(Id)
)

GO

 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ConsolidationLevel2XParDepartment' AND xtype='U')
 create table ConsolidationLevel2XParDepartment (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	ConsolidationLevel2_Id int foreign key references ConsolidationLevel2(Id),
	ParDepartment_Id int not null foreign key references ParDepartment(Id)
)

GO

 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ConsolidationLevel1XParDepartment' AND xtype='U')
 create table ConsolidationLevel1XParDepartment (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	ConsolidationLevel1_Id int foreign key references ConsolidationLevel1(Id),
	ParDepartment_Id int not null foreign key references ParDepartment(Id)
)