
Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8CreateTabelaMotivoseSchedule',GetDate());

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParReasonType' AND xtype='U')
create table ParReasonType(
	Id int not null identity primary key,
	Name varchar(20) NOT NULL,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1
)

GO
SET IDENTITY_INSERT ParReasonType ON 
GO

IF NOT EXISTS (SELECT * FROM ParReasonType WHERE Name = 'Antecipado')
	begin
		insert into ParReasonType(Id,Name,AddDate, AlterDate, IsActive) 
		values(1,'Antecipado',GETDATE(),NULL,1)
	end

GO

IF NOT EXISTS (SELECT * FROM ParReasonType WHERE Name = 'Atrasado')
	begin
		insert into ParReasonType(Id,Name,AddDate, AlterDate, IsActive) 
		values(2,'Atrasado',GETDATE(),NULL,1)
	end

GO

IF NOT EXISTS (SELECT * FROM ParReasonType WHERE Name = 'Não Avaliado')
	begin
		insert into ParReasonType(Id,Name,AddDate, AlterDate, IsActive) 
		values(3,'Não Avaliado',GETDATE(),NULL,1)
	end

GO

SET IDENTITY_INSERT ParReasonType OFF

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParReason' AND xtype='U')
Create Table ParReason (   
	Id int not null identity PRIMARY KEY,
	Motivo varchar(250) not null,
	AddDate datetime not null,
	AlterDate datetime,
	IsActive bit not null default 1,
	ParReasonType_Id int not null FOREIGN key REFERENCES ParReasonType(Id),
)

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParReasonXReasonType' AND xtype='U')
create table ParReasonXReasonType(
	Id int not null identity primary key,
	ParReason_Id int not null FOREIGN key REFERENCES ParReason(Id),
	ParReasonType_Id int not null FOREIGN key REFERENCES ParReasonType(Id),
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1
)

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParEvaluationSchedule' AND xtype='U')
Create Table ParEvaluationSchedule (
		Id int not null identity PRIMARY KEY,
		ParEvaluation_Id int not null FOREIGN KEY REFERENCES ParEvaluation(Id),
        Av int not null,
        Inicio  int not null,
        Fim  int not null,
        Shift_Id  int null,
		AddDate datetime not null,
		AlterDate datetime,
		IsActive bit not null default 1
)

GO
 
 IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='CollectionLevel2XParReason' AND xtype='U')
 create table CollectionLevel2XParReason (
	Id int primary key identity not null,
	AddDate datetime not null,
	AlterDate datetime,
	CollectionLevel2_Id int foreign key references CollectionLevel2(Id),
	ParReason_Id int not null foreign key references ParReason(Id),
	ParReasonType_Id int not null foreign key references ParReasonType(Id)
)

GO



Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8',GetDate())

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParInputTypeValues' AND xtype='U')
create table ParInputTypeValues(
	Id int not null identity primary key,
	Intervalo int NOT NULL,
	Valor int NOT NULL,
	Cor varchar(7) NOT NULL,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1,
	ParLevel3Value_Id int not null FOREIGN key REFERENCES ParLevel3Value(Id),
)

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DicionarioEstatico' AND xtype='U')
create table DicionarioEstatico(
    Id int primary key identity not null,
    [Key] varchar(255) unique not null,
    ControllerName varchar(155),
    Value varchar(255) not null,
    Descricao varchar(255)
)

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.8 Criação das colunas necessarias para o cadastro de agendamento nos volumes',GetDate()) 

GO
SET IDENTITY_INSERT ParFrequency ON 
GO

IF NOT EXISTS (SELECT * FROM ParFrequency WHERE Name = 'Diario com Intervalo')
	begin
		insert into ParFrequency(Id,Name,[Description],AddDate, AlterDate, IsActive) 
		values(10,'Diario com Intervalo','Diario com Intervalo',GETDATE(),NULL,1)
	end

GO

SET IDENTITY_INSERT ParFrequency OFF

GO
IF COL_LENGTH('VolumeCepDesossa','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeCepDesossa
			add Agendamento VARCHAR(255) NULL;

    END
GO

IF COL_LENGTH('VolumeVacuoGRD','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeVacuoGRD
			add Agendamento VARCHAR(255) NULL;
    END
GO

if  exists (select DATA_TYPE from Information_Schema.COLUMNS where TABLE_NAME = 'ParEvaluationSchedule' and COLUMN_NAME = 'Fim' and DATA_TYPE = 'int')
 BEGIN
	ALTER table ParEvaluationSchedule  alter COLUMN Fim VARCHAR(5) NULL;
 END

 GO

 if  exists (select DATA_TYPE from Information_Schema.COLUMNS where TABLE_NAME = 'ParEvaluationSchedule' and COLUMN_NAME = 'Inicio' and DATA_TYPE = 'int')
 BEGIN
	ALTER table ParEvaluationSchedule  alter COLUMN Inicio VARCHAR(5) NULL;
 END

GO
IF COL_LENGTH('ParEvaluationSchedule','Intervalo') IS NULL
    BEGIN	
		ALTER TABLE ParEvaluationSchedule
			add Intervalo VARCHAR(5) NULL;
    END
GO

IF COL_LENGTH('VolumeCepRecortes','Agendamento') IS NULL
    BEGIN	
		ALTER TABLE VolumeCepRecortes
			add Agendamento VARCHAR(255) NULL;
    END
GO


IF not Exists (select 1 from MigrationHistory where Name = '20190207_AlterarTamanhoColunaDynamicValue')
BEGIN
	Insert into MigrationHistory (Name, AddDate) VALUES ('20190207_AlterarTamanhoColunaDynamicValue',GetDate())

ALTER TABLE ParLevel3Value
ALTER COLUMN DynamicValue varchar(900) null
GO
	ALTER TABLE ParLevel3Value
	ALTER COLUMN DynamicValue varchar(900) null
END


IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='IntegracaoSistemica' AND xtype='U')
create table IntegracaoSistemica(
	Id int not null identity primary key,
	Name varchar(20) NOT NULL,
	Configuration varchar(255) NOT NULL,
	Script text NOT NULL,
	TableName varchar(50) NOT NULL,
	Intervalo int NOT NULL,
	AddDate datetime not null,
	AlterDate datetime null,
	IsActive bit not null default 1
)

alter table Integ.CollectionData
add CollectionDate Datetime not null
