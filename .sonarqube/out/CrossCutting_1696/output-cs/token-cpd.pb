³

@C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\CrossCutting\IoC.cs
	namespace 	
CrossCutting
 
. 
IOC 
{ 
public 

class 
IoC 
{		 
public

 
IKernel

 
Kernel

 
{

 
get

  #
;

# $
private

% ,
set

- 0
;

0 1
}

2 3
public 
IoC 
( 
) 
{ 	
Kernel 
= 
GetNinjectModules &
(& '
)' (
;( )
ServiceLocator 
. 
SetLocatorProvider -
(- .
(. /
)/ 0
=>1 3
new4 7!
NinjectServiceLocator8 M
(M N
KernelN T
)T U
)U V
;V W
} 	
public 
StandardKernel 
GetNinjectModules /
(/ 0
)0 1
{ 	
return 
new 
StandardKernel %
(% &
new 
DomainNinjectModule '
(' (
)( )
,) *
new 
DataNinjectModule %
(% &
)& '
) 
; 
} 	
} 
} Š
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\CrossCutting\Module\DomainNinjectModule.cs
	namespace 	
CrossCutting
 
. 
IOC 
. 
Module !
{ 
public 

class 
DomainNinjectModule $
:% &
NinjectModule' 4
{ 
public		 
override		 
void		 
Load		 !
(		! "
)		" #
{

 	
Bind 
( 
typeof 
( 
IBaseDomain #
<# $
,$ %
>% &
)& '
)' (
.( )
To) +
(+ ,
typeof, 2
(2 3

BaseDomain3 =
<= >
,> ?
>? @
)@ A
)A B
;B C
Bind 
< 
IUserDomain 
> 
( 
) 
.  
To  "
<" #

UserDomain# -
>- .
(. /
)/ 0
;0 1
Bind 
< "
IRelatorioColetaDomain '
>' (
(( )
)) *
.* +
To+ -
<- .!
RelatorioColetaDomain. C
>C D
(D E
)E F
;F G
Bind 
< 
IExampleDomain 
>  
(  !
)! "
." #
To# %
<% &
ExampleDomain& 3
>3 4
(4 5
)5 6
;6 7
Bind 
< 
IParamsDomain 
> 
(  
)  !
.! "
To" $
<$ %
ParamsDomain% 1
>1 2
(2 3
)3 4
;4 5
Bind 
< 
ICompanyDomain 
>  
(  !
)! "
." #
To# %
<% &
CompanyDomain& 3
>3 4
(4 5
)5 6
;6 7
Bind 
< 
IDefectDomain 
> 
(  
)  !
.! "
To" $
<$ %
DefectDomain% 1
>1 2
(2 3
)3 4
;4 5
} 	
} 
} …
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\CrossCutting\Module\DataNinjectModule.cs
	namespace 	
CrossCutting
 
. 
IOC 
. 
Module !
{ 
public 

class 
DataNinjectModule "
:# $
NinjectModule% 2
{ 
public		 
override		 
void		 
Load		 !
(		! "
)		" #
{

 	
Bind 
( 
typeof 
( 
IBaseRepository '
<' (
>( )
)) *
)* +
.+ ,
To, .
(. /
typeof/ 5
(5 6
RepositoryBase6 D
<D E
>E F
)F G
)G H
;H I
Bind 
( 
typeof 
( %
IBaseRepositoryNoLazyLoad 1
<1 2
>2 3
)3 4
)4 5
.5 6
To6 8
(8 9
typeof9 ?
(? @$
RepositoryBaseNoLazyLoad@ X
<X Y
>Y Z
)Z [
)[ \
;\ ]
Bind 
( 
typeof 
( &
IRelatorioColetaRepository 2
<2 3
>3 4
)4 5
)5 6
.6 7
To7 9
(9 :
typeof: @
(@ A%
RelatorioColetaRepositoryA Z
<Z [
>[ \
)\ ]
)] ^
;^ _
Bind 
< 
IUserRepository  
>  !
(! "
)" #
.# $
To$ &
<& '
UserRepository' 5
>5 6
(6 7
)7 8
;8 9
Bind 
< 
IParamsRepository "
>" #
(# $
)$ %
.% &
To& (
<( )
ParamsRepository) 9
>9 :
(: ;
); <
;< =
Bind 
<  
IParLevel3Repository %
>% &
(& '
)' (
.( )
To) +
<+ ,
ParLevel3Repository, ?
>? @
(@ A
)A B
;B C
} 	
} 
} ÿ
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\CrossCutting\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str '
)' (
]( )
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str )
)) *
]* +
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *