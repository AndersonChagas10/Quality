÷5
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\BundleConfig.cs
	namespace 	
	SgqSystem
 
{ 
public 

class 
BundleConfig 
{ 
public 
static 
void 
RegisterBundles *
(* +
BundleCollection+ ;
bundles< C
)C D
{		 	
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) ;
); <
. 
Include 
( 
$str 8
,8 9
$str 3
) 
) 
; 
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) 7
)7 8
. 
Include 
( 
$str C
)C D
) 
; 
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) :
): ;
. 
Include 
( 
$str ,
,, -
$str 1
,1 2
$str :
,: ;
$str )
,) *
$str (
) 
) 
; 
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) 9
)9 :
.   
Include   
(   
$str   N
)  N O
)!! 
;!! 
bundles## 
.## 
Add## 
(## 
new## 
ScriptBundle## (
(##( )
$str##) >
)##> ?
.$$ 
Include$$ 
($$ 
$str$$ 1
,$$1 2
$str%% ,
,%%, -
$str&& 0
)&&0 1
)&&1 2
;&&2 3
bundles(( 
.(( 
Add(( 
((( 
new(( 
ScriptBundle(( (
(((( )
$str(() A
)((A B
.((B C
Include((C J
(((J K
$str** C
,**C D
$str++ D
,++D E
$str,, ?
,,,? @
$str-- 7
,--7 8
$str.. 9
,..9 :
$str// 7
,//7 8
$str00 ?
,00? @
$str11 ?
,11? @
$str22 @
,22@ A
$str33 ?
,33? @
$str44 H
,44H I
$str55 I
,55I J
$str66 B
)99 
)99 
;99 
bundles;; 
.;; 
Add;; 
(;; 
new;; 
ScriptBundle;; (
(;;( )
$str;;) >
);;> ?
.;;? @
Include;;@ G
(;;G H
$str<< -
)<<- .
)<<. /
;<</ 0
bundles>> 
.>> 
Add>> 
(>> 
new>> 
ScriptBundle>> (
(>>( )
$str>>) :
)>>: ;
.>>; <
Include>>< C
(>>C D
$str?? O
,??O P
$str@@ 7
)AA 
)AA 
;AA 
bundlesCC 
.CC 
AddCC 
(CC 
newCC 
ScriptBundleCC (
(CC( )
$strCC) >
)CC> ?
.CC? @
IncludeCC@ G
(CCG H
$strDD /
,EE 
$strEE 0
)EE0 1
)EE1 2
;EE2 3
bundlesGG 
.GG 
AddGG 
(GG 
newGG 
ScriptBundleGG (
(GG( )
$strGG) E
)GGE F
.GGF G
IncludeGGG N
(GGN O
$strII :
,II: ;
$strJJ D
,JJD E
$strKK 2
,KK2 3
$strLL 1
)LL1 2
)LL2 3
;LL3 4
bundlesRR 
.RR 
AddRR 
(RR 
newRR 
StyleBundleRR '
(RR' (
$strRR( ;
)RR; <
.RR< =
IncludeRR= D
(RRD E
$strSS /
,SS/ 0
$strTT =
,TT= >
$strUU 0
,UU0 1
$strVV 3
)WW 
)WW 
;WW 
bundlesYY 
.YY 
AddYY 
(YY 
newYY 
StyleBundleYY '
(YY' (
$strYY( >
)YY> ?
.YY? @
IncludeYY@ G
(YYG H
$strZZ 2
)ZZ2 3
)ZZ3 4
;ZZ4 5
bundles\\ 
.\\ 
Add\\ 
(\\ 
new\\ 
StyleBundle\\ '
(\\' (
$str\\( :
)\\: ;
.\\; <
Include\\< C
(\\C D
$str]] H
,]]H I
$str^^ I
,^^I J
$str__ L
,__L M
$str`` N
,``N O
$straa M
)bb 
)bb 
;bb 
bundlesdd 
.dd 
Adddd 
(dd 
newdd 
StyleBundledd '
(dd' (
$strdd( 9
)dd9 :
.dd: ;
Includedd; B
(ddB C
$stree 8
,ee8 9
$strgg M
,ggM N
$strhh 4
,hh4 5
$strii T
)jj 
)jj 
;jj 
bundlesll 
.ll 
Addll 
(ll 
newll 
StyleBundlell '
(ll' (
$strll( 7
)ll7 8
.ll8 9
Includell9 @
(ll@ A
$strmm #
)nn 
)nn 
;nn 
bundlespp 
.pp 
Addpp 
(pp 
newpp 
StyleBundlepp '
(pp' (
$strpp( G
)ppG H
.ppH I
IncludeppI P
(ppP Q
$strqq 3
)qq3 4
)qq4 5
;qq5 6
bundlesyy 
.yy 
Addyy 
(yy 
newyy 
StyleBundleyy '
(yy' (
$stryy( F
)yyF G
.yyG H
IncludeyyH O
(yyO P
$strzz -
,{{ 
$str{{ ,
,|| 
$str|| -
,}} 
$str}} 6
)~~ 
)~~ 
;~~ 
bundles
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
new
ÄÄ 
ScriptBundle
ÄÄ '
(
ÄÄ' (
$str
ÄÄ( E
)
ÄÄE F
.
ÄÄF G
Include
ÄÄG N
(
ÄÄN O
$str
ÅÅ /
,
ÇÇ 
$str
ÇÇ B
,
ÉÉ 
$str
ÉÉ ,
,
ÑÑ 
$str
ÑÑ .
,
ÖÖ 
$str
ÖÖ ,
,
ÜÜ 
$str
ÜÜ 8
,
áá 
$str
áá +
,
àà 
$str
àà 3
)
ââ 
)
ââ 
;
ââ 
}
îî 	
}
ïï 
}ññ ¸
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\FilterConfig.cs
	namespace 	
	SgqSystem
 
{ 
public 

class 
FilterConfig 
{ 
public 
static 
void !
RegisterGlobalFilters 0
(0 1"
GlobalFilterCollection1 G
filtersH O
)O P
{ 	
filters		 
.		 
Add		 
(		 
new		  
HandleErrorAttribute		 0
(		0 1
)		1 2
)		2 3
;		3 4
} 	
} 
} ‘
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\IdentityConfig.cs
	namespace 	
	SgqSystem
 
{		 
public 

class "
ApplicationUserManager '
:( )
UserManager* 5
<5 6
ApplicationUser6 E
>E F
{ 
public "
ApplicationUserManager %
(% &

IUserStore& 0
<0 1
ApplicationUser1 @
>@ A
storeB G
)G H
: 
base 
( 
store 
) 
{ 	
} 	
public 
static "
ApplicationUserManager ,
Create- 3
(3 4"
IdentityFactoryOptions4 J
<J K"
ApplicationUserManagerK a
>a b
optionsc j
,j k
IOwinContextl x
context	y Ä
)
Ä Å
{ 	
var 
manager 
= 
new "
ApplicationUserManager 4
(4 5
new5 8
	UserStore9 B
<B C
ApplicationUserC R
>R S
(S T
contextT [
.[ \
Get\ _
<_ ` 
ApplicationDbContext` t
>t u
(u v
)v w
)w x
)x y
;y z
manager 
. 
UserValidator !
=" #
new$ '
UserValidator( 5
<5 6
ApplicationUser6 E
>E F
(F G
managerG N
)N O
{ *
AllowOnlyAlphanumericUserNames .
=/ 0
false1 6
,6 7
RequireUniqueEmail "
=# $
true% )
} 
; 
manager 
. 
PasswordValidator %
=& '
new( +
PasswordValidator, =
{ 
RequiredLength 
=  
$num! "
," ##
RequireNonLetterOrDigit   '
=  ( )
true  * .
,  . /
RequireDigit!! 
=!! 
true!! #
,!!# $
RequireLowercase""  
=""! "
true""# '
,""' (
RequireUppercase##  
=##! "
true### '
,##' (
}$$ 
;$$ 
var%% "
dataProtectionProvider%% &
=%%' (
options%%) 0
.%%0 1"
DataProtectionProvider%%1 G
;%%G H
if&& 
(&& "
dataProtectionProvider&& &
!=&&' )
null&&* .
)&&. /
{'' 
manager(( 
.(( 
UserTokenProvider(( )
=((* +
new((, /&
DataProtectorTokenProvider((0 J
<((J K
ApplicationUser((K Z
>((Z [
((([ \"
dataProtectionProvider((\ r
.((r s
Create((s y
(((y z
$str	((z å
)
((å ç
)
((ç é
;
((é è
})) 
return** 
manager** 
;** 
}++ 	
},, 
}-- ˇ#
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\NinjectWebCommon.cs
[ 
assembly 	
:	 

WebActivatorEx 
. %
PreApplicationStartMethod 3
(3 4
typeof4 :
(: ;
	SgqSystem; D
.D E
	App_StartE N
.N O
NinjectWebCommonO _
)_ `
,` a
$strb i
)i j
]j k
[ 
assembly 	
:	 

WebActivatorEx 
. .
"ApplicationShutdownMethodAttribute <
(< =
typeof= C
(C D
	SgqSystemD M
.M N
	App_StartN W
.W X
NinjectWebCommonX h
)h i
,i j
$strk q
)q r
]r s
	namespace 	
	SgqSystem
 
. 
	App_Start 
{ 
public 

static 
class 
NinjectWebCommon (
{ 
private 
static 
readonly 
Bootstrapper  ,
bootstrapper- 9
=: ;
new< ?
Bootstrapper@ L
(L M
)M N
;N O
public 
static 
void 
Start  
(  !
)! "
{ 	 
DynamicModuleUtility  
.  !
RegisterModule! /
(/ 0
typeof0 6
(6 7#
OnePerRequestHttpModule7 N
)N O
)O P
;P Q 
DynamicModuleUtility  
.  !
RegisterModule! /
(/ 0
typeof0 6
(6 7
NinjectHttpModule7 H
)H I
)I J
;J K
bootstrapper 
. 

Initialize #
(# $
CreateKernel$ 0
)0 1
;1 2
} 	
public$$ 
static$$ 
void$$ 
Stop$$ 
($$  
)$$  !
{%% 	
bootstrapper&& 
.&& 
ShutDown&& !
(&&! "
)&&" #
;&&# $
}'' 	
private-- 
static-- 
IKernel-- 
CreateKernel-- +
(--+ ,
)--, -
{.. 	
var// 
ioc// 
=// 
new// 
IoC// 
(// 
)// 
;//  
var11 
kernel11 
=11 
ioc11 
.11 
Kernel11 #
;11# $
try22 
{33 
kernel44 
.44 
Bind44 
<44 
Func44  
<44  !
IKernel44! (
>44( )
>44) *
(44* +
)44+ ,
.44, -
ToMethod44- 5
(445 6
ctx446 9
=>44: <
(44= >
)44> ?
=>44@ B
new44C F
Bootstrapper44G S
(44S T
)44T U
.44U V
Kernel44V \
)44\ ]
;44] ^
kernel55 
.55 
Bind55 
<55 
IHttpModule55 '
>55' (
(55( )
)55) *
.55* +
To55+ -
<55- .3
'HttpApplicationInitializationHttpModule55. U
>55U V
(55V W
)55W X
;55X Y
kernel66 
.66 
Rebind66 
<66 "
ModelValidatorProvider66 4
>664 5
(665 6
)666 7
.667 8
To668 :
<66: ;0
$NinjectDefaultModelValidatorProvider66; _
>66_ `
(66` a
)66a b
;66b c
GlobalConfiguration99 #
.99# $
Configuration99$ 1
.991 2
DependencyResolver992 D
=99E F
new99G J
Ninject99K R
.99R S
WebApi99S Y
.99Y Z
DependencyResolver99Z l
.99l m&
NinjectDependencyResolver	99m Ü
(
99Ü á
kernel
99á ç
)
99ç é
;
99é è
RegisterServices::  
(::  !
kernel::! '
)::' (
;::( )
return;; 
kernel;; 
;;; 
}<< 
catch== 
{>> 
kernel?? 
.?? 
Dispose?? 
(?? 
)??  
;??  !
throw@@ 
;@@ 
}AA 
}BB 	
privateHH 
staticHH 
voidHH 
RegisterServicesHH ,
(HH, -
IKernelHH- 4
kernelHH5 ;
)HH; <
{II 	
}RR 	
}SS 
}TT ⁄
OC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\RouteConfig.cs
	namespace 	
	SgqSystem
 
{		 
public

 

class

 
RouteConfig

 
{ 
public 
static 
void 
RegisterRoutes )
() *
RouteCollection* 9
routes: @
)@ A
{ 	
routes 
. 
IgnoreRoute 
( 
$str ;
); <
;< =
routes 
. 
MapRoute 
( 
name 
: 
$str 
,  
url 
: 
$str 1
,1 2
defaults 
: 
new 
{ 

controller  *
=+ ,
$str- A
,A B
actionC I
=J K
$strL S
,S T
idU W
=X Y
UrlParameterZ f
.f g
Optionalg o
}p q
) 
; 
} 	
} 
} ƒ
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\Startup.Auth.cs
	namespace 	
	SgqSystem
 
{ 
public 

partial 
class 
Startup  
{ 
public 
static +
OAuthAuthorizationServerOptions 5
OAuthOptions6 B
{C D
getE H
;H I
privateJ Q
setR U
;U V
}W X
public 
static 
string 
PublicClientId +
{, -
get. 1
;1 2
private3 :
set; >
;> ?
}@ A
public 
void 
ConfigureAuth !
(! "
IAppBuilder" -
app. 1
)1 2
{ 	
app 
.  
CreatePerOwinContext $
($ % 
ApplicationDbContext% 9
.9 :
Create: @
)@ A
;A B
app 
.  
CreatePerOwinContext $
<$ %"
ApplicationUserManager% ;
>; <
(< ="
ApplicationUserManager= S
.S T
CreateT Z
)Z [
;[ \
app 
. #
UseCookieAuthentication '
(' (
new( +'
CookieAuthenticationOptions, G
(G H
)H I
)I J
;J K
app   
.   #
UseExternalSignInCookie   '
(  ' (&
DefaultAuthenticationTypes  ( B
.  B C
ExternalCookie  C Q
)  Q R
;  R S
PublicClientId## 
=## 
$str## #
;### $
OAuthOptions$$ 
=$$ 
new$$ +
OAuthAuthorizationServerOptions$$ >
{%% 
TokenEndpointPath&& !
=&&" #
new&&$ '

PathString&&( 2
(&&2 3
$str&&3 ;
)&&; <
,&&< =
Provider'' 
='' 
new'' $
ApplicationOAuthProvider'' 7
(''7 8
PublicClientId''8 F
)''F G
,''G H!
AuthorizeEndpointPath(( %
=((& '
new((( +

PathString((, 6
(((6 7
$str((7 S
)((S T
,((T U%
AccessTokenExpireTimeSpan)) )
=))* +
TimeSpan)), 4
.))4 5
FromDays))5 =
())= >
$num))> @
)))@ A
,))A B
AllowInsecureHttp++ !
=++" #
true++$ (
},, 
;,, 
app// 
.//  
UseOAuthBearerTokens// $
(//$ %
OAuthOptions//% 1
)//1 2
;//2 3
}CC 	
}DD 
}EE ˙
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\App_Start\WebApiConfig.cs
	namespace 	
	SgqSystem
 
{ 
public 

static 
class 
WebApiConfig $
{ 
public		 
static		 
void		 
Register		 #
(		# $
HttpConfiguration		$ 5
config		6 <
)		< =
{

 	
config 
. -
!SuppressDefaultHostAuthentication 4
(4 5
)5 6
;6 7
config 
. 
Filters 
. 
Add 
( 
new "$
HostAuthenticationFilter# ;
(; <
OAuthDefaults< I
.I J
AuthenticationTypeJ \
)\ ]
)] ^
;^ _
config 
. 
Filters 
. 
Add 
( 
new "
	HandleApi# ,
(, -
)- .
). /
;/ 0
config 
. "
MapHttpAttributeRoutes )
() *
)* +
;+ ,
config 
. 
Routes 
. 
MapHttpRoute &
(& '
name 
: 
$str "
," #
routeTemplate 
: 
$str 6
,6 7
defaults 
: 
new 
{ 
id  "
=# $
RouteParameter% 3
.3 4
Optional4 <
}= >
) 
; 
} 	
} 
} ÿ[
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\App\AppApiControlle.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
App$ '
{ 
[ 
RoutePrefix 
( 
$str  
)  !
]! "
public 

class "
AppParamsApiController '
:( )
ApiController* 7
{ 
SgqDbDevEntities 
db 
; 
public   "
AppParamsApiController   %
(  % &
)  & '
{!! 	
db"" 
="" 
new"" 
SgqDbDevEntities"" %
(""% &
)""& '
;""' (
}## 	
[)) 	
HttpGet))	 
])) 
[** 	
Route**	 
(** 
$str** #
)**# $
]**$ %
public++ 
RetornoParaTablet++  
UpdateTelaDoTablet++! 3
(++3 4
)++4 5
{,, 	
	CommonLog-- 
.-- 

SaveReport--  
(--  !
$str--! 4
)--4 5
;--5 6
GlobalConfig// 
.// 
ParamsDisponiveis// *
=//+ ,
string//- 3
.//3 4
Empty//4 9
;//9 :
GlobalConfig00 
.00 
PaginaDoTablet00 '
=00( )
new00* -

Dictionary00. 8
<008 9
int009 <
,00< =
string00> D
>00D E
(00E F
)00F G
;00G H
var22 
units22 
=22 
db22 
.22 

ParCompany22 %
.22% &
Where22& +
(22+ ,
r22, -
=>22. 0
r221 2
.222 3
IsActive223 ;
)22; <
.22< =
ToList22= C
(22C D
)22D E
;22E F
using33 
(33 
var33 
service33 
=33  
new33! $
SyncServices33% 1
(331 2
)332 3
)333 4
{44 
foreach55 
(55 
var55 
i55 
in55 !
units55" '
)55' (
{66 
var88 

atualizado88 "
=88# $
service88% ,
.88, -
getAPPLevels88- 9
(889 :
$num88: <
,88< =
i88> ?
.88? @
Id88@ B
,88B C
DateTime88D L
.88L M
Now88M P
)88P Q
;88Q R
try99 
{:: 
GlobalConfig;; $
.;;$ %
PaginaDoTablet;;% 3
.;;3 4
Add;;4 7
(;;7 8
i;;8 9
.;;9 :
Id;;: <
,;;< =

atualizado;;> H
);;H I
;;;I J
GlobalConfig<< $
.<<$ %
ParamsDisponiveis<<% 6
+=<<7 9
i<<: ;
.<<; <
Id<<< >
.<<> ?
ToString<<? G
(<<G H
)<<H I
;<<I J
}== 
catch>> 
(>> 
	Exception>> $
e>>% &
)>>& '
{?? 
new@@ 
	CreateLog@@ %
(@@% &
e@@& '
,@@' (
i@@) *
)@@* +
;@@+ ,
}AA 
}CC 
}DD 
returnFF 
newFF 
RetornoParaTabletFF (
(FF( )
)FF) *
{FF+ ,
readyFF- 2
=FF3 4
trueFF5 9
}FF: ;
;FF; <
}HH 	
[OO 	
HttpGetOO	 
]OO 
[PP 	
RoutePP	 
(PP 
$strPP ,
)PP, -
]PP- .
publicQQ 
RetornoParaTabletQQ  
UpdateTelaDoTabletQQ! 3
(QQ3 4
intQQ4 7
UnitIdQQ8 >
)QQ> ?
{RR 	
	CommonLogSS 
.SS 

SaveReportSS  
(SS  !
UnitIdSS! '
,SS' (
$strSS) 9
)SS9 :
;SS: ;
ifUU 
(UU 
GlobalConfigUU 
.UU 
PaginaDoTabletUU +
==UU, .
nullUU/ 3
)UU3 4
GlobalConfigVV 
.VV 
PaginaDoTabletVV +
=VV, -
newVV. 1

DictionaryVV2 <
<VV< =
intVV= @
,VV@ A
stringVVB H
>VVH I
(VVI J
)VVJ K
;VVK L
usingXX 
(XX 
varXX 
serviceXX 
=XX  
newXX! $
SyncServicesXX% 1
(XX1 2
)XX2 3
)XX3 4
{YY 
varZZ 

atualizadoZZ 
=ZZ  
serviceZZ! (
.ZZ( )
getAPPLevelsZZ) 5
(ZZ5 6
$numZZ6 8
,ZZ8 9
UnitIdZZ: @
,ZZ@ A
DateTimeZZB J
.ZZJ K
NowZZK N
)ZZN O
;ZZO P
try[[ 
{\\ 
if]] 
(]] 
GlobalConfig]] $
.]]$ %
PaginaDoTablet]]% 3
.]]3 4
ContainsKey]]4 ?
(]]? @
UnitId]]@ F
)]]F G
)]]G H
{^^ 
GlobalConfig__ $
.__$ %
PaginaDoTablet__% 3
[__3 4
UnitId__4 :
]__: ;
=__< =

atualizado__> H
;__H I
}`` 
elseaa 
{bb 
GlobalConfigcc $
.cc$ %
PaginaDoTabletcc% 3
.cc3 4
Addcc4 7
(cc7 8
UnitIdcc8 >
,cc> ?

atualizadocc@ J
)ccJ K
;ccK L
GlobalConfigdd $
.dd$ %
ParamsDisponiveisdd% 6
+=dd7 9
UnitIddd: @
.dd@ A
ToStringddA I
(ddI J
)ddJ K
;ddK L
}ee 
}ff 
catchgg 
(gg 
	Exceptiongg  
egg! "
)gg" #
{hh 
newii 
	CreateLogii !
(ii! "
eii" #
,ii# $
UnitIdii% +
)ii+ ,
;ii, -
}jj 
}kk 
returnmm 
GetTelamm 
(mm 
UnitIdmm !
)mm! "
;mm" #
}oo 	
[uu 	
HttpGetuu	 
]uu 
[vv 	
Routevv	 
(vv 
$strvv "
)vv" #
]vv# $
publicww 

Dictionaryww 
<ww 
intww 
,ww 
stringww %
>ww% &
ParamsDisponiveisww' 8
(ww8 9
)ww9 :
{xx 	
returnyy 
GlobalConfigyy 
.yy  
PaginaDoTabletyy  .
;yy. /
}zz 	
[
ÅÅ 	
HttpGet
ÅÅ	 
]
ÅÅ 
[
ÇÇ 	
Route
ÇÇ	 
(
ÇÇ 
$str
ÇÇ !
)
ÇÇ! "
]
ÇÇ" #
public
ÉÉ 
RetornoParaTablet
ÉÉ  
GetTela
ÉÉ! (
(
ÉÉ( )
int
ÉÉ) ,
UnitId
ÉÉ- 3
)
ÉÉ3 4
{
ÑÑ 	
var
ÖÖ 
retorno
ÖÖ 
=
ÖÖ 
new
ÖÖ 
RetornoParaTablet
ÖÖ /
(
ÖÖ/ 0
)
ÖÖ0 1
;
ÖÖ1 2
if
ÜÜ 
(
ÜÜ 
GlobalConfig
ÜÜ 
.
ÜÜ 
PaginaDoTablet
ÜÜ +
!=
ÜÜ, .
null
ÜÜ/ 3
)
ÜÜ3 4
{
áá 
if
àà 
(
àà 
GlobalConfig
àà  
.
àà  !
PaginaDoTablet
àà! /
.
àà/ 0
ContainsKey
àà0 ;
(
àà; <
UnitId
àà< B
)
ààB C
)
ààC D
{
ââ 
retorno
ää 
.
ää 
ParteDaTela
ää '
=
ää( )
GlobalConfig
ää* 6
.
ää6 7
PaginaDoTablet
ää7 E
.
ääE F
FirstOrDefault
ääF T
(
ääT U
r
ääU V
=>
ääW Y
r
ääZ [
.
ää[ \
Key
ää\ _
==
ää` b
UnitId
ääc i
)
ääi j
.
ääj k
Value
ääk p
;
ääp q
return
ãã 
retorno
ãã "
;
ãã" #
}
åå 
}
çç  
UpdateTelaDoTablet
ëë 
(
ëë 
UnitId
ëë %
)
ëë% &
;
ëë& '
retorno
íí 
.
íí 
ParteDaTela
íí 
=
íí  !
GlobalConfig
íí" .
.
íí. /
PaginaDoTablet
íí/ =
.
íí= >
FirstOrDefault
íí> L
(
ííL M
r
ííM N
=>
ííO Q
r
ííR S
.
ííS T
Key
ííT W
==
ííX Z
UnitId
íí[ a
)
íía b
.
ííb c
Value
ííc h
;
ííh i
return
ìì 
retorno
ìì 
;
ìì 
}
îî 	
[
ññ 	
HttpGet
ññ	 
]
ññ 
[
óó 	
Route
óó	 
(
óó 
$str
óó (
)
óó( )
]
óó) *
public
òò 
void
òò 
UpdateDbRemoto
òò "
(
òò" #
int
òò# &
UnitId
òò' -
)
òò- .
{
ôô 	
var
öö 
user
öö 
=
öö 
$str
öö 
;
öö 
var
õõ 
pass
õõ 
=
õõ 
$str
õõ !
;
õõ! "
var
úú 
unidade
úú 
=
úú 
db
úú 
.
úú 

ParCompany
úú '
.
úú' (
FirstOrDefault
úú( 6
(
úú6 7
r
úú7 8
=>
úú9 ;
r
úú< =
.
úú= >
Id
úú> @
==
úúA C
UnitId
úúD J
)
úúJ K
;
úúK L
using
ùù 
(
ùù 
var
ùù 
dbADO
ùù 
=
ùù 
new
ùù "
Factory
ùù# *
(
ùù* +
unidade
ùù+ 2
.
ùù2 3
IPServer
ùù3 ;
,
ùù; <
unidade
ùù= D
.
ùùD E
DBServer
ùùE M
,
ùùM N
pass
ùùO S
,
ùùS T
user
ùùU Y
)
ùùY Z
)
ùùZ [
{
ûû 
var
†† 
tela
†† 
=
†† 
GetTela
†† "
(
††" #
UnitId
††# )
)
††) *
;
††* +
dbADO
°° 
.
°° 
InsertUpdateData
°° &
(
°°& '
tela
°°' +
)
°°+ ,
;
°°, -
}
££ 
}
§§ 	
[
¶¶ 	
HttpGet
¶¶	 
]
¶¶ 
[
ßß 	
Route
ßß	 
(
ßß 
$str
ßß 
)
ßß 
]
ßß 
public
®® 
List
®® 
<
®® 
int
®® 
>
®® 
GetUnits
®® !
(
®®! "
)
®®" #
{
©© 	
return
™™ 
db
™™ 
.
™™ 

ParCompany
™™  
.
™™  !
AsNoTracking
™™! -
(
™™- .
)
™™. /
.
™™/ 0
Select
™™0 6
(
™™6 7
r
™™7 8
=>
™™9 ;
r
™™< =
.
™™= >
Id
™™> @
)
™™@ A
.
™™A B
ToList
™™B H
(
™™H I
)
™™I J
;
™™J K
}
´´ 	
}
∏∏ 	
public
ΩΩ 

class
ΩΩ 
RetornoParaTablet
ΩΩ "
{
ææ 
public
øø 
bool
øø 
ready
øø 
{
øø 
get
øø 
;
øø  
set
øø! $
;
øø$ %
}
øø& '
public
¿¿ 
int
¿¿ 
pool
¿¿ 
{
¿¿ 
get
¿¿ 
;
¿¿ 
set
¿¿ "
;
¿¿" #
}
¿¿$ %
public
¡¡ 
string
¡¡ 
ParteDaTela
¡¡ !
{
¡¡" #
get
¡¡$ '
;
¡¡' (
set
¡¡) ,
;
¡¡, -
}
¡¡. /
}
¬¬ 
}ƒƒ îc
ZC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\App\ContadoresXX.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
App$ '
{ 
public 

class 
ContadoresXX 
{ 
public 
List 
< 
DefeitosPorAmostra &
>& '
GetContadoresXX( 7
(7 8
SgqDbDevEntities8 H
dbI K
,K L
intM P
level1IdQ Y
,Y Z
int[ ^
ParCompany_Id_ l
)l m
{ 	
var 
level2 
= 
db 
. !
ParLevel3Level2Level1 1
.1 2
Where2 7
(7 8
r8 9
=>: <
r= >
.> ?
ParLevel1_Id? K
==L N
level1IdO W
&&X Z
r[ \
.\ ]
Active] c
&&d f
rg h
.h i
ParLevel3Level2i x
.x y
	ParLevel2	y Ç
.
Ç É
IsActive
É ã
)
ã å
.
å ç
Select
ç ì
(
ì î
r
î ï
=>
ñ ò
r
ô ö
.
ö õ
ParLevel3Level2
õ ™
.
™ ´
	ParLevel2
´ ¥
)
¥ µ
.
µ ∂
Include
∂ Ω
(
Ω æ
$str
æ Ã
)
Ã Õ
.
Õ Œ
Distinct
Œ ÷
(
÷ ◊
)
◊ ÿ
;
ÿ Ÿ
var 
level1 
= 
db 
. 
	ParLevel1 %
.% &
FirstOrDefault& 4
(4 5
r5 6
=>7 9
r: ;
.; <
Id< >
==? A
level1IdB J
)J K
;K L
var 
	newReturn 
= 
new 
List  $
<$ %
DefeitosPorAmostra% 7
>7 8
(8 9
)9 :
;: ;
string 

dataInicio 
= 
string  &
.& '
Empty' ,
;, -
string   
dataFim   
=   
string   #
.  # $
Empty  $ )
;  ) *
SyncServices"" 
."" 
getFrequencyDate"" )
("") *
level1""* 0
.""0 1
ParFrequency_Id""1 @
,""@ A
DateTime""B J
.""J K
Now""K N
,
""è ê
ref
""ë î

dataInicio
""ï ü
,
""ü †
ref
""° §
dataFim
""• ¨
)
""¨ ≠
;
""≠ Æ
var%% 
sql%% 
=%% 
$str%% 
+%%  
$str&& 9
+&&: ;
$str(( [
+((\ ]
$str)) .
+))/ 0
$str** 2
+**3 4
$str++ ,
+++- .
ParCompany_Id++/ <
+++= >
$str++? U
+++U V
level1Id++W _
+++` a
$str++b |
+++| }

dataInicio	++} á
+
++á à
$str
++â ≠
+
++Æ Ø
dataFim
++∞ ∑
+
++∏ π
$str
++∫ Ÿ
+
++⁄ €
$str,, S
;,,S T
var.. 
results.. 
=.. 
db.. 
... 
Database.. %
...% &
SqlQuery..& .
<... /
DefeitosPorAmostra../ A
>..A B
(..B C
sql..C F
)..F G
;..G H
	newReturn00 
.00 
AddRange00 
(00 
results00 &
)00& '
;00' (
return33 
	newReturn33 
;33 
}PP 	
privateRR 
ListRR 
<RR 
CollectionLevel2RR %
>RR% &,
 GetCollectionLevel2PelaFrquenciaRR' G
(RRG H

IQueryableRRH R
<RRR S
	ParLevel2RRS \
>RR\ ]
level2RR^ d
,RRd e
SgqDbDevEntitiesRRf v
dbRRw y
)RRy z
{SS 	
varTT 
retornoTT 
=TT 
newTT 
ListTT "
<TT" #
CollectionLevel2TT# 3
>TT3 4
(TT4 5
)TT5 6
;TT6 7
foreachUU 
(UU 
varUU 

level2itemUU #
inUU$ &
level2UU' -
)UU- .
{VV 
stringWW 

dataInicioWW !
=WW" #
stringWW$ *
.WW* +
EmptyWW+ 0
;WW0 1
stringXX 
dataFimXX 
=XX  
stringXX! '
.XX' (
EmptyXX( -
;XX- .
SyncServicesZZ 
.ZZ 
getFrequencyDateZZ -
(ZZ- .

level2itemZZ. 8
.ZZ8 9
ParFrequency_IdZZ9 H
,ZZH I
DateTimeZZJ R
.ZZR S
NowZZS V
,ZZV W
refZZX [

dataInicioZZ\ f
,ZZf g
refZZh k
dataFimZZl s
)ZZs t
;ZZt u
var[[ $
rangePelaFrquenciaInicio[[ ,
=[[- .
Guard[[/ 4
.[[4 5
ParseDateToSqlV2[[5 E
([[E F

dataInicio[[F P
,[[P Q
$str[[R \
)[[\ ]
;[[] ^
var\\ !
rangePelaFrquenciaFim\\ )
=\\* +
Guard\\, 1
.\\1 2
ParseDateToSqlV2\\2 B
(\\B C
dataFim\\C J
,\\J K
$str\\L V
)\\V W
;\\W X
varbb 
level2PelaFrquenciabb '
=bb( )
dbbb* ,
.bb, -
CollectionLevel2bb- =
.cc( )
Wherecc) .
(cc. /
rcc/ 0
=>cc1 3
DbFunctionsee( 3
.ee3 4
TruncateTimeee4 @
(ee@ A
reeA B
.eeB C
CollectionDateeeC Q
)eeQ R
>=eeS U
DbFunctionseeV a
.eea b
TruncateTimeeeb n
(een o%
rangePelaFrquenciaInicio	eeo á
)
eeá à
&&ff( *
DbFunctionsff+ 6
.ff6 7
TruncateTimeff7 C
(ffC D
rffD E
.ffE F
CollectionDateffF T
)ffT U
<=ffV X
DbFunctionsffY d
.ffd e
TruncateTimeffe q
(ffq r"
rangePelaFrquenciaFim	ffr á
)
ffá à
&&gg( *
rgg+ ,
.gg, -

WeiDefectsgg- 7
>gg8 9
$numgg: ;
&&hh( *
rhh+ ,
.hh, -
ParLevel2_Idhh- 9
==hh: <

level2itemhh= G
.hhG H
IdhhH J
)ii( )
;ii) *
ifkk 
(kk 
level2PelaFrquenciakk '
.kk' (
	IsNotNullkk( 1
(kk1 2
)kk2 3
)kk3 4
retornoll 
.ll 
AddRangell $
(ll$ %
level2PelaFrquenciall% 8
)ll8 9
;ll9 :
}nn 
retornopp 
=pp 
retornopp 
.pp 
OrderBypp %
(pp% &
rpp& '
=>pp( *
rpp+ ,
.pp, -
ParLevel1_Idpp- 9
)pp9 :
.pp: ;
ThenBypp; A
(ppA B
rppB C
=>ppD F
rppG H
.ppH I
EvaluationNumberppI Y
)ppY Z
.ppZ [
ThenBypp[ a
(ppa b
rppb c
=>ppd f
rppg h
.pph i
Sampleppi o
)ppo p
.ppp q
ToListppq w
(ppw x
)ppx y
;ppy z
returnqq 
retornoqq 
;qq 
}rr 	
[tt 	
Conditionaltt	 
(tt 
$strtt 
)tt 
]tt 
privateuu 
staticuu 
voiduu 
DebugDoResultuu )
(uu) *
Listuu* .
<uu. /
RetornoLevel1uu/ <
>uu< =
listLevel1Retornouu> O
)uuO P
{vv 	
foreachww 
(ww 
varww 
debugww 
inww !
listLevel1Retornoww" 3
)ww3 4
{xx 
Debugyy 
.yy 
Writeyy 
(yy 
$stryy  
+yy! "
debugyy# (
.yy( )
idLevel1yy) 1
+yy2 3
$stryy4 8
)yy8 9
;yy9 :
foreachzz 
(zz 
varzz 
debugLevel2zz (
inzz) +
debugzz, 1
.zz1 2
avAmPorLevel1zz2 ?
)zz? @
Debug{{ 
.{{ 
Write{{ 
({{  
$str{{  )
+{{* +
debugLevel2{{, 7
.{{7 8
AvAm{{8 <
+{{= >
$str{{? Q
+{{R S
debugLevel2{{T _
.{{_ `
SomaWeiDefect{{` m
){{m n
;{{n o
Debug|| 
.|| 
Write|| 
(|| 
$str|| ;
)||; <
;||< =
}}} 
}~~ 	
}
ÄÄ 
public
ÇÇ 

class
ÇÇ  
DefeitosPorAmostra
ÇÇ #
{
ÉÉ 
public
ÑÑ 
int
ÑÑ 
EvaluationNumber
ÑÑ #
{
ÑÑ$ %
get
ÑÑ& )
;
ÑÑ) *
set
ÑÑ+ .
;
ÑÑ. /
}
ÑÑ0 1
public
ÖÖ 
int
ÖÖ 
Sample
ÖÖ 
{
ÖÖ 
get
ÖÖ 
;
ÖÖ  
set
ÖÖ! $
;
ÖÖ$ %
}
ÖÖ& '
public
ÜÜ 
int
ÜÜ 

WeiDefects
ÜÜ 
{
ÜÜ 
get
ÜÜ  #
;
ÜÜ# $
set
ÜÜ% (
;
ÜÜ( )
}
ÜÜ* +
public
áá 
int
áá 
Period
áá 
{
áá 
get
áá 
;
áá  
set
áá! $
;
áá$ %
}
áá& '
public
àà 
int
àà 
Shift
àà 
{
àà 
get
àà 
;
àà 
set
àà  #
;
àà# $
}
àà% &
}
ââ 
public
ãã 

class
ãã 
RetornoLucas
ãã 
{
åå 
internal
çç 
int
çç 
sample
çç 
;
çç 
internal
éé 
int
éé 
?
éé 

evaluation
éé  
;
éé  !
public
èè 
int
èè 
IdLevel1
èè 
{
èè 
get
èè !
;
èè! "
set
èè# &
;
èè& '
}
èè( )
public
êê 
decimal
êê 
SidesWithDefects
êê '
{
êê( )
get
êê* -
;
êê- .
set
êê/ 2
;
êê2 3
}
êê4 5
public
ëë 
decimal
ëë 
Defects
ëë 
{
ëë  
get
ëë! $
;
ëë$ %
set
ëë& )
;
ëë) *
}
ëë+ ,
}
íí 
public
îî 

class
îî 
RetornoLevel1
îî 
{
ïï 
public
ññ 
int
ññ 
idLevel1
ññ 
{
ññ 
get
ññ !
;
ññ! "
set
ññ# &
;
ññ& '
}
ññ( )
public
óó 
List
óó 
<
óó 
AvAmPorLevel1
óó !
>
óó! "
avAmPorLevel1
óó# 0
{
óó1 2
get
óó3 6
;
óó6 7
set
óó8 ;
;
óó; <
}
óó= >
}
òò 
public
öö 

class
öö 
AvAmPorLevel1
öö 
{
õõ 
public
úú 
string
úú 
AvAm
úú 
{
úú 
get
úú  
;
úú  !
set
úú" %
;
úú% &
}
úú' (
public
ùù 
decimal
ùù 
?
ùù 
SomaWeiDefect
ùù %
{
ùù& '
get
ùù( +
;
ùù+ ,
set
ùù- 0
;
ùù0 1
}
ùù2 3
public
ûû 
decimal
ûû 
SomaNotIsConform
ûû '
{
ûû( )
get
ûû* -
;
ûû- .
set
ûû/ 2
;
ûû2 3
}
ûû4 5
public
üü 
decimal
üü !
SomaWeiDefectsPorAv
üü *
{
üü+ ,
get
üü- 0
;
üü0 1
set
üü2 5
;
üü5 6
}
üü7 8
public
†† 
decimal
†† *
SomaWeiDefectsPorAvAcumulada
†† 3
{
††4 5
get
††6 9
;
††9 :
set
††; >
;
††> ?
}
††@ A
public
°° 
int
°° 
Am
°° 
{
°° 
get
°° 
;
°° 
internal
°° %
set
°°& )
;
°°) *
}
°°+ ,
public
¢¢ 
int
¢¢ 
Av
¢¢ 
{
¢¢ 
get
¢¢ 
;
¢¢ 
internal
¢¢ %
set
¢¢& )
;
¢¢) *
}
¢¢+ ,
}
££ 
}§§ ∏]
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\BaseApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

class 
BaseApiController "
:# $
ApiController% 2
{ 
	protected 
List 
< 
JObject 
> 

QueryNinja  *
(* +
	DbContext+ 4
db5 7
,7 8
string9 ?
query@ E
)E F
{ 	
db 
. 
Database 
. 

Connection "
." #
Open# '
(' (
)( )
;) *
var 
cmd 
= 
db 
. 
Database !
.! "

Connection" ,
., -
CreateCommand- :
(: ;
); <
;< =
cmd 
. 
CommandText 
= 
query #
;# $
var 
reader 
= 
cmd 
. 
ExecuteReader *
(* +
)+ ,
;, -
List 
< 
JObject 
> 
items 
=  !
new" %
List& *
<* +
JObject+ 2
>2 3
(3 4
)4 5
;5 6
while   
(   
reader   
.   
Read   
(   
)    
)    !
{!! 
JObject"" 
row"" 
="" 
new"" !
JObject""" )
("") *
)""* +
;""+ ,
for## 
(## 
int## 
i## 
=## 
$num## 
;## 
i##  !
<##" #
reader##$ *
.##* +

FieldCount##+ 5
;##5 6
i##7 8
++##8 :
)##: ;
row$$ 
[$$ 
reader$$ 
.$$ 
GetName$$ &
($$& '
i$$' (
)$$( )
]$$) *
=$$+ ,
reader$$- 3
[$$3 4
i$$4 5
]$$5 6
.$$6 7
ToString$$7 ?
($$? @
)$$@ A
;$$A B
items&& 
.&& 
Add&& 
(&& 
row&& 
)&& 
;&& 
}'' 
db(( 
.(( 
Database(( 
.(( 

Connection(( "
.((" #
Close((# (
(((( )
)(() *
;((* +
return)) 
items)) 
;)) 
}** 	
	protected11 
async11 
Task11 
<11 
string11 #
>11# $
GetExternalResponse11% 8
(118 9
string119 ?
url11@ C
)11C D
{22 	
using33 
(33 
var33 
client33 
=33 
new33  #

HttpClient33$ .
(33. /
)33/ 0
)330 1
{44 
client55 
.55 
Timeout55 
=55  
TimeSpan55! )
.55) *
FromMinutes55* 5
(555 6
$num556 7
)557 8
;558 9
var66 
response66 
=66 
await66 $
client66% +
.66+ ,
GetAsync66, 4
(664 5
url665 8
)668 9
.669 :
Result66: @
.66@ A
Content66A H
.66H I
ReadAsStringAsync66I Z
(66Z [
)66[ \
;66\ ]
return77 
response77 
;77  
}88 
}99 	
	protected?? 
void?? 
ExecuteBatch?? #
(??# $
string??$ *
path??+ /
)??/ 0
{@@ 	
varAA 

mappedPathAA 
=AA 
SystemAA #
.AA# $
WebAA$ '
.AA' (
HostingAA( /
.AA/ 0
HostingEnvironmentAA0 B
.AAB C
MapPathAAC J
(AAJ K
$strAAK O
+AAP Q
pathAAR V
)AAV W
;AAW X
varBB 
procBB 
=BB 
newBB 
SystemBB !
.BB! "
DiagnosticsBB" -
.BB- .
ProcessBB. 5
(BB5 6
)BB6 7
;BB7 8
procDD 
.DD 
	StartInfoDD 
.DD 
UseShellExecuteDD *
=DD+ ,
falseDD- 2
;DD2 3
procEE 
.EE 
	StartInfoEE 
.EE 
CreateNoWindowEE )
=EE* +
falseEE, 1
;EE1 2
procFF 
.FF 
	StartInfoFF 
.FF 
FileNameFF #
=FF$ %

mappedPathFF& 0
;FF0 1
procJJ 
.JJ 
StartJJ 
(JJ 
)JJ 
;JJ 
procKK 
.KK 
WaitForExitKK 
(KK 
)KK 
;KK 
}LL 	
	protectedSS 
CookieHeaderValueSS ##
CreateCookieFromUserDTOSS$ ;
(SS; <
UserDTOSS< C
userDtoSSD K
)SSK L
{TT 	
varUU 
valuesUU 
=UU 
newUU 
NameValueCollectionUU 0
(UU0 1
)UU1 2
;UU2 3
valuesVV 
.VV 
AddVV 
(VV 
$strVV 
,VV  
userDtoVV! (
.VV( )
IdVV) +
.VV+ ,
ToStringVV, 4
(VV4 5
)VV5 6
)VV6 7
;VV7 8
valuesWW 
.WW 
AddWW 
(WW 
$strWW !
,WW! "
userDtoWW# *
.WW* +
NameWW+ /
)WW/ 0
;WW0 1
valuesXX 
.XX 
AddXX 
(XX 
$strXX "
,XX" #
userDtoXX$ +
.XX+ ,
ParCompany_IdXX, 9
.XX9 :
GetValueOrDefaultXX: K
(XXK L
)XXL M
.XXM N
ToStringXXN V
(XXV W
)XXW X
)XXX Y
;XXY Z
ifYY 
(YY 
userDtoYY 
.YY 
	AlterDateYY !
!=YY" $
nullYY% )
)YY) *
valuesZZ 
.ZZ 
AddZZ 
(ZZ 
$strZZ &
,ZZ& '
userDtoZZ( /
.ZZ/ 0
	AlterDateZZ0 9
.ZZ9 :
GetValueOrDefaultZZ: K
(ZZK L
)ZZL M
.ZZM N
ToStringZZN V
(ZZV W
$strZZW c
)ZZc d
)ZZd e
;ZZe f
else[[ 
values\\ 
.\\ 
Add\\ 
(\\ 
$str\\ &
,\\& '
$str\\( *
)\\* +
;\\+ ,
values^^ 
.^^ 
Add^^ 
(^^ 
$str^^  
,^^  !
userDto^^" )
.^^) *
AddDate^^* 1
.^^1 2
ToString^^2 :
(^^: ;
$str^^; G
)^^G H
)^^H I
;^^I J
if`` 
(`` 
userDto`` 
.`` 
Role`` 
!=`` 
null``  $
)``$ %
valuesaa 
.aa 
Addaa 
(aa 
$straa "
,aa" #
userDtoaa$ +
.aa+ ,
Roleaa, 0
.aa0 1
Replaceaa1 8
(aa8 9
$charaa9 <
,aa< =
$charaa> A
)aaA B
.aaB C
ToStringaaC K
(aaK L
)aaL M
)aaM N
;aaN O
elsebb 
valuescc 
.cc 
Addcc 
(cc 
$strcc "
,cc" #
$strcc$ &
)cc& '
;cc' (
ifee 
(ee 
userDtoee 
.ee 
ParCompanyXUserSgqee *
!=ee+ -
nullee. 2
)ee2 3
ifff 
(ff 
userDtoff 
.ff 
ParCompanyXUserSgqff .
.ff. /
Anyff/ 2
(ff2 3
rff3 4
=>ff5 7
rff8 9
.ff9 :
Roleff: >
!=ff? A
nullffB F
)ffF G
)ffG H
valuesgg 
.gg 
Addgg 
(gg 
$strgg -
,gg- .
stringgg/ 5
.gg5 6
Joingg6 :
(gg: ;
$strgg; >
,gg> ?
userDtogg@ G
.ggG H
ParCompanyXUserSgqggH Z
.ggZ [
Selectgg[ a
(gga b
nggb c
=>ggd f
nggg h
.ggh i
Roleggi m
)ggm n
.ggn o
Distinctggo w
(ggw x
)ggx y
.ggy z
ToArray	ggz Å
(
ggÅ Ç
)
ggÇ É
)
ggÉ Ñ
)
ggÑ Ö
;
ggÖ Ü
elsehh 
valuesii 
.ii 
Addii 
(ii 
$strii -
,ii- .
stringii/ 5
.ii5 6
Joinii6 :
(ii: ;
$strii; >
,ii> ?
userDtoii@ G
.iiG H
ParCompanyXUserSgqiiH Z
.iiZ [
Selectii[ a
(iia b
niib c
=>iid f
niig h
.iih i
ParCompany_Idiii v
)iiv w
.iiw x
Distinct	iix Ä
(
iiÄ Å
)
iiÅ Ç
.
iiÇ É
ToArray
iiÉ ä
(
iiä ã
)
iiã å
)
iiå ç
)
iiç é
;
iié è
varll 
cookiell 
=ll 
newll 
CookieHeaderValuell .
(ll. /
$strll/ A
,llA B
valuesllC I
)llI J
;llJ K
cookiemm 
.mm 
MaxAgemm 
=mm 
TimeSpanmm $
.mm$ %
FromMinutesmm% 0
(mm0 1
$nummm1 3
)mm3 4
;mm4 5
cookienn 
.nn 
Pathnn 
=nn 
$strnn 
;nn 
returnpp 
cookiepp 
;pp 
}qq 	
	protectedss 
objectss 
	ToDynamicss "
(ss" #
stringss# )
valuess* /
)ss/ 0
{tt 	
varuu 
settingsuu 
=uu 
newuu 

Newtonsoftuu )
.uu) *
Jsonuu* .
.uu. /"
JsonSerializerSettingsuu/ E
{vv !
ReferenceLoopHandlingww %
=ww& '

Newtonsoftww( 2
.ww2 3
Jsonww3 7
.ww7 8!
ReferenceLoopHandlingww8 M
.wwM N
IgnorewwN T
}xx 
;xx 
returnzz 

Newtonsoftzz 
.zz 
Jsonzz "
.zz" #
JsonConvertzz# .
.zz. /
DeserializeObjectzz/ @
(zz@ A
valuezzA F
,zzF G
settingszzH P
)zzP Q
;zzQ R
}{{ 	
	protected}} 
string}} 
ToJson}} 
(}}  
object}}  &
value}}' ,
)}}, -
{~~ 	
var 
settings 
= 
new 

Newtonsoft )
.) *
Json* .
.. /"
JsonSerializerSettings/ E
{
ÄÄ #
ReferenceLoopHandling
ÅÅ %
=
ÅÅ& '

Newtonsoft
ÅÅ( 2
.
ÅÅ2 3
Json
ÅÅ3 7
.
ÅÅ7 8#
ReferenceLoopHandling
ÅÅ8 M
.
ÅÅM N
Ignore
ÅÅN T
}
ÇÇ 
;
ÇÇ 
return
ÑÑ 

Newtonsoft
ÑÑ 
.
ÑÑ 
Json
ÑÑ "
.
ÑÑ" #
JsonConvert
ÑÑ# .
.
ÑÑ. /
SerializeObject
ÑÑ/ >
(
ÑÑ> ?
value
ÑÑ? D
,
ÑÑD E

Newtonsoft
ÑÑF P
.
ÑÑP Q
Json
ÑÑQ U
.
ÑÑU V

Formatting
ÑÑV `
.
ÑÑ` a
Indented
ÑÑa i
,
ÑÑi j
settings
ÑÑk s
)
ÑÑs t
;
ÑÑt u
}
ÖÖ 	
}
áá 
}àà ∞\
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\CorrectActApiController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
{ 
[ 
RoutePrefix 
( 
$str '
)' (
]( )
public 

class #
CorrectActApiController (
:) *
ApiController+ 8
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public #
CorrectActApiController &
(& '
)' (
{ 	
db 
. 
Configuration 
.  
ProxyCreationEnabled 1
=2 3
false4 9
;9 :
} 	
[ 	
Route	 
( 
$str $
)$ %
]% &
[ 	
HttpPost	 
] 
public 
List 
< 
CorrectiveActionDTO '
>' (
GetCorrectiveAction) <
(< =
[= >
FromBody> F
]F G,
 FormularioParaRelatorioViewModelG g
modelh m
)m n
{ 	
var 
sql 
= 
$str 
+  !
$str -
+. /
$str =
+> ?
$str =
+> ?
$str @
+A B
$str   C
+  D E
$str!! 8
+!!9 :
$str"" 8
+""9 :
$str$$ %
+$$& '
$str%% &
+%%' (
$str&& ,
+&&- .
$str'' .
+''/ 0
$str(( (
+(() *
$str)) "
+))# $
$str** &
+**' (
$str++ "
+++# $
$str,, -
+,,. /
$str-- &
+--' (
$str.. '
+..( )
$str// '
+//( )
$str00 &
+00' (
$str22 (
+22) *
$str44 l
+44m n
$str55 f
+55g h
$str66 l
+66m n
$str77 o
+77p q
$str88 W
+88X Y
$str99 W
+99X Y
$str;; 
+;; 
$str== >
+==? @
model==A F
.==F G
_dataInicioSQL==G U
+==V W
$str==X a
+==b c
model==d i
.==i j
_dataFimSQL==j u
+==v w
$str==x |
;==| }
if?? 
(?? 
model?? 
.?? 
unitId?? 
>?? 
$num??  
)??  !
{@@ 
sqlAA 
+=AA 
$strAA ;
+AA< =
modelAA> C
.AAC D
unitIdAAD J
+AAK L
$strAAM P
;AAP Q
}BB 
ifDD 
(DD 
modelDD 
.DD 
shiftDD 
>DD 
$numDD 
)DD  
{EE 
sqlFF 
+=FF 
$strFF <
+FF= >
modelFF? D
.FFD E
shiftFFE J
+FFK L
$strFFM P
;FFP Q
}GG 
ifII 
(II 
modelII 
.II 
periodII 
>II 
$numII  
)II  !
{JJ 
sqlKK 
+=KK 
$strKK ;
+KK< =
modelKK> C
.KKC D
periodKKD J
+KKK L
$strKKM P
;KKP Q
}LL 
ifNN 
(NN 
modelNN 
.NN 
	auditorIdNN 
>NN  !
$numNN" #
)NN# $
{OO 
sqlPP 
+=PP 
$strPP >
+PP? @
modelPPA F
.PPF G
	auditorIdPPG P
+PPQ R
$strPPS U
;PPU V
}QQ 
varSS 
dadosSS 
=SS 
dbSS 
.SS 
DatabaseSS #
.SS# $
SqlQuerySS$ ,
<SS, -
CorrectiveActionDTOSS- @
>SS@ A
(SSA B
sqlSSB E
)SSE F
.SSF G
ToListSSG M
(SSM N
)SSN O
;SSO P
return
àà 
dados
àà 
;
àà 
}
ââ 	
[
ãã 	
Route
ãã	 
(
ãã 
$str
ãã (
)
ãã( )
]
ãã) *
[
åå 	
HttpPost
åå	 
]
åå 
public
çç !
CorrectiveActionDTO
çç "%
GetCorrectiveActionById
çç# :
(
çç: ;
[
çç; <
FromBody
çç< D
]
ççD E
int
ççE H
id
ççI K
)
ççK L
{
éé 	
int
èè 
leve1Id
èè 
=
èè 
$num
èè 
;
èè 
int
êê 
leve2Id
êê 
=
êê 
$num
êê 
;
êê 
Shift
ëë 
shift
ëë 
=
ëë 
new
ëë 
Shift
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
Period
íí 
period
íí 
=
íí 
new
íí 
Period
íí  &
(
íí& '
)
íí' (
;
íí( )
CorrectiveAction
îî 
obj
îî  
=
îî! "
db
îî# %
.
îî% &
CorrectiveAction
îî& 6
.
îî6 7
Where
îî7 <
(
îî< =
r
îî= >
=>
îî? A
r
îîB C
.
îîC D
Id
îîD F
==
îîG I
id
îîJ L
)
îîL M
.
îîM N
FirstOrDefault
îîN \
(
îî\ ]
)
îî] ^
;
îî^ _!
CorrectiveActionDTO
ïï 
obj2
ïï  $
=
ïï% &
Mapper
ïï' -
.
ïï- .
Map
ïï. 1
<
ïï1 2
CorrectiveAction
ïï2 B
,
ïïB C!
CorrectiveActionDTO
ïïD W
>
ïïW X
(
ïïX Y
obj
ïïY \
)
ïï\ ]
;
ïï] ^
obj2
ññ 
.
ññ 
AuditorName
ññ 
=
ññ 
db
ññ !
.
ññ! "
UserSgq
ññ" )
.
ññ) *
Where
ññ* /
(
ññ/ 0
r
ññ0 1
=>
ññ2 4
r
ññ5 6
.
ññ6 7
Id
ññ7 9
==
ññ: <
obj
ññ= @
.
ññ@ A
	AuditorId
ññA J
)
ññJ K
.
ññK L
FirstOrDefault
ññL Z
(
ññZ [
)
ññ[ \
.
ññ\ ]
Name
ññ] a
;
ñña b
obj2
óó 
.
óó 
NameSlaughter
óó 
=
óó  
db
óó! #
.
óó# $
UserSgq
óó$ +
.
óó+ ,
Where
óó, 1
(
óó1 2
r
óó2 3
=>
óó4 6
r
óó7 8
.
óó8 9
Id
óó9 ;
==
óó< >
obj
óó? B
.
óóB C
SlaughterId
óóC N
)
óóN O
.
óóO P
FirstOrDefault
óóP ^
(
óó^ _
)
óó_ `
.
óó` a
Name
óóa e
;
óóe f
obj2
òò 
.
òò 
NameTechinical
òò 
=
òò  !
db
òò" $
.
òò$ %
UserSgq
òò% ,
.
òò, -
Where
òò- 2
(
òò2 3
r
òò3 4
=>
òò5 7
r
òò8 9
.
òò9 :
Id
òò: <
==
òò= ?
obj
òò@ C
.
òòC D
TechinicalId
òòD P
)
òòP Q
.
òòQ R
FirstOrDefault
òòR `
(
òò` a
)
òòa b
.
òòb c
Name
òòc g
;
òòg h
leve1Id
öö 
=
öö 
db
öö 
.
öö 
CollectionLevel2
öö )
.
öö) *
Where
öö* /
(
öö/ 0
r
öö0 1
=>
öö2 4
r
öö5 6
.
öö6 7
Id
öö7 9
==
öö: <
obj
öö= @
.
öö@ A!
CollectionLevel02Id
ööA T
)
ööT U
.
ööU V
FirstOrDefault
ööV d
(
ööd e
)
ööe f
.
ööf g
ParLevel1_Id
öög s
;
öös t
leve2Id
õõ 
=
õõ 
db
õõ 
.
õõ 
CollectionLevel2
õõ )
.
õõ) *
Where
õõ* /
(
õõ/ 0
r
õõ0 1
=>
õõ2 4
r
õõ5 6
.
õõ6 7
Id
õõ7 9
==
õõ: <
obj
õõ= @
.
õõ@ A!
CollectionLevel02Id
õõA T
)
õõT U
.
õõU V
FirstOrDefault
õõV d
(
õõd e
)
õõe f
.
õõf g
ParLevel2_Id
õõg s
;
õõs t
obj2
ùù 
.
ùù 
level01Name
ùù 
=
ùù 
db
ùù !
.
ùù! "
	ParLevel1
ùù" +
.
ùù+ ,
Where
ùù, 1
(
ùù1 2
r
ùù2 3
=>
ùù4 6
r
ùù7 8
.
ùù8 9
Id
ùù9 ;
==
ùù< >
leve1Id
ùù? F
)
ùùF G
.
ùùG H
FirstOrDefault
ùùH V
(
ùùV W
)
ùùW X
.
ùùX Y
Name
ùùY ]
;
ùù] ^
obj2
ûû 
.
ûû 
level02Name
ûû 
=
ûû 
db
ûû !
.
ûû! "
	ParLevel2
ûû" +
.
ûû+ ,
Where
ûû, 1
(
ûû1 2
r
ûû2 3
=>
ûû4 6
r
ûû7 8
.
ûû8 9
Id
ûû9 ;
==
ûû< >
leve2Id
ûû? F
)
ûûF G
.
ûûG H
FirstOrDefault
ûûH V
(
ûûV W
)
ûûW X
.
ûûX Y
Name
ûûY ]
;
ûû] ^
var
†† 
level2
†† 
=
†† 
db
†† 
.
†† 
CollectionLevel2
†† ,
.
††, -
Where
††- 2
(
††2 3
r
††3 4
=>
††5 7
r
††8 9
.
††9 :
Id
††: <
==
††= ?
obj
††@ C
.
††C D!
CollectionLevel02Id
††D W
)
††W X
.
††X Y
FirstOrDefault
††Y g
(
††g h
)
††h i
;
††i j
var
°° 
pc
°° 
=
°° 
db
°° 
.
°° 

ParCompany
°° "
.
°°" #
Where
°°# (
(
°°( )
r
°°) *
=>
°°+ -
r
°°. /
.
°°/ 0
Id
°°0 2
==
°°3 5
level2
°°6 <
.
°°< =
UnitId
°°= C
)
°°C D
.
°°D E
FirstOrDefault
°°E S
(
°°S T
)
°°T U
;
°°U V
obj2
££ 
.
££ 
	ShiftName
££ 
=
££ 
level2
££ #
.
££# $
Shift
££$ )
.
££) *
ToString
££* 2
(
££2 3
)
££3 4
;
££4 5
obj2
§§ 
.
§§ 

PeriodName
§§ 
=
§§ 
level2
§§ $
.
§§$ %
Period
§§% +
.
§§+ ,
ToString
§§, 4
(
§§4 5
)
§§5 6
;
§§6 7
Unit
¡¡ 
unit
¡¡ 
=
¡¡ 
new
¡¡ 
Unit
¡¡  
(
¡¡  !
)
¡¡! "
;
¡¡" #
unit
¬¬ 
.
¬¬ 
Code
¬¬ 
=
¬¬ 
pc
¬¬ 
.
¬¬ 
SIF
¬¬ 
;
¬¬ 
unit
√√ 
.
√√ 
Name
√√ 
=
√√ 
pc
√√ 
.
√√ 
Name
√√ 
;
√√  
UnitDTO
ƒƒ 
unitDto
ƒƒ 
=
ƒƒ 
Mapper
ƒƒ $
.
ƒƒ$ %
Map
ƒƒ% (
<
ƒƒ( )
Unit
ƒƒ) -
,
ƒƒ- .
UnitDTO
ƒƒ/ 6
>
ƒƒ6 7
(
ƒƒ7 8
unit
ƒƒ8 <
)
ƒƒ< =
;
ƒƒ= >
obj2
∆∆ 
.
∆∆ 
Unit
∆∆ 
=
∆∆ 
unitDto
∆∆ 
;
∆∆  
return
»» 
obj2
»» 
;
»» 
}
…… 	
}
ÀÀ 
}ÃÃ î
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\DefectApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[		 
	HandleApi		 
(		 
)		 
]		 
[

 
RoutePrefix

 
(

 
$str

 
)

 
]

 
public 

class 
DefectApiController $
:% &
ApiController' 4
{ 
private 
IDefectDomain 
_defectDomain +
;+ ,
public 
DefectApiController "
(" #
IDefectDomain# 0
defectDomain1 =
)= >
{ 	
_defectDomain 
= 
defectDomain (
;( )
} 	
[ 	
Route	 
( 
$str 
) 
] 
[ 	
HttpPost	 
] 
public 
void 
MergeDefect 
(  
List  $
<$ %
	DefectDTO% .
>. /
listDefectDTO0 =
)= >
{ 	
_defectDomain 
. 
MergeDefect $
($ %
listDefectDTO% 2
)2 3
;3 4
}   	
["" 	
Route""	 
("" 
$str"" 
)"" 
]"" 
[## 	
HttpGet##	 
]## 
public$$ 
List$$ 
<$$ 
	DefectDTO$$ 
>$$ 

GetDefects$$ )
($$) *
int$$* -
parCompany_Id$$. ;
)$$; <
{%% 	
return&& 
_defectDomain&&  
.&&  !

GetDefects&&! +
(&&+ ,
parCompany_Id&&, 9
)&&9 :
;&&: ;
}'' 	
}** 
}++ ©
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\HangFireServicesController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
{ 
[ 
RoutePrefix 
( 
$str 
) 
] 
public 

class &
HangFireServicesController +
:, -
ApiController. ;
{ 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
)  
]  !
public 
void 
Reconsolidacao "
(" #
)# $
{ 	
SimpleAsynchronous 
. 
ResendProcessJson 0
(0 1
)1 2
;2 3
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public   
void   
SendMail   
(   
)   
{!! 	
if"" 
("" 
GlobalConfig"" 
."" 
Brasil"" #
)""# $
{## 
SimpleAsynchronous$$ "
.$$" #'
SendMailFromDeviationSgqApp$$# >
($$> ?
)$$? @
;$$@ A
}%% 
else&& 
if&& 
(&& 
GlobalConfig&& !
.&&! "
Eua&&" %
)&&% &
{'' !
SimpleAsynchronousUSA(( %
.((% &
SendMailUSA((& 1
(((1 2
)((2 3
;((3 4
})) 
}** 	
}++ 
},, Í©
qC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Recravacao\RecravacaoLinhaApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

class (
RecravacaoLinhaApiController -
:. /
BaseApiController0 A
{ 
private 
SgqDbDevEntities  
db! #
;# $
private 
List 
< 
string 
> 
errors #
;# $
private 
string 
mensagemSucesso &
;& '
private 
IParamsDomain 
_paramDomain *
;* +
public (
RecravacaoLinhaApiController +
(+ ,
IParamsDomain, 9
paramDomain: E
)E F
{ 	
_paramDomain 
= 
paramDomain &
;& '
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
errors 
= 
new 
List 
< 
string $
>$ %
(% &
)& '
;' (
mensagemSucesso 
= 
string $
.$ %
Empty% *
;* +
} 	
public 
HttpResponseMessage "
Get# &
(& '
int' *
Company+ 2
,2 3
int4 7
level1Id8 @
,@ A
intB E
linhaIdF M
)M N
{ 	
db 
. 
Configuration 
. 
LazyLoadingEnabled /
=0 1
false2 7
;7 8
db   
.   
Configuration   
.   !
ValidateOnSaveEnabled   2
=  3 4
false  5 :
;  : ;
db!! 
.!! 
Configuration!! 
.!!  
ProxyCreationEnabled!! 1
=!!2 3
false!!4 9
;!!9 :
db"" 
."" 
Configuration"" 
."" $
AutoDetectChangesEnabled"" 5
=""6 7
false""8 =
;""= >
var$$ 

parcompany$$ 
=$$ 
Company$$ $
;$$$ %
var%% 
paramsFromRequest%% !
=%%" #
	ToDynamic%%$ -
(%%- .
Request%%. 5
.%%5 6
Content%%6 =
.%%= >
ReadAsStringAsync%%> O
(%%O P
)%%P Q
.%%Q R
Result%%R X
)%%X Y
;%%Y Z
if'' 
('' 
level1Id'' 
<='' 
$num'' 
)'' 
{(( 
var)) 

level1List)) 
=))  
db))! #
.))# $
	ParLevel1))$ -
.))- .
Where)). 3
())3 4
r))4 5
=>))6 8
r))9 :
.)): ;
IsActive)); C
&&))D F
r))G H
.))H I
IsRecravacao))I U
==))V X
true))Y ]
)))] ^
.))^ _
ToList))_ e
())e f
)))f g
;))g h
return** 
Request** 
.** 
CreateResponse** -
(**- .
HttpStatusCode**. <
.**< =
OK**= ?
,**? @
new**A D
{**E F
resposta**G O
=**P Q
$str**R r
,**r s
model**t y
=**z {

level1List	**| Ü
}
**á à
)
**à â
;
**â ä
}++ 
else,, 
{-- 
var.. 
query.. 
=.. 
string.. "
..." #
Format..# )
(..) *
$str	.0* ã
,
00ã å
Company
00ç î
,
00î ï
level1Id
00ñ û
)
00û ü
;
00ü †
var11 
listLinhasDoLevel111 &
=11' (

QueryNinja11) 3
(113 4
db114 6
,116 7
query118 =
)11= >
.11> ?
ToList11? E
(11E F
)11F G
;11G H
return22 
Request22 
.22 
CreateResponse22 -
(22- .
HttpStatusCode22. <
.22< =
OK22= ?
,22? @
new22A D
{22E F
resposta22G O
=22P Q
$str22R m
,22m n
model22o t
=22u v
listLinhasDoLevel1	22w â
}
22ä ã
)
22ã å
;
22å ç
}33 
}77 	
public:: 
HttpResponseMessage:: "
Post::# '
(::' (

Newtonsoft::( 2
.::2 3
Json::3 7
.::7 8
Linq::8 <
.::< =
JObject::= D
Company::E L
)::L M
{;; 	
db<< 
.<< 
Configuration<< 
.<< 
LazyLoadingEnabled<< /
=<<0 1
false<<2 7
;<<7 8
db== 
.== 
Configuration== 
.== !
ValidateOnSaveEnabled== 2
===3 4
false==5 :
;==: ;
db>> 
.>> 
Configuration>> 
.>>  
ProxyCreationEnabled>> 1
=>>2 3
false>>4 9
;>>9 :
db?? 
.?? 
Configuration?? 
.?? $
AutoDetectChangesEnabled?? 5
=??6 7
false??8 =
;??= >
var@@ 
id@@ 
=@@ 
Company@@ 
[@@ 
$str@@ !
]@@! "
.@@" #
ToString@@# +
(@@+ ,
)@@, -
;@@- .
varAA 
parlevel1_idsAA 
=AA 
dbAA  "
.AA" #
DatabaseAA# +
.AA+ ,
SqlQueryAA, 4
<AA4 5
ParLevel1DTOAA5 A
>AAA B
(AAB C
$strAAC z
)AAz {
.AA{ |
ToList	AA| Ç
(
AAÇ É
)
AAÉ Ñ
;
AAÑ Ö
varBB 
parlevel2_IdBB 
=BB 
CompanyBB &
[BB& '
$strBB' 5
]BB5 6
.BB6 7
ToStringBB7 ?
(BB? @
)BB@ A
;BBA B
varCC 

parcompanyCC 
=CC 
CompanyCC $
[CC$ %
$strCC% 4
]CC4 5
.CC5 6
ToStringCC6 >
(CC> ?
)CC? @
;CC@ A
varDD 
queryDD 
=DD 
stringDD 
.DD 
FormatDD %
(DD% &
$str	DD& ê
,
DDê ë

parcompany
DDí ú
,
DDú ù
id
DDû †
)
DD† °
;
DD° ¢
varEE 
resultsEE 
=EE 

QueryNinjaEE $
(EE$ %
dbEE% '
,EE' (
queryEE) .
)EE. /
.EE/ 0
ToListEE0 6
(EE6 7
)EE7 8
;EE8 9
varFF 
queryTipoLataFF 
=FF 
$strFF  f
;FFf g
varGG 
	level1IdsGG 
=GG 
stringGG "
.GG" #
JoinGG# '
(GG' (
$strGG( +
,GG+ ,
parlevel1_idsGG- :
.GG: ;
SelectGG; A
(GGA B
rGGB C
=>GGD F
rGGG H
.GGH I
IdGGI K
)GGK L
.GGL M
ToListGGM S
(GGS T
)GGT U
)GGU V
;GGV W
foreachII 
(II 
varII 
iII 
inII 
resultsII %
)II% &
{JJ 
intKK 
idLataKK 
=KK 
intKK  
.KK  !
ParseKK! &
(KK& '
iKK' (
[KK( )
$strKK) -
]KK- .
.KK. /
ToStringKK/ 7
(KK7 8
)KK8 9
)KK9 :
;KK: ;
intLL %
parRecravacao_TypeLata_IdLL -
=LL. /
intLL0 3
.LL3 4
ParseLL4 9
(LL9 :
iLL: ;
[LL; <
$strLL< W
]LLW X
.LLX Y
ToStringLLY a
(LLa b
)LLb c
)LLc d
;LLd e
varMM 

tipoDeLAtaMM 
=MM  

QueryNinjaMM! +
(MM+ ,
dbMM, .
,MM. /
stringMM0 6
.MM6 7
FormatMM7 =
(MM= >
queryTipoLataMM> K
,MMK L%
parRecravacao_TypeLata_IdMMM f
)MMf g
)MMg h
.MMh i
FirstOrDefaultMMi w
(MMw x
)MMx y
;MMy z
iNN 
[NN 
$strNN 
]NN 
=NN  !

tipoDeLAtaNN" ,
;NN, -
varOO 
queryVinculoLevel21OO '
=OO( )
stringOO* 0
.OO0 1
FormatOO1 7
(OO7 8
$str	OO8 ≥
,
OO≥ ¥
	level1Ids
OOµ æ
,
OOæ ø
parlevel2_Id
OO¿ Ã
,
OOÃ Õ

parcompany
OOŒ ÿ
)
OOÿ Ÿ
;
OOŸ ⁄
varPP 
queryVinculoLevel32PP '
=PP( )
stringPP* 0
.PP0 1
FormatPP1 7
(PP7 8
$str	PP8 ô
,
PPô ö
parlevel2_Id
PPõ ß
,
PPß ®

parcompany
PP© ≥
)
PP≥ ¥
;
PP¥ µ
varQQ  
queryVinculoLevel321QQ (
=QQ) *
stringQQ+ 1
.QQ1 2
FormatQQ2 8
(QQ8 9
$str	QQ9 ˜
,
QQ˜ ¯
	level1Ids
QQ˘ Ç
,
QQÇ É
parlevel2_Id
QQÑ ê
,
QQê ë

parcompany
QQí ú
)
QQú ù
;
QQù û
varRR 
hasVinculoLevel21RR %
=RR& '

QueryNinjaRR( 2
(RR2 3
dbRR3 5
,RR5 6
queryVinculoLevel21RR7 J
)RRJ K
;RRK L
varSS 
hasVinculoLevel32SS %
=SS& '

QueryNinjaSS( 2
(SS2 3
dbSS3 5
,SS5 6
queryVinculoLevel32SS7 J
)SSJ K
;SSK L
varTT 
hasVinculoLevel321TT &
=TT' (

QueryNinjaTT) 3
(TT3 4
dbTT4 6
,TT6 7 
queryVinculoLevel321TT8 L
)TTL M
;TTM N
varUU 
listaLevel3UU 
=UU  !
newUU" %
ListUU& *
<UU* +
ParLevel3DTOUU+ 7
>UU7 8
(UU8 9
)UU9 :
;UU: ;
ifWW 
(WW 
hasVinculoLevel21WW %
.WW% &
CountWW& +
(WW+ ,
)WW, -
>WW. /
$numWW0 1
&&WW2 4
hasVinculoLevel321WW5 G
.WWG H
CountWWH M
(WWM N
)WWN O
>WWP Q
$numWWR S
&&WWT V
hasVinculoLevel32WWW h
.WWh i
CountWWi n
(WWn o
)WWo p
>WWq r
$numWWs t
)WWt u
foreachXX 
(XX 
varXX  
vinculoLevel32XX! /
inXX0 2
hasVinculoLevel32XX3 D
)XXD E"
AdicionaParLevel3ALataYY .
(YY. /

parcompanyYY/ 9
,YY9 :
listaLevel3YY; F
,YYF G
vinculoLevel32YYH V
)YYV W
;YYW X
queryVinculoLevel21[[ #
=[[$ %
string[[& ,
.[[, -
Format[[- 3
([[3 4
$str	[[4 ∫
,
[[∫ ª
	level1Ids
[[º ≈
,
[[≈ ∆
parlevel2_Id
[[« ”
,
[[” ‘

parcompany
[[’ ﬂ
)
[[ﬂ ‡
;
[[‡ ·
queryVinculoLevel32\\ #
=\\$ %
string\\& ,
.\\, -
Format\\- 3
(\\3 4
$str\b4 
,bb 
parlevel2_Idbb #
,bb# $

parcompanybb% /
)bb/ 0
;bb0 1 
queryVinculoLevel321cc $
=cc% &
stringcc' -
.cc- .
Formatcc. 4
(cc4 5
$strck5 
,kk 
	level1Idskk  
,kk  !
parlevel2_Idkk" .
,kk. /

parcompanykk0 :
)kk: ;
;kk; <
varmm )
hasVinculoLevel21TodasUnidademm 1
=mm2 3

QueryNinjamm4 >
(mm> ?
dbmm? A
,mmA B
queryVinculoLevel21mmC V
)mmV W
;mmW X
varnn )
hasVinculoLevel32TodasUnidadenn 1
=nn2 3

QueryNinjann4 >
(nn> ?
dbnn? A
,nnA B
queryVinculoLevel32nnC V
)nnV W
;nnW X
varoo *
hasVinculoLevel321TodasUnidadeoo 2
=oo3 4

QueryNinjaoo5 ?
(oo? @
dboo@ B
,ooB C 
queryVinculoLevel321ooD X
)ooX Y
;ooY Z
ifqq 
(qq )
hasVinculoLevel21TodasUnidadeqq 1
.qq1 2
Countqq2 7
(qq7 8
)qq8 9
>qq: ;
$numqq< =
&&qq> @)
hasVinculoLevel32TodasUnidadeqqA ^
.qq^ _
Countqq_ d
(qqd e
)qqe f
>qqg h
$numqqi j
&&qqk m+
hasVinculoLevel321TodasUnidade	qqn å
.
qqå ç
Count
qqç í
(
qqí ì
)
qqì î
>
qqï ñ
$num
qqó ò
)
qqò ô
foreachrr 
(rr 
varrr  &
vinculoLevel32TodaUnidadesrr! ;
inrr< >)
hasVinculoLevel32TodasUnidaderr? \
)rr\ ]"
AdicionaParLevel3ALatass .
(ss. /

parcompanyss/ 9
,ss9 :
listaLevel3ss; F
,ssF G&
vinculoLevel32TodaUnidadesssH b
)ssb c
;ssc d
iuu 
[uu 
$struu !
]uu! "
=uu# $

Newtonsoftuu% /
.uu/ 0
Jsonuu0 4
.uu4 5
Linquu5 9
.uu9 :
JTokenuu: @
.uu@ A

FromObjectuuA K
(uuK L
listaLevel3uuL W
,uuW X
newuuY \

Newtonsoftuu] g
.uug h
Jsonuuh l
.uul m
JsonSerializeruum {
{uu| }"
ReferenceLoopHandling	uu~ ì
=
uuî ï

Newtonsoft
uuñ †
.
uu† °
Json
uu° •
.
uu• ¶#
ReferenceLoopHandling
uu¶ ª
.
uuª º
Ignore
uuº ¬
}
uu√ ƒ
)
uuƒ ≈
;
uu≈ ∆
}vv 
returnxx 
Requestxx 
.xx 
CreateResponsexx )
(xx) *
HttpStatusCodexx* 8
.xx8 9
OKxx9 ;
,xx; <
newxx= @
{xxA B
respostaxxC K
=xxL M
$strxxN i
,xxi j
modelxxk p
=xxq r
resultsxxs z
}xx{ |
)xx| }
;xx} ~
}yy 	
private{{ 
void{{ "
AdicionaParLevel3ALata{{ +
({{+ ,
string{{, 2

parcompany{{3 =
,{{= >
List{{? C
<{{C D
ParLevel3DTO{{D P
>{{P Q
listaLevel3{{R ]
,{{] ^

Newtonsoft{{_ i
.{{i j
Json{{j n
.{{n o
Linq{{o s
.{{s t
JObject{{t {
vinculoLevel32	{{| ä
)
{{ä ã
{|| 	
var}} 
idLevel3}} 
=}} 
int}} 
.}} 
Parse}} $
(}}$ %
vinculoLevel32}}% 3
[}}3 4
$str}}4 B
]}}B C
.}}C D
ToString}}D L
(}}L M
)}}M N
)}}N O
;}}O P
var~~ 
level3~~ 
=~~ 
db~~ 
.~~ 
	ParLevel3~~ %
.~~% &
Include~~& -
(~~- .
$str~~. >
)~~> ?
.~~? @
Include~~@ G
(~~G H
$str~~H k
)~~k l
.~~l m
Include~~m t
(~~t u
$str	~~u ò
)
~~ò ô
.
~~ô ö
Include
~~ö °
(
~~° ¢
$str
~~¢ ƒ
)
~~ƒ ≈
.
~~≈ ∆
FirstOrDefault
~~∆ ‘
(
~~‘ ’
r
~~’ ÷
=>
~~◊ Ÿ
r
~~⁄ €
.
~~€ ‹
Id
~~‹ ﬁ
==
~~ﬂ ·
idLevel3
~~‚ Í
)
~~Í Î
;
~~Î Ï
while
ÄÄ 
(
ÄÄ 
level3
ÄÄ 
.
ÄÄ 
ParLevel3Value
ÄÄ (
.
ÄÄ( )
Any
ÄÄ) ,
(
ÄÄ, -
r
ÄÄ- .
=>
ÄÄ/ 1
!
ÄÄ2 3
r
ÄÄ3 4
.
ÄÄ4 5
IsActive
ÄÄ5 =
)
ÄÄ= >
)
ÄÄ> ?
level3
ÅÅ 
.
ÅÅ 
ParLevel3Value
ÅÅ %
.
ÅÅ% &
Remove
ÅÅ& ,
(
ÅÅ, -
level3
ÅÅ- 3
.
ÅÅ3 4
ParLevel3Value
ÅÅ4 B
.
ÅÅB C
FirstOrDefault
ÅÅC Q
(
ÅÅQ R
r
ÅÅR S
=>
ÅÅT V
!
ÅÅW X
r
ÅÅX Y
.
ÅÅY Z
IsActive
ÅÅZ b
)
ÅÅb c
)
ÅÅc d
;
ÅÅd e
var
ÉÉ 
	level3Dto
ÉÉ 
=
ÉÉ 
Mapper
ÉÉ "
.
ÉÉ" #
Map
ÉÉ# &
<
ÉÉ& '
ParLevel3DTO
ÉÉ' 3
>
ÉÉ3 4
(
ÉÉ4 5
level3
ÉÉ5 ;
)
ÉÉ; <
;
ÉÉ< =
var
ÑÑ 
	pointLess
ÑÑ 
=
ÑÑ 
db
ÑÑ 
.
ÑÑ 
Database
ÑÑ '
.
ÑÑ' (
SqlQuery
ÑÑ( 0
<
ÑÑ0 1
bool
ÑÑ1 5
>
ÑÑ5 6
(
ÑÑ6 7
string
ÑÑ7 =
.
ÑÑ= >
Format
ÑÑ> D
(
ÑÑD E
$str
ÑÑE w
,
ÑÑw x
	level3DtoÑÑy Ç
.ÑÑÇ É
IdÑÑÉ Ö
)ÑÑÖ Ü
)ÑÑÜ á
.ÑÑá à
FirstOrDefaultÑÑà ñ
(ÑÑñ ó
)ÑÑó ò
;ÑÑò ô
var
ÜÜ 
AllowNA
ÜÜ 
=
ÜÜ 
db
ÜÜ 
.
ÜÜ 
Database
ÜÜ %
.
ÜÜ% &
SqlQuery
ÜÜ& .
<
ÜÜ. /
bool
ÜÜ/ 3
>
ÜÜ3 4
(
ÜÜ4 5
string
ÜÜ5 ;
.
ÜÜ; <
Format
ÜÜ< B
(
ÜÜB C
$str
ÜÜC q
,
ÜÜq r
level3
ÜÜs y
.
ÜÜy z
Id
ÜÜz |
)
ÜÜ| }
)
ÜÜ} ~
.
ÜÜ~ 
FirstOrDefaultÜÜ ç
(ÜÜç é
)ÜÜé è
;ÜÜè ê
	level3Dto
áá 
.
áá 
AllowNA
áá 
=
áá 
AllowNA
áá  '
;
áá' (
	level3Dto
ââ 
.
ââ 
IsPointLess
ââ !
=
ââ" #
	pointLess
ââ$ -
;
ââ- .
var
ää !
valueCampoCalcOutro
ää #
=
ää$ %
db
ää& (
.
ää( )
Database
ää) 1
.
ää1 2
SqlQuery
ää2 :
<
ää: ;)
ParLevel3Value_OuterListDTO
ää; V
>
ääV W
(
ääW X
string
ääX ^
.
ää^ _
Format
ää_ e
(
ääe f
$strääf È
,ääÈ Í
level3ääÎ Ò
.ääÒ Ú
IdääÚ Ù
,ääÙ ı

parcompanyääˆ Ä
)ääÄ Å
)ääÅ Ç
.ääÇ É
ToListääÉ â
(ääâ ä
)äää ã
;ääã å
	level3Dto
åå 
.
åå &
ParLevel3Value_OuterList
åå .
=
åå/ 0!
valueCampoCalcOutro
åå1 D
;
ååD E
	level3Dto
çç 
.
çç -
ParLevel3Value_OuterListGrouped
çç 5
=
çç6 7!
valueCampoCalcOutro
çç8 K
.
ççK L
GroupBy
ççL S
(
ççS T
r
ççT U
=>
ççV X
r
ççY Z
.
ççZ [
ParCompany_Id
çç[ h
)
ççh i
;
ççi j
foreach
èè 
(
èè 
var
èè 
bin
èè 
in
èè 
level3
èè  &
.
èè& '
ParLevel3Value
èè' 5
)
èè5 6
{
êê 
if
ëë 
(
ëë 
bin
ëë 
.
ëë "
ParLevel3BoolTrue_Id
ëë ,
>
ëë- .
$num
ëë/ 0
&&
ëë1 3
bin
ëë4 7
.
ëë7 8
ParLevel3BoolTrue
ëë8 I
!=
ëëJ L
null
ëëM Q
)
ëëQ R
	level3Dto
íí 
.
íí 
ParLevel3Value
íí ,
.
íí, -
FirstOrDefault
íí- ;
(
íí; <
r
íí< =
=>
íí> @
r
ííA B
.
ííB C
Id
ííC E
==
ííF H
bin
ííI L
.
ííL M
Id
ííM O
)
ííO P
.
ííP Q
ParLevel3BoolTrue
ííQ b
=
ííc d
Mapper
ííe k
.
íík l
Map
ííl o
<
íío p#
ParLevel3BoolTrueDTOííp Ñ
>ííÑ Ö
(ííÖ Ü
binííÜ â
.ííâ ä!
ParLevel3BoolTrueííä õ
)ííõ ú
;ííú ù
if
ìì 
(
ìì 
bin
ìì 
.
ìì #
ParLevel3BoolFalse_Id
ìì -
>
ìì. /
$num
ìì0 1
&&
ìì2 4
bin
ìì5 8
.
ìì8 9 
ParLevel3BoolFalse
ìì9 K
!=
ììL N
null
ììO S
)
ììS T
	level3Dto
îî 
.
îî 
ParLevel3Value
îî ,
.
îî, -
FirstOrDefault
îî- ;
(
îî; <
r
îî< =
=>
îî> @
r
îîA B
.
îîB C
Id
îîC E
==
îîF H
bin
îîI L
.
îîL M
Id
îîM O
)
îîO P
.
îîP Q 
ParLevel3BoolFalse
îîQ c
=
îîd e
Mapper
îîf l
.
îîl m
Map
îîm p
<
îîp q$
ParLevel3BoolFalseDTOîîq Ü
>îîÜ á
(îîá à
binîîà ã
.îîã å"
ParLevel3BoolFalseîîå û
)îîû ü
;îîü †
}
ïï 
listaLevel3
ññ 
.
ññ 
Add
ññ 
(
ññ 
	level3Dto
ññ %
)
ññ% &
;
ññ& '
}
óó 	
}
òò 
}ôô Æw
lC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Recravacao\RecravacaoApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

class #
RecravacaoApiController (
:) *
BaseApiController+ <
{ 
private 
SgqDbDevEntities  
db! #
;# $
private 
RepoRecravacao 
< 
RecravacaoJson -
>- .
repo/ 3
;3 4
private 
List 
< 
string 
> 
errors #
;# $
private 
string 
mensagemSucesso &
;& '
public #
RecravacaoApiController &
(& '
)' (
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
errors 
= 
new 
List 
< 
string $
>$ %
(% &
)& '
;' (
repo 
= 
new 
RepoRecravacao %
<% &
RecravacaoJson& 4
>4 5
(5 6
)6 7
;7 8
mensagemSucesso 
= 
string $
.$ %
Empty% *
;* +
} 	
public 
HttpResponseMessage "
Get# &
(& '
int' *
Company+ 2
,2 3
int4 7
level1Id8 @
,@ A
intB E
linhaIdF M
)M N
{ 	
var 
requestResults 
=  
Request! (
.( )
Content) 0
.0 1
ReadAsStringAsync1 B
(B C
)C D
.D E
ResultE K
;K L
var   
paramsFromRequest   !
=  " #
	ToDynamic  $ -
(  - .
Request  . 5
.  5 6
Content  6 =
.  = >
ReadAsStringAsync  > O
(  O P
)  P Q
.  Q R
Result  R X
)  X Y
;  Y Z
var!! 
query!! 
=!! 
string!! 
.!! 
Format!! %
(!!% &
$str	!!& ÷
,
!!÷ ◊
Company
!!ÿ ﬂ
,
!!ﬂ ‡
level1Id
!!· È
,
!!È Í
linhaId
!!Î Ú
)
!!Ú Û
;
!!Û Ù
var"" 
results"" 
="" 

QueryNinja"" $
(""$ %
db""% '
,""' (
query"") .
)"". /
;""/ 0
return## 
Request## 
.## 
CreateResponse## )
(##) *
HttpStatusCode##* 8
.##8 9
OK##9 ;
,##; <
new##= @
{##A B
resposta##C K
=##L M
$str##N a
,##a b
model##c h
=##i j
results##k r
}##s t
)##t u
;##u v
}$$ 	
public'' 
HttpResponseMessage'' "
Post''# '
(''' (
)''( )
{(( 	
var++ 
model++ 
=++ 
string++ 
.++ 
Empty++ $
;++$ %
try-- 
{.. 
model11 
=11 
Request11 
.11  
Content11  '
.11' (
ReadAsStringAsync11( 9
(119 :
)11: ;
.11; <
Result11< B
;11B C
System22 
.22 
Web22 
.22 
Script22 !
.22! "
Serialization22" /
.22/ 0 
JavaScriptSerializer220 D
json_serializer22E T
=22U V
new22W Z
System22[ a
.22a b
Web22b e
.22e f
Script22f l
.22l m
Serialization22m z
.22z {!
JavaScriptSerializer	22{ è
(
22è ê
)
22ê ë
;
22ë í
dynamic33 
dados33 
=33 
json_serializer33  /
.33/ 0
DeserializeObject330 A
(33A B
model33B G
)33G H
;33H I
var44 
linha44 
=44 
	ToDynamic44 %
(44% &
model44& +
)44+ ,
;44, -
var55  
linhaStringFormatada55 (
=55) *
ToJson55+ 1
(551 2
linha552 7
)557 8
;558 9
int66 
idLinha66 
=66 
int66 !
.66! "
Parse66" '
(66' (
dados66( -
[66- .
$str66. 2
]662 3
)663 4
;664 5
int77 
	idCompany77 
=77 
int77  #
.77# $
Parse77$ )
(77) *
dados77* /
[77/ 0
$str770 ?
]77? @
)77@ A
;77A B
int88 
parLevel1_Id88  
=88! "
int88# &
.88& '
Parse88' ,
(88, -
dados88- 2
[882 3
$str883 A
]88A B
)88B C
;88C D
bool99 &
salvoParaInserirNovaColeta99 /
=990 1
false992 7
;997 8
bool:: 
isValidated::  
=::! "
false::# (
;::( )
var;; 
	existente;; 
=;; 
db;;  "
.;;" #
RecravacaoJson;;# 1
.;;1 2
FirstOrDefault;;2 @
(;;@ A
r;;A B
=>;;C E
r;;F G
.;;G H
ParCompany_Id;;H U
==;;V X
	idCompany;;Y b
&&;;c e
r;;f g
.;;g h
Linha_Id;;h p
==;;q s
idLinha;;t {
&&;;| ~
!	;; Ä
isValidated
;;Ä ã
&&
;;å é
r
;;è ê
.
;;ê ë(
SalvoParaInserirNovaColeta
;;ë ´
==
;;¨ Æ
null
;;Ø ≥
)
;;≥ ¥
?
;;¥ µ
.
;;µ ∂
Id
;;∂ ∏
;
;;∏ π
if== 
(== 
IsPropertyExist== "
(==" #
dados==# (
,==( )
$str==* 7
)==7 8
)==8 9
isValidated>> 
=>>  !
dados>>" '
[>>' (
$str>>( 5
]>>5 6
;>>6 7
if@@ 
(@@ 
IsPropertyExist@@ #
(@@# $
dados@@$ )
,@@) *
$str@@+ C
)@@C D
)@@D E&
salvoParaInserirNovaColetaAA .
=AA/ 0
dadosAA1 6
[AA6 7
$strAA7 O
]AAO P
;AAP Q
ifCC 
(CC 
	existenteCC 
.CC 
GetValueOrDefaultCC /
(CC/ 0
)CC0 1
>CC2 3
$numCC4 5
&&CC6 8&
salvoParaInserirNovaColetaCC9 S
==CCT V
falseCCW \
)CC\ ]
UpdateDD 
(DD  
linhaStringFormatadaDD /
,DD/ 0
	existenteDD1 :
)DD: ;
;DD; <
elseEE 
{FF 
ifGG 
(GG 
	existenteGG !
.GG! "
GetValueOrDefaultGG" 3
(GG3 4
)GG4 5
>GG6 7
$numGG8 9
&&GG; =&
salvoParaInserirNovaColetaGG> X
==GGY [
trueGG\ `
)GG` a.
"UpdateRecravacaoJsonParaNovaColetaHH :
(HH: ; 
linhaStringFormatadaHH; O
,HHO P
	existenteHHQ Z
.HHZ [
GetValueOrDefaultHH[ l
(HHl m
)HHm n
)HHn o
;HHo p
elseII 
SaveJJ 
(JJ  
linhaStringFormatadaJJ 1
,JJ1 2
idLinhaJJ3 :
,JJ: ;
	idCompanyJJ< E
,JJE F
parLevel1_IdJJG S
)JJS T
;JJT U
}KK 
ifMM 
(MM 
isValidatedMM 
)MM  6
*UpdateRecravacaoJsonFinalizaColetaValidadaNN >
(NN> ? 
linhaStringFormatadaNN? S
,NNS T
	existenteNNU ^
.NN^ _
GetValueOrDefaultNN_ p
(NNp q
)NNq r
)NNr s
;NNs t
mensagemSucessoPP 
=PP  !
$strPP" 7
;PP7 8
}RR 
catchSS 
(SS 
	ExceptionSS 
eSS 
)SS 
{TT 
errorsUU 
.UU 
AddUU 
(UU 
$strUU ?
+UU@ A
eUUB C
.UUC D
MessageUUD K
)UUK L
;UUL M
}VV 
ifXX 
(XX 
errorsXX 
.XX 
CountXX 
(XX 
)XX 
>XX  
$numXX! "
)XX" #
returnYY 
RequestYY 
.YY 
CreateResponseYY -
(YY- .
HttpStatusCodeYY. <
.YY< =
OKYY= ?
,YY? @
newYYA D
{YYE F
errorsYYG M
}YYN O
)YYO P
;YYP Q
return[[ 
Request[[ 
.[[ 
CreateResponse[[ )
([[) *
HttpStatusCode[[* 8
.[[8 9
OK[[9 ;
,[[; <
new[[= @
{[[A B
resposta[[C K
=[[L M
mensagemSucesso[[N ]
,[[] ^
model[[_ d
=[[e f
Request[[g n
.[[n o
Content[[o v
.[[v w
ReadAsStringAsync	[[w à
(
[[à â
)
[[â ä
.
[[ä ã
Result
[[ã ë
}
[[í ì
)
[[ì î
;
[[î ï
}]] 	
private__ 
void__ 6
*UpdateRecravacaoJsonFinalizaColetaValidada__ ?
(__? @
string__@ F 
linhaStringFormatada__G [
,__[ \
int__] `
?__` a
	existente__b k
)__k l
{`` 	
varaa 6
*updateRecravacaoJsonFinalizaColetaValidadaaa :
=aa; <
dbaa= ?
.aa? @
RecravacaoJsonaa@ N
.aaN O
FirstOrDefaultaaO ]
(aa] ^
raa^ _
=>aa` b
raac d
.aad e
Idaae g
==aah j
	existenteaak t
)aat u
;aau v6
*updateRecravacaoJsonFinalizaColetaValidadabb 6
.bb6 7 
ObjectRecravacaoJsonbb7 K
=bbL M 
linhaStringFormatadabbN b
;bbb c6
*updateRecravacaoJsonFinalizaColetaValidadacc 6
.cc6 7
	AlterDatecc7 @
=ccA B
DateTimeccC K
.ccK L
NowccL O
;ccO P6
*updateRecravacaoJsonFinalizaColetaValidadadd 6
.dd6 7
isValidateddd7 B
=ddC D
trueddE I
;ddI J
repoee 
.ee 
Saveee 
(ee 6
*updateRecravacaoJsonFinalizaColetaValidadaee @
)ee@ A
;eeA B
}ff 	
privatehh 
voidhh .
"UpdateRecravacaoJsonParaNovaColetahh 7
(hh7 8
stringhh8 > 
linhaStringFormatadahh? S
,hhS T
inthhU X
?hhX Y
	existentehhZ c
)hhc d
{ii 	
varjj *
updateRecravacaoJsonNovaColetajj .
=jj/ 0
dbjj1 3
.jj3 4
RecravacaoJsonjj4 B
.jjB C
FirstOrDefaultjjC Q
(jjQ R
rjjR S
=>jjT V
rjjW X
.jjX Y
IdjjY [
==jj\ ^
	existentejj_ h
)jjh i
;jji j*
updateRecravacaoJsonNovaColetakk *
.kk* + 
ObjectRecravacaoJsonkk+ ?
=kk@ A 
linhaStringFormatadakkB V
;kkV W*
updateRecravacaoJsonNovaColetall *
.ll* +
	AlterDatell+ 4
=ll5 6
DateTimell7 ?
.ll? @
Nowll@ C
;llC D*
updateRecravacaoJsonNovaColetamm *
.mm* +&
SalvoParaInserirNovaColetamm+ E
=mmF G
	existentemmH Q
;mmQ R
reponn 
.nn 
Savenn 
(nn *
updateRecravacaoJsonNovaColetann 4
)nn4 5
;nn5 6
}oo 	
privateqq 
voidqq 
Saveqq 
(qq 
stringqq   
linhaStringFormatadaqq! 5
,qq5 6
intqq7 :
idLinhaqq; B
,qqB C
intqqD G
	idCompanyqqH Q
,qqQ R
intqqS V
parLevel1_IdqqW c
)qqc d
{rr 	
varss 
newRecravacaoColetass #
=ss$ %
newss& )
RecravacaoJsonss* 8
(ss8 9
)ss9 :
{tt 
AddDateuu 
=uu 
DateTimeuu "
.uu" #
Nowuu# &
,uu& '
IsActivevv 
=vv 
truevv 
,vv  
	UserSgqIdww 
=ww 
$numww 
,ww 
ParCompany_Idxx 
=xx 
	idCompanyxx  )
,xx) *
Linha_Idyy 
=yy 
idLinhayy "
,yy" #
ParLevel1_Idzz 
=zz 
parLevel1_Idzz +
,zz+ , 
ObjectRecravacaoJson{{ $
={{% & 
linhaStringFormatada{{' ;
}|| 
;|| 
repo}} 
.}} 
Save}} 
(}} 
newRecravacaoColeta}} )
)}}) *
;}}* +
}~~ 	
private
ÄÄ 
void
ÄÄ 
Update
ÄÄ 
(
ÄÄ 
string
ÄÄ ""
linhaStringFormatada
ÄÄ# 7
,
ÄÄ7 8
int
ÄÄ9 <
?
ÄÄ< =
	existente
ÄÄ> G
)
ÄÄG H
{
ÅÅ 	
var
ÇÇ "
updateRecravacaoJson
ÇÇ $
=
ÇÇ% &
db
ÇÇ' )
.
ÇÇ) *
RecravacaoJson
ÇÇ* 8
.
ÇÇ8 9
FirstOrDefault
ÇÇ9 G
(
ÇÇG H
r
ÇÇH I
=>
ÇÇJ L
r
ÇÇM N
.
ÇÇN O
Id
ÇÇO Q
==
ÇÇR T
	existente
ÇÇU ^
)
ÇÇ^ _
;
ÇÇ_ `"
updateRecravacaoJson
ÉÉ  
.
ÉÉ  !"
ObjectRecravacaoJson
ÉÉ! 5
=
ÉÉ6 7"
linhaStringFormatada
ÉÉ8 L
;
ÉÉL M"
updateRecravacaoJson
ÑÑ  
.
ÑÑ  !
	AlterDate
ÑÑ! *
=
ÑÑ+ ,
DateTime
ÑÑ- 5
.
ÑÑ5 6
Now
ÑÑ6 9
;
ÑÑ9 :
repo
ÖÖ 
.
ÖÖ 
Save
ÖÖ 
(
ÖÖ "
updateRecravacaoJson
ÖÖ *
)
ÖÖ* +
;
ÖÖ+ ,
}
ÜÜ 	
private
àà 
bool
àà 
IsPropertyExist
àà $
(
àà$ %
dynamic
àà% ,
obj
àà- 0
,
àà0 1
string
àà2 8
name
àà9 =
)
àà= >
{
ââ 	
try
ää 
{
ãã 
return
åå 
(
åå 
(
åå 
IDictionary
åå $
<
åå$ %
string
åå% +
,
åå+ ,
object
åå- 3
>
åå3 4
)
åå4 5
obj
åå5 8
)
åå8 9
.
åå9 :
ContainsKey
åå: E
(
ååE F
name
ååF J
)
ååJ K
;
ååK L
}
çç 
catch
éé 
(
éé 
	Exception
éé 
)
éé 
{
èè 
return
êê 
false
êê 
;
êê 
}
ëë 
}
ññ 	
}
òò 
}ôô û-
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Recravacao\RepoRecravacao.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $

Recravacao$ .
{		 
public

 

class

 
RepoRecravacao

 
<

  
T

  !
>

! "
:

# $
IDisposable

% 0
where

1 6
T

7 8
:

9 :
class

; @
{ 
	protected 
readonly 
SgqDbDevEntities +
db, .
;. /
private 
DbSet 
< 
T 
> 
Entity 
{  !
get" %
{& '
return( .
db/ 1
.1 2
Set2 5
<5 6
T6 7
>7 8
(8 9
)9 :
;: ;
}< =
}> ?
public 
RepoRecravacao 
( 
) 
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
} 	
public 
void 
Save 
( 
T 
obj 
) 
{ 	
if 
( 
obj 
. 
GetType 
( 
) 
. 
GetProperty )
() *
$str* .
). /
!=0 2
null3 7
)7 8
{ 
var 
id 
= 
( 
int 
) 
obj !
.! "
GetType" )
() *
)* +
.+ ,
GetProperty, 7
(7 8
$str8 <
)< =
.= >
GetValue> F
(F G
objG J
,J K
nullL P
)P Q
;Q R
if   
(   
id   
>   
$num   
)   
Update!! 
(!! 
obj!! 
,!! 
id!!  "
)!!" #
;!!# $
else"" 
Add## 
(## 
obj## 
)## 
;## 
}$$ 
}%% 	
private'' 
void'' 
Add'' 
('' 
T'' 
obj'' 
)'' 
{(( 	
Entity)) 
.)) 
Add)) 
()) 
obj)) 
))) 
;)) 
Commit** 
(** 
)** 
;** 
}++ 	
private-- 
void-- 
Update-- 
(-- 
T-- 
obj-- !
,--! "
int--# &
id--' )
)--) *
{.. 	
var// 
old// 
=// 
Entity// 
.// 
Find// !
(//! "
id//" $
)//$ %
;//% &
var00 
entry00 
=00 
db00 
.00 
Entry00  
(00  !
old00! $
)00$ %
;00% &
entry11 
.11 
CurrentValues11 
.11  
	SetValues11  )
(11) *
obj11* -
)11- .
;11. /
Commit22 
(22 
)22 
;22 
}33 	
public55 
void55 
Delete55 
(55 
T55 
obj55  
)55  !
{66 	
if77 
(77 
obj77 
.77 
GetType77 
(77 
)77 
.77 
GetProperty77 )
(77) *
$str77* .
)77. /
!=770 2
null773 7
)777 8
{88 
var99 
id99 
=99 
(99 
int99 
)99 
obj99 !
.99! "
GetType99" )
(99) *
)99* +
.99+ ,
GetProperty99, 7
(997 8
$str998 <
)99< =
.99= >
GetValue99> F
(99F G
obj99G J
,99J K
null99L P
)99P Q
;99Q R
var:: 
old:: 
=:: 
Entity::  
.::  !
Find::! %
(::% &
id::& (
)::( )
;::) *
Entity;; 
.;; 
Remove;; 
(;; 
old;; !
);;! "
;;;" #
Commit<< 
(<< 
)<< 
;<< 
}== 
}>> 	
public@@ 
void@@ 
ExecuteQuery@@  
(@@  !
string@@! '
query@@( -
)@@- .
{AA 	
dbBB 
.BB 
DatabaseBB 
.BB 
ExecuteSqlCommandBB )
(BB) *
queryBB* /
)BB/ 0
;BB0 1
CommitCC 
(CC 
)CC 
;CC 
}DD 	
privateFF 
voidFF 
CommitFF 
(FF 
)FF 
{GG 	
tryHH 
{II 
dbJJ 
.JJ 
ConfigurationJJ  
.JJ  !!
ValidateOnSaveEnabledJJ! 6
=JJ7 8
falseJJ9 >
;JJ> ?
dbKK 
.KK 
SaveChangesKK 
(KK 
)KK  
;KK  !
}LL 
catchMM 
(MM 
	ExceptionMM 
eMM 
)MM 
{NN 
throwOO 
eOO 
;OO 
}PP 
}QQ 	
publicSS 
voidSS 
DisposeSS 
(SS 
)SS 
{TT 	
dbUU 
.UU 
DisposeUU 
(UU 
)UU 
;UU 
}VV 	
}WW 
}XX µÜ
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatorioGenericoApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 
RoutePrefix 
( 
$str (
)( )
]) *
public 

class *
RelatorioGenericoApiController /
:0 1
ApiController2 ?
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
dynamic 
	getTabela  
(  !,
 FormularioParaRelatorioViewModel! A
modelB G
)G H
{ 	
var 
db 
= 
new 
SgqDbDevEntities )
() *
)* +
;+ ,
dynamic 
retorno 
= 
new !
ExpandoObject" /
(/ 0
)0 1
;1 2
var 
	querybody 
= 
$str j
;j k
retorno   
.   
header   
=   
new    
List  ! %
<  % &
string  & ,
>  , -
{  . /
$str  0 4
,  4 5
$str  6 <
,  < =
$str  > E
}  F G
;  G H
retorno!! 
.!! 
body!! 
=!! 
db!! 
.!! 
Database!! &
.!!& '
SqlQuery!!' /
<!!/ 0!
PropriedadesGenericas!!0 E
>!!E F
(!!F G
	querybody!!G P
)!!P Q
.!!Q R
ToList!!R X
(!!X Y
)!!Y Z
;!!Z [
return## 
retorno## 
;## 
}$$ 	
['' 	
HttpPost''	 
]'' 
[(( 	
Route((	 
((( 
$str(( 
)(( 
](( 
public)) 
dynamic)) 

getTabela2)) !
())! ",
 FormularioParaRelatorioViewModel))" B
model))C H
)))H I
{** 	
var.. 
db.. 
=.. 
new.. 
SgqDbDevEntities.. )
(..) *
)..* +
;..+ ,
dynamic// 
retorno// 
=// 
new// !
ExpandoObject//" /
(/// 0
)//0 1
;//1 2
var22 
	querybody22 
=22 
$str22 j
;22j k
var88 
header88 
=88 
new88 
List88 !
<88! "
string88" (
>88( )
{88* +
$str88, 0
,880 1
$str882 8
,888 9
$str88: A
}88B C
;88C D
var99 
header299 
=99 
new99 
List99 "
<99" #
Header99# )
>99) *
(99* +
)99+ ,
;99, -
foreach<< 
(<< 
var<< 
item<< 
in<<  
header<<! '
)<<' (
{== 
header2>> 
.>> 
Add>> 
(>> 
new>> 
Header>>  &
(>>& '
)>>' (
{>>) *
title>>+ 0
=>>1 2
item>>3 7
}>>8 9
)>>9 :
;>>: ;
}?? 
retornoAA 
.AA 
headerAA 
=AA 
header2AA $
;AA$ %
retornoBB 
.BB 
bodyBB 
=BB 
dbBB 
.BB 
DatabaseBB &
.BB& '
SqlQueryBB' /
<BB/ 0!
PropriedadesGenericasBB0 E
>BBE F
(BBF G
	querybodyBBG P
)BBP Q
.BBQ R
ToListBBR X
(BBX Y
)BBY Z
;BBZ [
returnDD 
retornoDD 
;DD 
}EE 	
[HH 	
HttpPostHH	 
]HH 
[II 	
RouteII	 
(II 
$strII 
)II 
]II 
publicJJ 
dynamicJJ 

getTabela3JJ !
(JJ! "
JObjectJJ" )
modelJJ* /
)JJ/ 0
{KK 	
varLL 
dbLL 
=LL 
newLL 
SgqDbDevEntitiesLL )
(LL) *
)LL* +
;LL+ ,
varMM 
queryMM 
=MM 
$strMM d
;MMd e
varNN 
retornoNN 
=NN 

QueryNinjaNN $
(NN$ %
dbNN% '
,NN' (
queryNN) .
)NN. /
;NN/ 0
returnPP 
retornoPP 
;PP 
}QQ 	
	protectedUU 
dynamicUU 

QueryNinjaUU $
(UU$ %
	DbContextUU% .
dbUU/ 1
,UU1 2
stringUU3 9
queryUU: ?
)UU? @
{VV 	
dbXX 
.XX 
DatabaseXX 
.XX 

ConnectionXX "
.XX" #
OpenXX# '
(XX' (
)XX( )
;XX) *
varYY 
cmdYY 
=YY 
dbYY 
.YY 
DatabaseYY !
.YY! "

ConnectionYY" ,
.YY, -
CreateCommandYY- :
(YY: ;
)YY; <
;YY< =
cmdZZ 
.ZZ 
CommandTextZZ 
=ZZ 
queryZZ #
;ZZ# $
var[[ 
reader[[ 
=[[ 
cmd[[ 
.[[ 
ExecuteReader[[ *
([[* +
)[[+ ,
;[[, -
List\\ 
<\\ 
JObject\\ 
>\\ 
datas\\ 
=\\  !
new\\" %
List\\& *
<\\* +
JObject\\+ 2
>\\2 3
(\\3 4
)\\4 5
;\\5 6
List]] 
<]] 
JObject]] 
>]] 
columns]] !
=]]" #
new]]$ '
List]]( ,
<]], -
JObject]]- 4
>]]4 5
(]]5 6
)]]6 7
;]]7 8
dynamic^^ 
retorno^^ 
=^^ 
new^^ !
ExpandoObject^^" /
(^^/ 0
)^^0 1
;^^1 2
while`` 
(`` 
reader`` 
.`` 
Read`` 
(`` 
)``  
)``  !
{aa 
varbb 
rowbb 
=bb 
newbb 
JObjectbb %
(bb% &
)bb& '
;bb' (
forcc 
(cc 
intcc 
icc 
=cc 
$numcc 
;cc 
icc  !
<cc" #
readercc$ *
.cc* +

FieldCountcc+ 5
;cc5 6
icc7 8
++cc8 :
)cc: ;
rowdd 
[dd 
readerdd 
.dd 
GetNamedd &
(dd& '
idd' (
)dd( )
]dd) *
=dd+ ,
readerdd- 3
[dd3 4
idd4 5
]dd5 6
.dd6 7
ToStringdd7 ?
(dd? @
)dd@ A
;ddA B
datasff 
.ff 
Addff 
(ff 
rowff 
)ff 
;ff 
}gg 
forjj 
(jj 
intjj 
ijj 
=jj 
$numjj 
;jj 
ijj 
<jj 
readerjj  &
.jj& '

FieldCountjj' 1
;jj1 2
ijj3 4
++jj4 6
)jj6 7
{kk 
varll 
colll 
=ll 
newll 
JObjectll %
(ll% &
)ll& '
;ll' (
colmm 
[mm 
$strmm 
]mm 
=mm 
colmm "
[mm" #
$strmm# )
]mm) *
=mm+ ,
readermm- 3
.mm3 4
GetNamemm4 ;
(mm; <
imm< =
)mm= >
;mm> ?
columnsnn 
.nn 
Addnn 
(nn 
colnn 
)nn  
;nn  !
}oo 
retornoss 
.ss 
datasss 
=ss 
datasss !
;ss! "
retornott 
.tt 
columnstt 
=tt 
columnstt %
;tt% &
returnvv 
retornovv 
;vv 
}ww 	
}zz 
public|| 

class|| !
PropriedadesGenericas|| &
{}} 
public~~ 
string~~ 
Col1~~ 
{~~ 
get~~  
;~~  !
set~~" %
;~~% &
}~~' (
public 
string 
Col2 
{ 
get  
;  !
set" %
;% &
}' (
public
ÄÄ 
string
ÄÄ 
Col3
ÄÄ 
{
ÄÄ 
get
ÄÄ  
;
ÄÄ  !
set
ÄÄ" %
;
ÄÄ% &
}
ÄÄ' (
public
ÅÅ 
string
ÅÅ 
Col4
ÅÅ 
{
ÅÅ 
get
ÅÅ  
;
ÅÅ  !
set
ÅÅ" %
;
ÅÅ% &
}
ÅÅ' (
public
ÇÇ 
string
ÇÇ 
Col5
ÇÇ 
{
ÇÇ 
get
ÇÇ  
;
ÇÇ  !
set
ÇÇ" %
;
ÇÇ% &
}
ÇÇ' (
public
ÉÉ 
string
ÉÉ 
Col6
ÉÉ 
{
ÉÉ 
get
ÉÉ  
;
ÉÉ  !
set
ÉÉ" %
;
ÉÉ% &
}
ÉÉ' (
public
ÑÑ 
string
ÑÑ 
Col7
ÑÑ 
{
ÑÑ 
get
ÑÑ  
;
ÑÑ  !
set
ÑÑ" %
;
ÑÑ% &
}
ÑÑ' (
public
ÖÖ 
string
ÖÖ 
Col8
ÖÖ 
{
ÖÖ 
get
ÖÖ  
;
ÖÖ  !
set
ÖÖ" %
;
ÖÖ% &
}
ÖÖ' (
public
ÜÜ 
string
ÜÜ 
Col9
ÜÜ 
{
ÜÜ 
get
ÜÜ  
;
ÜÜ  !
set
ÜÜ" %
;
ÜÜ% &
}
ÜÜ' (
public
áá 
string
áá 
Col10
áá 
{
áá 
get
áá !
;
áá! "
set
áá# &
;
áá& '
}
áá( )
public
àà 
string
àà 
Col11
àà 
{
àà 
get
àà !
;
àà! "
set
àà# &
;
àà& '
}
àà( )
public
ââ 
string
ââ 
Col12
ââ 
{
ââ 
get
ââ !
;
ââ! "
set
ââ# &
;
ââ& '
}
ââ( )
public
ää 
string
ää 
Col13
ää 
{
ää 
get
ää !
;
ää! "
set
ää# &
;
ää& '
}
ää( )
public
ãã 
string
ãã 
Col14
ãã 
{
ãã 
get
ãã !
;
ãã! "
set
ãã# &
;
ãã& '
}
ãã( )
public
åå 
string
åå 
Col15
åå 
{
åå 
get
åå !
;
åå! "
set
åå# &
;
åå& '
}
åå( )
public
çç 
string
çç 
Col16
çç 
{
çç 
get
çç !
;
çç! "
set
çç# &
;
çç& '
}
çç( )
public
éé 
string
éé 
Col17
éé 
{
éé 
get
éé !
;
éé! "
set
éé# &
;
éé& '
}
éé( )
public
èè 
string
èè 
Col18
èè 
{
èè 
get
èè !
;
èè! "
set
èè# &
;
èè& '
}
èè( )
public
êê 
string
êê 
Col19
êê 
{
êê 
get
êê !
;
êê! "
set
êê# &
;
êê& '
}
êê( )
public
ëë 
string
ëë 
Col20
ëë 
{
ëë 
get
ëë !
;
ëë! "
set
ëë# &
;
ëë& '
}
ëë( )
public
íí 
string
íí 
Col21
íí 
{
íí 
get
íí !
;
íí! "
set
íí# &
;
íí& '
}
íí( )
public
ìì 
string
ìì 
Col22
ìì 
{
ìì 
get
ìì !
;
ìì! "
set
ìì# &
;
ìì& '
}
ìì( )
public
îî 
string
îî 
Col23
îî 
{
îî 
get
îî !
;
îî! "
set
îî# &
;
îî& '
}
îî( )
public
ïï 
string
ïï 
Col24
ïï 
{
ïï 
get
ïï !
;
ïï! "
set
ïï# &
;
ïï& '
}
ïï( )
public
ññ 
string
ññ 
Col25
ññ 
{
ññ 
get
ññ !
;
ññ! "
set
ññ# &
;
ññ& '
}
ññ( )
public
óó 
string
óó 
Col26
óó 
{
óó 
get
óó !
;
óó! "
set
óó# &
;
óó& '
}
óó( )
public
òò 
string
òò 
Col27
òò 
{
òò 
get
òò !
;
òò! "
set
òò# &
;
òò& '
}
òò( )
public
ôô 
string
ôô 
Col28
ôô 
{
ôô 
get
ôô !
;
ôô! "
set
ôô# &
;
ôô& '
}
ôô( )
public
öö 
string
öö 
Col29
öö 
{
öö 
get
öö !
;
öö! "
set
öö# &
;
öö& '
}
öö( )
public
õõ 
string
õõ 
Col30
õõ 
{
õõ 
get
õõ !
;
õõ! "
set
õõ# &
;
õõ& '
}
õõ( )
public
úú 
string
úú 
Col31
úú 
{
úú 
get
úú !
;
úú! "
set
úú# &
;
úú& '
}
úú( )
public
ùù 
string
ùù 
Col32
ùù 
{
ùù 
get
ùù !
;
ùù! "
set
ùù# &
;
ùù& '
}
ùù( )
public
ûû 
string
ûû 
Col33
ûû 
{
ûû 
get
ûû !
;
ûû! "
set
ûû# &
;
ûû& '
}
ûû( )
public
üü 
string
üü 
Col34
üü 
{
üü 
get
üü !
;
üü! "
set
üü# &
;
üü& '
}
üü( )
public
†† 
string
†† 
Col35
†† 
{
†† 
get
†† !
;
††! "
set
††# &
;
††& '
}
††( )
public
°° 
string
°° 
Col36
°° 
{
°° 
get
°° !
;
°°! "
set
°°# &
;
°°& '
}
°°( )
public
¢¢ 
string
¢¢ 
Col37
¢¢ 
{
¢¢ 
get
¢¢ !
;
¢¢! "
set
¢¢# &
;
¢¢& '
}
¢¢( )
public
££ 
string
££ 
Col38
££ 
{
££ 
get
££ !
;
££! "
set
££# &
;
££& '
}
££( )
public
§§ 
string
§§ 
Col39
§§ 
{
§§ 
get
§§ !
;
§§! "
set
§§# &
;
§§& '
}
§§( )
public
•• 
string
•• 
Col40
•• 
{
•• 
get
•• !
;
••! "
set
••# &
;
••& '
}
••( )
public
¶¶ 
string
¶¶ 
Col41
¶¶ 
{
¶¶ 
get
¶¶ !
;
¶¶! "
set
¶¶# &
;
¶¶& '
}
¶¶( )
public
ßß 
string
ßß 
Col42
ßß 
{
ßß 
get
ßß !
;
ßß! "
set
ßß# &
;
ßß& '
}
ßß( )
public
®® 
string
®® 
Col43
®® 
{
®® 
get
®® !
;
®®! "
set
®®# &
;
®®& '
}
®®( )
public
©© 
string
©© 
Col44
©© 
{
©© 
get
©© !
;
©©! "
set
©©# &
;
©©& '
}
©©( )
public
™™ 
string
™™ 
Col45
™™ 
{
™™ 
get
™™ !
;
™™! "
set
™™# &
;
™™& '
}
™™( )
public
´´ 
string
´´ 
Col46
´´ 
{
´´ 
get
´´ !
;
´´! "
set
´´# &
;
´´& '
}
´´( )
public
¨¨ 
string
¨¨ 
Col47
¨¨ 
{
¨¨ 
get
¨¨ !
;
¨¨! "
set
¨¨# &
;
¨¨& '
}
¨¨( )
public
≠≠ 
string
≠≠ 
Col48
≠≠ 
{
≠≠ 
get
≠≠ !
;
≠≠! "
set
≠≠# &
;
≠≠& '
}
≠≠( )
public
ÆÆ 
string
ÆÆ 
Col49
ÆÆ 
{
ÆÆ 
get
ÆÆ !
;
ÆÆ! "
set
ÆÆ# &
;
ÆÆ& '
}
ÆÆ( )
public
ØØ 
string
ØØ 
Col50
ØØ 
{
ØØ 
get
ØØ !
;
ØØ! "
set
ØØ# &
;
ØØ& '
}
ØØ( )
}
∞∞ 
public
≤≤ 

class
≤≤ 
Header
≤≤ 
{
≥≥ 
public
¥¥ 
string
¥¥ 
title
¥¥ 
{
¥¥ 
get
¥¥ !
;
¥¥! "
set
¥¥# &
;
¥¥& '
}
¥¥( )
}
µµ 
}∑∑ ∞?
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\FtaApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
RelatoriosBrasil$ 4
{ 
[		 
RoutePrefix		 
(		 
$str		 
)		 
]		 
public

 

class

 
FtaApiController

 !
:

" #
ApiController

$ 1
{ 
private 
SgqDbDevEntities  
db! #
;# $
public 
FtaApiController 
(  
)  !
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
JObject 
	GetUnitId  
(  !
JObject! (
json) -
)- .
{ 	
try 
{ 
dynamic 
form 
= 
json #
;# $
string 
name 
= 
form "
." #
unitName# +
;+ ,
bool 
isByname 
= 
false  %
;% &
if 
( 
form 
. 
byName 
!=  "
null# '
)' (
{ 
isByname 
= 
form #
.# $
byName$ *
;* +
}   
if"" 
("" 
isByname"" 
)"" 
form## 
.## 
unitId## 
=##  !
db##" $
.##$ %

ParCompany##% /
.##/ 0
FirstOrDefault##0 >
(##> ?
r##? @
=>##A C
r##D E
.##E F
Name##F J
.##J K
Equals##K Q
(##Q R
name##R V
)##V W
)##W X
.##X Y
Id##Y [
;##[ \
else$$ 
form%% 
.%% 
unitId%% 
=%%  !
db%%" $
.%%$ %

ParCompany%%% /
.%%/ 0
FirstOrDefault%%0 >
(%%> ?
r%%? @
=>%%A C
r%%D E
.%%E F
Initials%%F N
.%%N O
Equals%%O U
(%%U V
name%%V Z
)%%Z [
)%%[ \
.%%\ ]
Id%%] _
;%%_ `
return'' 
form'' 
;'' 
}(( 
catch)) 
()) 
System)) 
.)) 
	Exception)) #
ex))$ &
)))& '
{** 
throw++ 
;++ 
},, 
}.. 	
[== 	
HttpPost==	 
]== 
[>> 	
Route>>	 
(>> 
$str>> 
)>> 
]>> 
public?? 
JObject?? 
GetUrl?? 
(?? 
[?? 
FromBody?? '
]??' (!
DataCarrierFormulario??) >
form??? C
)??C D
{@@ 	
dynamicDD 
retornoDD 
=DD 
newDD !
JObjectDD" )
(DD) *
)DD* +
;DD+ ,
retornoEE 
.EE 
urlEE 
=EE 
$strEE I
;EEI J
retornoHH 
.HH 
MetaFTAHH 
+=HH 
$strHH )
+HH* +
formHH, 0
.HH0 1
MetaFTAHH1 8
.HH8 9
ToStringHH9 A
(HHA B
)HHB C
;HHC D
retornoII 
.II 
PercentualNCFTAII #
+=II$ &
$strII' :
+II; <
formII= A
.IIA B
PercentualNCFTAIIB Q
.IIQ R
ToStringIIR Z
(IIZ [
)II[ \
;II\ ]
retornoJJ 
.JJ !
ReincidenciaDesvioFTAJJ )
+=JJ* ,
$strJJ- F
+JJG H
formJJI M
.JJM N!
ReincidenciaDesvioFTAJJN c
.JJc d
ToStringJJd l
(JJl m
)JJm n
;JJn o
retornoKK 
.KK 
Level1IdKK 
+=KK 
$strKK  ,
+KK- .
dbKK/ 1
.KK1 2
	ParLevel1KK2 ;
.KK; <
FirstOrDefaultKK< J
(KKJ K
rKKK L
=>KKM O
rKKP Q
.KKQ R
NameKKR V
.KKV W
EqualsKKW ]
(KK] ^
formKK^ b
.KKb c

level1NameKKc m
)KKm n
)KKn o
.KKo p
IdKKp r
.KKr s
ToStringKKs {
(KK{ |
)KK| }
;KK} ~
retornoLL 
.LL 
Level2IdLL 
+=LL 
$strLL  ,
+LL- .
dbLL/ 1
.LL1 2
	ParLevel2LL2 ;
.LL; <
FirstOrDefaultLL< J
(LLJ K
rLLK L
=>LLM O
rLLP Q
.LLQ R
NameLLR V
.LLV W
EqualsLLW ]
(LL] ^
formLL^ b
.LLb c

level2NameLLc m
)LLm n
)LLn o
.LLo p
IdLLp r
.LLr s
ToStringLLs {
(LL{ |
)LL| }
;LL} ~
retornoMM 
.MM 
Level3IdMM 
+=MM 
$strMM  ,
+MM- .
dbMM/ 1
.MM1 2
	ParLevel3MM2 ;
.MM; <
FirstOrDefaultMM< J
(MMJ K
rMMK L
=>MMM O
rMMP Q
.MMQ R
NameMMR V
.MMV W
EqualsMMW ]
(MM] ^
formMM^ b
.MMb c

level3NameMMc m
)MMm n
)MMn o
.MMo p
IdMMp r
.MMr s
ToStringMMs {
(MM{ |
)MM| }
;MM} ~
ifSS 
(SS 
formSS 
.SS 
unitIdSS 
>SS 
$numSS 
)SS  
{TT 
retornoUU 
.UU 

Unidade_IdUU "
+=UU# %
$strUU& 4
+UU5 6
dbUU7 9
.UU9 :

ParCompanyUU: D
.UUD E
FirstOrDefaultUUE S
(UUS T
rUUT U
=>UUV X
rUUY Z
.UUZ [
NameUU[ _
.UU_ `
EqualsUU` f
(UUf g
formUUg k
.UUk l
unitIdUUl r
)UUr s
)UUs t
.UUt u
IdUUu w
.UUw x
ToString	UUx Ä
(
UUÄ Å
)
UUÅ Ç
;
UUÇ É
}VV 
elseWW 
{XX 
retornoYY 
.YY 

Unidade_IdYY "
+=YY# %
$strYY& 5
;YY5 6
}ZZ 
retorno\\ 
.\\ 
Supervisor_Id\\ !
+=\\" $
$str\\% 6
+\\7 8
form\\9 =
.\\= >
	auditorId\\> G
.\\G H
ToString\\H P
(\\P Q
)\\Q R
;\\R S
retorno]] 
.]] 
Departamento_Id]] #
+=]]$ &
$str]]' :
+]]; <
$num]]= >
.]]> ?
ToString]]? G
(]]G H
)]]H I
;]]I J
retorno__ 
.__ 
_DataInicioFTA__ "
+=__# %
$str__& 7
+__8 9
form__: >
.__> ?
_dataInicio__? J
.__J K
ToString__K S
(__S T
$str__T `
)__` a
.__a b
Replace__b i
(__i j
$str__j m
,__m n
$str__o t
)__t u
;__u v
retorno`` 
.`` 
_DataFimFTA`` 
+=``  "
$str``# 1
+``2 3
form``4 8
.``8 9
_dataFim``9 A
.``A B
ToString``B J
(``J K
$str``K W
)``W X
.``X Y
Replace``Y `
(``` a
$str``a d
,``d e
$str``f k
)``k l
;``l m
returnbb 
retornobb 
;bb 
}cc 	
}ff 
}gg ˇ
~C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\VerificacaoTipificacaoApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
RelatoriosBrasil$ 4
{ 
[ 
RoutePrefix 
( 
$str .
). /
]/ 0
public 

class /
#VerificacaoTipificacaoApiController 4
:5 6
ApiController7 D
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
dynamic 
Get 
( 
[ 
FromBody $
]$ %,
 FormularioParaRelatorioViewModel& F
formG K
)K L
{ 	
	CommonLog 
. 

SaveReport  
(  !
form! %
,% &
$str' G
)G H
;H I
var 
db 
= 
new 
SgqDbDevEntities )
() *
)* +
;+ ,
var 
query 
= 
$str  
+! "
$str /
+0 1
$str ,
+- .
$str P
+Q R
$str L
+M N
$str u
+v w
$str   /
+  0 1
$str!! %
+!!& '
$str"" 0
+""1 2
$str## 3
+##4 5
$str$$ 4
+$$5 6
$str%% N
+%%O P
$str&& 2
+&&3 4
$str'' M
+''N O
$str(( B
+((C D
$str)) v
+))w x
$str** {
+**| }
$str++ =
+++> ?
form++@ D
.++D E
_dataInicioSQL++E S
+++T U
$str++V _
+++` a
form++b f
.++f g
_dataFimSQL++g r
+++s t
$str++u y
+++z {
$str,, K
+,,L M
$str-- *
+--+ ,
form--- 1
.--1 2
unitId--2 8
+--9 :
$str--; =
;--= >
var// 
retorno// 
=// 
GenericTable// &
.//& '

QueryNinja//' 1
(//1 2
db//2 4
,//4 5
query//6 ;
)//; <
;//< =
return11 
retorno11 
;11 
}22 	
}
¶¶ 
}ßß Ïá
ÉC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\NaoConformidadePorCabecalhoApiController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
.

# $
RelatoriosBrasil

$ 4
{ 
[ 
RoutePrefix 
( 
$str 2
)2 3
]3 4
public 

class 4
(NaoConformidadePorCabecalhoApiController 9
:: ;
ApiController< I
{ 
private 
List 
< 
Generic 
> 
_return %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
List 
< 
Generic 
> 
Grafico1 %
(% &
[& '
FromBody' /
]/ 0!
DataCarrierFormulario1 F
formG K
)K L
{ 	

CriaMockG1 
( 
form 
) 
; 
return 
_return 
; 
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
List 
< 
Generic 
> 
Grafico2 %
(% &
[& '
FromBody' /
]/ 0!
DataCarrierFormulario1 F
formG K
)K L
{ 	

CriaMockG2 
( 
form 
) 
; 
return!! 
_return!! 
;!! 
}"" 	
[$$ 	
HttpPost$$	 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
List&& 
<&& 
Generic&& 
>&& 
Grafico3&& %
(&&% &
[&&& '
FromBody&&' /
]&&/ 0!
DataCarrierFormulario&&1 F
form&&G K
)&&K L
{'' 	

CriaMockG3(( 
((( 
form(( 
)(( 
;(( 
return)) 
_return)) 
;)) 
}** 	
[,, 	
HttpPost,,	 
],, 
[-- 	
Route--	 
(-- 
$str-- 
)-- 
]-- 
public.. 
List.. 
<.. 
Generic.. 
>.. 
Grafico4.. %
(..% &
[..& '
FromBody..' /
]../ 0!
DataCarrierFormulario..1 F
form..G K
)..K L
{// 	

CriaMockG400 
(00 
form00 
)00 
;00 
return11 
_return11 
;11 
}22 	
[44 	
HttpPost44	 
]44 
[55 	
Route55	 
(55 
$str55 
)55 
]55 
public66 
List66 
<66 
Generic66 
>66 
Grafico566 %
(66% &
[66& '
FromBody66' /
]66/ 0!
DataCarrierFormulario661 F
form66G K
)66K L
{77 	

CriaMockG588 
(88 
form88 
)88 
;88 
return99 
_return99 
;99 
}:: 	
private== 
void== 

CriaMockG1== 
(==  !
DataCarrierFormulario==  5
form==6 :
)==: ;
{>> 	
tryUU 
{VV 
stringWW 
queryWW 
=WW 
$strWW (
+WW) *
$strXX &
+XX' (
$strYY '
+YY( )
$strZZ 5
+ZZ6 7
$str[[ a
+[[b c
$str\\ P
+\\Q R
$str]] R
+]]S T
$str^^ !
+^^" #
$str__ .
+__/ 0
$str`` B
+``C D
$straa ,
+aa- .
$strbb M
;bbM N
usingdd 
(dd 
vardd 
dbdd 
=dd 
newdd  #
SgqDbDevEntitiesdd$ 4
(dd4 5
)dd5 6
)dd6 7
{ee 
_returnff 
=ff 
dbff  
.ff  !
Databaseff! )
.ff) *
SqlQueryff* 2
<ff2 3
Genericff3 :
>ff: ;
(ff; <
queryff< A
)ffA B
.ffB C
ToListffC I
(ffI J
)ffJ K
;ffK L
}gg 
}hh 
catchii 
(ii 
	Exceptionii 
exii 
)ii  
{jj 
throwkk 
exkk 
;kk 
}ll 
}nn 	
privateqq 
voidqq 

CriaMockG2qq 
(qq  !
DataCarrierFormularioqq  5
formqq6 :
)qq: ;
{rr 	
try
ââ 
{
ää 
var
åå 
query
åå 
=
åå 
$str
çç 
+
çç 
$str
éé '
+
éé( )
$str
èè +
+
èè, -
$str
êê 5
+
êê6 7
$str
ëë e
+
ëëf g
$str
íí T
+
ííU V
$str
ìì V
+
ììW X
$str
îî !
+
îî" #
$str
ïï .
+
ïï/ 0
$str
ññ n
+
ñño p
$str
óó W
+
óóX Y
$str
òò l
+
òòm n
$str
ôô (
+
ôô) *
form
ôô+ /
.
ôô/ 0
Query
ôô0 5
+
ôô6 7
$str
ôô8 ]
+
ôô^ _
$str
öö 2
+
öö3 4
$str
õõ M
;
õõM N
using
ùù 
(
ùù 
var
ùù 
db
ùù 
=
ùù 
new
ùù  #
SgqDbDevEntities
ùù$ 4
(
ùù4 5
)
ùù5 6
)
ùù6 7
{
ûû 
_return
üü 
=
üü 
db
üü  
.
üü  !
Database
üü! )
.
üü) *
SqlQuery
üü* 2
<
üü2 3
Generic
üü3 :
>
üü: ;
(
üü; <
query
üü< A
)
üüA B
.
üüB C
ToList
üüC I
(
üüI J
)
üüJ K
;
üüK L
}
†† 
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
§§ 
throw
•• 
ex
•• 
;
•• 
}
¶¶ 
}
ßß 	
private
™™ 
void
™™ 

CriaMockG3
™™ 
(
™™  #
DataCarrierFormulario
™™  5
form
™™6 :
)
™™: ;
{
´´ 	
var
¬¬ 
teste
¬¬ 
=
¬¬ 
new
¬¬ 
List
¬¬  
<
¬¬  !
string
¬¬! '
>
¬¬' (
(
¬¬( )
)
¬¬) *
;
¬¬* +
teste
ƒƒ 
=
ƒƒ 
form
ƒƒ 
.
ƒƒ 
Query
ƒƒ 
.
ƒƒ 
Split
ƒƒ $
(
ƒƒ$ %
$char
ƒƒ% (
)
ƒƒ( )
.
ƒƒ) *
ToList
ƒƒ* 0
(
ƒƒ0 1
)
ƒƒ1 2
;
ƒƒ2 3
try
∆∆ 
{
«« 
var
…… 
query
…… 
=
…… 
$str
   
+
   
$str
ÀÀ (
+
ÀÀ) *
$str
ÃÃ 
+
ÃÃ 
teste
ÃÃ 
[
ÃÃ  
$num
ÃÃ  !
]
ÃÃ! "
+
ÃÃ# $
$str
ÃÃ% 3
+
ÃÃ4 5
$str
ÕÕ 5
+
ÕÕ6 7
$str
ŒŒ e
+
ŒŒf g
$str
œœ T
+
œœU V
$str
–– V
+
––W X
$str
—— !
+
——" #
$str
““ +
+
““, -
$str
‘‘ /
+
‘‘0 1
$str
’’ ^
+
’’_ `
$str
÷÷ o
+
÷÷p q
$str
◊◊ Y
+
◊◊Z [
$str
ÿÿ m
+
ÿÿn o
$str
ŸŸ c
+
ŸŸd e
$str
⁄⁄ q
+
⁄⁄r s
$str
€€ [
+
€€\ ]
$str
‹‹ o
+
‹‹p q
$str
ﬁﬁ )
+
ﬁﬁ* +
teste
ﬁﬁ, 1
[
ﬁﬁ1 2
$num
ﬁﬁ2 3
]
ﬁﬁ3 4
+
ﬁﬁ5 6
$strﬁﬁ7 é
+ﬁﬁè ê
testeﬁﬁë ñ
[ﬁﬁñ ó
$numﬁﬁó ò
]ﬁﬁò ô
+ﬁﬁö õ
$strﬁﬁú ü
+ﬁﬁ† °
$str
ﬂﬂ 4
+
ﬂﬂ5 6
$str
‡‡ N
;
‡‡N O
using
‚‚ 
(
‚‚ 
var
‚‚ 
db
‚‚ 
=
‚‚ 
new
‚‚  #
SgqDbDevEntities
‚‚$ 4
(
‚‚4 5
)
‚‚5 6
)
‚‚6 7
{
„„ 
_return
‰‰ 
=
‰‰ 
db
‰‰  
.
‰‰  !
Database
‰‰! )
.
‰‰) *
SqlQuery
‰‰* 2
<
‰‰2 3
Generic
‰‰3 :
>
‰‰: ;
(
‰‰; <
query
‰‰< A
)
‰‰A B
.
‰‰B C
ToList
‰‰C I
(
‰‰I J
)
‰‰J K
;
‰‰K L
}
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
ex
ÁÁ 
)
ÁÁ  
{
ËË 
throw
ÈÈ 
ex
ÈÈ 
;
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
private
ÓÓ 
void
ÓÓ 

CriaMockG4
ÓÓ 
(
ÓÓ  #
DataCarrierFormulario
ÓÓ  5
form
ÓÓ6 :
)
ÓÓ: ;
{
ÔÔ 	
var
ÜÜ 
teste
ÜÜ 
=
ÜÜ 
new
ÜÜ 
List
ÜÜ  
<
ÜÜ  !
string
ÜÜ! '
>
ÜÜ' (
(
ÜÜ( )
)
ÜÜ) *
;
ÜÜ* +
teste
àà 
=
àà 
form
àà 
.
àà 
Query
àà 
.
àà 
Split
àà $
(
àà$ %
$char
àà% (
)
àà( )
.
àà) *
ToList
àà* 0
(
àà0 1
)
àà1 2
;
àà2 3
try
ää 
{
ãã 
var
çç 
query
çç 
=
çç 
$str
éé 
+
éé 
$str
èè )
+
èè* +
$str
êê 
+
êê 
teste
êê 
[
êê  
$num
êê  !
]
êê! "
+
êê# $
$str
êê% 3
+
êê4 5
$str
ëë 
+
ëë 
teste
ëë 
[
ëë  
$num
ëë  !
]
ëë! "
+
ëë# $
$str
ëë% 3
+
ëë4 5
$str
íí 6
+
íí7 8
$str
ìì f
+
ììg h
$str
îî U
+
îîV W
$str
ïï W
+
ïïX Y
$str
ññ "
+
ññ# $
$str
óó ,
+
óó- .
$str
òò /
+
òò0 1
$str
ôô ^
+
ôô_ `
$str
öö w
+
ööx y
$str
õõ `
+
õõa b
$str
úú m
+
úún o
$str
ùù b
+
ùùc d
$str
ûû y
+
ûûz {
$str
üü c
+
üüd e
$str
†† p
+
††q r
$str
°° e
+
°°f g
$str
¢¢ y
+
¢¢z {
$str
££ c
+
££d e
$str
§§ p
+
§§q r
$str
•• (
+
••) *
teste
••+ 0
[
••0 1
$num
••1 2
]
••2 3
+
••4 5
$str••6 ≤
+••≥ ¥
teste••µ ∫
[••∫ ª
$num••ª º
]••º Ω
+••æ ø
$str••¿ ’
+••÷ ◊
teste••ÿ ›
[••› ﬁ
$num••ﬁ ﬂ
]••ﬂ ‡
+••· ‚
$str••„ Á
+••Ë È
$str
¶¶ 4
+
¶¶5 6
$str
ßß M
;
ßßM N
using
©© 
(
©© 
var
©© 
db
©© 
=
©© 
new
©©  #
SgqDbDevEntities
©©$ 4
(
©©4 5
)
©©5 6
)
©©6 7
{
™™ 
_return
´´ 
=
´´ 
db
´´  
.
´´  !
Database
´´! )
.
´´) *
SqlQuery
´´* 2
<
´´2 3
Generic
´´3 :
>
´´: ;
(
´´; <
query
´´< A
)
´´A B
.
´´B C
ToList
´´C I
(
´´I J
)
´´J K
;
´´K L
}
¨¨ 
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
ex
ÆÆ 
)
ÆÆ  
{
ØØ 
throw
∞∞ 
ex
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
private
µµ 
void
µµ 

CriaMockG5
µµ 
(
µµ  #
DataCarrierFormulario
µµ  5
form
µµ6 :
)
µµ: ;
{
∂∂ 	
var
ÕÕ 
teste
ÕÕ 
=
ÕÕ 
new
ÕÕ 
List
ÕÕ  
<
ÕÕ  !
string
ÕÕ! '
>
ÕÕ' (
(
ÕÕ( )
)
ÕÕ) *
;
ÕÕ* +
teste
œœ 
=
œœ 
form
œœ 
.
œœ 
Query
œœ 
.
œœ 
Split
œœ $
(
œœ$ %
$char
œœ% (
)
œœ( )
.
œœ) *
ToList
œœ* 0
(
œœ0 1
)
œœ1 2
;
œœ2 3
try
—— 
{
““ 
var
”” 
query
”” 
=
”” 
$str
‘‘ 
+
‘‘ 
$str
’’ *
+
’’+ ,
$str
÷÷ 7
+
÷÷8 9
$str
◊◊ g
+
◊◊h i
$str
ÿÿ V
+
ÿÿW X
$str
ŸŸ X
+
ŸŸY Z
$str
⁄⁄ #
+
⁄⁄$ %
$str
€€ -
+
€€. /
$str
‹‹ 0
+
‹‹1 2
$str
›› _
+
››` a
$str
ﬁﬁ x
+
ﬁﬁy z
$str
ﬂﬂ a
+
ﬂﬂb c
$str
‡‡ n
+
‡‡o p
$str
·· c
+
··d e
$str
‚‚ z
+
‚‚{ |
$str
„„ d
+
„„e f
$str
‰‰ q
+
‰‰r s
$str
ÂÂ f
+
ÂÂg h
$str
ÊÊ z
+
ÊÊ{ |
$str
ÁÁ d
+
ÁÁe f
$str
ËË q
+
ËËr s
$str
ÈÈ `
+
ÈÈa b
$str
ÍÍ z
+
ÍÍ{ |
$str
ÎÎ d
+
ÎÎe f
$str
ÏÏ q
+
ÏÏr s
$str
ÌÌ )
+
ÌÌ* +
teste
ÌÌ, 1
[
ÌÌ1 2
$num
ÌÌ2 3
]
ÌÌ3 4
+
ÌÌ5 6
$strÌÌ7 Œ
+ÌÌœ –
testeÌÌ— ÷
[ÌÌ÷ ◊
$numÌÌ◊ ÿ
]ÌÌÿ Ÿ
+ÌÌ⁄ €
$strÌÌ‹ Ò
+ÌÌÚ Û
testeÌÌÙ ˘
[ÌÌ˘ ˙
$numÌÌ˙ ˚
]ÌÌ˚ ¸
+ÌÌ˝ ˛
$strÌÌˇ î
+ÌÌï ñ
testeÌÌó ú
[ÌÌú ù
$numÌÌù û
]ÌÌû ü
+ÌÌ† °
$strÌÌ¢ ¶
+ÌÌß ®
$str
ÓÓ 5
+
ÓÓ6 7
$str
ÔÔ N
;
ÔÔN O
using
ÒÒ 
(
ÒÒ 
var
ÒÒ 
db
ÒÒ 
=
ÒÒ 
new
ÒÒ  #
SgqDbDevEntities
ÒÒ$ 4
(
ÒÒ4 5
)
ÒÒ5 6
)
ÒÒ6 7
{
ÚÚ 
_return
ÛÛ 
=
ÛÛ 
db
ÛÛ  
.
ÛÛ  !
Database
ÛÛ! )
.
ÛÛ) *
SqlQuery
ÛÛ* 2
<
ÛÛ2 3
Generic
ÛÛ3 :
>
ÛÛ: ;
(
ÛÛ; <
query
ÛÛ< A
)
ÛÛA B
.
ÛÛB C
ToList
ÛÛC I
(
ÛÛI J
)
ÛÛJ K
;
ÛÛK L
}
ÙÙ 
}
ıı 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
ex
ˆˆ 
)
ˆˆ  
{
˜˜ 
throw
¯¯ 
ex
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
}
˚˚ 
public
˝˝ 

class
˝˝ 
Generic
˝˝ 
{
˛˛ 
public
ˇˇ 
int
ˇˇ 
folhasVerificadas
ˇˇ $
{
ˇˇ% &
get
ˇˇ' *
;
ˇˇ* +
set
ˇˇ, /
;
ˇˇ/ 0
}
ˇˇ1 2
public
ÄÄ 
int
ÄÄ 
porNC
ÄÄ 
{
ÄÄ 
get
ÄÄ 
;
ÄÄ 
set
ÄÄ  #
;
ÄÄ# $
}
ÄÄ% &
public
ÅÅ 
int
ÅÅ 
conforme
ÅÅ 
{
ÅÅ 
get
ÅÅ !
;
ÅÅ! "
set
ÅÅ# &
;
ÅÅ& '
}
ÅÅ( )
public
ÇÇ 
int
ÇÇ 
meta
ÇÇ 
{
ÇÇ 
get
ÇÇ 
;
ÇÇ 
set
ÇÇ "
;
ÇÇ" #
}
ÇÇ$ %
public
ÉÉ 
int
ÉÉ 
	nconforme
ÉÉ 
{
ÉÉ 
get
ÉÉ "
;
ÉÉ" #
set
ÉÉ$ '
;
ÉÉ' (
}
ÉÉ) *
public
ÑÑ 
string
ÑÑ 
nome
ÑÑ 
{
ÑÑ 
get
ÑÑ  
;
ÑÑ  !
set
ÑÑ" %
;
ÑÑ% &
}
ÑÑ' (
public
ÖÖ 
string
ÖÖ 
nome2
ÖÖ 
{
ÖÖ 
get
ÖÖ !
;
ÖÖ! "
set
ÖÖ# &
;
ÖÖ& '
}
ÖÖ( )
public
ÜÜ 
string
ÜÜ 
nome3
ÜÜ 
{
ÜÜ 
get
ÜÜ !
;
ÜÜ! "
set
ÜÜ# &
;
ÜÜ& '
}
ÜÜ( )
public
áá 
int
áá 
regId
áá 
{
áá 
get
áá 
;
áá 
set
áá  #
;
áá# $
}
áá% &
}
àà 
}ââ ™Ë
uC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Relatorios\ApontamentosDiariosApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str *
)* +
]+ ,
public 

class ,
 ApontamentosDiariosApiController 1
:2 3
ApiController4 A
{ 
public ,
 ApontamentosDiariosApiController /
(/ 0
)0 1
{ 	
db 
. 
Configuration 
. 
LazyLoadingEnabled /
=0 1
false2 7
;7 8
})) 	
private++ 
List++ 
<++ (
ApontamentosDiariosResultSet++ 1
>++1 2
_mock++3 8
{++9 :
get++; >
;++> ?
set++@ C
;++C D
}++E F
private,, 
List,, 
<,, (
ApontamentosDiariosResultSet,, 1
>,,1 2
_list,,3 8
{,,9 :
get,,; >
;,,> ?
set,,@ C
;,,C D
},,E F
private-- 
SgqDbDevEntities--  
db--! #
=--$ %
new--& )
SgqDbDevEntities--* :
(--: ;
)--; <
;--< =
[// 	
HttpPost//	 
]// 
[00 	
Route00	 
(00 
$str00 
)00 
]00 
public11 
List11 
<11 (
ApontamentosDiariosResultSet11 0
>110 1"
GetApontamentosDiarios112 H
(11H I
[11I J
FromBody11J R
]11R S,
 FormularioParaRelatorioViewModel11T t
form11u y
)11y z
{22 	
	CommonLog44 
.44 

SaveReport44  
(44  !
form44! %
,44% &
$str44' D
)44D E
;44E F
var66 
query66 
=66 
new66 (
ApontamentosDiariosResultSet66 8
(668 9
)669 :
.66: ;
Select66; A
(66A B
form66B F
)66F G
;66G H
_list77 
=77 
db77 
.77 
Database77 
.77  
SqlQuery77  (
<77( )(
ApontamentosDiariosResultSet77) E
>77E F
(77F G
query77G L
)77L M
.77M N
ToList77N T
(77T U
)77U V
;77V W
return88 
_list88 
;88 
}99 	
[;; 	
HttpPost;;	 
];; 
[<< 	
Route<<	 
(<< 
$str<< 
)<< 
]<< 
public== 
Result_Level3DTO== 
EditResultLevel3==  0
(==0 1
int==1 4
id==5 7
)==7 8
{>> 	
var?? 
retorno?? 
=?? 
Mapper??  
.??  !
Map??! $
<??$ %
Result_Level3DTO??% 5
>??5 6
(??6 7
Result_Level3DTO??7 G
.??G H
GetById??H O
(??O P
id??P R
)??R S
)??S T
;??T U
return@@ 
retorno@@ 
;@@ 
}AA 	
[CC 	
HttpPostCC	 
]CC 
[DD 	
RouteDD	 
(DD 
$strDD 
)DD 
]DD 
publicEE 
Result_Level3DTOEE 
SaveResultLevel3EE  0
(EE0 1
[EE1 2
FromBodyEE2 :
]EE: ;
Result_Level3DTOEE< L
resultLevel3EEM Y
)EEY Z
{FF 	
varHH 
queryHH 
=HH 
resultLevel3HH $
.HH$ %
CreateUpdateHH% 1
(HH1 2
)HH2 3
;HH3 4
tryJJ 
{KK 
dbLL 
.LL 
DatabaseLL 
.LL 
ExecuteSqlCommandLL -
(LL- .
queryLL. 3
)LL3 4
;LL4 5
varMM 
level3ResultMM  
=MM! "
dbMM# %
.MM% &
Result_Level3MM& 3
.MM3 4
FirstOrDefaultMM4 B
(MMB C
rMMC D
=>MME G
rMMH I
.MMI J
IdMMJ L
==MMM O
resultLevel3MMP \
.MM\ ]
IdMM] _
)MM_ `
;MM` a
ConsolidacaoEdicaoNN "
(NN" #
resultLevel3NN# /
.NN/ 0
IdNN0 2
)NN2 3
;NN3 4
}PP 
catchQQ 
(QQ 
SystemQQ 
.QQ 
	ExceptionQQ #
eQQ$ %
)QQ% &
{RR 
throwSS 
eSS 
;SS 
}TT 
returnVV 
MapperVV 
.VV 
MapVV 
<VV 
Result_Level3DTOVV .
>VV. /
(VV/ 0
Result_Level3DTOVV0 @
.VV@ A
GetByIdVVA H
(VVH I
resultLevel3VVI U
.VVU V
IdVVV X
)VVX Y
)VVY Z
;VVZ [
}WW 	
[YY 	
HttpPostYY	 
]YY 
[ZZ 	
RouteZZ	 
(ZZ 
$strZZ 7
)ZZ7 8
]ZZ8 9
public[[ 
List[[ 
<[[ 
CollectionLevel2[[ $
>[[$ %
GetResultLevel3[[& 5
([[5 6
int[[6 9
level1[[: @
,[[@ A
int[[B E
shift[[F K
,[[K L
int[[M P
period[[Q W
,[[W X
DateTime[[Y a
date[[b f
)[[f g
{\\ 	
db]] 
.]] 
Configuration]] 
.]] 
LazyLoadingEnabled]] /
=]]0 1
false]]2 7
;]]7 8
db^^ 
.^^ 
Configuration^^ 
.^^  
ProxyCreationEnabled^^ 1
=^^2 3
false^^4 9
;^^9 :
varaa 
retornoaa 
=aa 
dbaa 
.aa 
CollectionLevel2aa -
.aa- .
Whereaa. 3
(aa3 4
raa4 5
=>aa6 8
raa9 :
.aa: ;
ParLevel1_Idaa; G
==aaH J
level1aaK Q
)aaQ R
.aaR S
IncludeaaS Z
(aaZ [
$straa[ j
)aaj k
.aak l
Includeaal s
(aas t
$str	aat é
)
aaé è
.
aaè ê
ToList
aaê ñ
(
aañ ó
)
aaó ò
;
aaò ô
returnbb 
retornobb 
;bb 
}yy 	
public{{ 
void{{ 
ConsolidacaoEdicao{{ &
({{& '
int{{' *
id{{+ -
){{- .
{|| 	
var}} 
level3}} 
=}} 
db}} 
.}} 
Result_Level3}} )
.}}) *
Include}}* 1
(}}1 2
$str}}2 D
)}}D E
.}}E F
FirstOrDefault}}F T
(}}T U
r}}U V
=>}}W Y
r}}Z [
.}}[ \
Id}}\ ^
==}}_ a
id}}b d
)}}d e
;}}e f
var 
data 
= 
level3 
. 
CollectionLevel2 .
.. /
CollectionDate/ =
;= >
var
ÄÄ 

company_Id
ÄÄ 
=
ÄÄ 
level3
ÄÄ #
.
ÄÄ# $
CollectionLevel2
ÄÄ$ 4
.
ÄÄ4 5
UnitId
ÄÄ5 ;
;
ÄÄ; <
var
ÅÅ 
	level1_Id
ÅÅ 
=
ÅÅ 
level3
ÅÅ "
.
ÅÅ" #
CollectionLevel2
ÅÅ# 3
.
ÅÅ3 4
ParLevel1_Id
ÅÅ4 @
;
ÅÅ@ A
var
ÉÉ 
service
ÉÉ 
=
ÉÉ 
new
ÉÉ 
SyncServices
ÉÉ *
(
ÉÉ* +
)
ÉÉ+ ,
;
ÉÉ, -
var
ÑÑ 
retorno
ÑÑ 
=
ÑÑ 
service
ÑÑ !
.
ÑÑ! "&
_ReConsolidationByLevel1
ÑÑ" :
(
ÑÑ: ;

company_Id
ÑÑ; E
,
ÑÑE F
	level1_Id
ÑÑG P
,
ÑÑP Q
data
ÑÑR V
)
ÑÑV W
;
ÑÑW X
}
ÖÖ 	
public
áá 
class
áá 
Result_Level3DTO
áá %
{
àà 	
public
ââ 
static
ââ 
Result_Level3
ââ '
GetById
ââ( /
(
ââ/ 0
int
ââ0 3
id
ââ4 6
)
ââ6 7
{
ää 
Result_Level3
ãã 
resultLevel3
ãã *
;
ãã* +
using
åå 
(
åå 
var
åå 
databaseSgq
åå &
=
åå' (
new
åå) ,
SgqDbDevEntities
åå- =
(
åå= >
)
åå> ?
)
åå? @
{
çç 
databaseSgq
éé 
.
éé  
Configuration
éé  -
.
éé- . 
LazyLoadingEnabled
éé. @
=
ééA B
false
ééC H
;
ééH I
resultLevel3
êê  
=
êê! "
databaseSgq
êê# .
.
êê. /
Result_Level3
êê/ <
.
êê< =
AsNoTracking
êê= I
(
êêI J
)
êêJ K
.
êêK L
FirstOrDefault
êêL Z
(
êêZ [
r
êê[ \
=>
êê] _
r
êê` a
.
êêa b
Id
êêb d
==
êêe g
id
êêh j
)
êêj k
;
êêk l
resultLevel3
ëë  
.
ëë  !
	ParLevel3
ëë! *
=
ëë+ ,
databaseSgq
ëë- 8
.
ëë8 9
	ParLevel3
ëë9 B
.
ëëB C
AsNoTracking
ëëC O
(
ëëO P
)
ëëP Q
.
ëëQ R
FirstOrDefault
ëëR `
(
ëë` a
r
ëëa b
=>
ëëc e
r
ëëf g
.
ëëg h
Id
ëëh j
==
ëëk m
resultLevel3
ëën z
.
ëëz {
ParLevel3_Idëë{ á
)ëëá à
;ëëà â
resultLevel3
íí  
.
íí  !
	ParLevel3
íí! *
.
íí* +
ParLevel3Value
íí+ 9
=
íí: ;
databaseSgq
íí< G
.
ííG H
ParLevel3Value
ííH V
.
ííV W
AsNoTracking
ííW c
(
ííc d
)
ííd e
.
ííe f
Where
ííf k
(
íík l
r
ííl m
=>
íín p
r
ííq r
.
íír s
ParLevel3_Id
íís 
==ííÄ Ç
resultLevel3ííÉ è
.ííè ê
ParLevel3_Idííê ú
&&ííù ü
ríí† °
.íí° ¢
IsActiveíí¢ ™
==íí´ ≠
trueííÆ ≤
)íí≤ ≥
.íí≥ ¥
ToListíí¥ ∫
(íí∫ ª
)ííª º
;ííº Ω
resultLevel3
ìì  
.
ìì  !
CollectionLevel2
ìì! 1
=
ìì2 3
databaseSgq
ìì4 ?
.
ìì? @
CollectionLevel2
ìì@ P
.
ììP Q
AsNoTracking
ììQ ]
(
ìì] ^
)
ìì^ _
.
ìì_ `
FirstOrDefault
ìì` n
(
ììn o
r
ììo p
=>
ììq s
r
ììt u
.
ììu v
Id
ììv x
==
ììy {
resultLevel3ìì| à
.ììà â#
CollectionLevel2_Idììâ ú
)ììú ù
;ììù û
}
îî 
return
ññ 
resultLevel3
ññ #
;
ññ# $
}
óó 
private
ôô 
void
ôô 
GetDataToEdit
ôô &
(
ôô& '
)
ôô' (
{
öö 
using
õõ 
(
õõ 
var
õõ 
databaseSgq
õõ &
=
õõ' (
new
õõ) ,
SgqDbDevEntities
õõ- =
(
õõ= >
)
õõ> ?
)
õõ? @
{
úú 
if
ùù 
(
ùù 
	ParLevel3
ùù !
.
ùù! "
IsNull
ùù" (
(
ùù( )
)
ùù) *
)
ùù* +
{
ûû 
databaseSgq
üü #
.
üü# $
Configuration
üü$ 1
.
üü1 2 
LazyLoadingEnabled
üü2 D
=
üüE F
false
üüG L
;
üüL M
var
°° 
	resultOld
°° %
=
°°& '
databaseSgq
°°( 3
.
°°3 4
Result_Level3
°°4 A
.
°°A B
FirstOrDefault
°°B P
(
°°P Q
r
°°Q R
=>
°°S U
r
°°V W
.
°°W X
Id
°°X Z
==
°°[ ]
Id
°°^ `
)
°°` a
;
°°a b
var
¢¢ 
	parL3vel3
¢¢ %
=
¢¢& '
databaseSgq
¢¢( 3
.
¢¢3 4
	ParLevel3
¢¢4 =
.
¢¢= >
AsNoTracking
¢¢> J
(
¢¢J K
)
¢¢K L
.
¢¢L M
FirstOrDefault
¢¢M [
(
¢¢[ \
r
¢¢\ ]
=>
¢¢^ `
r
¢¢a b
.
¢¢b c
Id
¢¢c e
==
¢¢f h
	resultOld
¢¢i r
.
¢¢r s
ParLevel3_Id
¢¢s 
)¢¢ Ä
;¢¢Ä Å
var
££ 
parLevel3Value
££ *
=
££+ ,
databaseSgq
££- 8
.
££8 9
ParLevel3Value
££9 G
.
££G H
AsNoTracking
££H T
(
££T U
)
££U V
.
££V W
Where
££W \
(
££\ ]
r
££] ^
=>
££_ a
r
££b c
.
££c d
ParLevel3_Id
££d p
==
££q s
	resultOld
££t }
.
££} ~
ParLevel3_Id££~ ä
&&££ã ç
r££é è
.££è ê
IsActive££ê ò
==££ô õ
true££ú †
)££† °
.££° ¢
ToList££¢ ®
(££® ©
)££© ™
;££™ ´
CollectionLevel2
§§ (
=
§§) *
databaseSgq
§§+ 6
.
§§6 7
CollectionLevel2
§§7 G
.
§§G H
AsNoTracking
§§H T
(
§§T U
)
§§U V
.
§§V W
FirstOrDefault
§§W e
(
§§e f
r
§§f g
=>
§§h j
r
§§k l
.
§§l m
Id
§§m o
==
§§p r
	resultOld
§§s |
.
§§| }"
CollectionLevel2_Id§§} ê
)§§ê ë
;§§ë í
Weight
¶¶ 
=
¶¶  
	resultOld
¶¶! *
.
¶¶* +
Weight
¶¶+ 1
;
¶¶1 2
IntervalMax
ßß #
=
ßß$ %
	resultOld
ßß& /
.
ßß/ 0
IntervalMax
ßß0 ;
;
ßß; <
IntervalMin
®® #
=
®®$ %
	resultOld
®®& /
.
®®/ 0
IntervalMin
®®0 ;
;
®®; <
PunishmentValue
©© '
=
©©( )
	resultOld
©©* 3
.
©©3 4
PunishmentValue
©©4 C
;
©©C D
	ParLevel3
™™ !
=
™™" #
Mapper
™™$ *
.
™™* +
Map
™™+ .
<
™™. /
ParLevel3DTO
™™/ ;
>
™™; <
(
™™< =
	parL3vel3
™™= F
)
™™F G
;
™™G H
	ParLevel3
´´ !
.
´´! "
ParLevel3Value
´´" 0
=
´´1 2
Mapper
´´3 9
.
´´9 :
Map
´´: =
<
´´= >
List
´´> B
<
´´B C
ParLevel3ValueDTO
´´C T
>
´´T U
>
´´U V
(
´´V W
parLevel3Value
´´W e
)
´´e f
;
´´f g
}
¨¨ 
}
≠≠ 
}
ÆÆ 
internal
∞∞ 
string
∞∞ 
CreateUpdate
∞∞ (
(
∞∞( )
)
∞∞) *
{
≤≤ 
isQueryEdit
≥≥ 
=
≥≥ 
true
≥≥ "
;
≥≥" #
GetDataToEdit
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
if
∂∂ 
(
∂∂ 
string
∂∂ 
.
∂∂ 
IsNullOrEmpty
∂∂ (
(
∂∂( )
Value
∂∂) .
)
∂∂. /
)
∂∂/ 0
{
∑∑ 
using
∏∏ 
(
∏∏ 
var
∏∏ 
databaseSgq
∏∏ *
=
∏∏+ ,
new
∏∏- 0
SgqDbDevEntities
∏∏1 A
(
∏∏A B
)
∏∏B C
)
∏∏C D
{
ππ 
Value
∫∫ 
=
∫∫ 
databaseSgq
∫∫  +
.
∫∫+ ,
Result_Level3
∫∫, 9
.
∫∫9 :
FirstOrDefault
∫∫: H
(
∫∫H I
r
∫∫I J
=>
∫∫K M
r
∫∫N O
.
∫∫O P
Id
∫∫P R
==
∫∫S U
Id
∫∫V X
)
∫∫X Y
.
∫∫Y Z
Value
∫∫Z _
;
∫∫_ `
}
ªª 
}
ºº 
var
ææ 
texto
ææ 
=
ææ 
$str
ææ 
;
ææ 
if
¿¿ 
(
¿¿ 
!
¿¿ 
string
¿¿ 
.
¿¿ 
IsNullOrEmpty
¿¿ )
(
¿¿) *
	ValueText
¿¿* 3
)
¿¿3 4
)
¿¿4 5
{
¡¡ 
texto
¬¬ 
+=
¬¬ 
	ValueText
¬¬ &
;
¬¬& '
}
√√ 
decimal
»» 
_WeiEvaluation2
»» '
=
»»( )
Decimal
»»* 1
.
»»1 2
ToInt32
»»2 9
(
»»9 :
_WeiEvaluation
»»: H
)
»»H I
;
»»I J
using
   
(
   
var
   
databaseSgq
   &
=
  ' (
new
  ) ,
SgqDbDevEntities
  - =
(
  = >
)
  > ?
)
  ? @
{
ÀÀ 
var
ÕÕ 
result_level3_obj
ÕÕ )
=
ÕÕ* +
databaseSgq
ÕÕ, 7
.
ÕÕ7 8
Result_Level3
ÕÕ8 E
.
ÕÕE F
FirstOrDefault
ÕÕF T
(
ÕÕT U
r
ÕÕU V
=>
ÕÕW Y
r
ÕÕZ [
.
ÕÕ[ \
Id
ÕÕ\ ^
==
ÕÕ_ a
Id
ÕÕb d
)
ÕÕd e
;
ÕÕe f
var
œœ "
collectionLevel2_obj
œœ ,
=
œœ- .
databaseSgq
œœ/ :
.
œœ: ;
CollectionLevel2
œœ; K
.
œœK L
FirstOrDefault
œœL Z
(
œœZ [
r
œœ[ \
=>
œœ] _
r
œœ` a
.
œœa b
Id
œœb d
==
œœe g
result_level3_obj
œœh y
.
œœy z"
CollectionLevel2_Idœœz ç
)œœç é
;œœé è
var
—— 
parLeve1BEA
—— #
=
——$ %
databaseSgq
——& 1
.
——1 20
"ParLevel1VariableProductionXLevel1
——2 T
.
——T U
FirstOrDefault
——U c
(
——c d
r
——d e
=>
——f h
r
——i j
.
——j k
ParLevel1_Id
——k w
==
——x z#
collectionLevel2_obj——{ è
.——è ê
ParLevel1_Id——ê ú
)——ú ù
;——ù û
if
‘‘ 
(
‘‘ 
parLeve1BEA
‘‘ #
!=
‘‘$ &
null
‘‘' +
)
‘‘+ ,
if
’’ 
(
’’ 
parLeve1BEA
’’ '
.
’’' (,
ParLevel1VariableProduction_Id
’’( F
==
’’G I
$num
’’J K
)
’’K L
{
÷÷ 
var
◊◊ #
collectionLevel2_obj2
◊◊  5
=
◊◊6 7
databaseSgq
◊◊8 C
.
◊◊C D
CollectionLevel2
◊◊D T
.
◊◊T U
Where
◊◊U Z
(
◊◊Z [
r
ÿÿ 
=>
ÿÿ  
DbFunctions
ÿÿ! ,
.
ÿÿ, -
TruncateTime
ÿÿ- 9
(
ÿÿ9 :
r
ÿÿ: ;
.
ÿÿ; <
CollectionDate
ÿÿ< J
)
ÿÿJ K
==
ÿÿL N
DbFunctions
ÿÿO Z
.
ÿÿZ [
TruncateTime
ÿÿ[ g
(
ÿÿg h"
collectionLevel2_obj
ÿÿh |
.
ÿÿ| }
CollectionDateÿÿ} ã
)ÿÿã å
&&ÿÿç è
r
ŸŸ 
.
ŸŸ 
ParLevel1_Id
ŸŸ *
==
ŸŸ+ -"
collectionLevel2_obj
ŸŸ. B
.
ŸŸB C
ParLevel1_Id
ŸŸC O
&&
ŸŸP R
r
⁄⁄ 
.
⁄⁄ 
Shift
⁄⁄ #
==
⁄⁄$ &"
collectionLevel2_obj
⁄⁄' ;
.
⁄⁄; <
Shift
⁄⁄< A
&&
⁄⁄B D
r
€€ 
.
€€ 
Period
€€ $
==
€€% '"
collectionLevel2_obj
€€( <
.
€€< =
Period
€€= C
&&
€€D F
r
‹‹ 
.
‹‹ 
UnitId
‹‹ $
==
‹‹% '"
collectionLevel2_obj
‹‹( <
.
‹‹< =
UnitId
‹‹= C
&&
‹‹D F
r
›› 
.
›› 
Sample
›› $
<
››% &"
collectionLevel2_obj
››' ;
.
››; <
Sample
››< B
)
ﬁﬁ 
.
ﬁﬁ 
OrderByDescending
ﬁﬁ /
(
ﬁﬁ/ 0
r
ﬁﬁ0 1
=>
ﬁﬁ2 4
r
ﬁﬁ5 6
.
ﬁﬁ6 7
Sample
ﬁﬁ7 =
)
ﬁﬁ= >
.
ﬁﬁ> ?
FirstOrDefault
ﬁﬁ? M
(
ﬁﬁM N
)
ﬁﬁN O
;
ﬁﬁO P
if
·· 
(
··  #
collectionLevel2_obj2
··  5
!=
··6 8
null
··9 =
)
··= >
_WeiEvaluation2
„„  /
=
„„0 1"
collectionLevel2_obj
„„2 F
.
„„F G
Sample
„„G M
-
„„N O#
collectionLevel2_obj2
„„P e
.
„„e f
Sample
„„f l
;
„„l m
else
ÂÂ  
_WeiEvaluation2
ÊÊ  /
=
ÊÊ0 1"
collectionLevel2_obj
ÊÊ2 F
.
ÊÊF G
Sample
ÊÊG M
;
ÊÊM N
}
ÍÍ 
}
ÎÎ 
var
ÌÌ 
query
ÌÌ 
=
ÌÌ 
$str
ÌÌ ?
;
ÌÌ? @
query
ÓÓ 
+=
ÓÓ 
$str
ÓÓ ,
+
ÓÓ- .

_IsConform
ÓÓ/ 9
+
ÓÓ: ;
$str
ÓÓ< ?
;
ÓÓ? @
query
ÔÔ 
+=
ÔÔ 
$str
ÔÔ *
+
ÔÔ+ ,
_Defects
ÔÔ- 5
+
ÔÔ6 7
$str
ÔÔ8 ;
;
ÔÔ; <
query
 
+=
 
$str
 -
+
. /
_WeiDefects
0 ;
+
< =
$str
> A
;
A B
query
ÒÒ 
+=
ÒÒ 
$str
ÒÒ (
+
ÒÒ) *
_Value
ÒÒ+ 1
+
ÒÒ2 3
$str
ÒÒ4 7
;
ÒÒ7 8
query
ÚÚ 
+=
ÚÚ 
$str
ÚÚ 0
+
ÚÚ1 2
_IsNotEvaluate
ÚÚ3 A
+
ÚÚB C
$str
ÚÚD G
;
ÚÚG H
query
ÛÛ 
+=
ÛÛ 
$str
ÛÛ -
+
ÛÛ. /
texto
ÛÛ0 5
+
ÛÛ6 7
$str
ÛÛ8 <
;
ÛÛ< =
query
ÙÙ 
+=
ÙÙ 
$str
ÙÙ 0
+
ÙÙ1 2
Decimal
ÙÙ3 :
.
ÙÙ: ;
ToInt32
ÙÙ; B
(
ÙÙB C
_WeiEvaluation2
ÙÙC R
)
ÙÙR S
+
ÙÙT U
$str
ÙÙV Y
;
ÙÙY Z
query
ıı 
=
ıı 
query
ıı 
.
ıı 
Remove
ıı $
(
ıı$ %
query
ıı% *
.
ıı* +
Length
ıı+ 1
-
ıı2 3
$num
ıı4 5
)
ıı5 6
;
ıı6 7
query
ˆˆ 
+=
ˆˆ 
$str
ˆˆ )
+
ˆˆ* +
Id
ˆˆ, .
;
ˆˆ. /
query
˘˘ 
+=
˘˘ 
$str˘˘ è
+˘˘ê ë
$str
˙˙ g
+
˙˙h i
Id
˙˙j l
+
˙˙m n
$str˙˙o è
+˙˙ê ë
$str˚˚ è
+˚˚ê ë
$str¸¸ è
+¸¸ê ë
$str˝˝ è
+˝˝ê ë
$str˛˛ è
+˛˛ê ë
$strˇˇ è
+ˇˇê ë
$strÄÄ è
+ÄÄê ë
$strÅÅ è
+ÅÅê ë
$strÇÇ è
+ÇÇê ë
$strÉÉ è
+ÉÉê ë
$strÑÑ è
+ÑÑê ë
$strÖÖ è
+ÖÖê ë
$strÜÜ í
+ÜÜì î
$stráá è
+ááê ë
$stràà é
+ààè ê
$strââ è
+ââê ë
$strää è
+ääê ë
$strãã £
+ãã§ •
$stråå è
+ååê ë
$strçç è
+ççê ë
$stréé è
+ééê ë
$strèè è
+èèê ë
$strêê è
+êêê ë
$strëë è
+ëëê ë
$stríí è
+ííê ë
$strìì è
+ììê ë
$strîî è
+îîê ë
$strïï è
+ïïê ë
$strññ è
+ññê ë
$stróó è
+óóê ë
$stròò è
+òòê ë
$strôô è
+ôôê ë
$ströö è
;ööè ê
return
úú 
query
úú 
;
úú 
}
ùù 
public
üü 
bool
üü 
isQueryEdit
üü #
{
üü$ %
get
üü& )
;
üü) *
set
üü+ .
;
üü. /
}
üü0 1
public
†† 
int
†† 
Id
†† 
{
†† 
get
†† 
;
††  
set
††! $
;
††$ %
}
††& '
public
°° 
int
°° !
CollectionLevel2_Id
°° *
{
°°+ ,
get
°°- 0
;
°°0 1
set
°°2 5
;
°°5 6
}
°°7 8
public
¢¢ 
int
¢¢ 
ParLevel3_Id
¢¢ #
{
¢¢$ %
get
¢¢& )
;
¢¢) *
set
¢¢+ .
;
¢¢. /
}
¢¢0 1
public
££ 
string
££ 
ParLevel3_Name
££ (
{
££) *
get
££+ .
;
££. /
set
££0 3
;
££3 4
}
££5 6
public
§§ 
Nullable
§§ 
<
§§ 
decimal
§§ #
>
§§# $
Weight
§§% +
{
§§, -
get
§§. 1
;
§§1 2
set
§§3 6
;
§§6 7
}
§§8 9
public
•• 
string
•• 
IntervalMin
•• %
{
••& '
get
••( +
;
••+ ,
set
••- 0
;
••0 1
}
••2 3
public
¶¶ 
string
¶¶ 
IntervalMax
¶¶ %
{
¶¶& '
get
¶¶( +
;
¶¶+ ,
set
¶¶- 0
;
¶¶0 1
}
¶¶2 3
public
®® 
string
®® 
Value
®® 
{
®®  !
get
®®" %
;
®®% &
set
®®' *
;
®®* +
}
®®, -
public
©© 
string
©© 
_Value
©©  
{
™™ 
get
´´ 
{
¨¨ 
if
≠≠ 
(
≠≠ 
isQueryEdit
≠≠ #
)
≠≠# $
{
ÆÆ 
try
ØØ 
{
∞∞ 
if
±± 
(
±±  
	ParLevel3
±±  )
.
±±) *
ParLevel3Value
±±* 8
.
±±8 9
FirstOrDefault
±±9 G
(
±±G H
r
±±H I
=>
±±J L
r
±±M N
.
±±N O
ParCompany_Id
±±O \
==
±±] _
CollectionLevel2
±±` p
.
±±p q
UnitId
±±q w
&&
±±x z
r
±±{ |
.
±±| }$
ParLevel3InputType_Id±±} í
==±±ì ï
$num±±ñ ó
)±±ó ò
!=±±ô õ
null±±ú †
)±±† °
return
≤≤  &
$str
≤≤' *
;
≤≤* +
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ (
e
¥¥) *
)
¥¥* +
{
µµ 
throw
∑∑ !
new
∑∑" %
	Exception
∑∑& /
(
∑∑/ 0
$str
∑∑0 n
,
∑∑n o
e
∑∑p q
)
∑∑q r
;
∑∑r s
}
∏∏ 
try
∫∫ 
{
ªª 
if
ºº 
(
ºº  
	ParLevel3
ºº  )
.
ºº) *
ParLevel3Value
ºº* 8
.
ºº8 9
FirstOrDefault
ºº9 G
(
ººG H
r
ººH I
=>
ººJ L
r
ººM N
.
ººN O
ParCompany_Id
ººO \
==
ºº] _
CollectionLevel2
ºº` p
.
ººp q
UnitId
ººq w
&&
ººx z
r
ºº{ |
.
ºº| }$
ParLevel3InputType_Idºº} í
==ººì ï
$numººñ ó
)ººó ò
!=ººô õ
nullººú †
)ºº† °
return
ΩΩ  &
Value
ΩΩ' ,
.
ΩΩ, -
ToString
ΩΩ- 5
(
ΩΩ5 6
)
ΩΩ6 7
;
ΩΩ7 8
}
ææ 
catch
øø 
(
øø 
	Exception
øø (
e
øø) *
)
øø* +
{
¿¿ 
throw
¡¡ !
new
¡¡" %
	Exception
¡¡& /
(
¡¡/ 0
$str
¡¡0 n
,
¡¡n o
e
¡¡p q
)
¡¡q r
;
¡¡r s
}
¬¬ 
try
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆  
	ParLevel3
∆∆  )
.
∆∆) *
ParLevel3Value
∆∆* 8
.
∆∆8 9
FirstOrDefault
∆∆9 G
(
∆∆G H
r
∆∆H I
=>
∆∆J L
r
∆∆M N
.
∆∆N O
ParCompany_Id
∆∆O \
==
∆∆] _
CollectionLevel2
∆∆` p
.
∆∆p q
UnitId
∆∆q w
&&
∆∆x z
r
∆∆{ |
.
∆∆| }$
ParLevel3InputType_Id∆∆} í
==∆∆ì ï
$num∆∆ñ ó
)∆∆ó ò
!=∆∆ô õ
null∆∆ú †
)∆∆† °
return
««  &
Guard
««' ,
.
««, -$
ConverteValorCalculado
««- C
(
««C D
Value
««D I
)
««I J
.
««J K
ToString
««K S
(
««S T
$str
««T Y
)
««Y Z
.
««Z [
Replace
««[ b
(
««b c
$str
««c f
,
««f g
$str
««h k
)
««k l
;
««l m
}
»» 
catch
…… 
(
…… 
	Exception
…… (
e
……) *
)
……* +
{
   
throw
ÀÀ !
new
ÀÀ" %
	Exception
ÀÀ& /
(
ÀÀ/ 0
$str
ÀÀ0 n
,
ÀÀn o
e
ÀÀp q
)
ÀÀq r
;
ÀÀr s
throw
ÀÀt y
;
ÀÀy z
}
ÃÃ 
try
ŒŒ 
{
œœ 
if
–– 
(
––  
	ParLevel3
––  )
.
––) *
ParLevel3Value
––* 8
.
––8 9
FirstOrDefault
––9 G
(
––G H
r
––H I
=>
––J L
r
––M N
.
––N O
ParCompany_Id
––O \
==
––] _
CollectionLevel2
––` p
.
––p q
UnitId
––q w
&&
––x z
r
––{ |
.
––| }$
ParLevel3InputType_Id––} í
==––ì ï
$num––ñ ó
)––ó ò
!=––ô õ
null––ú †
)––† °
return
——  &
Guard
——' ,
.
——, -$
ConverteValorCalculado
——- C
(
——C D
Value
——D I
)
——I J
.
——J K
ToString
——K S
(
——S T
$str
——T Y
)
——Y Z
.
——Z [
Replace
——[ b
(
——b c
$str
——c f
,
——f g
$str
——h k
)
——k l
;
——l m
}
““ 
catch
”” 
(
”” 
	Exception
”” (
e
””) *
)
””* +
{
‘‘ 
throw
’’ !
new
’’" %
	Exception
’’& /
(
’’/ 0
$str
’’0 n
,
’’n o
e
’’p q
)
’’q r
;
’’r s
throw
’’t y
;
’’y z
}
÷÷ 
try
ÿÿ 
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄  
	ParLevel3
⁄⁄  )
.
⁄⁄) *
ParLevel3Value
⁄⁄* 8
.
⁄⁄8 9
FirstOrDefault
⁄⁄9 G
(
⁄⁄G H
r
⁄⁄H I
=>
⁄⁄J L
r
⁄⁄M N
.
⁄⁄N O
ParCompany_Id
⁄⁄O \
==
⁄⁄] _
CollectionLevel2
⁄⁄` p
.
⁄⁄p q
UnitId
⁄⁄q w
&&
⁄⁄x z
r
⁄⁄{ |
.
⁄⁄| }$
ParLevel3InputType_Id⁄⁄} í
==⁄⁄ì ï
$num⁄⁄ñ ó
)⁄⁄ó ò
!=⁄⁄ô õ
null⁄⁄ú †
)⁄⁄† °
return
€€  &
$str
€€' *
;
€€* +
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› (
e
››) *
)
››* +
{
ﬁﬁ 
throw
ﬂﬂ !
new
ﬂﬂ" %
	Exception
ﬂﬂ& /
(
ﬂﬂ/ 0
$str
ﬂﬂ0 n
,
ﬂﬂn o
e
ﬂﬂp q
)
ﬂﬂq r
;
ﬂﬂr s
throw
ﬂﬂt y
;
ﬂﬂy z
}
‡‡ 
try
‰‰ 
{
ÂÂ 
if
ÊÊ 
(
ÊÊ  
	ParLevel3
ÊÊ  )
.
ÊÊ) *
ParLevel3Value
ÊÊ* 8
.
ÊÊ8 9
FirstOrDefault
ÊÊ9 G
(
ÊÊG H
r
ÊÊH I
=>
ÊÊJ L
r
ÊÊM N
.
ÊÊN O
ParCompany_Id
ÊÊO \
==
ÊÊ] _
null
ÊÊ` d
&&
ÊÊe g
r
ÊÊh i
.
ÊÊi j#
ParLevel3InputType_Id
ÊÊj 
==ÊÊÄ Ç
$numÊÊÉ Ñ
)ÊÊÑ Ö
!=ÊÊÜ à
nullÊÊâ ç
)ÊÊç é
return
ÁÁ  &
$str
ÁÁ' *
;
ÁÁ* +
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ (
e
ÈÈ) *
)
ÈÈ* +
{
ÍÍ 
throw
ÏÏ !
new
ÏÏ" %
	Exception
ÏÏ& /
(
ÏÏ/ 0
$str
ÏÏ0 n
,
ÏÏn o
e
ÏÏp q
)
ÏÏq r
;
ÏÏr s
}
ÌÌ 
try
ÔÔ 
{
 
if
ÒÒ 
(
ÒÒ  
	ParLevel3
ÒÒ  )
.
ÒÒ) *
ParLevel3Value
ÒÒ* 8
.
ÒÒ8 9
FirstOrDefault
ÒÒ9 G
(
ÒÒG H
r
ÒÒH I
=>
ÒÒJ L
r
ÒÒM N
.
ÒÒN O
ParCompany_Id
ÒÒO \
==
ÒÒ] _
null
ÒÒ` d
&&
ÒÒe g
r
ÒÒh i
.
ÒÒi j#
ParLevel3InputType_Id
ÒÒj 
==ÒÒÄ Ç
$numÒÒÉ Ñ
)ÒÒÑ Ö
!=ÒÒÜ à
nullÒÒâ ç
)ÒÒç é
return
ÚÚ  &
Value
ÚÚ' ,
.
ÚÚ, -
ToString
ÚÚ- 5
(
ÚÚ5 6
)
ÚÚ6 7
;
ÚÚ7 8
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ (
e
ÙÙ) *
)
ÙÙ* +
{
ıı 
throw
ˆˆ !
new
ˆˆ" %
	Exception
ˆˆ& /
(
ˆˆ/ 0
$str
ˆˆ0 n
,
ˆˆn o
e
ˆˆp q
)
ˆˆq r
;
ˆˆr s
}
˜˜ 
try
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚  
	ParLevel3
˚˚  )
.
˚˚) *
ParLevel3Value
˚˚* 8
.
˚˚8 9
FirstOrDefault
˚˚9 G
(
˚˚G H
r
˚˚H I
=>
˚˚J L
r
˚˚M N
.
˚˚N O
ParCompany_Id
˚˚O \
==
˚˚] _
null
˚˚` d
&&
˚˚e g
r
˚˚h i
.
˚˚i j#
ParLevel3InputType_Id
˚˚j 
==˚˚Ä Ç
$num˚˚É Ñ
)˚˚Ñ Ö
!=˚˚Ü à
null˚˚â ç
)˚˚ç é
return
¸¸  &
Guard
¸¸' ,
.
¸¸, -$
ConverteValorCalculado
¸¸- C
(
¸¸C D
Value
¸¸D I
)
¸¸I J
.
¸¸J K
ToString
¸¸K S
(
¸¸S T
$str
¸¸T Y
)
¸¸Y Z
.
¸¸Z [
Replace
¸¸[ b
(
¸¸b c
$str
¸¸c f
,
¸¸f g
$str
¸¸h k
)
¸¸k l
;
¸¸l m
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ (
e
˛˛) *
)
˛˛* +
{
ˇˇ 
throw
ÄÄ !
new
ÄÄ" %
	Exception
ÄÄ& /
(
ÄÄ/ 0
$str
ÄÄ0 n
,
ÄÄn o
e
ÄÄp q
)
ÄÄq r
;
ÄÄr s
throw
ÄÄt y
;
ÄÄy z
}
ÅÅ 
try
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ  
	ParLevel3
ÖÖ  )
.
ÖÖ) *
ParLevel3Value
ÖÖ* 8
.
ÖÖ8 9
FirstOrDefault
ÖÖ9 G
(
ÖÖG H
r
ÖÖH I
=>
ÖÖJ L
r
ÖÖM N
.
ÖÖN O
ParCompany_Id
ÖÖO \
==
ÖÖ] _
null
ÖÖ` d
&&
ÖÖe g
r
ÖÖh i
.
ÖÖi j#
ParLevel3InputType_Id
ÖÖj 
==ÖÖÄ Ç
$numÖÖÉ Ñ
)ÖÖÑ Ö
!=ÖÖÜ à
nullÖÖâ ç
)ÖÖç é
return
ÜÜ  &
Guard
ÜÜ' ,
.
ÜÜ, -$
ConverteValorCalculado
ÜÜ- C
(
ÜÜC D
Value
ÜÜD I
)
ÜÜI J
.
ÜÜJ K
ToString
ÜÜK S
(
ÜÜS T
$str
ÜÜT Y
)
ÜÜY Z
.
ÜÜZ [
Replace
ÜÜ[ b
(
ÜÜb c
$str
ÜÜc f
,
ÜÜf g
$str
ÜÜh k
)
ÜÜk l
;
ÜÜl m
}
áá 
catch
àà 
(
àà 
	Exception
àà (
e
àà) *
)
àà* +
{
ââ 
throw
ää !
new
ää" %
	Exception
ää& /
(
ää/ 0
$str
ää0 n
,
ään o
e
ääp q
)
ääq r
;
äär s
throw
äät y
;
ääy z
}
ãã 
try
çç 
{
éé 
if
èè 
(
èè  
	ParLevel3
èè  )
.
èè) *
ParLevel3Value
èè* 8
.
èè8 9
FirstOrDefault
èè9 G
(
èèG H
r
èèH I
=>
èèJ L
r
èèM N
.
èèN O
ParCompany_Id
èèO \
==
èè] _
null
èè` d
&&
èèe g
r
èèh i
.
èèi j#
ParLevel3InputType_Id
èèj 
==èèÄ Ç
$numèèÉ Ñ
)èèÑ Ö
!=èèÜ à
nullèèâ ç
)èèç é
return
êê  &
$str
êê' *
;
êê* +
}
ëë 
catch
íí 
(
íí 
	Exception
íí (
e
íí) *
)
íí* +
{
ìì 
throw
îî !
new
îî" %
	Exception
îî& /
(
îî/ 0
$str
îî0 n
,
îîn o
e
îîp q
)
îîq r
;
îîr s
throw
îît y
;
îîy z
}
ïï 
}
…… 
return
ÀÀ 
string
ÀÀ !
.
ÀÀ! "
Empty
ÀÀ" '
;
ÀÀ' (
}
ÃÃ 
}
ÕÕ 
public
œœ 
string
œœ 
	ValueText
œœ #
{
œœ$ %
get
œœ& )
;
œœ) *
set
œœ+ .
;
œœ. /
}
œœ0 1
public
—— 
Nullable
—— 
<
—— 
bool
——  
>
——  !
	IsConform
——" +
{
——, -
get
——. 1
;
——1 2
set
——3 6
;
——6 7
}
——8 9
public
““ 
string
““ 

_IsConform
““ $
{
”” 
get
‘‘ 
{
’’ 
if
÷÷ 
(
÷÷ 
isQueryEdit
÷÷ #
)
÷÷# $
{
◊◊ 
if
ŸŸ 
(
ŸŸ 
	ParLevel3
ŸŸ %
.
ŸŸ% &
ParLevel3Value
ŸŸ& 4
.
ŸŸ4 5
FirstOrDefault
ŸŸ5 C
(
ŸŸC D
r
ŸŸD E
=>
ŸŸF H
r
ŸŸI J
.
ŸŸJ K
ParCompany_Id
ŸŸK X
==
ŸŸY [
CollectionLevel2
ŸŸ\ l
.
ŸŸl m
UnitId
ŸŸm s
&&
ŸŸt v
r
ŸŸw x
.
ŸŸx y$
ParLevel3InputType_IdŸŸy é
==ŸŸè ë
$numŸŸí ì
)ŸŸì î
!=ŸŸï ó
nullŸŸò ú
)ŸŸú ù
{
⁄⁄ 
return
€€ "
	IsConform
€€# ,
.
€€, -
GetValueOrDefault
€€- >
(
€€> ?
)
€€? @
?
€€A B
$str
€€C F
:
€€G H
$str
€€I L
;
€€L M
}
‹‹ 
else
›› 
if
›› 
(
››  !
	ParLevel3
››! *
.
››* +
ParLevel3Value
››+ 9
.
››9 :
FirstOrDefault
››: H
(
››H I
r
››I J
=>
››K M
r
››N O
.
››O P
ParCompany_Id
››P ]
==
››^ `
CollectionLevel2
››a q
.
››q r
UnitId
››r x
&&
››y {
r
››| }
.
››} ~$
ParLevel3InputType_Id››~ ì
==››î ñ
$num››ó ò
)››ò ô
!=››ö ú
null››ù °
)››° ¢
{
ﬁﬁ 
var
‡‡ 
vmax
‡‡  $
=
‡‡% &
Convert
‡‡' .
.
‡‡. /
	ToDecimal
‡‡/ 8
(
‡‡8 9
IntervalMax
‡‡9 D
,
‡‡D E
System
‡‡F L
.
‡‡L M
Globalization
‡‡M Z
.
‡‡Z [
CultureInfo
‡‡[ f
.
‡‡f g
InvariantCulture
‡‡g w
)
‡‡w x
;
‡‡x y
var
·· 
vmin
··  $
=
··% &
Convert
··' .
.
··. /
	ToDecimal
··/ 8
(
··8 9
IntervalMin
··9 D
,
··D E
System
··F L
.
··L M
Globalization
··M Z
.
··Z [
CultureInfo
··[ f
.
··f g
InvariantCulture
··g w
)
··w x
;
··x y
var
‚‚ 
valorDefinido
‚‚  -
=
‚‚. /
Guard
‚‚0 5
.
‚‚5 6$
ConverteValorCalculado
‚‚6 L
(
‚‚L M
_Value
‚‚M S
)
‚‚S T
;
‚‚T U
var
„„ 
dentroDoRange
„„  -
=
„„. /
(
„„0 1
valorDefinido
„„1 >
<=
„„? A
vmax
„„B F
&&
„„G I
valorDefinido
„„J W
>=
„„X Z
vmin
„„[ _
)
„„_ `
;
„„` a
return
‰‰ "
dentroDoRange
‰‰# 0
?
‰‰1 2
$str
‰‰3 6
:
‰‰7 8
$str
‰‰9 <
;
‰‰< =
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ  !
	ParLevel3
ÊÊ! *
.
ÊÊ* +
ParLevel3Value
ÊÊ+ 9
.
ÊÊ9 :
FirstOrDefault
ÊÊ: H
(
ÊÊH I
r
ÊÊI J
=>
ÊÊK M
r
ÊÊN O
.
ÊÊO P
ParCompany_Id
ÊÊP ]
==
ÊÊ^ `
CollectionLevel2
ÊÊa q
.
ÊÊq r
UnitId
ÊÊr x
&&
ÊÊy {
r
ÊÊ| }
.
ÊÊ} ~$
ParLevel3InputType_IdÊÊ~ ì
==ÊÊî ñ
$numÊÊó ò
)ÊÊò ô
!=ÊÊö ú
nullÊÊù °
)ÊÊ° ¢
{
ÁÁ 
var
ÈÈ 
vmax
ÈÈ  $
=
ÈÈ% &
Convert
ÈÈ' .
.
ÈÈ. /
	ToDecimal
ÈÈ/ 8
(
ÈÈ8 9
IntervalMax
ÈÈ9 D
,
ÈÈD E
System
ÈÈF L
.
ÈÈL M
Globalization
ÈÈM Z
.
ÈÈZ [
CultureInfo
ÈÈ[ f
.
ÈÈf g
InvariantCulture
ÈÈg w
)
ÈÈw x
;
ÈÈx y
var
ÍÍ 
vmin
ÍÍ  $
=
ÍÍ% &
Convert
ÍÍ' .
.
ÍÍ. /
	ToDecimal
ÍÍ/ 8
(
ÍÍ8 9
IntervalMin
ÍÍ9 D
,
ÍÍD E
System
ÍÍF L
.
ÍÍL M
Globalization
ÍÍM Z
.
ÍÍZ [
CultureInfo
ÍÍ[ f
.
ÍÍf g
InvariantCulture
ÍÍg w
)
ÍÍw x
;
ÍÍx y
var
ÎÎ 
valorDefinido
ÎÎ  -
=
ÎÎ. /
Guard
ÎÎ0 5
.
ÎÎ5 6$
ConverteValorCalculado
ÎÎ6 L
(
ÎÎL M
_Value
ÎÎM S
)
ÎÎS T
;
ÎÎT U
var
ÏÏ 
dentroDoRange
ÏÏ  -
=
ÏÏ. /
(
ÏÏ0 1
valorDefinido
ÏÏ1 >
<=
ÏÏ? A
vmax
ÏÏB F
&&
ÏÏG I
valorDefinido
ÏÏJ W
>=
ÏÏX Z
vmin
ÏÏ[ _
)
ÏÏ_ `
;
ÏÏ` a
return
ÌÌ "
dentroDoRange
ÌÌ# 0
?
ÌÌ1 2
$str
ÌÌ3 6
:
ÌÌ7 8
$str
ÌÌ9 <
;
ÌÌ< =
}
ÓÓ 
else
ÔÔ 
if
ÔÔ 
(
ÔÔ  !
	ParLevel3
ÔÔ! *
.
ÔÔ* +
ParLevel3Value
ÔÔ+ 9
.
ÔÔ9 :
FirstOrDefault
ÔÔ: H
(
ÔÔH I
r
ÔÔI J
=>
ÔÔK M
r
ÔÔN O
.
ÔÔO P
ParCompany_Id
ÔÔP ]
==
ÔÔ^ `
CollectionLevel2
ÔÔa q
.
ÔÔq r
UnitId
ÔÔr x
&&
ÔÔy {
r
ÔÔ| }
.
ÔÔ} ~$
ParLevel3InputType_IdÔÔ~ ì
==ÔÔî ñ
$numÔÔó ò
)ÔÔò ô
!=ÔÔö ú
nullÔÔù °
)ÔÔ° ¢
{
 
var
ÒÒ 
vmax
ÒÒ  $
=
ÒÒ% &
Convert
ÒÒ' .
.
ÒÒ. /
	ToDecimal
ÒÒ/ 8
(
ÒÒ8 9
IntervalMax
ÒÒ9 D
,
ÒÒD E
System
ÒÒF L
.
ÒÒL M
Globalization
ÒÒM Z
.
ÒÒZ [
CultureInfo
ÒÒ[ f
.
ÒÒf g
InvariantCulture
ÒÒg w
)
ÒÒw x
;
ÒÒx y
var
ÚÚ 
vmin
ÚÚ  $
=
ÚÚ% &
Convert
ÚÚ' .
.
ÚÚ. /
	ToDecimal
ÚÚ/ 8
(
ÚÚ8 9
IntervalMin
ÚÚ9 D
,
ÚÚD E
System
ÚÚF L
.
ÚÚL M
Globalization
ÚÚM Z
.
ÚÚZ [
CultureInfo
ÚÚ[ f
.
ÚÚf g
InvariantCulture
ÚÚg w
)
ÚÚw x
;
ÚÚx y
var
ÛÛ 
valorDefinido
ÛÛ  -
=
ÛÛ. /
Guard
ÛÛ0 5
.
ÛÛ5 6$
ConverteValorCalculado
ÛÛ6 L
(
ÛÛL M
_Value
ÛÛM S
)
ÛÛS T
;
ÛÛT U
var
ÙÙ 
dentroDoRange
ÙÙ  -
=
ÙÙ. /
(
ÙÙ0 1
valorDefinido
ÙÙ1 >
<=
ÙÙ? A
vmax
ÙÙB F
&&
ÙÙG I
valorDefinido
ÙÙJ W
>=
ÙÙX Z
vmin
ÙÙ[ _
)
ÙÙ_ `
;
ÙÙ` a
return
ıı "
dentroDoRange
ıı# 0
?
ıı1 2
$str
ıı3 6
:
ıı7 8
$str
ıı9 <
;
ıı< =
}
ˆˆ 
else
˜˜ 
if
˜˜ 
(
˜˜  !
	ParLevel3
˜˜! *
.
˜˜* +
ParLevel3Value
˜˜+ 9
.
˜˜9 :
FirstOrDefault
˜˜: H
(
˜˜H I
r
˜˜I J
=>
˜˜K M
r
˜˜N O
.
˜˜O P
ParCompany_Id
˜˜P ]
==
˜˜^ `
CollectionLevel2
˜˜a q
.
˜˜q r
UnitId
˜˜r x
&&
˜˜y {
r
˜˜| }
.
˜˜} ~$
ParLevel3InputType_Id˜˜~ ì
==˜˜î ñ
$num˜˜ó ò
)˜˜ò ô
!=˜˜ö ú
null˜˜ù °
)˜˜° ¢
{
¯¯ 
var
˘˘ 
	valueText
˘˘  )
=
˘˘* +
string
˘˘, 2
.
˘˘2 3
IsNullOrEmpty
˘˘3 @
(
˘˘@ A
	ValueText
˘˘A J
)
˘˘J K
;
˘˘K L
return
˙˙ "
	valueText
˙˙# ,
?
˙˙- .
$str
˙˙/ 2
:
˙˙3 4
$str
˙˙5 8
;
˙˙8 9
}
˚˚ 
if
˛˛ 
(
˛˛ 
	ParLevel3
˛˛ %
.
˛˛% &
ParLevel3Value
˛˛& 4
.
˛˛4 5
FirstOrDefault
˛˛5 C
(
˛˛C D
r
˛˛D E
=>
˛˛F H
r
˛˛I J
.
˛˛J K
ParCompany_Id
˛˛K X
==
˛˛Y [
null
˛˛\ `
&&
˛˛a c
r
˛˛d e
.
˛˛e f#
ParLevel3InputType_Id
˛˛f {
==
˛˛| ~
$num˛˛ Ä
)˛˛Ä Å
!=˛˛Ç Ñ
null˛˛Ö â
)˛˛â ä
{
ˇˇ 
return
ÄÄ "
	IsConform
ÄÄ# ,
.
ÄÄ, -
GetValueOrDefault
ÄÄ- >
(
ÄÄ> ?
)
ÄÄ? @
?
ÄÄA B
$str
ÄÄC F
:
ÄÄG H
$str
ÄÄI L
;
ÄÄL M
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ  !
	ParLevel3
ÇÇ! *
.
ÇÇ* +
ParLevel3Value
ÇÇ+ 9
.
ÇÇ9 :
FirstOrDefault
ÇÇ: H
(
ÇÇH I
r
ÇÇI J
=>
ÇÇK M
r
ÇÇN O
.
ÇÇO P
ParCompany_Id
ÇÇP ]
==
ÇÇ^ `
null
ÇÇa e
&&
ÇÇf h
r
ÇÇi j
.
ÇÇj k$
ParLevel3InputType_IdÇÇk Ä
==ÇÇÅ É
$numÇÇÑ Ö
)ÇÇÖ Ü
!=ÇÇá â
nullÇÇä é
)ÇÇé è
{
ÉÉ 
var
ÖÖ 
vmax
ÖÖ  $
=
ÖÖ% &
Convert
ÖÖ' .
.
ÖÖ. /
	ToDecimal
ÖÖ/ 8
(
ÖÖ8 9
IntervalMax
ÖÖ9 D
,
ÖÖD E
System
ÖÖF L
.
ÖÖL M
Globalization
ÖÖM Z
.
ÖÖZ [
CultureInfo
ÖÖ[ f
.
ÖÖf g
InvariantCulture
ÖÖg w
)
ÖÖw x
;
ÖÖx y
var
ÜÜ 
vmin
ÜÜ  $
=
ÜÜ% &
Convert
ÜÜ' .
.
ÜÜ. /
	ToDecimal
ÜÜ/ 8
(
ÜÜ8 9
IntervalMin
ÜÜ9 D
,
ÜÜD E
System
ÜÜF L
.
ÜÜL M
Globalization
ÜÜM Z
.
ÜÜZ [
CultureInfo
ÜÜ[ f
.
ÜÜf g
InvariantCulture
ÜÜg w
)
ÜÜw x
;
ÜÜx y
var
áá 
valorDefinido
áá  -
=
áá. /
Guard
áá0 5
.
áá5 6$
ConverteValorCalculado
áá6 L
(
ááL M
_Value
ááM S
)
ááS T
;
ááT U
var
àà 
dentroDoRange
àà  -
=
àà. /
(
àà0 1
valorDefinido
àà1 >
<=
àà? A
vmax
ààB F
&&
ààG I
valorDefinido
ààJ W
>=
ààX Z
vmin
àà[ _
)
àà_ `
;
àà` a
return
ââ "
dentroDoRange
ââ# 0
?
ââ1 2
$str
ââ3 6
:
ââ7 8
$str
ââ9 <
;
ââ< =
}
ää 
else
ãã 
if
ãã 
(
ãã  !
	ParLevel3
ãã! *
.
ãã* +
ParLevel3Value
ãã+ 9
.
ãã9 :
FirstOrDefault
ãã: H
(
ããH I
r
ããI J
=>
ããK M
r
ããN O
.
ããO P
ParCompany_Id
ããP ]
==
ãã^ `
null
ããa e
&&
ããf h
r
ããi j
.
ããj k$
ParLevel3InputType_Idããk Ä
==ããÅ É
$numããÑ Ö
)ããÖ Ü
!=ããá â
nullããä é
)ããé è
{
åå 
var
éé 
vmax
éé  $
=
éé% &
Convert
éé' .
.
éé. /
	ToDecimal
éé/ 8
(
éé8 9
IntervalMax
éé9 D
,
ééD E
System
ééF L
.
ééL M
Globalization
ééM Z
.
ééZ [
CultureInfo
éé[ f
.
ééf g
InvariantCulture
éég w
)
ééw x
;
ééx y
var
èè 
vmin
èè  $
=
èè% &
Convert
èè' .
.
èè. /
	ToDecimal
èè/ 8
(
èè8 9
IntervalMin
èè9 D
,
èèD E
System
èèF L
.
èèL M
Globalization
èèM Z
.
èèZ [
CultureInfo
èè[ f
.
èèf g
InvariantCulture
èèg w
)
èèw x
;
èèx y
var
êê 
valorDefinido
êê  -
=
êê. /
Guard
êê0 5
.
êê5 6$
ConverteValorCalculado
êê6 L
(
êêL M
_Value
êêM S
)
êêS T
;
êêT U
var
ëë 
dentroDoRange
ëë  -
=
ëë. /
(
ëë0 1
valorDefinido
ëë1 >
<=
ëë? A
vmax
ëëB F
&&
ëëG I
valorDefinido
ëëJ W
>=
ëëX Z
vmin
ëë[ _
)
ëë_ `
;
ëë` a
return
íí "
dentroDoRange
íí# 0
?
íí1 2
$str
íí3 6
:
íí7 8
$str
íí9 <
;
íí< =
}
ìì 
else
îî 
if
îî 
(
îî  !
	ParLevel3
îî! *
.
îî* +
ParLevel3Value
îî+ 9
.
îî9 :
FirstOrDefault
îî: H
(
îîH I
r
îîI J
=>
îîK M
r
îîN O
.
îîO P
ParCompany_Id
îîP ]
==
îî^ `
null
îîa e
&&
îîf h
r
îîi j
.
îîj k$
ParLevel3InputType_Idîîk Ä
==îîÅ É
$numîîÑ Ö
)îîÖ Ü
!=îîá â
nullîîä é
)îîé è
{
ïï 
var
ññ 
vmax
ññ  $
=
ññ% &
Convert
ññ' .
.
ññ. /
	ToDecimal
ññ/ 8
(
ññ8 9
IntervalMax
ññ9 D
,
ññD E
System
ññF L
.
ññL M
Globalization
ññM Z
.
ññZ [
CultureInfo
ññ[ f
.
ññf g
InvariantCulture
ññg w
)
ññw x
;
ññx y
var
óó 
vmin
óó  $
=
óó% &
Convert
óó' .
.
óó. /
	ToDecimal
óó/ 8
(
óó8 9
IntervalMin
óó9 D
,
óóD E
System
óóF L
.
óóL M
Globalization
óóM Z
.
óóZ [
CultureInfo
óó[ f
.
óóf g
InvariantCulture
óóg w
)
óów x
;
óóx y
var
òò 
valorDefinido
òò  -
=
òò. /
Guard
òò0 5
.
òò5 6$
ConverteValorCalculado
òò6 L
(
òòL M
_Value
òòM S
)
òòS T
;
òòT U
var
ôô 
dentroDoRange
ôô  -
=
ôô. /
(
ôô0 1
valorDefinido
ôô1 >
<=
ôô? A
vmax
ôôB F
&&
ôôG I
valorDefinido
ôôJ W
>=
ôôX Z
vmin
ôô[ _
)
ôô_ `
;
ôô` a
return
öö "
dentroDoRange
öö# 0
?
öö1 2
$str
öö3 6
:
öö7 8
$str
öö9 <
;
öö< =
}
õõ 
else
úú 
if
úú 
(
úú  !
	ParLevel3
úú! *
.
úú* +
ParLevel3Value
úú+ 9
.
úú9 :
FirstOrDefault
úú: H
(
úúH I
r
úúI J
=>
úúK M
r
úúN O
.
úúO P
ParCompany_Id
úúP ]
==
úú^ `
null
úúa e
&&
úúf h
r
úúi j
.
úúj k$
ParLevel3InputType_Idúúk Ä
==úúÅ É
$numúúÑ Ö
)úúÖ Ü
!=úúá â
nullúúä é
)úúé è
{
ùù 
var
ûû 
	valueText
ûû  )
=
ûû* +
string
ûû, 2
.
ûû2 3
IsNullOrEmpty
ûû3 @
(
ûû@ A
	ValueText
ûûA J
)
ûûJ K
;
ûûK L
return
üü "
	valueText
üü# ,
?
üü- .
$str
üü/ 2
:
üü3 4
$str
üü5 8
;
üü8 9
}
†† 
}
°° 
return
££ 
string
££ !
.
££! "
Empty
££" '
;
££' (
}
•• 
}
¶¶ 
public
®® 
Nullable
®® 
<
®® 
bool
®®  
>
®®  !
IsNotEvaluate
®®" /
{
®®0 1
get
®®2 5
;
®®5 6
set
®®7 :
;
®®: ;
}
®®< =
public
©© 
int
©© 
_IsNotEvaluate
©© %
{
©©& '
get
©©( +
{
©©, -
return
©©. 4
!
©©5 6
IsNotEvaluate
©©6 C
.
©©C D
GetValueOrDefault
©©D U
(
©©U V
)
©©V W
?
©©X Y
$num
©©Z [
:
©©\ ]
$num
©©^ _
;
©©_ `
}
©©a b
}
©©c d
public
´´ 
Nullable
´´ 
<
´´ 
decimal
´´ #
>
´´# $
Defects
´´% ,
{
´´- .
get
´´/ 2
;
´´2 3
set
´´4 7
;
´´7 8
}
´´9 :
public
¨¨ 
decimal
¨¨ 
_Defects
¨¨ #
{
≠≠ 
get
ÆÆ 
{
ØØ 
var
∞∞ 
defects
∞∞ 
=
∞∞  !
$num
∞∞" $
;
∞∞$ %
if
±± 
(
±± 
isQueryEdit
±± #
)
±±# $
{
≤≤ 
if
≥≥ 
(
≥≥ 
	ParLevel3
≥≥ %
.
≥≥% &
ParLevel3Value
≥≥& 4
.
≥≥4 5
FirstOrDefault
≥≥5 C
(
≥≥C D
r
≥≥D E
=>
≥≥F H
r
≥≥I J
.
≥≥J K
ParCompany_Id
≥≥K X
==
≥≥Y [
CollectionLevel2
≥≥\ l
.
≥≥l m
UnitId
≥≥m s
&&
≥≥t v
r
≥≥w x
.
≥≥x y$
ParLevel3InputType_Id≥≥y é
==≥≥è ë
$num≥≥í ì
)≥≥ì î
!=≥≥ï ó
null≥≥ò ú
)≥≥ú ù
{
¥¥ 
defects
µµ #
=
µµ$ %
	IsConform
µµ& /
.
µµ/ 0
GetValueOrDefault
µµ0 A
(
µµA B
)
µµB C
?
µµD E
$num
µµF H
:
µµI J
$num
µµK M
;
µµM N
}
∂∂ 
else
∑∑ 
if
∑∑ 
(
∑∑  !
	ParLevel3
∑∑! *
.
∑∑* +
ParLevel3Value
∑∑+ 9
.
∑∑9 :
FirstOrDefault
∑∑: H
(
∑∑H I
r
∑∑I J
=>
∑∑K M
r
∑∑N O
.
∑∑O P
ParCompany_Id
∑∑P ]
==
∑∑^ `
CollectionLevel2
∑∑a q
.
∑∑q r
UnitId
∑∑r x
&&
∑∑y {
r
∑∑| }
.
∑∑} ~$
ParLevel3InputType_Id∑∑~ ì
==∑∑î ñ
$num∑∑ó ò
)∑∑ò ô
!=∑∑ö ú
null∑∑ù °
)∑∑° ¢
{
∏∏ 
return
ππ "

_IsConform
ππ# -
.
ππ- .
Equals
ππ. 4
(
ππ4 5
$str
ππ5 8
)
ππ8 9
?
ππ: ;
$num
ππ< =
:
ππ> ?
$num
ππ@ A
;
ππA B
}
∫∫ 
else
ªª 
if
ªª 
(
ªª  !
	ParLevel3
ªª! *
.
ªª* +
ParLevel3Value
ªª+ 9
.
ªª9 :
FirstOrDefault
ªª: H
(
ªªH I
r
ªªI J
=>
ªªK M
r
ªªN O
.
ªªO P
ParCompany_Id
ªªP ]
==
ªª^ `
CollectionLevel2
ªªa q
.
ªªq r
UnitId
ªªr x
&&
ªªy {
r
ªª| }
.
ªª} ~$
ParLevel3InputType_Idªª~ ì
==ªªî ñ
$numªªó ò
)ªªò ô
!=ªªö ú
nullªªù °
)ªª° ¢
{
ºº 
return
ΩΩ "

_IsConform
ΩΩ# -
.
ΩΩ- .
Equals
ΩΩ. 4
(
ΩΩ4 5
$str
ΩΩ5 8
)
ΩΩ8 9
?
ΩΩ: ;
$num
ΩΩ< =
:
ΩΩ> ?
$num
ΩΩ@ A
;
ΩΩA B
}
ææ 
else
øø 
if
øø 
(
øø  !
	ParLevel3
øø! *
.
øø* +
ParLevel3Value
øø+ 9
.
øø9 :
FirstOrDefault
øø: H
(
øøH I
r
øøI J
=>
øøK M
r
øøN O
.
øøO P
ParCompany_Id
øøP ]
==
øø^ `
CollectionLevel2
øøa q
.
øøq r
UnitId
øør x
&&
øøy {
r
øø| }
.
øø} ~$
ParLevel3InputType_Idøø~ ì
==øøî ñ
$numøøó ò
)øøò ô
!=øøö ú
nulløøù °
)øø° ¢
{
¿¿ 
return
¡¡ "

_IsConform
¡¡# -
.
¡¡- .
Equals
¡¡. 4
(
¡¡4 5
$str
¡¡5 8
)
¡¡8 9
?
¡¡: ;
$num
¡¡< =
:
¡¡> ?
$num
¡¡@ A
;
¡¡A B
}
¬¬ 
else
√√ 
if
√√ 
(
√√  !
	ParLevel3
√√! *
.
√√* +
ParLevel3Value
√√+ 9
.
√√9 :
FirstOrDefault
√√: H
(
√√H I
r
√√I J
=>
√√K M
r
√√N O
.
√√O P
ParCompany_Id
√√P ]
==
√√^ `
CollectionLevel2
√√a q
.
√√q r
UnitId
√√r x
&&
√√y {
r
√√| }
.
√√} ~$
ParLevel3InputType_Id√√~ ì
==√√î ñ
$num√√ó ò
)√√ò ô
!=√√ö ú
null√√ù °
)√√° ¢
{
ƒƒ 
return
≈≈ "

_IsConform
≈≈# -
.
≈≈- .
Equals
≈≈. 4
(
≈≈4 5
$str
≈≈5 8
)
≈≈8 9
?
≈≈: ;
$num
≈≈< =
:
≈≈> ?
$num
≈≈@ A
;
≈≈A B
}
∆∆ 
else
…… 
if
…… 
(
……  !
	ParLevel3
……! *
.
……* +
ParLevel3Value
……+ 9
.
……9 :
FirstOrDefault
……: H
(
……H I
r
……I J
=>
……K M
r
……N O
.
……O P
ParCompany_Id
……P ]
==
……^ `
null
……a e
&&
……f h
r
……i j
.
……j k$
ParLevel3InputType_Id……k Ä
==……Å É
$num……Ñ Ö
)……Ö Ü
!=……á â
null……ä é
)……é è
{
   
defects
ÀÀ #
=
ÀÀ$ %
	IsConform
ÀÀ& /
.
ÀÀ/ 0
GetValueOrDefault
ÀÀ0 A
(
ÀÀA B
)
ÀÀB C
?
ÀÀD E
$num
ÀÀF H
:
ÀÀI J
$num
ÀÀK M
;
ÀÀM N
}
ÃÃ 
else
ÕÕ 
if
ÕÕ 
(
ÕÕ  !
	ParLevel3
ÕÕ! *
.
ÕÕ* +
ParLevel3Value
ÕÕ+ 9
.
ÕÕ9 :
FirstOrDefault
ÕÕ: H
(
ÕÕH I
r
ÕÕI J
=>
ÕÕK M
r
ÕÕN O
.
ÕÕO P
ParCompany_Id
ÕÕP ]
==
ÕÕ^ `
null
ÕÕa e
&&
ÕÕf h
r
ÕÕi j
.
ÕÕj k$
ParLevel3InputType_IdÕÕk Ä
==ÕÕÅ É
$numÕÕÑ Ö
)ÕÕÖ Ü
!=ÕÕá â
nullÕÕä é
)ÕÕé è
{
ŒŒ 
return
œœ "

_IsConform
œœ# -
.
œœ- .
Equals
œœ. 4
(
œœ4 5
$str
œœ5 8
)
œœ8 9
?
œœ: ;
$num
œœ< =
:
œœ> ?
$num
œœ@ A
;
œœA B
}
–– 
else
—— 
if
—— 
(
——  !
	ParLevel3
——! *
.
——* +
ParLevel3Value
——+ 9
.
——9 :
FirstOrDefault
——: H
(
——H I
r
——I J
=>
——K M
r
——N O
.
——O P
ParCompany_Id
——P ]
==
——^ `
null
——a e
&&
——f h
r
——i j
.
——j k$
ParLevel3InputType_Id——k Ä
==——Å É
$num——Ñ Ö
)——Ö Ü
!=——á â
null——ä é
)——é è
{
““ 
return
”” "

_IsConform
””# -
.
””- .
Equals
””. 4
(
””4 5
$str
””5 8
)
””8 9
?
””: ;
$num
””< =
:
””> ?
$num
””@ A
;
””A B
}
‘‘ 
else
’’ 
if
’’ 
(
’’  !
	ParLevel3
’’! *
.
’’* +
ParLevel3Value
’’+ 9
.
’’9 :
FirstOrDefault
’’: H
(
’’H I
r
’’I J
=>
’’K M
r
’’N O
.
’’O P
ParCompany_Id
’’P ]
==
’’^ `
null
’’a e
&&
’’f h
r
’’i j
.
’’j k$
ParLevel3InputType_Id’’k Ä
==’’Å É
$num’’Ñ Ö
)’’Ö Ü
!=’’á â
null’’ä é
)’’é è
{
÷÷ 
return
◊◊ "

_IsConform
◊◊# -
.
◊◊- .
Equals
◊◊. 4
(
◊◊4 5
$str
◊◊5 8
)
◊◊8 9
?
◊◊: ;
$num
◊◊< =
:
◊◊> ?
$num
◊◊@ A
;
◊◊A B
}
ÿÿ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ  !
	ParLevel3
ŸŸ! *
.
ŸŸ* +
ParLevel3Value
ŸŸ+ 9
.
ŸŸ9 :
FirstOrDefault
ŸŸ: H
(
ŸŸH I
r
ŸŸI J
=>
ŸŸK M
r
ŸŸN O
.
ŸŸO P
ParCompany_Id
ŸŸP ]
==
ŸŸ^ `
null
ŸŸa e
&&
ŸŸf h
r
ŸŸi j
.
ŸŸj k$
ParLevel3InputType_IdŸŸk Ä
==ŸŸÅ É
$numŸŸÑ Ö
)ŸŸÖ Ü
!=ŸŸá â
nullŸŸä é
)ŸŸé è
{
⁄⁄ 
return
€€ "

_IsConform
€€# -
.
€€- .
Equals
€€. 4
(
€€4 5
$str
€€5 8
)
€€8 9
?
€€: ;
$num
€€< =
:
€€> ?
$num
€€@ A
;
€€A B
}
‹‹ 
}
ﬁﬁ 
return
‡‡ 
defects
‡‡ "
;
‡‡" #
}
‚‚ 
}
„„ 
public
ÂÂ 
Nullable
ÂÂ 
<
ÂÂ 
decimal
ÂÂ #
>
ÂÂ# $
PunishmentValue
ÂÂ% 4
{
ÂÂ5 6
get
ÂÂ7 :
;
ÂÂ: ;
set
ÂÂ< ?
;
ÂÂ? @
}
ÂÂA B
public
ÊÊ 
Nullable
ÊÊ 
<
ÊÊ 
decimal
ÊÊ #
>
ÊÊ# $
WeiEvaluation
ÊÊ% 2
{
ÊÊ3 4
get
ÊÊ5 8
;
ÊÊ8 9
set
ÊÊ: =
;
ÊÊ= >
}
ÊÊ? @
public
ÁÁ 
decimal
ÁÁ 
_WeiEvaluation
ÁÁ )
{
ËË 
get
ÈÈ 
{
ÍÍ 
if
ÏÏ 
(
ÏÏ 
IsNotEvaluate
ÏÏ %
==
ÏÏ& (
true
ÏÏ) -
)
ÏÏ- .
{
ÌÌ 
return
ÓÓ 
$num
ÓÓ  
;
ÓÓ  !
}
ÔÔ 
return
ÚÚ 
Weight
ÚÚ !
.
ÚÚ! "
GetValueOrDefault
ÚÚ" 3
(
ÚÚ3 4
)
ÚÚ4 5
;
ÚÚ5 6
}
ÛÛ 
}
ÙÙ 
public
ıı 
Nullable
ıı 
<
ıı 
decimal
ıı #
>
ıı# $

Evaluation
ıı% /
{
ıı0 1
get
ıı2 5
;
ıı5 6
set
ıı7 :
;
ıı: ;
}
ıı< =
public
˜˜ 
Nullable
˜˜ 
<
˜˜ 
decimal
˜˜ #
>
˜˜# $

WeiDefects
˜˜% /
{
˜˜0 1
get
˜˜2 5
;
˜˜5 6
set
˜˜7 :
;
˜˜: ;
}
˜˜< =
public
¯¯ 
string
¯¯ 
_WeiDefects
¯¯ %
{
˘˘ 
get
˙˙ 
{
˚˚ 
var
¸¸ 
defects
¸¸ 
=
¸¸  !
$num
¸¸" $
;
¸¸$ %
if
˝˝ 
(
˝˝ 
isQueryEdit
˝˝ #
)
˝˝# $
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
	ParLevel3
ˇˇ %
.
ˇˇ% &
ParLevel3Value
ˇˇ& 4
.
ˇˇ4 5
FirstOrDefault
ˇˇ5 C
(
ˇˇC D
r
ˇˇD E
=>
ˇˇF H
r
ˇˇI J
.
ˇˇJ K
ParCompany_Id
ˇˇK X
==
ˇˇY [
CollectionLevel2
ˇˇ\ l
.
ˇˇl m
UnitId
ˇˇm s
&&
ˇˇt v
r
ˇˇw x
.
ˇˇx y$
ParLevel3InputType_Idˇˇy é
==ˇˇè ë
$numˇˇí ì
)ˇˇì î
!=ˇˇï ó
nullˇˇò ú
)ˇˇú ù
{
ÄÄ 
defects
ÅÅ #
=
ÅÅ$ %
	IsConform
ÅÅ& /
.
ÅÅ/ 0
GetValueOrDefault
ÅÅ0 A
(
ÅÅA B
)
ÅÅB C
?
ÅÅD E
$num
ÅÅF H
:
ÅÅI J
$num
ÅÅK M
;
ÅÅM N
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ  !
	ParLevel3
ÉÉ! *
.
ÉÉ* +
ParLevel3Value
ÉÉ+ 9
.
ÉÉ9 :
FirstOrDefault
ÉÉ: H
(
ÉÉH I
r
ÉÉI J
=>
ÉÉK M
r
ÉÉN O
.
ÉÉO P
ParCompany_Id
ÉÉP ]
==
ÉÉ^ `
CollectionLevel2
ÉÉa q
.
ÉÉq r
UnitId
ÉÉr x
&&
ÉÉy {
r
ÉÉ| }
.
ÉÉ} ~$
ParLevel3InputType_IdÉÉ~ ì
==ÉÉî ñ
$numÉÉó ò
)ÉÉò ô
!=ÉÉö ú
nullÉÉù °
)ÉÉ° ¢
{
ÑÑ 
defects
ÖÖ #
=
ÖÖ$ %
Convert
ÖÖ& -
.
ÖÖ- .
	ToDecimal
ÖÖ. 7
(
ÖÖ7 8
Value
ÖÖ8 =
)
ÖÖ= >
;
ÖÖ> ?
}
ÜÜ 
else
áá 
if
áá 
(
áá  !
	ParLevel3
áá! *
.
áá* +
ParLevel3Value
áá+ 9
.
áá9 :
FirstOrDefault
áá: H
(
ááH I
r
ááI J
=>
ááK M
r
ááN O
.
ááO P
ParCompany_Id
ááP ]
==
áá^ `
CollectionLevel2
ááa q
.
ááq r
UnitId
áár x
&&
ááy {
r
áá| }
.
áá} ~$
ParLevel3InputType_Idáá~ ì
==ááî ñ
$numááó ò
)ááò ô
!=ááö ú
nullááù °
)áá° ¢
{
àà 
defects
ââ #
=
ââ$ %
_Defects
ââ& .
;
ââ. /
}
ää 
else
ãã 
if
ãã 
(
ãã  !
	ParLevel3
ãã! *
.
ãã* +
ParLevel3Value
ãã+ 9
.
ãã9 :
FirstOrDefault
ãã: H
(
ããH I
r
ããI J
=>
ããK M
r
ããN O
.
ããO P
ParCompany_Id
ããP ]
==
ãã^ `
CollectionLevel2
ããa q
.
ããq r
UnitId
ããr x
&&
ããy {
r
ãã| }
.
ãã} ~$
ParLevel3InputType_Idãã~ ì
==ããî ñ
$numããó ò
)ããò ô
!=ããö ú
nullããù °
)ãã° ¢
{
åå 
defects
çç #
=
çç$ %
_Defects
çç& .
;
çç. /
}
éé 
else
èè 
if
èè 
(
èè  !
	ParLevel3
èè! *
.
èè* +
ParLevel3Value
èè+ 9
.
èè9 :
FirstOrDefault
èè: H
(
èèH I
r
èèI J
=>
èèK M
r
èèN O
.
èèO P
ParCompany_Id
èèP ]
==
èè^ `
CollectionLevel2
èèa q
.
èèq r
UnitId
èèr x
&&
èèy {
r
èè| }
.
èè} ~$
ParLevel3InputType_Idèè~ ì
==èèî ñ
$numèèó ò
)èèò ô
!=èèö ú
nullèèù °
)èè° ¢
{
êê 
defects
ëë #
=
ëë$ %
_Defects
ëë& .
;
ëë. /
}
íí 
else
ññ 
if
ññ 
(
ññ  !
	ParLevel3
ññ! *
.
ññ* +
ParLevel3Value
ññ+ 9
.
ññ9 :
FirstOrDefault
ññ: H
(
ññH I
r
ññI J
=>
ññK M
r
ññN O
.
ññO P
ParCompany_Id
ññP ]
==
ññ^ `
null
ñña e
&&
ññf h
r
ññi j
.
ññj k$
ParLevel3InputType_Idññk Ä
==ññÅ É
$numññÑ Ö
)ññÖ Ü
!=ññá â
nullññä é
)ññé è
{
óó 
defects
òò #
=
òò$ %
	IsConform
òò& /
.
òò/ 0
GetValueOrDefault
òò0 A
(
òòA B
)
òòB C
?
òòD E
$num
òòF H
:
òòI J
$num
òòK M
;
òòM N
}
ôô 
else
öö 
if
öö 
(
öö  !
	ParLevel3
öö! *
.
öö* +
ParLevel3Value
öö+ 9
.
öö9 :
FirstOrDefault
öö: H
(
ööH I
r
ööI J
=>
ööK M
r
ööN O
.
ööO P
ParCompany_Id
ööP ]
==
öö^ `
null
ööa e
&&
ööf h
r
ööi j
.
ööj k$
ParLevel3InputType_Idöök Ä
==ööÅ É
$numööÑ Ö
)ööÖ Ü
!=ööá â
nullööä é
)ööé è
{
õõ 
defects
úú #
=
úú$ %
Convert
úú& -
.
úú- .
	ToDecimal
úú. 7
(
úú7 8
Value
úú8 =
)
úú= >
;
úú> ?
}
ùù 
else
ûû 
if
ûû 
(
ûû  !
	ParLevel3
ûû! *
.
ûû* +
ParLevel3Value
ûû+ 9
.
ûû9 :
FirstOrDefault
ûû: H
(
ûûH I
r
ûûI J
=>
ûûK M
r
ûûN O
.
ûûO P
ParCompany_Id
ûûP ]
==
ûû^ `
null
ûûa e
&&
ûûf h
r
ûûi j
.
ûûj k$
ParLevel3InputType_Idûûk Ä
==ûûÅ É
$numûûÑ Ö
)ûûÖ Ü
!=ûûá â
nullûûä é
)ûûé è
{
üü 
defects
†† #
=
††$ %
_Defects
††& .
;
††. /
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢  !
	ParLevel3
¢¢! *
.
¢¢* +
ParLevel3Value
¢¢+ 9
.
¢¢9 :
FirstOrDefault
¢¢: H
(
¢¢H I
r
¢¢I J
=>
¢¢K M
r
¢¢N O
.
¢¢O P
ParCompany_Id
¢¢P ]
==
¢¢^ `
null
¢¢a e
&&
¢¢f h
r
¢¢i j
.
¢¢j k$
ParLevel3InputType_Id¢¢k Ä
==¢¢Å É
$num¢¢Ñ Ö
)¢¢Ö Ü
!=¢¢á â
null¢¢ä é
)¢¢é è
{
££ 
defects
§§ #
=
§§$ %
_Defects
§§& .
;
§§. /
}
•• 
else
¶¶ 
if
¶¶ 
(
¶¶  !
	ParLevel3
¶¶! *
.
¶¶* +
ParLevel3Value
¶¶+ 9
.
¶¶9 :
FirstOrDefault
¶¶: H
(
¶¶H I
r
¶¶I J
=>
¶¶K M
r
¶¶N O
.
¶¶O P
ParCompany_Id
¶¶P ]
==
¶¶^ `
null
¶¶a e
&&
¶¶f h
r
¶¶i j
.
¶¶j k$
ParLevel3InputType_Id¶¶k Ä
==¶¶Å É
$num¶¶Ñ Ö
)¶¶Ö Ü
!=¶¶á â
null¶¶ä é
)¶¶é è
{
ßß 
defects
®® #
=
®®$ %
_Defects
®®& .
;
®®. /
}
©© 
}
´´ 
var
≠≠ 
defeitoXPeso
≠≠ $
=
≠≠% &
(
≠≠' (
defects
≠≠( /
*
≠≠0 1
Weight
≠≠2 8
.
≠≠8 9
GetValueOrDefault
≠≠9 J
(
≠≠J K
)
≠≠K L
)
≠≠L M
;
≠≠M N
var
ÆÆ 
punicaoXPeso
ÆÆ $
=
ÆÆ% &
(
ÆÆ' (
PunishmentValue
ÆÆ( 7
.
ÆÆ7 8
GetValueOrDefault
ÆÆ8 I
(
ÆÆI J
)
ÆÆJ K
*
ÆÆL M
Weight
ÆÆN T
.
ÆÆT U
GetValueOrDefault
ÆÆU f
(
ÆÆf g
)
ÆÆg h
)
ÆÆh i
;
ÆÆi j
return
∞∞ 
(
∞∞ 
defeitoXPeso
∞∞ (
+
∞∞) *
punicaoXPeso
∞∞+ 7
)
∞∞7 8
.
∞∞8 9
ToString
∞∞9 A
(
∞∞A B
$str
∞∞B G
)
∞∞G H
;
∞∞H I
}
±± 
}
≤≤ 
public
¥¥ 
Nullable
¥¥ 
<
¥¥ 
decimal
¥¥ #
>
¥¥# $
CT4Eva3
¥¥% ,
{
¥¥- .
get
¥¥/ 2
;
¥¥2 3
set
¥¥4 7
;
¥¥7 8
}
¥¥9 :
public
µµ 
Nullable
µµ 
<
µµ 
decimal
µµ #
>
µµ# $
Sampling
µµ% -
{
µµ. /
get
µµ0 3
;
µµ3 4
set
µµ5 8
;
µµ8 9
}
µµ: ;
public
∑∑ 
ParLevel3DTO
∑∑ 
	ParLevel3
∑∑  )
{
∑∑* +
get
∑∑, /
;
∑∑/ 0
set
∑∑1 4
;
∑∑4 5
}
∑∑6 7
public
∏∏ 
CollectionLevel2
∏∏ #
CollectionLevel2
∏∏$ 4
{
∏∏5 6
get
∏∏7 :
;
∏∏: ;
set
∏∏< ?
;
∏∏? @
}
∏∏A B
public
∫∫ 
int
∫∫ 
?
∫∫ 
unit
∫∫ 
{
∫∫ 
get
∫∫ "
;
∫∫" #
set
∫∫$ '
;
∫∫' (
}
∫∫) *
public
›› 
string
›› !
mountHtmlIntervalos
›› -
(
››- .
)
››. /
{
ﬁﬁ 
var
ﬂﬂ 
naoAvaliado
ﬂﬂ 
=
ﬂﬂ  !
IsNotEvaluate
ﬂﬂ" /
.
ﬂﬂ/ 0
GetValueOrDefault
ﬂﬂ0 A
(
ﬂﬂA B
)
ﬂﬂB C
?
ﬂﬂD E
$str
ﬂﬂF Y
:
ﬂﬂZ [
$str
ﬂﬂ\ ^
;
ﬂﬂ^ _
return
‡‡ 
$str
‡‡ 
+
‡‡  
$str
‚‚ 7
+
‚‚8 9
GetResources
‚‚: F
.
‚‚F G
getResource
‚‚G R
(
‚‚R S
$str
‚‚S a
)
‚‚a b
.
‚‚b c
Value
‚‚c h
.
‚‚h i
ToString
‚‚i q
(
‚‚q r
)
‚‚r s
+
‚‚t u
$str‚‚v Ç
+‚‚É Ñ
IntervalMax‚‚Ö ê
+‚‚ë í
$str
„„ "
+
„„# $
$str
‰‰ 7
+
‰‰8 9
GetResources
‰‰: F
.
‰‰F G
getResource
‰‰G R
(
‰‰R S
$str
‰‰S a
)
‰‰a b
.
‰‰b c
Value
‰‰c h
.
‰‰h i
ToString
‰‰i q
(
‰‰q r
)
‰‰r s
+
‰‰t u
$str‰‰v Ç
+‰‰É Ñ
IntervalMin‰‰Ö ê
+‰‰ë í
$str
ÂÂ "
+
ÂÂ# $
$str
ÊÊ 7
+
ÊÊ8 9
GetResources
ÊÊ: F
.
ÊÊF G
getResource
ÊÊG R
(
ÊÊR S
$str
ÊÊS b
)
ÊÊb c
.
ÊÊc d
Value
ÊÊd i
.
ÊÊi j
ToString
ÊÊj r
(
ÊÊr s
)
ÊÊs t
+
ÊÊu v
$strÊÊw É
+ÊÊÑ Ö
ValueÊÊÜ ã
+ÊÊå ç
$str
ÁÁ "
+
ÁÁ# $
$str
ËË 7
+
ËË8 9
GetResources
ËË: F
.
ËËF G
getResource
ËËG R
(
ËËR S
$str
ËËS ^
)
ËË^ _
.
ËË_ `
Value
ËË` e
.
ËËe f
ToString
ËËf n
(
ËËn o
)
ËËo p
+
ËËq r
$strËËs Ü
+ËËá à
$str
ÈÈ i
+
ÈÈj k
Value
ÈÈl q
+
ÈÈr s
$str
ÈÈt y
+
ÈÈz {
$str
ÍÍ "
+
ÍÍ# $
$str
ÎÎ 7
+
ÎÎ8 9
GetResources
ÎÎ: F
.
ÎÎF G
getResource
ÎÎG R
(
ÎÎR S
$str
ÎÎS ]
)
ÎÎ] ^
.
ÎÎ^ _
Value
ÎÎ_ d
.
ÎÎd e
ToString
ÎÎe m
(
ÎÎm n
)
ÎÎn o
+
ÎÎp q
$strÎÎr Ö
+ÎÎÜ á
$str
ÏÏ G
+
ÏÏH I
naoAvaliado
ÏÏJ U
+
ÏÏV W
$str
ÏÏX p
+
ÏÏq r
$str
ÌÌ  
;
ÌÌ  !
}
ÓÓ 
public
íí 
string
íí 
mountHtmlConform
íí *
(
íí* +
)
íí+ ,
{
ìì 
var
îî 
naoAvaliado
îî 
=
îî  !
IsNotEvaluate
îî" /
.
îî/ 0
GetValueOrDefault
îî0 A
(
îîA B
)
îîB C
?
îîD E
$str
îîF Y
:
îîZ [
$str
îî\ ^
;
îî^ _
var
ïï 
checkedAttr
ïï 
=
ïï  !
	IsConform
ïï" +
.
ïï+ ,
GetValueOrDefault
ïï, =
(
ïï= >
)
ïï> ?
?
ïï@ A
$str
ïïB U
:
ïïV W
$str
ïïX Z
;
ïïZ [
return
ññ 
$str
ññ 
+
ññ  
$str
óó 6
+
óó7 8
GetResources
óó9 E
.
óóE F
getResource
óóF Q
(
óóQ R
$str
óóR [
)
óó[ \
.
óó\ ]
Value
óó] b
.
óób c
ToString
óóc k
(
óók l
)
óól m
+
óón o
$str
óóp |
+
óó} ~
$str
òò T
+
òòU V
checkedAttr
òòW b
+
òòc d
$stròòe π
+òò∫ ª
$str
ôô "
+
ôô# $
$str
öö 8
+
öö9 :
GetResources
öö; G
.
ööG H
getResource
ööH S
(
ööS T
$str
ööT ^
)
öö^ _
.
öö_ `
Value
öö` e
.
ööe f
ToString
ööf n
(
öön o
)
ööo p
+
ööq r
$ströös Ü
+ööá à
$str
õõ F
+
õõG H
naoAvaliado
õõI T
+
õõU V
$str
õõW o
+
õõp q
$str
úú 
;
úú  
;
úú! "
}
ùù 
public
¥¥ 
string
¥¥  
mountHtmlCalculado
¥¥ ,
(
¥¥, -
)
¥¥- .
{
µµ 
var
∂∂ 
naoAvaliado
∂∂ 
=
∂∂  !
IsNotEvaluate
∂∂" /
.
∂∂/ 0
GetValueOrDefault
∂∂0 A
(
∂∂A B
)
∂∂B C
?
∂∂D E
$str
∂∂F Y
:
∂∂Z [
$str
∂∂\ ^
;
∂∂^ _
return
∏∏ 
$str
∏∏ 
+
∏∏  
$str
ππ 7
+
ππ8 9
GetResources
ππ: F
.
ππF G
getResource
ππG R
(
ππR S
$str
ππS a
)
ππa b
.
ππb c
Value
ππc h
.
ππh i
ToString
ππi q
(
ππq r
)
ππr s
+
ππt u
$strππv Ç
+ππÉ Ñ
GuardππÖ ä
.ππä ã&
ConverteValorCalculadoππã °
(ππ° ¢
Convertππ¢ ©
.ππ© ™
	ToDecimalππ™ ≥
(ππ≥ ¥
IntervalMaxππ¥ ø
)ππø ¿
)ππ¿ ¡
+ππ¬ √
$str
∫∫ "
+
∫∫# $
$str
ªª 7
+
ªª8 9
GetResources
ªª: F
.
ªªF G
getResource
ªªG R
(
ªªR S
$str
ªªS a
)
ªªa b
.
ªªb c
Value
ªªc h
.
ªªh i
ToString
ªªi q
(
ªªq r
)
ªªr s
+
ªªt u
$strªªv Ç
+ªªÉ Ñ
GuardªªÖ ä
.ªªä ã&
ConverteValorCalculadoªªã °
(ªª° ¢
Convertªª¢ ©
.ªª© ™
	ToDecimalªª™ ≥
(ªª≥ ¥
IntervalMinªª¥ ø
)ªªø ¿
)ªª¿ ¡
+ªª¬ √
$str
ºº "
+
ºº# $
$str
ΩΩ 7
+
ΩΩ8 9
GetResources
ΩΩ: F
.
ΩΩF G
getResource
ΩΩG R
(
ΩΩR S
$str
ΩΩS b
)
ΩΩb c
.
ΩΩc d
Value
ΩΩd i
.
ΩΩi j
ToString
ΩΩj r
(
ΩΩr s
)
ΩΩs t
+
ΩΩu v
$strΩΩw É
+ΩΩÑ Ö
GuardΩΩÜ ã
.ΩΩã å&
ConverteValorCalculadoΩΩå ¢
(ΩΩ¢ £
ConvertΩΩ£ ™
.ΩΩ™ ´
	ToDecimalΩΩ´ ¥
(ΩΩ¥ µ
ValueΩΩµ ∫
)ΩΩ∫ ª
)ΩΩª º
+ΩΩΩ æ
$str
ææ "
+
ææ# $
$str
øø 7
+
øø8 9
GetResources
øø: F
.
øøF G
getResource
øøG R
(
øøR S
$str
øøS ^
)
øø^ _
.
øø_ `
Value
øø` e
.
øøe f
ToString
øøf n
(
øøn o
)
øøo p
+
øøq r
$strøøs Ö
+øøÜ á
$str¿¿ Ö
+¿¿Ü á
$str
¡¡ 
+
¡¡  
$str
¬¬ 6
+
¬¬7 8
GetResources
¬¬9 E
.
¬¬E F
getResource
¬¬F Q
(
¬¬Q R
$str
¬¬R \
)
¬¬\ ]
.
¬¬] ^
Value
¬¬^ c
.
¬¬c d
ToString
¬¬d l
(
¬¬l m
)
¬¬m n
+
¬¬o p
$str¬¬q Ñ
+¬¬Ö Ü
$str
√√ G
+
√√H I
naoAvaliado
√√J U
+
√√V W
$str
√√X p
+
√√q r
$str
ƒƒ  
;
ƒƒ  !
}
≈≈ 
public
‹‹ 
string
‹‹ %
mountHtmlNumeroDefeitos
‹‹ 1
(
‹‹1 2
)
‹‹2 3
{
›› 
var
ﬁﬁ 
naoAvaliado
ﬁﬁ 
=
ﬁﬁ  !
IsNotEvaluate
ﬁﬁ" /
.
ﬁﬁ/ 0
GetValueOrDefault
ﬁﬁ0 A
(
ﬁﬁA B
)
ﬁﬁB C
?
ﬁﬁD E
$str
ﬁﬁF Y
:
ﬁﬁZ [
$str
ﬁﬁ\ ^
;
ﬁﬁ^ _
return
‡‡ 
$str
‡‡ 
+
‡‡  
$str
·· 7
+
··8 9
GetResources
··: F
.
··F G
getResource
··G R
(
··R S
$str
··S a
)
··a b
.
··b c
Value
··c h
.
··h i
ToString
··i q
(
··q r
)
··r s
+
··t u
$str··v Ç
+··É Ñ
double··Ö ã
.··ã å
Parse··å ë
(··ë í
IntervalMax··í ù
,··ù û
CultureInfo··ü ™
.··™ ´ 
InvariantCulture··´ ª
)··ª º
+··Ω æ
$str
‚‚ "
+
‚‚# $
$str
„„ 7
+
„„8 9
GetResources
„„: F
.
„„F G
getResource
„„G R
(
„„R S
$str
„„S a
)
„„a b
.
„„b c
Value
„„c h
.
„„h i
ToString
„„i q
(
„„q r
)
„„r s
+
„„t u
$str„„v Ç
+„„É Ñ
double„„Ö ã
.„„ã å
Parse„„å ë
(„„ë í
IntervalMin„„í ù
,„„ù û
CultureInfo„„ü ™
.„„™ ´ 
InvariantCulture„„´ ª
)„„ª º
+„„Ω æ
$str
‰‰ "
+
‰‰# $
$str
ÂÂ 7
+
ÂÂ8 9
GetResources
ÂÂ: F
.
ÂÂF G
getResource
ÂÂG R
(
ÂÂR S
$str
ÂÂS b
)
ÂÂb c
.
ÂÂc d
Value
ÂÂd i
.
ÂÂi j
ToString
ÂÂj r
(
ÂÂr s
)
ÂÂs t
+
ÂÂu v
$strÂÂw É
+ÂÂÑ Ö
doubleÂÂÜ å
.ÂÂå ç
ParseÂÂç í
(ÂÂí ì
ValueÂÂì ò
,ÂÂò ô
CultureInfoÂÂö •
.ÂÂ• ¶ 
InvariantCultureÂÂ¶ ∂
)ÂÂ∂ ∑
+ÂÂ∏ π
$str
ÊÊ "
+
ÊÊ# $
$str
ÁÁ 7
+
ÁÁ8 9
GetResources
ÁÁ: F
.
ÁÁF G
getResource
ÁÁG R
(
ÁÁR S
$str
ÁÁS ^
)
ÁÁ^ _
.
ÁÁ_ `
Value
ÁÁ` e
.
ÁÁe f
ToString
ÁÁf n
(
ÁÁn o
)
ÁÁo p
+
ÁÁq r
$strÁÁs Ö
+ÁÁÜ á
$str
ËË U
+
ËËV W
$str
ÈÈ 
+
ÈÈ  
$str
ÍÍ 6
+
ÍÍ7 8
GetResources
ÍÍ9 E
.
ÍÍE F
getResource
ÍÍF Q
(
ÍÍQ R
$str
ÍÍR \
)
ÍÍ\ ]
.
ÍÍ] ^
Value
ÍÍ^ c
.
ÍÍc d
ToString
ÍÍd l
(
ÍÍl m
)
ÍÍm n
+
ÍÍo p
$strÍÍq Ñ
+ÍÍÖ Ü
$str
ÎÎ G
+
ÎÎH I
naoAvaliado
ÎÎJ U
+
ÎÎV W
$str
ÎÎX p
+
ÎÎq r
$str
ÏÏ  
;
ÏÏ  !
}
ÌÌ 
public
ÑÑ 
string
ÑÑ 
mountHtmlTexto
ÑÑ (
(
ÑÑ( )
)
ÑÑ) *
{
ÖÖ 
var
ÜÜ 
naoAvaliado
ÜÜ 
=
ÜÜ  !
IsNotEvaluate
ÜÜ" /
.
ÜÜ/ 0
GetValueOrDefault
ÜÜ0 A
(
ÜÜA B
)
ÜÜB C
?
ÜÜD E
$str
ÜÜF Y
:
ÜÜZ [
$str
ÜÜ\ ^
;
ÜÜ^ _
if
àà 
(
àà 
	ValueText
àà 
==
àà  
$str
àà! ,
)
àà, -
	ValueText
ââ 
=
ââ 
$str
ââ  "
;
ââ" #
return
ãã 
$str
ãã 
+
ãã  
$str
ëë 7
+
ëë8 9
GetResources
ëë: F
.
ëëF G
getResource
ëëG R
(
ëëR S
$str
ëëS b
)
ëëb c
.
ëëc d
Value
ëëd i
.
ëëi j
ToString
ëëj r
(
ëër s
)
ëës t
+
ëëu v
$strëëw É
+ëëÑ Ö
	ValueTextëëÜ è
+ëëê ë
$str
íí "
+
íí# $
$str
ìì 7
+
ìì8 9
GetResources
ìì: F
.
ììF G
getResource
ììG R
(
ììR S
$str
ììS ^
)
ìì^ _
.
ìì_ `
Value
ìì` e
.
ììe f
ToString
ììf n
(
ììn o
)
ììo p
+
ììq r
$strììs Ü
+ììá à
$str
îî ^
+
îî_ `
	ValueText
îîa j
+
îîk l
$str
îîm s
+
îît u
$str
òò  
;
òò  !
}
ôô 
public
õõ 
string
õõ 
showGeneric
õõ %
{
úú 
get
ùù 
{
ûû 
if
üü 
(
üü 
	ParLevel3
üü !
.
üü! "
	IsNotNull
üü" +
(
üü+ ,
)
üü, -
)
üü- .
if
†† 
(
†† 
	ParLevel3
†† %
.
††% &
ParLevel3Value
††& 4
.
††4 5
	IsNotNull
††5 >
(
††> ?
)
††? @
)
††@ A
if
°° 
(
°°  
	ParLevel3
°°  )
.
°°) *
ParLevel3Value
°°* 8
.
°°8 9
FirstOrDefault
°°9 G
(
°°G H
r
°°H I
=>
°°J L
r
°°M N
.
°°N O
ParCompany_Id
°°O \
==
°°] _
CollectionLevel2
°°` p
.
°°p q
UnitId
°°q w
)
°°w x
.
°°x y
	IsNotNull°°y Ç
(°°Ç É
)°°É Ñ
)°°Ñ Ö
{
¢¢ 
if
££  "
(
££# $
	ParLevel3
££$ -
.
££- .
ParLevel3Value
££. <
.
££< =
FirstOrDefault
££= K
(
££K L
r
££L M
=>
££N P
r
££Q R
.
££R S
ParCompany_Id
££S `
==
££a c
CollectionLevel2
££d t
.
££t u
UnitId
££u {
&&
££| ~
r££ Ä
.££Ä Å%
ParLevel3InputType_Id££Å ñ
==££ó ô
$num££ö õ
)££õ ú
.££ú ù
	IsNotNull££ù ¶
(££¶ ß
)££ß ®
)££® ©
return
§§$ *
mountHtmlConform
§§+ ;
(
§§; <
)
§§< =
;
§§= >
else
••  $
if
••% '
(
••( )
	ParLevel3
••) 2
.
••2 3
ParLevel3Value
••3 A
.
••A B
FirstOrDefault
••B P
(
••P Q
r
••Q R
=>
••S U
r
••V W
.
••W X
ParCompany_Id
••X e
==
••f h
CollectionLevel2
••i y
.
••y z
UnitId••z Ä
&&••Å É
r••Ñ Ö
.••Ö Ü%
ParLevel3InputType_Id••Ü õ
==••ú û
$num••ü †
)••† °
.••° ¢
	IsNotNull••¢ ´
(••´ ¨
)••¨ ≠
)••≠ Æ
return
¶¶$ *%
mountHtmlNumeroDefeitos
¶¶+ B
(
¶¶B C
)
¶¶C D
;
¶¶D E
else
ßß  $
if
ßß% '
(
ßß( )
	ParLevel3
ßß) 2
.
ßß2 3
ParLevel3Value
ßß3 A
.
ßßA B
FirstOrDefault
ßßB P
(
ßßP Q
r
ßßQ R
=>
ßßS U
r
ßßV W
.
ßßW X
ParCompany_Id
ßßX e
==
ßßf h
CollectionLevel2
ßßi y
.
ßßy z
UnitIdßßz Ä
&&ßßÅ É
rßßÑ Ö
.ßßÖ Ü%
ParLevel3InputType_IdßßÜ õ
==ßßú û
$numßßü †
)ßß† °
.ßß° ¢
	IsNotNullßß¢ ´
(ßß´ ¨
)ßß¨ ≠
)ßß≠ Æ
return
®®$ *!
mountHtmlIntervalos
®®+ >
(
®®> ?
)
®®? @
;
®®@ A
else
©©  $
if
©©% '
(
©©( )
	ParLevel3
©©) 2
.
©©2 3
ParLevel3Value
©©3 A
.
©©A B
FirstOrDefault
©©B P
(
©©P Q
r
©©Q R
=>
©©S U
r
©©V W
.
©©W X
ParCompany_Id
©©X e
==
©©f h
CollectionLevel2
©©i y
.
©©y z
UnitId©©z Ä
&&©©Å É
r©©Ñ Ö
.©©Ö Ü%
ParLevel3InputType_Id©©Ü õ
==©©ú û
$num©©ü †
)©©† °
.©©° ¢
	IsNotNull©©¢ ´
(©©´ ¨
)©©¨ ≠
)©©≠ Æ
return
™™$ * 
mountHtmlCalculado
™™+ =
(
™™= >
)
™™> ?
;
™™? @
else
´´  $
if
´´% '
(
´´( )
	ParLevel3
´´) 2
.
´´2 3
ParLevel3Value
´´3 A
.
´´A B
FirstOrDefault
´´B P
(
´´P Q
r
´´Q R
=>
´´S U
r
´´V W
.
´´W X
ParCompany_Id
´´X e
==
´´f h
CollectionLevel2
´´i y
.
´´y z
UnitId´´z Ä
&&´´Å É
r´´Ñ Ö
.´´Ö Ü%
ParLevel3InputType_Id´´Ü õ
==´´ú û
$num´´ü †
)´´† °
.´´° ¢
	IsNotNull´´¢ ´
(´´´ ¨
)´´¨ ≠
)´´≠ Æ
return
¨¨$ *
mountHtmlTexto
¨¨+ 9
(
¨¨9 :
)
¨¨: ;
;
¨¨; <
}
≠≠ 
else
ÆÆ  
if
ÆÆ! #
(
ÆÆ$ %
	ParLevel3
ÆÆ% .
.
ÆÆ. /
ParLevel3Value
ÆÆ/ =
.
ÆÆ= >
FirstOrDefault
ÆÆ> L
(
ÆÆL M
r
ÆÆM N
=>
ÆÆO Q
r
ÆÆR S
.
ÆÆS T
ParCompany_Id
ÆÆT a
==
ÆÆb d
null
ÆÆe i
&&
ÆÆj l
r
ÆÆm n
.
ÆÆn o$
ParLevel3InputType_IdÆÆo Ñ
==ÆÆÖ á
$numÆÆà â
)ÆÆâ ä
.ÆÆä ã
	IsNotNullÆÆã î
(ÆÆî ï
)ÆÆï ñ
)ÆÆñ ó
return
ØØ  &
mountHtmlConform
ØØ' 7
(
ØØ7 8
)
ØØ8 9
;
ØØ9 :
else
∞∞  
if
∞∞! #
(
∞∞$ %
	ParLevel3
∞∞% .
.
∞∞. /
ParLevel3Value
∞∞/ =
.
∞∞= >
FirstOrDefault
∞∞> L
(
∞∞L M
r
∞∞M N
=>
∞∞O Q
r
∞∞R S
.
∞∞S T
ParCompany_Id
∞∞T a
==
∞∞b d
null
∞∞e i
&&
∞∞j l
r
∞∞m n
.
∞∞n o$
ParLevel3InputType_Id∞∞o Ñ
==∞∞Ö á
$num∞∞à â
)∞∞â ä
.∞∞ä ã
	IsNotNull∞∞ã î
(∞∞î ï
)∞∞ï ñ
)∞∞ñ ó
return
±±  &%
mountHtmlNumeroDefeitos
±±' >
(
±±> ?
)
±±? @
;
±±@ A
else
≤≤  
if
≤≤! #
(
≤≤$ %
	ParLevel3
≤≤% .
.
≤≤. /
ParLevel3Value
≤≤/ =
.
≤≤= >
FirstOrDefault
≤≤> L
(
≤≤L M
r
≤≤M N
=>
≤≤O Q
r
≤≤R S
.
≤≤S T
ParCompany_Id
≤≤T a
==
≤≤b d
null
≤≤e i
&&
≤≤j l
r
≤≤m n
.
≤≤n o$
ParLevel3InputType_Id≤≤o Ñ
==≤≤Ö á
$num≤≤à â
)≤≤â ä
.≤≤ä ã
	IsNotNull≤≤ã î
(≤≤î ï
)≤≤ï ñ
)≤≤ñ ó
return
≥≥  &!
mountHtmlIntervalos
≥≥' :
(
≥≥: ;
)
≥≥; <
;
≥≥< =
else
¥¥  
if
¥¥! #
(
¥¥$ %
	ParLevel3
¥¥% .
.
¥¥. /
ParLevel3Value
¥¥/ =
.
¥¥= >
FirstOrDefault
¥¥> L
(
¥¥L M
r
¥¥M N
=>
¥¥O Q
r
¥¥R S
.
¥¥S T
ParCompany_Id
¥¥T a
==
¥¥b d
null
¥¥e i
&&
¥¥j l
r
¥¥m n
.
¥¥n o$
ParLevel3InputType_Id¥¥o Ñ
==¥¥Ö á
$num¥¥à â
)¥¥â ä
.¥¥ä ã
	IsNotNull¥¥ã î
(¥¥î ï
)¥¥ï ñ
)¥¥ñ ó
return
µµ  & 
mountHtmlCalculado
µµ' 9
(
µµ9 :
)
µµ: ;
;
µµ; <
else
∂∂  
if
∂∂! #
(
∂∂$ %
	ParLevel3
∂∂% .
.
∂∂. /
ParLevel3Value
∂∂/ =
.
∂∂= >
FirstOrDefault
∂∂> L
(
∂∂L M
r
∂∂M N
=>
∂∂O Q
r
∂∂R S
.
∂∂S T
ParCompany_Id
∂∂T a
==
∂∂b d
null
∂∂e i
&&
∂∂j l
r
∂∂m n
.
∂∂n o$
ParLevel3InputType_Id∂∂o Ñ
==∂∂Ö á
$num∂∂à â
)∂∂â ä
.∂∂ä ã
	IsNotNull∂∂ã î
(∂∂î ï
)∂∂ï ñ
)∂∂ñ ó
return
∑∑  &
mountHtmlTexto
∑∑' 5
(
∑∑5 6
)
∑∑6 7
;
∑∑7 8
return
ππ 
string
ππ !
.
ππ! "
Empty
ππ" '
;
ππ' (
}
∫∫ 
}
ªª 
}
ΩΩ 	
}
øø 
}¿¿ ¥+
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Company\CompanyApiController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
.

# $
Company

$ +
{ 
[ 
RoutePrefix 
( 
$str 
) 
]  
[ 
	HandleApi 
( 
) 
] 
public 

class  
CompanyApiController &
:' (
ApiController) 6
{ 
private 
ICompanyDomain 
_companyDomain -
;- .
public 
IBaseDomain 
< 

ParCompany %
,% &
ParCompanyDTO' 4
>4 5
_basedomain6 A
;A B
public  
CompanyApiController #
(# $
ICompanyDomain$ 2
companyDomain3 @
,@ A
IBaseDomainB M
<M N

ParCompanyN X
,X Y
ParCompanyDTOY f
>f g

basedomainh r
)r s
{ 	
_companyDomain 
= 
companyDomain *
;* +
_basedomain 
= 

basedomain $
;$ %
} 	
[   	
HttpPost  	 
]   
[!! 	
	HandleApi!!	 
(!! 
)!! 
]!! 
["" 	
Route""	 
("" 
$str"" $
)""$ %
]""% &
public## 
void## 
AddUpdateParCompany## '
(##' (
[##( )
FromBody##) 1
]##1 2
CompanyViewModel##3 C
companyViewModel##D T
)##T U
{$$ 	

ParCompany%% 
parCompanySalvar%% '
=%%( )
Mapper%%* 0
.%%0 1
Map%%1 4
<%%4 5

ParCompany%%5 ?
>%%? @
(%%@ A
companyViewModel%%A Q
.%%Q R
parCompanyDTO%%R _
)%%_ `
;%%` a
List&& 
<&& 
ParCompanyCluster&& "
>&&" ##
parCompanyClusterSalvar&&$ ;
=&&< =
Mapper&&> D
.&&D E
Map&&E H
<&&H I
List&&I M
<&&M N
ParCompanyCluster&&N _
>&&_ `
>&&` a
(&&a b
companyViewModel&&b r
.&&r s
parCompanyDTO	&&s Ä
.
&&Ä Å#
ListParCompanyCluster
&&Å ñ
)
&&ñ ó
;
&&ó ò
List'' 
<''  
ParCompanyXStructure'' %
>''% &&
parCompanyXStructureSalvar''' A
=''B C
Mapper''D J
.''J K
Map''K N
<''N O
List''O S
<''S T 
ParCompanyXStructure''T h
>''h i
>''i j
(''j k
companyViewModel''k {
.''{ |
parCompanyDTO	''| â
.
''â ä&
ListParCompanyXStructure
''ä ¢
)
''¢ £
;
''£ §
_companyDomain)) 
.)) 
SaveParCompany)) )
())) *
parCompanySalvar))* :
))): ;
;)); <
_companyDomain** 
.** !
SaveParCompanyCluster** 0
(**0 1#
parCompanyClusterSalvar**1 H
,**H I
parCompanySalvar**J Z
)**Z [
;**[ \
_companyDomain++ 
.++ $
SaveParCompanyXStructure++ 3
(++3 4&
parCompanyXStructureSalvar++4 N
,++N O
parCompanySalvar++P `
)++` a
;++a b
},, 	
[.. 	
HttpPost..	 
].. 
[// 	
	HandleApi//	 
(// 
)// 
]// 
[00 	
Route00	 
(00 
$str00 &
)00& '
]00' (
public11 
void11 !
AddUpdateParStructure11 )
(11) *
[11* +
FromBody11+ 3
]113 4
CompanyViewModel115 E
companyViewModel11F V
)11V W
{22 	
_companyDomain33 
.33 !
AddUpdateParStructure33 0
(330 1
companyViewModel331 A
.33A B
parStructureDTO33B Q
)33Q R
;33R S
}44 	
[66 	
HttpPost66	 
]66 
[77 	
	HandleApi77	 
(77 
)77 
]77 
[88 	
Route88	 
(88 
$str88 +
)88+ ,
]88, -
public99 
void99 &
AddUpdateParStructureGroup99 .
(99. /
[99/ 0
FromBody990 8
]998 9
CompanyViewModel99: J
companyViewModel99K [
)99[ \
{:: 	
_companyDomain;; 
.;; &
AddUpdateParStructureGroup;; 5
(;;5 6
companyViewModel;;6 F
.;;F G 
parStructureGroupDTO;;G [
);;[ \
;;;\ ]
}<< 	
[>> 	
HttpGet>>	 
]>> 
[?? 	
	HandleApi??	 
(?? 
)?? 
]?? 
[@@ 	
Route@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
ParCompanyDTOAA 

GETCompanyAA '
(AA' (
intAA( +
idAA, .
)AA. /
{BB 	
returnCC 
_basedomainCC 
.CC 
GetByIdCC &
(CC& '
idCC' )
)CC) *
;CC* +
}DD 	
}FF 
}GG –
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\GlobalConfigApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{		 
[

 
	HandleApi

 
(

 
)

 
]

 
[ 
RoutePrefix 
( 
$str "
)" #
]# $
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
public 

class %
GlobalConfigApiController *
:+ ,
ApiController- :
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public   
void   

TestaEmail   
(   
JObject   &
form  ' +
)  + ,
{!! 	
dynamic"" 

paramiters"" 
=""  
form""! %
;""% &
string## 
emailTo## 
=## 

paramiters## '
.##' (
email##( -
;##- .
SimpleAsynchronous$$ 
.$$ .
"SendMailFromDeviationSgqAppTesteBR$$ A
($$A B
emailTo$$B I
,$$I J
false$$K P
)$$P Q
;$$Q R
}%% 	
['' 	
HttpPost''	 
]'' 
[(( 	
Route((	 
((( 
$str(( 
)(( 
]((  
public)) 
void)) 
TestaEmailUSA)) !
())! "
JObject))" )
form))* .
))). /
{** 	
dynamic++ 

paramiters++ 
=++  
form++! %
;++% &
string,, 
emailTo,, 
=,, 

paramiters,, '
.,,' (
email,,( -
;,,- .!
SimpleAsynchronousUSA-- !
.--! "
SendMailUSA--" -
(--- .
emailTo--. 5
)--5 6
;--6 7
}.. 	
[00 	
HttpPost00	 
]00 
[11 	
Route11	 
(11 
$str11 
)11 
]11 
public22 
string22 
RecSenha22 
(22 
[22  
FromBody22  (
]22( )
string22) /
senha220 5
)225 6
{33 	
return44 
Guard44 
.44 
DecryptStringAES44 )
(44) *
senha44* /
)44/ 0
;440 1
}55 	
}tt 
}uu ™
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\LanguageController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

class 
LanguageController #
:$ %

Controller& 0
{		 
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
Change "
(" #
string# ) 
LanguageAbbreviation* >
)> ?
{ 	
if 
(  
LanguageAbbreviation $
!=% '
null( ,
), -
{ 
Thread 
. 
CurrentThread $
.$ %
CurrentCulture% 3
=4 5
CultureInfo6 A
.A B!
CreateSpecificCultureB W
(W X 
LanguageAbbreviationX l
)l m
;m n
Thread 
. 
CurrentThread $
.$ %
CurrentUICulture% 5
=6 7
new8 ;
CultureInfo< G
(G H 
LanguageAbbreviationH \
)\ ]
;] ^
} 

HttpCookie 
cookie 
= 
new  #

HttpCookie$ .
(. /
$str/ 9
)9 :
;: ;
cookie 
. 
Value 
=  
LanguageAbbreviation /
;/ 0
Response 
. 
Cookies 
. 
Add  
(  !
cookie! '
)' (
;( )
return 
View 
( 
$str 
) 
; 
} 	
} 
}   Í	
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\UserAndRoles\LoginController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
Login$ )
{ 
[ 
	HandleApi 
( 
saveLog 
: 
false 
) 
] 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[		 
RoutePrefix		 
(		 
$str		 
)		  
]		  !
public

 

class

 
LoginController

  
:

! "
ApiController

# 0
{ 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
string 
Logado 
( 
) 
{ 	
return 
$str 
; 
}$$ 	
}77 
}88 Ì
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\NQAController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 
	HandleApi 
( 
) 
] 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str 
) 
] 
public 

class 
NQAController 
:  
ApiController! .
{ 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str -
)- .
]. /
public 
int 
getNQA 
( 
string  
nivel! &
,& '
string( .
tamanhoLote/ :
): ;
{ 	
var 
obj 
= 
new !
CepRecortesController /
(/ 0
)0 1
;1 2
return 
obj 
. 
getNQA 
( 
nivel #
,# $
tamanhoLote% 0
)0 1
;1 2
} 	
} 
} ‹ß
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Params\ParamsApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
Params$ *
{ 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str  
)  !
]! "
public 

class 
ParamsApiController $
:% &
ApiController' 4
{ 
private 
IParamsDomain 
_paramdDomain +
;+ ,
private 
IBaseDomain 
< 
	ParLevel1 %
,% &
ParLevel1DTO' 3
>3 4
_baseParLevel15 C
;C D
private   
IBaseDomain   
<   
	ParLevel2   %
,  % &
ParLevel2DTO  ' 3
>  3 4
_baseParLevel2  5 C
;  C D
private!! 
IBaseDomain!! 
<!! 
	ParLevel3!! %
,!!% &
ParLevel3DTO!!' 3
>!!3 4
_baseParLevel3!!5 C
;!!C D
private"" 
IBaseDomain"" 
<"" 
ParHeaderField"" *
,""* +
ParHeaderFieldDTO"", =
>""= >
_baseParHeaderField""? R
;""R S
private## 
IBaseDomain## 
<## 
ParMultipleValues## -
,##- . 
ParMultipleValuesDTO##/ C
>##C D"
_baseParMultipleValues##E [
;##[ \
public%% 
ParamsApiController%% "
(%%" #
IParamsDomain%%# 0
paramdDomain%%1 =
,&& 
IBaseDomain&& 
<&& 
	ParLevel2&& #
,&&# $
ParLevel2DTO&&% 1
>&&1 2
baseParLevel2&&3 @
,'' 
IBaseDomain'' 
<'' 
	ParLevel3'' #
,''# $
ParLevel3DTO''% 1
>''1 2
baseParLevel3''3 @
,(( 
IBaseDomain(( 
<(( 
	ParLevel1(( #
,((# $
ParLevel1DTO((% 1
>((1 2
baseParLevel1((3 @
,)) 
IBaseDomain)) 
<)) 
ParHeaderField)) (
,))( )
ParHeaderFieldDTO))* ;
>)); <
baseParHeaderField))= O
,** 
IBaseDomain** 
<** 
ParMultipleValues** +
,**+ , 
ParMultipleValuesDTO**- A
>**A B!
baseParMultipleValues**C X
)**X Y
{++ 	
_baseParLevel1,, 
=,, 
baseParLevel1,, *
;,,* +
_baseParLevel2-- 
=-- 
baseParLevel2-- *
;--* +
_baseParLevel3.. 
=.. 
baseParLevel3.. *
;..* +
_paramdDomain// 
=// 
paramdDomain// (
;//( )
_baseParHeaderField00 
=00  !
baseParHeaderField00" 4
;004 5"
_baseParMultipleValues11 "
=11# $!
baseParMultipleValues11% :
;11: ;
}22 	
[88 	
HttpPost88	 
]88 
[99 	
ValidateModel99	 
]99 
[:: 	
Route::	 
(:: 
$str::  
)::  !
]::! "
public;; 
ParamsViewModel;; 
AddUpdateLevel1;; .
(;;. /
[;;/ 0
FromBody;;0 8
];;8 9
ParamsViewModel;;: I
paramsViewModel;;J Y
);;Y Z
{<< 	
paramsViewModel>> 
.>> 
	paramsDto>> %
.>>% &
parLevel1Dto>>& 2
.>>2 3&
IsSpecificNumberEvaluetion>>3 M
=>>N O
paramsViewModel>>P _
.>>_ `
	paramsDto>>` i
.>>i j
parLevel1Dto>>j v
.>>v w#
IsSpecificNumberSample	>>w ç
;
>>ç é
paramsViewModel@@ 
.@@ 
	paramsDto@@ %
=@@& '
_paramdDomain@@( 5
.@@5 6
AddUpdateLevel1@@6 E
(@@E F
paramsViewModel@@F U
.@@U V
	paramsDto@@V _
)@@_ `
;@@` a
returnAA 
paramsViewModelAA "
;AA" #
}BB 	
[DD 	
HttpPostDD	 
]DD 
[EE 	
RouteEE	 
(EE 
$strEE 0
)EE0 1
]EE1 2
publicFF 
boolFF &
SetRequiredCamposCabecalhoFF .
(FF. /
intFF/ 2
idFF3 5
,FF5 6
intFF7 :
requiredFF; C
)FFC D
{GG 	
returnHH 
_paramdDomainHH  
.HH  !&
SetRequiredCamposCabecalhoHH! ;
(HH; <
idHH< >
,HH> ?
requiredHH@ H
)HHH I
;HHI J
}II 	
[KK 	
HttpPostKK	 
]KK 
[LL 	
RouteLL	 
(LL 
$strLL 7
)LL7 8
]LL8 9
publicMM 
ParMultipleValuesMM  %
SetDefaultMultiplaEscolhaMM! :
(MM: ;
intMM; >
idHeaderMM? G
,MMG H
intMMI L

idMultipleMMM W
)MMW X
{NN 	
returnOO 
_paramdDomainOO  
.OO  !%
SetDefaultMultiplaEscolhaOO! :
(OO: ;
idHeaderOO; C
,OOC D

idMultipleOOE O
)OOO P
;OOP Q
}PP 	
[RR 	
HttpPostRR	 
]RR 
[SS 	
RouteSS	 
(SS 
$strSS  
)SS  !
]SS! "
publicTT 
ParamsViewModelTT 
AddUpdateLevel2TT .
(TT. /
[TT/ 0
FromBodyTT0 8
]TT8 9
ParamsViewModelTT: I
paramsViewModelTTJ Y
)TTY Z
{UU 	
paramsViewModelVV 
.VV 
	paramsDtoVV %
=VV& '
_paramdDomainVV( 5
.VV5 6
AddUpdateLevel2VV6 E
(VVE F
paramsViewModelVVF U
.VVU V
	paramsDtoVVV _
)VV_ `
;VV` a
returnWW 
paramsViewModelWW "
;WW" #
}XX 	
[ZZ 	
HttpPostZZ	 
]ZZ 
[[[ 	
Route[[	 
([[ 
$str[[ (
)[[( )
][[) *
public\\ 
ParamsViewModel\\ #
AddUpdateParLevel3Group\\ 6
(\\6 7
[\\7 8
FromBody\\8 @
]\\@ A
ParamsViewModel\\B Q
paramsViewModel\\R a
)\\a b
{]] 	
paramsViewModel^^ 
.^^ 
	paramsDto^^ %
=^^& '
_paramdDomain^^( 5
.^^5 6
AddUpdateLevel2^^6 E
(^^E F
paramsViewModel^^F U
.^^U V
	paramsDto^^V _
)^^_ `
;^^` a
return__ 
paramsViewModel__ "
;__" #
}`` 	
[bb 	
HttpPostbb	 
]bb 
[cc 	
Routecc	 
(cc 
$strcc *
)cc* +
]cc+ ,
publicdd 
ParLevel3GroupDTOdd   
RemoveParLevel3Groupdd! 5
(dd5 6
intdd6 9
Iddd: <
)dd< =
{ee 	
returnff 
_paramdDomainff  
.ff  ! 
RemoveParLevel3Groupff! 5
(ff5 6
Idff6 8
)ff8 9
;ff9 :
}gg 	
[ii 	
HttpPostii	 
]ii 
[jj 	
Routejj	 
(jj 
$strjj  
)jj  !
]jj! "
publickk 
ParamsViewModelkk 
AddUpdateLevel3kk .
(kk. /
[kk/ 0
FromBodykk0 8
]kk8 9
ParamsViewModelkk: I
paramsViewModelkkJ Y
)kkY Z
{ll 	
paramsViewModelmm 
.mm 
	paramsDtomm %
=mm& '
_paramdDomainmm( 5
.mm5 6
AddUpdateLevel3mm6 E
(mmE F
paramsViewModelmmF U
.mmU V
	paramsDtommV _
)mm_ `
;mm` a
returnnn 
paramsViewModelnn "
;nn" #
}oo 	
[
ﬁﬁ 	
HttpGet
ﬁﬁ	 
]
ﬁﬁ 
[
ﬂﬂ 	
Route
ﬂﬂ	 
(
ﬂﬂ 
$str
ﬂﬂ I
)
ﬂﬂI J
]
ﬂﬂJ K
public
‡‡ 
List
‡‡ 
<
‡‡ &
ParLevel3Level2Level1DTO
‡‡ ,
>
‡‡, -
AddVinculoL1L2
‡‡. <
(
‡‡< =
int
‡‡= @
idLevel1
‡‡A I
,
‡‡I J
int
‡‡K N
idLevel2
‡‡O W
,
‡‡W X
int
‡‡Y \
idLevel3
‡‡] e
,
‡‡e f
int
‡‡g j
userId
‡‡k q
)
‡‡q r
{
·· 	
return
‚‚ 
_paramdDomain
‚‚  
.
‚‚  !
AddVinculoL1L2
‚‚! /
(
‚‚/ 0
idLevel1
‚‚0 8
,
‚‚8 9
idLevel2
‚‚: B
,
‚‚B C
idLevel3
‚‚D L
,
‚‚L M
userId
‚‚N T
)
‚‚T U
;
‚‚U V
}
„„ 	
[
ÏÏ 	
HttpPost
ÏÏ	 
]
ÏÏ 
[
ÌÌ 	
Route
ÌÌ	 
(
ÌÌ 
$str
ÌÌ L
)
ÌÌL M
]
ÌÌM N
public
ÓÓ 
string
ÓÓ 
RemVinculoL2L3
ÓÓ $
(
ÓÓ$ %
int
ÓÓ% (
idLevel1
ÓÓ) 1
,
ÓÓ1 2
int
ÓÓ3 6
idLevel2
ÓÓ7 ?
,
ÓÓ? @
int
ÓÓA D
idLevel3
ÓÓE M
,
ÓÓM N
int
ÓÓO R
?
ÓÓR S
	companyId
ÓÓT ]
=
ÓÓ^ _
null
ÓÓ` d
)
ÓÓd e
{
ÔÔ 	
var
 
retorno
 
=
 
$str
 2
;
2 3
using
ÚÚ 
(
ÚÚ 
var
ÚÚ 
db
ÚÚ 
=
ÚÚ 
new
ÚÚ 
SgqDbDevEntities
ÚÚ  0
(
ÚÚ0 1
)
ÚÚ1 2
)
ÚÚ2 3
{
ÛÛ 
var
ıı #
parLevel3Level2Level1
ıı )
=
ıı* +
db
ıı, .
.
ıı. /#
ParLevel3Level2Level1
ıı/ D
.
ııD E
Include
ııE L
(
ııL M
$str
ııM ^
)
ıı^ _
.
ıı_ `
Where
ıı` e
(
ııe f
r
ııf g
=>
ııh j
r
ıık l
.
ııl m
ParLevel3Level2
ıım |
.
ıı| }
ParLevel2_Idıı} â
==ııä å
idLevel2ııç ï
&&ııñ ò
rııô ö
.ııö õ
ParLevel3Level2ııõ ™
.ıı™ ´
ParLevel3_Idıı´ ∑
==ıı∏ ∫
idLevel3ııª √
&&ııƒ ∆
rıı« »
.ıı» …
ParCompany_Idıı… ÷
==ıı◊ Ÿ
	companyIdıı⁄ „
)ıı„ ‰
;ıı‰ Â
var
˜˜ 
existe
˜˜ 
=
˜˜ 
db
˜˜ 
.
˜˜  #
ParLevel3Level2Level1
˜˜  5
.
˜˜5 6
Include
˜˜6 =
(
˜˜= >
$str
˜˜> O
)
˜˜O P
.
˜˜P Q
Where
˜˜Q V
(
˜˜V W
r
˜˜W X
=>
˜˜Y [
r
˜˜\ ]
.
˜˜] ^
ParLevel3Level2
˜˜^ m
.
˜˜m n
ParLevel2_Id
˜˜n z
==
˜˜{ }
idLevel2˜˜~ Ü
&&˜˜á â
r˜˜ä ã
.˜˜ã å
ParLevel3Level2˜˜å õ
.˜˜õ ú
ParLevel3_Id˜˜ú ®
==˜˜© ´
idLevel3˜˜¨ ¥
&&˜˜µ ∑
r˜˜∏ π
.˜˜π ∫
ParCompany_Id˜˜∫ «
==˜˜»  
	companyId˜˜À ‘
)˜˜‘ ’
.˜˜’ ÷
ToList˜˜÷ ‹
(˜˜‹ ›
)˜˜› ﬁ
;˜˜ﬁ ﬂ
if
˘˘ 
(
˘˘ 
existe
˘˘ 
==
˘˘ 
null
˘˘ "
||
˘˘# %
existe
˘˘& ,
.
˘˘, -
Count
˘˘- 2
(
˘˘2 3
)
˘˘3 4
==
˘˘5 7
$num
˘˘8 9
)
˘˘9 :
return
˙˙ 
retorno
˙˙ "
;
˙˙" #
foreach
¸¸ 
(
¸¸ 
var
¸¸ 
i
¸¸ 
in
¸¸ !#
parLevel3Level2Level1
¸¸" 7
)
¸¸7 8
db
˝˝ 
.
˝˝ 
ParLevel3Level2
˝˝ &
.
˝˝& '
Remove
˝˝' -
(
˝˝- .
i
˝˝. /
.
˝˝/ 0
ParLevel3Level2
˝˝0 ?
)
˝˝? @
;
˝˝@ A
db
ˇˇ 
.
ˇˇ #
ParLevel3Level2Level1
ˇˇ (
.
ˇˇ( )
RemoveRange
ˇˇ) 4
(
ˇˇ4 5#
parLevel3Level2Level1
ˇˇ5 J
)
ˇˇJ K
;
ˇˇK L
db
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ 
(
ÅÅ 
)
ÅÅ  
;
ÅÅ  !
}
ÇÇ 
return
ÖÖ 
retorno
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
[
àà 	
HttpPost
àà	 
]
àà 
[
ââ 	
Route
ââ	 
(
ââ 
$str
ââ D
)
ââD E
]
ââE F
public
ää 
bool
ää +
VerificaShowBtnRemVinculoL1L2
ää 1
(
ää1 2
int
ää2 5
idLevel1
ää6 >
,
ää> ?
int
ää@ C
idLevel2
ääD L
)
ääL M
{
ãã 	
return
åå 
_paramdDomain
åå  
.
åå  !+
VerificaShowBtnRemVinculoL1L2
åå! >
(
åå> ?
idLevel1
åå? G
,
ååG H
idLevel2
ååI Q
)
ååQ R
;
ååR S
}
çç 	
[
ëë 	
HttpPost
ëë	 
]
ëë 
[
íí 	
Route
íí	 
(
íí 
$str
íí /
)
íí/ 0
]
íí0 1
public
ìì 
ParLevel2DTO
ìì 
GetAutorizacoes
ìì +
(
ìì+ ,
int
ìì, /
?
ìì/ 0
l1
ìì1 3
=
ìì4 5
$num
ìì6 7
,
ìì7 8
int
ìì9 <
?
ìì< =
l2
ìì> @
=
ììA B
$num
ììC D
,
ììD E
int
ììF I
?
ììI J
l3
ììK M
=
ììN O
$num
ììP Q
)
ììQ R
{
îî 	
	ParLevel1
ïï 
level1
ïï 
=
ïï 
new
ïï "
	ParLevel1
ïï# ,
(
ïï, -
)
ïï- .
;
ïï. /
ParLevel2DTO
ññ 
level2
ññ 
=
ññ  !
new
ññ" %
ParLevel2DTO
ññ& 2
(
ññ2 3
)
ññ3 4
;
ññ4 5
using
óó 
(
óó 
var
óó 
db
óó 
=
óó 
new
óó 
SgqDbDevEntities
óó  0
(
óó0 1
)
óó1 2
)
óó2 3
{
òò 
if
ôô 
(
ôô 
l1
ôô 
>
ôô 
$num
ôô 
)
ôô 
{
öö 
level1
õõ 
=
õõ 
db
õõ 
.
õõ  
	ParLevel1
õõ  )
.
õõ) *
FirstOrDefault
õõ* 8
(
õõ8 9
r
õõ9 :
=>
õõ; =
r
õõ> ?
.
õõ? @
Id
õõ@ B
==
õõC E
l1
õõF H
)
õõH I
;
õõI J
if
úú 
(
úú 
l2
úú 
>
úú 
$num
úú 
)
úú 
{
ùù 
level2
ûû 
=
ûû  
Mapper
ûû! '
.
ûû' (
Map
ûû( +
<
ûû+ ,
ParLevel2DTO
ûû, 8
>
ûû8 9
(
ûû9 :
db
ûû: <
.
ûû< =
	ParLevel2
ûû= F
.
ûûF G
FirstOrDefault
ûûG U
(
ûûU V
r
ûûV W
=>
ûûX Z
r
ûû[ \
.
ûû\ ]
Id
ûû] _
==
ûû` b
l2
ûûc e
)
ûûe f
)
ûûf g
;
ûûg h
level2
üü 
.
üü  
RegrasParamsLevel1
üü 1
(
üü1 2
Mapper
üü2 8
.
üü8 9
Map
üü9 <
<
üü< =
ParLevel1DTO
üü= I
>
üüI J
(
üüJ K
level1
üüK Q
)
üüQ R
)
üüR S
;
üüS T
}
†† 
}
°° 
}
¢¢ 
return
§§ 
level2
§§ 
;
§§ 
}
•• 	
[
ßß 	
HttpPost
ßß	 
]
ßß 
[
®® 	
Route
®®	 
(
®® 
$str
®® )
)
®®) *
]
®®* +
public
©© #
ParLevel2XHeaderField
©© $&
AddRemoveParHeaderLevel2
©©% =
(
©©= >#
ParLevel2XHeaderField
©©> S#
parLevel2XHeaderField
©©T i
)
©©i j
{
™™ 	
return
´´ 
_paramdDomain
´´  
.
´´  !&
AddRemoveParHeaderLevel2
´´! 9
(
´´9 :#
parLevel2XHeaderField
´´: O
)
´´O P
;
´´P Q
}
¨¨ 	
[
ÆÆ 	
HttpGet
ÆÆ	 
]
ÆÆ 
[
ØØ 	
Route
ØØ	 
(
ØØ 
$str
ØØ #
)
ØØ# $
]
ØØ$ %
public
∞∞  
ParMeasurementUnit
∞∞ ! 
AddUnidadeDeMedida
∞∞" 4
(
∞∞4 5
string
∞∞5 ;
valor
∞∞< A
)
∞∞A B
{
±± 	
var
≤≤ 
save
≤≤ 
=
≤≤ 
new
≤≤  
ParMeasurementUnit
≤≤ -
(
≤≤- .
)
≤≤. /
{
≤≤0 1
Name
≤≤2 6
=
≤≤7 8
valor
≤≤9 >
,
≤≤> ?
AddDate
≤≤@ G
=
≤≤H I
DateTime
≤≤J R
.
≤≤R S
Now
≤≤S V
,
≤≤V W
Description
≤≤X c
=
≤≤d e
string
≤≤f l
.
≤≤l m
Empty
≤≤m r
,
≤≤r s
IsActive
≤≤t |
=
≤≤} ~
true≤≤ É
}≤≤Ñ Ö
;≤≤Ö Ü
using
≥≥ 
(
≥≥ 
var
≥≥ 
db
≥≥ 
=
≥≥ 
new
≥≥ 
SgqDbDevEntities
≥≥  0
(
≥≥0 1
)
≥≥1 2
)
≥≥2 3
{
¥¥ 
db
µµ 
.
µµ  
ParMeasurementUnit
µµ %
.
µµ% &
Add
µµ& )
(
µµ) *
save
µµ* .
)
µµ. /
;
µµ/ 0
db
∂∂ 
.
∂∂ 
SaveChanges
∂∂ 
(
∂∂ 
)
∂∂  
;
∂∂  !
}
∑∑ 
return
∏∏ 
save
∏∏ 
;
∏∏ 
}
ππ 	
[
ªª 	
HttpPost
ªª	 
]
ªª 
[
ºº 	
Route
ºº	 
(
ºº 
$str
ºº "
)
ºº" #
]
ºº# $
public
ΩΩ 
ExpandoObject
ΩΩ 
AddEntradaBinaria
ΩΩ .
(
ΩΩ. /
ParLevel3Bool
ΩΩ/ <
	parLevel3
ΩΩ= F
)
ΩΩF G
{
ææ 	 
ParLevel3BoolFalse
¿¿ 
	boolFalse
¿¿ (
=
¿¿) *
new
¿¿+ . 
ParLevel3BoolFalse
¿¿/ A
(
¿¿A B
)
¿¿B C
{
¿¿D E
Name
¿¿F J
=
¿¿K L
	parLevel3
¿¿M V
.
¿¿V W
	nameFalse
¿¿W `
,
¿¿` a
AddDate
¿¿b i
=
¿¿j k
DateTime
¿¿l t
.
¿¿t u
Now
¿¿u x
,
¿¿x y
IsActive¿¿z Ç
=¿¿É Ñ
true¿¿Ö â
}¿¿ä ã
;¿¿ã å
ParLevel3BoolTrue
¡¡ 
boolTrue
¡¡ &
=
¡¡' (
new
¡¡) ,
ParLevel3BoolTrue
¡¡- >
(
¡¡> ?
)
¡¡? @
{
¡¡A B
Name
¡¡C G
=
¡¡H I
	parLevel3
¡¡J S
.
¡¡S T
nameTrue
¡¡T \
,
¡¡\ ]
AddDate
¡¡^ e
=
¡¡f g
DateTime
¡¡h p
.
¡¡p q
Now
¡¡q t
,
¡¡t u
IsActive
¡¡v ~
=¡¡ Ä
true¡¡Å Ö
}¡¡Ü á
;¡¡á à
using
√√ 
(
√√ 
var
√√ 
db
√√ 
=
√√ 
new
√√ 
SgqDbDevEntities
√√  0
(
√√0 1
)
√√1 2
)
√√2 3
{
ƒƒ 
db
≈≈ 
.
≈≈ 
ParLevel3BoolTrue
≈≈ $
.
≈≈$ %
Add
≈≈% (
(
≈≈( )
boolTrue
≈≈) 1
)
≈≈1 2
;
≈≈2 3
db
∆∆ 
.
∆∆  
ParLevel3BoolFalse
∆∆ %
.
∆∆% &
Add
∆∆& )
(
∆∆) *
	boolFalse
∆∆* 3
)
∆∆3 4
;
∆∆4 5
db
«« 
.
«« 
SaveChanges
«« 
(
«« 
)
««  
;
««  !
}
»» 
dynamic
   
Retorno
   
=
   
new
   !
ExpandoObject
  " /
(
  / 0
)
  0 1
;
  1 2
Retorno
ÃÃ 
.
ÃÃ 
True
ÃÃ 
=
ÃÃ 
boolTrue
ÃÃ #
;
ÃÃ# $
Retorno
ÕÕ 
.
ÕÕ 
False
ÕÕ 
=
ÕÕ 
	boolFalse
ÕÕ %
;
ÕÕ% &
return
œœ 
Retorno
œœ 
;
œœ 
}
—— 	
[
”” 	
HttpPost
””	 
]
”” 
[
‘‘ 	
Route
‘‘	 
(
‘‘ 
$str
‘‘ 
)
‘‘ 
]
‘‘  
public
’’ 
List
’’ 
<
’’ 
ParLevel1DTO
’’  
>
’’  !
GetListLevel1
’’" /
(
’’/ 0
)
’’0 1
{
÷÷ 	
return
◊◊ 
_baseParLevel1
◊◊ !
.
◊◊! "
GetAllNoLazyLoad
◊◊" 2
(
◊◊2 3
)
◊◊3 4
.
◊◊4 5
ToList
◊◊5 ;
(
◊◊; <
)
◊◊< =
;
◊◊= >
}
ÿÿ 	
[
⁄⁄ 	
HttpPost
⁄⁄	 
]
⁄⁄ 
[
€€ 	
Route
€€	 
(
€€ 
$str
€€ 
)
€€ 
]
€€  
public
‹‹ 
List
‹‹ 
<
‹‹ 
ParLevel2DTO
‹‹  
>
‹‹  !
GetListLevel2
‹‹" /
(
‹‹/ 0
)
‹‹0 1
{
›› 	
return
ﬁﬁ 
_baseParLevel2
ﬁﬁ !
.
ﬁﬁ! "
GetAllNoLazyLoad
ﬁﬁ" 2
(
ﬁﬁ2 3
)
ﬁﬁ3 4
.
ﬁﬁ4 5
ToList
ﬁﬁ5 ;
(
ﬁﬁ; <
)
ﬁﬁ< =
;
ﬁﬁ= >
}
‡‡ 	
[
‚‚ 	
HttpPost
‚‚	 
]
‚‚ 
[
„„ 	
Route
„„	 
(
„„ 
$str
„„ 
)
„„ 
]
„„  
public
‰‰ 
List
‰‰ 
<
‰‰ 
ParLevel3DTO
‰‰  
>
‰‰  !
GetListLevel3
‰‰" /
(
‰‰/ 0
)
‰‰0 1
{
ÂÂ 	
return
ÊÊ 
_baseParLevel3
ÊÊ !
.
ÊÊ! "
GetAllNoLazyLoad
ÊÊ" 2
(
ÊÊ2 3
)
ÊÊ3 4
.
ÊÊ4 5
ToList
ÊÊ5 ;
(
ÊÊ; <
)
ÊÊ< =
;
ÊÊ= >
}
ÁÁ 	
[
ÈÈ 	
HttpPost
ÈÈ	 
]
ÈÈ 
[
ÍÍ 	
Route
ÍÍ	 
(
ÍÍ 
$str
ÍÍ 8
)
ÍÍ8 9
]
ÍÍ9 :
public
ÎÎ 
List
ÎÎ 
<
ÎÎ 
ParLevel2DTO
ÎÎ  
>
ÎÎ  !*
GetListLevel2VinculadoLevel1
ÎÎ" >
(
ÎÎ> ?
int
ÎÎ? B
level1Id
ÎÎC K
)
ÎÎK L
{
ÏÏ 	
var
ÌÌ 
list
ÌÌ 
=
ÌÌ 
new
ÌÌ 
List
ÌÌ 
<
ÌÌ  
ParLevel2DTO
ÌÌ  ,
>
ÌÌ, -
(
ÌÌ- .
)
ÌÌ. /
;
ÌÌ/ 0
using
ÔÔ 
(
ÔÔ 
var
ÔÔ 
db
ÔÔ 
=
ÔÔ 
new
ÔÔ 
SgqDbDevEntities
ÔÔ  0
(
ÔÔ0 1
)
ÔÔ1 2
)
ÔÔ2 3
{
 
db
ÒÒ 
.
ÒÒ 
Configuration
ÒÒ  
.
ÒÒ  ! 
LazyLoadingEnabled
ÒÒ! 3
=
ÒÒ4 5
false
ÒÒ6 ;
;
ÒÒ; <
var
ÚÚ 
result
ÚÚ 
=
ÚÚ 
db
ÚÚ 
.
ÚÚ  #
ParLevel3Level2Level1
ÚÚ  5
.
ÚÚ5 6
Where
ÚÚ6 ;
(
ÚÚ; <
r
ÚÚ< =
=>
ÚÚ> @
r
ÚÚA B
.
ÚÚB C
ParLevel1_Id
ÚÚC O
==
ÚÚP R
level1Id
ÚÚS [
)
ÚÚ[ \
.
ÚÚ\ ]
Select
ÚÚ] c
(
ÚÚc d
r
ÚÚd e
=>
ÚÚf h
r
ÚÚi j
.
ÚÚj k
ParLevel3Level2
ÚÚk z
.
ÚÚz {
	ParLevel2ÚÚ{ Ñ
)ÚÚÑ Ö
.ÚÚÖ Ü
ToListÚÚÜ å
(ÚÚå ç
)ÚÚç é
.ÚÚé è
GroupByÚÚè ñ
(ÚÚñ ó
rÚÚó ò
=>ÚÚô õ
rÚÚú ù
.ÚÚù û
IdÚÚû †
)ÚÚ† °
;ÚÚ° ¢
list
ÛÛ 
=
ÛÛ 
Mapper
ÛÛ 
.
ÛÛ 
Map
ÛÛ !
<
ÛÛ! "
List
ÛÛ" &
<
ÛÛ& '
ParLevel2DTO
ÛÛ' 3
>
ÛÛ3 4
>
ÛÛ4 5
(
ÛÛ5 6
result
ÛÛ6 <
.
ÛÛ< =
Select
ÛÛ= C
(
ÛÛC D
r
ÛÛD E
=>
ÛÛF H
r
ÛÛI J
.
ÛÛJ K
First
ÛÛK P
(
ÛÛP Q
)
ÛÛQ R
)
ÛÛR S
)
ÛÛS T
;
ÛÛT U
}
ÙÙ 
return
ˆˆ 
list
ˆˆ 
;
ˆˆ 
}
˜˜ 	
[
˘˘ 	
HttpPost
˘˘	 
]
˘˘ 
[
˙˙ 	
Route
˙˙	 
(
˙˙ 
$str
˙˙ 8
)
˙˙8 9
]
˙˙9 :
public
˚˚ 
List
˚˚ 
<
˚˚ 
ParLevel3DTO
˚˚  
>
˚˚  !*
GetListLevel3VinculadoLevel2
˚˚" >
(
˚˚> ?
int
˚˚? B
level2Id
˚˚C K
)
˚˚K L
{
¸¸ 	
var
˝˝ 
list
˝˝ 
=
˝˝ 
new
˝˝ 
List
˝˝ 
<
˝˝  
ParLevel3DTO
˝˝  ,
>
˝˝, -
(
˝˝- .
)
˝˝. /
;
˝˝/ 0
using
ˇˇ 
(
ˇˇ 
var
ˇˇ 
db
ˇˇ 
=
ˇˇ 
new
ˇˇ 
SgqDbDevEntities
ˇˇ  0
(
ˇˇ0 1
)
ˇˇ1 2
)
ˇˇ2 3
{
ÄÄ 
db
ÅÅ 
.
ÅÅ 
Configuration
ÅÅ  
.
ÅÅ  ! 
LazyLoadingEnabled
ÅÅ! 3
=
ÅÅ4 5
false
ÅÅ6 ;
;
ÅÅ; <
var
ÇÇ 
result
ÇÇ 
=
ÇÇ 
db
ÇÇ 
.
ÇÇ  
ParLevel3Level2
ÇÇ  /
.
ÇÇ/ 0
Where
ÇÇ0 5
(
ÇÇ5 6
r
ÇÇ6 7
=>
ÇÇ8 :
r
ÇÇ; <
.
ÇÇ< =
ParLevel2_Id
ÇÇ= I
==
ÇÇJ L
level2Id
ÇÇM U
)
ÇÇU V
.
ÇÇV W
Select
ÇÇW ]
(
ÇÇ] ^
r
ÇÇ^ _
=>
ÇÇ` b
r
ÇÇc d
.
ÇÇd e
	ParLevel3
ÇÇe n
)
ÇÇn o
.
ÇÇo p
ToList
ÇÇp v
(
ÇÇv w
)
ÇÇw x
.
ÇÇx y
GroupByÇÇy Ä
(ÇÇÄ Å
rÇÇÅ Ç
=>ÇÇÉ Ö
rÇÇÜ á
.ÇÇá à
IdÇÇà ä
)ÇÇä ã
;ÇÇã å
list
ÉÉ 
=
ÉÉ 
Mapper
ÉÉ 
.
ÉÉ 
Map
ÉÉ !
<
ÉÉ! "
List
ÉÉ" &
<
ÉÉ& '
ParLevel3DTO
ÉÉ' 3
>
ÉÉ3 4
>
ÉÉ4 5
(
ÉÉ5 6
result
ÉÉ6 <
.
ÉÉ< =
Select
ÉÉ= C
(
ÉÉC D
r
ÉÉD E
=>
ÉÉF H
r
ÉÉI J
.
ÉÉJ K
First
ÉÉK P
(
ÉÉP Q
)
ÉÉQ R
)
ÉÉR S
)
ÉÉS T
;
ÉÉT U
}
ÑÑ 
return
ÜÜ 
list
ÜÜ 
;
ÜÜ 
}
áá 	
[
ââ 	
HttpPost
ââ	 
]
ââ 
[
ää 	
Route
ää	 
(
ää 
$str
ää I
)
ääI J
]
ääJ K
public
ãã 
List
ãã 
<
ãã 
ParLevel3DTO
ãã  
>
ãã  !0
"GetListLevel3VinculadoLevel2Level1
ãã" D
(
ããD E
int
ããE H
level1Id
ããI Q
,
ããQ R
int
ããS V
level2Id
ããW _
)
ãã_ `
{
åå 	
var
çç 
list
çç 
=
çç 
new
çç 
List
çç 
<
çç  
ParLevel3DTO
çç  ,
>
çç, -
(
çç- .
)
çç. /
;
çç/ 0
using
èè 
(
èè 
var
èè 
db
èè 
=
èè 
new
èè 
SgqDbDevEntities
èè  0
(
èè0 1
)
èè1 2
)
èè2 3
{
êê 
db
ëë 
.
ëë 
Configuration
ëë  
.
ëë  ! 
LazyLoadingEnabled
ëë! 3
=
ëë4 5
false
ëë6 ;
;
ëë; <
var
íí 
result
íí 
=
íí 
db
íí 
.
íí  #
ParLevel3Level2Level1
íí  5
.
íí5 6
Where
íí6 ;
(
íí; <
r
íí< =
=>
íí> @
r
ííA B
.
ííB C
ParLevel3Level2
ííC R
.
ííR S
ParLevel2_Id
ííS _
==
íí` b
level2Id
ííc k
&&
ííl n
r
íío p
.
ííp q
ParLevel1_Id
ííq }
==íí~ Ä
level1IdííÅ â
)ííâ ä
.ííä ã
Selectííã ë
(ííë í
rííí ì
=>ííî ñ
rííó ò
.ííò ô
ParLevel3Level2ííô ®
.íí® ©
	ParLevel3íí© ≤
)íí≤ ≥
.íí≥ ¥
ToListíí¥ ∫
(íí∫ ª
)ííª º
.ííº Ω
GroupByííΩ ƒ
(ííƒ ≈
ríí≈ ∆
=>íí« …
ríí  À
.ííÀ Ã
IdííÃ Œ
)ííŒ œ
.ííœ –
Selectíí– ÷
(íí÷ ◊
ríí◊ ÿ
=>ííŸ €
ríí‹ ›
.íí› ﬁ
Firstííﬁ „
(íí„ ‰
)íí‰ Â
)ííÂ Ê
;ííÊ Á
list
îî 
=
îî 
Mapper
îî 
.
îî 
Map
îî !
<
îî! "
List
îî" &
<
îî& '
ParLevel3DTO
îî' 3
>
îî3 4
>
îî4 5
(
îî5 6
result
îî6 <
)
îî< =
;
îî= >
}
ïï 
return
óó 
list
óó 
;
óó 
}
òò 	
[
öö 	
HttpPost
öö	 
]
öö 
[
õõ 	
Route
õõ	 
(
õõ 
$str
õõ "
)
õõ" #
]
õõ# $
public
úú 
ParHeaderFieldDTO
úú  
atualizaCabecalho
úú! 2
(
úú2 3
[
úú3 4
FromBody
úú4 <
]
úú< =
ParamsViewModel
úú> M
parr
úúN R
)
úúR S
{
ùù 	
if
ûû 
(
ûû 
parr
ûû 
.
ûû 
	paramsDto
ûû 
.
ûû 
parHeaderFieldDto
ûû 0
.
ûû0 1
ParFieldType_Id
ûû1 @
==
ûûA C
$num
ûûD E
||
ûûF H
parr
ûûI M
.
ûûM N
	paramsDto
ûûN W
.
ûûW X
parHeaderFieldDto
ûûX i
.
ûûi j
ParFieldType_Id
ûûj y
==
ûûz |
$num
ûû} ~
)
ûû~ 
{
üü 
List
†† 
<
†† "
ParMultipleValuesDTO
†† )
>
††) *
lista
††+ 0
=
††1 2
parr
††3 7
.
††7 8
	paramsDto
††8 A
.
††A B
parHeaderFieldDto
††B S
.
††S T
ParMultipleValues
††T e
;
††e f
int
°° 
count
°° 
=
°° 
$num
°° 
;
°° 
while
¢¢ 
(
¢¢ 
count
¢¢ 
<
¢¢ 
lista
¢¢ $
.
¢¢$ %
Count
¢¢% *
(
¢¢* +
)
¢¢+ ,
)
¢¢, -
{
££ "
ParMultipleValuesDTO
§§ (
mv
§§) +
=
§§, -
lista
§§. 3
[
§§3 4
count
§§4 9
]
§§9 :
;
§§: ;$
_baseParMultipleValues
•• *
.
••* +
AddOrUpdate
••+ 6
(
••6 7
mv
••7 9
)
••9 :
;
••: ;
count
¶¶ 
++
¶¶ 
;
¶¶ 
}
ßß 
}
®® 
parr
™™ 
.
™™ 
	paramsDto
™™ 
.
™™ 
parHeaderFieldDto
™™ ,
.
™™, -
IsActive
™™- 5
=
™™6 7
true
™™8 <
;
™™< =
return
´´ !
_baseParHeaderField
´´ &
.
´´& '
AddOrUpdate
´´' 2
(
´´2 3
parr
´´3 7
.
´´7 8
	paramsDto
´´8 A
.
´´A B
parHeaderFieldDto
´´B S
)
´´S T
;
´´T U
}
≠≠ 	
[
ØØ 	
HttpGet
ØØ	 
]
ØØ 
[
∞∞ 	
Route
∞∞	 
(
∞∞ 
$str
∞∞ '
)
∞∞' (
]
∞∞( )
public
±± 
IEnumerable
±± 
<
±± 
DictionaryEntry
±± *
>
±±* +
GetResource
±±, 7
(
±±7 8
string
±±8 >
language
±±? G
)
±±G H
{
≤≤ 	
if
≥≥ 
(
≥≥ 
language
≥≥ 
.
≥≥ 
Equals
≥≥ 
(
≥≥  
$str
≥≥  '
)
≥≥' (
||
≥≥) +
(
≥≥, -
language
≥≥- 5
.
≥≥5 6
Equals
≥≥6 <
(
≥≥< =
$str
≥≥= F
)
≥≥F G
&&
≥≥H J
GlobalConfig
≥≥K W
.
≥≥W X
LanguageBrasil
≥≥X f
)
≥≥f g
)
≥≥g h
{
¥¥ 
Thread
µµ 
.
µµ 
CurrentThread
µµ $
.
µµ$ %
CurrentCulture
µµ% 3
=
µµ4 5
new
µµ6 9
CultureInfo
µµ: E
(
µµE F
$str
µµF M
)
µµM N
;
µµN O
Thread
∂∂ 
.
∂∂ 
CurrentThread
∂∂ $
.
∂∂$ %
CurrentUICulture
∂∂% 5
=
∂∂6 7
new
∂∂8 ;
CultureInfo
∂∂< G
(
∂∂G H
$str
∂∂H O
)
∂∂O P
;
∂∂P Q
}
∑∑ 
else
∏∏ 
if
∏∏ 
(
∏∏ 
language
∏∏ 
.
∏∏ 
Equals
∏∏ $
(
∏∏$ %
$str
∏∏% ,
)
∏∏, -
||
∏∏. 0
(
∏∏1 2
language
∏∏2 :
.
∏∏: ;
Equals
∏∏; A
(
∏∏A B
$str
∏∏B K
)
∏∏K L
&&
∏∏M O
GlobalConfig
∏∏P \
.
∏∏\ ]
LanguageEUA
∏∏] h
)
∏∏h i
)
∏∏i j
{
ππ 
Thread
∫∫ 
.
∫∫ 
CurrentThread
∫∫ $
.
∫∫$ %
CurrentCulture
∫∫% 3
=
∫∫4 5
new
∫∫6 9
CultureInfo
∫∫: E
(
∫∫E F
$str
∫∫F H
)
∫∫H I
;
∫∫I J
Thread
ªª 
.
ªª 
CurrentThread
ªª $
.
ªª$ %
CurrentUICulture
ªª% 5
=
ªª6 7
new
ªª8 ;
CultureInfo
ªª< G
(
ªªG H
$str
ªªH J
)
ªªJ K
;
ªªK L
}
ºº 
System
ææ 
.
ææ 
	Resources
ææ 
.
ææ 
ResourceManager
ææ ,
resourceManager
ææ- <
=
ææ= >
	Resources
ææ? H
.
ææH I
Resource
ææI Q
.
ææQ R
ResourceManager
ææR a
;
ææa b
return
¿¿ 
resourceManager
¿¿ "
.
¿¿" #
GetResourceSet
¿¿# 1
(
¿¿1 2
Thread
¡¡ 
.
¡¡ 
CurrentThread
¡¡ $
.
¡¡$ %
CurrentUICulture
¡¡% 5
,
¡¡5 6
true
¡¡7 ;
,
¡¡; <
false
¡¡= B
)
¡¡B C
.
¡¡C D
Cast
¡¡D H
<
¡¡H I
DictionaryEntry
¡¡I X
>
¡¡X Y
(
¡¡Y Z
)
¡¡Z [
;
¡¡[ \
}
¬¬ 	
[
ƒƒ 	
HttpPost
ƒƒ	 
]
ƒƒ 
[
≈≈ 	
Route
≈≈	 
(
≈≈ 
$str
≈≈ 1
)
≈≈1 2
]
≈≈2 3
public
∆∆ 
List
∆∆ 
<
∆∆ 
ParLevel3Value
∆∆ "
>
∆∆" #.
 GetLevel3PorUnidadeRecravacaoDdl
∆∆$ D
(
∆∆D E
[
∆∆E F
FromBody
∆∆F N
]
∆∆N O
int
∆∆P S
level3Id
∆∆T \
)
∆∆\ ]
{
«« 	!
GlobalConfiguration
»» 
.
»»  
Configuration
»»  -
.
»»- .

Formatters
»». 8
.
»»8 9
JsonFormatter
»»9 F
.
»»F G 
SerializerSettings
»»G Y
.
»»Y Z)
Re‚Äå‚ÄãferenceLoopHandling
»»Z q
=
»»r s$
ReferenceLoopHandling»»t â
.»»â ä
Ignore»»ä ê
;»»ê ë
using
…… 
(
…… 
var
…… 
db
…… 
=
…… 
new
…… 
SgqDbDevEntities
……  0
(
……0 1
)
……1 2
)
……2 3
{
   
db
ÀÀ 
.
ÀÀ 
Configuration
ÀÀ  
.
ÀÀ  ! 
LazyLoadingEnabled
ÀÀ! 3
=
ÀÀ4 5
false
ÀÀ6 ;
;
ÀÀ; <
var
ÃÃ 
level3
ÃÃ 
=
ÃÃ 
db
ÃÃ 
.
ÃÃ  
ParLevel3Value
ÃÃ  .
.
ÃÃ. /
Include
ÃÃ/ 6
(
ÃÃ6 7
$str
ÃÃ7 K
)
ÃÃK L
.
ÃÃL M
Where
ÃÃM R
(
ÃÃR S
r
ÃÃS T
=>
ÃÃU W
r
ÃÃX Y
.
ÃÃY Z
ParLevel3_Id
ÃÃZ f
==
ÃÃg i
level3Id
ÃÃj r
)
ÃÃr s
.
ÃÃs t
ToList
ÃÃt z
(
ÃÃz {
)
ÃÃ{ |
;
ÃÃ| }
return
ÕÕ 
level3
ÕÕ 
;
ÕÕ 
}
ŒŒ 
}
œœ 	
}
–– 
public
““ 

class
““ 
ParLevel3Bool
““ 
{
”” 
public
‘‘ 
string
‘‘ 
nameTrue
‘‘ 
{
‘‘  
get
‘‘! $
;
‘‘$ %
set
‘‘& )
;
‘‘) *
}
‘‘+ ,
public
’’ 
string
’’ 
	nameFalse
’’ 
{
’’  !
get
’’" %
;
’’% &
set
’’' *
;
’’* +
}
’’, -
}
÷÷ 
}◊◊ ÿg
sC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Familia\ParLevel2ControlCompanyController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str .
). /
]/ 0
public 

class -
!ParLevel2ControlCompanyController 2
:3 4
ApiController5 B
{ 
private 
IBaseDomain 
< #
ParLevel2ControlCompany 3
,3 4&
ParLevel2ControlCompanyDTO5 O
>O P(
_baseParLevel2ControlCompanyQ m
;m n
private 
IBaseDomain 
< 
	ParLevel1 %
,% &
ParLevel1DTO' 3
>3 4
_baseParLevel15 C
;C D
private 
IBaseDomain 
< !
ParLevel3Level2Level1 1
,1 2$
ParLevel3Level2Level1DTO3 K
>K L&
_baseParLevel3Level2Level1M g
;g h
private 
IBaseDomain 
< 
ParLevel3Level2 +
,+ ,
ParLevel3Level2DTO- ?
>? @ 
_baseParLevel3Level2A U
;U V
public 
List 
< &
ParLevel2ControlCompanyDTO .
>. /
_list0 5
;5 6
public -
!ParLevel2ControlCompanyController 0
(0 1
IBaseDomain1 <
<< =#
ParLevel2ControlCompany= T
,T U&
ParLevel2ControlCompanyDTOV p
>p q(
baseParLevel2ControlCompany	r ç
,
ç é
IBaseDomain 
< 
	ParLevel1 !
,! "
ParLevel1DTO# /
>/ 0
baseParLevel11 >
,> ?
IBaseDomain 
< !
ParLevel3Level2Level1 -
,- .$
ParLevel3Level2Level1DTO/ G
>G H%
baseParLevel3Level2Level1I b
,b c
IBaseDomain 
< 
ParLevel3Level2 '
,' (
ParLevel3Level2DTO) ;
>; <
baseParLevel3Level2= P
) 
{ 	(
_baseParLevel2ControlCompany (
=) *'
baseParLevel2ControlCompany+ F
;F G
_baseParLevel1 
= 
baseParLevel1 *
;* +&
_baseParLevel3Level2Level1   &
=  ' (%
baseParLevel3Level2Level1  ) B
;  B C 
_baseParLevel3Level2!!  
=!!! "
baseParLevel3Level2!!# 6
;!!6 7
_list"" 
="" 
new"" 
List"" 
<"" &
ParLevel2ControlCompanyDTO"" 7
>""7 8
(""8 9
)""9 :
;"": ;
}## 	
[%% 	
HttpPost%%	 
]%% 
[&& 	
Route&&	 
(&& 
$str&& 
)&& 
]&& 
public'' 
List'' 
<'' &
ParLevel2ControlCompanyDTO'' .
>''. /
Save''0 4
(''4 5
[''5 6
FromBody''6 >
]''> ?
ParLevel1DTO''A M
	parLevel1''N W
)''W X
{(( 	
var)) 
initDate)) 
=)) 
Guard))  
.))  !
ParseDateToSqlV2))! 1
())1 2
	parLevel1))2 ;
.)); <
DataInit))< D
)))D E
;))E F
if++ 
(++ 
	parLevel1++ 
.++ 
CompanyControl_Id++ +
==++, .
null++/ 3
||++4 6
	parLevel1++7 @
.++@ A
CompanyControl_Id++A R
<=++S U
$num++V W
)++W X
{,, 
var.. 
listaCadastrada.. #
=..$ %(
_baseParLevel2ControlCompany..& B
...B C
GetAll..C I
(..I J
)..J K
...K L
Where..L Q
(..Q R
r..R S
=>..T V
r..W X
...X Y
IsActive..Y a
==..b d
true..e i
&&..j l
r..m n
...n o
ParCompany_Id..o |
==..} 
null
..Ä Ñ
&&
..Ö á
r
..à â
.
..â ä
ParLevel1_Id
..ä ñ
==
..ó ô
	parLevel1
..ö £
.
..£ §
Id
..§ ¶
&&
..ß ©
r
..™ ´
.
..´ ¨
InitDate
..¨ ¥
==
..µ ∑
initDate
..∏ ¿
)
..¿ ¡
;
..¡ ¬
if00 
(00 
listaCadastrada00 #
.00# $
Count00$ )
(00) *
)00* +
>00, -
$num00. /
)00/ 0
foreach11 
(11 
var11  
cadastro11! )
in11* ,
listaCadastrada11- <
)11< =
{22 (
_baseParLevel2ControlCompany33 4
.334 5

ExecuteSql335 ?
(33? @
$str	33@ î
+
33ï ñ
cadastro
33ó ü
.
33ü †
Id
33† ¢
+
33£ §
$str
33• ∆
+
33« »
initDate
33… —
.
33— “
ToString
33“ ⁄
(
33⁄ €
$str
33€ Á
)
33Á Ë
+
33È Í
$str
33Î Ó
)
33Ó Ô
;
33Ô 
}44 
if66 
(66 
	parLevel166 
.66 "
listLevel2Corporativos66 4
!=665 7
null668 <
)66< =
foreach77 
(77 
var77  
level2Id77! )
in77* ,
	parLevel177- 6
.776 7"
listLevel2Corporativos777 M
)77M N
_list88 
.88 
Add88 !
(88! "(
_baseParLevel2ControlCompany88" >
.88> ?
AddOrUpdate88? J
(88J K
new88K N&
ParLevel2ControlCompanyDTO88O i
(88i j
level2Id88j r
,88r s
	parLevel188t }
.88} ~
Id	88~ Ä
,
88Ä Å
	parLevel1
88Ç ã
.
88ã å
CompanyControl_Id
88å ù
,
88ù û
initDate
88ü ß
)
88ß ®
)
88® ©
)
88© ™
;
88™ ´
_baseParLevel1:: 
.:: 

ExecuteSql:: )
(::) *
$str::* P
+::Q R
	parLevel1::S \
.::\ ]
level2Number::] i
+::j k
$str::l z
+::{ |
	parLevel1	::} Ü
.
::Ü á
Id
::á â
)
::â ä
;
::ä ã
if<< 
(<< 
	parLevel1<< 
.<< "
listLevel2Corporativos<< 4
==<<5 7
null<<8 <
)<<< =
{== 
var>> $
parLevel3Level2Vinculado>> 0
=>>1 2&
_baseParLevel3Level2Level1>>3 M
.>>M N
GetAll>>N T
(>>T U
)>>U V
.>>V W
FirstOrDefault>>W e
(>>e f
r>>f g
=>>>h j
r>>k l
.>>l m
ParLevel1_Id>>m y
==>>z |
	parLevel1	>>} Ü
.
>>Ü á
Id
>>á â
&&
>>ä å
r
>>ç é
.
>>é è
Active
>>è ï
==
>>ñ ò
true
>>ô ù
)
>>ù û
;
>>û ü
if@@ 
(@@ $
parLevel3Level2Vinculado@@ 0
!=@@1 3
null@@4 8
)@@8 9
{AA 
varBB 

parVinculoBB &
=BB' ( 
_baseParLevel3Level2BB) =
.BB= >
GetAllBB> D
(BBD E
)BBE F
.BBF G
FirstOrDefaultBBG U
(BBU V
rBBV W
=>BBX Z
rBB[ \
.BB\ ]
IdBB] _
==BB` b$
parLevel3Level2VinculadoBBc {
.BB{ |
ParLevel3Level2_Id	BB| é
&&
BBè ë
r
BBí ì
.
BBì î
IsActive
BBî ú
==
BBù ü
true
BB† §
)
BB§ •
;
BB• ¶
_listDD 
.DD 
AddDD !
(DD! "(
_baseParLevel2ControlCompanyDD" >
.DD> ?
AddOrUpdateDD? J
(DDJ K
newDDK N&
ParLevel2ControlCompanyDTODDO i
(DDi j

parVinculoDDj t
.DDt u
ParLevel2_Id	DDu Å
,
DDÅ Ç
	parLevel1
DDÉ å
.
DDå ç
Id
DDç è
,
DDè ê
	parLevel1
DDë ö
.
DDö õ
CompanyControl_Id
DDõ ¨
,
DD¨ ≠
initDate
DDÆ ∂
,
DD∂ ∑
false
DD∏ Ω
)
DDΩ æ
)
DDæ ø
)
DDø ¿
;
DD¿ ¡
}EE 
}GG 
}II 
elseJJ 
{KK 
varMM 
listaCadastradaMM #
=MM$ %(
_baseParLevel2ControlCompanyMM& B
.MMB C
GetAllMMC I
(MMI J
)MMJ K
.MMK L
WhereMML Q
(MMQ R
rMMR S
=>MMT V
rMMW X
.MMX Y
IsActiveMMY a
==MMb d
trueMMe i
&&MMj l
rMMm n
.MMn o
ParCompany_IdMMo |
==MM} 
	parLevel1
MMÄ â
.
MMâ ä
CompanyControl_Id
MMä õ
&&
MMú û
r
MMü †
.
MM† °
ParLevel1_Id
MM° ≠
==
MMÆ ∞
	parLevel1
MM± ∫
.
MM∫ ª
Id
MMª Ω
&&
MMæ ¿
r
MM¡ ¬
.
MM¬ √
InitDate
MM√ À
==
MMÃ Œ
initDate
MMœ ◊
)
MM◊ ÿ
;
MMÿ Ÿ
ifOO 
(OO 
listaCadastradaOO #
.OO# $
CountOO$ )
(OO) *
)OO* +
>OO, -
$numOO. /
)OO/ 0
foreachPP 
(PP 
varPP  
cadastroPP! )
inPP* ,
listaCadastradaPP- <
)PP< =
{QQ (
_baseParLevel2ControlCompanyRR 4
.RR4 5

ExecuteSqlRR5 ?
(RR? @
$str	RR@ î
+
RRï ñ
cadastro
RRó ü
.
RRü †
Id
RR† ¢
+
RR£ §
$str
RR• ∆
+
RR« »
initDate
RR… —
.
RR— “
ToString
RR“ ⁄
(
RR⁄ €
$str
RR€ Á
)
RRÁ Ë
+
RRÈ Í
$str
RRÎ Ó
)
RRÓ Ô
;
RRÔ 
}SS 
ifUU 
(UU 
	parLevel1UU 
.UU 
level2PorCompanyUU .
!=UU/ 1
nullUU2 6
)UU6 7
foreachVV 
(VV 
varVV  
level2IdVV! )
inVV* ,
	parLevel1VV- 6
.VV6 7
level2PorCompanyVV7 G
)VVG H
_listWW 
.WW 
AddWW !
(WW! "(
_baseParLevel2ControlCompanyWW" >
.WW> ?
AddOrUpdateWW? J
(WWJ K
newWWK N&
ParLevel2ControlCompanyDTOWWO i
(WWi j
level2IdWWj r
,WWr s
	parLevel1WWt }
.WW} ~
Id	WW~ Ä
,
WWÄ Å
	parLevel1
WWÇ ã
.
WWã å
CompanyControl_Id
WWå ù
,
WWù û
initDate
WWü ß
)
WWß ®
)
WW® ©
)
WW© ™
;
WW™ ´
ifYY 
(YY 
	parLevel1YY 
.YY "
listLevel2CorporativosYY 4
==YY5 7
nullYY8 <
)YY< =
{ZZ 
var[[ $
parLevel3Level2Vinculado[[ 0
=[[1 2&
_baseParLevel3Level2Level1[[3 M
.[[M N
GetAll[[N T
([[T U
)[[U V
.[[V W
FirstOrDefault[[W e
([[e f
r[[f g
=>[[h j
r[[k l
.[[l m
ParLevel1_Id[[m y
==[[z |
	parLevel1	[[} Ü
.
[[Ü á
Id
[[á â
&&
[[ä å
r
[[ç é
.
[[é è
Active
[[è ï
==
[[ñ ò
true
[[ô ù
)
[[ù û
;
[[û ü
if]] 
(]] $
parLevel3Level2Vinculado]] 0
!=]]1 3
null]]4 8
)]]8 9
{^^ 
var__ 

parVinculo__ &
=__' ( 
_baseParLevel3Level2__) =
.__= >
GetAll__> D
(__D E
)__E F
.__F G
FirstOrDefault__G U
(__U V
r__V W
=>__X Z
r__[ \
.__\ ]
Id__] _
==__` b$
parLevel3Level2Vinculado__c {
.__{ |
ParLevel3Level2_Id	__| é
&&
__è ë
r
__í ì
.
__ì î
IsActive
__î ú
==
__ù ü
true
__† §
)
__§ •
;
__• ¶
_listaa 
.aa 
Addaa !
(aa! "(
_baseParLevel2ControlCompanyaa" >
.aa> ?
AddOrUpdateaa? J
(aaJ K
newaaK N&
ParLevel2ControlCompanyDTOaaO i
(aai j

parVinculoaaj t
.aat u
ParLevel2_Id	aau Å
,
aaÅ Ç
	parLevel1
aaÉ å
.
aaå ç
Id
aaç è
,
aaè ê
	parLevel1
aaë ö
.
aaö õ
CompanyControl_Id
aaõ ¨
,
aa¨ ≠
initDate
aaÆ ∂
,
aa∂ ∑
false
aa∏ Ω
)
aaΩ æ
)
aaæ ø
)
aaø ¿
;
aa¿ ¡
}bb 
}dd 
}ee 
returnff 
_listff 
;ff 
}gg 	
}hh 
}ii ºj
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\PCC1BController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
{ 
public 

partial 
class 
_PCC1B 
{ 
public 
int 

Sequential 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Side 
{ 
get 
; 
set "
;" #
}$ %
public 
string 

serverSide  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
; 
public 

partial 
class 
_Receive !
{ 
public 
int 
sequencialAtual "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
String 
Data 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Unit 
{ 
get 
; 
set "
;" #
}$ %
public 
int 
	ParLevel2 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
HashKey 
{ 
get  
;  !
set" %
;% &
}' (
} 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str 
) 
] 
public 

class 
PCC1BController  
:! "
ApiController# 0
{   
private!! 
_PCC1B!! 
pcc1b!! 
{!! 
get!! "
;!!" #
set!!$ '
;!!' (
}!!) *
[$$ 	
HttpPost$$	 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
bool&& 
testeContext&&  
(&&  !
)&&! "
{'' 	
return(( 
RequestContext(( !
.((! "
IsLocal((" )
;(() *
})) 	
[++ 	
HttpPost++	 
]++ 
[,, 	
Route,,	 
(,, 
$str,, 
),, 
],, 
public-- 
_PCC1B-- 
Next-- 
(-- 
_Receive-- #
receive--$ +
)--+ ,
{.. 	
string00 
connectionString00 #
=00$ %
$str00& 8
;008 9

ParCompany22 
company22 
;22 
var33 
retorno33 
=33 
new33 
_PCC1B33 $
(33$ %
)33% &
;33& '
retorno44 
.44 
Side44 
=44 
$num44 
;44 %
ResultadosSequencialBanda66 %
_result66& -
=66. /
new660 3%
ResultadosSequencialBanda664 M
(66M N
)66N O
;66O P
var88 
userName88 
=88 
$str88 +
;88+ ,
var99 
pass99 
=99 
$str99 $
;99$ %
ifAA 
(AA 
receiveAA 
.AA 
sequencialAtualAA '
==AA( *
$numAA+ ,
)AA, -
{BB 
retornoCC 
.CC 

SequentialCC "
=CC# $
$numCC% &
;CC& '
returnDD 
retornoDD 
;DD 
}EE 
usingGG 
(GG 
varGG 
dbGG 
=GG 
newGG 
SgqDbDevEntitiesGG  0
(GG0 1
)GG1 2
)GG2 3
{HH 
companyII 
=II 
dbII 
.II 

ParCompanyII '
.II' (
FirstOrDefaultII( 6
(II6 7
rII7 8
=>II9 ;
rII< =
.II= >
IdII> @
==IIA C
receiveIID K
.IIK L
UnitIIL P
)IIP Q
;IIQ R
}JJ 
tryLL 
{MM 
ifNN 
(NN 
GlobalConfigNN  
.NN  !
MockOnNN! '
)NN' (
throwOO 
newOO 
	ExceptionOO '
(OO' (
)OO( )
;OO) *
usingQQ 
(QQ 
varQQ 
dbQQ 
=QQ 
newQQ  #
FactoryQQ$ +
(QQ+ ,
companyQQ, 3
.QQ3 4
IPServerQQ4 <
,QQ< =
companyQQ> E
.QQE F
DBServerQQF N
,QQN O
passQQP T
,QQT U
userNameQQV ^
)QQ^ _
)QQ_ `
{RR 
varSS 
querySS 
=SS 
$strSS  <
+SS= >
receiveSS? F
.SSF G
DataSSG K
+SSL M
$strSSN S
+SST U
companySSV ]
.SS] ^
CompanyNumberSS^ k
.SSk l
ToStringSSl t
(SSt u
)SSu v
+SSw x
$strSSy }
+SS~ 
receive
SSÄ á
.
SSá à
sequencialAtual
SSà ó
.
SSó ò
ToString
SSò †
(
SS† °
)
SS° ¢
;
SS¢ £
varTT 
resultQueryTT #
=TT$ %
dbTT& (
.TT( )
SearchQueryTT) 4
<TT4 5%
ResultadosSequencialBandaTT5 N
>TTN O
(TTO P
queryTTP U
)TTU V
.TTV W
ToListTTW ]
(TT] ^
)TT^ _
;TT_ `
ifUU 
(UU 
resultQueryUU #
!=UU$ &
nullUU' +
&&UU, .
resultQueryUU/ :
.UU: ;
CountUU; @
(UU@ A
)UUA B
>UUC D
$numUUE F
)UUF G
{VV 
retornoWW 
.WW  

SequentialWW  *
=WW+ ,
resultQueryWW- 8
.WW8 9
FirstOrDefaultWW9 G
(WWG H
)WWH I
.WWI J
iSequencialWWJ U
;WWU V
}XX 
elseXX 
{YY 
retornoZZ 
.ZZ  

SequentialZZ  *
=ZZ+ ,
receiveZZ- 4
.ZZ4 5
sequencialAtualZZ5 D
+ZZE F
$numZZG H
;ZZH I
}[[ 
retorno]] 
.]] 

serverSide]] &
=]]' (
company]]) 0
.]]0 1
IPServer]]1 9
+]]: ;
company]]< C
.]]C D
DBServer]]D L
+]]M N
pass]]O S
+]]T U
userName]]V ^
;]]^ _
return^^ 
retorno^^ "
;^^" #
}__ 
}aa 
catchbb 
(bb 
	Exceptionbb 
)bb 
{cc 
retornodd 
.dd 

Sequentialdd "
=dd# $
receivedd% ,
.dd, -
sequencialAtualdd- <
+dd= >
$numdd? @
;dd@ A
retornoee 
.ee 

serverSideee "
=ee# $
companyee% ,
.ee, -
IPServeree- 5
+ee6 7
companyee8 ?
.ee? @
DBServeree@ H
+eeI J
passeeK O
+eeP Q
userNameeeR Z
;eeZ [
returnff 
retornoff 
;ff 
}hh 
}jj 	
[ll 	
HttpPostll	 
]ll 
[mm 	
Routemm	 
(mm 
$strmm F
)mmF G
]mmG H
publicnn 
IEnumerablenn 
<nn !
CollectionLevel2PCC1Bnn 0
>nn0 1
TotalNCnn2 9
(nn9 :
_Receivenn: B
receivennC J
,nnJ K
intnnL O 
parLevel2IdDianteironnP d
,nnd e
intnnf i 
parLevel2Id2Traseironnj ~
)nn~ 
{oo 	
	ParLevel1pp 
	parLevel1pp 
=pp  !
newpp" %
	ParLevel1pp& /
(pp/ 0
)pp0 1
;pp1 2
usingqq 
(qq 
varqq 
dbqq 
=qq 
newqq 
SgqDbDevEntitiesqq  0
(qq0 1
)qq1 2
)qq2 3
{rr 
	parLevel1ss 
=ss 
dbss 
.ss 
	ParLevel1ss (
.ss( )
FirstOrDefaultss) 7
(ss7 8
rss8 9
=>ss: <
rss= >
.ss> ?
Idss? A
==ssB D
$numssE F
)ssF G
;ssG H
}tt 
varvv 
queryvv 
=vv 
$strww t
+wwu v
$strxx t
+xxu v
$stryy '
+yy' (
	parLevel1yy) 2
.yy2 3
Idyy3 5
+yy6 7
$stryy8 t
+yyu v
$strzz '
+zz' ( 
parLevel2IdDianteirozz) =
+zz> ?
$strzz@ D
+zzD E 
parLevel2Id2TraseirozzF Z
+zz[ \
$strzz] t
+zzu v
$str{{ 
+{{  
receive{{  '
.{{' (
Unit{{( ,
+{{, -
$str{{- t
+{{u v
$str|| .
+||. /
receive||0 7
.||7 8
Data||8 <
+||< =
$str||> Y
+||Z [
receive||\ c
.||c d
Data||d h
+||i j
$str	||s ã
;
||ã å
using~~ 
(~~ 
var~~ 
db~~ 
=~~ 
new~~ 
SgqDbDevEntities~~  0
(~~0 1
)~~1 2
)~~2 3
{ 
return
ÅÅ 
db
ÅÅ 
.
ÅÅ 
Database
ÅÅ "
.
ÅÅ" #
SqlQuery
ÅÅ# +
<
ÅÅ+ ,#
CollectionLevel2PCC1B
ÅÅ, A
>
ÅÅA B
(
ÅÅB C
query
ÅÅC H
)
ÅÅH I
.
ÅÅI J
ToList
ÅÅJ P
(
ÅÅP Q
)
ÅÅQ R
;
ÅÅR S
}
ÇÇ 
}
ÑÑ 	
}
ÜÜ 
public
áá 

class
áá #
CollectionLevel2PCC1B
áá &
{
àà 
public
ââ 
string
ââ 
CollectionDate
ââ $
{
ââ% &
get
ââ' *
;
ââ* +
set
ââ, /
;
ââ/ 0
}
ââ1 2
public
ää 
int
ää 
ParLevel1_Id
ää 
{
ää  !
get
ää" %
;
ää% &
set
ää' *
;
ää* +
}
ää, -
public
ãã 
int
ãã 
ParLevel2_Id
ãã 
{
ãã  !
get
ãã" %
;
ãã% &
set
ãã' *
;
ãã* +
}
ãã, -
public
åå 
int
åå 
UnitId
åå 
{
åå 
get
åå 
;
åå  
set
åå! $
;
åå$ %
}
åå& '
public
çç 
int
çç 

Sequential
çç 
{
çç 
get
çç  #
;
çç# $
set
çç% (
;
çç( )
}
çç* +
public
éé 
int
éé 
Side
éé 
{
éé 
get
éé 
;
éé 
set
éé "
;
éé" #
}
éé$ %
public
èè 
int
èè 
DefectsResult
èè  
{
èè! "
get
èè# &
;
èè& '
set
èè( +
;
èè+ ,
}
èè- .
public
êê 
string
êê 
Key
êê 
{
êê 
get
êê 
;
êê  
set
êê! $
;
êê$ %
}
êê& '
}
ëë 
public
ìì 

class
ìì '
ResultadosSequencialBanda
ìì *
{
îî 
public
ïï 
int
ïï 
iSequencial
ïï 
{
ïï  
get
ïï! $
;
ïï$ %
set
ïï& )
;
ïï) *
}
ïï+ ,
}
ññ 
public
òò 

class
òò 
ResultTotalNC
òò 
{
ôô 
public
öö 
decimal
öö 
ncDianteiro
öö "
{
öö# $
get
öö% (
;
öö( )
set
öö* -
;
öö- .
}
öö/ 0
public
õõ 
decimal
õõ 

ncTraseiro
õõ !
{
õõ" #
get
õõ$ '
;
õõ' (
set
õõ) ,
;
õõ, -
}
õõ. /
public
ûû 
int
ûû 
_ncDianteiro
ûû 
{
üü 	
get
†† 
{
°° 
return
¢¢ 
Convert
¢¢ 
.
¢¢ 
ToInt32
¢¢ &
(
¢¢& '
ncDianteiro
¢¢' 2
)
¢¢2 3
;
¢¢3 4
}
££ 
}
§§ 	
public
•• 
int
•• 
_ncTraseiro
•• 
{
¶¶ 	
get
ßß 
{
®® 
return
©© 
Convert
©© 
.
©© 
ToInt32
©© &
(
©©& '

ncTraseiro
©©' 1
)
©©1 2
;
©©2 3
}
™™ 
}
´´ 	
public
≠≠ 
decimal
≠≠ 
totalNc
≠≠ 
{
ÆÆ 	
get
ØØ 
{
∞∞ 
return
±± 
ncDianteiro
±± "
+
±±# $

ncTraseiro
±±% /
;
±±/ 0
}
≤≤ 
}
≥≥ 	
public
µµ 
int
µµ 
_totalNc
µµ 
{
∂∂ 	
get
∑∑ 
{
∏∏ 
return
ππ 
_ncDianteiro
ππ #
+
ππ$ %
_ncTraseiro
ππ& 1
;
ππ1 2
}
∫∫ 
}
ªª 	
}
ºº 
}ææ ⁄ß
qC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\CartasCepApiController.cs
	namespace		 	
	SgqSystem		
 
.		 
Controllers		 
.		  
Api		  #
.		# $
RelatoriosBrasil		$ 4
{

 
[ 
RoutePrefix 
( 
$str  
)  !
]! "
public 

class "
CartasCepApiController '
:( )
ApiController* 7
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
CartasCepResultSet !"
GetApontamentosDiarios" 8
(8 9
[9 :
FromBody: B
]B C,
 FormularioParaRelatorioViewModelD d
forme i
)i j
{ 	
	CommonLog 
. 

SaveReport  
(  !
form! %
,% &
$str' :
): ;
;; <
CartasCepResultSet 
_mockcartasCep -
=. /
new0 3
CartasCepResultSet4 F
(F G
)G H
;H I
List 
< 
Cep 
> 
_ceps 
= 
new !
List" &
<& '
Cep' *
>* +
(+ ,
), -
;- .
bool 
x 
= 
false 
; 
var 
query1 
= 
$str 
; 
if** 
(** 
x** 
)** 
{++ 
query1-- 
=-- 
$str--  
+--! "
$str	.. ñ
+
..ó ò
$str	// ñ
+
//ó ò
$str	00 ô
+
00ö õ
$str	11 ñ
+
11ó ò
$str	22 ñ
+
22ó ò
$str	33 ñ
+
33ó ò
$str	44 ñ
+
44ó ò
$str	55 ñ
+
55ó ò
$str	66 ñ
+
66ó ò
$str77 3
+774 5
form776 :
.77: ;
_dataInicioSQL77; I
+77J K
$str	77L ñ
+
77ó ò
$str88 3
+884 5
form886 :
.88: ;
_dataFimSQL88; F
+88G H
$str	88I ñ
+
88ó ò
$str99 0
+991 2
form993 7
.997 8
unitId998 >
+99? @
$str	99A ñ
+
99ó ò
$str:: 2
+::3 4
form::5 9
.::9 :
level1Id::: B
+::C D
$str	::E ñ
+
::ó ò
$str;; 6
+;;7 8
form;;9 =
.;;= >
level2Id;;> F
+;;G H
$str	;;I ñ
+
;;ó ò
$str<< /
+<<0 1
form<<2 6
.<<6 7
level3Id<<7 ?
+<<@ A
$str	<<B ñ
+
<<ó ò
$str	== ñ
+
==ó ò
$str	>> ñ
+
>>ó ò
$str	?? ñ
+
??ó ò
$str	@@ ñ
+
@@ó ò
$strAA |
+AA} ~
$str	BB ñ
+
BBó ò
$str	CC ñ
+
CCó ò
$str	DD ñ
+
DDó ò
$str	EE ñ
+
EEó ò
$str	FF ñ
+
FFó ò
$str	GG ñ
+
GGó ò
$str	HH ñ
+
HHó ò
$str	II ñ
+
IIó ò
$str	JJ ñ
+
JJó ò
$str	KK ñ
+
KKó ò
$str	LL ñ
+
LLó ò
$str	MM ñ
+
MMó ò
$str	NN ñ
+
NNó ò
$str	OO ñ
+
OOó ò
$str	PP ì
+
PPî ï
$str	QQ ì
+
QQî ï
$str	RR ñ
+
RRó ò
$str	SS ì
+
SSî ï
$str	TT ì
+
TTî ï
$str	UU ñ
+
UUó ò
$str	VV ñ
+
VVó ò
$str	WW ñ
+
WWó ò
$str	XX ñ
+
XXó ò
$str	YY õ
+
YYú ù
$str	ZZ ñ
+
ZZó ò
$str	[[ ñ
+
[[ó ò
$str	\\ ñ
+
\\ó ò
$str	]] ñ
+
]]ó ò
$str	^^ ô
+
^^ö õ
$str	__ ñ
+
__ó ò
$str	`` ñ
+
``ó ò
$str	aa ñ
+
aaó ò
$str	bb ñ
+
bbó ò
$str	cc ñ
+
ccó ò
$str	dd ñ
+
ddó ò
$str	ee ñ
+
eeó ò
$str	ff ñ
+
ffó ò
$str	gg ì
+
ggî ï
$str	hh ì
+
hhî ï
$str	ii ñ
+
iió ò
$str	jj ì
+
jjî ï
$str	kk ì
+
kkî ï
$str	ll ñ
+
lló ò
$str	mm ñ
+
mmó ò
$str	nn ñ
+
nnó ò
$str	oo ñ
+
ooó ò
$str	pp ñ
+
ppó ò
$str	qq ñ
+
qqó ò
$str	rr ñ
+
rró ò
$str	ss ñ
+
ssó ò
$str	tt ñ
+
ttó ò
$str	uu ô
+
uuö õ
$str	vv ñ
+
vvó ò
$str	ww ñ
+
wwó ò
$str	xx ñ
+
xxó ò
$str	yy ñ
+
yyó ò
$str	zz ñ
+
zzó ò
$str	{{ ñ
+
{{ó ò
$str	|| ñ
+
||ó ò
$str	}} ñ
+
}}ó ò
$str	~~ ñ
+
~~ó ò
$str	 ñ
+
ó ò
$strÄÄ ñ
+ÄÄó ò
$strÅÅ ñ
+ÅÅó ò
$strÇÇ ñ
+ÇÇó ò
$strÉÉ ö
+ÉÉõ ú
$strÑÑ ñ
+ÑÑó ò
$strÖÖ ñ
+ÖÖó ò
$strÜÜ ñ
+ÜÜó ò
$stráá ñ
+ááó ò
$stràà †
+àà° ¢
$strââ ü
+ââ† °
$strää ñ
+ääó ò
$strãã ñ
+ããó ò
$stråå ñ
+ååó ò
$strçç ñ
+ççó ò
$stréé ñ
+ééó ò
$strèè ñ
+èèó ò
$strêê ñ
+êêó ò
$strëë ñ
+ëëó ò
$stríí ñ
+ííó ò
$strìì ñ
+ììó ò
$strîî ñ
+îîó ò
$strïï ñ
+ïïó ò
$strññ •
+ññ¶ ß
$stróó •
+óó¶ ß
$stròò ñ
+òòó ò
$strôô ì
+ôôî ï
$ströö ì
+ööî ï
$strõõ ñ
+õõó ò
$strúú ñ
+úúó ò
$strùù ñ
+ùùó ò
$strûû ñ
+ûûó ò
$strüü õ
+üüú ù
$str†† ñ
+††ó ò
$str°° ñ
+°°ó ò
$str¢¢ ñ
+¢¢ó ò
$str££ ñ
+££ó ò
$str§§ ô
+§§ö õ
$str•• ñ
+••ó ò
$str¶¶ ñ
+¶¶ó ò
$strßß ñ
+ßßó ò
$str®® ñ
+®®ó ò
$str©© ñ
+©©ó ò
$str™™ ñ
+™™ó ò
$str´´ ñ
+´´ó ò
$str¨¨ •
+¨¨¶ ß
$str≠≠ •
+≠≠¶ ß
$strÆÆ ñ
+ÆÆó ò
$strØØ ì
+ØØî ï
$str∞∞ ì
+∞∞î ï
$str±± ñ
+±±ó ò
$str≤≤ ñ
+≤≤ó ò
$str≥≥ ñ
+≥≥ó ò
$str¥¥ ñ
+¥¥ó ò
$strµµ õ
+µµú ù
$str∂∂ ñ
+∂∂ó ò
$str∑∑ ñ
+∑∑ó ò
$str∏∏ ñ
+∏∏ó ò
$strππ ñ
+ππó ò
$str∫∫ ô
+∫∫ö õ
$strªª ñ
+ªªó ò
$strºº ñ
;ººñ ó
}
¿¿ 
else
¡¡ 
{
¬¬ 
query1
∆∆ 
=
∆∆ 
$str
∆∆ 
+
∆∆ 
$str«« û
+««ü †
$str»» ù
+»»û ü
$str…… õ
+……ú ù
$str   ù
+  û ü
$strÀÀ ù
+ÀÀû ü
$strÃÃ ù
+ÃÃû ü
$strÕÕ ù
+ÕÕû ü
$str
œœ /
+
œœ0 1
form
œœ2 6
.
œœ6 7
_dataInicioSQL
œœ7 E
+
œœF G
$strœœH í
+œœì î
$str
–– /
+
––0 1
form
––2 6
.
––6 7
_dataFimSQL
––7 B
+
––C D
$str––E í
+––ì î
$str
—— ,
+
——- .
form
——/ 3
.
——3 4
unitId
——4 :
+
——; <
$str——= í
+——ì î
$str
““ .
+
““/ 0
form
““1 5
.
““5 6
level1Id
““6 >
+
““? @
$str““A í
+““ì î
$str
”” 2
+
””3 4
form
””5 9
.
””9 :
level2Id
””: B
+
””C D
$str””E í
+””ì î
$str’’ í
+’’ì î
$str÷÷ í
+÷÷ì î
$str◊◊ í
+◊◊ì î
$strÿÿ í
+ÿÿì î
$strŸŸ í
+ŸŸì î
$str⁄⁄ í
+⁄⁄ì î
$str€€ í
+€€ì î
$str‹‹ í
+‹‹ì î
$str›› í
+››ì î
$strﬁﬁ í
+ﬁﬁì î
$strﬂﬂ í
+ﬂﬂì î
$str‡‡ í
+‡‡ì î
$str„„ ù
+„„û ü
$str‰‰ ù
+‰‰û ü
$strÂÂ ¢
+ÂÂ£ §
$strÊÊ ù
+ÊÊû ü
$strÁÁ ù
+ÁÁû ü
$strËË £
+ËË§ •
$strÍÍ ù
+ÍÍû ü
$strÎÎ ù
+ÎÎû ü
$strÏÏ ù
;ÏÏù û
if
ÔÔ 
(
ÔÔ 
form
ÔÔ 
.
ÔÔ 
level2Id
ÔÔ !
!=
ÔÔ" $
$num
ÔÔ% &
)
ÔÔ& '
{
 
query1
ÒÒ 
+=
ÒÒ 
$strÒÒ ù
;ÒÒù û
}
ÚÚ 
query1
ÙÙ 
+=
ÙÙ 
$strÙÙ ß
+ÙÙ® ©
$strˆˆ ù
+ˆˆû ü
$str˜˜ ù
+˜˜û ü
$str¯¯ ù
+¯¯û ü
$str˘˘ ù
+˘˘û ü
$str˙˙ ü
+˙˙† °
$str˚˚ ù
+˚˚û ü
$str¸¸ Ó
+¸¸Ô 
$str˝˝ ù
+˝˝û ü
$str˛˛ ù
+˛˛û ü
$strˇˇ ù
+ˇˇû ü
$strÄÄ ù
+ÄÄû ü
$strÅÅ ù
+ÅÅû ü
$strÇÇ ù
+ÇÇû ü
$strÉÉ ù
+ÉÉû ü
$strÑÑ ù
+ÑÑû ü
$strÖÖ ù
+ÖÖû ü
$strÜÜ ù
+ÜÜû ü
$stráá ù
+ááû ü
$stràà ¶
+ààß ®
$strââ ù
+ââû ü
$strää ù
+ääû ü
$strãã ù
+ããû ü
$stråå ù
;ååù û
if
éé 
(
éé 
form
éé 
.
éé 
level2Id
éé !
!=
éé" $
$num
éé% &
)
éé& '
{
éé( )
query1
èè 
+=
èè 
$strèè ù
;èèù û
}
êê 
query1
íí 
+=
íí 
$stríí ù
+ííû ü
$str
ìì  
;
ìì  !
}
óó 
using
òò 
(
òò 
var
òò 
db
òò 
=
òò 
new
òò 
SgqDbDevEntities
òò  0
(
òò0 1
)
òò1 2
)
òò2 3
{
ôô 
_ceps
öö 
=
öö 
db
öö 
.
öö 
Database
öö #
.
öö# $
SqlQuery
öö$ ,
<
öö, -
Cep
öö- 0
>
öö0 1
(
öö1 2
query1
öö2 8
)
öö8 9
.
öö9 :
ToList
öö: @
(
öö@ A
)
ööA B
;
ööB C
}
õõ 
var
ùù 
dados1
ùù 
=
ùù 
new
ùù 
List
ùù !
<
ùù! "
decimal
ùù" )
>
ùù) *
(
ùù* +
)
ùù+ ,
;
ùù, -
var
ûû 
dataAv1
ûû 
=
ûû 
new
ûû 
List
ûû "
<
ûû" #
DateTime
ûû# +
>
ûû+ ,
(
ûû, -
)
ûû- .
;
ûû. /
var
üü 
lciData1
üü 
=
üü 
new
üü 
List
üü #
<
üü# $
decimal
üü$ +
>
üü+ ,
(
üü, -
)
üü- .
;
üü. /
var
°° 
lcsData1
°° 
=
°° 
new
°° 
List
°° #
<
°°# $
decimal
°°$ +
>
°°+ ,
(
°°, -
)
°°- .
;
°°. /
var
££ 

nivel1Max1
££ 
=
££ 
new
££  
List
££! %
<
££% &
decimal
££& -
>
££- .
(
££. /
)
££/ 0
;
££0 1
var
§§ 

nivel1Min1
§§ 
=
§§ 
new
§§  
List
§§! %
<
§§% &
decimal
§§& -
>
§§- .
(
§§. /
)
§§/ 0
;
§§0 1
var
•• 

nivel2Max1
•• 
=
•• 
new
••  
List
••! %
<
••% &
decimal
••& -
>
••- .
(
••. /
)
••/ 0
;
••0 1
var
¶¶ 

nivel2Min1
¶¶ 
=
¶¶ 
new
¶¶  
List
¶¶! %
<
¶¶% &
decimal
¶¶& -
>
¶¶- .
(
¶¶. /
)
¶¶/ 0
;
¶¶0 1
var
ßß 

nivel3Max1
ßß 
=
ßß 
new
ßß  
List
ßß! %
<
ßß% &
decimal
ßß& -
>
ßß- .
(
ßß. /
)
ßß/ 0
;
ßß0 1
var
®® 

nivel3Min1
®® 
=
®® 
new
®®  
List
®®! %
<
®®% &
decimal
®®& -
>
®®- .
(
®®. /
)
®®/ 0
;
®®0 1
var
©© 
media
©© 
=
©© 
new
©© 
List
©©  
<
©©  !
decimal
©©! (
>
©©( )
(
©©) *
)
©©* +
;
©©+ ,
var
™™ 
lci
™™ 
=
™™ 
new
™™ 
List
™™ 
<
™™ 
decimal
™™ &
>
™™& '
(
™™' (
)
™™( )
;
™™) *
var
´´ 
lcs
´´ 
=
´´ 
new
´´ 
List
´´ 
<
´´ 
decimal
´´ &
>
´´& '
(
´´' (
)
´´( )
;
´´) *
foreach
≠≠ 
(
≠≠ 
var
≠≠ 
cep
≠≠ 
in
≠≠ 
_ceps
≠≠  %
)
≠≠% &
{
ÆÆ 
dados1
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
cep
ØØ 
.
ØØ 
VALOR
ØØ $
)
ØØ$ %
;
ØØ% &
dataAv1
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
cep
∞∞ 
.
∞∞  
Data
∞∞  $
)
∞∞$ %
;
∞∞% &
lciData1
±± 
.
±± 
Add
±± 
(
±± 
cep
±±  
.
±±  !
LCL
±±! $
)
±±$ %
;
±±% &
lcsData1
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
cep
≤≤  
.
≤≤  !
UCL
≤≤! $
)
≤≤$ %
;
≤≤% &
lci
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
cep
≥≥ 
.
≥≥ 
LIE
≥≥ 
)
≥≥  
;
≥≥  !
lcs
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
cep
¥¥ 
.
¥¥ 
LSE
¥¥ 
)
¥¥  
;
¥¥  !
media
ªª 
.
ªª 
Add
ªª 
(
ªª 
cep
ªª 
.
ªª 
pbar
ªª "
)
ªª" #
;
ªª# $
}
ΩΩ 
_mockcartasCep
ÃÃ 
.
ÃÃ 
dados
ÃÃ  
=
ÃÃ! "
dados1
ÃÃ# )
;
ÃÃ) *
_mockcartasCep
ÕÕ 
.
ÕÕ 
dataAv
ÕÕ !
=
ÕÕ" #
dataAv1
ÕÕ$ +
;
ÕÕ+ ,
_mockcartasCep
ŒŒ 
.
ŒŒ 
lci
ŒŒ 
=
ŒŒ  
lci
ŒŒ! $
;
ŒŒ$ %
_mockcartasCep
œœ 
.
œœ 
lciData
œœ "
=
œœ# $
lciData1
œœ% -
;
œœ- .
_mockcartasCep
–– 
.
–– 
lcs
–– 
=
––  
lcs
––! $
;
––$ %
_mockcartasCep
—— 
.
—— 
lcsData
—— "
=
——# $
lcsData1
——% -
;
——- .
if
““ 
(
““ 
media
““ 
.
““ 
Count
““ 
>
““ 
$num
““ 
)
““  
_mockcartasCep
”” 
.
”” 
media
”” $
=
””% &
media
””' ,
[
””, -
$num
””- .
]
””. /
;
””/ 0
_mockcartasCep
‘‘ 
.
‘‘ 
	nivel1Max
‘‘ $
=
‘‘% &

nivel1Max1
‘‘' 1
;
‘‘1 2
_mockcartasCep
’’ 
.
’’ 
	nivel1Min
’’ $
=
’’% &

nivel1Min1
’’' 1
;
’’1 2
_mockcartasCep
÷÷ 
.
÷÷ 
	nivel2Max
÷÷ $
=
÷÷% &

nivel2Max1
÷÷' 1
;
÷÷1 2
_mockcartasCep
◊◊ 
.
◊◊ 
	nivel2Min
◊◊ $
=
◊◊% &

nivel2Min1
◊◊' 1
;
◊◊1 2
_mockcartasCep
ÿÿ 
.
ÿÿ 
	nivel3Max
ÿÿ $
=
ÿÿ% &

nivel3Max1
ÿÿ' 1
;
ÿÿ1 2
_mockcartasCep
ŸŸ 
.
ŸŸ 
	nivel3Min
ŸŸ $
=
ŸŸ% &

nivel3Min1
ŸŸ' 1
;
ŸŸ1 2
_mockcartasCep
⁄⁄ 
.
⁄⁄ 
amostras
⁄⁄ #
=
⁄⁄$ %
null
⁄⁄& *
;
⁄⁄* +
return
‚‚ 
_mockcartasCep
‚‚ !
;
‚‚! "
}
„„ 	
}
ÂÂ 
public
ÁÁ 

class
ÁÁ  
CartasCepResultSet
ÁÁ #
{
ËË 
public
ÍÍ 
List
ÍÍ 
<
ÍÍ 
decimal
ÍÍ 
>
ÍÍ 
amostras
ÍÍ %
;
ÍÍ% &
public
ÎÎ 
List
ÎÎ 
<
ÎÎ 
decimal
ÎÎ 
>
ÎÎ 
dados
ÎÎ "
;
ÎÎ" #
public
ÏÏ 
List
ÏÏ 
<
ÏÏ 
DateTime
ÏÏ 
>
ÏÏ 
dataAv
ÏÏ $
;
ÏÏ$ %
public
ÌÌ 
List
ÌÌ 
<
ÌÌ 
decimal
ÌÌ 
>
ÌÌ 
lci
ÌÌ  
;
ÌÌ  !
public
ÓÓ 
List
ÓÓ 
<
ÓÓ 
decimal
ÓÓ 
>
ÓÓ 
lciData
ÓÓ $
;
ÓÓ$ %
public
ÔÔ 
List
ÔÔ 
<
ÔÔ 
decimal
ÔÔ 
>
ÔÔ 
lcs
ÔÔ  
;
ÔÔ  !
public
 
List
 
<
 
decimal
 
>
 
lcsData
 $
;
$ %
public
ÒÒ 
decimal
ÒÒ 
media
ÒÒ 
;
ÒÒ 
public
ÚÚ 
List
ÚÚ 
<
ÚÚ 
decimal
ÚÚ 
>
ÚÚ 
	nivel1Max
ÚÚ &
;
ÚÚ& '
public
ÛÛ 
List
ÛÛ 
<
ÛÛ 
decimal
ÛÛ 
>
ÛÛ 
	nivel1Min
ÛÛ &
;
ÛÛ& '
public
ÙÙ 
List
ÙÙ 
<
ÙÙ 
decimal
ÙÙ 
>
ÙÙ 
	nivel2Max
ÙÙ &
;
ÙÙ& '
public
ıı 
List
ıı 
<
ıı 
decimal
ıı 
>
ıı 
	nivel2Min
ıı &
;
ıı& '
public
ˆˆ 
List
ˆˆ 
<
ˆˆ 
decimal
ˆˆ 
>
ˆˆ 
	nivel3Max
ˆˆ &
;
ˆˆ& '
public
˜˜ 
List
˜˜ 
<
˜˜ 
decimal
˜˜ 
>
˜˜ 
	nivel3Min
˜˜ &
;
˜˜& '
}
¯¯ 
public
˙˙ 

class
˙˙ 
Cep
˙˙ 
{
˚˚ 
public
¸¸ 
decimal
¸¸ 
pbar
¸¸ 
{
¸¸ 
get
¸¸ !
;
¸¸! "
set
¸¸# &
;
¸¸& '
}
¸¸( )
public
˝˝ 
decimal
˝˝ 
UCL
˝˝ 
{
˝˝ 
get
˝˝  
;
˝˝  !
set
˝˝" %
;
˝˝% &
}
˝˝' (
public
˛˛ 
decimal
˛˛ 
LCL
˛˛ 
{
˛˛ 
get
˛˛  
;
˛˛  !
set
˛˛" %
;
˛˛% &
}
˛˛' (
public
ˇˇ 
decimal
ˇˇ 
LSE
ˇˇ 
{
ˇˇ 
get
ˇˇ  
;
ˇˇ  !
set
ˇˇ" %
;
ˇˇ% &
}
ˇˇ' (
public
ÄÄ 
decimal
ÄÄ 
LIE
ÄÄ 
{
ÄÄ 
get
ÄÄ  
;
ÄÄ  !
set
ÄÄ" %
;
ÄÄ% &
}
ÄÄ' (
public
ÅÅ 
decimal
ÅÅ 
VALOR
ÅÅ 
{
ÅÅ 
get
ÅÅ "
;
ÅÅ" #
set
ÅÅ$ '
;
ÅÅ' (
}
ÅÅ) *
public
ÇÇ 
DateTime
ÇÇ 
Data
ÇÇ 
{
ÇÇ 
get
ÇÇ "
;
ÇÇ" #
set
ÇÇ$ '
;
ÇÇ' (
}
ÇÇ) *
}
ÉÉ 
}ëë Ä¶
wC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\NaoConformidadeApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
RelatoriosBrasil$ 4
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str &
)& '
]' (
public 

class (
NaoConformidadeApiController -
:. /
ApiController0 =
{ 
private 
List 
< %
NaoConformidadeResultsSet .
>. /
_mock0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
private 
List 
< %
NaoConformidadeResultsSet .
>. /
_list0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str  
)  !
]! "
public 
List 
< %
NaoConformidadeResultsSet -
>- .
GraficoUnidades/ >
(> ?
[? @
FromBody@ H
]H I,
 FormularioParaRelatorioViewModelJ j
formk o
)o p
{ 	
	CommonLog 
. 

SaveReport  
(  !
form! %
,% &
$str' C
)C D
;D E
var 
query 
= 
$str 
+ 
$str 6
+7 8
form9 =
.= >
_dataInicioSQL> L
+M N
$str	O ¶
+
ß ®
$str 6
+7 8
form9 =
.= >
_dataFimSQL> I
+J K
$str	L £
+
§ •
$str   2
+  3 4
$str"" '
+""( )
$str## )
+##* +
$str$$ "
+$$# $
$str%% %
+%%& '
$str&& 
+&& 
$str(( /
+((0 1
$str** 
+** 
$str++ *
++++ ,
$str,, !
+,," #
$str-- )
+--* +
$str.. 
+.. 
$str// 
+// 
$str00  
+00! "
$str11 A
+11B C
$str22 +
+22, -
$str33 8
+339 :
$str44 5
+446 7
$str55 +
+55, -
$str66 U
+66V W
$str77 ;
+77< =
$str88 :
+88; <
$str99 4
+995 6
$str;; :
+;;; <
$str<< -
+<<. /
$str== c
+==d e
$str>> 3
+>>4 5
$str?? /
+??0 1
$str@@ <
+@@= >
$strAA m
+AAn o
$strBB 
+BB 
$strCC 1
+CC2 3
$strFF 
+FF 
$strHH +
+HH, -
$strII E
+IIF G
$strJJ .
+JJ/ 0
$strLL 
+LL 
$strMM 
+MM 
$strNN 
+NN 
$strOO 
+OO 
$strPP  
+PP! "
$strQQ $
+QQ% &
$strRR &
+RR' (
$strSS 0
+SS1 2
$strTT 0
+TT1 2
$strUU }
+UU~ 
$strWW 
+WW  
$strXX 
+XX 
$strYY $
+YY% &
$strZZ :
+ZZ; <
$str[[ <
+[[= >
$str\\ <
+\\= >
$str]] 9
+]]: ;
$str^^ $
+^^% &
$str	__ Æ
+
__Ø ∞
$str`` U
+``V W
$straa U
+aaV W
$strbb W
+bbX Y
$strcc L
+ccM N
$strdd U
+ddV W
$stree U
+eeV W
$strgg $
+gg% &
$strhh &
+hh' (
$strjj "
+jj# $
$str	kk Æ
+
kkØ ∞
$strll U
+llV W
$strmm U
+mmV W
$strnn W
+nnX Y
$stroo L
+ooM N
$strpp U
+ppV W
$strqq U
+qqV W
$strtt $
+tt% &
$struu -
+uu. /
$strww $
+ww% &
$strxx R
+xxS T
$stryy R
+yyS T
$strzz U
+zzV W
$str{{ P
+{{Q R
$str|| R
+||S T
$str}} ^
+}}_ `
$str $
+% &
$str
ÅÅ '
+
ÅÅ( )
$str
ÉÉ $
+
ÉÉ% &
$str
ÑÑ T
+
ÑÑU V
$str
ÖÖ T
+
ÖÖU V
$str
ÜÜ U
+
ÜÜV W
$str
áá P
+
ááQ R
$str
àà T
+
ààU V
$str
ââ ^
+
ââ_ `
$str
ãã $
+
ãã% &
$str
çç .
+
çç/ 0
$strêê ®
+êê© ™
$strëë ò
+ëëô ö
$stríí ò
+ííô ö
$strìì ©
+ìì™ ´
$strîî ©
+îî™ ´
$strïï ò
+ïïô ö
$strññ ò
+ññô ö
$stróó ©
+óó™ ´
$stròò ò
+òòô ö
$strôô ò
+ôôô ö
$str
ùù C
+
ùùD E
$str
ûû ?
+
ûû@ A
$str
üü :
+
üü; <
$str
†† @
+
††A B
$str
°° 4
+
°°5 6
$str
¢¢ F
+
¢¢F G
$str
££ 0
+
££1 2
form
££3 7
.
££7 8
	auditorId
££8 A
+
££B C
$str
££D e
+
££f g
$str
§§ A
+
§§B C
$str
•• 4
+
••5 6
$str
¶¶ 7
+
¶¶8 9
$str
ßß ]
+
ßß^ _
$str
®® h
+
®®i j
$str
™™ 
+
™™  
$str
¨¨ 6
+
¨¨7 8
$str
ÆÆ 
+
ÆÆ 
$str
ØØ "
+
ØØ# $
$str
∞∞ $
+
∞∞% &
$str
±± /
;
±±0 1
using
≥≥ 
(
≥≥ 
var
≥≥ 
db
≥≥ 
=
≥≥ 
new
≥≥ 
SgqDbDevEntities
≥≥  0
(
≥≥0 1
)
≥≥1 2
)
≥≥2 3
{
¥¥ 
_list
µµ 
=
µµ 
db
µµ 
.
µµ 
Database
µµ #
.
µµ# $
SqlQuery
µµ$ ,
<
µµ, -'
NaoConformidadeResultsSet
µµ- F
>
µµF G
(
µµG H
query
µµH M
)
µµM N
.
µµN O
ToList
µµO U
(
µµU V
)
µµV W
;
µµW X
}
∂∂ 
return
∏∏ 
_list
∏∏ 
;
∏∏ 
}
ππ 	
[
ºº 	
HttpPost
ºº	 
]
ºº 
[
ΩΩ 	
Route
ΩΩ	 
(
ΩΩ 
$str
ΩΩ !
)
ΩΩ! "
]
ΩΩ" #
public
ææ 
List
ææ 
<
ææ '
NaoConformidadeResultsSet
ææ -
>
ææ- .
GraficoIndicador
ææ/ ?
(
ææ? @
[
ææ@ A
FromBody
ææA I
]
ææI J.
 FormularioParaRelatorioViewModel
ææK k
form
ææl p
)
ææp q
{
øø 	
var
œœ 
query
œœ 
=
œœ 
$str
œœ 
+
œœ 
$str
—— 6
+
——7 8
form
——9 =
.
——= >
_dataInicioSQL
——> L
+
——M N
$str——O ¶
+——ß ®
$str
““ 6
+
““7 8
form
““9 =
.
““= >
_dataFimSQL
““> I
+
““J K
$str““L £
+““§ •
$str
‘‘ 2
+
‘‘3 4
$str
÷÷ '
+
÷÷( )
$str
◊◊ )
+
◊◊* +
$str
ÿÿ "
+
ÿÿ# $
$str
ŸŸ %
+
ŸŸ& '
$str
⁄⁄ 
+
⁄⁄ 
$str
‹‹ /
+
‹‹0 1
$str
ﬁﬁ 
+
ﬁﬁ 
$str
ﬂﬂ *
+
ﬂﬂ+ ,
$str
‡‡ !
+
‡‡" #
$str
·· )
+
··* +
$str
‚‚ 
+
‚‚ 
$str
„„ 
+
„„ 
$str
‰‰  
+
‰‰! "
$str
ÂÂ A
+
ÂÂB C
$str
ÊÊ +
+
ÊÊ, -
$str
ÁÁ 8
+
ÁÁ9 :
$str
ËË 5
+
ËË6 7
$str
ÈÈ +
+
ÈÈ, -
$str
ÍÍ U
+
ÍÍV W
$str
ÎÎ ;
+
ÎÎ< =
$str
ÏÏ :
+
ÏÏ; <
$str
ÌÌ 4
+
ÌÌ5 6
$str
ÔÔ :
+
ÔÔ; <
$str
 -
+
. /
$str
ÒÒ c
+
ÒÒd e
$str
ÚÚ 3
+
ÚÚ4 5
$str
ÛÛ /
+
ÛÛ0 1
$str
ÙÙ <
+
ÙÙ= >
$str
ıı m
+
ıın o
$str
ˆˆ 
+
ˆˆ 
$str
˜˜ 1
+
˜˜2 3
$str
˘˘ 
+
˘˘ 
$str
˚˚ C
+
˚˚D E
$str
¸¸ E
+
¸¸F G
$str
˝˝ F
+
˝˝G H
$str
˛˛ H
+
˛˛I J
$str
ÅÅ .
+
ÅÅ/ 0
$str
ÉÉ _
+
ÉÉ` a
$str
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
+
ÖÖ 
$str
ÜÜ 
+
ÜÜ 
$str
áá 
+
áá 
$str
àà  
+
àà! "
$str
ââ $
+
ââ% &
$str
ää ,
+
ää- .
$str
ãã &
+
ãã' (
$str
åå &
+
åå' (
$str
çç %
+
çç& '
$str
èè 0
+
èè1 2
$str
êê 0
+
êê1 2
$str
ëë }
+
ëë~ 
$str
íí ,
+
íí- .
$str
îî 
+
îî  
$str
ïï 
+
ïï 
$str
ññ $
+
ññ% &
$str
óó :
+
óó; <
$str
òò 4
+
òò5 6
$str
ôô <
+
ôô= >
$str
öö <
+
öö= >
$str
õõ 9
+
õõ: ;
$str
úú $
+
úú% &
$strùù Æ
+ùùØ ∞
$str
ûû U
+
ûûV W
$str
üü U
+
üüV W
$str
†† W
+
††X Y
$str
°° L
+
°°M N
$str
¢¢ U
+
¢¢V W
$str
££ U
+
££U V
$str
¶¶ $
+
¶¶% &
$str
ßß &
+
ßß' (
$str
©© "
+
©©# $
$str™™ Æ
+™™Ø ∞
$str
´´ U
+
´´V W
$str
¨¨ U
+
¨¨V W
$str
≠≠ W
+
≠≠X Y
$str
ÆÆ L
+
ÆÆM N
$str
ØØ U
+
ØØV W
$str
∞∞ U
+
∞∞V W
$str
±± $
+
±±% &
$str
≤≤ -
+
≤≤. /
$str
¥¥ $
+
¥¥% &
$str
µµ R
+
µµS T
$str
∂∂ R
+
∂∂S T
$str
∑∑ U
+
∑∑V W
$str
∏∏ P
+
∏∏Q R
$str
ππ R
+
ππR S
$str
∫∫ ^
+
∫∫^ _
$str
ªª $
+
ªª% &
$str
ΩΩ '
+
ΩΩ( )
$str
øø $
+
øø% &
$str
¿¿ T
+
¿¿U V
$str
¡¡ T
+
¡¡U V
$str
¬¬ U
+
¬¬V W
$str
√√ P
+
√√Q R
$str
ƒƒ T
+
ƒƒU V
$str
≈≈ ^
+
≈≈_ `
$str
∆∆ $
+
∆∆% &
$str
»» .
+
»»/ 0
$str…… ò
+……ô ö
$str   ò
+  ô ö
$strÀÀ ò
+ÀÀô ö
$strÃÃ ©
+ÃÃ™ ´
$strÕÕ ©
+ÕÕ™ ´
$strŒŒ ò
+ŒŒô ö
$strœœ ò
+œœô ö
$str–– ©
+––™ ´
$str—— ò
+——ô ö
$str““ ò
+““ô ö
$str
”” C
+
””D E
$str
‘‘ ?
+
‘‘@ A
$str
’’ :
+
’’; <
$str
÷÷ @
+
÷÷A B
$str
◊◊ 4
+
◊◊5 6
$str
ÿÿ A
+
ÿÿB C
$str
ŸŸ 4
+
ŸŸ5 6
$str
⁄⁄ 7
+
⁄⁄8 9
$str
€€ ]
+
€€^ _
$str
‹‹ -
+
‹‹. /
form
‹‹0 4
.
‹‹4 5
unitName
‹‹5 =
+
‹‹> ?
$str
‹‹@ C
+
‹‹D E
$str
›› h
+
››i j
$str
ﬂﬂ 
+
ﬂﬂ  
$str
·· `
+
··a b
$str
„„ 
+
„„ 
$str
‰‰ "
+
‰‰# $
$str
ÂÂ $
+
ÂÂ% &
$str
ÁÁ /
;
ÁÁ/ 0
using
ÈÈ 
(
ÈÈ 
var
ÈÈ 
db
ÈÈ 
=
ÈÈ 
new
ÈÈ 
SgqDbDevEntities
ÈÈ  0
(
ÈÈ0 1
)
ÈÈ1 2
)
ÈÈ2 3
{
ÍÍ 
_list
ÎÎ 
=
ÎÎ 
db
ÎÎ 
.
ÎÎ 
Database
ÎÎ #
.
ÎÎ# $
SqlQuery
ÎÎ$ ,
<
ÎÎ, -'
NaoConformidadeResultsSet
ÎÎ- F
>
ÎÎF G
(
ÎÎG H
query
ÎÎH M
)
ÎÎM N
.
ÎÎN O
ToList
ÎÎO U
(
ÎÎU V
)
ÎÎV W
;
ÎÎW X
}
ÏÏ 
return
ÓÓ 
_list
ÓÓ 
;
ÓÓ 
}
 	
[
ÚÚ 	
HttpPost
ÚÚ	 
]
ÚÚ 
[
ÛÛ 	
Route
ÛÛ	 
(
ÛÛ 
$str
ÛÛ %
)
ÛÛ% &
]
ÛÛ& '
public
ÙÙ 
List
ÙÙ 
<
ÙÙ '
NaoConformidadeResultsSet
ÙÙ -
>
ÙÙ- ."
GraficoMonitoramento
ÙÙ/ C
(
ÙÙC D
[
ÙÙD E
FromBody
ÙÙE M
]
ÙÙM N.
 FormularioParaRelatorioViewModel
ÙÙO o
form
ÙÙp t
)
ÙÙt u
{
ıı 	
var
¸¸ 
query
¸¸ 
=
¸¸ 
$str
¸¸ 
+
¸¸ 
$str
˛˛ 6
+
˛˛7 8
form
˛˛9 =
.
˛˛= >
_dataInicioSQL
˛˛> L
+
˛˛M N
$str˛˛O ¶
+˛˛ß ®
$str
ˇˇ 6
+
ˇˇ7 8
form
ˇˇ9 =
.
ˇˇ= >
_dataFimSQL
ˇˇ> I
+
ˇˇJ K
$str
ˇˇL V
+
ˇˇW X
$str
ÅÅ 
+
ÅÅ 
$str
ÇÇ 
+
ÇÇ 
$str
ÉÉ !
+
ÉÉ" #
$str
ÑÑ #
+
ÑÑ$ %
$str
ÖÖ "
+
ÖÖ# $
$str
ÜÜ 4
+
ÜÜ5 6
$str
áá "
+
áá# $
$str
àà 
+
àà  !
$str
ää /
+
ää0 1
$str
ãã 0
+
ãã1 2
$str
åå v
+
ååw x
$str
éé 
+
éé 
$str
èè 
+
èè 
$str
êê 
+
êê 
$str
ëë ,
+
ëë- .
$str
íí .
+
íí/ 0
$str
ìì *
+
ìì+ ,
$str
îî -
+
îî. /
$str
ïï -
+
ïï. /
$str
ññ +
+
ññ, -
$str
ôô 3
+
ôô4 5
$ströö ∞
+öö± ≤
$str
õõ Y
+
õõZ [
$str
úú Y
+
úúZ [
$str
ùù `
+
ùùa b
$str
ûû Y
+
ûûZ [
$str
üü Y
+
üüZ [
$str
†† $
+
††% &
$str
°° &
+
°°' (
$str
££ "
+
££# $
$str§§ Æ
+§§Ø ∞
$str
•• Y
+
••Z [
$str
¶¶ Y
+
¶¶Z [
$str
ßß `
+
ßßa b
$str
®® Y
+
®®Z [
$str
©© Y
+
©©Z [
$str
™™ $
+
™™% &
$str
´´ -
+
´´. /
$str
≠≠ $
+
≠≠% &
$str
ÆÆ V
+
ÆÆW X
$str
ØØ V
+
ØØW X
$str
∞∞ ^
+
∞∞_ `
$str
±± V
+
±±W X
$str
≤≤ b
+
≤≤c d
$str
≥≥ $
+
≥≥% &
$str
µµ '
+
µµ( )
$str
∑∑ $
+
∑∑% &
$str
∏∏ X
+
∏∏Y Z
$str
ππ X
+
ππY Z
$str
∫∫ ^
+
∫∫_ `
$str
ªª X
+
ªªY Z
$str
ºº b
+
ººc d
$str
ΩΩ $
+
ΩΩ% &
$str
øø .
+
øø/ 0
$str
ƒƒ ;
+
ƒƒ< =
$str
≈≈ A
+
≈≈B C
$str
∆∆ <
+
∆∆= >
$str
«« 7
+
««8 9
$str
»» 2
+
»»3 4
$str
…… 7
+
……8 9
$str
   2
+
  3 4
$str
ÀÀ 8
+
ÀÀ9 :
$str
ÃÃ ,
+
ÃÃ- .
$str
ÕÕ T
+
ÕÕU V
$str
ŒŒ &
+
ŒŒ' (
form
ŒŒ) -
.
ŒŒ- .
unitName
ŒŒ. 6
+
ŒŒ7 8
$str
ŒŒ9 P
+
ŒŒQ R
form
ŒŒS W
.
ŒŒW X
unitName
ŒŒX `
+
ŒŒa b
$str
ŒŒc g
+
ŒŒh i
$str
œœ %
+
œœ& '
form
œœ( ,
.
œœ, -

level1Name
œœ- 7
+
œœ8 9
$str
œœ: >
+
œœ? @
$str
—— 
+
—— 
$str
‘‘ &
+
‘‘' (
$str
’’ %
+
’’& '
$str
÷÷ "
;
÷÷" #
using
ÿÿ 
(
ÿÿ 
var
ÿÿ 
db
ÿÿ 
=
ÿÿ 
new
ÿÿ 
SgqDbDevEntities
ÿÿ  0
(
ÿÿ0 1
)
ÿÿ1 2
)
ÿÿ2 3
{
ŸŸ 
_list
⁄⁄ 
=
⁄⁄ 
db
⁄⁄ 
.
⁄⁄ 
Database
⁄⁄ #
.
⁄⁄# $
SqlQuery
⁄⁄$ ,
<
⁄⁄, -'
NaoConformidadeResultsSet
⁄⁄- F
>
⁄⁄F G
(
⁄⁄G H
query
⁄⁄H M
)
⁄⁄M N
.
⁄⁄N O
ToList
⁄⁄O U
(
⁄⁄U V
)
⁄⁄V W
;
⁄⁄W X
}
€€ 
return
›› 
_list
›› 
;
›› 
}
ﬁﬁ 	
[
‡‡ 	
HttpPost
‡‡	 
]
‡‡ 
[
·· 	
Route
··	 
(
·· 
$str
·· 
)
·· 
]
··  
public
‚‚ 
List
‚‚ 
<
‚‚ '
NaoConformidadeResultsSet
‚‚ -
>
‚‚- .
GraficoTarefa
‚‚/ <
(
‚‚< =
[
‚‚= >
FromBody
‚‚> F
]
‚‚F G.
 FormularioParaRelatorioViewModel
‚‚H h
form
‚‚i m
)
‚‚m n
{
„„ 	
var
ÌÌ 
query
ÌÌ 
=
ÌÌ 
$str
ÌÌ 
+
ÌÌ 
$str
ÔÔ 6
+
ÔÔ7 8
form
ÔÔ9 =
.
ÔÔ= >
_dataInicioSQL
ÔÔ> L
+
ÔÔM N
$strÔÔO ¶
+ÔÔß ®
$str
 6
+
7 8
form
9 =
.
= >
_dataFimSQL
> I
+
J K
$str
L V
+
W X
$str
ÚÚ 
+
ÚÚ 
$str
ÛÛ P
+
ÛÛQ R
$str
ÙÙ 
+
ÙÙ 
$str
ıı 
+
ıı  !
$str
˚˚ >
+
˚˚? @
$str
˛˛ 8
+
˛˛9 :
$strˇˇ à
+ˇˇâ ä
$str
ÄÄ $
+
ÄÄ% &
$strÅÅ ª
+ÅÅº Ω
$str
ÇÇ C
+
ÇÇD E
$str
ÉÉ $
+
ÉÉ% &
$strÑÑ ª
+ÑÑº Ω
$str
ÖÖ ^
+
ÖÖ_ `
$str
ÜÜ G
+
ÜÜH I
$str
áá 4
+
áá5 6
$str
àà #
+
àà$ %
$strââ ª
+ââº Ω
$str
ää M
+
ääN O
$str
ãã =
+
ãã> ?
$str
åå F
+
ååG H
$str
çç @
+
ççA B
$str
éé J
+
ééK L
$str
èè D
+
èèE F
$str
êê J
+
êêK L
$str
ëë E
+
ëëF G
$str
íí A
+
ííB C
$str
ìì 4
+
ìì5 6
$str
îî A
+
îîB C
$str
ïï :
+
ïï; <
$str
ññ @
+
ññA B
$str
óó :
+
óó; <
$str
òò 0
+
òò1 2
form
òò3 7
.
òò7 8

level1Name
òò8 B
+
òòC D
$str
òòE I
+
òòJ K
$str
ôô 1
+
ôô2 3
form
ôô4 8
.
ôô8 9

level2Name
ôô9 C
+
ôôD E
$str
ôôF J
+
ôôK L
$str
öö 0
+
öö1 2
form
öö3 7
.
öö7 8
unitName
öö8 @
+
ööA B
$str
ööC Z
+
öö[ \
form
öö] a
.
ööa b
unitName
ööb j
+
öök l
$str
ööm q
+
öör s
$str
õõ B
+
õõC D
form
õõE I
.
õõI J
_dataInicioSQL
õõJ X
+
õõY Z
$str
õõ[ d
+
õõe f
form
õõg k
.
õõk l
_dataFimSQL
õõl w
+
õõx y
$str
õõz }
+
õõ~ 
$str
úú '
+
úú( )
$str
ùù &
+
ùù' (
$str
ûû (
+
ûû) *
$str
üü /
+
üü0 1
$str
†† 1
+
††2 3
$str
°° (
+
°°) *
$str
¢¢ &
+
¢¢' (
$str
££ ,
+
££- .
$str
§§ <
+
§§= >
$str
¶¶ ;
+
¶¶< =
$str
ßß 3
;
ßß3 4
using
©© 
(
©© 
var
©© 
db
©© 
=
©© 
new
©© 
SgqDbDevEntities
©©  0
(
©©0 1
)
©©1 2
)
©©2 3
{
™™ 
_list
´´ 
=
´´ 
db
´´ 
.
´´ 
Database
´´ #
.
´´# $
SqlQuery
´´$ ,
<
´´, -'
NaoConformidadeResultsSet
´´- F
>
´´F G
(
´´G H
query
´´H M
)
´´M N
.
´´N O
ToList
´´O U
(
´´U V
)
´´V W
;
´´W X
}
¨¨ 
return
ÆÆ 
_list
ÆÆ 
;
ÆÆ 
}
ØØ 	
[
±± 	
HttpPost
±±	 
]
±± 
[
≤≤ 	
Route
≤≤	 
(
≤≤ 
$str
≤≤ (
)
≤≤( )
]
≤≤) *
public
≥≥ 
List
≥≥ 
<
≥≥ '
NaoConformidadeResultsSet
≥≥ -
>
≥≥- .%
GraficoTarefasAcumulada
≥≥/ F
(
≥≥F G
[
≥≥G H
FromBody
≥≥H P
]
≥≥P Q.
 FormularioParaRelatorioViewModel
≥≥R r
form
≥≥s w
)
≥≥w x
{
¥¥ 	
var
ππ 
query
ππ 
=
ππ 
$str
ππ !
+
ππ" #
$str
∫∫ 
+
∫∫  
$str
¿¿ =
+
¿¿> ?
$str
√√ 7
+
√√8 9
$str
ƒƒ :
+
ƒƒ; <
$str
≈≈ Y
+
≈≈Z [
$str
∆∆ <
+
∆∆= >
$str
«« E
+
««F G
$str
»» ?
+
»»@ A
$str
…… I
+
……J K
$str
   C
+
  D E
$str
ÀÀ I
+
ÀÀJ K
$str
ÃÃ D
+
ÃÃE F
$str
ÕÕ @
+
ÕÕA B
$str
ŒŒ 4
+
ŒŒ5 6
$str
œœ @
+
œœA B
$str
–– :
+
––; <
$str
—— ?
+
——@ A
$str
““ :
+
““; <
$str
”” .
+
””/ 0
form
””1 5
.
””5 6

level1Name
””6 @
+
””A B
$str
””C G
+
””H I
$str
‘‘ 1
+
‘‘2 3
$str
’’ .
+
’’/ 0
form
’’1 5
.
’’5 6
unitName
’’6 >
+
’’? @
$str
’’A D
+
’’E F
$str
÷÷ A
+
÷÷B C
form
÷÷D H
.
÷÷H I
_dataInicioSQL
÷÷I W
+
÷÷X Y
$str
÷÷Z c
+
÷÷d e
form
÷÷f j
.
÷÷j k
_dataFimSQL
÷÷k v
+
÷÷w x
$str
÷÷y |
+
÷÷} ~
$str
◊◊ &
+
◊◊' (
$str
ÿÿ %
+
ÿÿ& '
$str
ŸŸ '
+
ŸŸ( )
$str
⁄⁄ .
+
⁄⁄/ 0
$str
€€ 0
+
€€1 2
$str
‹‹ '
+
‹‹( )
$str
›› %
+
››& '
$str
ﬁﬁ :
+
ﬁﬁ; <
$str
ﬂﬂ ,
;
ﬂﬂ, -
using
·· 
(
·· 
var
·· 
db
·· 
=
·· 
new
·· 
SgqDbDevEntities
··  0
(
··0 1
)
··1 2
)
··2 3
{
‚‚ 
_list
„„ 
=
„„ 
db
„„ 
.
„„ 
Database
„„ #
.
„„# $
SqlQuery
„„$ ,
<
„„, -'
NaoConformidadeResultsSet
„„- F
>
„„F G
(
„„G H
query
„„H M
)
„„M N
.
„„N O
ToList
„„O U
(
„„U V
)
„„V W
;
„„W X
}
‰‰ 
return
ÊÊ 
_list
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
internal
ÈÈ 
List
ÈÈ 
<
ÈÈ '
NaoConformidadeResultsSet
ÈÈ /
>
ÈÈ/ 0%
CriaMockGraficoUnidades
ÈÈ1 H
(
ÈÈH I
)
ÈÈI J
{
ÍÍ 	
var
ÌÌ 
nc
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
var
ÓÓ 
av
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
var
ÔÔ 
proc
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
var
 
unidade
 
=
 
$str
 #
;
# $
var
ÛÛ 
list
ÛÛ 
=
ÛÛ 
new
ÛÛ 
List
ÛÛ 
<
ÛÛ  '
NaoConformidadeResultsSet
ÛÛ  9
>
ÛÛ9 :
(
ÛÛ: ;
)
ÛÛ; <
;
ÛÛ< =
for
ÙÙ 
(
ÙÙ 
int
ÙÙ 
i
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
i
ÙÙ 
<
ÙÙ 
$num
ÙÙ  "
;
ÙÙ" #
i
ÙÙ$ %
++
ÙÙ% '
)
ÙÙ' (
{
ıı 
list
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
new
ˆˆ '
NaoConformidadeResultsSet
ˆˆ 6
(
ˆˆ6 7
)
ˆˆ7 8
{
ˆˆ9 :
Av
ˆˆ; =
=
ˆˆ> ?
av
ˆˆ@ B
+
ˆˆC D
i
ˆˆE F
,
ˆˆG H
Nc
ˆˆI K
=
ˆˆL M
nc
ˆˆN P
+
ˆˆQ R
i
ˆˆS T
,
ˆˆT U
Proc
ˆˆV Z
=
ˆˆ[ \
proc
ˆˆ] a
+
ˆˆb c
i
ˆˆd e
,
ˆˆe f
UnidadeName
ˆˆg r
=
ˆˆs t
unidade
ˆˆu |
+
ˆˆ} ~
iˆˆ Ä
.ˆˆÄ Å
ToStringˆˆÅ â
(ˆˆâ ä
)ˆˆä ã
}ˆˆå ç
)ˆˆç é
;ˆˆé è
i
˜˜ 
+=
˜˜ 
$num
˜˜ 
;
˜˜ 
}
¯¯ 
return
˘˘ 
list
˘˘ 
;
˘˘ 
}
˙˙ 	
internal
¸¸ 
List
¸¸ 
<
¸¸ '
NaoConformidadeResultsSet
¸¸ /
>
¸¸/ 02
$CriaMockGraficoNcPorUnidadeIndicador
¸¸1 U
(
¸¸U V
)
¸¸V W
{
˝˝ 	
var
ˇˇ 
nc
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
var
ÄÄ 
av
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
var
ÅÅ 
proc
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
var
ÇÇ 
Meta
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
var
ÉÉ 
indicadorName
ÉÉ 
=
ÉÉ 
$str
ÉÉ  ,
;
ÉÉ, -
var
ÜÜ 
list
ÜÜ 
=
ÜÜ 
new
ÜÜ 
List
ÜÜ 
<
ÜÜ  '
NaoConformidadeResultsSet
ÜÜ  9
>
ÜÜ9 :
(
ÜÜ: ;
)
ÜÜ; <
;
ÜÜ< =
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
$num
áá  "
;
áá" #
i
áá$ %
++
áá% '
)
áá' (
{
àà 
list
ââ 
.
ââ 
Add
ââ 
(
ââ 
new
ââ '
NaoConformidadeResultsSet
ââ 6
(
ââ6 7
)
ââ7 8
{
ââ9 :
Av
ää 
=
ää 
av
ää 
+
ää 
i
ää 
,
ää  
Nc
ãã 
=
ãã 
nc
ãã 
+
ãã 
i
ãã 
,
ãã  
Proc
åå 
=
åå 
proc
åå 
+
åå  !
i
åå" #
,
åå# $
Meta
çç 
=
çç 
Meta
çç 
+
çç  !
i
çç" #
-
çç$ %
$num
çç% &
,
çç& '
IndicadorName
éé !
=
éé" #
indicadorName
éé$ 1
+
éé2 3
i
éé4 5
.
éé5 6
ToString
éé6 >
(
éé> ?
)
éé? @
}
èè 
)
èè 
;
èè 
i
êê 
+=
êê 
$num
êê 
;
êê 
}
ëë 
return
íí 
list
íí 
;
íí 
}
ìì 	
internal
ïï 
List
ïï 
<
ïï '
NaoConformidadeResultsSet
ïï /
>
ïï/ 0*
CriaMockGraficoMonitoramento
ïï1 M
(
ïïM N
)
ïïN O
{
ññ 	
var
öö 
av
öö 
=
öö 
$num
öö 
;
öö 
var
õõ 
nc
õõ 
=
õõ 
$num
õõ 
;
õõ 
var
úú 
proc
úú 
=
úú 
$num
úú 
;
úú 
var
ùù 
monitoramento
ùù 
=
ùù 
$str
ùù  /
;
ùù/ 0
var
†† 
list
†† 
=
†† 
new
†† 
List
†† 
<
††  '
NaoConformidadeResultsSet
††  9
>
††9 :
(
††: ;
)
††; <
;
††< =
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°° 
<
°° 
$num
°°  "
;
°°" #
i
°°$ %
++
°°% '
)
°°' (
{
¢¢ 
list
££ 
.
££ 
Add
££ 
(
££ 
new
££ '
NaoConformidadeResultsSet
££ 6
(
££6 7
)
££7 8
{
§§ 
Av
•• 
=
•• 
av
•• 
+
•• 
i
•• 
,
••  
Nc
¶¶ 
=
¶¶ 
nc
¶¶ 
+
¶¶ 
i
¶¶ 
,
¶¶  
Proc
ßß 
=
ßß 
proc
ßß 
+
ßß  !
i
ßß" #
,
ßß# $
MonitoramentoName
©© %
=
©©& '
monitoramento
©©( 5
+
©©6 7
i
©©8 9
.
©©9 :
ToString
©©: B
(
©©B C
)
©©C D
}
™™ 
)
™™ 
;
™™ 
i
´´ 
+=
´´ 
$num
´´ 
;
´´ 
}
¨¨ 
return
≠≠ 
list
≠≠ 
;
≠≠ 
}
ÆÆ 	
internal
∞∞ 
List
∞∞ 
<
∞∞ '
NaoConformidadeResultsSet
∞∞ /
>
∞∞/ 0$
CriaMockGraficoTarefas
∞∞1 G
(
∞∞G H
)
∞∞H I
{
±± 	
var
µµ 
av
µµ 
=
µµ 
$num
µµ 
;
µµ 
var
∂∂ 
nc
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
var
∑∑ 
proc
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
var
∏∏ 

tarefaName
∏∏ 
=
∏∏ 
$str
∏∏ %
;
∏∏% &
var
ªª 
list
ªª 
=
ªª 
new
ªª 
List
ªª 
<
ªª  '
NaoConformidadeResultsSet
ªª  9
>
ªª9 :
(
ªª: ;
)
ªª; <
;
ªª< =
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº 
<
ºº 
$num
ºº  "
;
ºº" #
i
ºº$ %
++
ºº% '
)
ºº' (
{
ΩΩ 
list
ææ 
.
ææ 
Add
ææ 
(
ææ 
new
ææ '
NaoConformidadeResultsSet
ææ 6
(
ææ6 7
)
ææ7 8
{
øø 
Av
¿¿ 
=
¿¿ 
av
¿¿ 
+
¿¿ 
i
¿¿ 
,
¿¿  
Nc
¡¡ 
=
¡¡ 
nc
¡¡ 
+
¡¡ 
i
¡¡ 
,
¡¡  
Proc
¬¬ 
=
¬¬ 
proc
¬¬ 
+
¬¬  !
i
¬¬" #
,
¬¬# $

TarefaName
ƒƒ 
=
ƒƒ  

tarefaName
ƒƒ! +
+
ƒƒ, -
i
ƒƒ. /
.
ƒƒ/ 0
ToString
ƒƒ0 8
(
ƒƒ8 9
)
ƒƒ9 :
}
≈≈ 
)
≈≈ 
;
≈≈ 
i
∆∆ 
+=
∆∆ 
$num
∆∆ 
;
∆∆ 
}
«« 
return
»» 
list
»» 
;
»» 
}
…… 	
internal
ÀÀ 
List
ÀÀ 
<
ÀÀ '
NaoConformidadeResultsSet
ÀÀ /
>
ÀÀ/ 0.
 CriaMockGraficoTarefasAcumuladas
ÀÀ1 Q
(
ÀÀQ R
)
ÀÀR S
{
ÃÃ 	
var
–– 
av
–– 
=
–– 
$num
–– 
;
–– 
var
—— 
nc
—— 
=
—— 
$num
—— 
;
—— 
var
““ 
proc
““ 
=
““ 
$num
““ 
;
““ 
var
”” 

tarefaName
”” 
=
”” 
$str
”” .
;
””. /
var
÷÷ 
list
÷÷ 
=
÷÷ 
new
÷÷ 
List
÷÷ 
<
÷÷  '
NaoConformidadeResultsSet
÷÷  9
>
÷÷9 :
(
÷÷: ;
)
÷÷; <
;
÷÷< =
for
◊◊ 
(
◊◊ 
int
◊◊ 
i
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
i
◊◊ 
<
◊◊ 
$num
◊◊  "
;
◊◊" #
i
◊◊$ %
++
◊◊% '
)
◊◊' (
{
ÿÿ 
list
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ 
new
ŸŸ '
NaoConformidadeResultsSet
ŸŸ 6
(
ŸŸ6 7
)
ŸŸ7 8
{
⁄⁄ 
Av
€€ 
=
€€ 
av
€€ 
+
€€ 
i
€€ 
,
€€  
Nc
‹‹ 
=
‹‹ 
nc
‹‹ 
+
‹‹ 
i
‹‹ 
,
‹‹  
Proc
›› 
=
›› 
proc
›› 
+
››  !
i
››" #
,
››# $

TarefaName
ﬂﬂ 
=
ﬂﬂ  

tarefaName
ﬂﬂ! +
+
ﬂﬂ, -
i
ﬂﬂ. /
.
ﬂﬂ/ 0
ToString
ﬂﬂ0 8
(
ﬂﬂ8 9
)
ﬂﬂ9 :
}
‡‡ 
)
‡‡ 
;
‡‡ 
i
·· 
+=
·· 
$num
·· 
;
·· 
}
‚‚ 
return
„„ 
list
„„ 
;
„„ 
}
‰‰ 	
}
ÊÊ 
}ÁÁ 
publicÈÈ 
class
ÈÈ '
NaoConformidadeResultsSet
ÈÈ &
{ÍÍ 
internal
ÏÏ 
string
ÏÏ 
Select
ÏÏ 
(
ÏÏ 
DateTime
ÏÏ #
_dataInicio
ÏÏ$ /
,
ÏÏ/ 0
DateTime
ÏÏ1 9
_dataFim
ÏÏ: B
,
ÏÏB C
int
ÏÏD G
unitId
ÏÏH N
)
ÏÏN O
{
ÌÌ 
return
ÓÓ 
$str
ÓÓ 
;
ÓÓ 
}
ÔÔ 
public
ÒÒ 

string
ÒÒ 
Indicador_Id
ÒÒ 
{
ÒÒ  
get
ÒÒ! $
;
ÒÒ$ %
set
ÒÒ& )
;
ÒÒ) *
}
ÒÒ+ ,
public
ÚÚ 

string
ÚÚ 
IndicadorName
ÚÚ 
{
ÚÚ  !
get
ÚÚ" %
;
ÚÚ% &
set
ÚÚ' *
;
ÚÚ* +
}
ÚÚ, -
public
ÛÛ 

string
ÛÛ 

Unidade_Id
ÛÛ 
{
ÛÛ 
get
ÛÛ "
;
ÛÛ" #
set
ÛÛ$ '
;
ÛÛ' (
}
ÛÛ) *
public
ÙÙ 

string
ÙÙ 
UnidadeName
ÙÙ 
{
ÙÙ 
get
ÙÙ  #
;
ÙÙ# $
set
ÙÙ% (
;
ÙÙ( )
}
ÙÙ* +
public
ıı 

string
ıı 
Monitoramento_Id
ıı "
{
ıı# $
get
ıı% (
;
ıı( )
set
ıı* -
;
ıı- .
}
ıı/ 0
public
ˆˆ 

string
ˆˆ 
MonitoramentoName
ˆˆ #
{
ˆˆ$ %
get
ˆˆ& )
;
ˆˆ) *
set
ˆˆ+ .
;
ˆˆ. /
}
ˆˆ0 1
public
˜˜ 

string
˜˜ 
	Tarefa_Id
˜˜ 
{
˜˜ 
get
˜˜ !
;
˜˜! "
set
˜˜# &
;
˜˜& '
}
˜˜( )
public
¯¯ 

string
¯¯ 

TarefaName
¯¯ 
{
¯¯ 
get
¯¯ "
;
¯¯" #
set
¯¯$ '
;
¯¯' (
}
¯¯) *
public
˘˘ 

decimal
˘˘ 
Nc
˘˘ 
{
˘˘ 
get
˘˘ 
;
˘˘ 
set
˘˘  
;
˘˘  !
}
˘˘" #
public
˙˙ 

decimal
˙˙ 
Av
˙˙ 
{
˙˙ 
get
˙˙ 
;
˙˙ 
set
˙˙  
;
˙˙  !
}
˙˙" #
public
˚˚ 

decimal
˚˚ 
Meta
˚˚ 
{
˚˚ 
get
˚˚ 
;
˚˚ 
set
˚˚ "
;
˚˚" #
}
˚˚$ %
public
¸¸ 

decimal
¸¸ 
Proc
¸¸ 
{
¸¸ 
get
¸¸ 
;
¸¸ 
internal
¸¸ '
set
¸¸( +
;
¸¸+ ,
}
¸¸- .
}˝˝ Üé
wC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\RelatorioDiarioApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str  
)  !
]! "
public 

class (
RelatorioDiarioApiController -
:. /
ApiController0 =
{ 
private 
PanelResulPanel 
_mock  %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
private 
void "
CriaMockGrafico1Level1 +
(+ ,
), -
{ 	
var 
firstDayOfLastMonth #
=$ %
new& )
DateTime* 2
(2 3
DateTime3 ;
.; <
Now< ?
.? @
Year@ D
,D E
DateTimeF N
.N O
NowO R
.R S
MonthS X
,X Y
$numZ [
)[ \
.\ ]
	AddMonths] f
(f g
$numg h
)h i
.i j
AddDaysj q
(q r
$numr s
)s t
;t u
_mock 
= 
new 
PanelResulPanel '
(' (
)( )
;) *
_mock 
. 
listResultSetLevel1 %
=& '
new( +
List, 0
<0 1
RelDiarioResultSet1 C
>C D
(D E
)E F
;F G
_mock 
. "
listResultSetTendencia (
=) *
new+ .
List/ 3
<3 4
RelDiarioResultSet4 F
>F G
(G H
)H I
;I J
_mock 
. 
listResultSetLevel2 %
=& '
new( +
List, 0
<0 1
RelDiarioResultSet1 C
>C D
(D E
)E F
;F G
_mock 
. +
listResultSetTarefaPorIndicador 1
=2 3
new4 7
List8 <
<< =
RelDiarioResultSet= O
>O P
(P Q
)Q R
;R S
_mock 
. 
listResultSetLevel3 %
=& '
new( +
List, 0
<0 1
RelDiarioResultSet1 C
>C D
(D E
)E F
;F G
_mock   
.   
listResultSetLevel1   %
.  % &
Add  & )
(  ) *
new  * -
RelDiarioResultSet  . @
(  @ A
)  A B
{!! 
	level1_Id"" 
="" 
$num"" 
,"" 

Level1Name## 
=## 
$str## %
,##% &

Unidade_Id$$ 
=$$ 
$num$$ 
,$$ 
Unidade%% 
=%% 
$str%%  
,%%  !
ProcentagemNc&& 
=&& 
$num&&  #
,&&# $
Meta'' 
='' 
$num'' 
,'' 
NC(( 
=(( 
$num(( 
,(( 
Av)) 
=)) 
$num)) 
}** 
)** 
;** 
_mock++ 
.++ 
listResultSetLevel1++ %
.++% &
Add++& )
(++) *
new++* -
RelDiarioResultSet++. @
(++@ A
)++A B
{,, 
	level1_Id-- 
=-- 
$num-- 
,-- 

Level1Name.. 
=.. 
$str.. $
,..$ %

Unidade_Id// 
=// 
$num// 
,// 
Unidade00 
=00 
$str00  
,00  !
ProcentagemNc11 
=11 
$num11  "
,11" #
Meta22 
=22 
$num22 
,22 
NC33 
=33 
$num33 
,33 
Av44 
=44 
$num44 
}55 
)55 
;55 
var77 
counter77 
=77 
$num77 
;77 
foreach88 
(88 
var88 
i88 
in88 
_mock88 #
.88# $
listResultSetLevel188$ 7
)887 8
{99 
for;; 
(;; 
int;; 
j;; 
=;; 
$num;; 
;;; 
j;;  !
<;;" #
$num;;$ &
;;;& '
j;;( )
++;;) +
);;+ ,
{<< 
if== 
(== 
j== 
==== 
$num== 
)== 
{>> 
}LL 
elseMM 
ifMM 
(MM 
jMM 
==MM !
$numMM" $
)MM$ %
{NN 
_mockOO 
.OO "
listResultSetTendenciaOO 4
.OO4 5
AddOO5 8
(OO8 9
newOO9 <
RelDiarioResultSetOO= O
(OOO P
)OOP Q
{PP 
	level1_IdQQ %
=QQ& '
iQQ( )
.QQ) *
	level1_IdQQ* 3
,QQ3 4

Level1NameRR &
=RR' (
iRR) *
.RR* +

Level1NameRR+ 5
,RR5 6

Level2NameSS &
=SS' (
$strSS) <
+SS= >
counterSS? F
,SSF G
ProcentagemNcTT )
=TT* +
$numTT, /
+TT0 1
counterTT2 9
,TT9 :
NCUU 
=UU  
$numUU! #
+UU$ %
counterUU& -
,UU- .
AvVV 
=VV  
$numVV! $
+VV% &
counterVV' .
,VV. /
MetaWW  
=WW! "
$numWW# %
,WW% &
UnidadeXX #
=XX$ %
iXX& '
.XX' (
UnidadeXX( /
,XX/ 0

Unidade_IdYY &
=YY' (
iYY) *
.YY* +

Unidade_IdYY+ 5
,YY5 6
}\\ 
)\\ 
;\\ 
}]] 
else^^ 
if^^ 
(^^ 
j^^ 
==^^ !
$num^^" $
)^^$ %
{__ 
_mock`` 
.`` "
listResultSetTendencia`` 4
.``4 5
Add``5 8
(``8 9
new``9 <
RelDiarioResultSet``= O
(``O P
)``P Q
{aa 
	level1_Idbb %
=bb& '
ibb( )
.bb) *
	level1_Idbb* 3
,bb3 4

Level1Namecc &
=cc' (
icc) *
.cc* +

Level1Namecc+ 5
,cc5 6

Level2Namedd &
=dd' (
$strdd) <
+dd= >
counterdd? F
,ddF G
ProcentagemNcee )
=ee* +
$numee, /
+ee0 1
counteree2 9
,ee9 :
NCff 
=ff  
$numff! #
+ff$ %
counterff& -
,ff- .
Avgg 
=gg  
$numgg! $
+gg% &
countergg' .
,gg. /
Metahh  
=hh! "
$numhh# %
,hh% &
Unidadeii #
=ii$ %
iii& '
.ii' (
Unidadeii( /
,ii/ 0

Unidade_Idjj &
=jj' (
ijj) *
.jj* +

Unidade_Idjj+ 5
,jj5 6
}ll 
)ll 
;ll 
}mm 
} 
_mock
ÇÇ 
.
ÇÇ !
listResultSetLevel2
ÇÇ )
.
ÇÇ) *
Add
ÇÇ* -
(
ÇÇ- .
new
ÇÇ. 1 
RelDiarioResultSet
ÇÇ2 D
(
ÇÇD E
)
ÇÇE F
{
ÉÉ 
	level1_Id
ÑÑ 
=
ÑÑ 
i
ÑÑ  !
.
ÑÑ! "
	level1_Id
ÑÑ" +
,
ÑÑ+ ,
	level2_Id
ÖÖ 
=
ÖÖ 
counter
ÖÖ  '
,
ÖÖ' (

Level1Name
ÜÜ 
=
ÜÜ  
i
ÜÜ! "
.
ÜÜ" #

Level1Name
ÜÜ# -
,
ÜÜ- .

Level2Name
áá 
=
áá  
$str
áá! -
+
áá. /
counter
áá0 7
,
áá7 8
Unidade
àà 
=
àà 
i
àà 
.
àà  
Unidade
àà  '
,
àà' (

Unidade_Id
ââ 
=
ââ  
i
ââ! "
.
ââ" #

Unidade_Id
ââ# -
,
ââ- .
NC
ãã 
=
ãã 
$num
ãã 
+
ãã 
counter
ãã %
,
ãã% &
Av
åå 
=
åå 
$num
åå 
+
åå 
counter
åå &
,
åå& '
}
çç 
)
çç 
;
çç 
_mock
éé 
.
éé !
listResultSetLevel2
éé )
.
éé) *
Add
éé* -
(
éé- .
new
éé. 1 
RelDiarioResultSet
éé2 D
(
ééD E
)
ééE F
{
èè 
	level1_Id
êê 
=
êê 
i
êê  !
.
êê! "
	level1_Id
êê" +
,
êê+ ,
	level2_Id
ëë 
=
ëë 
counter
ëë  '
+
ëë( )
$num
ëë* +
,
ëë+ ,

Level1Name
íí 
=
íí  
i
íí! "
.
íí" #

Level1Name
íí# -
,
íí- .

Level2Name
ìì 
=
ìì  
$str
ìì! -
+
ìì. /
counter
ìì0 7
,
ìì7 8
Unidade
îî 
=
îî 
i
îî 
.
îî  
Unidade
îî  '
,
îî' (

Unidade_Id
ïï 
=
ïï  
i
ïï! "
.
ïï" #

Unidade_Id
ïï# -
,
ïï- .
NC
óó 
=
óó 
$num
óó 
+
óó 
counter
óó %
,
óó% &
Av
òò 
=
òò 
$num
òò 
+
òò 
counter
òò &
,
òò& '
}
ôô 
)
ôô 
;
ôô 
_mock
ùù 
.
ùù -
listResultSetTarefaPorIndicador
ùù 5
.
ùù5 6
Add
ùù6 9
(
ùù9 :
new
ùù: = 
RelDiarioResultSet
ùù> P
(
ùùP Q
)
ùùQ R
{
ûû 
	level1_Id
üü 
=
üü 
i
üü  !
.
üü! "
	level1_Id
üü" +
,
üü+ ,
	level2_Id
†† 
=
†† 
counter
††  '
,
††' (
	level3_Id
°° 
=
°° 
counter
°°  '
+
°°( )
$num
°°* ,
,
°°, -

Level1Name
¢¢ 
=
¢¢  
i
¢¢! "
.
¢¢" #

Level1Name
¢¢# -
,
¢¢- .

Level2Name
££ 
=
££  
$str
££! 6
+
££7 8
counter
££9 @
,
££@ A

Level3Name
§§ 
=
§§  
$str
§§! I
+
§§J K
counter
§§L S
,
§§S T
Unidade
•• 
=
•• 
i
•• 
.
••  
Unidade
••  '
,
••' (

Unidade_Id
¶¶ 
=
¶¶  
i
¶¶! "
.
¶¶" #

Unidade_Id
¶¶# -
,
¶¶- .
NC
®® 
=
®® 
$num
®® 
+
®® 
counter
®® %
,
®®% &
Av
©© 
=
©© 
$num
©© 
+
©© 
counter
©© &
,
©©& '
}
™™ 
)
™™ 
;
™™ 
counter
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨ 
}
≠≠ 
counter
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
foreach
∞∞ 
(
∞∞ 
var
∞∞ 
i
∞∞ 
in
∞∞ 
_mock
∞∞ #
.
∞∞# $!
listResultSetLevel1
∞∞$ 7
)
∞∞7 8
{
±± 
var
≤≤ 
counter2
≤≤ 
=
≤≤ 
$num
≤≤ !
;
≤≤! "
foreach
≥≥ 
(
≥≥ 
var
≥≥ 
ii
≥≥ 
in
≥≥  "
_mock
≥≥# (
.
≥≥( )!
listResultSetLevel2
≥≥) <
.
≥≥< =
Where
≥≥= B
(
≥≥B C
r
≥≥C D
=>
≥≥E G
r
≥≥H I
.
≥≥I J
	level1_Id
≥≥J S
==
≥≥T V
i
≥≥W X
.
≥≥X Y
	level1_Id
≥≥Y b
)
≥≥b c
)
≥≥c d
{
¥¥ 
_mock
∂∂ 
.
∂∂ !
listResultSetLevel3
∂∂ -
.
∂∂- .
Add
∂∂. 1
(
∂∂1 2
new
∂∂2 5 
RelDiarioResultSet
∂∂6 H
(
∂∂H I
)
∂∂I J
{
∑∑ 
	level1_Id
∏∏ !
=
∏∏" #
ii
∏∏$ &
.
∏∏& '
	level1_Id
∏∏' 0
,
∏∏0 1

Level1Name
ππ "
=
ππ# $
ii
ππ% '
.
ππ' (

Level1Name
ππ( 2
,
ππ2 3
	level2_Id
∫∫ !
=
∫∫" #
ii
∫∫$ &
.
∫∫& '
	level2_Id
∫∫' 0
,
∫∫0 1

Level2Name
ªª "
=
ªª# $
ii
ªª% '
.
ªª' (

Level2Name
ªª( 2
,
ªª2 3
	level3_Id
ºº !
=
ºº" #
counter2
ºº$ ,
,
ºº, -

Level3Name
ΩΩ "
=
ΩΩ# $
$str
ΩΩ% 1
+
ΩΩ2 3
counter2
ΩΩ4 <
,
ΩΩ< =
Unidade
ææ 
=
ææ  !
i
ææ" #
.
ææ# $
Unidade
ææ$ +
,
ææ+ ,

Unidade_Id
øø "
=
øø# $
i
øø% &
.
øø& '

Unidade_Id
øø' 1
,
øø1 2
NC
¡¡ 
=
¡¡ 
$num
¡¡ 
+
¡¡  !
counter2
¡¡" *
,
¡¡* +
}
√√ 
)
√√ 
;
√√ 
_mock
ƒƒ 
.
ƒƒ !
listResultSetLevel3
ƒƒ -
.
ƒƒ- .
Add
ƒƒ. 1
(
ƒƒ1 2
new
ƒƒ2 5 
RelDiarioResultSet
ƒƒ6 H
(
ƒƒH I
)
ƒƒI J
{
≈≈ 
	level1_Id
∆∆ !
=
∆∆" #
ii
∆∆$ &
.
∆∆& '
	level1_Id
∆∆' 0
,
∆∆0 1

Level1Name
«« "
=
««# $
ii
««% '
.
««' (

Level1Name
««( 2
,
««2 3
	level2_Id
»» !
=
»»" #
ii
»»$ &
.
»»& '
	level2_Id
»»' 0
,
»»0 1

Level2Name
…… "
=
……# $
ii
……% '
.
……' (

Level2Name
……( 2
,
……2 3
	level3_Id
   !
=
  " #
counter2
  $ ,
+
  - .
$num
  / 0
,
  0 1

Level3Name
ÀÀ "
=
ÀÀ# $
$str
ÀÀ% 1
+
ÀÀ2 3
counter2
ÀÀ4 <
,
ÀÀ< =
Unidade
ÃÃ 
=
ÃÃ  !
i
ÃÃ" #
.
ÃÃ# $
Unidade
ÃÃ$ +
,
ÃÃ+ ,

Unidade_Id
ÕÕ "
=
ÕÕ# $
i
ÕÕ% &
.
ÕÕ& '

Unidade_Id
ÕÕ' 1
,
ÕÕ1 2
NC
œœ 
=
œœ 
$num
œœ 
+
œœ  !
counter2
œœ" *
,
œœ* +
}
—— 
)
—— 
;
—— 
_mock
““ 
.
““ !
listResultSetLevel3
““ -
.
““- .
Add
““. 1
(
““1 2
new
““2 5 
RelDiarioResultSet
““6 H
(
““H I
)
““I J
{
”” 
	level1_Id
‘‘ !
=
‘‘" #
ii
‘‘$ &
.
‘‘& '
	level1_Id
‘‘' 0
,
‘‘0 1

Level1Name
’’ "
=
’’# $
ii
’’% '
.
’’' (

Level1Name
’’( 2
,
’’2 3
	level2_Id
÷÷ !
=
÷÷" #
ii
÷÷$ &
.
÷÷& '
	level2_Id
÷÷' 0
,
÷÷0 1

Level2Name
◊◊ "
=
◊◊# $
ii
◊◊% '
.
◊◊' (

Level2Name
◊◊( 2
,
◊◊2 3
	level3_Id
ÿÿ !
=
ÿÿ" #
counter2
ÿÿ$ ,
+
ÿÿ- .
$num
ÿÿ/ 0
,
ÿÿ0 1

Level3Name
ŸŸ "
=
ŸŸ# $
$str
ŸŸ% 1
+
ŸŸ2 3
counter2
ŸŸ4 <
,
ŸŸ< =
Unidade
⁄⁄ 
=
⁄⁄  !
i
⁄⁄" #
.
⁄⁄# $
Unidade
⁄⁄$ +
,
⁄⁄+ ,

Unidade_Id
€€ "
=
€€# $
i
€€% &
.
€€& '

Unidade_Id
€€' 1
,
€€1 2
NC
›› 
=
›› 
$num
›› 
+
››  !
counter2
››" *
,
››* +
}
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
counter2
‡‡ 
+=
‡‡ 
counter
‡‡  '
;
‡‡' (
}
·· 
}
‚‚ 
}
‰‰ 	
private
ÁÁ 
PanelResulPanel
ÁÁ 
_todosOsGraficos
ÁÁ  0
{
ÁÁ1 2
get
ÁÁ3 6
;
ÁÁ6 7
set
ÁÁ8 ;
;
ÁÁ; <
}
ÁÁ= >
public
ÈÈ *
RelatorioDiarioApiController
ÈÈ +
(
ÈÈ+ ,
)
ÈÈ, -
{
ÍÍ 	
_todosOsGraficos
ÎÎ 
=
ÎÎ 
new
ÎÎ "
PanelResulPanel
ÎÎ# 2
(
ÎÎ2 3
)
ÎÎ3 4
;
ÎÎ4 5$
CriaMockGrafico1Level1
ÏÏ "
(
ÏÏ" #
)
ÏÏ# $
;
ÏÏ$ %
}
ÓÓ 	
[
 	
HttpPost
	 
]
 
[
ÒÒ 	
Route
ÒÒ	 
(
ÒÒ 
$str
ÒÒ 
)
ÒÒ 
]
ÒÒ 
public
ÚÚ 
PanelResulPanel
ÚÚ 
GetGrafico1Level1
ÚÚ 0
(
ÚÚ0 1
[
ÚÚ1 2
FromBody
ÚÚ2 :
]
ÚÚ: ;.
 FormularioParaRelatorioViewModel
ÚÚ< \
form
ÚÚ] a
)
ÚÚa b
{
ÛÛ 	
	CommonLog
ıı 
.
ıı 

SaveReport
ıı  
(
ıı  !
form
ıı! %
,
ıı% &
$str
ıı' @
)
ıı@ A
;
ııA B
using
˜˜ 
(
˜˜ 
var
˜˜ 
db
˜˜ 
=
˜˜ 
new
˜˜ 
SgqDbDevEntities
˜˜  0
(
˜˜0 1
)
˜˜1 2
)
˜˜2 3
{
¯¯ 
var
˚˚ 
queryIndicadores
˚˚ $
=
˚˚% &
PanelResulPanel
˚˚' 6
.
˚˚6 7
QueryIndicadores
˚˚7 G
(
˚˚G H
form
˚˚H L
)
˚˚L M
;
˚˚M N
var
¸¸ 
queryTendencia
¸¸ "
=
¸¸# $
PanelResulPanel
¸¸% 4
.
¸¸4 5#
QueryGraficoTendencia
¸¸5 J
(
¸¸J K
form
¸¸K O
)
¸¸O P
;
¸¸P Q
_todosOsGraficos
˛˛  
.
˛˛  !!
listResultSetLevel1
˛˛! 4
=
˛˛5 6
db
˛˛7 9
.
˛˛9 :
Database
˛˛: B
.
˛˛B C
SqlQuery
˛˛C K
<
˛˛K L 
RelDiarioResultSet
˛˛L ^
>
˛˛^ _
(
˛˛_ `
queryIndicadores
˛˛` p
)
˛˛p q
.
˛˛q r
ToList
˛˛r x
(
˛˛x y
)
˛˛y z
;
˛˛z {
_todosOsGraficos
ˇˇ  
.
ˇˇ  !$
listResultSetTendencia
ˇˇ! 7
=
ˇˇ8 9
db
ˇˇ: <
.
ˇˇ< =
Database
ˇˇ= E
.
ˇˇE F
SqlQuery
ˇˇF N
<
ˇˇN O 
RelDiarioResultSet
ˇˇO a
>
ˇˇa b
(
ˇˇb c
queryTendencia
ˇˇc q
)
ˇˇq r
.
ˇˇr s
ToList
ˇˇs y
(
ˇˇy z
)
ˇˇz {
;
ˇˇ{ |
if
ÄÄ 
(
ÄÄ 
_todosOsGraficos
ÄÄ $
.
ÄÄ$ %!
listResultSetLevel1
ÄÄ% 8
.
ÄÄ8 9
Count
ÄÄ9 >
(
ÄÄ> ?
)
ÄÄ? @
==
ÄÄA C
$num
ÄÄD E
)
ÄÄE F
return
ÅÅ 
_todosOsGraficos
ÅÅ +
;
ÅÅ+ ,
var
ÉÉ 
indicadores
ÉÉ 
=
ÉÉ  !
_todosOsGraficos
ÉÉ" 2
.
ÉÉ2 3'
_idLevel1QueryIndicadores
ÉÉ3 L
;
ÉÉL M
var
ÖÖ 
queryGrafico3
ÖÖ !
=
ÖÖ" #
PanelResulPanel
ÖÖ$ 3
.
ÖÖ3 4
QueryGrafico3
ÖÖ4 A
(
ÖÖA B
form
ÖÖB F
,
ÖÖF G
indicadores
ÖÖH S
)
ÖÖS T
;
ÖÖT U
var
ÜÜ +
queryGraficoTarefasAcumuladas
ÜÜ 1
=
ÜÜ2 3
PanelResulPanel
ÜÜ4 C
.
ÜÜC D+
QueryGraficoTarefasAcumuladas
ÜÜD a
(
ÜÜa b
form
ÜÜb f
,
ÜÜf g
indicadores
ÜÜh s
)
ÜÜs t
;
ÜÜt u
var
áá 
queryGrafico4
áá !
=
áá" #
PanelResulPanel
áá$ 3
.
áá3 4
QueryGrafico4
áá4 A
(
ááA B
form
ááB F
,
ááF G
indicadores
ááH S
)
ááS T
;
ááT U
_todosOsGraficos
ââ  
.
ââ  !!
listResultSetLevel2
ââ! 4
=
ââ5 6
db
ââ7 9
.
ââ9 :
Database
ââ: B
.
ââB C
SqlQuery
ââC K
<
ââK L 
RelDiarioResultSet
ââL ^
>
ââ^ _
(
ââ_ `
queryGrafico3
ââ` m
)
ââm n
.
âân o
ToList
ââo u
(
ââu v
)
ââv w
;
ââw x
_todosOsGraficos
ää  
.
ää  !-
listResultSetTarefaPorIndicador
ää! @
=
ääA B
db
ääC E
.
ääE F
Database
ääF N
.
ääN O
SqlQuery
ääO W
<
ääW X 
RelDiarioResultSet
ääX j
>
ääj k
(
ääk l,
queryGraficoTarefasAcumuladasääl â
)ääâ ä
.äää ã
ToListääã ë
(ääë í
)ääí ì
;ääì î
_todosOsGraficos
ãã  
.
ãã  !!
listResultSetLevel3
ãã! 4
=
ãã5 6
db
ãã7 9
.
ãã9 :
Database
ãã: B
.
ããB C
SqlQuery
ããC K
<
ããK L 
RelDiarioResultSet
ããL ^
>
ãã^ _
(
ãã_ `
queryGrafico4
ãã` m
)
ããm n
.
ããn o
ToList
ãão u
(
ããu v
)
ããv w
;
ããw x
}
åå 
return
éé 
_todosOsGraficos
éé #
;
éé# $
}
êê 	
}
íí 
public
îî 

class
îî 
PanelResulPanel
îî  
{
ïï 
public
ññ 
List
ññ 
<
ññ  
RelDiarioResultSet
ññ &
>
ññ& '!
listResultSetLevel1
ññ( ;
{
ññ< =
get
ññ> A
;
ññA B
set
ññC F
;
ññF G
}
ññH I
public
óó 
List
óó 
<
óó  
RelDiarioResultSet
óó &
>
óó& '$
listResultSetTendencia
óó( >
{
óó? @
get
óóA D
;
óóD E
set
óóF I
;
óóI J
}
óóK L
public
òò 
List
òò 
<
òò  
RelDiarioResultSet
òò &
>
òò& '!
listResultSetLevel2
òò( ;
{
òò< =
get
òò> A
;
òòA B
set
òòC F
;
òòF G
}
òòH I
public
ôô 
List
ôô 
<
ôô  
RelDiarioResultSet
ôô &
>
ôô& '-
listResultSetTarefaPorIndicador
ôô( G
{
ôôH I
get
ôôJ M
;
ôôM N
set
ôôO R
;
ôôR S
}
ôôT U
public
öö 
List
öö 
<
öö  
RelDiarioResultSet
öö &
>
öö& '!
listResultSetLevel3
öö( ;
{
öö< =
get
öö> A
;
ööA B
set
ööC F
;
ööF G
}
ööH I
public
úú 
string
úú '
_idLevel1QueryIndicadores
úú /
{
ùù 	
get
ûû 
{
üü 
var
†† 
filtro
†† 
=
†† 
string
†† #
.
††# $
Empty
††$ )
;
††) *
if
¢¢ 
(
¢¢ !
listResultSetLevel1
¢¢ '
.
¢¢' (
	IsNotNull
¢¢( 1
(
¢¢1 2
)
¢¢2 3
)
¢¢3 4
if
££ 
(
££ !
listResultSetLevel1
££ +
.
££+ ,
Count
££, 1
(
££1 2
)
££2 3
>
££4 5
$num
££6 7
)
££7 8
{
§§ !
listResultSetLevel1
•• +
.
••+ ,
ForEach
••, 3
(
••3 4
r
••4 5
=>
••6 8
filtro
••9 ?
+=
••@ B
r
••C D
.
••D E
	level1_Id
••E N
+
••O P
$str
••Q T
)
••T U
;
••U V
filtro
¶¶ 
=
¶¶  
filtro
¶¶! '
.
¶¶' (
Remove
¶¶( .
(
¶¶. /
filtro
¶¶/ 5
.
¶¶5 6
Length
¶¶6 <
-
¶¶= >
$num
¶¶? @
)
¶¶@ A
;
¶¶A B
}
ßß 
return
©© 
filtro
©© 
;
©© 
}
™™ 
}
´´ 	
internal
≠≠ 
static
≠≠ 
string
≠≠ 
QueryIndicadores
≠≠ /
(
≠≠/ 0.
 FormularioParaRelatorioViewModel
≠≠0 P
form
≠≠Q U
)
≠≠U V
{
ÆÆ 	
var
ØØ 
queryGrafico1
ØØ 
=
ØØ 
$str
ØØ  "
+
ØØ# $
$str
±± 2
+
±±3 4
form
±±5 9
.
±±9 :
_dataInicioSQL
±±: H
+
±±I J
$str
±±K O
+
±±P Q
$str
≤≤ 0
+
≤≤1 2
form
≤≤3 7
.
≤≤7 8
_dataFimSQL
≤≤8 C
+
≤≤D E
$str
≤≤F J
+
≤≤K L
$str
≥≥ ,
+
≥≥- .
form
≥≥/ 3
.
≥≥3 4
unitId
≥≥4 :
+
≥≥; <
$str
≥≥= @
+
≥≥A B
$str
¥¥ '
+
¥¥( )
$str
∂∂ 2
+
∂∂3 4
$str
∑∑ '
+
∑∑( )
$str
∏∏ )
+
∏∏* +
$str
ππ "
+
ππ# $
$str
∫∫ %
+
∫∫& '
$str
ªª 
+
ªª 
$str
ΩΩ /
+
ΩΩ0 1
$str
øø 
+
øø 
$str
¿¿ *
+
¿¿+ ,
$str
¡¡ !
+
¡¡" #
$str
¬¬ )
+
¬¬* +
$str
√√ 
+
√√ 
$str
ƒƒ 
+
ƒƒ 
$str
≈≈  
+
≈≈! "
$str
∆∆ A
+
∆∆B C
$str
«« +
+
««, -
$str
»» 8
+
»»9 :
$str
…… 5
+
……6 7
$str
   +
+
  , -
$str
ÀÀ U
+
ÀÀV W
$str
ÃÃ ;
+
ÃÃ< =
$str
ÕÕ :
+
ÕÕ; <
$str
ŒŒ 4
+
ŒŒ5 6
$str
–– :
+
––; <
$str
—— -
+
——. /
$str
““ c
+
““d e
$str
”” 3
+
””4 5
$str
‘‘ /
+
‘‘0 1
$str
’’ <
+
’’= >
$str
÷÷ m
+
÷÷n o
$str
◊◊ 
+
◊◊ 
$str
ÿÿ 1
+
ÿÿ2 3
$str
›› 
+
›› 
$str
ﬁﬁ $
+
ﬁﬁ% &
$str
‡‡ &
+
‡‡' (
$str
·· "
+
··# $
$str
‚‚ 
+
‚‚  !
$str
„„ $
+
„„% &
$str
‰‰ ,
+
‰‰- .
$str
ÂÂ ?
+
ÂÂ@ A
$str
ÊÊ A
+
ÊÊB C
$str
ÁÁ ?
+
ÁÁ@ A
$str
ËË g
+
ËËh i
$str
ÈÈ p
+
ÈÈq r
$str
ÍÍ 6
+
ÍÍ7 8
$str
ÎÎ 3
+
ÎÎ4 5
$str
ÏÏ ,
+
ÏÏ- .
$str
ÌÌ "
+
ÌÌ# $
$str
ÓÓ *
+
ÓÓ+ ,
$str
ÒÒ 
+
ÒÒ 
$str
ÚÚ 
+
ÚÚ  !
$str
ÛÛ  
+
ÛÛ! "
$str
ÙÙ  
+
ÙÙ! "
$str
ıı 
+
ıı 
$str
ˆˆ #
+
ˆˆ$ %
$str
˜˜ _
+
˜˜` a
$str
¯¯ %
+
¯¯& '
$str
˘˘ %
+
˘˘& '
$str
˙˙ 
+
˙˙ 
$str
˚˚ 
+
˚˚ 
$str
¸¸ 
+
¸¸  !
$str
˝˝ 
+
˝˝ 
$str
˛˛ h
+
˛˛i j
$strˇˇ …
+ˇˇ  À
$str
ÄÄ 
+
ÄÄ 
$str
ÅÅ 
+
ÅÅ 
$str
ÇÇ #
+
ÇÇ$ %
$str
ÉÉ 9
+
ÉÉ: ;
$str
ÑÑ 3
+
ÑÑ4 5
$str
ÖÖ ;
+
ÖÖ< =
$str
ÜÜ ;
+
ÜÜ< =
$str
áá 8
+
áá9 :
$str
ââ #
+
ââ$ %
$strää æ
+ääø ¿
$str
ãã T
+
ããU V
$str
åå T
+
ååU V
$str
çç V
+
ççW X
$str
éé K
+
ééL M
$str
èè #
+
èè$ %
$str
êê &
+
êê' (
$str
íí "
+
íí# $
$strìì ø
+ìì¿ ¡
$str
îî U
+
îîV W
$str
ïï U
+
ïïV W
$str
ññ W
+
ññX Y
$str
óó L
+
óóM N
$str
ôô $
+
ôô% &
$str
öö -
+
öö. /
$str
úú #
+
úú$ %
$str
ùù Q
+
ùùR S
$str
ûû Q
+
ûûR S
$str
üü T
+
üüU V
$str
†† O
+
††P Q
$str
°° #
+
°°$ %
$str
¢¢ &
+
¢¢' (
$str
§§ #
+
§§$ %
$str
•• T
+
••U V
$str
¶¶ T
+
¶¶U V
$str
ßß U
+
ßßV W
$str
®® P
+
®®Q R
$str
©© $
+
©©% &
$str
´´ .
+
´´/ 0
$str≠≠ ô
+≠≠ö õ
$strÆÆ ò
+ÆÆô ö
$strØØ ò
+ØØô ö
$str∞∞ ≤
+∞∞≥ ¥
$str±± ≤
+±±≥ ¥
$str≤≤ ò
+≤≤ô ö
$str≥≥ ò
+≥≥ô ö
$str¥¥ ≤
+¥¥≥ ¥
$strµµ ò
+µµô ö
$str∂∂ ò
+∂∂ô ö
$str
∫∫ B
+
∫∫C D
$str
ªª >
+
ªª? @
$str
ºº 9
+
ºº: ;
$str
ΩΩ ?
+
ΩΩ@ A
$str
ææ 3
+
ææ4 5
$str
øø @
+
øøA B
$str
¿¿ 3
+
¿¿4 5
$str
¡¡ 6
+
¡¡7 8
$str
¬¬ [
+
¬¬\ ]
$str
√√ 6
+
√√7 8
$str
ƒƒ 
+
ƒƒ 
$str
≈≈ 
+
≈≈ 
$str
∆∆ /
+
∆∆0 1
$str
«« #
+
««$ %
$str
»» .
;
»». /
return
ÃÃ 
queryGrafico1
ÃÃ  
;
ÃÃ  !
}
ÕÕ 	
internal
œœ 
static
œœ 
string
œœ #
QueryGraficoTendencia
œœ 4
(
œœ4 5.
 FormularioParaRelatorioViewModel
œœ5 U
form
œœV Z
)
œœZ [
{
–– 	
var
—— #
queryGraficoTendencia
—— %
=
——& '
$str
——( *
+
——+ ,
$str
”” 1
+
””2 3
form
””4 8
.
””8 9
_dataFimSQL
””9 D
+
””E F
$str
””G K
+
””L M
$str
‘‘ Q
+
‘‘R S
$str
’’ e
+
’’f g
$str
÷÷ >
+
÷÷? @
$str
◊◊ 7
+
◊◊8 9
$str
ÿÿ 
+
ÿÿ 
$str
ŸŸ 0
+
ŸŸ1 2
$str
⁄⁄ +
+
⁄⁄, -
$str
€€ H
+
€€I J
$str
‹‹ 
+
‹‹ 
$str
ﬂﬂ ;
+
ﬂﬂ< =
$str
‡‡ c
+
‡‡d e
$str
·· .
+
··/ 0
form
··1 5
.
··5 6
unitId
··6 <
+
··= >
$str
··? B
+
··C D
$str
ÂÂ 5
+
ÂÂ6 7
$str
ÊÊ *
+
ÊÊ+ ,
$str
ÁÁ ,
+
ÁÁ- .
$str
ËË %
+
ËË& '
$str
ÈÈ '
+
ÈÈ( )
$str
ÍÍ 
+
ÍÍ 
$str
ÎÎ 2
+
ÎÎ3 4
$str
ÏÏ 
+
ÏÏ  
$str
ÌÌ ,
+
ÌÌ- .
$str
ÓÓ #
+
ÓÓ$ %
$str
ÔÔ +
+
ÔÔ, -
$str
 
+
 
$str
ÒÒ 
+
ÒÒ 
$str
ÚÚ "
+
ÚÚ# $
$str
ÛÛ C
+
ÛÛD E
$str
ÙÙ -
+
ÙÙ. /
$str
ıı :
+
ıı; <
$str
ˆˆ 7
+
ˆˆ8 9
$str
˜˜ -
+
˜˜. /
$str
¯¯ W
+
¯¯X Y
$str
˘˘ =
+
˘˘> ?
$str
˙˙ <
+
˙˙= >
$str
˚˚ 6
+
˚˚7 8
$str
¸¸ <
+
¸¸= >
$str
˝˝ /
+
˝˝0 1
$str
˛˛ e
+
˛˛f g
$str
ˇˇ 5
+
ˇˇ6 7
$str
ÄÄ 1
+
ÄÄ2 3
$str
ÅÅ >
+
ÅÅ? @
$str
ÇÇ o
+
ÇÇp q
$str
ÉÉ 
+
ÉÉ 
$str
ÑÑ 3
+
ÑÑ4 5
$str
ÜÜ )
+
ÜÜ* +
$str
áá 
+
áá  
$str
àà %
+
àà& '
$str
ââ (
+
ââ) *
$str
ää $
+
ää% &
$str
ãã !
+
ãã" #
$str
åå &
+
åå' (
$str
çç .
+
çç/ 0
$str
éé A
+
ééB C
$str
èè C
+
èèD E
$str
êê A
+
êêB C
$str
ëë j
+
ëëk l
$str
íí q
+
íír s
$str
ìì 8
+
ìì9 :
$str
îî 5
+
îî6 7
$str
ïï .
+
ïï/ 0
$str
ññ $
+
ññ% &
$str
óó ,
+
óó- .
$str
ôô 
+
ôô  
$str
öö "
+
öö# $
$str
õõ $
+
õõ% &
$str
úú 2
+
úú3 4
$str
ùù %
+
ùù& '
$str
ûû "
+
ûû# $
$str
üü (
+
üü) *
$str†† Ü
+††á à
$str
°° )
+
°°* +
$str
¢¢ (
+
¢¢) *
$str
££ &
+
££' (
$str
§§ 
+
§§ 
$str
•• 
+
•• 
$str
¶¶ "
+
¶¶# $
$str
ßß 
+
ßß 
$str
©© k
+
©©l m
$str™™  
+™™À Ã
$str
¨¨  
+
¨¨! "
$str
≠≠ 
+
≠≠ 
$str
ÆÆ &
+
ÆÆ' (
$str
∞∞ S
+
∞∞T U
$str
±± T
+
±±U V
$str
≤≤ S
+
≤≤T U
$str
≥≥ 5
+
≥≥6 7
$str
¥¥ Y
+
¥¥Z [
$str
µµ N
+
µµO P
$str
∂∂ &
+
∂∂' (
$str∑∑ ¿
+∑∑¡ ¬
$str
∏∏ W
+
∏∏X Y
$str
ππ W
+
ππX Y
$str
∫∫ Y
+
∫∫Z [
$str
ªª O
+
ªªP Q
$str
ºº &
+
ºº' (
$str
ΩΩ )
+
ΩΩ* +
$str
ææ $
+
ææ% &
$strøø ¿
+øø¡ ¬
$str
¿¿ W
+
¿¿X Y
$str
¡¡ W
+
¡¡X Y
$str
¬¬ Y
+
¬¬Z [
$str
√√ O
+
√√P Q
$str
ƒƒ &
+
ƒƒ' (
$str
≈≈ /
+
≈≈0 1
$str
∆∆ &
+
∆∆' (
$str
«« T
+
««U V
$str
»» T
+
»»U V
$str
…… W
+
……X Y
$str
   S
+
  T U
$str
ÀÀ &
+
ÀÀ' (
$str
ÃÃ )
+
ÃÃ* +
$str
ÕÕ &
+
ÕÕ' (
$str
ŒŒ V
+
ŒŒW X
$str
œœ V
+
œœW X
$str
–– W
+
––X Y
$str
—— S
+
——T U
$str
““ &
+
““' (
$str
”” 0
+
””1 2
$str
‘‘ 
+
‘‘ 
$str
’’ 
+
’’ 
$strÿÿ ”
+ÿÿ‘ ’
$strŸŸ ç
+ŸŸé è
$str
‹‹  
+
‹‹! "
$str›› 
+››Ò Ú
$str
ﬁﬁ 
+
ﬁﬁ 
$str
ﬂﬂ  
+
ﬂﬂ! "
$str
‡‡ A
+
‡‡B C
$str
·· 2
+
··3 4
$str
„„ 3
+
„„4 5
$strÂÂ ¨
+ÂÂ≠ Æ
$str
ÁÁ C
+
ÁÁD E
$str
ÈÈ @
+
ÈÈA B
$str
ÎÎ L
+
ÎÎM N
$str
ÌÌ A
+
ÌÌB C
$str
ÔÔ 6
+
ÔÔ7 8
$str
 D
+
E F
$str
ÒÒ 6
+
ÒÒ7 8
$str
ÚÚ 9
+
ÚÚ: ;
$str
ıı )
+
ıı* +
$str
ˆˆ !
+
ˆˆ" #
$str
˜˜ *
+
˜˜+ ,
$str
˘˘ .
+
˘˘/ 0
$str
˙˙ 0
+
˙˙1 2
$str
˚˚ O
+
˚˚P Q
$str
¸¸ 2
+
¸¸3 4
$str
˝˝ 0
+
˝˝1 2
$str
˛˛ +
+
˛˛, -
$strÅÅ ®
+ÅÅ© ™
$str
ÑÑ E
+
ÑÑF G
$str
ÜÜ Q
+
ÜÜR S
$str
àà E
+
ààF G
$str
ää ;
+
ää< =
$str
åå H
+
ååI J
$str
éé :
+
éé; <
$str
êê =
+
êê> ?
$str
ìì ,
+
ìì- .
$str
ïï +
+
ïï, -
$str
ññ -
+
ññ. /
$str
óó /
+
óó0 1
$str
òò ,
+
òò- .
$str
öö '
+
öö( )
$str
úú r
+
úús t
$str
†† 
+
††  !
$str
°° 
+
°° 
$str
¢¢ X
+
¢¢Y Z
$str
££ 3
+
££4 5
$str
§§ 2
;
§§2 3
return
¶¶ #
queryGraficoTendencia
¶¶ (
;
¶¶( )
}
ßß 	
internal
©© 
static
©© 
string
©© 
QueryGrafico3
©© ,
(
©©, -.
 FormularioParaRelatorioViewModel
©©- M
form
©©N R
,
©©R S
string
©©T Z
indicadores
©©[ f
)
©©f g
{
™™ 	
var
´´ 
queryGrafico3
´´ 
=
´´ 
$str
´´  "
+
´´# $
$str
≠≠ 3
+
≠≠4 5
form
≠≠6 :
.
≠≠: ;
_dataInicioSQL
≠≠; I
+
≠≠J K
$str
≠≠L P
+
≠≠Q R
$str
ÆÆ 0
+
ÆÆ1 2
form
ÆÆ3 7
.
ÆÆ7 8
_dataFimSQL
ÆÆ8 C
+
ÆÆD E
$str
ÆÆF J
+
ÆÆK L
$str
ØØ ,
+
ØØ- .
form
ØØ/ 3
.
ØØ3 4
unitId
ØØ4 :
+
ØØ; <
$str
ØØ= @
+
ØØA B
$str
∞∞ '
+
∞∞( )
$str
≤≤ 2
+
≤≤3 4
$str
¥¥ '
+
¥¥( )
$str
µµ )
+
µµ* +
$str
∂∂ "
+
∂∂# $
$str
∑∑ %
+
∑∑& '
$str
∏∏ 
+
∏∏ 
$str
ªª 0
+
ªª1 2
$str
ΩΩ 
+
ΩΩ 
$str
ææ *
+
ææ+ ,
$str
øø !
+
øø" #
$str
¿¿ )
+
¿¿* +
$str
¡¡ 
+
¡¡ 
$str
¬¬ 
+
¬¬ 
$str
√√  
+
√√! "
$str
ƒƒ A
+
ƒƒB C
$str
≈≈ +
+
≈≈, -
$str
∆∆ 8
+
∆∆9 :
$str
«« 5
+
««6 7
$str
»» +
+
»», -
$str
…… U
+
……V W
$str
   ;
+
  < =
$str
ÀÀ :
+
ÀÀ; <
$str
ÃÃ 4
+
ÃÃ5 6
$str
ŒŒ :
+
ŒŒ; <
$str
œœ -
+
œœ. /
$str
–– c
+
––d e
$str
—— 3
+
——4 5
$str
““ /
+
““0 1
$str
”” <
+
””= >
$str
‘‘ m
+
‘‘n o
$str
’’ 
+
’’ 
$str
÷÷ 1
+
÷÷2 3
$str
⁄⁄ 
+
⁄⁄ 
$str
€€ $
+
€€% &
$str
›› &
+
››' (
$str
ﬁﬁ "
+
ﬁﬁ# $
$str
ﬂﬂ 
+
ﬂﬂ  !
$str
‡‡ $
+
‡‡% &
$str
·· ,
+
··- .
$str
‚‚ ?
+
‚‚@ A
$str
„„ A
+
„„B C
$str
‰‰ ?
+
‰‰@ A
$str
ÂÂ g
+
ÂÂh i
$str
ÊÊ o
+
ÊÊp q
$str
ÁÁ 6
+
ÁÁ7 8
$str
ËË 3
+
ËË4 5
$str
ÈÈ ,
+
ÈÈ- .
$str
ÍÍ "
+
ÍÍ# $
$str
ÎÎ *
+
ÎÎ+ ,
$str
ÓÓ 
+
ÓÓ 
$str
ÔÔ 
+
ÔÔ 
$str
  
+
! "
$str
ÒÒ !
+
ÒÒ" #
$str
ÚÚ  
+
ÚÚ! "
$str
ÛÛ !
+
ÛÛ" #
$str
ÙÙ !
+
ÙÙ" #
$str
ıı 
+
ıı  
$str
ˆˆ &
+
ˆˆ' (
$str
˜˜ &
+
˜˜' (
$str
¯¯ 
+
¯¯ 
$str
˘˘ 
+
˘˘ 
$str
˙˙ 
+
˙˙ 
$str
˚˚ -
+
˚˚. /
$str
¸¸ /
+
¸¸0 1
$str
˝˝ +
+
˝˝, -
$str
˛˛ .
+
˛˛/ 0
$str
ˇˇ .
+
ˇˇ/ 0
$str
ÄÄ ,
+
ÄÄ- .
$str
ÅÅ #
+
ÅÅ$ %
$strÇÇ æ
+ÇÇø ¿
$str
ÉÉ X
+
ÉÉY Z
$str
ÑÑ X
+
ÑÑY Z
$str
ÖÖ Z
+
ÖÖ[ \
$str
ÜÜ L
+
ÜÜM N
$str
áá #
+
áá$ %
$str
àà &
+
àà' (
$str
ää "
+
ää# $
$strãã ø
+ãã¿ ¡
$str
åå Y
+
ååZ [
$str
çç Y
+
ççZ [
$str
éé [
+
éé\ ]
$str
èè M
+
èèN O
$str
êê $
+
êê% &
$str
ëë -
+
ëë. /
$str
ìì #
+
ìì$ %
$str
îî U
+
îîV W
$str
ïï U
+
ïïV W
$str
ññ X
+
ññY Z
$str
óó P
+
óóQ R
$str
òò #
+
òò$ %
$str
öö &
+
öö' (
$str
úú #
+
úú$ %
$str
ùù X
+
ùùY Z
$str
ûû X
+
ûûY Z
$str
üü Y
+
üüZ [
$str
†† Q
+
††R S
$str
°° $
+
°°% &
$str
££ .
+
££/ 0
$str
•• <
+
••= >
$str
¶¶ B
+
¶¶C D
$str
ßß =
+
ßß> ?
$str
®® 8
+
®®9 :
$str
©© 3
+
©©4 5
$str
™™ 8
+
™™9 :
$str
´´ 3
+
´´4 5
$str
¨¨ 9
+
¨¨: ;
$str
≠≠ -
+
≠≠. /
$str
ÆÆ A
+
ÆÆB C
$str
ØØ 4
+
ØØ5 6
$str
∞∞ 7
+
∞∞8 9
$str
±± ;
+
±±< =
form
±±> B
.
±±B C
_dataInicioSQL
±±C Q
+
±±R S
$str
±±T ]
+
±±^ _
form
±±` d
.
±±d e
_dataFimSQL
±±e p
+
±±q r
$str
±±s v
+
±±w x
$str
≤≤ '
+
≤≤( )
form
≤≤* .
.
≤≤. /
unitId
≤≤/ 5
+
≤≤6 7
$str
≥≥ 1
+
≥≥2 3
indicadores
≥≥4 ?
+
≥≥@ A
$str
≥≥B F
+
≥≥G H
$str
¥¥ 
+
¥¥ 
$str
µµ 2
+
µµ3 4
$str
∂∂ /
;
∂∂/ 0
return
∏∏ 
queryGrafico3
∏∏  
;
∏∏  !
}
ππ 	
internal
ªª 
static
ªª 
string
ªª +
QueryGraficoTarefasAcumuladas
ªª <
(
ªª< =.
 FormularioParaRelatorioViewModel
ªª= ]
form
ªª^ b
,
ªªb c
string
ªªd j
indicadores
ªªk v
)
ªªv w
{
ºº 	
var
ΩΩ +
queryGraficoTarefasAcumuladas
ΩΩ -
=
ΩΩ. /
$str
ΩΩ0 2
+
ΩΩ3 4
$str
ææ 
+
ææ 
$str
øø 
+
øø 
$str
¿¿ '
+
¿¿( )
$str
¡¡ *
+
¡¡+ ,
$str
¬¬ '
+
¬¬( )
$str
√√ *
+
√√+ ,
$str
ƒƒ 0
+
ƒƒ1 2
$str
≈≈ 3
+
≈≈4 5
$str
∆∆ '
+
∆∆( )
$str
«« (
+
««) *
$str
»» )
+
»»* +
$str
…… 1
+
……2 3
$str
   :
+
  ; <
$str
ÀÀ 4
+
ÀÀ5 6
$str
ÃÃ >
+
ÃÃ? @
$str
ÕÕ 8
+
ÕÕ9 :
$str
ŒŒ >
+
ŒŒ? @
$str
œœ 9
+
œœ: ;
$str
–– 5
+
––6 7
$str
—— )
+
——* +
$str
““ 5
+
““6 7
$str
”” /
+
””0 1
$str
‘‘ 4
+
‘‘5 6
$str
’’ /
+
’’0 1
$str
÷÷ +
+
÷÷, -
indicadores
÷÷. 9
+
÷÷: ;
$str
÷÷< @
+
÷÷A B
$str
◊◊ &
+
◊◊' (
$str
ÿÿ 
+
ÿÿ  !
form
ÿÿ" &
.
ÿÿ& '
unitId
ÿÿ' -
+
ÿÿ. /
$str
ŸŸ 5
+
ŸŸ6 7
form
ŸŸ8 <
.
ŸŸ< =
_dataInicioSQL
ŸŸ= K
+
ŸŸL M
$str
ŸŸN W
+
ŸŸX Y
form
ŸŸZ ^
.
ŸŸ^ _
_dataFimSQL
ŸŸ_ j
+
ŸŸk l
$str
ŸŸm p
+
ŸŸq r
$str
⁄⁄ 
+
⁄⁄ 
$str
€€ 
+
€€ 
$str
‹‹ 
+
‹‹ 
$str
›› #
+
››$ %
$str
ﬁﬁ %
+
ﬁﬁ& '
$str
ﬂﬂ 
+
ﬂﬂ 
$str
‡‡ 
+
‡‡ 
$str
·· I
+
··J K
$str
‚‚ !
;
‚‚! "
return
‰‰ +
queryGraficoTarefasAcumuladas
‰‰ 0
;
‰‰0 1
}
ÂÂ 	
internal
ÁÁ 
static
ÁÁ 
string
ÁÁ 
QueryGrafico4
ÁÁ ,
(
ÁÁ, -.
 FormularioParaRelatorioViewModel
ÁÁ- M
form
ÁÁN R
,
ÁÁR S
string
ÁÁT Z
indicadores
ÁÁ[ f
)
ÁÁf g
{
ËË 	
var
ÍÍ 
queryGrafico4
ÍÍ 
=
ÍÍ 
$str
ÍÍ  "
+
ÍÍ# $
$str
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
$str
ÌÌ *
+
ÌÌ+ ,
$str
ÓÓ -
+
ÓÓ. /
$str
ÔÔ *
+
ÔÔ+ ,
$str
 -
+
. /
$str
ÒÒ 3
+
ÒÒ4 5
$str
ÚÚ 6
+
ÚÚ7 8
$str
ÛÛ *
+
ÛÛ+ ,
$str
ÙÙ +
+
ÙÙ, -
$str
ıı ,
+
ıı- .
$str
ˆˆ 4
+
ˆˆ5 6
$str
˜˜ =
+
˜˜> ?
$str
¯¯ 7
+
¯¯8 9
$str
˘˘ A
+
˘˘B C
$str
˙˙ ;
+
˙˙< =
$str
˚˚ A
+
˚˚B C
$str
¸¸ <
+
¸¸= >
$str
˝˝ 8
+
˝˝9 :
$str
˛˛ ,
+
˛˛- .
$str
ˇˇ 8
+
ˇˇ9 :
$str
ÄÄ 2
+
ÄÄ3 4
$str
ÅÅ 7
+
ÅÅ8 9
$str
ÇÇ 2
+
ÇÇ3 4
$str
ÉÉ .
+
ÉÉ/ 0
indicadores
ÉÉ1 <
+
ÉÉ= >
$str
ÉÉ? C
+
ÉÉD E
$str
ÑÑ )
+
ÑÑ* +
$str
ÖÖ "
+
ÖÖ# $
form
ÖÖ% )
.
ÖÖ) *
unitId
ÖÖ* 0
+
ÖÖ1 2
$str
ÜÜ 8
+
ÜÜ9 :
form
ÜÜ; ?
.
ÜÜ? @
_dataInicioSQL
ÜÜ@ N
+
ÜÜO P
$str
ÜÜQ Z
+
ÜÜ[ \
form
ÜÜ] a
.
ÜÜa b
_dataFimSQL
ÜÜb m
+
ÜÜn o
$str
ÜÜp s
+
ÜÜt u
$str
áá 
+
áá  
$str
àà 
+
àà 
$str
ââ 
+
ââ  !
$str
ää 
+
ää 
$str
ãã 
+
ãã  !
$str
åå &
+
åå' (
$str
çç (
+
çç) *
$str
éé 
+
éé  !
$str
èè 
+
èè 
$str
êê K
+
êêL M
$str
ëë $
;
ëë$ %
return
ìì 
queryGrafico4
ìì  
;
ìì  !
}
îî 	
}
ïï 
public
óó 

class
óó  
RelDiarioResultSet
óó #
{
òò 
public
ôô 
int
ôô 
?
ôô 
	level1_Id
ôô 
{
ôô 
get
ôô  #
;
ôô# $
set
ôô% (
;
ôô( )
}
ôô* +
public
öö 
string
öö 

Level1Name
öö  
{
öö! "
get
öö# &
;
öö& '
set
öö( +
;
öö+ ,
}
öö- .
public
õõ 
int
õõ 
?
õõ 
	level2_Id
õõ 
{
õõ 
get
õõ  #
;
õõ# $
set
õõ% (
;
õõ( )
}
õõ* +
public
úú 
string
úú 

Level2Name
úú  
{
úú! "
get
úú# &
;
úú& '
set
úú( +
;
úú+ ,
}
úú- .
public
ùù 
int
ùù 
?
ùù 
	level3_Id
ùù 
{
ùù 
get
ùù  #
;
ùù# $
set
ùù% (
;
ùù( )
}
ùù* +
public
ûû 
string
ûû 

Level3Name
ûû  
{
ûû! "
get
ûû# &
;
ûû& '
set
ûû( +
;
ûû+ ,
}
ûû- .
public
†† 
int
†† 
?
†† 

Unidade_Id
†† 
{
††  
get
††! $
;
††$ %
set
††& )
;
††) *
}
††+ ,
public
°° 
string
°° 
Unidade
°° 
{
°° 
get
°°  #
;
°°# $
set
°°% (
;
°°( )
}
°°* +
public
££ 
decimal
££ 
Meta
££ 
{
££ 
get
££ !
;
££! "
set
££# &
;
££& '
}
££( )
public
§§ 
decimal
§§ 
ProcentagemNc
§§ $
{
§§% &
get
§§' *
;
§§* +
set
§§, /
;
§§/ 0
}
§§1 2
public
¶¶ 
decimal
¶¶ 
Av
¶¶ 
{
¶¶ 
get
¶¶ 
;
¶¶  
set
¶¶! $
;
¶¶$ %
}
¶¶& '
public
ßß 
decimal
ßß 
Av_Peso
ßß 
{
ßß  
get
ßß! $
;
ßß$ %
set
ßß& )
;
ßß) *
}
ßß+ ,
public
®® 
decimal
®® 
NC
®® 
{
®® 
get
®® 
;
®®  
set
®®! $
;
®®$ %
}
®®& '
public
©© 
decimal
©© 
NC_Peso
©© 
{
©©  
get
©©! $
;
©©$ %
set
©©& )
;
©©) *
}
©©+ ,
public
´´ 
double
´´ 
Data
´´ 
{
´´ 
get
´´  
{
´´! "
return
´´# )
_Data
´´* /
.
´´/ 0
Subtract
´´0 8
(
´´8 9
new
´´9 <
DateTime
´´= E
(
´´E F
$num
´´F J
,
´´J K
$num
´´L M
,
´´M N
$num
´´O P
,
´´P Q
$num
´´R S
,
´´S T
$num
´´U V
,
´´V W
$num
´´X Y
,
´´Y Z
DateTimeKind
´´[ g
.
´´g h
Utc
´´h k
)
´´k l
)
´´l m
.
´´m n
TotalMilliseconds
´´n 
;´´ Ä
}´´Å Ç
}´´Ñ Ö
public
≠≠ 
DateTime
≠≠ 
_Data
≠≠ 
{
≠≠ 
get
≠≠  #
;
≠≠# $
set
≠≠% (
;
≠≠( )
}
≠≠* +
}
ÆÆ 
}±± —•
qC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\ScorecardApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str  
)  !
]! "
public 

class 
ScorecardController $
:% &
ApiController' 4
{ 
private 
List 
< 
ScorecardResultSet '
>' (
_mock) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
private 
List 
< 
ScorecardResultSet '
>' (
_list) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
decimal 
[ 
] !
SelectPontosScorecard .
(. /
DateTime/ 7
dtInicio8 @
,@ A
DateTimeB J
dtFimK P
,P Q
intR U
	unidadeIdV _
,_ `
inta d
tipoe i
,i j
intk n
clusterSelected_Id	o Å
)
Å Ç
{ 	
decimal 
[ 
] 
pontosTotais "
=# $
{% &
$num' (
,( )
$num* +
}, -
;- .
decimal 
pontosAtingidos #
=$ %
$num& '
;' (
decimal 
pontosDisputados $
=% &
$num' (
;( )
DateTime 
_dtIni 
= 
dtInicio &
;& '
DateTime 
_dtFim 
= 
dtFim #
;# $
DateTime   
_novaDataIni   !
=  " #
_dtIni  $ *
;  * +
DateTime!! 
_novaDataFim!! !
=!!" #
_dtIni!!$ *
;!!* +
int%% 
numMeses%% 
=%% 
(%% 
$num%% 
*%%  
(%%! "
_dtFim%%" (
.%%( )
Year%%) -
-%%. /
_dtIni%%0 6
.%%6 7
Year%%7 ;
)%%; <
+%%= >
_dtFim%%? E
.%%E F
Month%%F K
-%%L M
_dtIni%%N T
.%%T U
Month%%U Z
)%%Z [
+%%\ ]
$num%%^ _
;%%_ `
var'' 
sql'' 
='' 
$str'' 
;'' 
for)) 
()) 
int)) 
i)) 
=)) 
$num)) 
;)) 
i)) 
<)) 
numMeses))  (
;))( )
i))* +
++))+ -
)))- .
{** 
if++ 
(++ 
i++ 
>++ 
$num++ 
)++ 
{,, 
_novaDataIni--  
=--! "
new--# &
DateTime--' /
(--/ 0
_novaDataIni--0 <
.--< =
	AddMonths--= F
(--F G
$num--G H
)--H I
.--I J
Year--J N
,--N O
_novaDataIni--P \
.--\ ]
	AddMonths--] f
(--f g
$num--g h
)--h i
.--i j
Month--j o
,--o p
$num--q r
)--r s
;--s t
}.. 
_novaDataFim00 
=00 
new00 "
DateTime00# +
(00+ ,
_novaDataIni00, 8
.008 9
Year009 =
,00= >
_novaDataIni00? K
.00K L
Month00L Q
,00Q R
DateTime00S [
.00[ \
DaysInMonth00\ g
(00g h
_novaDataIni00h t
.00t u
Year00u y
,00y z
_novaDataIni	00{ á
.
00á à
Month
00à ç
)
00ç é
)
00é è
;
00è ê
if22 
(22 
i22 
==22 
numMeses22 !
-22" #
$num22$ %
)22% &
{33 
_novaDataFim44  
=44! "
_dtFim44# )
;44) *
}55 
sql77 
=77 
new77 
ScorecardResultSet77 ,
(77, -
)77- .
.77. /#
SelectScorecardCompleto77/ F
(77F G
_novaDataIni77G S
,77S T
_novaDataFim77U a
,77a b
	unidadeId77c l
,77l m
$num77n o
,77o p
clusterSelected_Id	77q É
)
77É Ñ
;
77Ñ Ö
using99 
(99 
var99 
db99 
=99 
new99  #
SgqDbDevEntities99$ 4
(994 5
)995 6
)996 7
{:: 
_list<< 
=<< 
db<< 
.<< 
Database<< '
.<<' (
SqlQuery<<( 0
<<<0 1
ScorecardResultSet<<1 C
><<C D
(<<D E
sql<<E H
)<<H I
.<<I J
ToList<<J P
(<<P Q
)<<Q R
;<<R S
foreach>> 
(>> 
var>>  
r>>! "
in>># %
_list>>& +
.>>+ ,
ToList>>, 2
(>>2 3
)>>3 4
)>>4 5
{?? 
pontosDisputados@@ (
=@@) *
r@@+ ,
.@@, -$
PontosAtingidosIndicador@@- E
.@@E F
Value@@F K
;@@K L
pontosAtingidosBB '
=BB( )
rBB* +
.BB+ ,
PontosAtingidosBB, ;
.BB; <
ValueBB< A
;BBA B
}CC 
}DD 
pontosTotaisFF 
[FF 
$numFF 
]FF 
+=FF  "
pontosDisputadosFF# 3
;FF3 4
pontosTotaisGG 
[GG 
$numGG 
]GG 
+=GG  "
pontosAtingidosGG# 2
;GG2 3
}II 
returnKK 
pontosTotaisKK 
;KK  
}LL 	
[NN 	
HttpPostNN	 
]NN 
[OO 	
RouteOO	 
(OO 
$strOO 
)OO 
]OO 
publicPP 
ListPP 
<PP 
ScorecardResultSetPP &
>PP& '
GetScorecardPP( 4
(PP4 5
[PP5 6
FromBodyPP6 >
]PP> ?,
 FormularioParaRelatorioViewModelPP@ `
formPPa e
)PPe f
{QQ 	
	CommonLogTT 
.TT 

SaveReportTT  
(TT  !
formTT! %
,TT% &
$strTT' 9
)TT9 :
;TT: ;
decimalVV 
[VV 
]VV 
pontosTotaisVV "
=VV# $!
SelectPontosScorecardVV% :
(VV: ;
formVV; ?
.VV? @
_dataInicioVV@ K
,VVK L
formVVM Q
.VVQ R
_dataFimVVR Z
,VVZ [
formVV\ `
.VV` a
unitIdVVa g
,VVg h
$numVVi j
,VVj k
formVVl p
.VVp q
clusterSelected_Id	VVq É
)
VVÉ Ñ
;
VVÑ Ö
varXX 
queryXX 
=XX 
newXX 
ScorecardResultSetXX .
(XX. /
)XX/ 0
.XX0 1#
SelectScorecardCompletoXX1 H
(XXH I
formXXI M
.XXM N
_dataInicioXXN Y
,XXY Z
formXX[ _
.XX_ `
_dataFimXX` h
,XXh i
formXXj n
.XXn o
unitIdXXo u
,XXu v
$numXXw x
,XXx y
formXXz ~
.XX~ 
clusterSelected_Id	XX ë
)
XXë í
;
XXí ì
usingYY 
(YY 
varYY 
dbYY 
=YY 
newYY 
SgqDbDevEntitiesYY  0
(YY0 1
)YY1 2
)YY2 3
{ZZ 
_list\\ 
=\\ 
db\\ 
.\\ 
Database\\ #
.\\# $
SqlQuery\\$ ,
<\\, -
ScorecardResultSet\\- ?
>\\? @
(\\@ A
query\\A F
)\\F G
.\\G H
ToList\\H N
(\\N O
)\\O P
;\\P Q
var]] 
total]] 
=]] 
new]] 
ScorecardResultSet]]  2
(]]2 3
)]]3 4
{]]5 6

Level1Name]]7 A
=]]B C
$str]]D L
,]]L M
PontosIndicador]]N ]
=]]^ _
$num]]` c
,]]c d
	Scorecard]]e n
=]]o p
$num]]q r
,]]r s
PontosAtingidos	]]t É
=
]]Ñ Ö
$num
]]Ü á
}
]]à â
;
]]â ä
var__ !
totalPontosDisputados__ )
=__* +
$num__, 0
;__0 1
var``  
totalPontosAtingidos`` (
=``) *
$num``+ /
;``/ 0
varaa 
totalScorecardaa "
=aa# $
$numaa% )
;aa) *
varcc 
pontosDisputadoscc $
=cc% &
$numcc' +
;cc+ ,
vardd 
pontosAtingidosdd #
=dd$ %
$numdd& *
;dd* +
foreachff 
(ff 
varff 
iff 
inff !
_listff" '
.ff' (
ToListff( .
(ff. /
)ff/ 0
)ff0 1
{gg 
pontosDisputadoshh $
=hh% &
$numhh' (
;hh( )
ifjj 
(jj 
ijj 
.jj 
PontosIndicadorjj )
!=jj* ,
nulljj- 1
)jj1 2
pontosDisputadoskk (
=kk) *
ikk+ ,
.kk, -
PontosIndicadorkk- <
.kk< =
Valuekk= B
;kkB C
elsell 
_listmm 
.mm 
Removemm $
(mm$ %
imm% &
)mm& '
;mm' (
ifoo 
(oo 
ioo 
.oo 
AVoo 
>oo 
$numoo  
)oo  !
{pp !
totalPontosDisputadosqq -
+=qq. 0
pontosDisputadosqq1 A
;qqA B
pontosAtingidosss '
=ss( )
$numss* +
;ss+ ,
ifuu 
(uu 
iuu 
.uu 
PontosAtingidosuu -
!=uu. 0
nulluu1 5
)uu5 6
pontosAtingidosvv +
=vv, -
ivv. /
.vv/ 0
PontosAtingidosvv0 ?
.vv? @
Valuevv@ E
;vvE F 
totalPontosAtingidosxx ,
+=xx- /
pontosAtingidosxx0 ?
;xx? @
}yy 
}zz 
try|| 
{}} 
totalScorecard~~ "
=~~# $!
totalPontosDisputados~~% :
==~~; =
$num~~> ?
?~~@ A
$num~~B C
:~~D E
Math~~F J
.~~J K
Round~~K P
(~~P Q
(~~Q R 
totalPontosAtingidos~~R f
/~~g h!
totalPontosDisputados~~i ~
*	~~ Ä
$num
~~Å Ñ
)
~~Ñ Ö
,
~~Ö Ü
$num
~~á à
)
~~à â
;
~~â ä
} 
catch
ÄÄ 
(
ÄÄ #
DivideByZeroException
ÄÄ ,
)
ÄÄ, -
{
ÅÅ 
totalScorecard
ÇÇ "
=
ÇÇ# $
$num
ÇÇ% &
;
ÇÇ& '
}
ÉÉ 
try
áá 
{
àà 
_list
ââ 
.
ââ 
Add
ââ 
(
ââ 
new
ââ ! 
ScorecardResultSet
ââ" 4
(
ââ4 5
)
ââ5 6
{
ââ7 8

Level1Name
ââ9 C
=
ââD E
$str
ââF N
,
ââN O
PontosIndicador
ââP _
=
ââ` a
pontosTotais
ââb n
[
âân o
$num
ââo p
]
ââp q
,
ââq r
	Scorecard
ââs |
=
ââ} ~
(ââ Ä
pontosTotaisââÄ å
[ââå ç
$numââç é
]ââé è
==ââê í
$numââì î
?ââï ñ
$numââó ò
:ââô ö
Mathââõ ü
.ââü †
Roundââ† •
(ââ• ¶
(ââ¶ ß
pontosTotaisââß ≥
[ââ≥ ¥
$numââ¥ µ
]ââµ ∂
/ââ∑ ∏
pontosTotaisââπ ≈
[ââ≈ ∆
$numââ∆ «
]ââ« »
)ââ» …
*ââ  À
$numââÃ œ
,ââœ –
$numââ— “
)ââ“ ”
)ââ” ‘
,ââ‘ ’
PontosAtingidosââ÷ Â
=ââÊ Á$
totalPontosAtingidosââË ¸
}ââ˝ ˛
)ââ˛ ˇ
;ââˇ Ä
}
ää 
catch
ãã 
(
ãã #
DivideByZeroException
ãã ,
)
ãã, -
{
åå 
_list
çç 
.
çç 
Add
çç 
(
çç 
new
çç ! 
ScorecardResultSet
çç" 4
(
çç4 5
)
çç5 6
{
çç7 8

Level1Name
çç9 C
=
ççD E
$str
ççF N
,
ççN O
PontosIndicador
ççP _
=
çç` a
pontosTotais
ççb n
[
ççn o
$num
çço p
]
ççp q
,
ççq r
	Scorecard
ççs |
=
çç} ~
Mathçç É
.ççÉ Ñ
RoundççÑ â
(ççâ ä
$numççä è
,ççè ê
$numççë í
)ççí ì
,ççì î
PontosAtingidosççï §
=çç• ¶$
totalPontosAtingidosççß ª
}ççº Ω
)ççΩ æ
;ççæ ø
}
éé 
}
êê 
return
íí 
_list
íí 
;
íí 
}
ìì 	
private
ïï 
void
ïï 
CriaMock
ïï 
(
ïï 
)
ïï 
{
ññ 	
_mock
óó 
=
óó 
new
óó 
List
óó 
<
óó  
ScorecardResultSet
óó /
>
óó/ 0
(
óó0 1
)
óó1 2
;
óó2 3
_mock
òò 
.
òò 
Add
òò 
(
òò 
new
òò  
ScorecardResultSet
òò ,
(
òò, -
)
òò- .
{
ôô 
Cluster
öö 
=
öö 
$num
öö 
,
öö 
ClusterName
õõ 
=
õõ 
$str
õõ )
,
õõ) *
Regional
úú 
=
úú 
$num
úú 
,
úú 
RegionalName
ùù 
=
ùù 
$str
ùù %
,
ùù% &
ParCompanyId
ûû 
=
ûû 
$num
ûû  
,
ûû  !
ParCompanyName
üü 
=
üü  
$str
üü! (
,
üü( )
TipoIndicador
†† 
=
†† 
$num
††  !
,
††! "
TipoIndicadorName
°° !
=
°°" #
$str
°°$ /
,
°°/ 0
Level1Id
¢¢ 
=
¢¢ 
$num
¢¢ 
,
¢¢ 

Level1Name
££ 
=
££ 
$str
££ &
,
££& '
Criterio
§§ 
=
§§ 
$num
§§ 
,
§§ 
CriterioName
•• 
=
•• 
$str
•• &
,
••& '
AV
¶¶ 
=
¶¶ 
$num
¶¶ 
,
¶¶ 
NC
ßß 
=
ßß 
$num
ßß 
,
ßß 
Pontos
®® 
=
®® 
$num
®® 
,
®® 
Meta
©© 
=
©© 
$num
©© 
,
©© 
Real
™™ 
=
™™ 
$num
™™ 
,
™™ 
PontosAtingidos
´´ 
=
´´  !
$num
´´" $
,
´´$ %
	Scorecard
¨¨ 
=
¨¨ 
$num
¨¨ 
}
≠≠ 
)
≠≠ 
;
≠≠ 
_mock
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
new
ØØ  
ScorecardResultSet
ØØ ,
(
ØØ, -
)
ØØ- .
{
∞∞ 
Cluster
±± 
=
±± 
$num
±± 
,
±± 
ClusterName
≤≤ 
=
≤≤ 
$str
≤≤ )
,
≤≤) *
Regional
≥≥ 
=
≥≥ 
$num
≥≥ 
,
≥≥ 
RegionalName
¥¥ 
=
¥¥ 
$str
¥¥ %
,
¥¥% &
ParCompanyId
µµ 
=
µµ 
$num
µµ  
,
µµ  !
ParCompanyName
∂∂ 
=
∂∂  
$str
∂∂! (
,
∂∂( )
TipoIndicador
∑∑ 
=
∑∑ 
$num
∑∑  !
,
∑∑! "
TipoIndicadorName
∏∏ !
=
∏∏" #
$str
∏∏$ /
,
∏∏/ 0
Level1Id
ππ 
=
ππ 
$num
ππ 
,
ππ 

Level1Name
∫∫ 
=
∫∫ 
$str
∫∫ &
,
∫∫& '
Criterio
ªª 
=
ªª 
$num
ªª 
,
ªª 
CriterioName
ºº 
=
ºº 
$str
ºº &
,
ºº& '
AV
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
,
ΩΩ 
NC
ææ 
=
ææ 
$num
ææ 
,
ææ 
Pontos
øø 
=
øø 
$num
øø 
,
øø 
Meta
¿¿ 
=
¿¿ 
$num
¿¿ 
,
¿¿ 
Real
¡¡ 
=
¡¡ 
$num
¡¡ 
,
¡¡ 
PontosAtingidos
¬¬ 
=
¬¬  !
$num
¬¬" $
,
¬¬$ %
	Scorecard
√√ 
=
√√ 
$num
√√ 
}
ƒƒ 
)
ƒƒ 
;
ƒƒ 
_mock
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
new
∆∆  
ScorecardResultSet
∆∆ ,
(
∆∆, -
)
∆∆- .
{
«« 
Cluster
»» 
=
»» 
$num
»» 
,
»» 
ClusterName
…… 
=
…… 
$str
…… )
,
……) *
Regional
   
=
   
$num
   
,
   
RegionalName
ÀÀ 
=
ÀÀ 
$str
ÀÀ %
,
ÀÀ% &
ParCompanyId
ÃÃ 
=
ÃÃ 
$num
ÃÃ  
,
ÃÃ  !
ParCompanyName
ÕÕ 
=
ÕÕ  
$str
ÕÕ! (
,
ÕÕ( )
TipoIndicador
ŒŒ 
=
ŒŒ 
$num
ŒŒ  !
,
ŒŒ! "
TipoIndicadorName
œœ !
=
œœ" #
$str
œœ$ /
,
œœ/ 0
Level1Id
–– 
=
–– 
$num
–– 
,
–– 

Level1Name
—— 
=
—— 
$str
—— &
,
——& '
Criterio
““ 
=
““ 
$num
““ 
,
““ 
CriterioName
”” 
=
”” 
$str
”” &
,
””& '
AV
‘‘ 
=
‘‘ 
$num
‘‘ 
,
‘‘ 
NC
’’ 
=
’’ 
$num
’’ 
,
’’ 
Pontos
÷÷ 
=
÷÷ 
$num
÷÷ 
,
÷÷ 
Meta
◊◊ 
=
◊◊ 
$num
◊◊ 
,
◊◊ 
Real
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
PontosAtingidos
ŸŸ 
=
ŸŸ  !
$num
ŸŸ" $
,
ŸŸ$ %
	Scorecard
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
}
€€ 
)
€€ 
;
€€ 
}
‹‹ 	
[
ÁÁ 	
HttpGet
ÁÁ	 
]
ÁÁ 
[
ËË 	
Route
ËË	 
(
ËË 
$str
ËË E
)
ËËE F
]
ËËF G
public
ÈÈ 
void
ÈÈ 
MigracaoParte1
ÈÈ "
(
ÈÈ" #
string
ÈÈ# )
unidade
ÈÈ* 1
,
ÈÈ1 2
string
ÈÈ3 9
ip
ÈÈ: <
,
ÈÈ< =
string
ÈÈ> D
banco
ÈÈE J
,
ÈÈJ K
string
ÈÈL R
ipProd
ÈÈS Y
,
ÈÈY Z
string
ÈÈ[ a
	bancoProd
ÈÈb k
)
ÈÈk l
{
ÍÍ 	
List
ÓÓ 
<
ÓÓ  
ResultadoUmaColuna
ÓÓ #
>
ÓÓ# $"
collectionlevel2List
ÓÓ% 9
=
ÓÓ: ;
new
ÓÓ< ?
List
ÓÓ@ D
<
ÓÓD E 
ResultadoUmaColuna
ÓÓE W
>
ÓÓW X
(
ÓÓX Y
)
ÓÓY Z
;
ÓÓZ [
using
ÚÚ 
(
ÚÚ 
var
ÚÚ 
db
ÚÚ 
=
ÚÚ 
new
ÚÚ 
Factory
ÚÚ  '
(
ÚÚ' (
ip
ÚÚ( *
,
ÚÚ* +
banco
ÚÚ, 1
,
ÚÚ1 2
$str
ÚÚ3 ;
,
ÚÚ; <
$str
ÚÚ= A
)
ÚÚA B
)
ÚÚB C
{
ÛÛ 
var
ÙÙ 
collectionlevel2
ÙÙ $
=
ÙÙ% &
$str
ÙÙ' )
+
ÙÙ* +
$str
ˆˆ )
+
ˆˆ* +
$str˜˜ Î
+˜˜Ï Ì
$str
¯¯ .
+
¯¯/ 0
unidade
¯¯1 8
+
¯¯9 :
$str¯¯; Ù
+¯¯ı ˆ
$str˘˘ Î
+˘˘Ï Ì
$str˙˙ Î
+˙˙Ï Ì
$str˚˚ Î
+˚˚Ï Ì
$str¸¸ Î
+¸¸Ï Ì
$str˝˝ Î
+˝˝Ï Ì
$str˛˛ Î
+˛˛Ï Ì
$strˇˇ Î
+ˇˇÏ Ì
$strÄÄ Î
+ÄÄÏ Ì
$strÅÅ Î
+ÅÅÏ Ì
$strÇÇ Î
+ÇÇÏ Ì
$strÉÉ Î
+ÉÉÏ Ì
$strÑÑ Î
+ÑÑÏ Ì
$strÖÖ Î
+ÖÖÏ Ì
$strÜÜ Î
+ÜÜÏ Ì
$stráá Î
+ááÏ Ì
$stràà Î
+ààÏ Ì
$strââ Î
+ââÏ Ì
$strää Î
+ääÏ Ì
$strãã Î
+ããÏ Ì
$stråå Î
+ååÏ Ì
$strçç Î
+ççÏ Ì
$stréé Î
+ééÏ Ì
$strèè Î
+èèÏ Ì
$strêê Î
+êêÏ Ì
$strëë Î
+ëëÏ Ì
$stríí Î
+ííÏ Ì
$strìì Î
+ììÏ Ì
$strîî Î
+îîÏ Ì
$strïï Î
+ïïÏ Ì
$strññ Î
+ññÏ Ì
$stróó Î
+óóÏ Ì
$stròò Î
+òòÏ Ì
$strôô Î
+ôôÏ Ì
$ströö Î
+ööÏ Ì
$strõõ Î
+õõÏ Ì
$strúú Î
+úúÏ Ì
$strùù Î
+ùùÏ Ì
$strûû Î
+ûûÏ Ì
$strüü Î
+üüÏ Ì
$str†† Î
+††Ï Ì
$str°° ˆ
+°°˜ ¯
$str¢¢ Î
+¢¢Ï Ì
$str££ Î
+££Ï Ì
$str
§§ K
;
§§K L
dynamic
¶¶ 
	resultado
¶¶ !
=
¶¶" #
db
¶¶$ &
.
¶¶& '
QueryNinjaADO
¶¶' 4
(
¶¶4 5
collectionlevel2
¶¶5 E
)
¶¶E F
;
¶¶F G
for
®® 
(
®® 
var
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®®  !
<
®®" #
	resultado
®®$ -
.
®®- .
Count
®®. 3
;
®®3 4
i
®®5 6
++
®®6 8
)
®®8 9
{
©© 
try
™™ 
{
´´  
ResultadoUmaColuna
¨¨ *
item
¨¨+ /
=
¨¨0 1
new
¨¨2 5 
ResultadoUmaColuna
¨¨6 H
(
¨¨H I
)
¨¨I J
;
¨¨J K
item
≠≠ 
.
≠≠ 
retorno
≠≠ $
=
≠≠% &
	resultado
≠≠' 0
[
≠≠0 1
i
≠≠1 2
]
≠≠2 3
.
≠≠3 4
retorno
≠≠4 ;
;
≠≠; <"
collectionlevel2List
ÆÆ ,
.
ÆÆ, -
Add
ÆÆ- 0
(
ÆÆ0 1
item
ÆÆ1 5
)
ÆÆ5 6
;
ÆÆ6 7
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± $
)
±±$ %
{
≤≤ 
}
µµ 
}
∂∂ 
}
∏∏ 
using
¿¿ 
(
¿¿ 
var
¿¿ 
db
¿¿ 
=
¿¿ 
new
¿¿ 
Factory
¿¿  '
(
¿¿' (
ipProd
¿¿( .
,
¿¿. /
	bancoProd
¿¿0 9
,
¿¿9 :
$str
¿¿; C
,
¿¿C D
$str
¿¿E I
)
¿¿I J
)
¿¿J K
{
¡¡ 
foreach
√√ 
(
√√ 
var
√√ 
i
√√ 
in
√√ !"
collectionlevel2List
√√" 6
)
√√6 7
{
ƒƒ 
try
≈≈ 
{
∆∆ 
db
«« 
.
«« 

ExecuteSql
«« %
(
««% &
i
««& '
.
««' (
retorno
««( /
.
««/ 0
ToString
««0 8
(
««8 9
)
««9 :
)
««: ;
;
««; <
}
…… 
catch
   
(
   
	Exception
   $
)
  $ %
{
ÀÀ 
}
ŒŒ 
}
œœ 
}
““ 
List
ÿÿ 
<
ÿÿ  
ResultadoUmaColuna
ÿÿ #
>
ÿÿ# $
result_level3List
ÿÿ% 6
=
ÿÿ7 8
new
ÿÿ9 <
List
ÿÿ= A
<
ÿÿA B 
ResultadoUmaColuna
ÿÿB T
>
ÿÿT U
(
ÿÿU V
)
ÿÿV W
;
ÿÿW X
using
€€ 
(
€€ 
var
€€ 
db
€€ 
=
€€ 
new
€€ 
Factory
€€  '
(
€€' (
ip
€€( *
,
€€* +
banco
€€, 1
,
€€1 2
$str
€€3 ;
,
€€; <
$str
€€= A
)
€€A B
)
€€B C
{
‹‹ 
var
ﬁﬁ 
result_level3
ﬁﬁ !
=
ﬁﬁ" #
$str
ﬁﬁ$ &
+
ﬁﬁ' (
$str‡‡ ç
+‡‡é è
$str·· ç
+··é è
$str
‚‚ Q
+
‚‚R S
unidade
‚‚T [
+
‚‚\ ]
$str‚‚^ õ
+‚‚ú ù
$str„„ ç
+„„é è
$str‰‰ ç
+‰‰é è
$strÂÂ ç
+ÂÂé è
$strÊÊ ç
+ÊÊé è
$strÁÁ ç
+ÁÁé è
$strËË ç
+ËËé è
$strÈÈ ç
+ÈÈé è
$strÍÍ ç
+ÍÍé è
$strÎÎ ç
+ÎÎé è
$strÏÏ ç
+ÏÏé è
$strÌÌ ç
+ÌÌé è
$strÓÓ ç
+ÓÓé è
$strÔÔ ç
+ÔÔé è
$str ç
+é è
$strÒÒ ç
+ÒÒé è
$strÚÚ ç
+ÚÚé è
$strÛÛ ó
+ÛÛò ô
$strÙÙ ç
+ÙÙé è
$strıı ç
+ııé è
$strˆˆ ç
+ˆˆé è
$str˜˜ ç
+˜˜é è
$str¯¯ ç
+¯¯é è
$str˘˘ ç
+˘˘é è
$str
˙˙ Z
;
˙˙Z [
dynamic
¸¸ 
	resultado
¸¸ !
=
¸¸" #
db
¸¸$ &
.
¸¸& '
QueryNinjaADO
¸¸' 4
(
¸¸4 5
result_level3
¸¸5 B
)
¸¸B C
;
¸¸C D
for
˛˛ 
(
˛˛ 
var
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛  !
<
˛˛" #
	resultado
˛˛$ -
.
˛˛- .
Count
˛˛. 3
;
˛˛3 4
i
˛˛5 6
++
˛˛6 8
)
˛˛8 9
{
ˇˇ 
try
ÄÄ 
{
ÅÅ  
ResultadoUmaColuna
ÇÇ *
item
ÇÇ+ /
=
ÇÇ0 1
new
ÇÇ2 5 
ResultadoUmaColuna
ÇÇ6 H
(
ÇÇH I
)
ÇÇI J
;
ÇÇJ K
item
ÉÉ 
.
ÉÉ 
retorno
ÉÉ $
=
ÉÉ% &
	resultado
ÉÉ' 0
[
ÉÉ0 1
i
ÉÉ1 2
]
ÉÉ2 3
.
ÉÉ3 4
retorno
ÉÉ4 ;
;
ÉÉ; <
result_level3List
ÑÑ )
.
ÑÑ) *
Add
ÑÑ* -
(
ÑÑ- .
item
ÑÑ. 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá $
)
áá$ %
{
àà 
}
ãã 
}
åå 
}
éé 
using
ïï 
(
ïï 
var
ïï 
db
ïï 
=
ïï 
new
ïï 
Factory
ïï  '
(
ïï' (
ipProd
ïï( .
,
ïï. /
	bancoProd
ïï0 9
,
ïï9 :
$str
ïï; C
,
ïïC D
$str
ïïE I
)
ïïI J
)
ïïJ K
{
ññ 
foreach
òò 
(
òò 
var
òò 
i
òò 
in
òò !
result_level3List
òò" 3
)
òò3 4
{
ôô 
try
öö 
{
õõ 
db
úú 
.
úú 

ExecuteSql
úú %
(
úú% &
i
úú& '
.
úú' (
retorno
úú( /
.
úú/ 0
ToString
úú0 8
(
úú8 9
)
úú9 :
)
úú: ;
;
úú; <
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû $
)
ûû$ %
{
üü 
}
°° 
}
££ 
}
¶¶ 
var
´´ 
etapa1
´´ 
=
´´ 
$str
´´ 
+
´´ 
$str	≠≠ π
+≠≠∫ ª
$str	ÆÆ π
+ÆÆ∫ ª
$str	ØØ π
+ØØ∫ ª
$str	∞∞ π
+∞∞∫ ª
$str	±± π
+±±∫ ª
$str	≤≤ π
+≤≤∫ ª
$str	≥≥ π
+≥≥∫ ª
$str	¥¥ π
+¥¥∫ ª
$str	µµ π
+µµ∫ ª
$str	∂∂ π
+∂∂∫ ª
$str∑∑ 
+
∑∑ 
unidade
∑∑ 
+
∑∑  !
$str∑∑" ±
+∑∑≤ ≥
$str	∏∏ π
+∏∏∫ ª
$str	ππ π
+ππ∫ ª
$str	∫∫ π
+∫∫∫ ª
$str	ªª π
+ªª∫ ª
$str	ºº π
+ºº∫ ª
$str	ΩΩ π
+ΩΩ∫ ª
$str	ææ π
+ææ∫ ª
$str	øø π
+øø∫ ª
$str	¿¿ π
+¿¿∫ ª
$str	¡¡ π
+¡¡∫ ª
$str	¬¬ π
+¬¬∫ ª
$str	√√ π
+√√∫ ª
$str	ƒƒ π
+ƒƒ∫ ª
$str	≈≈ π
+≈≈∫ ª
$str	∆∆ π
+∆∆∫ ª
$str	«« π
+««∫ ª
$str	»» π
+»»∫ ª
$str	…… π
+……∫ ª
$str	   π
+  ∫ ª
$str	ÀÀ π
+ÀÀ∫ ª
$str	ÃÃ π
+ÃÃ∫ ª
$str	ÕÕ π
+ÕÕ∫ ª
$str	ŒŒ π
+ŒŒ∫ ª
$str	œœ π
+œœ∫ ª
$str	–– π
+––∫ ª
$str	—— π
+——∫ ª
$str	““ π
+““∫ ª
$str	”” π
+””∫ ª
$str	‘‘ π
+‘‘∫ ª
$str	’’ π
+’’∫ ª
$str	÷÷ π
+÷÷∫ ª
$str	◊◊ π
+◊◊∫ ª
$str	ÿÿ π
+ÿÿ∫ ª
$str	ŸŸ π
+ŸŸ∫ ª
$str	⁄⁄ ≥
+⁄⁄¥ µ
$str	€€ π
+€€∫ ª
$str	‹‹ π
+‹‹∫ ª
$str	›› π
+››∫ ª
$str	ﬁﬁ π
+ﬁﬁ∫ ª
$str	ﬂﬂ π
+ﬂﬂ∫ ª
$str	‡‡ π
+‡‡∫ ª
$str	·· π
+··∫ ª
$str	‚‚ π
+‚‚∫ ª
$str	„„ π
+„„∫ ª
$str	‰‰ π
+‰‰∫ ª
$str	ÂÂ π
+ÂÂ∫ ª
$str	ÊÊ π
+ÊÊ∫ ª
$str	ÁÁ π
+ÁÁ∫ ª
$str	ËË π
+ËË∫ ª
$str	ÈÈ π
+ÈÈ∫ ª
$str	ÍÍ π
+ÍÍ∫ ª
$str	ÎÎ π
+ÎÎ∫ ª
$str	ÏÏ π
+ÏÏ∫ ª
$str	ÌÌ ≥
+ÌÌ¥ µ
$str	ÓÓ π
+ÓÓ∫ ª
$str	ÔÔ π
+ÔÔ∫ ª
$str	 π
+∫ ª
$str	ÒÒ π
+ÒÒ∫ ª
$str	ÚÚ π
+ÚÚ∫ ª
$str	ÛÛ π
+ÛÛ∫ ª
$str	ÙÙ π
+ÙÙ∫ ª
$str	ıı π
+ıı∫ ª
$str	ˆˆ π
+ˆˆ∫ ª
$str	˜˜ π
+˜˜∫ ª
$str	¯¯ π
+¯¯∫ ª
$str	˘˘ π
+˘˘∫ ª
$str	˙˙ π
;˙˙π ∫
using
˛˛ 
(
˛˛ 
var
˛˛ 
db
˛˛ 
=
˛˛ 
new
˛˛ 
Factory
˛˛  '
(
˛˛' (
ipProd
˛˛( .
,
˛˛. /
	bancoProd
˛˛0 9
,
˛˛9 :
$str
˛˛; C
,
˛˛C D
$str
˛˛E I
)
˛˛I J
)
˛˛J K
{
ˇˇ 
try
ÄÄ 
{
ÅÅ 
db
ÉÉ 
.
ÉÉ 

ExecuteSql
ÉÉ !
(
ÉÉ! "
etapa1
ÉÉ" (
)
ÉÉ( )
;
ÉÉ) *
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ  
)
ÖÖ  !
{
ÜÜ 
}
ââ 
}
ää 
var
êê 
etapa2
êê 
=
êê 
$str
êê 
+
êê 
$stríí E
+
ííF G
$strìì E
+
ììF G
$strîî E
+
îîF G
$strïï E
+
ïïF G
$strññ E
+
ññF G
$stróó E
+
óóF G
$stròò E
+
òòF G
$strôô E
+
ôôF G
$ströö E
+
ööF G
$strõõ E
+
õõF G
$strúú E
+
úúF G
$strùù E
+
ùùF G
$strûû 
+
ûû 
unidade
ûû %
+
ûû& '
$str
ûû( @
+
ûûA B
$strüü E
+
üüF G
$str†† B
+
††C D
$str°° E
+
°°F G
$str¢¢ E
+
¢¢F G
$str££ E
+
££F G
$str§§ E
+
§§F G
$str•• E
+
••F G
$str¶¶ E
+
¶¶F G
$strßß E
+
ßßF G
$str®® E
+
®®F G
$str©© E
+
©©F G
$str™™ E
+
™™F G
$str´´ E
+
´´F G
$str¨¨ E
+
¨¨F G
$str≠≠ E
+
≠≠F G
$strÆÆ E
+
ÆÆF G
$strØØ E
+
ØØF G
$str∞∞ E
+
∞∞F G
$str±± E
+
±±F G
$str≤≤ ?
+
≤≤@ A
$str≥≥ E
+
≥≥F G
$str¥¥ E
+
¥¥F G
$strµµ E
+
µµF G
$str∂∂ E
+
∂∂F G
$str∑∑ E
+
∑∑F G
$str∏∏ E
+
∏∏F G
$strππ E
+
ππF G
$str∫∫ E
+
∫∫F G
$strªª E
+
ªªF G
$strºº E
+
ººF G
$strΩΩ E
+
ΩΩF G
$strææ E
;
ææE F
using
¡¡ 
(
¡¡ 
var
¡¡ 
db
¡¡ 
=
¡¡ 
new
¡¡ 
Factory
¡¡  '
(
¡¡' (
ipProd
¡¡( .
,
¡¡. /
	bancoProd
¡¡0 9
,
¡¡9 :
$str
¡¡; C
,
¡¡C D
$str
¡¡E I
)
¡¡I J
)
¡¡J K
{
¬¬ 
try
√√ 
{
ƒƒ 
db
≈≈ 
.
≈≈ 

ExecuteSql
≈≈ !
(
≈≈! "
etapa2
≈≈" (
)
≈≈( )
;
≈≈) *
}
«« 
catch
»» 
(
»» 
	Exception
»»  
)
»»  !
{
…… 
}
ÃÃ 
}
ÕÕ 
Services
‘‘ 
.
‘‘ 
SyncServices
‘‘ !
s
‘‘" #
=
‘‘$ %
new
‘‘& )
Services
‘‘* 2
.
‘‘2 3
SyncServices
‘‘3 ?
(
‘‘? @
)
‘‘@ A
;
‘‘A B
using
◊◊ 
(
◊◊ 
var
◊◊ 
db
◊◊ 
=
◊◊ 
new
◊◊ 
Factory
◊◊  '
(
◊◊' (
ipProd
◊◊( .
,
◊◊. /
	bancoProd
◊◊0 9
,
◊◊9 :
$str
◊◊; C
,
◊◊C D
$str
◊◊E I
)
◊◊I J
)
◊◊J K
{
ÿÿ  
ResultadoUmaColuna
⁄⁄ "
list
⁄⁄# '
=
⁄⁄( )
new
⁄⁄* - 
ResultadoUmaColuna
⁄⁄. @
(
⁄⁄@ A
)
⁄⁄A B
;
⁄⁄B C
dynamic
‹‹ 
	resultado
‹‹ !
=
‹‹" #
db
‹‹$ &
.
‹‹& '
QueryNinjaADO
‹‹' 4
(
‹‹4 5
$str
‹‹5 t
+
‹‹u v
unidade
‹‹w ~
+‹‹ Ä
$str‹‹Å Ü
)‹‹Ü á
;‹‹á à
for
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
i
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
i
ﬁﬁ  !
<
ﬁﬁ" #
	resultado
ﬁﬁ$ -
.
ﬁﬁ- .
Count
ﬁﬁ. 3
;
ﬁﬁ3 4
i
ﬁﬁ5 6
++
ﬁﬁ6 8
)
ﬁﬁ8 9
{
ﬂﬂ 
try
‡‡ 
{
··  
ResultadoUmaColuna
‚‚ *
item
‚‚+ /
=
‚‚0 1
new
‚‚2 5 
ResultadoUmaColuna
‚‚6 H
(
‚‚H I
)
‚‚I J
;
‚‚J K
item
„„ 
.
„„ 
retorno
„„ $
=
„„% &
	resultado
„„' 0
[
„„0 1
i
„„1 2
]
„„2 3
.
„„3 4
retorno
„„4 ;
;
„„; <
s
‰‰ 
.
‰‰ %
ReconsolidationToLevel3
‰‰ 1
(
‰‰1 2
item
‰‰2 6
.
‰‰6 7
retorno
‰‰7 >
.
‰‰> ?
ToString
‰‰? G
(
‰‰G H
)
‰‰H I
)
‰‰I J
;
‰‰J K
System
ÂÂ 
.
ÂÂ 
Console
ÂÂ &
.
ÂÂ& '
Write
ÂÂ' ,
(
ÂÂ, -
$str
ÂÂ- ?
+
ÂÂ@ A
item
ÂÂB F
.
ÂÂF G
retorno
ÂÂG N
.
ÂÂN O
ToString
ÂÂO W
(
ÂÂW X
)
ÂÂX Y
)
ÂÂY Z
;
ÂÂZ [
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË $
)
ËË$ %
{
ÈÈ 
}
ÏÏ 
}
ÌÌ 
}
ÔÔ 
}
ÛÛ 	
}
ˆˆ 
}˙˙ ∫‡
xC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\RelatoriosBrasil\VisaoGeralDaAreaApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
RelatoriosBrasil$ 4
{ 
[ 
RoutePrefix 
( 
$str '
)' (
]( )
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
public 

class )
VisaoGeralDaAreaApiController .
:/ 0
ApiController1 >
{ 
private 
List 
< %
VisaoGeralDaAreaResultSet .
>. /
_mock0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
private 
List 
< %
VisaoGeralDaAreaResultSet .
>. /
_list0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
private 
List 
<  
ResultQueryEvolutivo )
>) *
	_listEvol+ 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
private 
List 
<  
ResultQueryEvolutivo )
>) *
_listEvolReg+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
private 
List 
< $
ListResultQueryEvolutivo -
>- .
	listaRegs/ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
private 
List 
< $
ListResultQueryEvolutivo -
>- .
listaUnidades/ <
{= >
get? B
;B C
setD G
;G H
}I J
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
List 
< %
VisaoGeralDaAreaResultSet -
>- .
Grafico1/ 7
(7 8
[8 9
FromBody9 A
]A B!
DataCarrierFormularioC X
formY ]
)] ^
{ 	

CriaMockG1 
( 
form 
) 
; 
return!! 
_list!! 
;!! 
}"" 	
[$$ 	
HttpPost$$	 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
List&& 
<&& %
VisaoGeralDaAreaResultSet&& -
>&&- .
Grafico2&&/ 7
(&&7 8
[&&8 9
FromBody&&9 A
]&&A B!
DataCarrierFormulario&&C X
form&&Y ]
)&&] ^
{'' 	

CriaMockG2(( 
((( 
form(( 
)(( 
;(( 
return** 
_list** 
;** 
}++ 	
[-- 	
HttpPost--	 
]-- 
[.. 	
Route..	 
(.. 
$str.. 
).. 
].. 
public// 
List// 
<// %
VisaoGeralDaAreaResultSet// -
>//- .
Grafico3/// 7
(//7 8
[//8 9
FromBody//9 A
]//A B!
DataCarrierFormulario//C X
form//Y ]
)//] ^
{00 	

CriaMockG311 
(11 
form11 
)11 
;11 
return22 
_list22 
;22 
}33 	
[55 	
HttpPost55	 
]55 
[66 	
Route66	 
(66 
$str66 
)66 
]66 
public77 
List77 
<77 %
VisaoGeralDaAreaResultSet77 -
>77- .
Grafico477/ 7
(777 8
[778 9
FromBody779 A
]77A B!
DataCarrierFormulario77C X
form77Y ]
)77] ^
{88 	

CriaMockG499 
(99 
form99 
)99 
;99 
return:: 
_mock:: 
;:: 
};; 	
[== 	
HttpPost==	 
]== 
[>> 	
Route>>	 
(>> 
$str>> 
)>> 
]>> 
public?? 
List?? 
<?? %
VisaoGeralDaAreaResultSet?? -
>??- .
Grafico5??/ 7
(??7 8
[??8 9
FromBody??9 A
]??A B!
DataCarrierFormulario??C X
form??Y ]
)??] ^
{@@ 	

CriaMockG5AA 
(AA 
formAA 
)AA 
;AA 
returnBB 
_mockBB 
;BB 
}CC 	
publicEE 
staticEE 
stringEE 
sqlBaseEE $
(EE$ %!
DataCarrierFormularioEE% :
formEE; ?
,EE? @
boolEEA E
	evolutivoEEF O
=EEP Q
falseEEQ V
)EEV W
{FF 	
DateTimeGG 
dtIniGG 
=GG 
formGG !
.GG! "
_dataInicioGG" -
;GG- .
ifHH 
(HH 
	evolutivoHH 
)HH 
{II 
varJJ 
yearJJ 
=JJ 
dtIniJJ  
.JJ  !
YearJJ! %
-JJ& '
$numJJ( )
;JJ) *
dtIniKK 
=KK 
newKK 
DateTimeKK $
(KK$ %
yearKK% )
,KK) *
dtIniKK+ 0
.KK0 1
MonthKK1 6
,KK6 7
formKK8 <
.KK< =
_dataFimKK= E
.KKE F
DayKKF I
)KKI J
;KKJ K
}LL 
varSS 
querySS 
=SS 
$strSS 
+SS 
$strWW Ã
+
WWÕ Œ
$strXX °
+
XX¢ £
$strYY ã
+
YYå ç
$strZZ {
+ZZ| }
$str[[ ã
+
[[å ç
$str\\ à
+
\\â ä
$str]] í
+
]]ì î
$str^^ â
+
^^ä ã
$str__ ì
+
__î ï
$str`` ç
+
``é è
$straa ï
+
aañ ó
$strbb ç
+
bbé è
$strcc ó
+
ccò ô
$strdd â
+
ddä ã
$stree í
+
eeì î
$strff â
+
ffä ã
$strgg ì
+
ggî ï
$strhh å
+
hhç é
$strii å
+
iiç é
$strjj è
+
jjê ë
$strkk ñ
+
kkó ò
$strll ç
+
llé è
$strmm ç
+
mmé è
$strnn ñ
+
nnó ò
$stroo ë
+
ooí ì
$strpp #
+pp# $
$strqq 
+qq  
$strrr |
+rr} ~
$strss {
+ss| }
$strtt {
+tt| }
$struu {
+uu| }
$strvv â
+
vvä ã
$strww {
+ww| }
$strxx ã
+
xxå ç
$stryy }
+yy~ 
$strzz z
+zz{ |
$str{{ ~
+	{{ Ä
$str|| (
+||) *
dtIni||+ 0
.||0 1
ToString||1 9
(||9 :
$str||: D
)||D E
+||F G
$str	||H Ÿ
+
||⁄ €
$str}} (
+}}) *
form}}+ /
.}}/ 0
_dataFimSQL}}0 ;
+}}< =
$str	}}> œ
+
}}– —
$str
ÇÇ 1
+
ÇÇ2 3
$str
ÑÑ '
+
ÑÑ( )
$str
ÖÖ )
+
ÖÖ* +
$str
ÜÜ "
+
ÜÜ# $
$str
áá 5
+
áá6 7
$str
àà 
+
àà 
$str
ãã /
+
ãã0 1
$str
íí  
+
íí! "
$str
îî )
+
îî* +
$str
ïï 8
+
ïï9 :
$strññ É
+ññÑ Ö
$str
óó f
+
óóg h
$str
õõ ;
+
õõ< =
$str
úú ;
+
úú< =
$str
ùù 4
+
ùù5 6
$str
üü ;
+
üü< =
$str
†† -
+
††. /
$str
°° U
+
°°V W
$str
¢¢ 3
+
¢¢4 5
$str
££ /
+
££0 1
$str
§§ <
+
§§= >
$str
•• U
+
••V W
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$str	∂∂ ø
+∂∂¿ ¡
$str	∑∑ ø
+∑∑¿ ¡
$str	∏∏ Ã
+∏∏Õ Œ
$str	ππ Ã
+ππÕ Œ
$str	∫∫ Ã
+∫∫Õ Œ
$str	ªª Ã
+ªªÕ Œ
$str	ºº Ã
+ººÕ Œ
$str	ΩΩ Ã
+ΩΩÕ Œ
$str	ææ Ã
+ææÕ Œ
$str	øø Ã
+øøÕ Œ
$str	¿¿ Ã
+¿¿Õ Œ
$str	¡¡ Ã
+¡¡Õ Œ
$str	¬¬ Ã
+¬¬Õ Œ
$str	√√ Ã
+√√Õ Œ
$str	ƒƒ Ã
+ƒƒÕ Œ
$str	≈≈ Ω
+≈≈æ ø
$str	∆∆ ¿
+∆∆¡ ¬
$str	«« Ã
+««Õ Œ
$str	»» Ã
+»»Õ Œ
$str	…… Ã
+……Õ Œ
$str	   Ã
+  Õ Œ
$str	ÀÀ Ã
+ÀÀÕ Œ
$str	ÃÃ Ã
+ÃÃÕ Œ
$str	ÕÕ Ã
+ÕÕÕ Œ
$str	ŒŒ Ã
+ŒŒÕ Œ
$str	œœ Ã
+œœÕ Œ
$str	–– Ã
+––Õ Œ
$str	—— Ã
+——Õ Œ
$str	““ Ã
+““Õ Œ
$str	”” Ã
+””Õ Œ
$str	‘‘ Ã
+‘‘Õ Œ
$str	’’ Ã
+’’Õ Œ
$str	÷÷ Ã
+÷÷Õ Œ
$str	◊◊ Ã
+◊◊Õ Œ
$str	ÿÿ Ã
+ÿÿÕ Œ
$str	ŸŸ Ã
+ŸŸÕ Œ
$str	⁄⁄ Ã
+⁄⁄Õ Œ
$str	€€ Ã
+€€Õ Œ
$str	‹‹ Ã
+‹‹Õ Œ
$str	›› Ã
+››Õ Œ
$str	ﬁﬁ Ã
+ﬁﬁÕ Œ
$str	ﬂﬂ Ã
+ﬂﬂÕ Œ
$str	‡‡ Ã
+‡‡Õ Œ
$str	·· Ã
+··Õ Œ
$str	‚‚ Ã
+‚‚Õ Œ
$str	„„ Ã
+„„Õ Œ
$str	‰‰ Ã
+‰‰Õ Œ
$str	ÂÂ Ã
+ÂÂÕ Œ
$str	ÊÊ Ã
+ÊÊÕ Œ
$str	ÁÁ Ã
+ÁÁÕ Œ
$str	ËË Ã
+ËËÕ Œ
$str	ÈÈ Ã
+ÈÈÕ Œ
$str	ÍÍ Ã
+ÍÍÕ Œ
$str	ÎÎ Ã
+ÎÎÕ Œ
$str	ÏÏ Ã
+ÏÏÕ Œ
$str	ÌÌ Ã
+ÌÌÕ Œ
$str	ÓÓ Ã
+ÓÓÕ Œ
$str	ÔÔ Ã
+ÔÔÕ Œ
$str	 Ã
+Õ Œ
$str	ÒÒ Ã
+ÒÒÕ Œ
$str	ÚÚ Ã
+ÚÚÕ Œ
$str	ÛÛ Ã
+ÛÛÕ Œ
$str	ÙÙ Ã
+ÙÙÕ Œ
$str	ıı ø
+ıı¿ ¡
$str	ˆˆ ø
+ˆˆ¿ ¡
$str	˜˜ Ã
+˜˜Õ Œ
$str	¯¯ …
+¯¯  À
$str	˘˘ Ó
+˘˘Ô 
$str	˙˙ Ã
+˙˙Õ Œ
$str	˚˚ ø
+˚˚¿ ¡
$str	¸¸ ä
+¸¸ã å
$str	˝˝ Ã
+˝˝Õ Œ
$str	˛˛ Ã
+˛˛Õ Œ
$str	ˇˇ …
+ˇˇ  À
$str	ÄÄ …
+ÄÄ  À
$str	ÅÅ Ã
+ÅÅÕ Œ
$str	ÇÇ ø
+ÇÇ¿ ¡
$str	ÉÉ Ã
+ÉÉÕ Œ
$str	ÑÑ Ã
+ÑÑÕ Œ
$str	ÖÖ …
+ÖÖ  À
$str	ÜÜ …
+ÜÜ  À
$str	áá …
+áá  À
$str	àà …
+àà  À
$str	ââ Ã
+ââÕ Œ
$strää 
+
ää 
$strãã ◊
+ããÿ Ÿ
$str	åå Ã
+ååÕ Œ
$str	çç …
+çç  À
$str	éé Ÿ
+éé⁄ €
$str	èè Ã
+èèÕ Œ
$str	êê ≥
+êê¥ µ
$str	ëë ø
+ëë¿ ¡
$str	íí Ã
+ííÕ Œ
$str	ìì º
+ììΩ æ
$str	îî ∫
+îîª º
$str	ïï ∫
+ïïª º
$str	ññ ∫
+ññª º
$str	óó Ã
+óóÕ Œ
$str	òò ›
+òòﬁ ﬂ
$str	ôô ∫
+ôôª º
$str	öö ∫
+ööª º
$str	õõ ∫
+õõª º
$str	úú ∫
+úúª º
$str	ùù ∫
+ùùª º
$str	ûû º
+ûûΩ æ
$str	üü ∫
+üüª º
$str	†† ﬂ
+††‡ ·
$str	°° ∑
+°°∏ π
$str	¢¢ ∫
+¢¢ª º
$str	££ ø
+££¿ ¡
$str§§ |
+
§§} ~
$str•• ?
+
••@ A
$str	¶¶ „
+¶¶‰ Â
$str	ßß „
+ßß‰ Â
$str	®® „
+®®‰ Â
$str	©© „
+©©‰ Â
$str	™™ „
+™™‰ Â
$str	´´ ‚
+´´„ ‰
$str	¨¨ „
+¨¨‰ Â
$str	≠≠ „
+≠≠‰ Â
$str	ÆÆ „
+ÆÆ‰ Â
$str	ØØ „
+ØØ‰ Â
$str	∞∞ „
+∞∞‰ Â
$str	±± „
+±±‰ Â
$str	≤≤ „
+≤≤‰ Â
$str	≥≥ ê
+≥≥ë í
$str	¥¥ „
+¥¥‰ Â
$str	µµ ã
+µµå ç
$str	∂∂ ã
+∂∂å ç
$str	∑∑ „
+∑∑‰ Â
$str	ππ É
+ππÑ Ö
$str	∫∫ ’
+∫∫÷ ◊
$str	ªª ¬
+ªª√ ƒ
$strΩΩ 
+
ΩΩ 
$str	ææ «
+ææ» …
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ ó
+ŒŒò ô
$strœœ î
+œœï ñ
$str–– õ
+––ú ù
$str—— µ
+——∂ ∑
$str““ ú
+““ù û
$str”” ˙
+””˚ ¸
$str‘‘ Â
+‘‘Ê Á
$str’’ ﬂ
+’’‡ ·
$str÷÷ ù
+÷÷û ü
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ Ú
+ﬁﬁÛ Ù
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ ˛
+ÂÂˇ Ä
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ ©
+ÈÈ™ ´
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜ ˛
+˜˜ˇ Ä
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ ©
+˚˚™ ´
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ í
+ÖÖì î
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå ˛
+ååˇ Ä
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê ©
+êê™ ´
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû ˛
+ûûˇ Ä
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ ©
+¢¢™ ´
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ ï
+¶¶ñ ó
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ ˛
+∞∞ˇ Ä
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ ©
+¥¥™ ´
$strµµ î
+µµï ñ
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ ì
+ŒŒî ï
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‚‚  
+‚‚À Ã
$str„„ À
+„„Ã Õ
$str
‰‰ D
+
‰‰E F
$strÂÂ À
+ÂÂÃ Õ
$strÊÊ ·
+ÊÊ‚ „
$strÁÁ À
+ÁÁÃ Õ
$strËË À
+ËËÃ Õ
$strÈÈ À
+ÈÈÃ Õ
$strÍÍ À
+ÍÍÃ Õ
$strÎÎ £
+ÎÎ§ •
$strÏÏ À
+ÏÏÃ Õ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜
 …
+˜˜  À
$str¯¯ À
+¯¯Ã Õ
$str
˘˘ D
+
˘˘E F
$str˙˙ À
+˙˙Ã Õ
$str˚˚ ·
+˚˚‚ „
$str¸¸ À
+¸¸Ã Õ
$str˝˝ À
+˝˝Ã Õ
$str˛˛ À
+˛˛Ã Õ
$strˇˇ À
+ˇˇÃ Õ
$strÄÄ £
+ÄÄ§ •
$strÅÅ À
+ÅÅÃ Õ
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$str
ââ @
+
ââA B
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$str
óó @
+
óóA B
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° ì
+°°î ï
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™  
+™™À Ã
$str´´ À
+´´Ã Õ
$str
¨¨ D
+
¨¨E F
$str≠≠ À
+≠≠Ã Õ
$strÆÆ ·
+ÆÆ‚ „
$strØØ À
+ØØÃ Õ
$str∞∞ À
+∞∞Ã Õ
$str±± À
+±±Ã Õ
$str≤≤ À
+≤≤Ã Õ
$str≥≥ £
+≥≥§ •
$str¥¥ À
+¥¥Ã Õ
$str∂∂ ê
+∂∂ë í
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿  
+¿¿À Ã
$str¡¡ À
+¡¡Ã Õ
$str
¬¬ D
+
¬¬E F
$str√√ À
+√√Ã Õ
$strƒƒ ·
+ƒƒ‚ „
$str≈≈ À
+≈≈Ã Õ
$str∆∆ À
+∆∆Ã Õ
$str«« À
+««Ã Õ
$str»» À
+»»Ã Õ
$str…… £
+……§ •
$str   À
+  Ã Õ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ î
+œœï ñ
$str
–– D
+
––E F
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ ú
+÷÷ù û
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str
›› D
+
››E F
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ ú
+„„ù û
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ ì
+ÁÁî ï
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ  
+ÌÌÀ Ã
$strÓÓ À
+ÓÓÃ Õ
$str
ÔÔ D
+
ÔÔE F
$str À
+Ã Õ
$strÒÒ ·
+ÒÒ‚ „
$strÚÚ À
+ÚÚÃ Õ
$strÛÛ À
+ÛÛÃ Õ
$strÙÙ À
+ÙÙÃ Õ
$strıı À
+ııÃ Õ
$strˆˆ £
+ˆˆ§ •
$str˜˜ À
+˜˜Ã Õ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ û
+ÇÇü †
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ û
+ÖÖü †
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää û
+ääü †
$strãã û
+ããü †
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé û
+ééü †
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë û
+ëëü †
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî û
+îîü †
$strïï í
+ïïì î
$strññ ‚
+ññ„ ‰
$stróó û
+óóü †
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö û
+ööü †
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù û
+ùùü †
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† û
+††ü †
$str°° î
+°°ï ñ
$str¢¢ ß
+¢¢® ©
$str££ û
+££ü †
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ û
+¶¶ü †
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© û
+©©ü †
$str™™ î
+™™ï ñ
$str´´ ®
+´´© ™
$str¨¨ û
+¨¨ü †
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$str	ØØ î
+ØØï ñ
$str	∞∞ î
+∞∞ï ñ
$str	±± î
+±±ï ñ
$str	≤≤ î
+≤≤ï ñ
$str	≥≥ î
+≥≥ï ñ
$str	¥¥ Œ
+¥¥œ –
$str	µµ î
+µµï ñ
$str	∂∂ î
+∂∂ï ñ
$str	∑∑ î
+∑∑ï ñ
$str	∏∏ î
+∏∏ï ñ
$str	ππ î
+ππï ñ
$str	∫∫ î
+∫∫ï ñ
$str	ªª î
+ªªï ñ
$str	ºº î
+ººï ñ
$str	ΩΩ î
+ΩΩï ñ
$str	ææ î
+ææï ñ
$str	øø î
+øøï ñ
$str	¿¿ î
+¿¿ï ñ
$str	¡¡ î
+¡¡ï ñ
$str	¬¬ î
+¬¬ï ñ
$str	√√ î
+√√ï ñ
$str	ƒƒ î
+ƒƒï ñ
$str	≈≈ î
+≈≈ï ñ
$str	∆∆ î
+∆∆ï ñ
$str	«« î
+««ï ñ
$str	»» î
+»»ï ñ
$str	…… î
+……ï ñ
$str	   î
+  ï ñ
$str	ÀÀ î
+ÀÀï ñ
$str	ÃÃ î
+ÃÃï ñ
$str	ÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ à
+œœâ ä
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· ∆
+··« »
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ ‹
+ÊÊ› ﬁ
$str	ÁÁ ø
+ÁÁ¿ ¡
$strÈÈ 
+
ÈÈ 
$strÍÍ 
+
ÍÍ  
$strÎÎ 
+
ÎÎ  
$strÏÏ 
+
ÏÏ  
$strÌÌ 
+
ÌÌ  
$strÓÓ 
+
ÓÓ  
$strÔÔ 
+
ÔÔ  
$str 
+
  
$strÒÒ 
+
ÒÒ  
$strÚÚ 
+
ÚÚ  
$strÛÛ 
+
ÛÛ  
$strÙÙ 
+
ÙÙ  
$strıı 
+
ıı  
$strˆˆ 
+
ˆˆ  
$str˜˜ 
+
˜˜  
$str¯¯ [
+
¯¯\ ]
$str	˚˚ ø
+˚˚¿ ¡
$str	¸¸ Ã
+¸¸Õ Œ
$str	˝˝ À
+˝˝Ã Õ
$str	˛˛ Ã
+˛˛Õ Œ
$str	ˇˇ ü
+ˇˇ† °
$strÄÄ {
+
ÄÄ| }
$str	ÅÅ à
+ÅÅâ ä
$strÇÇ {
+
ÇÇ| }
$str	ÉÉ Ã
+ÉÉÕ Œ
$strÑÑ {
+
ÑÑ| }
$strÖÖ 	
;
ÖÖ	 

return
áá 
query
áá 
;
áá 
}
ââ 	
private
óó 
void
óó 

CriaMockG1
óó 
(
óó  #
DataCarrierFormulario
óó  5
form
óó6 :
)
óó: ;
{
òò 	
_list
´´ 
=
´´ 
new
´´ 
List
´´ 
<
´´ '
VisaoGeralDaAreaResultSet
´´ 6
>
´´6 7
(
´´7 8
)
´´8 9
;
´´9 :
string
≠≠ 
query
≠≠ 
=
≠≠ +
VisaoGeralDaAreaApiController
≠≠ 8
.
≠≠8 9
sqlBase
≠≠9 @
(
≠≠@ A
form
≠≠A E
)
≠≠E F
+
≠≠G H
$str∞∞ {
+
∞∞| }
$str±± (
+
±±) *
$str≤≤ c
+
≤≤d e
$str≥≥ z
+
≥≥{ |
$str	µµ Ã
+µµÕ Œ
$str	∂∂ »
+∂∂…  
$str	∑∑  
+∑∑À Ã
$str∏∏ $
+
∏∏% &
$str	∫∫ Ã
+∫∫Õ Œ
$str	ªª Ã
+ªªÕ Œ
$str	ºº Ã
+ººÕ Œ
$str	ΩΩ Ä
+ΩΩÅ Ç
$str	ææ ∏
+ææπ ∫
$str	øø ¸
+øø˝ ˛
$str	¿¿ ÷
;¿¿÷ ◊
using
¬¬ 
(
¬¬ 
var
¬¬ 
db
¬¬ 
=
¬¬ 
new
¬¬ 
SgqDbDevEntities
¬¬  0
(
¬¬0 1
)
¬¬1 2
)
¬¬2 3
{
√√ 
_list
ƒƒ 
=
ƒƒ 
db
ƒƒ 
.
ƒƒ 
Database
ƒƒ #
.
ƒƒ# $
SqlQuery
ƒƒ$ ,
<
ƒƒ, -'
VisaoGeralDaAreaResultSet
ƒƒ- F
>
ƒƒF G
(
ƒƒG H
query
ƒƒH M
)
ƒƒM N
.
ƒƒN O
ToList
ƒƒO U
(
ƒƒU V
)
ƒƒV W
;
ƒƒW X
}
≈≈ 
}
…… 	
private
◊◊ 
void
◊◊ 

CriaMockG2
◊◊ 
(
◊◊  #
DataCarrierFormulario
◊◊  5
form
◊◊6 :
)
◊◊: ;
{
ÿÿ 	
_list
ÎÎ 
=
ÎÎ 
new
ÎÎ 
List
ÎÎ 
<
ÎÎ '
VisaoGeralDaAreaResultSet
ÎÎ 6
>
ÎÎ6 7
(
ÎÎ7 8
)
ÎÎ8 9
;
ÎÎ9 :
string
ÌÌ 
query
ÌÌ 
=
ÌÌ +
VisaoGeralDaAreaApiController
ÌÌ 8
.
ÌÌ8 9
sqlBase
ÌÌ9 @
(
ÌÌ@ A
form
ÌÌA E
)
ÌÌE F
+
ÌÌG H
$strÔÔ (
+
ÔÔ) *
$str *
+
+ ,
$strÒÒ c
+
ÒÒd e
$strÚÚ y
+
ÚÚz {
$strÛÛ f
+
ÛÛg h
$str
ÙÙ V
+
ÙÙW X
form
ÙÙY ]
.
ÙÙ] ^
Query
ÙÙ^ c
.
ÙÙc d
ToString
ÙÙd l
(
ÙÙl m
)
ÙÙm n
+
ÙÙo p
$strÙÙq ï
+ÙÙñ ó
$strıı 
+
ıı 
$strˆˆ 
+
ˆˆ  !
$str	˜˜ û
+˜˜ü †
$str¯¯ %
+
¯¯& '
$str˘˘ (
+
˘˘) *
$str˙˙ 
+
˙˙ 
$str˚˚ (
+
˚˚) *
$str¸¸ %
+
¸¸& '
$str˝˝ 
+
˝˝ 
$str˛˛ !
+
˛˛" #
$strˇˇ 
+
ˇˇ 
$strÄÄ U
+
ÄÄV W
$strÅÅ 
+
ÅÅ 
form
ÅÅ 
.
ÅÅ 
Query
ÅÅ #
.
ÅÅ# $
ToString
ÅÅ$ ,
(
ÅÅ, -
)
ÅÅ- .
+
ÅÅ/ 0
$str
ÅÅ1 I
+
ÅÅJ K
$strÇÇ M
;
ÇÇM N
using
ÑÑ 
(
ÑÑ 
var
ÑÑ 
db
ÑÑ 
=
ÑÑ 
new
ÑÑ 
SgqDbDevEntities
ÑÑ  0
(
ÑÑ0 1
)
ÑÑ1 2
)
ÑÑ2 3
{
ÖÖ 
_list
ÜÜ 
=
ÜÜ 
db
ÜÜ 
.
ÜÜ 
Database
ÜÜ #
.
ÜÜ# $
SqlQuery
ÜÜ$ ,
<
ÜÜ, -'
VisaoGeralDaAreaResultSet
ÜÜ- F
>
ÜÜF G
(
ÜÜG H
query
ÜÜH M
)
ÜÜM N
.
ÜÜN O
ToList
ÜÜO U
(
ÜÜU V
)
ÜÜV W
;
ÜÜW X
}
áá 
}
ãã 	
private
ôô 
void
ôô 

CriaMockG3
ôô 
(
ôô  #
DataCarrierFormulario
ôô  5
form
ôô6 :
)
ôô: ;
{
öö 	
var
õõ $
primeiroDiaMesAnterior
õõ &
=
õõ' (
Guard
õõ) .
.
õõ. /$
PrimeiroDiaMesAnterior
õõ/ E
(
õõE F
form
õõF J
.
õõJ K
_dataInicio
õõK V
)
õõV W
;
õõW X
var
úú 
proximoDomingo
úú 
=
úú  
Guard
úú! &
.
úú& '
GetNextWeekday
úú' 5
(
úú5 6
form
úú6 :
.
úú: ;
_dataFim
úú; C
,
úúC D
	DayOfWeek
úúE N
.
úúN O
Sunday
úúO U
)
úúU V
;
úúV W
_list
‘‘ 
=
‘‘ 
new
‘‘ 
List
‘‘ 
<
‘‘ '
VisaoGeralDaAreaResultSet
‘‘ 6
>
‘‘6 7
(
‘‘7 8
)
‘‘8 9
;
‘‘9 :
string
÷÷ 
query
÷÷ 
=
÷÷ 
$str
÷÷ 
+
÷÷ 
$str
ÿÿ 1
+
ÿÿ2 3
form
ÿÿ4 8
.
ÿÿ8 9
_dataFimSQL
ÿÿ9 D
+
ÿÿE F
$str
ÿÿG K
+
ÿÿL M
$str
ŸŸ Q
+
ŸŸR S
$str
⁄⁄ e
+
⁄⁄f g
$str
€€ >
+
€€? @
$str
‹‹ 7
+
‹‹8 9
$str
›› 
+
›› 
$str
ﬁﬁ 0
+
ﬁﬁ1 2
$str
ﬂﬂ +
+
ﬂﬂ, -
$str
‡‡ H
+
‡‡I J
$str
·· 
+
·· 
$str
ÊÊ ;
+
ÊÊ< =
$str
ÁÁ c
+
ÁÁd e
$str
ËË [
+
ËË\ ]
form
ËË^ b
.
ËËb c
ParametroTableCol
ËËc t
[
ËËt u
$num
ËËu v
]
ËËv w
+
ËËx y
$str
ËËz 
+ËËÄ Å
$str
ÏÏ 6
+
ÏÏ7 8
$str
ÌÌ *
+
ÌÌ+ ,
$str
ÓÓ ,
+
ÓÓ- .
$str
ÔÔ %
+
ÔÔ& '
$str
 '
+
( )
$str
ÒÒ 
+
ÒÒ 
$str
ÚÚ 3
+
ÚÚ4 5
$str
ÛÛ 
+
ÛÛ  
$str
ÙÙ ,
+
ÙÙ- .
$str
ıı #
+
ıı$ %
$str
ˆˆ +
+
ˆˆ, -
$str
˜˜ 
+
˜˜ 
$str
¯¯ 
+
¯¯ 
$str
˘˘ "
+
˘˘# $
$str
˙˙ C
+
˙˙D E
$str
˚˚ -
+
˚˚. /
$str
¸¸ :
+
¸¸; <
$str
˝˝ 7
+
˝˝8 9
$str
˛˛ -
+
˛˛. /
$str
ˇˇ W
+
ˇˇX Y
$str
ÄÄ =
+
ÄÄ> ?
$str
ÅÅ <
+
ÅÅ= >
$str
ÇÇ 6
+
ÇÇ7 8
$str
ÉÉ <
+
ÉÉ= >
$str
ÑÑ /
+
ÑÑ0 1
$str
ÖÖ e
+
ÖÖf g
$str
ÜÜ 5
+
ÜÜ6 7
$str
áá 1
+
áá2 3
$str
àà >
+
àà? @
$str
ââ o
+
ââp q
$str
ää 
+
ää 
$str
ãã 3
+
ãã4 5
$str
çç )
+
çç* +
$str
éé 
+
éé  
$str
èè %
+
èè& '
$str
êê (
+
êê) *
$str
ëë $
+
ëë% &
$str
íí !
+
íí" #
$str
ìì &
+
ìì' (
$str
îî .
+
îî/ 0
$str
ïï A
+
ïïB C
$str
ññ C
+
ññD E
$str
óó A
+
óóB C
$str
òò j
+
òòk l
$str
ôô q
+
ôôr s
$str
öö 8
+
öö9 :
$str
õõ 5
+
õõ6 7
$str
úú .
+
úú/ 0
$str
ùù $
+
ùù% &
$str
ûû ,
+
ûû- .
$strüü ∂
+üü∑ ∏
$str
†† 
+
††  
$str
°° "
+
°°# $
$str
¢¢ $
+
¢¢% &
$str
££ 2
+
££3 4
$str
§§ %
+
§§& '
$str
•• "
+
••# $
$str
¶¶ (
+
¶¶) *
$strßß Ü
+ßßá à
$str
®® )
+
®®* +
$str
©© (
+
©©) *
$str
™™ %
+
™™& '
$str
´´ 
+
´´ 
$str
¨¨ 
+
¨¨ 
$str
≠≠ "
+
≠≠# $
$str
ÆÆ 
+
ÆÆ 
$str
∞∞ k
+
∞∞l m
$str±±  
+±±À Ã
$str
≥≥  
+
≥≥! "
$str
¥¥ 
+
¥¥ 
$str
µµ &
+
µµ' (
$str
∑∑ S
+
∑∑T U
$str
∏∏ T
+
∏∏U V
$str
ππ S
+
ππT U
$str
∫∫ 5
+
∫∫6 7
$str
ªª Y
+
ªªZ [
$str
ºº N
+
ººO P
$str
ΩΩ &
+
ΩΩ' (
$strææ ¿
+ææ¡ ¬
$str
øø W
+
øøX Y
$str
¿¿ W
+
¿¿X Y
$str
¡¡ Y
+
¡¡Z [
$str
¬¬ O
+
¬¬P Q
$str
√√ &
+
√√' (
$str
ƒƒ )
+
ƒƒ* +
$str
≈≈ $
+
≈≈% &
$str∆∆ ¿
+∆∆¡ ¬
$str
«« W
+
««X Y
$str
»» W
+
»»X Y
$str
…… Y
+
……Z [
$str
   O
+
  P Q
$str
ÀÀ &
+
ÀÀ' (
$str
ÃÃ /
+
ÃÃ0 1
$str
ÕÕ &
+
ÕÕ' (
$str
ŒŒ T
+
ŒŒU V
$str
œœ T
+
œœU V
$str
–– W
+
––X Y
$str
—— S
+
——T U
$str
““ &
+
““' (
$str
”” )
+
””* +
$str
‘‘ &
+
‘‘' (
$str
’’ V
+
’’W X
$str
÷÷ V
+
÷÷W X
$str
◊◊ W
+
◊◊X Y
$str
ÿÿ S
+
ÿÿT U
$str
ŸŸ &
+
ŸŸ' (
$str
⁄⁄ 0
+
⁄⁄1 2
$str
€€ 
+
€€ 
$str
‹‹ 
+
‹‹ 
$strﬂﬂ ”
+ﬂﬂ‘ ’
$str‡‡ ç
+‡‡é è
$str
„„  
+
„„! "
$str‰‰ 
+‰‰Ò Ú
$str
ÂÂ 
+
ÂÂ 
$str
ÊÊ  
+
ÊÊ! "
$str
ÁÁ A
+
ÁÁB C
$str
ËË 2
+
ËË3 4
$str
ÍÍ 3
+
ÍÍ4 5
$strÏÏ ¨
+ÏÏ≠ Æ
$str
ÓÓ C
+
ÓÓD E
$str
 @
+
A B
$str
ÚÚ L
+
ÚÚM N
form
ÚÚO S
.
ÚÚS T
ParametroTableRow
ÚÚT e
[
ÚÚe f
$num
ÚÚf g
]
ÚÚg h
+
ÚÚi j
$str
ÚÚk o
+
ÚÚp q
$str
ÙÙ A
+
ÙÙB C
$str
ˆˆ K
+
ˆˆL M
$str
˜˜ E
+
˜˜F G
$str
¯¯ 6
+
¯¯7 8
$str
˘˘ 9
+
˘˘: ;
$str
¸¸ )
+
¸¸* +
$str
˝˝ !
+
˝˝" #
$str
˛˛ *
+
˛˛+ ,
$str
Ä	Ä	 .
+
Ä	Ä	/ 0
$str
Å	Å	 0
+
Å	Å	1 2
$str
Ç	Ç	 O
+
Ç	Ç	P Q
$str
É	É	 2
+
É	É	3 4
$str
Ñ	Ñ	 0
+
Ñ	Ñ	1 2
$str
Ö	Ö	 +
+
Ö	Ö	, -
$strà	à	 ®
+à	à	© ™
$str
ã	ã	 E
+
ã	ã	F G
$str
ç	ç	 Q
+
ç	ç	R S
$str
è	è	 E
+
è	è	F G
$str
ë	ë	 ;
+
ë	ë	< =
$str
ì	ì	 I
+
ì	ì	J K
$str
ï	ï	 :
+
ï	ï	; <
$str
ó	ó	 =
+
ó	ó	> ?
$str
ö	ö	 ,
+
ö	ö	- .
$str
ú	ú	 +
+
ú	ú	, -
$str
ù	ù	 -
+
ù	ù	. /
$str
û	û	 /
+
û	û	0 1
$str
ü	ü	 ,
+
ü	ü	- .
$str
°	°	 '
+
°	°	( )
$str
£	£	 r
+
£	£	s t
$str
ß	ß	 
+
ß	ß	  !
$str
®	®	 
+
®	®	 
$str
©	©	 j
+
©	©	k l
form
©	©	m q
.
©	©	q r 
ParametroTableRow©	©	r É
[©	©	É Ñ
$num©	©	Ñ Ö
]©	©	Ö Ü
+©	©	á à
$str©	©	â ¶
+©	©	ß ®
$str
™	™	 d
+
™	™	e f
$str
´	´	 "
+
´	´	# $
$str
¨	¨	 2
;
¨	¨	2 3
using
Æ	Æ	 
(
Æ	Æ	 
var
Æ	Æ	 
db
Æ	Æ	 
=
Æ	Æ	 
new
Æ	Æ	 
SgqDbDevEntities
Æ	Æ	  0
(
Æ	Æ	0 1
)
Æ	Æ	1 2
)
Æ	Æ	2 3
{
Ø	Ø	 
_list
∞	∞	 
=
∞	∞	 
db
∞	∞	 
.
∞	∞	 
Database
∞	∞	 #
.
∞	∞	# $
SqlQuery
∞	∞	$ ,
<
∞	∞	, -'
VisaoGeralDaAreaResultSet
∞	∞	- F
>
∞	∞	F G
(
∞	∞	G H
query
∞	∞	H M
)
∞	∞	M N
.
∞	∞	N O
ToList
∞	∞	O U
(
∞	∞	U V
)
∞	∞	V W
;
∞	∞	W X
}
±	±	 
}
¥	¥	 	
private
≈	≈	 
void
≈	≈	 

CriaMockG4
≈	≈	 
(
≈	≈	  #
DataCarrierFormulario
≈	≈	  5
form
≈	≈	6 :
)
≈	≈	: ;
{
∆	∆	 	
_mock
«	«	 
=
«	«	 
new
«	«	 
List
«	«	 
<
«	«	 '
VisaoGeralDaAreaResultSet
«	«	 6
>
«	«	6 7
(
«	«	7 8
)
«	«	8 9
;
«	«	9 :
_mock
…	…	 
.
…	…	 
Add
…	…	 
(
…	…	 
new
…	…	 '
VisaoGeralDaAreaResultSet
…	…	 3
(
…	…	3 4
)
…	…	4 5
{
 	 	 
nc
À	À	 
=
À	À	 
$num
À	À	 
,
À	À	 
procentagemNc
Ã	Ã	 
=
Ã	Ã	 
$num
Ã	Ã	  #
,
Ã	Ã	# $
av
Õ	Õ	 
=
Õ	Õ	 
$num
Õ	Õ	 
,
Õ	Õ	 

level1Name
Œ	Œ	 
=
Œ	Œ	 
$str
Œ	Œ	 +
,
Œ	Œ	+ ,

level2Name
œ	œ	 
=
œ	œ	 
$str
œ	œ	 +
,
œ	œ	+ ,
level1Id
–	–	 
=
–	–	 
$num
–	–	 
,
–	–	 
level2Id
—	—	 
=
—	—	 
$num
—	—	 
,
—	—	 
}
“	“	 
)
“	“	 
;
“	“	 
_mock
‘	‘	 
.
‘	‘	 
Add
‘	‘	 
(
‘	‘	 
new
‘	‘	 '
VisaoGeralDaAreaResultSet
‘	‘	 3
(
‘	‘	3 4
)
‘	‘	4 5
{
’	’	 
nc
÷	÷	 
=
÷	÷	 
$num
÷	÷	 
,
÷	÷	 
procentagemNc
◊	◊	 
=
◊	◊	 
$num
◊	◊	  %
,
◊	◊	% &
av
ÿ	ÿ	 
=
ÿ	ÿ	 
$num
ÿ	ÿ	 
,
ÿ	ÿ	 

level1Name
Ÿ	Ÿ	 
=
Ÿ	Ÿ	 
$str
Ÿ	Ÿ	 +
,
Ÿ	Ÿ	+ ,

level2Name
⁄	⁄	 
=
⁄	⁄	 
$str
⁄	⁄	 +
,
⁄	⁄	+ ,
level1Id
€	€	 
=
€	€	 
$num
€	€	 
,
€	€	 
level2Id
‹	‹	 
=
‹	‹	 
$num
‹	‹	 
,
‹	‹	 
}
›	›	 
)
›	›	 
;
›	›	 
}
ﬂ	ﬂ	 	
private
Ú	Ú	 
void
Ú	Ú	 

CriaMockG5
Ú	Ú	 
(
Ú	Ú	  #
DataCarrierFormulario
Ú	Ú	  5
form
Ú	Ú	6 :
)
Ú	Ú	: ;
{
Û	Û	 	
_mock
Ù	Ù	 
=
Ù	Ù	 
new
Ù	Ù	 
List
Ù	Ù	 
<
Ù	Ù	 '
VisaoGeralDaAreaResultSet
Ù	Ù	 6
>
Ù	Ù	6 7
(
Ù	Ù	7 8
)
Ù	Ù	8 9
;
Ù	Ù	9 :
_mock
ˆ	ˆ	 
.
ˆ	ˆ	 
Add
ˆ	ˆ	 
(
ˆ	ˆ	 
new
ˆ	ˆ	 '
VisaoGeralDaAreaResultSet
ˆ	ˆ	 3
(
ˆ	ˆ	3 4
)
ˆ	ˆ	4 5
{
˜	˜	 
nc
¯	¯	 
=
¯	¯	 
$num
¯	¯	 
,
¯	¯	 
procentagemNc
˘	˘	 
=
˘	˘	 
$num
˘	˘	  #
,
˘	˘	# $
av
˙	˙	 
=
˙	˙	 
$num
˙	˙	 
,
˙	˙	 

level1Name
˚	˚	 
=
˚	˚	 
$str
˚	˚	 +
,
˚	˚	+ ,

level2Name
¸	¸	 
=
¸	¸	 
$str
¸	¸	 +
,
¸	¸	+ ,

level3Name
˝	˝	 
=
˝	˝	 
$str
˝	˝	 +
,
˝	˝	+ ,
level1Id
˛	˛	 
=
˛	˛	 
$num
˛	˛	 
,
˛	˛	 
level2Id
ˇ	ˇ	 
=
ˇ	ˇ	 
$num
ˇ	ˇ	 
,
ˇ	ˇ	 
level3Id
Ä
Ä
 
=
Ä
Ä
 
$num
Ä
Ä
 
,
Ä
Ä
 
}
Å
Å
 
)
Å
Å
 
;
Å
Å
 
_mock
É
É
 
.
É
É
 
Add
É
É
 
(
É
É
 
new
É
É
 '
VisaoGeralDaAreaResultSet
É
É
 3
(
É
É
3 4
)
É
É
4 5
{
Ñ
Ñ
 
nc
Ö
Ö
 
=
Ö
Ö
 
$num
Ö
Ö
 
,
Ö
Ö
 
procentagemNc
Ü
Ü
 
=
Ü
Ü
 
$num
Ü
Ü
  %
,
Ü
Ü
% &
av
á
á
 
=
á
á
 
$num
á
á
 
,
á
á
 

level1Name
à
à
 
=
à
à
 
$str
à
à
 +
,
à
à
+ ,

level2Name
â
â
 
=
â
â
 
$str
â
â
 +
,
â
â
+ ,

level3Name
ä
ä
 
=
ä
ä
 
$str
ä
ä
 +
,
ä
ä
+ ,
level1Id
ã
ã
 
=
ã
ã
 
$num
ã
ã
 
,
ã
ã
 
level2Id
å
å
 
=
å
å
 
$num
å
å
 
,
å
å
 
level3Id
ç
ç
 
=
ç
ç
 
$num
ç
ç
 
,
ç
ç
 
}
é
é
 
)
é
é
 
;
é
é
 
_mock
è
è
 
.
è
è
 
Add
è
è
 
(
è
è
 
new
è
è
 '
VisaoGeralDaAreaResultSet
è
è
 3
(
è
è
3 4
)
è
è
4 5
{
ê
ê
 
nc
ë
ë
 
=
ë
ë
 
$num
ë
ë
 
,
ë
ë
 
procentagemNc
í
í
 
=
í
í
 
$num
í
í
  %
,
í
í
% &
av
ì
ì
 
=
ì
ì
 
$num
ì
ì
 
,
ì
ì
 

level1Name
î
î
 
=
î
î
 
$str
î
î
 +
,
î
î
+ ,

level2Name
ï
ï
 
=
ï
ï
 
$str
ï
ï
 +
,
ï
ï
+ ,

level3Name
ñ
ñ
 
=
ñ
ñ
 
$str
ñ
ñ
 +
,
ñ
ñ
+ ,
level1Id
ó
ó
 
=
ó
ó
 
$num
ó
ó
 
,
ó
ó
 
level2Id
ò
ò
 
=
ò
ò
 
$num
ò
ò
 
,
ò
ò
 
level3Id
ô
ô
 
=
ô
ô
 
$num
ô
ô
 
,
ô
ô
 
}
ö
ö
 
)
ö
ö
 
;
ö
ö
 
}
ú
ú
 	
[
û
û
 	
HttpPost
û
û
	 
]
û
û
 
[
ü
ü
 	
Route
ü
ü
	 
(
ü
ü
 
$str
ü
ü
 (
)
ü
ü
( )
]
ü
ü
) *
public
†
†
 
List
†
†
 
<
†
†
 "
ResultQueryEvolutivo
†
†
 (
>
†
†
( )%
GraficoEvolutivoEmpresa
†
†
* A
(
†
†
A B
[
†
†
B C
FromBody
†
†
C K
]
†
†
K L#
DataCarrierFormulario
†
†
M b
form
†
†
c g
)
†
†
g h
{
°
°
 	-
CriaMockGraficoEvolutivoEmpresa
¢
¢
 +
(
¢
¢
+ ,
form
¢
¢
, 0
)
¢
¢
0 1
;
¢
¢
1 2
return
§
§
 
	_listEvol
§
§
 
;
§
§
 
}
•
•
 	
private
¶
¶
 
void
¶
¶
 -
CriaMockGraficoEvolutivoEmpresa
¶
¶
 4
(
¶
¶
4 5#
DataCarrierFormulario
¶
¶
5 J
form
¶
¶
K O
)
¶
¶
O P
{
ß
ß
 	
_list
®
®
 
=
®
®
 
new
®
®
 
List
®
®
 
<
®
®
 '
VisaoGeralDaAreaResultSet
®
®
 6
>
®
®
6 7
(
®
®
7 8
)
®
®
8 9
;
®
®
9 :
string
™
™
 
query
™
™
 
=
™
™
 +
VisaoGeralDaAreaApiController
™
™
 8
.
™
™
8 9
sqlBase
™
™
9 @
(
™
™
@ A
form
™
™
A E
,
™
™
E F
true
™
™
F J
)
™
™
J K
+
™
™
L M
$str	≠
≠
 Ã
+≠
≠
Õ Œ
$str	Æ
Æ
 ƒ
+Æ
Æ
≈ ∆
$strØ
Ø
 
+
Ø
Ø
 
$str	∞
∞
 †
+∞
∞
° ¢
$str	±
±
 ≤
+±
±
≥ ¥
$str≤
≤
 =
+
≤
≤
> ?
$str≥
≥
 _
+
≥
≥
` a
$str¥
¥
 o
+
¥
¥
o p
$strµ
µ
 .
;
µ
µ
. /
using
∑
∑
 
(
∑
∑
 
var
∑
∑
 
db
∑
∑
 
=
∑
∑
 
new
∑
∑
 
SgqDbDevEntities
∑
∑
  0
(
∑
∑
0 1
)
∑
∑
1 2
)
∑
∑
2 3
{
∏
∏
 
	_listEvol
π
π
 
=
π
π
 
db
π
π
 
.
π
π
 
Database
π
π
 '
.
π
π
' (
SqlQuery
π
π
( 0
<
π
π
0 1"
ResultQueryEvolutivo
π
π
1 E
>
π
π
E F
(
π
π
F G
query
π
π
G L
)
π
π
L M
.
π
π
M N
ToList
π
π
N T
(
π
π
T U
)
π
π
U V
;
π
π
V W
}
∫
∫
 
}
º
º
 	
[
Ω
Ω
 	
HttpPost
Ω
Ω
	 
]
Ω
Ω
 
[
æ
æ
 	
Route
æ
æ
	 
(
æ
æ
 
$str
æ
æ
 )
)
æ
æ
) *
]
æ
æ
* +
public
ø
ø
 
List
ø
ø
 
<
ø
ø
 &
ListResultQueryEvolutivo
ø
ø
 ,
>
ø
ø
, -&
GraficoEvolutivoRegional
ø
ø
. F
(
ø
ø
F G
[
ø
ø
G H
FromBody
ø
ø
H P
]
ø
ø
P Q#
DataCarrierFormulario
ø
ø
R g
form
ø
ø
h l
)
ø
ø
l m
{
¿
¿
 	.
 CriaMockGraficoEvolutivoRegional
¡
¡
 ,
(
¡
¡
, -
form
¡
¡
- 1
)
¡
¡
1 2
;
¡
¡
2 3
return
√
√
 
	listaRegs
√
√
 
;
√
√
 
}
ƒ
ƒ
 	
private
≈
≈
 
void
≈
≈
 .
 CriaMockGraficoEvolutivoRegional
≈
≈
 5
(
≈
≈
5 6#
DataCarrierFormulario
≈
≈
6 K
form
≈
≈
L P
)
≈
≈
P Q
{
∆
∆
 	
List
»
»
 
<
»
»
 
ParStructure
»
»
 
>
»
»
 
list
»
»
 #
=
»
»
$ %
null
»
»
& *
;
»
»
* +
using
…
…
 
(
…
…
 
var
…
…
 
db
…
…
 
=
…
…
 
new
…
…
 
SgqDbDevEntities
…
…
  0
(
…
…
0 1
)
…
…
1 2
)
…
…
2 3
{
 
 
 
string
À
À
 
consulta
À
À
 
=
À
À
  !
$str
À
À
" \
;
À
À
\ ]
list
Ã
Ã
 
=
Ã
Ã
 
db
Ã
Ã
 
.
Ã
Ã
 
Database
Ã
Ã
 "
.
Ã
Ã
" #
SqlQuery
Ã
Ã
# +
<
Ã
Ã
+ ,
ParStructure
Ã
Ã
, 8
>
Ã
Ã
8 9
(
Ã
Ã
9 :
consulta
Ã
Ã
: B
)
Ã
Ã
B C
.
Ã
Ã
C D
ToList
Ã
Ã
D J
(
Ã
Ã
J K
)
Ã
Ã
K L
;
Ã
Ã
L M
}
Õ
Õ
 
	listaRegs
œ
œ
 
=
œ
œ
 
new
œ
œ
 
List
œ
œ
  
<
œ
œ
  !&
ListResultQueryEvolutivo
œ
œ
! 9
>
œ
œ
9 :
(
œ
œ
: ;
)
œ
œ
; <
;
œ
œ
< =
foreach
–
–
 
(
–
–
 
var
–
–
 
item
–
–
 
in
–
–
  
list
–
–
! %
)
–
–
% &
{
—
—
 
string
“
“
 
query
“
“
 
=
“
“
 +
VisaoGeralDaAreaApiController
“
“
 <
.
“
“
< =
sqlBase
“
“
= D
(
“
“
D E
form
“
“
E I
,
“
“
I J
true
“
“
K O
)
“
“
O P
+
“
“
Q R
$str
‘
‘
 ^
+
‘
‘
_ `
$str’
’
 Ã
+’
’
Õ Œ
$str
÷
÷
 
+
÷
÷
 
$str◊
◊
 ®
+◊
◊
© ™
$strÿ
ÿ
 ∫
+ÿ
ÿ
ª º
$str
Ÿ
Ÿ
 E
+
Ÿ
Ÿ
F G
$str
⁄
⁄
 g
+
⁄
⁄
h i
$str
€
€
 w
+
€
€
x y
$str
‹
‹
 V
+
‹
‹
W X
$str
›
›
 
+
›
›
  
item
›
›
! %
.
›
›
% &
Id
›
›
& (
+
›
›
) *
$str
›
›
+ A
+
›
›
B C
form
›
›
D H
.
›
›
H I
	auditorId
›
›
I R
+
›
›
S T
$str
ﬁ
ﬁ
 H
+
ﬁ
ﬁ
I J
$str
ﬂ
ﬂ
 $
;
ﬂ
ﬂ
$ %
using
·
·
 
(
·
·
 
var
·
·
 
db
·
·
 
=
·
·
 
new
·
·
  #
SgqDbDevEntities
·
·
$ 4
(
·
·
4 5
)
·
·
5 6
)
·
·
6 7
{
‚
‚
 &
ListResultQueryEvolutivo
„
„
 ,
it
„
„
- /
=
„
„
0 1
new
„
„
2 5&
ListResultQueryEvolutivo
„
„
6 N
(
„
„
N O
)
„
„
O P
;
„
„
P Q
it
‰
‰
 
.
‰
‰
 
lista
‰
‰
 
=
‰
‰
 
db
‰
‰
 !
.
‰
‰
! "
Database
‰
‰
" *
.
‰
‰
* +
SqlQuery
‰
‰
+ 3
<
‰
‰
3 4"
ResultQueryEvolutivo
‰
‰
4 H
>
‰
‰
H I
(
‰
‰
I J
query
‰
‰
J O
)
‰
‰
O P
.
‰
‰
P Q
ToList
‰
‰
Q W
(
‰
‰
W X
)
‰
‰
X Y
;
‰
‰
Y Z
	listaRegs
Â
Â
 
.
Â
Â
 
Add
Â
Â
 !
(
Â
Â
! "
it
Â
Â
" $
)
Â
Â
$ %
;
Â
Â
% &
}
Ê
Ê
 
}
Ë
Ë
 
}
È
È
 	
[
Í
Í
 	
HttpPost
Í
Í
	 
]
Í
Í
 
[
Î
Î
 	
Route
Î
Î
	 
(
Î
Î
 
$str
Î
Î
 (
)
Î
Î
( )
]
Î
Î
) *
public
Ï
Ï
 
List
Ï
Ï
 
<
Ï
Ï
 &
ListResultQueryEvolutivo
Ï
Ï
 ,
>
Ï
Ï
, -%
GraficoEvolutivoUnidade
Ï
Ï
. E
(
Ï
Ï
E F
[
Ï
Ï
F G
FromBody
Ï
Ï
G O
]
Ï
Ï
O P#
DataCarrierFormulario
Ï
Ï
Q f
form
Ï
Ï
g k
)
Ï
Ï
k l
{
Ì
Ì
 	-
CriaMockGraficoEvolutivoUnidade
Ó
Ó
 +
(
Ó
Ó
+ ,
form
Ó
Ó
, 0
)
Ó
Ó
0 1
;
Ó
Ó
1 2
return


 
listaUnidades


  
;


  !
}
Ò
Ò
 	
private
Ú
Ú
 
void
Ú
Ú
 -
CriaMockGraficoEvolutivoUnidade
Ú
Ú
 4
(
Ú
Ú
4 5#
DataCarrierFormulario
Ú
Ú
5 J
form
Ú
Ú
K O
)
Ú
Ú
O P
{
Û
Û
 	
List
ı
ı
 
<
ı
ı
 "
ParCompanyXStructure
ı
ı
 %
>
ı
ı
% &
list
ı
ı
' +
=
ı
ı
, -
null
ı
ı
. 2
;
ı
ı
2 3
using
ˆ
ˆ
 
(
ˆ
ˆ
 
var
ˆ
ˆ
 
db
ˆ
ˆ
 
=
ˆ
ˆ
 
new
ˆ
ˆ
 
SgqDbDevEntities
ˆ
ˆ
  0
(
ˆ
ˆ
0 1
)
ˆ
ˆ
1 2
)
ˆ
ˆ
2 3
{
˜
˜
 
string
¯
¯
 
consulta
¯
¯
 
=
¯
¯
  !
$str
¯
¯
" ^
+
¯
¯
^ _
form
¯
¯
_ c
.
¯
¯
c d
Query
¯
¯
d i
;
¯
¯
i j
list
˘
˘
 
=
˘
˘
 
db
˘
˘
 
.
˘
˘
 
Database
˘
˘
 "
.
˘
˘
" #
SqlQuery
˘
˘
# +
<
˘
˘
+ ,"
ParCompanyXStructure
˘
˘
, @
>
˘
˘
@ A
(
˘
˘
A B
consulta
˘
˘
B J
)
˘
˘
J K
.
˘
˘
K L
ToList
˘
˘
L R
(
˘
˘
R S
)
˘
˘
S T
;
˘
˘
T U
}
˙
˙
 
listaUnidades
¸
¸
 
=
¸
¸
 
new
¸
¸
 
List
¸
¸
  $
<
¸
¸
$ %&
ListResultQueryEvolutivo
¸
¸
% =
>
¸
¸
= >
(
¸
¸
> ?
)
¸
¸
? @
;
¸
¸
@ A
foreach
˝
˝
 
(
˝
˝
 
var
˝
˝
 
item
˝
˝
 
in
˝
˝
  
list
˝
˝
! %
)
˝
˝
% &
{
˛
˛
 
string
ˇ
ˇ
 
query
ˇ
ˇ
 
=
ˇ
ˇ
 +
VisaoGeralDaAreaApiController
ˇ
ˇ
 <
.
ˇ
ˇ
< =
sqlBase
ˇ
ˇ
= D
(
ˇ
ˇ
D E
form
ˇ
ˇ
E I
,
ˇ
ˇ
I J
true
ˇ
ˇ
K O
)
ˇ
ˇ
O P
+
ˇ
ˇ
Q R
$str
ÅÅ o
+
ÅÅp q
$strÇÇ Ã
+ÇÇÕ Œ
$str
ÉÉ 
+
ÉÉ 
$strÑÑ ®
+ÑÑ© ™
$strÖÖ ∫
+ÖÖª º
$str
ÜÜ E
+
ÜÜF G
$str
áá g
+
ááh i
$str
àà w
+
ààx y
$str
ââ V
+
ââW X
$str
ää '
+
ää( )
item
ää* .
.
ää. /
ParCompany_Id
ää/ <
+
ää= >
$str
ää? U
+
ääV W
form
ääX \
.
ää\ ]
	auditorId
ää] f
+
ääg h
$strääi Ö
+ääÜ á
$str
ãã W
+
ããX Y
$str
åå 
;
åå 
using
éé 
(
éé 
var
éé 
db
éé 
=
éé 
new
éé  #
SgqDbDevEntities
éé$ 4
(
éé4 5
)
éé5 6
)
éé6 7
{
èè &
ListResultQueryEvolutivo
êê ,
it
êê- /
=
êê0 1
new
êê2 5&
ListResultQueryEvolutivo
êê6 N
(
êêN O
)
êêO P
;
êêP Q
it
ëë 
.
ëë 
lista
ëë 
=
ëë 
db
ëë !
.
ëë! "
Database
ëë" *
.
ëë* +
SqlQuery
ëë+ 3
<
ëë3 4"
ResultQueryEvolutivo
ëë4 H
>
ëëH I
(
ëëI J
query
ëëJ O
)
ëëO P
.
ëëP Q
ToList
ëëQ W
(
ëëW X
)
ëëX Y
;
ëëY Z
if
íí 
(
íí 
it
íí 
.
íí 
lista
íí  
.
íí  !
Count
íí! &
>
íí' (
$num
íí) *
)
íí* +
listaUnidades
ìì %
.
ìì% &
Add
ìì& )
(
ìì) *
it
ìì* ,
)
ìì, -
;
ìì- .
}
îî 
}
ññ 
}
óó 	
}
ôô 
public
õõ 

class
õõ "
ResultQueryEvolutivo
õõ %
{
úú 
public
ùù 
string
ùù 
CLASSIFIC_NEGOCIO
ùù '
{
ùù( )
get
ùù* -
;
ùù- .
set
ùù/ 2
;
ùù2 3
}
ùù4 5
public
ûû 
string
ûû 
MACROPROCESSO
ûû #
{
ûû$ %
get
ûû& )
;
ûû) *
set
ûû+ .
;
ûû. /
}
ûû0 1
public
üü 
int
üü 
ORCADO
üü 
{
üü 
get
üü 
;
üü  
set
üü! $
;
üü$ %
}
üü& '
public
†† 
decimal
†† 
DESVIO
†† 
{
†† 
get
††  #
;
††# $
set
††% (
;
††( )
}
††* +
public
°° 
decimal
°° 
DESVIOPERCENTUAL
°° '
{
°°( )
get
°°* -
;
°°- .
set
°°/ 2
;
°°2 3
}
°°4 5
public
¢¢ 
decimal
¢¢ 
REAL
¢¢ 
{
¢¢ 
get
¢¢ !
;
¢¢! "
set
¢¢# &
;
¢¢& '
}
¢¢( )
public
££ 
string
££ 
mes
££ 
{
££ 
get
££ 
;
££  
set
££! $
;
££$ %
}
££& '
=
££( )
null
££* .
;
££. /
}
•• 
public
¶¶ 

class
¶¶ &
ListResultQueryEvolutivo
¶¶ )
{
ßß 
public
®® 
List
®® 
<
®® "
ResultQueryEvolutivo
®® (
>
®®( )
lista
®®* /
{
®®0 1
get
®®2 5
;
®®5 6
set
®®7 :
;
®®: ;
}
®®< =
}
™™ 
}´´ ⁄&
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\UserAndRoles\RoleApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[		 
	HandleApi		 
(		 
)		 
]		 
[

 
RoutePrefix

 
(

 
$str

 
)

 
]

 
public 

class 
RoleApiController "
:# $
ApiController% 2
{ 
private 
IBaseDomain 
< 
ScreenComponent +
,+ ,
ScreenComponentDTO- ?
>? @&
_baseDomainScreenComponentA [
;[ \
private 
IBaseDomain 
< 
RoleSGQ #
,# $

RoleSGQDTO% /
>/ 0
_baseDomainRoleSGQ1 C
;C D
private 
IBaseDomain 
< 
RoleJBS #
,# $

RoleJBSDTO% /
>/ 0
_baseDomainRoleJBS1 C
;C D
public 
RoleApiController  
(  !
IBaseDomain 
< 
ScreenComponent '
,' (
ScreenComponentDTO) ;
>; <%
baseDomainScreenComponent= V
,V W
IBaseDomain 
< 
RoleSGQ 
,  

RoleSGQDTO! +
>+ ,
baseDomainRoleSGQ- >
,> ?
IBaseDomain@ K
<K L
RoleJBSL S
,S T

RoleJBSDTOU _
>_ `
baseDomainRoleJBSa r
)r s
{ 	&
_baseDomainScreenComponent &
=' (%
baseDomainScreenComponent) B
;B C
_baseDomainRoleSGQ 
=  
baseDomainRoleSGQ! 2
;2 3
_baseDomainRoleJBS 
=  
baseDomainRoleJBS! 2
;2 3
} 	
[ 	
Route	 
( 
$str #
)# $
]$ %
[ 	
HttpGet	 
] 
public 
ScreenComponentDTO !
GetScreenComponent" 4
(4 5
int5 8
Id9 ;
); <
{ 	
return &
_baseDomainScreenComponent -
.- .
GetById. 5
(5 6
Id6 8
)8 9
;9 :
} 	
[!! 	
Route!!	 
(!! 
$str!! $
)!!$ %
]!!% &
["" 	
HttpPost""	 
]"" 
public## 
ScreenComponentDTO## !
SaveScreenComponent##" 5
(##5 6
ScreenComponentDTO##6 H
screenComponentDto##I [
)##[ \
{$$ 	
return%% &
_baseDomainScreenComponent%% -
.%%- .
AddOrUpdate%%. 9
(%%9 :
screenComponentDto%%: L
)%%L M
;%%M N
}&& 	
[(( 	
Route((	 
((( 
$str(( 
)(( 
](( 
[)) 	
HttpGet))	 
])) 
public** 

RoleSGQDTO** 

GetRoleSgq** $
(**$ %
int**% (
Id**) +
)**+ ,
{++ 	
return,, 
_baseDomainRoleSGQ,, %
.,,% &
GetById,,& -
(,,- .
Id,,. 0
),,0 1
;,,1 2
}-- 	
[// 	
Route//	 
(// 
$str// 
)// 
]// 
[00 	
HttpPost00	 
]00 
public11 

RoleSGQDTO11 
SaveRoleSGQ11 %
(11% &

RoleSGQDTO11& 0

roleSgqDto111 ;
)11; <
{22 	
return33 
_baseDomainRoleSGQ33 %
.33% &
AddOrUpdate33& 1
(331 2

roleSgqDto332 <
)33< =
;33= >
}44 	
[66 	
Route66	 
(66 
$str66 
)66 
]66 
[77 	
HttpGet77	 
]77 
public88 

RoleJBSDTO88 

GetRoleJBS88 $
(88$ %
int88% (
Id88) +
)88+ ,
{99 	
return:: 
_baseDomainRoleJBS:: %
.::% &
GetById::& -
(::- .
Id::. 0
)::0 1
;::1 2
};; 	
[== 	
Route==	 
(== 
$str== 
)== 
]== 
[>> 	
HttpPost>>	 
]>> 
public?? 

RoleJBSDTO?? 
SaveRoleJBS?? %
(??% &

RoleJBSDTO??& 0

roleJbsDto??1 ;
)??; <
{@@ 	
returnAA 
_baseDomainRoleJBSAA %
.AA% &
AddOrUpdateAA& 1
(AA1 2

roleJbsDtoAA2 <
)AA< =
;AA= >
}BB 	
}CC 
}DD Ê 
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\UserAndRoles\UserSgqApiController.cs
	namespace		 	
	SgqSystem		
 
.		 
Controllers		 
.		  
Api		  #
{

 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str 
) 
]  
public 

class  
UserSgqApiController %
:& '
ApiController( 5
{ 
private 
IBaseDomain 
< 
UserSgq #
,# $
UserDTO% ,
>, -
_baseDomainUserSgq. @
;@ A
private 
IBaseDomain 
< 
ParCompanyXUserSgq .
,. /!
ParCompanyXUserSgqDTO0 E
>E F)
_baseDomainParCompanyXUserSgqG d
;d e
private 
SgqDbDevEntities  
db! #
;# $
public  
UserSgqApiController #
(# $
IBaseDomain 
< 
UserSgq 
,  
UserDTO! (
>( )
baseDomainUserSgq* ;
,; <
IBaseDomain 
< 
ParCompanyXUserSgq *
,* +!
ParCompanyXUserSgqDTO, A
>A B(
baseDomainParCompanyXUserSgqC _
)_ `
{ 	
_baseDomainUserSgq 
=  
baseDomainUserSgq! 2
;2 3)
_baseDomainParCompanyXUserSgq )
=* +(
baseDomainParCompanyXUserSgq, H
;H I
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
} 	
[ 	
Route	 
( 
$str 
) 
] 
[ 	
HttpGet	 
] 
public 
UserDTO 
Get 
( 
int 
Id !
)! "
{ 	
UserDTO   

userSgqDto   
=    
_baseDomainUserSgq  ! 3
.  3 4
GetById  4 ;
(  ; <
Id  < >
)  > ?
;  ? @

userSgqDto!! 
.!! 
ListParCompany_Id!! (
=!!) *)
_baseDomainParCompanyXUserSgq!!+ H
.!!H I
GetAll!!I O
(!!O P
)!!P Q
.!!Q R
Where!!R W
(!!W X
r!!X Y
=>!!Z \
r!!] ^
.!!^ _

UserSgq_Id!!_ i
==!!j l

userSgqDto!!m w
.!!w x
Id!!x z
)!!z {
.!!{ |
Select	!!| Ç
(
!!Ç É
p
!!É Ñ
=>
!!Ö á
p
!!à â
.
!!â ä
ParCompany_Id
!!ä ó
)
!!ó ò
;
!!ò ô
if## 
(## 

userSgqDto## 
.## 
Role## 
!=##  "
null### '
)##' (

userSgqDto$$ 
.$$ 
ListRole$$ #
=$$$ %

userSgqDto$$& 0
.$$0 1
Role$$1 5
.$$5 6
Split$$6 ;
($$; <
$char$$< ?
)$$? @
.$$@ A
Select$$A G
($$G H
p$$H I
=>$$J L
p$$M N
.$$N O
Trim$$O S
($$S T
)$$T U
)$$U V
;$$V W
if&& 
(&& 

userSgqDto&& 
!=&& 
null&& "
)&&" #
if'' 
('' 
GlobalConfig''  
.''  !
Eua''! $
)''$ %
{(( 

userSgqDto)) 
.)) 
IsActive)) '
=))( )
db))* ,
.)), -
Database))- 5
.))5 6
SqlQuery))6 >
<))> ?
bool))? C
>))C D
())D E
$str))E o
+))p q

userSgqDto))r |
.))| }
Id))} 
)	)) Ä
.
))Ä Å
FirstOrDefault
))Å è
(
))è ê
)
))ê ë
;
))ë í
}** 
return,, 

userSgqDto,, 
;,, 
}-- 	
}.. 
}// Ûô
ÅC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\VerificacaoTipificacao\VerificacaoTipificacaoController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

enum 

alertaTipo 
{ 
success 
= 
$num 
, 
info 
= 
$num 
, 
warning 
= 
$num 
, 
danger 
= 
$num 
} 
[ 
AllowAnonymous 
] 
[ 
RoutePrefix 
( 
$str -
)- .
]. /
public 

class ,
 VerificacaoTipificacaoController 1
:2 3
BaseController4 B
{ 
public 
string 
connectionString &
(& '
Unidades' /
unidades0 8
,8 9
string: @
urlA D
=E F
nullG K
)K L
{ 	
try 
{   
string!! 
urlHost!! 
=!!  
url!!! $
;!!$ %
if"" 
("" 
Request"" 
!="" 
null"" #
)""# $
{## 
urlHost$$ 
=$$ 
Request$$ %
.$$% &
Url$$& )
.$$) *
Host$$* .
.$$. /
ToString$$/ 7
($$7 8
)$$8 9
;$$9 :
}%% 
string'' 
_user'' 
='' 
$str'' /
;''/ 0
string(( 
	_password((  
=((! "
$str((# 0
;((0 1
if** 
(** 
urlHost** 
.** 
Contains** $
(**$ %
$str**% *
)*** +
||**, .
urlHost**/ 6
.**6 7
Contains**7 ?
(**? @
$str**@ L
)**L M
||**N P
urlHost**Q X
.**X Y
Contains**Y a
(**a b
$str**b m
)**m n
)**n o
{++ 
unidades,, 
.,, 

EnderecoIP,, '
=,,( )
$str,,* <
;,,< =
unidades-- 
.-- 
NomeDatabase-- )
=--* +
$str--, =
;--= >
_user.. 
=.. 
$str.. (
;..( )
	_password// 
=// 
$str//  ,
;//, -
}00 
string11 
porta11 
=11 
null11 #
;11# $
string33 
conexao33 
=33  
$str33! /
+330 1
unidades332 :
.33: ;

EnderecoIP33; E
+33F G
porta33H M
+33N O
$str33P c
+33d e
unidades33f n
.33n o
NomeDatabase33o {
+33| }
$str	33~ §
+
33• ¶
_user
33ß ¨
+
33≠ Æ
$str
33Ø ª
+
33º Ω
	_password
33æ «
+
33» …
$str
33  Õ
;
33Õ Œ
return55 
conexao55 
;55 
}66 
catch77 
(77 
	Exception77 
ex77 
)77  
{88 
string99 
mensagem99 
=99  !
ex99" $
.99$ %
Message99% ,
;99, -
return:: 
mensagem:: 
;::  
};; 
}<< 	
public>> 
string>> 
mensagem>> 
(>> 
string>> %
mensagem>>& .
,>>. /

alertaTipo>>0 :

tipoAlerta>>; E
,>>E F
bool>>G K
json>>L P
=>>Q R
true>>S W
,>>W X
bool>>Y ]
reenviarRequisicao>>^ p
=>>q r
false>>s x
)>>x y
{?? 	
string@@ 
alertaTipoLabel@@ "
=@@# $
$str@@% -
;@@- .
switchAA 
(AA 

tipoAlertaAA 
)AA 
{BB 
caseCC 

alertaTipoCC 
.CC  
successCC  '
:CC' (
alertaTipoLabelDD #
=DD$ %
$strDD& /
;DD/ 0
breakEE 
;EE 
caseFF 

alertaTipoFF 
.FF  
infoFF  $
:FF$ %
alertaTipoLabelGG #
=GG$ %
$strGG& ,
;GG, -
breakHH 
;HH 
caseII 

alertaTipoII 
.II  
warningII  '
:II' (
alertaTipoLabelJJ #
=JJ$ %
$strJJ& /
;JJ/ 0
breakKK 
;KK 
caseLL 

alertaTipoLL 
.LL  
dangerLL  &
:LL& '
alertaTipoLabelMM #
=MM$ %
$strMM& .
;MM. /
breakNN 
;NN 
}OO 
stringPP 
requestResendPP  
=PP! "
$strPP# 2
;PP2 3
ifQQ 
(QQ 
reenviarRequisicaoQQ "
==QQ# %
trueQQ& *
)QQ* +
{RR 
requestResendSS 
=SS 
requestResendSS  -
+SS. /
$strSS0 7
;SS7 8
}TT 
elseUU 
{VV 
requestResendWW 
=WW 
requestResendWW  -
+WW. /
$strWW0 8
;WW8 9
}XX 
mensagemZZ 
=ZZ 
$strZZ #
+ZZ$ %
alertaTipoLabelZZ& 5
+ZZ6 7
$strZZ8 ;
+ZZ< =
mensagemZZ> F
+ZZG H
$strZZI L
+ZZM N
requestResendZZO \
;ZZ\ ]
if[[ 
([[ 
json[[ 
==[[ 
true[[ 
)[[ 
{\\ 
mensagem]] 
=]] 
$str]] 
+]]  
mensagem]]! )
+]]* +
$str]], /
;]]/ 0
}^^ 
return__ 
mensagem__ 
;__ 
}`` 	
publicqq 

JsonResultqq 
GetDadosGetqq %
(qq% &
stringqq& ,
tokenqq- 2
=qq3 4
$strqq5 7
,qq7 8
stringqq9 ?'
verificacaoTipificacaoChaveqq@ [
=qq\ ]
$strqq^ `
,qq` a
stringqqb h

sequencialqqi s
=qqt u
$strqqv x
,qqx y
string	qqz Ä
	idUnidade
qqÅ ä
=
qqã å
$str
qqç è
,
qqè ê
stringrr( .
datarr/ 3
=rr4 5
$strrr6 8
,rr8 9
stringrr: @
	empresaIdrrA J
=rrK L
$strrrM O
,rrO P
stringrrQ W
departamentoIdrrX f
=rrg h
$strrri k
,rrk l
stringrrm s
tarefaIdrrt |
=rr} ~
$str	rr Å
,
rrÅ Ç
stringss( .
codigoss/ 5
=ss6 7
$strss8 :
,ss: ;
stringss< B
testessC H
=ssI J
$strssK M
,ssM N
stringssO U
portassV [
=ss\ ]
$strss^ `
,ss` a
stringssb h
	versaoAppssi r
=sss t
$strssu w
,ssw x
stringssy 
url
ssÄ É
=
ssÑ Ö
$str
ssÜ à
,
ssà â
string
ssä ê
	usuarioId
ssë ö
=
ssõ ú
$str
ssù ü
)
ssü †
{tt 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %

sequencial% /
)/ 0
)0 1
{
ÄÄ 
return
ÅÅ 
Json
ÅÅ 
(
ÅÅ 
mensagem
ÅÅ $
(
ÅÅ$ %
$str
ÅÅ% C
,
ÅÅC D

alertaTipo
ÅÅE O
.
ÅÅO P
warning
ÅÅP W
)
ÅÅW X
,
ÅÅX Y!
JsonRequestBehavior
ÅÅZ m
.
ÅÅm n
AllowGet
ÅÅn v
)
ÅÅv w
;
ÅÅw x
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
string
ÖÖ 
.
ÖÖ 
IsNullOrEmpty
ÖÖ $
(
ÖÖ$ %
	idUnidade
ÖÖ% .
)
ÖÖ. /
)
ÖÖ/ 0
{
ÜÜ 
return
áá 
Json
áá 
(
áá 
mensagem
áá $
(
áá$ %
$str
áá% >
,
áá> ?

alertaTipo
áá@ J
.
ááJ K
warning
ááK R
)
ááR S
,
ááS T!
JsonRequestBehavior
ááU h
.
ááh i
AllowGet
áái q
)
ááq r
;
áár s
}
àà 
if
ää 
(
ää 
string
ää 
.
ää 
IsNullOrEmpty
ää $
(
ää$ %
data
ää% )
)
ää) *
)
ää* +
{
ãã 
return
åå 
Json
åå 
(
åå 
mensagem
åå $
(
åå$ %
$str
åå% ?
,
åå? @

alertaTipo
ååA K
.
ååK L
warning
ååL S
)
ååS T
,
ååT U!
JsonRequestBehavior
ååV i
.
ååi j
AllowGet
ååj r
)
åår s
;
åås t
}
çç 
using
ïï 
(
ïï 
var
ïï 
db
ïï 
=
ïï 
new
ïï  
SGQ_GlobalEntities
ïï  2
(
ïï2 3
)
ïï3 4
)
ïï4 5
{
ññ 
if
òò 
(
òò 
token
òò 
.
òò 
Equals
òò  
(
òò  !
$str
òò! /
)
òò/ 0
)
òò0 1
{
ôô 
int
úú 
id
úú 
=
úú 
Convert
úú $
.
úú$ %
ToInt32
úú% ,
(
úú, -
	idUnidade
úú- 6
)
úú6 7
;
úú7 8
var
ûû 
unidades
ûû  
=
ûû! "
(
ûû# $
from
ûû$ (
p
ûû) *
in
ûû+ -
db
ûû. 0
.
ûû0 1
Unidades
ûû1 9
where
üü$ )
p
üü* +
.
üü+ ,
Id
üü, .
==
üü/ 1
id
üü2 4
select
††$ *
p
††+ ,
)
††, -
.
††- .
FirstOrDefault
††. <
(
††< =
)
††= >
;
††> ?
string
££ 
conexao
££ "
=
££# $
connectionString
££% 5
(
££5 6
unidades
££6 >
,
££> ?
url
££@ C
)
££C D
;
££D E
var
©© $
verificacaoTipificacao
©© .
=
©©/ 0
(
©©1 2
from
©©2 6
p
©©7 8
in
©©9 ;
db
©©< >
.
©©> ?$
VerificacaoTipificacao
©©? U
where
™™2 7
p
™™8 9
.
™™9 :
Chave
™™: ?
==
™™@ B)
verificacaoTipificacaoChave
™™C ^
select
´´2 8
p
´´9 :
)
´´: ;
.
´´; <
FirstOrDefault
´´< J
(
´´J K
)
´´K L
;
´´L M
if
≠≠ 
(
≠≠ $
verificacaoTipificacao
≠≠ .
==
≠≠/ 1
null
≠≠2 6
)
≠≠6 7
{
ÆÆ 
return
ØØ 
Json
ØØ #
(
ØØ# $
mensagem
ØØ$ ,
(
ØØ, -
$str
ØØ- `
,
ØØ` a

alertaTipo
ØØb l
.
ØØl m
warning
ØØm t
)
ØØt u
,
ØØu v"
JsonRequestBehaviorØØw ä
.ØØä ã
AllowGetØØã ì
)ØØì î
;ØØî ï
}
±± $
verificacaoTipificacao
¥¥ *
.
¥¥* +
Status
¥¥+ 1
=
¥¥2 3
false
¥¥4 9
;
¥¥9 :
bool
∑∑ 
existeComparacao
∑∑ )
=
∑∑* +
false
∑∑, 1
;
∑∑1 2
bool
∫∫ &
excluirVerificacaoAntiga
∫∫ 1
=
∫∫2 3
false
∫∫4 9
;
∫∫9 :
string
ΩΩ 
queryString
ΩΩ &
=
ΩΩ' (
$str
ΩΩ) R
+
ΩΩS T
unidades
ΩΩU ]
.
ΩΩ] ^
Codigo
ΩΩ^ d
+
ΩΩe f
$str
ΩΩg l
+
ΩΩm n
data
ΩΩo s
+
ΩΩt u
$str
ΩΩv {
+
ΩΩ| }

sequencialΩΩ~ à
;ΩΩà â
int
ææ 
iSequencial
ææ #
=
ææ$ %
$num
ææ& '
;
ææ' (
int
øø 
iBanda
øø 
=
øø  
$num
øø! "
;
øø" #
DateTime
¿¿ 
dataHoraMonitor
¿¿ ,
=
¿¿- .
DateTime
¿¿/ 7
.
¿¿7 8
Now
¿¿8 ;
;
¿¿; <
using
¬¬ 
(
¬¬ 
SqlConnection
¬¬ (

connection
¬¬) 3
=
¬¬4 5
new
¬¬6 9
SqlConnection
¬¬: G
(
¬¬G H
conexao
¬¬H O
)
¬¬O P
)
¬¬P Q
{
√√ 
try
ƒƒ 
{
≈≈ 

SqlCommand
∆∆ &
command
∆∆' .
=
∆∆/ 0
new
∆∆1 4

SqlCommand
∆∆5 ?
(
∆∆? @
queryString
∆∆@ K
,
∆∆K L

connection
∆∆M W
)
∆∆W X
;
∆∆X Y

connection
«« &
.
««& '
Open
««' +
(
««+ ,
)
««, -
;
««- .
using
»» !
(
»»" #
SqlDataReader
»»# 0
reader
»»1 7
=
»»8 9
command
»»: A
.
»»A B
ExecuteReader
»»B O
(
»»O P
)
»»P Q
)
»»Q R
{
…… 
string
ÀÀ  &
queryZeroToNull
ÀÀ' 6
=
ÀÀ7 8
$strÀÀ9 °
;ÀÀ° ¢
int
ÃÃ  #
noOfRowDeleted0
ÃÃ$ 3
=
ÃÃ4 5
db
ÃÃ6 8
.
ÃÃ8 9
Database
ÃÃ9 A
.
ÃÃA B
ExecuteSqlCommand
ÃÃB S
(
ÃÃS T
queryZeroToNull
ÃÃT c
)
ÃÃc d
;
ÃÃd e
queryZeroToNull
ŒŒ  /
=
ŒŒ0 1
$strŒŒ2 ®
;ŒŒ® ©
noOfRowDeleted0
œœ  /
=
œœ0 1
db
œœ2 4
.
œœ4 5
Database
œœ5 =
.
œœ= >
ExecuteSqlCommand
œœ> O
(
œœO P
queryZeroToNull
œœP _
)
œœ_ `
;
œœ` a
string
ÿÿ  &
[
ÿÿ& '
]
ÿÿ' (

comparacao
ÿÿ) 3
=
ÿÿ4 5
{
ÿÿ6 7
$str
ÿÿ8 A
,
ÿÿA B
$str
ÿÿC K
,
ÿÿK L
$str
ÿÿM X
,
ÿÿX Y
$str
ÿÿZ f
,
ÿÿf g
$str
ÿÿh s
}
ÿÿt u
;
ÿÿu v
while
ﬁﬁ  %
(
ﬁﬁ& '
reader
ﬁﬁ' -
.
ﬁﬁ- .
Read
ﬁﬁ. 2
(
ﬁﬁ2 3
)
ﬁﬁ3 4
)
ﬁﬁ4 5
{
ﬂﬂ  !
if
··$ &
(
··' (
Convert
··( /
.
··/ 0
ToInt32
··0 7
(
··7 8
reader
··8 >
[
··> ?
$num
··? @
]
··@ A
.
··A B
ToString
··B J
(
··J K
)
··K L
)
··L M
==
··N P$
verificacaoTipificacao
··Q g
.
··g h
Banda
··h m
)
··m n
{
‚‚$ %
int
„„( +

nCdEmpresa
„„, 6
=
„„7 8
Convert
„„9 @
.
„„@ A
ToInt32
„„A H
(
„„H I
reader
„„I O
[
„„O P
$num
„„P Q
]
„„Q R
.
„„R S
ToString
„„S [
(
„„[ \
)
„„\ ]
)
„„] ^
;
„„^ _
DateTime
‰‰( 0

dMovimento
‰‰1 ;
=
‰‰< =
Convert
‰‰> E
.
‰‰E F

ToDateTime
‰‰F P
(
‰‰P Q
reader
‰‰Q W
[
‰‰W X
$num
‰‰X Y
]
‰‰Y Z
.
‰‰Z [
ToString
‰‰[ c
(
‰‰c d
)
‰‰d e
)
‰‰e f
;
‰‰f g
dataHoraMonitor
ÂÂ( 7
=
ÂÂ8 9

dMovimento
ÂÂ: D
;
ÂÂD E
iSequencial
ÊÊ( 3
=
ÊÊ4 5
Convert
ÊÊ6 =
.
ÊÊ= >
ToInt32
ÊÊ> E
(
ÊÊE F
reader
ÊÊF L
[
ÊÊL M
$num
ÊÊM N
]
ÊÊN O
.
ÊÊO P
ToString
ÊÊP X
(
ÊÊX Y
)
ÊÊY Z
)
ÊÊZ [
;
ÊÊ[ \
int
ÁÁ( +$
iSequencialTipificacao
ÁÁ, B
=
ÁÁC D
Convert
ÁÁE L
.
ÁÁL M
ToInt32
ÁÁM T
(
ÁÁT U
reader
ÁÁU [
[
ÁÁ[ \
$num
ÁÁ\ ]
]
ÁÁ] ^
.
ÁÁ^ _
ToString
ÁÁ_ g
(
ÁÁg h
)
ÁÁh i
)
ÁÁi j
;
ÁÁj k
iBanda
ËË( .
=
ËË/ 0
Convert
ËË1 8
.
ËË8 9
ToInt32
ËË9 @
(
ËË@ A
reader
ËËA G
[
ËËG H
$num
ËËH I
]
ËËI J
.
ËËJ K
ToString
ËËK S
(
ËËS T
)
ËËT U
)
ËËU V
;
ËËV W
string
ÈÈ( .'
cIdentificadorTipificacao
ÈÈ/ H
=
ÈÈI J
reader
ÈÈK Q
[
ÈÈQ R
$num
ÈÈR S
]
ÈÈS T
.
ÈÈT U
ToString
ÈÈU ]
(
ÈÈ] ^
)
ÈÈ^ _
;
ÈÈ_ `
int
ÍÍ( +*
nCdCaracteristicaTipificacao
ÍÍ, H
=
ÍÍI J
Convert
ÍÍK R
.
ÍÍR S
ToInt32
ÍÍS Z
(
ÍÍZ [
reader
ÍÍ[ a
[
ÍÍa b
$num
ÍÍb c
]
ÍÍc d
.
ÍÍd e
ToString
ÍÍe m
(
ÍÍm n
)
ÍÍn o
)
ÍÍo p
;
ÍÍp q
if
ÌÌ( *
(
ÌÌ+ ,&
excluirVerificacaoAntiga
ÌÌ, D
==
ÌÌE G
false
ÌÌH M
)
ÌÌM N
{
ÓÓ( )
string
ÉÉ, 2#
queryValidacaoVDelete
ÉÉ3 H
=
ÉÉI J
$strÉÉK ã
+ÉÉå ç

nCdEmpresaÉÉé ò
+ÉÉô ö
$strÉÉõ æ
+ÉÉø ¿

dMovimentoÉÉ¡ À
.ÉÉÀ Ã
ToStringÉÉÃ ‘
(ÉÉ‘ ’
$strÉÉ’ Í
)ÉÉÍ Î
+ÉÉÏ Ì
$strÉÉÓ É
+ÉÉÑ Ö
iSequencialÉÉÜ ë
+ÉÉí ì
$strÉÉî §
+ÉÉ• ¶
iBandaÉÉß ≠
+ÉÉÆ Ø
$strÉÉ∞ ≥
;ÉÉ≥ ¥
int
ÑÑ, /
noOfRowDeleted
ÑÑ0 >
=
ÑÑ? @
db
ÑÑA C
.
ÑÑC D
Database
ÑÑD L
.
ÑÑL M
ExecuteSqlCommand
ÑÑM ^
(
ÑÑ^ _#
queryValidacaoVDelete
ÑÑ_ t
)
ÑÑt u
;
ÑÑu v
string
àà, 2#
queryValidacaoCDelete
àà3 H
=
ààI J
$strààK å
+ààç é

nCdEmpresaààè ô
+ààö õ
$strààú æ
+ààø ¿

dMovimentoàà¡ À
.ààÀ Ã
ToStringààÃ ‘
(àà‘ ’
$stràà’ Í
)ààÍ Î
+ààÏ Ì
$strààÓ Ç
+ààÉ Ñ
iSequencialààÖ ê
+ààë í
$strààì ¢
+àà£ §
iBandaàà• ´
+àà¨ ≠
$strààÆ ±
;àà± ≤
noOfRowDeleted
ââ, :
=
ââ; <
db
ââ= ?
.
ââ? @
Database
ââ@ H
.
ââH I
ExecuteSqlCommand
ââI Z
(
ââZ [#
queryValidacaoCDelete
ââ[ p
)
ââp q
;
ââq r&
excluirVerificacaoAntiga
éé, D
=
ééE F
true
ééG K
;
ééK L
}
ëë( )
if
îî( *
(
îî+ ,#
MatrizStrinComparacao
îî, A
(
îîA B

comparacao
îîB L
,
îîL M'
cIdentificadorTipificacao
îîN g
)
îîg h
==
îîi k
true
îîl p
)
îîp q
{
ïï( )
existeComparacao
óó, <
=
óó= >
true
óó? C
;
óóC D$
verificacaoTipificacao
ôô, B
.
ôôB C
Status
ôôC I
=
ôôJ K
true
ôôL P
;
ôôP Q
var
õõ, /-
VerificacaoTipificacaoValidacao
õõ0 O
=
õõP Q
new
õõR U-
VerificacaoTipificacaoValidacao
õõV u
(
õõu v
)
õõv w
;
õõw x-
VerificacaoTipificacaoValidacao
ùù, K
.
ùùK L

nCdEmpresa
ùùL V
=
ùùW X

nCdEmpresa
ùùY c
;
ùùc d-
VerificacaoTipificacaoValidacao
ûû, K
.
ûûK L

dMovimento
ûûL V
=
ûûW X

dMovimento
ûûY c
;
ûûc d-
VerificacaoTipificacaoValidacao
üü, K
.
üüK L
iSequencial
üüL W
=
üüX Y
iSequencial
üüZ e
;
üüe f-
VerificacaoTipificacaoValidacao
††, K
.
††K L$
iSequencialTipificacao
††L b
=
††c d$
iSequencialTipificacao
††e {
;
††{ |-
VerificacaoTipificacaoValidacao
°°, K
.
°°K L
iBanda
°°L R
=
°°S T
iBanda
°°U [
;
°°[ \-
VerificacaoTipificacaoValidacao
¢¢, K
.
¢¢K L'
cIdentificadorTipificacao
¢¢L e
=
¢¢f g(
cIdentificadorTipificacao¢¢h Å
;¢¢Å Ç-
VerificacaoTipificacaoValidacao
££, K
.
££K L*
nCdCaracteristicaTipificacao
££L h
=
££i j+
nCdCaracteristicaTipificacao££k á
;££á à
db
§§, .
.
§§. /-
VerificacaoTipificacaoValidacao
§§/ N
.
§§N O
Add
§§O R
(
§§R S-
VerificacaoTipificacaoValidacao
§§S r
)
§§r s
;
§§s t
}
••( )
}
¶¶$ %
}
ßß  !
iBanda
©©  &
=
©©' ($
verificacaoTipificacao
©©) ?
.
©©? @
Banda
©©@ E
;
©©E F
if
™™  "
(
™™# $
existeComparacao
™™$ 4
==
™™5 7
false
™™8 =
)
™™= >
{
´´  !
return
¨¨$ *
Json
¨¨+ /
(
¨¨/ 0
mensagem
¨¨0 8
(
¨¨8 9
$str
¨¨9 b
,
¨¨b c

alertaTipo
¨¨d n
.
¨¨n o
info
¨¨o s
)
¨¨s t
,
¨¨t u"
JsonRequestBehavior¨¨v â
.¨¨â ä
AllowGet¨¨ä í
)¨¨í ì
;¨¨ì î
}
≠≠  !
else
ÆÆ  $
{
ØØ  !
db
∞∞$ &
.
∞∞& '
SaveChanges
∞∞' 2
(
∞∞2 3
)
∞∞3 4
;
∞∞4 5
try
¥¥$ '
{
µµ$ %
string
∑∑( .
[
∑∑. /
]
∑∑/ 0
ArrayComparacao
∑∑1 @
=
∑∑A B
{
∑∑C D
$str
∑∑E P
,
∑∑P Q
$str
∑∑R ^
}
∑∑_ `
;
∑∑` a
for
ππ( +
(
ππ, -
var
ππ- 0
i
ππ1 2
=
ππ3 4
$num
ππ5 6
;
ππ6 7
i
ππ8 9
<
ππ: ;
ArrayComparacao
ππ< K
.
ππK L
Length
ππL R
;
ππR S
i
ππT U
++
ππU W
)
ππW X
{
∫∫( )
string
ºº, 2
[
ºº2 3
]
ºº3 4
varComparacao
ºº5 B
=
ººC D
new
ººE H
string
ººI O
[
ººO P
$num
ººP Q
]
ººQ R
;
ººR S
varComparacao
ææ, 9
[
ææ9 :
$num
ææ: ;
]
ææ; <
=
ææ= >
ArrayComparacao
ææ? N
[
ææN O
i
ææO P
]
ææP Q
;
ææQ R
string
¿¿, 2 
comparacaoToString
¿¿3 E
=
¿¿F G
ArrayComparacao
¿¿H W
[
¿¿W X
i
¿¿X Y
]
¿¿Y Z
;
¿¿Z [
var
¬¬, /
resultIdTarefa
¬¬0 >
=
¬¬? @
(
¬¬A B
from
¬¬B F
x
¬¬G H
in
¬¬I K
db
¬¬L N
.
¬¬N O4
&VerificacaoTipificacaoTarefaIntegracao
¬¬O u
select
∆∆B H
x
∆∆I J
)
∆∆J K
.
∆∆K L
FirstOrDefault
∆∆L Z
(
∆∆Z [
)
∆∆[ \
.
∆∆\ ]
TarefaId
∆∆] e
;
∆∆e f
bool
»», 0
conforme
»»1 9
=
»»: ;,
verificacaoTipificaoComparacao
»»< Z
(
»»Z [
unidades
»»[ c
.
»»c d
Codigo
»»d j
.
»»j k
ToString
»»k s
(
»»s t
)
»»t u
,
»»u v
data
»»w {
,
»»{ |

sequencial»»} á
,»»á à
iBanda»»â è
.»»è ê
ToString»»ê ò
(»»ò ô
)»»ô ö
,»»ö õ
unidades»»ú §
,»»§ •
	empresaId»»¶ Ø
,»»Ø ∞
departamentoId»»± ø
,»»ø ¿
tarefaId»»¡ …
,»»…  
conexao»»À “
,»»“ ”
varComparacao»»‘ ·
)»»· ‚
;»»‚ „

Resultados
ÀÀ, 6
resultadoObj
ÀÀ7 C
=
ÀÀD E
new
ÀÀF I

Resultados
ÀÀJ T
(
ÀÀT U
)
ÀÀU V
;
ÀÀV W
int
””, /

_empresaId
””0 :
=
””; <
Convert
””= D
.
””D E
ToInt32
””E L
(
””L M
	empresaId
””M V
)
””V W
;
””W X
var
÷÷, /
empresa
÷÷0 7
=
÷÷8 9
db
÷÷: <
.
÷÷< =
Empresas
÷÷= E
.
÷÷E F
Where
÷÷F K
(
÷÷K L
d
÷÷L M
=>
÷÷N P
d
÷÷Q R
.
÷÷R S
Id
÷÷S U
==
÷÷V X

_empresaId
÷÷Y c
)
÷÷c d
.
÷÷d e
FirstOrDefault
÷÷e s
(
÷÷s t
)
÷÷t u
;
÷÷u v
int
⁄⁄, /
_departamentoId
⁄⁄0 ?
=
⁄⁄@ A
Convert
⁄⁄B I
.
⁄⁄I J
ToInt32
⁄⁄J Q
(
⁄⁄Q R
departamentoId
⁄⁄R `
)
⁄⁄` a
;
⁄⁄a b
var
››, /
departamento
››0 <
=
››= >
db
››? A
.
››A B
Departamentos
››B O
.
››O P
Where
››P U
(
››U V
d
››V W
=>
››X Z
d
››[ \
.
››\ ]
Id
››] _
==
››` b
_departamentoId
››c r
)
››r s
.
››s t
FirstOrDefault››t Ç
(››Ç É
)››É Ñ
;››Ñ Ö
int
‡‡, /
	_tarefaId
‡‡0 9
=
‡‡: ;
Convert
‡‡< C
.
‡‡C D
ToInt32
‡‡D K
(
‡‡K L
tarefaId
‡‡L T
)
‡‡T U
;
‡‡U V
var
„„, /
tarefa
„„0 6
=
„„7 8
db
„„9 ;
.
„„; <
Tarefas
„„< C
.
„„C D
Where
„„D I
(
„„I J
t
„„J K
=>
„„L N
t
„„O P
.
„„P Q
Id
„„Q S
==
„„T V
	_tarefaId
„„W `
)
„„` a
.
„„a b
FirstOrDefault
„„b p
(
„„p q
)
„„q r
;
„„r s
int
ÊÊ, /
_monitoramentoId
ÊÊ0 @
=
ÊÊA B
resultIdTarefa
ÊÊC Q
;
ÊÊQ R
var
ËË, /
monitoramento
ËË0 =
=
ËË> ?
db
ËË@ B
.
ËËB C
Monitoramentos
ËËC Q
.
ËËQ R
Where
ËËR W
(
ËËW X
t
ËËX Y
=>
ËËZ \
t
ËË] ^
.
ËË^ _
Id
ËË_ a
==
ËËb d
_monitoramentoId
ËËe u
)
ËËu v
.
ËËv w
FirstOrDefaultËËw Ö
(ËËÖ Ü
)ËËÜ á
;ËËá à
var
ÏÏ, /
operacao
ÏÏ0 8
=
ÏÏ9 :
db
ÏÏ; =
.
ÏÏ= >
	Operacoes
ÏÏ> G
.
ÏÏG H
Where
ÏÏH M
(
ÏÏM N
o
ÏÏN O
=>
ÏÏP R
o
ÏÏS T
.
ÏÏT U
Id
ÏÏU W
==
ÏÏX Z
tarefa
ÏÏ[ a
.
ÏÏa b
Operacao
ÏÏb j
)
ÏÏj k
.
ÏÏk l
FirstOrDefault
ÏÏl z
(
ÏÏz {
)
ÏÏ{ |
;
ÏÏ| }
int
ÓÓ, /

_produtoId
ÓÓ0 :
=
ÓÓ; <
tarefa
ÓÓ= C
.
ÓÓC D
Operacao
ÓÓD L
;
ÓÓL M
var
, /
produto
0 7
=
8 9
db
: <
.
< =
Produtos
= E
.
E F
Where
F K
(
K L
p
L M
=>
N P
p
Q R
.
R S
Id
S U
==
V X

_produtoId
Y c
)
c d
.
d e
FirstOrDefault
e s
(
s t
)
t u
;
u v
Metas
ÙÙ, 1
meta
ÙÙ2 6
=
ÙÙ7 8
db
ÙÙ9 ;
.
ÙÙ; <
Metas
ÙÙ< A
.
ÙÙA B
Where
ÙÙB G
(
ÙÙG H
m
ÙÙH I
=>
ÙÙJ L
m
ÙÙM N
.
ÙÙN O
Operacao
ÙÙO W
==
ÙÙX Z
operacao
ÙÙ[ c
.
ÙÙc d
Id
ÙÙd f
)
ÙÙf g
.
ÙÙg h
FirstOrDefault
ÙÙh v
(
ÙÙv w
)
ÙÙw x
;
ÙÙx y

Resultados
˜˜, 6
res
˜˜7 :
=
˜˜; <
db
˜˜= ?
.
˜˜? @

Resultados
˜˜@ J
.
˜˜J K
Where
˜˜K P
(
˜˜P Q
r
˜˜Q R
=>
˜˜S U
r
˜˜V W
.
˜˜W X
	EmpresaId
˜˜X a
==
˜˜b d
$num
˜˜e f
&&
¯¯0 2
r
¯¯3 4
.
¯¯4 5
	UnidadeId
¯¯5 >
==
¯¯? A
id
¯¯B D
&&
˘˘0 2
r
˘˘3 4
.
˘˘4 5

OperacaoId
˘˘5 ?
==
˘˘@ B
tarefa
˘˘C I
.
˘˘I J
Operacao
˘˘J R
&&
˙˙0 2
r
˙˙3 4
.
˙˙4 5
TarefaId
˙˙5 =
==
˙˙> @
	_tarefaId
˙˙A J
&&
˚˚0 2
r
˚˚3 4
.
˚˚4 5
MonitoramentoId
˚˚5 D
==
˚˚E G
_monitoramentoId
˚˚H X
&&
¸¸0 2
DbFunctions
¸¸3 >
.
¸¸> ?
TruncateTime
¸¸? K
(
¸¸K L
r
¸¸L M
.
¸¸M N
DataHora
¸¸N V
)
¸¸V W
==
¸¸X Z
DbFunctions
¸¸[ f
.
¸¸f g
TruncateTime
¸¸g s
(
¸¸s t
dataHoraMonitor¸¸t É
)¸¸É Ñ
&&
˝˝0 2
r
˝˝3 4
.
˝˝4 5

Sequencial
˝˝5 ?
.
˝˝? @
Value
˝˝@ E
==
˝˝F H
iSequencial
˝˝I T
&&
˛˛0 2
r
˛˛3 4
.
˛˛4 5
Banda
˛˛5 :
.
˛˛: ;
Value
˛˛; @
==
˛˛A C
iBanda
˛˛D J
)
˛˛J K
.
˛˛K L
FirstOrDefault
˛˛L Z
(
˛˛Z [
)
˛˛[ \
;
˛˛\ ]
if
ˇˇ, .
(
ˇˇ/ 0
res
ˇˇ0 3
!=
ˇˇ4 6
null
ˇˇ7 ;
)
ˇˇ; <
{
ÄÄ, -
	versaoApp
ÉÉ0 9
=
ÉÉ: ;
res
ÉÉ< ?
.
ÉÉ? @
	VersaoAPP
ÉÉ@ I
;
ÉÉI J
resultadoObj
ÑÑ0 <
=
ÑÑ= >
res
ÑÑ? B
;
ÑÑB C
}
ÖÖ, -
else
ÜÜ, 0
{
áá, -
resultadoObj
ââ0 <
.
ââ< =
Meta
ââ= A
=
ââB C
meta
ââD H
.
ââH I
Meta
ââI M
;
ââM N
resultadoObj
ää0 <
.
ää< =
Status
ää= C
=
ääD E
$str
ääF P
;
ääP Q
resultadoObj
ãã0 <
.
ãã< =
AvaliacaoAvulsa
ãã= L
=
ããM N
false
ããO T
;
ããT U
resultadoObj
åå0 <
.
åå< =

Amostragem
åå= G
=
ååH I
tarefa
ååJ P
.
ååP Q

Amostragem
ååQ [
;
åå[ \
resultadoObj
çç0 <
.
çç< =
FormaAmostragem
çç= L
=
ççM N
tarefa
ççO U
.
ççU V
FormaAmostragem
ççV e
;
ççe f
resultadoObj
èè0 <
.
èè< =

Sequencial
èè= G
=
èèH I
iSequencial
èèJ U
;
èèU V
resultadoObj
êê0 <
.
êê< =
Banda
êê= B
=
êêC D
iBanda
êêE K
;
êêK L
string
íí0 6
chave
íí7 <
=
íí= >
unidades
íí? G
.
ííG H
Id
ííH J
+
ííK L
$str
ííM P
+
ííQ R
operacao
ííS [
.
íí[ \
Id
íí\ ^
+
íí_ `
$str
íía d
+
ííe f
tarefa
ííg m
.
íím n
Id
íín p
+
ííq r
$str
íís v
+
ííw x
resultadoObjííy Ö
.ííÖ Ü

SequencialííÜ ê
+ííë í
$strííì ñ
+ííó ò
resultadoObjííô •
.íí• ¶
Bandaíí¶ ´
+íí¨ ≠
$strííÆ ±
+íí≤ ≥
dataHoraMonitoríí¥ √
.íí√ ƒ
ToStringííƒ Ã
(ííÃ Õ
$strííÕ ÷
)íí÷ ◊
;íí◊ ÿ
resultadoObj
îî0 <
.
îî< =
Chave
îî= B
=
îîC D
chave
îîE J
;
îîJ K
int
óó0 3
numeroAvaliacao
óó4 C
=
óóD E

CommonData
óóF P
.
óóP Q%
GetNumeroAvaliacaoAtual
óóQ h
(
óóh i
unidades
óói q
.
óóq r
Id
óór t
,
óót u
departamentoóóv Ç
.óóÇ É
IdóóÉ Ö
,óóÖ Ü
operacaoóóá è
.óóè ê
Idóóê í
,óóí ì
tarefaóóî ö
.óóö õ
Idóóõ ù
,óóù û
trueóóü £
)óó£ §
;óó§ •
int
õõ0 3
numeroAmostra
õõ4 A
=
õõB C

CommonData
õõD N
.
õõN O%
GetProximoNumeroAmostra
õõO f
(
õõf g
unidades
õõg o
.
õõo p
Id
õõp r
,
õõr s
departamentoõõt Ä
.õõÄ Å
IdõõÅ É
,õõÉ Ñ
operacaoõõÖ ç
.õõç é
Idõõé ê
,õõê ë
tarefaõõí ò
.õõò ô
Idõõô õ
,õõõ ú
numeroAvaliacaoõõù ¨
,õõ¨ ≠
trueõõÆ ≤
)õõ≤ ≥
;õõ≥ ¥
if
ûû0 2
(
ûû3 4
numeroAmostra
ûû4 A
<=
ûûB D
$num
ûûE F
)
ûûF G
{
üü0 1
numeroAvaliacao
††4 C
=
††D E

CommonData
††F P
.
††P Q'
GetProximoNumeroAvaliacao
††Q j
(
††j k
unidades
††k s
.
††s t
Id
††t v
,
††v w
departamento††x Ñ
.††Ñ Ö
Id††Ö á
,††á à
operacao††â ë
.††ë í
Id††í î
,††î ï
tarefa††ñ ú
.††ú ù
Id††ù ü
,††ü †
true††° •
)††• ¶
;††¶ ß
numeroAmostra
°°4 A
=
°°B C
$num
°°D E
;
°°E F
}
¢¢0 1
resultadoObj
ßß0 <
.
ßß< =
NumeroAvaliacao
ßß= L
=
ßßM N
numeroAvaliacao
ßßO ^
;
ßß^ _
resultadoObj
®®0 <
.
®®< =
NumeroAmostra
®®= J
=
®®K L
numeroAmostra
®®M Z
;
®®Z [
string
©©0 6
identificador
©©7 D
=
©©E F
unidades
©©G O
.
©©O P
Id
©©P R
+
©©S T
$str
©©U X
+
©©Y Z
operacao
©©[ c
.
©©c d
Id
©©d f
+
©©g h
$str
©©i l
+
©©m n
tarefa
©©o u
.
©©u v
Id
©©v x
+
©©y z
$str
©©{ ~
+©© Ä
monitoramento©©Å é
.©©é è
Id©©è ë
+©©í ì
$str©©î ó
+©©ò ô
resultadoObj©©ö ¶
.©©¶ ß

Sequencial©©ß ±
+©©≤ ≥
$str©©¥ ∑
+©©∏ π
resultadoObj©©∫ ∆
.©©∆ «
Banda©©« Ã
+©©Õ Œ
$str©©œ “
+©©” ‘
dataHoraMonitor©©’ ‰
.©©‰ Â
ToString©©Â Ì
(©©Ì Ó
$str©©Ó ˜
)©©˜ ¯
;©©¯ ˘
resultadoObj
™™0 <
.
™™< =
Identificador
™™= J
=
™™K L
identificador
™™M Z
;
™™Z [
resultadoObj
¨¨0 <
.
¨¨< =
	EmpresaId
¨¨= F
=
¨¨G H
empresa
¨¨I P
.
¨¨P Q
Id
¨¨Q S
;
¨¨S T
resultadoObj
≠≠0 <
.
≠≠< =
Empresa
≠≠= D
=
≠≠E F
empresa
≠≠G N
.
≠≠N O
Nome
≠≠O S
;
≠≠S T
resultadoObj
ÆÆ0 <
.
ÆÆ< =
	UnidadeId
ÆÆ= F
=
ÆÆG H
unidades
ÆÆI Q
.
ÆÆQ R
Id
ÆÆR T
;
ÆÆT U
resultadoObj
ØØ0 <
.
ØØ< =
Unidade
ØØ= D
=
ØØE F
unidades
ØØG O
.
ØØO P
Nome
ØØP T
;
ØØT U
resultadoObj
∞∞0 <
.
∞∞< =
DepartamentoId
∞∞= K
=
∞∞L M
departamento
∞∞N Z
.
∞∞Z [
Id
∞∞[ ]
;
∞∞] ^
resultadoObj
±±0 <
.
±±< =
Departamento
±±= I
=
±±J K
departamento
±±L X
.
±±X Y
Nome
±±Y ]
;
±±] ^
resultadoObj
≤≤0 <
.
≤≤< =

OperacaoId
≤≤= G
=
≤≤H I
operacao
≤≤J R
.
≤≤R S
Id
≤≤S U
;
≤≤U V
resultadoObj
≥≥0 <
.
≥≥< =
Operacao
≥≥= E
=
≥≥F G
operacao
≥≥H P
.
≥≥P Q
Nome
≥≥Q U
;
≥≥U V
resultadoObj
¥¥0 <
.
¥¥< =
TarefaId
¥¥= E
=
¥¥F G
tarefa
¥¥H N
.
¥¥N O
Id
¥¥O Q
;
¥¥Q R
resultadoObj
µµ0 <
.
µµ< =
Tarefa
µµ= C
=
µµD E
tarefa
µµF L
.
µµL M
Nome
µµM Q
;
µµQ R
resultadoObj
∑∑0 <
.
∑∑< =
MonitoramentoId
∑∑= L
=
∑∑M N
monitoramento
∑∑O \
.
∑∑\ ]
Id
∑∑] _
;
∑∑_ `
resultadoObj
∏∏0 <
.
∏∏< =
Monitoramento
∏∏= J
=
∏∏K L
monitoramento
∏∏M Z
.
∏∏Z [
Nome
∏∏[ _
;
∏∏_ `
resultadoObj
ππ0 <
.
ππ< =
	ProdutoId
ππ= F
=
ππG H
produto
ππI P
.
ππP Q
Id
ππQ S
;
ππS T
resultadoObj
∫∫0 <
.
∫∫< =
Produto
∫∫= D
=
∫∫E F
produto
∫∫G N
.
∫∫N O
Nome
∫∫O S
;
∫∫S T
resultadoObj
ºº0 <
.
ºº< =
Monitor
ºº= D
=
ººE F
Convert
ººG N
.
ººN O
ToInt32
ººO V
(
ººV W
	usuarioId
ººW `
)
ºº` a
;
ººa b
resultadoObj
ΩΩ0 <
.
ΩΩ< =
Minimo
ΩΩ= C
=
ΩΩD E
$str
ΩΩF P
;
ΩΩP Q
resultadoObj
ææ0 <
.
ææ< =
Maximo
ææ= C
=
ææD E
$str
ææF P
;
ææP Q
resultadoObj
øø0 <
.
øø< =
Acesso
øø= C
=
øøD E
$str
øøF O
;
øøO P
if
¡¡0 2
(
¡¡3 4
!
¡¡4 5
string
¡¡5 ;
.
¡¡; <
IsNullOrEmpty
¡¡< I
(
¡¡I J
	versaoApp
¡¡J S
)
¡¡S T
)
¡¡T U
{
¬¬0 1
resultadoObj
√√4 @
.
√√@ A
	VersaoAPP
√√A J
=
√√K L
	versaoApp
√√M V
;
√√V W
resultadoObj
ƒƒ4 @
.
ƒƒ@ A
Mobile
ƒƒA G
=
ƒƒH I
true
ƒƒJ N
;
ƒƒN O
}
≈≈0 1
else
∆∆0 4
{
««0 1
resultadoObj
»»4 @
.
»»@ A
Mobile
»»A G
=
»»H I
false
»»J O
;
»»O P
}
……0 1
resultadoObj
ÀÀ0 <
.
ÀÀ< =
Peso
ÀÀ= A
=
ÀÀB C
$num
ÀÀD E
;
ÀÀE F
resultadoObj
ÃÃ0 <
.
ÃÃ< =
Data
ÃÃ= A
=
ÃÃB C$
verificacaoTipificacao
ÃÃD Z
.
ÃÃZ [
DataHora
ÃÃ[ c
;
ÃÃc d
resultadoObj
ÕÕ0 <
.
ÕÕ< =
DataHora
ÕÕ= E
=
ÕÕF G$
verificacaoTipificacao
ÕÕH ^
.
ÕÕ^ _
DataHora
ÕÕ_ g
;
ÕÕg h
resultadoObj
ŒŒ0 <
.
ŒŒ< =
DataTipificacao
ŒŒ= L
=
ŒŒM N$
verificacaoTipificacao
ŒŒO e
.
ŒŒe f
DataHora
ŒŒf n
;
ŒŒn o
resultadoObj
œœ0 <
.
œœ< =
DataHoraMonitor
œœ= L
=
œœM N$
verificacaoTipificacao
œœO e
.
œœe f
DataHora
œœf n
;
œœn o
}
––, -
if
““, .
(
““/ 0
conforme
““0 8
==
““9 ;
true
““< @
)
““@ A
{
””, -
resultadoObj
‘‘0 <
.
‘‘< =
Avaliacao_2
‘‘= H
=
‘‘I J
$num
‘‘K L
;
‘‘L M
}
’’, -
else
÷÷, 0
{
◊◊, -
resultadoObj
ÿÿ0 <
.
ÿÿ< =
Avaliacao_2
ÿÿ= H
=
ÿÿI J
$num
ÿÿK L
;
ÿÿL M
}
ŸŸ, -
resultadoObj
€€, 8
.
€€8 9
Avaliacao_1
€€9 D
=
€€E F
(
€€G H
resultadoObj
€€H T
.
€€T U
Avaliacao_2
€€U `
==
€€a c
$num
€€d e
)
€€e f
?
€€g h
$str
€€i s
:
€€t u
$str€€v Ñ
;€€Ñ Ö
if
··, .
(
··/ 0
res
··0 3
==
··4 6
null
··7 ;
)
··; <
{
‚‚, -
db
‰‰0 2
.
‰‰2 3

Resultados
‰‰3 =
.
‰‰= >
Add
‰‰> A
(
‰‰A B
resultadoObj
‰‰B N
)
‰‰N O
;
‰‰O P
}
ÂÂ, -
db
ÊÊ, .
.
ÊÊ. /
SaveChanges
ÊÊ/ :
(
ÊÊ: ;
)
ÊÊ; <
;
ÊÊ< =
}
˜˜( )
return
˘˘( .
Json
˘˘/ 3
(
˘˘3 4
mensagem
˘˘4 <
(
˘˘< =
$str
˘˘= b
,
˘˘b c

alertaTipo
˘˘d n
.
˘˘n o
info
˘˘o s
)
˘˘s t
,
˘˘t u"
JsonRequestBehavior˘˘v â
.˘˘â ä
AllowGet˘˘ä í
)˘˘í ì
;˘˘ì î
}
˚˚$ %
catch
¸¸$ )
(
¸¸* +
	Exception
¸¸+ 4
ex
¸¸5 7
)
¸¸7 8
{
˝˝$ %
string
˛˛( .
t
˛˛/ 0
=
˛˛1 2
ex
˛˛3 5
.
˛˛5 6
ToString
˛˛6 >
(
˛˛> ?
)
˛˛? @
;
˛˛@ A
var
ˇˇ( +
inner
ˇˇ, 1
=
ˇˇ2 3
ex
ˇˇ4 6
.
ˇˇ6 7
InnerException
ˇˇ7 E
.
ˇˇE F
	IsNotNull
ˇˇF O
(
ˇˇO P
)
ˇˇP Q
?
ˇˇR S
ex
ˇˇT V
.
ˇˇV W
InnerException
ˇˇW e
.
ˇˇe f
Message
ˇˇf m
:
ˇˇn o
$str
ˇˇp }
;
ˇˇ} ~
return
ÄÄ( .
Json
ÄÄ/ 3
(
ÄÄ3 4
mensagem
ÄÄ4 <
(
ÄÄ< =
$strÄÄ= å
+ÄÄç é
tÄÄè ê
+ÄÄë í
$strÄÄì û
+ÄÄü †
innerÄÄ° ¶
+ÄÄß ®
$strÄÄ© π
+ÄÄ∫ ª
conexaoÄÄº √
+ÄÄƒ ≈
$strÄÄ∆ …
,ÄÄ…  

alertaTipoÄÄÀ ’
.ÄÄ’ ÷
warningÄÄ÷ ›
,ÄÄ› ﬁ"
reenviarRequisicaoÄÄﬂ Ò
:ÄÄÒ Ú
trueÄÄÛ ˜
)ÄÄ˜ ¯
)ÄÄ¯ ˘
;ÄÄ˘ ˙
}
ÇÇ$ %
}
ÉÉ  !
}
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ (
ex
ÜÜ) +
)
ÜÜ+ ,
{
áá 
string
àà "
t
àà# $
=
àà% &
ex
àà' )
.
àà) *
ToString
àà* 2
(
àà2 3
)
àà3 4
;
àà4 5
var
ââ 
inner
ââ  %
=
ââ& '
ex
ââ( *
.
ââ* +
InnerException
ââ+ 9
.
ââ9 :
	IsNotNull
ââ: C
(
ââC D
)
ââD E
?
ââF G
ex
ââH J
.
ââJ K
InnerException
ââK Y
.
ââY Z
Message
ââZ a
:
ââb c
$str
ââd q
;
ââq r
return
ãã "
Json
ãã# '
(
ãã' (
mensagem
ãã( 0
(
ãã0 1
$strãã1 ƒ
+ãã≈ ∆
tãã« »
+ãã…  
$strããÀ ÷
+ãã◊ ÿ
innerããŸ ﬁ
+ããﬂ ‡
$strãã· Ò
+ããÚ Û
conexaoããÙ ˚
+ãã¸ ˝
$strãã˛ Å
,ããÅ Ç

alertaTipoããÉ ç
.ããç é
warningããé ï
,ããï ñ"
reenviarRequisicaoããó ©
:ãã© ™
trueãã´ Ø
)ããØ ∞
,ãã∞ ±#
JsonRequestBehaviorãã≤ ≈
.ãã≈ ∆
AllowGetãã∆ Œ
)ããŒ œ
;ããœ –
}
åå 
}
çç 
}
éé 
}
èè 
return
ëë 
Json
ëë 
(
ëë 
mensagem
ëë  
(
ëë  !
$strëë! æ
,ëëæ ø

alertaTipoëë¿  
.ëë  À
warningëëÀ “
,ëë“ ”"
reenviarRequisicaoëë‘ Ê
:ëëÊ Á
trueëëË Ï
)ëëÏ Ì
,ëëÌ Ó#
JsonRequestBehaviorëëÔ Ç
.ëëÇ É
AllowGetëëÉ ã
)ëëã å
;ëëå ç
}
ìì 	
[
ïï 	
HttpPost
ïï	 
]
ïï 
[
ññ 	
Route
ññ	 
(
ññ 
$str
ññ ,
)
ññ, -
]
ññ- .
public
óó 

JsonResult
óó )
buscarTipificacaoSelectList
óó 5
(
óó5 6
string
óó6 <
data
óó= A
,
óóA B
string
óóC I
unidade
óóJ Q
)
óóQ R
{
òò 	
try
öö 
{
õõ 
var
úú 
retorno
úú 
=
úú 
new
úú !
List
úú" &
<
úú& '$
VerificacaoTipificacao
úú' =
>
úú= >
(
úú> ?
)
úú? @
;
úú@ A
int
ùù 
	unidadeId
ùù 
=
ùù 
Convert
ùù  '
.
ùù' (
ToInt32
ùù( /
(
ùù/ 0
unidade
ùù0 7
)
ùù7 8
;
ùù8 9
var
ûû 
queryString
ûû 
=
ûû  !
$str
ûû" $
;
ûû$ %
var
üü 
dataDate
üü 
=
üü 
DateTime
üü '
.
üü' (

ParseExact
üü( 2
(
üü2 3
data
üü3 7
,
üü7 8
$str
üü9 E
,
üüE F
CultureInfo
üüG R
.
üüR S
InvariantCulture
üüS c
)
üüc d
;
üüd e
data
†† 
=
†† 
DateTime
†† 
.
††  

ParseExact
††  *
(
††* +
data
††+ /
,
††/ 0
$str
††1 =
,
††= >
CultureInfo
††? J
.
††J K
InvariantCulture
††K [
)
††[ \
.
††\ ]
ToString
††] e
(
††e f
$str
††f r
)
††r s
;
††s t
string
¢¢ 
conexao
¢¢ 
=
¢¢  
System
¢¢! '
.
¢¢' (
Configuration
¢¢( 5
.
¢¢5 6"
ConfigurationManager
¢¢6 J
.
¢¢J K
ConnectionStrings
¢¢K \
[
¢¢\ ]
$str
¢¢] b
]
¢¢b c
.
¢¢c d
ConnectionString
¢¢d t
;
¢¢t u
queryString
££ 
=
££ 
$str
££ e
+
££f g
data
££h l
+
££m n
$str££o Ç
+££É Ñ
	unidadeId££Ö é
+££è ê
$str££ë î
;££î ï
using
¶¶ 
(
¶¶ 
SqlConnection
¶¶ $

connection
¶¶% /
=
¶¶0 1
new
¶¶2 5
SqlConnection
¶¶6 C
(
¶¶C D
conexao
¶¶D K
)
¶¶K L
)
¶¶L M
{
ßß 

SqlCommand
®® 
command
®® &
=
®®' (
new
®®) ,

SqlCommand
®®- 7
(
®®7 8
queryString
®®8 C
,
®®C D

connection
®®E O
)
®®O P
;
®®P Q

connection
™™ 
.
™™ 
Open
™™ #
(
™™# $
)
™™$ %
;
™™% &
using
´´ 
(
´´ 
SqlDataReader
´´ (
reader
´´) /
=
´´0 1
command
´´2 9
.
´´9 :
ExecuteReader
´´: G
(
´´G H
)
´´H I
)
´´I J
{
¨¨ 
List
≠≠ 
<
≠≠ 
object
≠≠ #
>
≠≠# $
	resultado
≠≠% .
=
≠≠/ 0
new
≠≠1 4
List
≠≠5 9
<
≠≠9 :
object
≠≠: @
>
≠≠@ A
(
≠≠A B
)
≠≠B C
;
≠≠C D
while
ÆÆ 
(
ÆÆ 
reader
ÆÆ %
.
ÆÆ% &
Read
ÆÆ& *
(
ÆÆ* +
)
ÆÆ+ ,
)
ÆÆ, -
{
ØØ 
retorno
∞∞ #
.
∞∞# $
Add
∞∞$ '
(
∞∞' (
new
∞∞( +$
VerificacaoTipificacao
∞∞, B
{
±± 
Id
≤≤  "
=
≤≤# $
(
≤≤% &
int
≤≤& )
)
≤≤) *
reader
≤≤* 0
[
≤≤0 1
$num
≤≤1 2
]
≤≤2 3
,
≤≤3 4

Sequencial
≥≥  *
=
≥≥+ ,
(
≥≥- .
int
≥≥. 1
)
≥≥1 2
reader
≥≥2 8
[
≥≥8 9
$num
≥≥9 :
]
≥≥: ;
,
≥≥; <
Banda
¥¥  %
=
¥¥& '
(
¥¥( )
byte
¥¥) -
)
¥¥- .
reader
¥¥. 4
[
¥¥4 5
$num
¥¥5 6
]
¥¥6 7
,
¥¥7 8
DataHora
µµ  (
=
µµ) *
(
µµ+ ,
DateTime
µµ, 4
)
µµ4 5
reader
µµ5 ;
[
µµ; <
$num
µµ< =
]
µµ= >
,
µµ> ?
	UnidadeId
∂∂  )
=
∂∂* +
(
∂∂, -
int
∂∂- 0
)
∂∂0 1
reader
∂∂1 7
[
∂∂7 8
$num
∂∂8 9
]
∂∂9 :
,
∂∂: ;
Chave
∑∑  %
=
∑∑& '
reader
∑∑( .
[
∑∑. /
$num
∑∑/ 0
]
∑∑0 1
.
∑∑1 2
ToString
∑∑2 :
(
∑∑: ;
)
∑∑; <
,
∑∑< =
Status
∏∏  &
=
∏∏' (
(
∏∏) *
bool
∏∏* .
)
∏∏. /
reader
∏∏/ 5
[
∏∏5 6
$num
∏∏6 7
]
∏∏7 8
}
ππ 
)
ππ 
;
ππ 
}
ªª 
if
ºº 
(
ºº 
retorno
ºº #
.
ºº# $
Count
ºº$ )
>
ºº* +
$num
ºº, -
)
ºº- .
{
ΩΩ 
return
ææ "
Json
ææ# '
(
ææ' (
new
ææ( +
{
ææ, -
data
ææ. 2
=
ææ3 4
retorno
ææ5 <
}
ææ= >
,
ææ> ?!
JsonRequestBehavior
ææ@ S
.
ææS T
AllowGet
ææT \
)
ææ\ ]
;
ææ] ^
}
øø 
else
¿¿ 
{
¡¡ 
return
¬¬ "
Json
¬¬# '
(
¬¬' (
new
¬¬( +
{
¬¬, -
mensagemSemDados
¬¬. >
=
¬¬? @
$str¬¬A Å
}¬¬Ç É
,¬¬É Ñ#
JsonRequestBehavior¬¬Ö ò
.¬¬ò ô
AllowGet¬¬ô °
)¬¬° ¢
;¬¬¢ £
}
√√ 
}
ƒƒ 
}
∆∆ 
}
«« 
catch
»» 
(
»» 
	Exception
»» 
ex
»» 
)
»»  
{
…… 
var
   
inner
   
=
   
ex
   
.
   
InnerException
   -
.
  - .
	IsNotNull
  . 7
(
  7 8
)
  8 9
?
  : ;
ex
  < >
.
  > ?
InnerException
  ? M
.
  M N
Message
  N U
:
  V W
$str
  X e
;
  e f
return
ÀÀ 
Json
ÀÀ 
(
ÀÀ 
new
ÀÀ 
{
ÀÀ  !
mensagemException
ÀÀ" 3
=
ÀÀ4 5
ex
ÀÀ6 8
.
ÀÀ8 9
Message
ÀÀ9 @
+
ÀÀA B
$str
ÀÀC L
+
ÀÀM N
inner
ÀÀO T
}
ÀÀU V
,
ÀÀV W!
JsonRequestBehavior
ÀÀX k
.
ÀÀk l
AllowGet
ÀÀl t
)
ÀÀt u
;
ÀÀu v
}
ÃÃ 
}
–– 	
[
““ 	
HttpPost
““	 
]
““ 
[
”” 	
Route
””	 
(
”” 
$str
”” "
)
””" #
]
””# $
public
‘‘ 

JsonResult
‘‘ 
buscarTipificacao
‘‘ +
(
‘‘+ ,
string
‘‘, 2

sequencial
‘‘3 =
,
‘‘= >
string
‘‘? E
banda
‘‘F K
,
‘‘K L
string
‘‘M S
data
‘‘T X
,
‘‘X Y
string
‘‘Z `
unidade
‘‘a h
)
‘‘h i
{
’’ 	
try
◊◊ 
{
ÿÿ 
using
ŸŸ 
(
ŸŸ 
var
ŸŸ 
db
ŸŸ 
=
ŸŸ 
new
ŸŸ  # 
SGQ_GlobalEntities
ŸŸ$ 6
(
ŸŸ6 7
)
ŸŸ7 8
)
ŸŸ8 9
{
⁄⁄ 
data
‹‹ 
=
‹‹ 
DateTime
‹‹ #
.
‹‹# $

ParseExact
‹‹$ .
(
‹‹. /
data
‹‹/ 3
,
‹‹3 4
$str
‹‹5 A
,
‹‹A B
CultureInfo
‹‹C N
.
‹‹N O
InvariantCulture
‹‹O _
)
‹‹_ `
.
‹‹` a
ToString
‹‹a i
(
‹‹i j
$str
‹‹j v
)
‹‹v w
;
‹‹w x
int
ﬁﬁ 
id
ﬁﬁ 
=
ﬁﬁ 
Convert
ﬁﬁ $
.
ﬁﬁ$ %
ToInt32
ﬁﬁ% ,
(
ﬁﬁ, -
unidade
ﬁﬁ- 4
)
ﬁﬁ4 5
;
ﬁﬁ5 6
var
‡‡ 
unidades
‡‡  
=
‡‡! "
(
‡‡# $
from
‡‡$ (
p
‡‡) *
in
‡‡+ -
db
‡‡. 0
.
‡‡0 1
Unidades
‡‡1 9
where
··$ )
p
··* +
.
··+ ,
Id
··, .
==
··/ 1
id
··2 4
select
‚‚$ *
p
‚‚+ ,
)
‚‚, -
.
‚‚- .
FirstOrDefault
‚‚. <
(
‚‚< =
)
‚‚= >
;
‚‚> ?
string
ÂÂ 
queryString
ÂÂ &
=
ÂÂ' (
$str
ÂÂ) +
;
ÂÂ+ ,
string
ÊÊ 
conexao
ÊÊ "
=
ÊÊ# $
System
ÊÊ% +
.
ÊÊ+ ,
Configuration
ÊÊ, 9
.
ÊÊ9 :"
ConfigurationManager
ÊÊ: N
.
ÊÊN O
ConnectionStrings
ÊÊO `
[
ÊÊ` a
$str
ÊÊa f
]
ÊÊf g
.
ÊÊg h
ConnectionString
ÊÊh x
;
ÊÊx y
queryString
ËË 
=
ËË  !
$strËË" Ì
+ËËÓ Ô
$str
ÈÈ$ P
+
ÈÈQ R
$str
ÍÍ$ c
+
ÍÍd e
$strÎÎ$ É
+ÎÎÑ Ö
$str
ÏÏ$ a
+
ÏÏb c

sequencial
ÏÏd n
+
ÏÏo p
$strÏÏq Ç
+ÏÏÉ Ñ
bandaÏÏÖ ä
+ÏÏã å
$strÏÏç ∏
+ÏÏπ ∫
dataÏÏª ø
+ÏÏ¿ ¡
$strÏÏ¬ ◊
+ÏÏÿ Ÿ
unidadeÏÏ⁄ ·
+ÏÏ‚ „
$strÏÏ‰ Á
+ÏÏË È
$str
ÌÌ$ ;
+
ÌÌ< =

sequencial
ÌÌ> H
+
ÌÌI J
$str
ÌÌK ]
+
ÌÌ^ _
banda
ÌÌ` e
+
ÌÌf g
$strÌÌh ç
+ÌÌé è
dataÌÌê î
+ÌÌï ñ
$strÌÌó ≠
+ÌÌÆ Ø
unidadeÌÌ∞ ∑
+ÌÌ∏ π
$strÌÌ∫ ﬁ
;ÌÌﬁ ﬂ
using
 
(
 
SqlConnection
 (

connection
) 3
=
4 5
new
6 9
SqlConnection
: G
(
G H
conexao
H O
)
O P
)
P Q
{
ÒÒ 

SqlCommand
ÚÚ "
command
ÚÚ# *
=
ÚÚ+ ,
new
ÚÚ- 0

SqlCommand
ÚÚ1 ;
(
ÚÚ; <
queryString
ÚÚ< G
,
ÚÚG H

connection
ÚÚI S
)
ÚÚS T
;
ÚÚT U

connection
ÙÙ "
.
ÙÙ" #
Open
ÙÙ# '
(
ÙÙ' (
)
ÙÙ( )
;
ÙÙ) *
data
ıı 
=
ıı 
DateTime
ıı '
.
ıı' (

ParseExact
ıı( 2
(
ıı2 3
data
ıı3 7
,
ıı7 8
$str
ıı9 E
,
ııE F
CultureInfo
ııG R
.
ııR S
InvariantCulture
ııS c
)
ııc d
.
ııd e
ToString
ııe m
(
ıım n
$str
ıın z
)
ıız {
;
ıı{ |
using
˜˜ 
(
˜˜ 
SqlDataReader
˜˜ ,
reader
˜˜- 3
=
˜˜4 5
command
˜˜6 =
.
˜˜= >
ExecuteReader
˜˜> K
(
˜˜K L
)
˜˜L M
)
˜˜M N
{
¯¯ 
List
˙˙  
<
˙˙  !
object
˙˙! '
>
˙˙' (
	resultado
˙˙) 2
=
˙˙3 4
new
˙˙5 8
List
˙˙9 =
<
˙˙= >
object
˙˙> D
>
˙˙D E
(
˙˙E F
)
˙˙F G
;
˙˙G H
while
˚˚ !
(
˚˚" #
reader
˚˚# )
.
˚˚) *
Read
˚˚* .
(
˚˚. /
)
˚˚/ 0
)
˚˚0 1
{
¸¸ 
string
˝˝  &
verificacaoId
˝˝' 4
=
˝˝5 6
reader
˝˝7 =
[
˝˝= >
$num
˝˝> ?
]
˝˝? @
.
˝˝@ A
ToString
˝˝A I
(
˝˝I J
)
˝˝J K
;
˝˝K L
string
˛˛  &
resultadoId
˛˛' 2
=
˛˛3 4
reader
˛˛5 ;
[
˛˛; <
$num
˛˛< =
]
˛˛= >
.
˛˛> ?
ToString
˛˛? G
(
˛˛G H
)
˛˛H I
;
˛˛I J
string
ˇˇ  &
tarefaId
ˇˇ' /
=
ˇˇ0 1
reader
ˇˇ2 8
[
ˇˇ8 9
$num
ˇˇ9 :
]
ˇˇ: ;
.
ˇˇ; <
ToString
ˇˇ< D
(
ˇˇD E
)
ˇˇE F
;
ˇˇF G
string
ÄÄ  &
caracteristicaId
ÄÄ' 7
=
ÄÄ8 9
reader
ÄÄ: @
[
ÄÄ@ A
$num
ÄÄA B
]
ÄÄB C
.
ÄÄC D
ToString
ÄÄD L
(
ÄÄL M
)
ÄÄM N
;
ÄÄN O
string
ÅÅ  &*
caracateristicaIdentificador
ÅÅ' C
=
ÅÅD E
reader
ÅÅF L
[
ÅÅL M
$num
ÅÅM N
]
ÅÅN O
.
ÅÅO P
ToString
ÅÅP X
(
ÅÅX Y
)
ÅÅY Z
;
ÅÅZ [
string
ÇÇ  &"
AreasParticipantesId
ÇÇ' ;
=
ÇÇ< =
reader
ÇÇ> D
[
ÇÇD E
$num
ÇÇE F
]
ÇÇF G
.
ÇÇG H
ToString
ÇÇH P
(
ÇÇP Q
)
ÇÇQ R
;
ÇÇR S
string
ÉÉ  &
NumeroAvaliacao
ÉÉ' 6
=
ÉÉ7 8
reader
ÉÉ9 ?
[
ÉÉ? @
$num
ÉÉ@ B
]
ÉÉB C
.
ÉÉC D
ToString
ÉÉD L
(
ÉÉL M
)
ÉÉM N
;
ÉÉN O
string
ÑÑ  &
NumeroAmostra
ÑÑ' 4
=
ÑÑ5 6
reader
ÑÑ7 =
[
ÑÑ= >
$num
ÑÑ> @
]
ÑÑ@ A
.
ÑÑA B
ToString
ÑÑB J
(
ÑÑJ K
)
ÑÑK L
;
ÑÑL M
	resultado
ÖÖ  )
.
ÖÖ) *
Add
ÖÖ* -
(
ÖÖ- .
new
ÖÖ. 1
{
ÜÜ  !
tipificacaoId
áá$ 1
=
áá2 3
verificacaoId
áá4 A
,
ááA B

sequencial
àà$ .
=
àà/ 0

sequencial
àà1 ;
,
àà; <
banda
ââ$ )
=
ââ* +
banda
ââ, 1
,
ââ1 2
data
ää$ (
=
ää) *
data
ää+ /
,
ää/ 0
unidade
ãã$ +
=
ãã, -
unidade
ãã. 5
,
ãã5 6
resultadoId
åå$ /
=
åå0 1
resultadoId
åå2 =
,
åå= >
tarefaId
çç$ ,
=
çç- .
tarefaId
çç/ 7
,
çç7 8
caracteristicaId
éé$ 4
=
éé5 6
caracteristicaId
éé7 G
,
ééG H*
caracateristicaIdentificador
èè$ @
=
èèA B*
caracateristicaIdentificador
èèC _
,
èè_ `"
AreasParticipantesId
êê$ 8
=
êê9 :"
AreasParticipantesId
êê; O
,
êêO P
NumeroAvaliacao
ëë$ 3
=
ëë4 5
NumeroAvaliacao
ëë6 E
,
ëëE F
NumeroAmostra
íí$ 1
=
íí2 3
NumeroAmostra
íí4 A
}
ìì  !
)
ìì! "
;
ìì" #
}
ïï 
if
ññ 
(
ññ  
	resultado
ññ  )
.
ññ) *
Count
ññ* /
>
ññ0 1
$num
ññ2 3
)
ññ3 4
{
óó 
return
óó $
Json
óó% )
(
óó) *
new
óó* -
{
óó. /
	resultado
óó0 9
=
óó: ;
	resultado
óó< E
,
óóE F
	IsSucesso
óóG P
=
óóQ R
true
óóS W
}
óóX Y
,
óóY Z!
JsonRequestBehavior
óó[ n
.
óón o
AllowGet
óóo w
)
óów x
;
óóx y
}
óóz {
else
òò  
{
ôô 
return
ôô $
Json
ôô% )
(
ôô) *
new
ôô* -
{
ôô. /
mensagem
ôô0 8
=
ôô9 :
$str
ôô; {
,
ôô{ |
	IsSucessoôô} Ü
=ôôá à
trueôôâ ç
}ôôé è
,ôôè ê#
JsonRequestBehaviorôôë §
.ôô§ •
AllowGetôô• ≠
)ôô≠ Æ
;ôôÆ Ø
}ôô∞ ±
}
öö 
}
õõ 
}
°° 
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
§§ 
return
•• 
Json
•• 
(
•• 
new
•• 
{
••  !
mensagem
••" *
=
••+ ,
ex
••- /
.
••/ 0
Message
••0 7
+
••8 9
$str
••: C
+
••D E
ex
••F H
.
••H I
InnerException
••I W
.
••W X
Message
••X _
,
••_ `
	IsSucesso
••a j
=
••k l
true
••m q
,
••q r
	exMessage
••s |
=
••} ~
ex•• Å
.••Å Ç
Message••Ç â
+••ä ã
$str••å ì
+••î ï
ex••ñ ò
.••ò ô
InnerException••ô ß
.••ß ®
Message••® Ø
}••∞ ±
,••± ≤#
JsonRequestBehavior••≥ ∆
.••∆ «
AllowGet••« œ
)••œ –
;••– —
}
¶¶ 
}
©© 	
public
´´ 
bool
´´ ,
verificacaoTipificaoComparacao
´´ 2
(
´´2 3
string
´´3 9
unidadeCodigo
´´: G
,
´´G H
string
´´I O
data
´´P T
,
´´T U
string
´´V \

sequencial
´´] g
,
´´g h
string
´´i o
banda
´´p u
,
´´u v
Unidades
´´w 
unidades´´Ä à
,´´à â
string´´ä ê
	empresaId´´ë ö
,´´ö õ
string´´ú ¢
departamentoId´´£ ±
,´´± ≤
string´´≥ π
	tarefaIdm´´∫ √
,´´√ ƒ
string´´≈ À
conexao´´Ã ”
,´´” ‘
string´´’ €
[´´€ ‹
]´´‹ ›
varComparacao´´ﬁ Î
)´´Î Ï
{
¨¨ 	
bool
≤≤ 
conforme
≤≤ 
=
≤≤ 
true
≤≤  
;
≤≤  !
string
µµ 
[
µµ 
]
µµ 
comparacaoUnica
µµ $
=
µµ% &
{
µµ' (
$str
µµ) 2
,
µµ2 3
$str
µµ4 <
,
µµ< =
$str
µµ> I
}
µµJ K
;
µµK L
string
ππ 
[
ππ 
]
ππ !
comparacaoRESULTADO
ππ (
=
ππ) *
varComparacao
ππ+ 8
;
ππ8 9
string
ºº 
queryString
ºº 
=
ºº  
$strºº! ˝
+ºº˛ ˇ
$str
ΩΩ  A
+
ΩΩB C
$str
ææ  O
+
ææP Q
$str
øø  j
+
øøk l
$str¿¿  Ç
+¿¿É Ñ
$str¡¡  ß
+¡¡® ©
$str
¬¬  2
+
¬¬3 4
unidadeCodigo
¬¬5 B
+
¬¬C D
$str
¬¬E o
+
¬¬p q
data
¬¬r v
+
¬¬w x
$str¬¬y ô
+¬¬ö õ

sequencial¬¬ú ¶
+¬¬ß ®
$str¬¬© ª
+¬¬º Ω
banda¬¬æ √
+¬¬ƒ ≈
$str¬¬∆  
+¬¬À Ã
$str
√√  ,
+
√√- .
$strƒƒ  œ
+ƒƒ– —
$str
≈≈  K
+
≈≈L M
$str
∆∆  U
+
∆∆V W
$str««  ”
+««‘ ’
$str»»  Æ
+»»Ø ∞
$str
……  8
+
……9 :
unidadeCodigo
……; H
+
……I J
$str
……K x
+
……y z
data
……{ 
+……Ä Å
$str……Ç §
+……• ¶

sequencial……ß ±
+……≤ ≥
$str……¥ »
+………  
banda……À –
+……— “
$str……” ÿ
;……ÿ Ÿ
using
ÃÃ 
(
ÃÃ 
SqlConnection
ÃÃ  

connection
ÃÃ! +
=
ÃÃ, -
new
ÃÃ. 1
SqlConnection
ÃÃ2 ?
(
ÃÃ? @
System
ÃÃ@ F
.
ÃÃF G
Configuration
ÃÃG T
.
ÃÃT U"
ConfigurationManager
ÃÃU i
.
ÃÃi j
ConnectionStrings
ÃÃj {
[
ÃÃ{ |
$strÃÃ| Å
]ÃÃÅ Ç
.ÃÃÇ É 
ConnectionStringÃÃÉ ì
)ÃÃì î
)ÃÃî ï
{
ÕÕ 

SqlCommand
ŒŒ 
command
ŒŒ "
=
ŒŒ# $
new
ŒŒ% (

SqlCommand
ŒŒ) 3
(
ŒŒ3 4
queryString
ŒŒ4 ?
,
ŒŒ? @

connection
ŒŒA K
)
ŒŒK L
;
ŒŒL M
try
–– 
{
—— 

connection
““ 
.
““ 
Open
““ #
(
““# $
)
““$ %
;
““% &
using
‘‘ 
(
‘‘ 
SqlDataReader
‘‘ (
reader
‘‘) /
=
‘‘0 1
command
‘‘2 9
.
‘‘9 :
ExecuteReader
‘‘: G
(
‘‘G H
)
‘‘H I
)
‘‘I J
{
’’ 
List
◊◊ 
<
◊◊ *
ResultadoComparacaoValidacao
◊◊ 9
>
◊◊9 :

comparacao
◊◊; E
=
◊◊F G
new
◊◊H K
List
◊◊L P
<
◊◊P Q*
ResultadoComparacaoValidacao
◊◊Q m
>
◊◊m n
(
◊◊n o
)
◊◊o p
;
◊◊p q
while
ŸŸ 
(
ŸŸ 
reader
ŸŸ %
.
ŸŸ% &
Read
ŸŸ& *
(
ŸŸ* +
)
ŸŸ+ ,
)
ŸŸ, -
{
⁄⁄ 
string
‹‹ "5
'idCaracteristicaTipificacaoVTResultados
‹‹# J
=
‹‹K L
reader
‹‹M S
[
‹‹S T
$num
‹‹T U
]
‹‹U V
.
‹‹V W
ToString
‹‹W _
(
‹‹_ `
)
‹‹` a
;
‹‹a b
string
›› "!
labelCaracteristica
››# 6
=
››7 8
reader
››9 ?
[
››? @
$num
››@ A
]
››A B
.
››B C
ToString
››C K
(
››K L
)
››L M
;
››M N
string
ﬁﬁ "4
&idCaracteristicaTipificacaoVTValidacao
ﬁﬁ# I
=
ﬁﬁJ K
reader
ﬁﬁL R
[
ﬁﬁR S
$num
ﬁﬁS T
]
ﬁﬁT U
.
ﬁﬁU V
ToString
ﬁﬁV ^
(
ﬁﬁ^ _
)
ﬁﬁ_ `
;
ﬁﬁ` a
if
·· 
(
··  5
'idCaracteristicaTipificacaoVTResultados
··  G
!=
··H J4
&idCaracteristicaTipificacaoVTValidacao
··K q
&&
··r t$
MatrizStrinComparacao··u ä
(··ä ã#
comparacaoRESULTADO··ã û
,··û ü#
labelCaracteristica··† ≥
)··≥ ¥
)··¥ µ
{
‚‚ 
conforme
„„  (
=
„„) *
false
„„+ 0
;
„„0 1

comparacao
ÂÂ  *
.
ÂÂ* +
Add
ÂÂ+ .
(
ÂÂ. /
new
ÊÊ* -*
ResultadoComparacaoValidacao
ÊÊ. J
(
ÊÊJ K
)
ÊÊK L
{
ÁÁ* +
localTabela
ÈÈ. 9
=
ÈÈ: ;
reader
ÈÈ< B
[
ÈÈB C
$num
ÈÈC D
]
ÈÈD E
.
ÈÈE F
ToString
ÈÈF N
(
ÈÈN O
)
ÈÈO P
,
ÈÈP Q
nCadEmpresa
ÍÍ. 9
=
ÍÍ: ;
reader
ÍÍ< B
[
ÍÍB C
$num
ÍÍC D
]
ÍÍD E
.
ÍÍE F
ToString
ÍÍF N
(
ÍÍN O
)
ÍÍO P
,
ÍÍP Q
dataMovimento
ÎÎ. ;
=
ÎÎ< =
Convert
ÎÎ> E
.
ÎÎE F

ToDateTime
ÎÎF P
(
ÎÎP Q
reader
ÎÎQ W
[
ÎÎW X
$num
ÎÎX Y
]
ÎÎY Z
.
ÎÎZ [
ToString
ÎÎ[ c
(
ÎÎc d
)
ÎÎd e
)
ÎÎe f
,
ÎÎf g
iSequencial
ÏÏ. 9
=
ÏÏ: ;
Convert
ÏÏ< C
.
ÏÏC D
ToInt32
ÏÏD K
(
ÏÏK L
reader
ÏÏL R
[
ÏÏR S
$num
ÏÏS T
]
ÏÏT U
.
ÏÏU V
ToString
ÏÏV ^
(
ÏÏ^ _
)
ÏÏ_ `
)
ÏÏ` a
,
ÏÏa b
iBanda
ÌÌ. 4
=
ÌÌ5 6
Convert
ÌÌ7 >
.
ÌÌ> ?
ToInt32
ÌÌ? F
(
ÌÌF G
reader
ÌÌG M
[
ÌÌM N
$num
ÌÌN O
]
ÌÌO P
.
ÌÌP Q
ToString
ÌÌQ Y
(
ÌÌY Z
)
ÌÌZ [
)
ÌÌ[ \
,
ÌÌ\ ]!
idCaracteristicaVTR
ÓÓ. A
=
ÓÓB C
reader
ÓÓD J
[
ÓÓJ K
$num
ÓÓK L
]
ÓÓL M
.
ÓÓM N
ToString
ÓÓN V
(
ÓÓV W
)
ÓÓW X
,
ÓÓX Y 
identificadorLabel
ÔÔ. @
=
ÔÔA B
reader
ÔÔC I
[
ÔÔI J
$num
ÔÔJ K
]
ÔÔK L
.
ÔÔL M
ToString
ÔÔM U
(
ÔÔU V
)
ÔÔV W
,
ÔÔW X!
idCaracteristicaVTV
. A
=
B C
reader
D J
[
J K
$num
K L
]
L M
.
M N
ToString
N V
(
V W
)
W X
}
ÚÚ* +
)
ÚÚ+ ,
;
ÚÚ, -
}
ÛÛ 
}
ıı 
if
˜˜ 
(
˜˜ 
conforme
˜˜ $
==
˜˜% '
false
˜˜( -
)
˜˜- .
{
¯¯ 
var
˙˙ 

valoresVTR
˙˙  *
=
˙˙+ ,
(
˙˙- .
from
˙˙. 2
p
˙˙3 4
in
˙˙5 7

comparacao
˙˙8 B
where
˚˚. 3
p
˚˚4 5
.
˚˚5 6
localTabela
˚˚6 A
==
˚˚B D
$str
˚˚E J
select
¸¸. 4
p
¸¸5 6
)
¸¸6 7
.
¸¸7 8
ToList
¸¸8 >
(
¸¸> ?
)
¸¸? @
;
¸¸@ A
var
ˇˇ 

valoresVTV
ˇˇ  *
=
ˇˇ+ ,
(
ˇˇ- .
from
ˇˇ. 2
p
ˇˇ3 4
in
ˇˇ5 7

comparacao
ˇˇ8 B
where
ÄÄ. 3
p
ÄÄ4 5
.
ÄÄ5 6
localTabela
ÄÄ6 A
==
ÄÄB D
$str
ÄÄE J
select
ÅÅ. 4
p
ÅÅ5 6
)
ÅÅ6 7
.
ÅÅ7 8
ToList
ÅÅ8 >
(
ÅÅ> ?
)
ÅÅ? @
;
ÅÅ@ A
foreach
ÑÑ #
(
ÑÑ$ %
var
ÑÑ% (
p
ÑÑ) *
in
ÑÑ+ -

valoresVTR
ÑÑ. 8
)
ÑÑ8 9
{
ÖÖ 
if
áá  "
(
áá# $#
MatrizStrinComparacao
áá$ 9
(
áá9 :
comparacaoUnica
áá: I
,
ááI J
p
ááK L
.
ááL M 
identificadorLabel
ááM _
)
áá_ `
==
ááa c
true
áád h
)
ááh i
{
àà  !
var
ää$ ' 
valorComparacaoVTV
ää( :
=
ää; <
(
ää= >
from
ää> B
pV
ääC E
in
ääF H

valoresVTV
ääI S
where
ãã> C
pV
ããD F
.
ããF G 
identificadorLabel
ããG Y
==
ããZ \
p
ãã] ^
.
ãã^ _ 
identificadorLabel
ãã_ q
select
åå> D
pV
ååE G
)
ååG H
.
ååH I
FirstOrDefault
ååI W
(
ååW X
)
ååX Y
;
ååY Z
if
èè$ &
(
èè' ( 
valorComparacaoVTV
èè( :
!=
èè; =
null
èè> B
)
èèB C
{
êê$ %
p
íí( )
.
íí) *!
idCaracteristicaVTV
íí* =
=
íí> ? 
valorComparacaoVTV
íí@ R
.
ííR S!
idCaracteristicaVTV
ííS f
;
ííf g

valoresVTV
îî( 2
.
îî2 3
Remove
îî3 9
(
îî9 : 
valorComparacaoVTV
îî: L
)
îîL M
;
îîM N
}
òò$ %
}
ôô  !7
)VerificacaoTipificacaoComparacaoAdicionar
õõ  I
(
õõI J
unidadeCodigo
õõJ W
,
õõW X

sequencial
õõY c
,
õõc d
banda
õõe j
,
õõj k
p
õõl m
.
õõm n!
identificadorLabelõõn Ä
,õõÄ Å
põõÇ É
.õõÉ Ñ
dataMovimentoõõÑ ë
.õõë í
ToStringõõí ö
(õõö õ
)õõõ ú
,õõú ù
põõû ü
.õõü †#
idCaracteristicaVTRõõ† ≥
,õõ≥ ¥
põõµ ∂
.õõ∂ ∑#
idCaracteristicaVTVõõ∑  
)õõ  À
;õõÀ Ã
}
úú 
foreach
üü #
(
üü$ %
var
üü% (
p
üü) *
in
üü+ -

valoresVTV
üü. 8
)
üü8 9
{
†† 7
)VerificacaoTipificacaoComparacaoAdicionar
¢¢  I
(
¢¢I J
unidadeCodigo
¢¢J W
,
¢¢W X

sequencial
¢¢Y c
,
¢¢c d
banda
¢¢e j
,
¢¢j k
p
¢¢l m
.
¢¢m n!
identificadorLabel¢¢n Ä
,¢¢Ä Å
p¢¢Ç É
.¢¢É Ñ
dataMovimento¢¢Ñ ë
.¢¢ë í
ToString¢¢í ö
(¢¢ö õ
)¢¢õ ú
,¢¢ú ù
p¢¢û ü
.¢¢ü †#
idCaracteristicaVTR¢¢† ≥
,¢¢≥ ¥
p¢¢µ ∂
.¢¢∂ ∑#
idCaracteristicaVTV¢¢∑  
)¢¢  À
;¢¢À Ã
}
££ 
}
§§ 
return
¶¶ 
conforme
¶¶ '
;
¶¶' (
}
ßß 
}
®® 
catch
©© 
(
©© 
	Exception
©©  
ex
©©! #
)
©©# $
{
™™ 
throw
∞∞ 
ex
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 
}
µµ 	
	protected
∂∂ 
void
∂∂ 7
)VerificacaoTipificacaoComparacaoAdicionar
∂∂ @
(
∂∂@ A
string
∂∂A G
uCodigo
∂∂H O
,
∂∂O P
string
∂∂Q W

sequencial
∂∂X b
,
∂∂b c
string
∂∂d j
banda
∂∂k p
,
∂∂p q
string
∂∂r x"
labelCaracteristica∂∂y å
,∂∂å ç
string∂∂é î
dataRegistro∂∂ï °
,∂∂° ¢
string
∑∑@ F,
idCaracteristicaTipificacaoVTR
∑∑G e
,
∑∑e f
string
∑∑g m-
idCaracteristicaTipificacaoVTV∑∑n å
)∑∑å ç
{
∏∏ 	
using
∫∫ 
(
∫∫ 
var
∫∫ 
db
∫∫ 
=
∫∫ 
new
∫∫  
SGQ_GlobalEntities
∫∫  2
(
∫∫2 3
)
∫∫3 4
)
∫∫4 5
{
ªª 
try
ºº 
{
ΩΩ 
var
ææ .
 VerificacaoTipificacaoComparacao
ææ 8
=
ææ9 :
new
ææ; >.
 VerificacaoTipificacaoComparacao
ææ? _
(
ææ_ `
)
ææ` a
;
ææa b.
 VerificacaoTipificacaoComparacao
øø 4
.
øø4 5

nCdEmpresa
øø5 ?
=
øø@ A
Convert
øøB I
.
øøI J
ToInt32
øøJ Q
(
øøQ R
uCodigo
øøR Y
)
øøY Z
;
øøZ [.
 VerificacaoTipificacaoComparacao
¿¿ 4
.
¿¿4 5

Sequencial
¿¿5 ?
=
¿¿@ A
Convert
¿¿B I
.
¿¿I J
ToInt32
¿¿J Q
(
¿¿Q R

sequencial
¿¿R \
)
¿¿\ ]
;
¿¿] ^.
 VerificacaoTipificacaoComparacao
¡¡ 4
.
¡¡4 5
Banda
¡¡5 :
=
¡¡; <
Convert
¡¡= D
.
¡¡D E
ToInt32
¡¡E L
(
¡¡L M
banda
¡¡M R
)
¡¡R S
;
¡¡S T.
 VerificacaoTipificacaoComparacao
¬¬ 4
.
¬¬4 5
Identificador
¬¬5 B
=
¬¬C D!
labelCaracteristica
¬¬E X
;
¬¬X Y.
 VerificacaoTipificacaoComparacao
√√ 4
.
√√4 5
NumCaracteristica
√√5 F
=
√√G H
$num
√√I J
;
√√J K.
 VerificacaoTipificacaoComparacao
≈≈ 4
.
≈≈4 5
DataHora
≈≈5 =
=
≈≈> ?
Convert
≈≈@ G
.
≈≈G H

ToDateTime
≈≈H R
(
≈≈R S
dataRegistro
≈≈S _
)
≈≈_ `
;
≈≈` a
if
∆∆ 
(
∆∆ 
!
∆∆ 
string
∆∆ 
.
∆∆  
IsNullOrEmpty
∆∆  -
(
∆∆- .,
idCaracteristicaTipificacaoVTR
∆∆. L
)
∆∆L M
)
∆∆M N
{
«« .
 VerificacaoTipificacaoComparacao
»» 8
.
»»8 9
valorSGQ
»»9 A
=
»»B C
Convert
»»D K
.
»»K L
ToInt32
»»L S
(
»»S T,
idCaracteristicaTipificacaoVTR
»»T r
)
»»r s
;
»»s t
}
…… 
if
   
(
   
!
   
string
   
.
    
IsNullOrEmpty
    -
(
  - .,
idCaracteristicaTipificacaoVTV
  . L
)
  L M
)
  M N
{
ÀÀ .
 VerificacaoTipificacaoComparacao
ÃÃ 8
.
ÃÃ8 9
valorJBS
ÃÃ9 A
=
ÃÃB C
Convert
ÃÃD K
.
ÃÃK L
ToInt32
ÃÃL S
(
ÃÃS T,
idCaracteristicaTipificacaoVTV
ÃÃT r
)
ÃÃr s
;
ÃÃs t
}
ÕÕ 
db
ŒŒ 
.
ŒŒ .
 VerificacaoTipificacaoComparacao
ŒŒ 7
.
ŒŒ7 8
Add
ŒŒ8 ;
(
ŒŒ; <.
 VerificacaoTipificacaoComparacao
ŒŒ< \
)
ŒŒ\ ]
;
ŒŒ] ^
db
œœ 
.
œœ 
SaveChanges
œœ "
(
œœ" #
)
œœ# $
;
œœ$ %
}
–– 
catch
—— 
(
—— 
	Exception
——  
ex
——! #
)
——# $
{
““ 
string
”” 
erro
”” 
=
””  !
ex
””" $
.
””$ %
Message
””% ,
;
””, -
}
’’ 
}
÷÷ 
}
◊◊ 	
public
ÓÓ 
string
ÓÓ 
mensagemErro
ÓÓ "
{
ÓÓ# $
get
ÓÓ% (
;
ÓÓ( )
set
ÓÓ* -
;
ÓÓ- .
}
ÓÓ/ 0
public
ˆˆ 
bool
ˆˆ #
MatrizStrinComparacao
ˆˆ )
(
ˆˆ) *
string
ˆˆ* 0
[
ˆˆ0 1
]
ˆˆ1 2
matriz
ˆˆ3 9
,
ˆˆ9 :
string
ˆˆ; A
valorComparar
ˆˆB O
)
ˆˆO P
{
˜˜ 	
if
˘˘ 
(
˘˘ 
matriz
˘˘ 
==
˘˘ 
null
˘˘ 
)
˘˘ 
{
˙˙ 
mensagemErro
˚˚ 
=
˚˚ 
$str
˚˚ 1
;
˚˚1 2
return
¸¸ 
false
¸¸ 
;
¸¸ 
}
˝˝ 
if
˛˛ 
(
˛˛ 
string
˛˛ 
.
˛˛ 
IsNullOrEmpty
˛˛ $
(
˛˛$ %
valorComparar
˛˛% 2
)
˛˛2 3
)
˛˛3 4
{
ˇˇ 
mensagemErro
ÄÄ 
=
ÄÄ 
$str
ÄÄ U
;
ÄÄU V
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÇÇ 
int
ÑÑ 
	strNumber
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
int
ÖÖ 
strIndex
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
for
ÜÜ 
(
ÜÜ 
	strNumber
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
	strNumber
ÜÜ  )
<
ÜÜ* +
matriz
ÜÜ, 2
.
ÜÜ2 3
Length
ÜÜ3 9
;
ÜÜ9 :
	strNumber
ÜÜ; D
++
ÜÜD F
)
ÜÜF G
{
áá 
strIndex
àà 
=
àà 
matriz
àà !
[
àà! "
	strNumber
àà" +
]
àà+ ,
.
àà, -
IndexOf
àà- 4
(
àà4 5
valorComparar
àà5 B
)
ààB C
;
ààC D
if
ââ 
(
ââ 
strIndex
ââ 
>=
ââ 
$num
ââ  !
)
ââ! "
{
ää 
return
ãã 
true
ãã 
;
ãã  
}
åå 
}
çç 
return
éé 
false
éé 
;
éé 
}
èè 	
private
ëë 
void
ëë 
AddToDictionary
ëë $
(
ëë$ %
DbDataReader
ëë% 1
reader
ëë2 8
,
ëë8 9

Dictionary
ëë: D
<
ëëD E
string
ëëE K
,
ëëK L
object
ëëM S
>
ëëS T
dict
ëëU Y
)
ëëY Z
{
íí 	
for
ìì 
(
ìì 
int
ìì 
i
ìì 
=
ìì 
$num
ìì 
;
ìì 
i
ìì 
<
ìì 
reader
ìì  &
.
ìì& '

FieldCount
ìì' 1
;
ìì1 2
i
ìì3 4
++
ìì4 6
)
ìì6 7
{
îî 
var
ññ 
_temp
ññ 
=
ññ 
reader
ññ "
[
ññ" #
i
ññ# $
]
ññ$ %
;
ññ% &
if
òò 
(
òò 
_temp
òò 
.
òò 
GetType
òò !
(
òò! "
)
òò" #
==
òò$ &
typeof
òò' -
(
òò- .
string
òò. 4
)
òò4 5
)
òò5 6
{
ôô 
_temp
öö 
=
öö 
_temp
öö !
.
öö! "
ToString
öö" *
(
öö* +
)
öö+ ,
.
öö, -
TrimEnd
öö- 4
(
öö4 5
)
öö5 6
;
öö6 7
}
õõ 
dict
ùù 
.
ùù 
Add
ùù 
(
ùù 
reader
ùù 
.
ùù  
GetName
ùù  '
(
ùù' (
i
ùù( )
)
ùù) *
.
ùù* +
ToString
ùù+ 3
(
ùù3 4
)
ùù4 5
,
ùù5 6
_temp
ùù7 <
)
ùù< =
;
ùù= >
}
ûû 
}
üü 	
private
°° 
void
°° 
AddToDictionary
°° $
(
°°$ %
SqlDataReader
°°% 2
reader
°°3 9
,
°°9 :

Dictionary
°°; E
<
°°E F
string
°°F L
,
°°L M
object
°°N T
>
°°T U
dict
°°V Z
)
°°Z [
{
¢¢ 	
for
££ 
(
££ 
int
££ 
i
££ 
=
££ 
$num
££ 
;
££ 
i
££ 
<
££ 
reader
££  &
.
££& '

FieldCount
££' 1
;
££1 2
i
££3 4
++
££4 6
)
££6 7
{
§§ 
var
¶¶ 
_temp
¶¶ 
=
¶¶ 
reader
¶¶ "
[
¶¶" #
i
¶¶# $
]
¶¶$ %
;
¶¶% &
if
®® 
(
®® 
_temp
®® 
.
®® 
GetType
®® !
(
®®! "
)
®®" #
==
®®$ &
typeof
®®' -
(
®®- .
string
®®. 4
)
®®4 5
)
®®5 6
{
©© 
_temp
™™ 
=
™™ 
_temp
™™ !
.
™™! "
ToString
™™" *
(
™™* +
)
™™+ ,
.
™™, -
TrimEnd
™™- 4
(
™™4 5
)
™™5 6
;
™™6 7
}
´´ 
dict
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
reader
≠≠ 
.
≠≠  
GetName
≠≠  '
(
≠≠' (
i
≠≠( )
)
≠≠) *
.
≠≠* +
ToString
≠≠+ 3
(
≠≠3 4
)
≠≠4 5
,
≠≠5 6
_temp
≠≠7 <
)
≠≠< =
;
≠≠= >
}
ÆÆ 
}
ØØ 	
}
≤≤ 
public
≥≥ 

class
≥≥ *
ResultadoComparacaoValidacao
≥≥ -
{
¥¥ 
public
µµ 
string
µµ 
localTabela
µµ !
{
µµ" #
get
µµ$ '
;
µµ' (
set
µµ) ,
;
µµ, -
}
µµ. /
public
∂∂ 
DateTime
∂∂ 
dataMovimento
∂∂ %
{
∂∂& '
get
∂∂( +
;
∂∂+ ,
set
∂∂- 0
;
∂∂0 1
}
∂∂2 3
public
∑∑ 
string
∑∑ 
nCadEmpresa
∑∑ !
{
∑∑" #
get
∑∑$ '
;
∑∑' (
set
∑∑) ,
;
∑∑, -
}
∑∑. /
public
∏∏ 
int
∏∏ 
iSequencial
∏∏ 
{
∏∏  
get
∏∏! $
;
∏∏$ %
set
∏∏& )
;
∏∏) *
}
∏∏+ ,
public
ππ 
int
ππ 
iBanda
ππ 
{
ππ 
get
ππ 
;
ππ  
set
ππ! $
;
ππ$ %
}
ππ& '
public
∫∫ 
string
∫∫ !
idCaracteristicaVTR
∫∫ )
{
∫∫* +
get
∫∫, /
;
∫∫/ 0
set
∫∫1 4
;
∫∫4 5
}
∫∫6 7
public
ªª 
string
ªª  
identificadorLabel
ªª (
{
ªª) *
get
ªª+ .
;
ªª. /
set
ªª0 3
;
ªª3 4
}
ªª5 6
public
ºº 
string
ºº !
idCaracteristicaVTV
ºº )
{
ºº* +
get
ºº, /
;
ºº/ 0
set
ºº1 4
;
ºº4 5
}
ºº6 7
}
ΩΩ 
}øø ‘#
ãC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\VerificacaoTipificacao\VerificacaoTipificacaoResultadosController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[		 

EnableCors		 
(		 
origins		 
:		 
$str		 
,		 
headers		 %
:		% &
$str		' *
,		* +
methods		, 3
:		3 4
$str		5 8
)		8 9
]		9 :
[

 
RoutePrefix

 
(

 
$str

 
)

 
]

 
public 

class 6
*VerificacaoTipificacaoResultadosController ;
:< =
ApiController> K
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
void 
Save 
( ,
 VerificacaoTipificacaoResultados 9
vtr: =
)= >
{ 	
using 
( 
var 
db 
= 
new 
SGQ_GlobalEntities  2
(2 3
)3 4
)4 5
{ 
string 
ctid 
= 
vtr !
.! "'
CaracteristicaTipificacaoId" =
==> @
nullA E
?F G
$strH N
:O P
$strQ T
+U V
vtrW Z
.Z ['
CaracteristicaTipificacaoId[ v
+w x
$stry |
;| }
string 
apid 
= 
vtr !
.! " 
AreasParticipantesId" 6
==7 9
null: >
?? @
$strA G
:H I
$strJ M
+N O
vtrP S
.S T 
AreasParticipantesIdT h
+i j
$strk n
;n o
string 
sql 
= 
$str	 ò
+
ô ö
$strJ N
+N O
vtrP S
.S T
TarefaIdT \
+] ^
$str_ d
+e f
ctidg k
+l m
$strn s
+t u
vtrv y
.y z
Chavez 
+
Ä Å
$str
Ç á
+
á à
apid
â ç
+
é è
$str
ê ì
;
ì î
db 
. 
Database 
. 
ExecuteSqlCommand -
(- .
sql. 1
)1 2
;2 3
} 
} 	
} 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str 
) 
] 
public   

class   
VTController   
:   
ApiController    -
{!! 
["" 	
HttpPost""	 
]"" 
[## 	
Route##	 
(## 
$str## 
)## 
]## 
public$$ 
void$$ 
Save$$ 
($$ "
VerificacaoTipificacao$$ /
vt$$0 2
)$$2 3
{%% 	
using&& 
(&& 
var&& 
db&& 
=&& 
new&& 
SGQ_GlobalEntities&&  2
(&&2 3
)&&3 4
)&&4 5
{'' 
db(( 
.(( 
Database(( 
.(( 
ExecuteSqlCommand(( -
(((- .
$str	((. ä
+
((ä ã
$str))  
+))! "
vt))# %
.))% &

Sequencial))& 0
+))1 2
$str))3 9
+)): ;
vt))< >
.))> ?
Banda))? D
+))E F
$str))G M
+))N O
vt))P R
.))R S
DataHora))S [
+))[ \
$str))\ b
+))c d
vt))e g
.))g h
	UnidadeId))h q
+))r s
$str))t z
+)){ |
vt))} 
.	)) Ä
Chave
))Ä Ö
+
))Ü á
$str
))à é
+
))è ê
vt
))ë ì
.
))ì î
Status
))î ö
+
))õ ú
$str
))ù ¢
)
))¢ £
;
))£ §
}** 
}++ 	
},, 
}// Ó
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Volume\VolumeController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
Volume$ *
{ 
[ 
RoutePrefix 
( 
$str 
) 
] 
[		 

EnableCors		 
(		 
origins		 
:		 
$str		 
,		 
headers		 %
:		% &
$str		' *
,		* +
methods		, 3
:		3 4
$str		5 8
)		8 9
]		9 :
public

 

class

 
VolumeController

 !
:

" #
ApiController

$ 1
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str -
)- .
]. /
public 
int 
GetVolumeDesossa #
(# $
int$ '
	idUnidade( 1
)1 2
{ 	
var 
query 
= 
$str 
+ 
$str	 á
+
à â
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str ~
+	 Ä
$str +
+, -
	idUnidade. 7
+8 9
$str	: é
+
è ê
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str }
+~ 
$str   }
+  ~ 
$str!! ~
+	!! Ä
$str"" }
+""~ 
$str	## ê
+
##ë í
$str$$ }
+$$~ 
$str%% }
+%%~ 
$str&& }
+&&~ 
$str'' }
;''} ~
var(( 
result(( 
=(( 
db(( 
.(( 
Database(( $
.(($ %
SqlQuery((% -
<((- .
int((. 1
>((1 2
(((2 3
query((3 8
)((8 9
.((9 :
FirstOrDefault((: H
(((H I
)((I J
;((J K
return)) 
result)) 
;)) 
}** 	
[,, 	
HttpPost,,	 
],, 
[-- 	
Route--	 
(-- 
$str-- )
)--) *
]--* +
public.. 
int.. 
GetVolumeGRD.. 
(..  
int..  #
	idUnidade..$ -
)..- .
{// 	
var00 
query00 
=00 
$str00 
+00 
$str	11 à
+
11â ä
$str22 }
+22~ 
$str33 }
+33~ 
$str44 }
+44~ 
$str55 ~
+	55 Ä
$str66 +
+66, -
	idUnidade66. 7
+668 9
$str	66: ê
+
66ë í
$str77 }
+77~ 
$str88 }
+88~ 
$str99 }
+99~ 
$str:: }
+::~ 
$str;; }
+;;~ 
$str<< }
+<<~ 
$str== }
+==~ 
$str>> }
+>>~ 
$str?? ~
+	?? Ä
$str@@ }
+@@~ 
$str	AA ê
+
AAë í
$strBB }
+BB~ 
$strCC }
+CC~ 
$strDD }
+DD~ 
$strEE }
;EE} ~
varFF 
resultFF 
=FF 
dbFF 
.FF 
DatabaseFF $
.FF$ %
SqlQueryFF% -
<FF- .
intFF. 1
>FF1 2
(FF2 3
queryFF3 8
)FF8 9
.FF9 :
FirstOrDefaultFF: H
(FFH I
)FFI J
;FFJ K
returnGG 
resultGG 
;GG 
}HH 	
}KK 
}LL çâ
ÜC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\VerificacaoTipificacao\VTVerificacaoTipificacaoApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str /
)/ 0
]0 1
public 

class 1
%VTVerificacaoTipificacaoApiController 6
:7 8
BaseApiController9 J
{ 
public 
string 
mensagemErro "
{# $
get% (
;( )
set* -
;- .
}/ 0
SgqDbDevEntities 
dbSgq 
; 
public 1
%VTVerificacaoTipificacaoApiController 4
(4 5
)5 6
{ 	
dbSgq%% 
=%% 
new%% 
SgqDbDevEntities%% (
(%%( )
)%%) *
;%%* +
dbSgq&& 
.&& 
Configuration&& 
.&&  
LazyLoadingEnabled&&  2
=&&3 4
false&&5 :
;&&: ;
dbSgq'' 
.'' 
Configuration'' 
.''  !
ValidateOnSaveEnabled''  5
=''6 7
false''8 =
;''= >
})) 	
[++ 	
Route++	 
(++ 
$str++ 
)++ 
]++ 
[,, 	
HttpPost,,	 
],, 
public-- 
void-- (
SaveVTVerificacaoTipificacao-- 0
(--0 1 
TipificacaoViewModel--1 E
model--F K
)--K L
{.. 	
var00 
bkp00 
=00 
JsonConvert00 !
.00! "
SerializeObject00" 1
(001 2
model002 7
)007 8
;008 9
var22 
VT22 
=22 
model22 
.22 "
VerificacaoTipificacao22 1
;221 2
var55 
verificacaoListJBS55 "
=55# $
new55% (
List55) -
<55- .$
VerificacaoTipificacaoV255. F
>55F G
(55G H
)55H I
;55I J
var66 
verificacaoListGRT66 "
=66# $
new66% (
List66) -
<66- .$
VerificacaoTipificacaoV266. F
>66F G
(66G H
)66H I
;66I J
var77 
verificacaoSalvar77 !
=77" #
new77$ '
List77( ,
<77, -$
VerificacaoTipificacaoV277- E
>77E F
(77F G
)77G H
;77H I&
SqlConnectionStringBuilder== &
connectionString==' 7
===8 9
new==: =&
SqlConnectionStringBuilder==> X
(==X Y
)==Y Z
;==Z [
connectionStringDD 
.DD 
PasswordDD %
=DD& '
$strDD( 5
;DD5 6
connectionStringEE 
.EE 
UserIDEE #
=EE$ %
$strEE& 6
;EE6 7
foreachII 
(II 
varII 
verificacaoII $
inII% '
modelII( -
.II- ."
VerificacaoTipificacaoII. D
)IID E
{JJ 
varLL 
controleErroLL  
=LL! "
falseLL# (
;LL( )
tryNN 
{OO 
stringQQ 
codigoUnidadeQQ (
;QQ( )
usingSS 
(SS 
varSS 
dbSS !
=SS" #
newSS$ '
DominioSS( /
.SS/ 0
SgqDbDevEntitiesSS0 @
(SS@ A
)SSA B
)SSB C
{TT 
intUU 
aUU 
=UU 
Int32UU  %
.UU% &
ParseUU& +
(UU+ ,
verificacaoUU, 7
.UU7 8
	UnidadeIdUU8 A
.UUA B
ToStringUUB J
(UUJ K
)UUK L
)UUL M
;UUM N
DominioVV 
.VV  

ParCompanyVV  *
companyVV+ 2
=VV3 4
dbVV5 7
.VV7 8

ParCompanyVV8 B
.VVB C
FirstOrDefaultVVC Q
(VVQ R
rVVR S
=>VVT V
rVVW X
.VVX Y
IdVVY [
==VV\ ^
aVV_ `
)VV` a
;VVa b
codigoUnidadeWW %
=WW& '
companyWW( /
.WW/ 0
CompanyNumberWW0 =
.WW= >
ToStringWW> F
(WWF G
)WWG H
;WWH I
connectionStringXX (
.XX( )
InitialCatalogXX) 7
=XX8 9
companyXX: A
.XXA B
DBServerXXB J
.XXJ K
ToStringXXK S
(XXS T
)XXT U
;XXU V
connectionStringYY (
.YY( )

DataSourceYY) 3
=YY4 5
companyYY6 =
.YY= >
IPServerYY> F
.YYF G
ToStringYYG O
(YYO P
)YYP Q
;YYQ R
}ZZ 
using\\ 
(\\ 
var\\ 
dbUnit\\ %
=\\& '
new\\( +
Factory\\, 3
(\\3 4
connectionString\\4 D
)\\D E
)\\E F
{]] 
string__ 
sql__ "
=__# $
$str__% N
+__O P
codigoUnidade__Q ^
+___ `
$str__a f
+__g h
verificacao__i t
.__t u
DataHora__u }
.__} ~
ToString	__~ Ü
(
__Ü á
$str
__á ë
)
__ë í
+
__ì î
$str
__ï ö
+
__õ ú
verificacao
__ù ®
.
__® ©

Sequencial
__© ≥
.
__≥ ¥
ToString
__¥ º
(
__º Ω
)
__Ω æ
;
__æ ø
dynamicaa 

resultFbedaa  *
=aa+ ,
dbUnitaa- 3
.aa3 4
QueryNinjaADOaa4 A
(aaA B
sqlaaB E
)aaE F
;aaF G
foreachdd 
(dd  !
vardd! $
fbeddd% )
indd* ,

resultFbeddd- 7
)dd7 8
{ee 
ifff 
(ff  
fbedff  $
.ff$ %
iBandaff% +
==ff, .
verificacaoff/ :
.ff: ;
Bandaff; @
)ff@ A
{gg 
varhh  #
verificacaoJBShh$ 2
=hh3 4
newhh5 8$
VerificacaoTipificacaoV2hh9 Q
(hhQ R
)hhR S
;hhS T
fbedii  $
.ii$ %
existeComparacaoii% 5
=ii6 7
trueii8 <
;ii< =
verificacaoJBSjj  .
.jj. /,
 JBS_nCdCaracteristicaTipificacaojj/ O
=jjP Q
fbedjjR V
.jjV W(
nCdCaracteristicaTipificacaojjW s
;jjs t
verificacaoJBSkk  .
.kk. /%
cIdentificadorTipificacaokk/ H
=kkI J
fbedkkK O
.kkO P%
cIdentificadorTipificacaokkP i
;kki j
verificacaoListJBSll  2
.ll2 3
Addll3 6
(ll6 7
verificacaoJBSll7 E
)llE F
;llF G
}mm 
}nn 
foreachqq 
(qq  !
varqq! $
iiqq% '
inqq( *
modelqq+ 0
.qq0 1,
 VerificacaoTipificacaoResultadosqq1 Q
.qqQ R
WhereqqR W
(qqW X
rqqX Y
=>qqZ \
rqq] ^
.qq^ _
Chaveqq_ d
==qqe g
verificacaoqqh s
.qqs t
Chaveqqt y
)qqy z
)qqz {
{rr 
varss 
verificacaoGRTss  .
=ss/ 0
newss1 4$
VerificacaoTipificacaoV2ss5 M
(ssM N
)ssN O
;ssO P
iftt 
(tt  
iitt  "
.tt" # 
AreasParticipantesIdtt# 7
==tt8 :
$strtt; A
)ttA B
{uu 
dynamicvv  '%
caracteristicaTipificacaovv( A
=vvB C

QueryNinjavvD N
(vvN O
dbSgqvvO T
,vvT U
$str	vvV ö
+
vvõ ú
ii
vvù ü
.
vvü †)
CaracteristicaTipificacaoId
vv† ª
)
vvª º
.
vvº Ω
FirstOrDefault
vvΩ À
(
vvÀ Ã
)
vvÃ Õ
;
vvÕ Œ
ifxx  "
(xx# $%
caracteristicaTipificacaoxx$ =
==xx> @
nullxxA E
)xxE F
continueyy$ ,
;yy, -
verificacaoGRT{{  .
.{{. /,
 GRT_nCdCaracteristicaTipificacao{{/ O
={{P Q%
caracteristicaTipificacao{{R k
.{{k l
nCdCaracteristica{{l }
;{{} ~
verificacaoGRT||  .
.||. /%
cIdentificadorTipificacao||/ H
=||I J%
caracteristicaTipificacao||K d
.||d e
cIdentificador||e s
;||s t
verificacaoGRT}}  .
.}}. /
cNmCaracteristica}}/ @
=}}A B%
caracteristicaTipificacao}}C \
.}}\ ]
cNmCaracteristica}}] n
;}}n o
verificacaoGRT~~  .
.~~. /
cSgCaracteristica~~/ @
=~~A B%
caracteristicaTipificacao~~C \
.~~\ ]
cSgCaracteristica~~] n
;~~n o 
verificacaoListGRT
ÄÄ  2
.
ÄÄ2 3
Add
ÄÄ3 6
(
ÄÄ6 7
verificacaoGRT
ÄÄ7 E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
else
ÇÇ  
{
ÉÉ 
dynamic
ÑÑ  '
aresParticipante
ÑÑ( 8
=
ÑÑ9 :

QueryNinja
ÑÑ; E
(
ÑÑE F
dbSgq
ÑÑF K
,
ÑÑK L
$strÑÑM ä
+ÑÑã å
iiÑÑç è
.ÑÑè ê$
AreasParticipantesIdÑÑê §
)ÑÑ§ •
.ÑÑ• ¶
FirstOrDefaultÑÑ¶ ¥
(ÑÑ¥ µ
)ÑÑµ ∂
;ÑÑ∂ ∑
verificacaoGRT
ÜÜ  .
.
ÜÜ. /.
 GRT_nCdCaracteristicaTipificacao
ÜÜ/ O
=
ÜÜP Q
aresParticipante
ÜÜR b
.
ÜÜb c
nCdCaracteristica
ÜÜc t
;
ÜÜt u
verificacaoGRT
áá  .
.
áá. /'
cIdentificadorTipificacao
áá/ H
=
ááI J
aresParticipante
ááK [
.
áá[ \
cIdentificador
áá\ j
;
ááj k
verificacaoGRT
àà  .
.
àà. /
cNmCaracteristica
àà/ @
=
ààA B
aresParticipante
ààC S
.
ààS T
cNmCaracteristica
ààT e
;
ààe f
verificacaoGRT
ââ  .
.
ââ. /
cSgCaracteristica
ââ/ @
=
ââA B
aresParticipante
ââC S
.
ââS T
cSgCaracteristica
ââT e
;
ââe f 
verificacaoListGRT
ãã  2
.
ãã2 3
Add
ãã3 6
(
ãã6 7
verificacaoGRT
ãã7 E
)
ããE F
;
ããF G
}
çç 
}
èè 
var
ëë 
listRemoverGRT
ëë *
=
ëë+ ,
new
ëë- 0
List
ëë1 5
<
ëë5 6
int
ëë6 9
>
ëë9 :
(
ëë: ;
)
ëë; <
;
ëë< =
var
íí 
listRemoverJBS
íí *
=
íí+ ,
new
íí- 0
List
íí1 5
<
íí5 6
int
íí6 9
>
íí9 :
(
íí: ;
)
íí; <
;
íí< =
foreach
ìì 
(
ìì  !
var
ìì! $
grt
ìì% (
in
ìì) + 
verificacaoListGRT
ìì, >
)
ìì> ?
{
îî 
var
ïï "
verificacaoSalvarObj
ïï  4
=
ïï5 6
new
ïï7 :&
VerificacaoTipificacaoV2
ïï; S
(
ïïS T
)
ïïT U
;
ïïU V
var
ññ $
comparacaoExistenteJBS
ññ  6
=
ññ7 8 
verificacaoListJBS
ññ9 K
.
ññK L
FirstOrDefault
ññL Z
(
ññZ [
r
ññ[ \
=>
ññ] _
r
ññ` a
.
ñña b'
cIdentificadorTipificacao
ññb {
==
ññ| ~
grtññ Ç
.ññÇ É)
cIdentificadorTipificacaoññÉ ú
&&ññù ü
rññ† °
.ññ° ¢0
 JBS_nCdCaracteristicaTipificacaoññ¢ ¬
==ññ√ ≈
grtññ∆ …
.ññ…  0
 GRT_nCdCaracteristicaTipificacaoññ  Í
)ññÍ Î
;ññÎ Ï
if
óó 
(
óó  $
comparacaoExistenteJBS
óó  6
!=
óó7 9
null
óó: >
)
óó> ?
{
òò "
verificacaoSalvarObj
öö  4
=
öö5 6
new
öö7 :&
VerificacaoTipificacaoV2
öö; S
(
ööS T
)
ööT U
{
õõ  !.
 GRT_nCdCaracteristicaTipificacao
úú$ D
=
úúE F
grt
úúG J
.
úúJ K.
 GRT_nCdCaracteristicaTipificacao
úúK k
,
úúk l.
 JBS_nCdCaracteristicaTipificacao
ùù$ D
=
ùùE F$
comparacaoExistenteJBS
ùùG ]
.
ùù] ^.
 JBS_nCdCaracteristicaTipificacao
ùù^ ~
,
ùù~ 
cNmCaracteristica
ûû$ 5
=
ûû6 7
grt
ûû8 ;
.
ûû; <
cNmCaracteristica
ûû< M
,
ûûM N'
cIdentificadorTipificacao
üü$ =
=
üü> ?
grt
üü@ C
.
üüC D'
cIdentificadorTipificacao
üüD ]
,
üü] ^
cSgCaracteristica
††$ 5
=
††6 7
grt
††8 ;
.
††; <
cSgCaracteristica
††< M
}
¢¢  !
;
¢¢! "
verificacaoSalvar
§§  1
.
§§1 2
Add
§§2 5
(
§§5 6"
verificacaoSalvarObj
§§6 J
)
§§J K
;
§§K L
listRemoverGRT
••  .
.
••. /
Add
••/ 2
(
••2 3 
verificacaoListGRT
••3 E
.
••E F
IndexOf
••F M
(
••M N
grt
••N Q
)
••Q R
)
••R S
;
••S T
listRemoverJBS
¶¶  .
.
¶¶. /
Add
¶¶/ 2
(
¶¶2 3 
verificacaoListJBS
¶¶3 E
.
¶¶E F
IndexOf
¶¶F M
(
¶¶M N$
comparacaoExistenteJBS
¶¶N d
)
¶¶d e
)
¶¶e f
;
¶¶f g
}
ßß 
}
®® 
listRemoverJBS
™™ &
=
™™' (
listRemoverJBS
™™) 7
.
™™7 8
Distinct
™™8 @
(
™™@ A
)
™™A B
.
™™B C
ToList
™™C I
(
™™I J
)
™™J K
;
™™K L
foreach
¨¨ 
(
¨¨  !
var
¨¨! $
i
¨¨% &
in
¨¨' )
listRemoverGRT
¨¨* 8
.
¨¨8 9
OrderByDescending
¨¨9 J
(
¨¨J K
r
¨¨K L
=>
¨¨M O
r
¨¨P Q
)
¨¨Q R
)
¨¨R S 
verificacaoListGRT
≠≠ .
.
≠≠. /
RemoveAt
≠≠/ 7
(
≠≠7 8
i
≠≠8 9
)
≠≠9 :
;
≠≠: ;
foreach
ØØ 
(
ØØ  !
var
ØØ! $
i
ØØ% &
in
ØØ' )
listRemoverJBS
ØØ* 8
.
ØØ8 9
OrderByDescending
ØØ9 J
(
ØØJ K
r
ØØK L
=>
ØØM O
r
ØØP Q
)
ØØQ R
)
ØØR S 
verificacaoListJBS
∞∞ .
.
∞∞. /
RemoveAt
∞∞/ 7
(
∞∞7 8
i
∞∞8 9
)
∞∞9 :
;
∞∞: ;
if
≤≤ 
(
≤≤  
verificacaoListGRT
≤≤ .
.
≤≤. /
Count
≤≤/ 4
>
≤≤5 6
$num
≤≤7 8
)
≤≤8 9
verificacaoSalvar
≥≥ -
.
≥≥- .
AddRange
≥≥. 6
(
≥≥6 7 
verificacaoListGRT
≥≥7 I
)
≥≥I J
;
≥≥J K
if
µµ 
(
µµ  
verificacaoListJBS
µµ .
.
µµ. /
Count
µµ/ 4
>
µµ5 6
$num
µµ7 8
)
µµ8 9
verificacaoSalvar
∂∂ -
.
∂∂- .
AddRange
∂∂. 6
(
∂∂6 7 
verificacaoListJBS
∂∂7 I
)
∂∂I J
;
∂∂J K
var
∏∏ 
key
∏∏ 
=
∏∏  !
model
∏∏" '
.
∏∏' ($
VerificacaoTipificacao
∏∏( >
[
∏∏> ?
$num
∏∏? @
]
∏∏@ A
.
∏∏A B
Chave
∏∏B G
;
∏∏G H
var
ππ 
jaExiste
ππ $
=
ππ% &
dbSgq
ππ' ,
.
ππ, -&
VerificacaoTipificacaoV2
ππ- E
.
ππE F
Where
ππF K
(
ππK L
r
ππL M
=>
ππN P
r
ππQ R
.
ππR S
Key
ππS V
.
ππV W
Equals
ππW ]
(
ππ] ^
key
ππ^ a
)
ππa b
)
ππb c
.
ππc d
ToList
ππd j
(
ππj k
)
ππk l
;
ππl m
if
∫∫ 
(
∫∫ 
jaExiste
∫∫ $
.
∫∫$ %
	IsNotNull
∫∫% .
(
∫∫. /
)
∫∫/ 0
)
∫∫0 1
{
∫∫2 3
dbSgq
∫∫4 9
.
∫∫9 :&
VerificacaoTipificacaoV2
∫∫: R
.
∫∫R S
RemoveRange
∫∫S ^
(
∫∫^ _
jaExiste
∫∫_ g
)
∫∫g h
;
∫∫h i
}
∫∫j k
foreach
ºº 
(
ºº  !
var
ºº! $
ver
ºº% (
in
ºº) +
verificacaoSalvar
ºº, =
)
ºº= >
{
ΩΩ 
ver
ææ 
.
ææ  
AddDate
ææ  '
=
ææ( )
DateTime
ææ* 2
.
ææ2 3
Now
ææ3 6
;
ææ6 7
ver
øø 
.
øø  
ParCompany_Id
øø  -
=
øø. /
model
øø0 5
.
øø5 6
	UnidadeId
øø6 ?
;
øø? @
ver
¿¿ 
.
¿¿  

UserSgq_Id
¿¿  *
=
¿¿+ ,
model
¿¿- 2
.
¿¿2 3
	AuditorId
¿¿3 <
;
¿¿< =
ver
¡¡ 
.
¡¡  

Sequencial
¡¡  *
=
¡¡+ ,
model
¡¡- 2
.
¡¡2 3$
VerificacaoTipificacao
¡¡3 I
[
¡¡I J
$num
¡¡J K
]
¡¡K L
.
¡¡L M

Sequencial
¡¡M W
;
¡¡W X
ver
¬¬ 
.
¬¬  
Banda
¬¬  %
=
¬¬& '
model
¬¬( -
.
¬¬- .$
VerificacaoTipificacao
¬¬. D
[
¬¬D E
$num
¬¬E F
]
¬¬F G
.
¬¬G H
Banda
¬¬H M
;
¬¬M N
ver
√√ 
.
√√  
CollectionDate
√√  .
=
√√/ 0
model
√√1 6
.
√√6 7$
VerificacaoTipificacao
√√7 M
[
√√M N
$num
√√N O
]
√√O P
.
√√P Q
DataHora
√√Q Y
;
√√Y Z
ver
ƒƒ 
.
ƒƒ  
Key
ƒƒ  #
=
ƒƒ$ %
model
ƒƒ& +
.
ƒƒ+ ,$
VerificacaoTipificacao
ƒƒ, B
[
ƒƒB C
$num
ƒƒC D
]
ƒƒD E
.
ƒƒE F
Chave
ƒƒF K
;
ƒƒK L
ver
≈≈ 
.
≈≈  (
ResultadoComparacaoGRT_JBS
≈≈  :
=
≈≈; <
ver
≈≈= @
.
≈≈@ A.
 GRT_nCdCaracteristicaTipificacao
≈≈A a
.
≈≈a b
GetValueOrDefault
≈≈b s
(
≈≈s t
)
≈≈t u
==
≈≈v x
ver
≈≈y |
.
≈≈| }/
 JBS_nCdCaracteristicaTipificacao≈≈} ù
.≈≈ù û!
GetValueOrDefault≈≈û Ø
(≈≈Ø ∞
)≈≈∞ ±
;≈≈± ≤
if
∆∆ 
(
∆∆  
jaExiste
∆∆  (
.
∆∆( )
	IsNotNull
∆∆) 2
(
∆∆2 3
)
∆∆3 4
)
∆∆4 5
{
∆∆6 7
ver
∆∆8 ;
.
∆∆; <
	AlterDate
∆∆< E
=
∆∆F G
DateTime
∆∆H P
.
∆∆P Q
Now
∆∆Q T
;
∆∆T U
}
∆∆V W
dbSgq
«« !
.
««! "&
VerificacaoTipificacaoV2
««" :
.
««: ;
Add
««; >
(
««> ?
ver
««? B
)
««B C
;
««C D
}
»» 
dbSgq
   
.
   
SaveChanges
   )
(
  ) *
)
  * +
;
  + ,
}
ÃÃ 
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ  
e
œœ! "
)
œœ" #
{
–– 
new
—— 
	CreateLog
—— !
(
——! "
new
——" %
	Exception
——& /
(
——/ 0
$str
——0 m
,
——m n
e
——o p
)
——p q
,
——q r
model
——s x
)
——x y
;
——y z
controleErro
““  
=
““! "
true
““# '
;
““' (
}
‘‘ 
if
÷÷ 
(
÷÷ 
!
÷÷ 
controleErro
÷÷ !
)
÷÷! "
{
◊◊ 
try
ÿÿ 
{
ŸŸ 
string
⁄⁄ 
[
⁄⁄ 
]
⁄⁄  
nome
⁄⁄! %
=
⁄⁄& '
new
⁄⁄( +
string
⁄⁄, 2
[
⁄⁄2 3
]
⁄⁄3 4
{
⁄⁄5 6
$str
⁄⁄7 C
,
⁄⁄C D
$str
⁄⁄E P
}
⁄⁄Q R
;
⁄⁄R S
foreach
‹‹ 
(
‹‹  !
var
‹‹! $
variavel
‹‹% -
in
‹‹. 0
nome
‹‹1 5
)
‹‹5 6
{
›› 
var
·· 
sql
··  #
=
··$ %
$str
··& (
+
··) *
$str
‚‚  B
+
‚‚C D
variavel
‚‚E M
+
‚‚N O
$str‚‚P ø
+‚‚¿ ¡
$str
„„  <
+
„„= >
verificacao
„„? J
.
„„J K
	UnidadeId
„„K T
.
„„T U
ToString
„„U ]
(
„„] ^
)
„„^ _
+
„„` a
$str„„b ≈
+„„∆ «
$str
‰‰  8
+
‰‰9 :
verificacao
‰‰; F
.
‰‰F G

Sequencial
‰‰G Q
.
‰‰Q R
ToString
‰‰R Z
(
‰‰Z [
)
‰‰[ \
+
‰‰] ^
$str‰‰_ ≈
+‰‰∆ «
$str
ÂÂ  :
+
ÂÂ; <
verificacao
ÂÂ= H
.
ÂÂH I
Banda
ÂÂI N
.
ÂÂN O
ToString
ÂÂO W
(
ÂÂW X
)
ÂÂX Y
+
ÂÂZ [
$strÂÂ\ ≈
+ÂÂ∆ «
$str
ÊÊ  ;
+
ÊÊ< =
verificacao
ÊÊ> I
.
ÊÊI J
DataHora
ÊÊJ R
.
ÊÊR S
ToString
ÊÊS [
(
ÊÊ[ \
$str
ÊÊ\ f
)
ÊÊf g
+
ÊÊh i
$strÊÊj ≈
+ÊÊ∆ «
$strËË  ø
+ËË¿ ¡
$strÈÈ  ø
+ÈÈ¿ ¡
$strÍÍ  ø
+ÍÍ¿ ¡
$strÎÎ  ø
+ÎÎ¿ ¡
$strÏÏ  ø
+ÏÏ¿ ¡
$strÌÌ  ø
+ÌÌ¿ ¡
$strÓÓ  ø
+ÓÓ¿ ¡
$strÔÔ  ø
+ÔÔ¿ ¡
$str  ø
+¿ ¡
$strÒÒ  ø
+ÒÒ¿ ¡
$strÚÚ  ø
+ÚÚ¿ ¡
$strÛÛ  ø
+ÛÛ¿ ¡
$strÙÙ  ø
+ÙÙ¿ ¡
$strıı  ø
+ıı¿ ¡
$strˆˆ  ø
+ˆˆ¿ ¡
$str˜˜  ø
+˜˜¿ ¡
$str¯¯  ø
+¯¯¿ ¡
$str˘˘  ø
+˘˘¿ ¡
$str˙˙  ø
+˙˙¿ ¡
$str˚˚  ø
+˚˚¿ ¡
$str¸¸  ø
+¸¸¿ ¡
$str˝˝  ø
+˝˝¿ ¡
$str˛˛  ø
+˛˛¿ ¡
$strˇˇ  ø
+ˇˇ¿ ¡
$strÄÄ  ø
+ÄÄ¿ ¡
$strÅÅ  ø
+ÅÅ¿ ¡
$strÇÇ  ø
+ÇÇ¿ ¡
$strÉÉ  ø
+ÉÉ¿ ¡
$strÑÑ  ø
+ÑÑ¿ ¡
$strÖÖ  ø
+ÖÖ¿ ¡
$strÜÜ  ø
+ÜÜ¿ ¡
$stráá  ø
+áá¿ ¡
$stràà  ø
+àà¿ ¡
$strââ  ø
+ââ¿ ¡
$strää  ø
+ää¿ ¡
$strãã  ø
+ãã¿ ¡
$stråå  ø
+åå¿ ¡
$strçç  ø
+çç¿ ¡
$stréé  ø
+éé¿ ¡
$strèè  ø
+èè¿ ¡
$strêê  ø
+êê¿ ¡
$strëë  ø
+ëë¿ ¡
$stríí  ø
+íí¿ ¡
$strìì  ø
+ìì¿ ¡
$strîî  ø
+îî¿ ¡
$strïï  ø
+ïï¿ ¡
$strññ  ø
+ññ¿ ¡
$stróó  ø
+óó¿ ¡
$stròò  ø
+òò¿ ¡
$strôô  ø
+ôô¿ ¡
$ströö  ø
+öö¿ ¡
$strõõ  ø
+õõ¿ ¡
$strúú  ø
+úú¿ ¡
$strùù  ø
+ùù¿ ¡
$strûû  ø
+ûû¿ ¡
$strüü  ø
+üü¿ ¡
$str††  ø
+††¿ ¡
$str°°  ø
+°°¿ ¡
$str¢¢  ø
+¢¢¿ ¡
$str££  ø
+££¿ ¡
$str§§  ø
+§§¿ ¡
$str••  ø
+••¿ ¡
$str¶¶  ø
+¶¶¿ ¡
$strßß  ø
+ßß¿ ¡
$str®®  ø
+®®¿ ¡
$str©©  ø
+©©¿ ¡
$str™™  ø
+™™¿ ¡
$str´´  ø
+´´¿ ¡
$str¨¨  ø
+¨¨¿ ¡
$str≠≠  ø
+≠≠¿ ¡
$strÆÆ  ø
+ÆÆ¿ ¡
$strØØ  ø
+ØØ¿ ¡
$str∞∞  ø
+∞∞¿ ¡
$str±±  ø
+±±¿ ¡
$str≤≤  ø
+≤≤¿ ¡
$str≥≥  ø
+≥≥¿ ¡
$str¥¥  ø
+¥¥¿ ¡
$strµµ  ø
+µµ¿ ¡
$str∂∂  ø
+∂∂¿ ¡
$str∑∑  ø
+∑∑¿ ¡
$str∏∏  ø
+∏∏¿ ¡
$strππ  ø
+ππ¿ ¡
$str∫∫  ø
+∫∫¿ ¡
$strªª  ø
+ªª¿ ¡
$strºº  ø
+ºº¿ ¡
$strΩΩ  ø
+ΩΩ¿ ¡
$strææ  ø
+ææ¿ ¡
$strøø  ø
+øø¿ ¡
$str¿¿  ø
+¿¿¿ ¡
$str¡¡  ø
+¡¡¿ ¡
$str¬¬  ø
+¬¬¿ ¡
$str√√  ø
+√√¿ ¡
$strƒƒ  ø
+ƒƒ¿ ¡
$str≈≈  ø
+≈≈¿ ¡
$str∆∆  ø
+∆∆¿ ¡
$str««  ø
+««¿ ¡
$str»»  ø
+»»¿ ¡
$str……  ø
+……¿ ¡
$str    ø
+  ¿ ¡
$strÀÀ  ø
+ÀÀ¿ ¡
$strÃÃ  ø
+ÃÃ¿ ¡
$strÕÕ  ø
+ÕÕ¿ ¡
$strŒŒ  ø
+ŒŒ¿ ¡
$strœœ  ø
+œœ¿ ¡
$str––  ø
+––¿ ¡
$str——  ø
+——¿ ¡
$str““  ø
+““¿ ¡
$str””  ø
+””¿ ¡
$str‘‘  ø
+‘‘¿ ¡
$str’’  ø
+’’¿ ¡
$str÷÷  ø
+÷÷¿ ¡
$str◊◊  ø
+◊◊¿ ¡
$strÿÿ  ø
+ÿÿ¿ ¡
$strŸŸ  ø
+ŸŸ¿ ¡
$str⁄⁄  ø
+⁄⁄¿ ¡
$str€€  ø
+€€¿ ¡
$str‹‹  ø
+‹‹¿ ¡
$str››  ø
+››¿ ¡
$strﬁﬁ  ø
+ﬁﬁ¿ ¡
$strﬂﬂ  ø
+ﬂﬂ¿ ¡
$str‡‡  ø
+‡‡¿ ¡
$str··  ø
+··¿ ¡
$str‚‚  ø
+‚‚¿ ¡
$str„„  ø
+„„¿ ¡
$str‰‰  ø
+‰‰¿ ¡
$strÂÂ  ø
+ÂÂ¿ ¡
$strÊÊ  ø
+ÊÊ¿ ¡
$strÁÁ  ø
+ÁÁ¿ ¡
$strËË  ø
+ËË¿ ¡
$strÈÈ  ø
+ÈÈ¿ ¡
$strÍÍ  ø
+ÍÍ¿ ¡
$strÎÎ  ø
+ÎÎ¿ ¡
$strÏÏ  ø
+ÏÏ¿ ¡
$strÌÌ  ø
+ÌÌ¿ ¡
$strÓÓ  ø
+ÓÓ¿ ¡
$strÔÔ  ø
+ÔÔ¿ ¡
$str  ø
+¿ ¡
$strÒÒ  ø
+ÒÒ¿ ¡
$strÚÚ  ø
+ÚÚ¿ ¡
$strÛÛ  ø
+ÛÛ¿ ¡
$strÙÙ  ø
+ÙÙ¿ ¡
$strıı  ø
+ıı¿ ¡
$strˆˆ  ø
+ˆˆ¿ ¡
$str˜˜  ø
+˜˜¿ ¡
$str¯¯  ø
+¯¯¿ ¡
$str˘˘  ø
+˘˘¿ ¡
$str˙˙  ø
+˙˙¿ ¡
$str˚˚  ø
+˚˚¿ ¡
$str¸¸  ø
+¸¸¿ ¡
$str˝˝  ø
+˝˝¿ ¡
$str˛˛  ø
+˛˛¿ ¡
$strˇˇ  ø
+ˇˇ¿ ¡
$strÄÄ  ø
+ÄÄ¿ ¡
$strÅÅ  ø
+ÅÅ¿ ¡
$strÇÇ  ø
+ÇÇ¿ ¡
$strÉÉ  ø
+ÉÉ¿ ¡
$strÑÑ  ø
+ÑÑ¿ ¡
$strÖÖ  ø
+ÖÖ¿ ¡
$strÜÜ  ø
+ÜÜ¿ ¡
$stráá  ø
+áá¿ ¡
$stràà  ø
+àà¿ ¡
$strââ  ø
+ââ¿ ¡
$strää  ø
+ää¿ ¡
$strãã  ø
;ããø ¿
string
èè "
conexao
èè# *
=
èè+ ,
System
èè- 3
.
èè3 4
Configuration
èè4 A
.
èèA B"
ConfigurationManager
èèB V
.
èèV W
ConnectionStrings
èèW h
[
èèh i
$str
èèi z
]
èèz {
.
èè{ |
ConnectionStringèè| å
;èèå ç
using
êê !
(
êê" #
SqlConnection
êê# 0

connection
êê1 ;
=
êê< =
new
êê> A
SqlConnection
êêB O
(
êêO P
conexao
êêP W
)
êêW X
)
êêX Y
{
ëë 

connection
íí  *
.
íí* +
Open
íí+ /
(
íí/ 0
)
íí0 1
;
íí1 2

SqlCommand
îî  *
command
îî+ 2
;
îî2 3
command
ññ  '
=
ññ( )
new
ññ* -

SqlCommand
ññ. 8
(
ññ8 9
sql
ññ9 <
,
ññ< =

connection
ññ> H
)
ññH I
;
ññI J
var
óó  #
iSql
óó$ (
=
óó) *
Convert
óó+ 2
.
óó2 3
ToInt32
óó3 :
(
óó: ;
command
óó; B
.
óóB C
ExecuteScalar
óóC P
(
óóP Q
)
óóQ R
)
óóR S
;
óóS T
if
ôô  "
(
ôô# $
iSql
ôô$ (
>
ôô) *
$num
ôô+ ,
)
ôô, -
{
öö  !
SyncServices
ùù$ 0
sync
ùù1 5
=
ùù6 7
new
ùù8 ;
SyncServices
ùù< H
(
ùùH I
)
ùùI J
;
ùùJ K
sync
ûû$ (
.
ûû( )
ProcessJson
ûû) 4
(
ûû4 5
null
ûû5 9
,
ûû9 :
iSql
ûû; ?
,
ûû? @
false
ûûA F
)
ûûF G
;
ûûG H
}
°°  !
else
££  $
{
§§  !
throw
¶¶$ )
new
¶¶* -
	Exception
¶¶. 7
(
¶¶7 8
$str
¶¶8 C
)
¶¶C D
;
¶¶D E
}
®®  !
}
™™ 
}
¨¨ 
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ $
e
ÆÆ% &
)
ÆÆ& '
{
ØØ 
new
∞∞ 
	CreateLog
∞∞ %
(
∞∞% &
new
∞∞& )
	Exception
∞∞* 3
(
∞∞3 4
$str∞∞4 Ö
,∞∞Ö Ü
e∞∞á à
)∞∞à â
,∞∞â ä
model∞∞ã ê
)∞∞ê ë
;∞∞ë í
}
≤≤ 
}
≥≥ 
}
¥¥ 
}
∂∂ 	
[
∫∫ 	
HttpGet
∫∫	 
]
∫∫ 
[
ªª 	
Route
ªª	 
(
ªª 
$str
ªª *
)
ªª* +
]
ªª+ ,
public
ºº 
string
ºº )
GetVTVerificacaoTipificacao
ºº 1
(
ºº1 2
String
ºº2 8
Date
ºº9 =
,
ºº= >
int
ºº? B
	UnidadeId
ººC L
)
ººL M
{
ΩΩ 	
string
ææ 
retorno
ææ 
=
ææ 
$str
ææ 
;
ææ  
try
øø 
{
¿¿ 
using
¬¬ 
(
¬¬ 
var
¬¬ 
db
¬¬ 
=
¬¬ 
new
¬¬  #
Dominio
¬¬$ +
.
¬¬+ ,
SgqDbDevEntities
¬¬, <
(
¬¬< =
)
¬¬= >
)
¬¬> ?
{
√√ 
var
ƒƒ 
sql
ƒƒ 
=
ƒƒ 
$str
ƒƒ K
+
ƒƒL M
Date
ƒƒN R
+
ƒƒS T
$str
ƒƒU f
+
ƒƒg h
	UnidadeId
ƒƒi r
+
ƒƒs t
$strƒƒu …
+ƒƒ  À
$str
≈≈ I
+
≈≈J K
Date
≈≈L P
+
≈≈Q R
$str
≈≈S b
+
≈≈c d
$str
∆∆ -
+
∆∆. /
	UnidadeId
∆∆0 9
+
∆∆: ;
$str
∆∆< ]
;
∆∆] ^
string
»» 
conexao
»» "
=
»»# $
System
»»% +
.
»»+ ,
Configuration
»», 9
.
»»9 :"
ConfigurationManager
»»: N
.
»»N O
ConnectionStrings
»»O `
[
»»` a
$str
»»a r
]
»»r s
.
»»s t
ConnectionString»»t Ñ
;»»Ñ Ö
var
   
list
   
=
   
db
   !
.
  ! "
Database
  " *
.
  * +
SqlQuery
  + 3
<
  3 4 
ResultadoUmaColuna
  4 F
>
  F G
(
  G H
sql
  H K
)
  K L
.
  L M
ToList
  M S
(
  S T
)
  T U
;
  U V
for
ÃÃ 
(
ÃÃ 
var
ÃÃ 
i
ÃÃ 
=
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
i
ÃÃ$ %
<
ÃÃ& '
list
ÃÃ( ,
.
ÃÃ, -
Count
ÃÃ- 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
i
ÃÃ6 7
++
ÃÃ7 9
)
ÃÃ9 :
{
ÕÕ 
retorno
ŒŒ 
+=
ŒŒ  "
list
ŒŒ# '
[
ŒŒ' (
i
ŒŒ( )
]
ŒŒ) *
.
ŒŒ* +
retorno
ŒŒ+ 2
.
ŒŒ2 3
ToString
ŒŒ3 ;
(
ŒŒ; <
)
ŒŒ< =
;
ŒŒ= >
}
œœ 
}
–– 
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
e
‘‘ 
)
‘‘ 
{
’’ 
new
÷÷ 
	CreateLog
÷÷ 
(
÷÷ 
new
÷÷ !
	Exception
÷÷" +
(
÷÷+ ,
$str
÷÷, V
,
÷÷V W
e
÷÷X Y
)
÷÷Y Z
)
÷÷Z [
;
÷÷[ \
}
◊◊ 
return
ŸŸ 
retorno
ŸŸ 
;
ŸŸ 
}
€€ 	
}
‡
‡
 
}‰
‰
 òm
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\BaseController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
HandleController 
] 
public 

class 
BaseController 
:  !

Controller" ,
{ 
public 
BaseController 
( 
) 
{ 	
ViewBag 
. 
UrlDataCollect "
=# $
GlobalConfig% 1
.1 2
urlAppColleta2 ?
;? @
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
ViewBag 
. 
Clusters  
=! "
Mapper# )
.) *
Map* -
<- .
IEnumerable. 9
<9 :
ParClusterDTO: G
>G H
>H I
(I J
dbJ L
.L M

ParClusterM W
.W X
WhereX ]
(] ^
r^ _
=>` b
rc d
.d e
IsActivee m
==n p
trueq u
)u v
)v w
;w x
} 
using!! 
(!! 
var!! 
db!! 
=!! 
new!! 
SgqDbDevEntities!!  0
(!!0 1
)!!1 2
)!!2 3
{"" 
ViewBag## 
.## 
Modulos## 
=##  !
Mapper##" (
.##( )
Map##) ,
<##, -
IEnumerable##- 8
<##8 9
ParClusterGroupDTO##9 K
>##K L
>##L M
(##M N
db##N P
.##P Q
ParClusterGroup##Q `
.##` a
Where##a f
(##f g
r##g h
=>##i k
r##l m
.##m n
IsActive##n v
==##w y
true##z ~
)##~ 
)	## Ä
;
##Ä Å
}$$ 
}&& 	
	protected(( 
override(( 
void(( 

Initialize((  *
(((* +
System((+ 1
.((1 2
Web((2 5
.((5 6
Routing((6 =
.((= >
RequestContext((> L
requestContext((M [
)(([ \
{)) 	

HttpCookie** 
languageCookie** %
=**& '
System**( .
.**. /
Web**/ 2
.**2 3
HttpContext**3 >
.**> ?
Current**? F
.**F G
Request**G N
.**N O
Cookies**O V
[**V W
$str**W a
]**a b
;**b c
if++ 
(++ 
languageCookie++ 
!=++ !
null++" &
)++& '
{,, 
if-- 
(-- 
languageCookie-- "
.--" #
Value--# (
==--) +
$str--, 0
)--0 1
{.. 
Thread// 
.// 
CurrentThread// (
.//( )
CurrentCulture//) 7
=//8 9
new//: =
CultureInfo//> I
(//I J
$str//J L
)//L M
;//M N
Thread00 
.00 
CurrentThread00 (
.00( )
CurrentUICulture00) 9
=00: ;
new00< ?
CultureInfo00@ K
(00K L
$str00L N
)00N O
;00O P
}11 
else22 
{33 
Thread44 
.44 
CurrentThread44 (
.44( )
CurrentCulture44) 7
=448 9
new44: =
CultureInfo44> I
(44I J
languageCookie44J X
.44X Y
Value44Y ^
)44^ _
;44_ `
Thread55 
.55 
CurrentThread55 (
.55( )
CurrentUICulture55) 9
=55: ;
new55< ?
CultureInfo55@ K
(55K L
languageCookie55L Z
.55Z [
Value55[ `
)55` a
;55a b
}66 
}77 
else88 
{99 
if:: 
(:: 
GlobalConfig::  
.::  !
LanguageBrasil::! /
)::/ 0
{;; 
Thread<< 
.<< 
CurrentThread<< (
.<<( )
CurrentCulture<<) 7
=<<8 9
new<<: =
CultureInfo<<> I
(<<I J
$str<<J Q
)<<Q R
;<<R S
Thread== 
.== 
CurrentThread== (
.==( )
CurrentUICulture==) 9
===: ;
new==< ?
CultureInfo==@ K
(==K L
$str==L S
)==S T
;==T U
}>> 
else?? 
if?? 
(?? 
GlobalConfig?? %
.??% &
LanguageEUA??& 1
)??1 2
{@@ 
ThreadAA 
.AA 
CurrentThreadAA (
.AA( )
CurrentCultureAA) 7
=AA8 9
newAA: =
CultureInfoAA> I
(AAI J
$strAAJ L
)AAL M
;AAM N
ThreadBB 
.BB 
CurrentThreadBB (
.BB( )
CurrentUICultureBB) 9
=BB: ;
newBB< ?
CultureInfoBB@ K
(BBK L
$strBBL N
)BBN O
;BBO P
}CC 
}DD 
tryFF 
{GG 
SystemII 
.II 
	ResourcesII  
.II  !
ResourceManagerII! 0
resourceManagerII1 @
=IIA B
	ResourcesIIC L
.IIL M
ResourceIIM U
.IIU V
ResourceManagerIIV e
;IIe f
ViewBagKK 
.KK 
	ResourcesKK !
=KK" #
resourceManagerKK$ 3
.KK3 4
GetResourceSetKK4 B
(KKB C
ThreadLL 
.LL 
CurrentThreadLL (
.LL( )
CurrentUICultureLL) 9
,LL9 :
trueLL; ?
,LL? @
falseLLA F
)LLF G
.LLG H
CastLLH L
<LLL M
DictionaryEntryLLM \
>LL\ ]
(LL] ^
)LL^ _
;LL_ `
}NN 
catchOO 
(OO 
	ExceptionOO 
eOO 
)OO 
{PP 
}QQ 
baseSS 
.SS 

InitializeSS 
(SS 
requestContextSS *
)SS* +
;SS+ ,
}TT 	
publicVV 
voidVV #
CreateCookieFromUserDTOVV +
(VV+ ,
UserDTOVV, 3
isAuthorizedVV4 @
)VV@ A
{WW 	

HttpCookieXX 
cookieXX 
=XX 
HttpContextXX  +
.XX+ ,
RequestXX, 3
.XX3 4
CookiesXX4 ;
.XX; <
GetXX< ?
(XX? @
$strXX@ R
)XXR S
;XXS T
ifYY 
(YY 
cookieYY 
!=YY 
nullYY 
)YY 
{ZZ 
cookie[[ 
.[[ 
Expires[[ 
=[[  
DateTime[[! )
.[[) *
Now[[* -
.[[- .

AddMinutes[[. 8
([[8 9
$num[[9 ;
)[[; <
;[[< =
HttpContext\\ 
.\\ 
Response\\ $
.\\$ %
Cookies\\% ,
.\\, -
Set\\- 0
(\\0 1
cookie\\1 7
)\\7 8
;\\8 9
}]] 
else^^ 
{__ 

HttpCookieaa 
myCookieaa #
=aa$ %
newaa& )

HttpCookieaa* 4
(aa4 5
$straa5 G
)aaG H
;aaH I
myCookiedd 
.dd 
Valuesdd 
.dd  
Adddd  #
(dd# $
$strdd$ ,
,dd, -
isAuthorizeddd. :
.dd: ;
Iddd; =
.dd= >
ToStringdd> F
(ddF G
)ddG H
)ddH I
;ddI J
myCookieee 
.ee 
Valuesee 
.ee  
Addee  #
(ee# $
$stree$ .
,ee. /
isAuthorizedee0 <
.ee< =
Nameee= A
)eeA B
;eeB C
myCookieff 
.ff 
Valuesff 
.ff  
Addff  #
(ff# $
$strff$ /
,ff/ 0
isAuthorizedff1 =
.ff= >
ParCompany_Idff> K
.ffK L
GetValueOrDefaultffL ]
(ff] ^
)ff^ _
.ff_ `
ToStringff` h
(ffh i
)ffi j
)ffj k
;ffk l
ifhh 
(hh 
isAuthorizedhh  
.hh  !
	AlterDatehh! *
!=hh+ -
nullhh. 2
)hh2 3
{ii 
myCookiejj 
.jj 
Valuesjj #
.jj# $
Addjj$ '
(jj' (
$strjj( 3
,jj3 4
isAuthorizedjj5 A
.jjA B
	AlterDatejjB K
.jjK L
GetValueOrDefaultjjL ]
(jj] ^
)jj^ _
.jj_ `
ToStringjj` h
(jjh i
$strjji u
)jju v
)jjv w
;jjw x
}kk 
elsell 
{mm 
myCookienn 
.nn 
Valuesnn #
.nn# $
Addnn$ '
(nn' (
$strnn( 3
,nn3 4
$strnn5 7
)nn7 8
;nn8 9
}oo 
myCookieqq 
.qq 
Valuesqq 
.qq  
Addqq  #
(qq# $
$strqq$ -
,qq- .
isAuthorizedqq/ ;
.qq; <
AddDateqq< C
.qqC D
ToStringqqD L
(qqL M
$strqqM Y
)qqY Z
)qqZ [
;qq[ \
ifss 
(ss 
isAuthorizedss  
.ss  !
Roless! %
!=ss& (
nullss) -
)ss- .
myCookiett 
.tt 
Valuestt #
.tt# $
Addtt$ '
(tt' (
$strtt( /
,tt/ 0
isAuthorizedtt1 =
.tt= >
Rolett> B
.ttB C
ReplacettC J
(ttJ K
$charttK N
,ttN O
$charttP S
)ttS T
.ttT U
ToStringttU ]
(tt] ^
)tt^ _
)tt_ `
;tt` a
elseuu 
myCookievv 
.vv 
Valuesvv #
.vv# $
Addvv$ '
(vv' (
$strvv( /
,vv/ 0
$strvv1 3
)vv3 4
;vv4 5
ifxx 
(xx 
isAuthorizedxx  
.xx  !
ParCompanyXUserSgqxx! 3
!=xx4 6
nullxx7 ;
)xx; <
ifyy 
(yy 
isAuthorizedyy $
.yy$ %
ParCompanyXUserSgqyy% 7
.yy7 8
Anyyy8 ;
(yy; <
ryy< =
=>yy> @
ryyA B
.yyB C
RoleyyC G
!=yyH J
nullyyK O
)yyO P
)yyP Q
myCookiezz  
.zz  !
Valueszz! '
.zz' (
Addzz( +
(zz+ ,
$strzz, :
,zz: ;
stringzz< B
.zzB C
JoinzzC G
(zzG H
$strzzH K
,zzK L
isAuthorizedzzM Y
.zzY Z
ParCompanyXUserSgqzzZ l
.zzl m
Selectzzm s
(zzs t
nzzt u
=>zzv x
nzzy z
.zzz {
Rolezz{ 
)	zz Ä
.
zzÄ Å
Distinct
zzÅ â
(
zzâ ä
)
zzä ã
.
zzã å
ToArray
zzå ì
(
zzì î
)
zzî ï
)
zzï ñ
)
zzñ ó
;
zzó ò
else{{ 
myCookie||  
.||  !
Values||! '
.||' (
Add||( +
(||+ ,
$str||, :
,||: ;
string||< B
.||B C
Join||C G
(||G H
$str||H K
,||K L
isAuthorized||M Y
.||Y Z
ParCompanyXUserSgq||Z l
.||l m
Select||m s
(||s t
n||t u
=>||v x
n||y z
.||z {
ParCompany_Id	||{ à
)
||à â
.
||â ä
Distinct
||ä í
(
||í ì
)
||ì î
.
||î ï
ToArray
||ï ú
(
||ú ù
)
||ù û
)
||û ü
)
||ü †
;
||† °
myCookie 
. 
Expires  
=! "
DateTime# +
.+ ,
Now, /
./ 0

AddMinutes0 :
(: ;
$num; =
)= >
;> ?
Response
ÇÇ 
.
ÇÇ 
Cookies
ÇÇ  
.
ÇÇ  !
Add
ÇÇ! $
(
ÇÇ$ %
myCookie
ÇÇ% -
)
ÇÇ- .
;
ÇÇ. /
}
ÉÉ 
}
ÑÑ 	
	protected
ÜÜ 
void
ÜÜ 
ExpireCookie
ÜÜ #
(
ÜÜ# $
)
ÜÜ$ %
{
áá 	

HttpCookie
àà 
currentUserCookie
àà (
=
àà) *
Request
àà+ 2
.
àà2 3
Cookies
àà3 :
[
àà: ;
$str
àà; M
]
ààM N
;
ààN O
if
ââ 
(
ââ 
currentUserCookie
ââ !
!=
ââ" $
null
ââ% )
)
ââ) *
{
ää 
Response
ãã 
.
ãã 
Cookies
ãã  
.
ãã  !
Remove
ãã! '
(
ãã' (
$str
ãã( :
)
ãã: ;
;
ãã; <
Response
åå 
.
åå 
Cookies
åå  
.
åå  !
Remove
åå! '
(
åå' (
$str
åå( 2
)
åå2 3
;
åå3 4
currentUserCookie
éé !
.
éé! "
Expires
éé" )
=
éé* +
DateTime
éé, 4
.
éé4 5
Now
éé5 8
.
éé8 9
AddDays
éé9 @
(
éé@ A
-
ééA B
$num
ééB D
)
ééD E
;
ééE F
currentUserCookie
èè !
.
èè! "
Value
èè" '
=
èè( )
null
èè* .
;
èè. /
Response
êê 
.
êê 
	SetCookie
êê "
(
êê" #
currentUserCookie
êê# 4
)
êê4 5
;
êê5 6
}
ëë 
}
ìì 	
}
îî 
}ññ Ô
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Exemplo\ExemploInputController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
public 

class "
ExemploInputController '
:( )

Controller* 4
{ 
public

 
ActionResult

 
Index

 !
(

! "
)

" #
{ 	
return 
View 
( 
) 
; 
} 	
} 
} ò
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\FirstConfigController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
public 

class !
FirstConfigController &
:' (

Controller) 3
{ 
public 
ActionResult 
Index !
(! "
)" #
{ 	
List 
< 
SelectListItem 
>  
listaProjetos! .
=/ 0
new1 4
List5 9
<9 :
SelectListItem: H
>H I
(I J
)J K
;K L
listaProjetos 
. 
Add 
( 
new !
SelectListItem" 0
(0 1
)1 2
{3 4
Text5 9
=: ;
$str< D
,D E
ValueF K
=L M
$strN Q
}R S
)S T
;T U
listaProjetos 
. 
Add 
( 
new !
SelectListItem" 0
(0 1
)1 2
{3 4
Text5 9
=: ;
$str< A
,A B
ValueC H
=I J
$strK N
}O P
)P Q
;Q R
listaProjetos 
. 
Add 
( 
new !
SelectListItem" 0
(0 1
)1 2
{3 4
Text5 9
=: ;
$str< D
,D E
ValueF K
=L M
$strN Q
}R S
)S T
;T U
ViewBag 
. 
ActiveIn 
= 
new "

SelectList# -
(- .
listaProjetos. ;
,; <
$str= D
,D E
$strF L
)L M
;M N
return 
View 
( 
) 
; 
} 	
[   	
HttpPost  	 
]   
public!! 
ActionResult!! 
Index!! !
(!!! "
	SgqConfig!!" +
cfg!!, /
)!!/ 0
{"" 	
using$$ 
($$ 
var$$ 
db$$ 
=$$ 
new$$ 

ADOFactory$$  *
.$$* +
Factory$$+ 2
($$2 3
$str$$3 D
)$$D E
)$$E F
{%% 
var&& 
result&& 
=&& 
db&& 
.&&  
InsertUpdateData&&  0
(&&0 1
cfg&&1 4
)&&4 5
;&&5 6
GlobalConfig'' 
.'' 
ConfigWebSystem'' ,
('', -
result''- 3
)''3 4
;''4 5
}(( 
return** 
RedirectToAction** #
(**# $
$str**$ +
,**+ ,
$str**- 3
)**3 4
;**4 5
}++ 	
},, 
}-- Ê
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Gestao\GestaoController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
public 

class 
GestaoController !
:" #
BaseController$ 2
{ 
public

 
ActionResult

 
Index

 !
(

! "
)

" #
{ 	
return 
View 
( 
) 
; 
} 	
} 
} ∑
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\EmailConfigEUAController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Params  &
{		 
public 

class $
EmailConfigEUAController )
:* +

Controller, 6
{ 
private 
SgqDbDevEntities  
db! #
;# $
public $
EmailConfigEUAController '
(' (
)( )
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
ViewBag 
. 

ParCompany 
=  
db! #
.# $

ParCompany$ .
.. /
ToList/ 5
(5 6
)6 7
;7 8
ViewBag 
. 
UserSgq 
= 
db  
.  !
UserSgq! (
.( )
ToList) /
(/ 0
)0 1
;1 2
ViewBag 
. 
ParFrequency  
=! "
db# %
.% &
ParFrequency& 2
.2 3
ToList3 9
(9 :
): ;
;; <
ViewBag 
. 
RoleUserSgq 
=  !
db" $
.$ %
RoleUserSgq% 0
.0 1
ToList1 7
(7 8
)8 9
;9 :
} 	
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
} 
public 

class 
EmailConfig 
{ 
public 
int 
Frequency_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public   
int   
AlertLevel_Id    
{  ! "
get  # &
;  & '
set  ( +
;  + ,
}  - .
public!! 
List!! 
<!! 
int!! 
>!! 
RoleUserSgq_Id!! '
{!!( )
get!!* -
;!!- .
set!!/ 2
;!!2 3
}!!4 5
public"" 
List"" 
<"" 
int"" 
>"" 

UserSgq_Id"" #
{""$ %
get""& )
;"") *
set""+ .
;"". /
}""0 1
public## 
bool## 
isCoorporated## !
{##" #
get##$ '
;##' (
set##) ,
;##, -
}##. /
}$$ 
}%% Ëw
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\EquipamentosController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Params  &
{ 
[ 

FilterUnit 
] 
[ 
CustomAuthorize 
] 
public 

class "
EquipamentosController '
:( )
BaseController* 8
{ 
private 
SGQ_GlobalEntities "
db# %
=& '
new( +
SGQ_GlobalEntities, >
(> ?
)? @
;@ A
private 
SgqDbDevEntities  
db2! $
=% &
new' *
SgqDbDevEntities+ ;
(; <
)< =
;= >
[ 	
FormularioPesquisa	 
( #
filtraUnidadePorUsuario 3
=4 5
true6 :
): ;
]; <
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 
userId 
= 
Guard 
. 
GetUsuarioLogado_Id 2
(2 3
HttpContext3 >
)> ?
;? @
var 
user 
= 
db2 
. 
UserSgq "
." #
FirstOrDefault# 1
(1 2
r2 3
=>4 6
r7 8
.8 9
Id9 ;
==< >
userId? E
)E F
;F G
var 
company 
= 
db2 
. 

ParCompany (
.( )
FirstOrDefault) 7
(7 8
r8 9
=>: <
r= >
.> ?
Id? A
==B D
userE I
.I J
ParCompany_IdJ W
)W X
;X Y
var 
parCompanyXUserSgq "
=# $
db2% (
.( )
ParCompanyXUserSgq) ;
.; <
Where< A
(A B
rB C
=>D F
rG H
.H I

UserSgq_IdI S
==T V
userW [
.[ \
Id\ ^
)^ _
._ `
ToList` f
(f g
)g h
;h i
var 
equipamentos 
= 
db !
.! "
Equipamentos" .
.. /
ToList/ 5
(5 6
)6 7
;7 8
var!! 
companys!! 
=!! 
db2!! 
.!! 

ParCompany!! )
.!!) *
ToList!!* 0
(!!0 1
)!!1 2
;!!2 3
var"" 
equipRetorno"" 
="" 
new"" "
List""# '
<""' (
Equipamentos""( 4
>""4 5
(""5 6
)""6 7
;""7 8
if$$ 
($$ 
!$$ 
string$$ 
.$$ 
IsNullOrEmpty$$ %
($$% &
Request$$& -
.$$- .
QueryString$$. 9
[$$9 :
$str$$: I
]$$I J
)$$J K
)$$K L
{%% 
int&& 
	companyId&& 
=&& 
Convert&&  '
.&&' (
ToInt32&&( /
(&&/ 0
Request&&0 7
.&&7 8
QueryString&&8 C
[&&C D
$str&&D S
]&&S T
)&&T U
;&&U V
equipamentos(( 
=(( 
db(( !
.((! "
Equipamentos((" .
.((. /
Where((/ 4
(((4 5
r((5 6
=>((7 9
r((: ;
.((; <
ParCompany_Id((< I
==((J L
	companyId((M V
)((V W
.((W X
ToList((X ^
(((^ _
)((_ `
;((` a
}** 
else++ 
{,, 
equipamentos-- 
=-- 
db-- !
.--! "
Equipamentos--" .
.--. /
ToList--/ 5
(--5 6
)--6 7
;--7 8
}// 
foreach11 
(11 
var11 
i11 
in11 
equipamentos11 *
)11* +
{22 
i44 
.44 
ParCompanyName44  
=44! "
companys44# +
.44+ ,
FirstOrDefault44, :
(44: ;
r44; <
=>44= ?
r44@ A
.44A B
Id44B D
==44E G
i44H I
.44I J
ParCompany_Id44J W
)44W X
.44X Y
Name44Y ]
;44] ^
if66 
(66 
parCompanyXUserSgq66 &
.66& '
Any66' *
(66* +
r66+ ,
=>66- /
r660 1
.661 2
ParCompany_Id662 ?
==66@ B
i66C D
.66D E
ParCompany_Id66E R
)66R S
)66S T
{77 
equipRetorno88  
.88  !
Add88! $
(88$ %
i88% &
)88& '
;88' (
}99 
};; 
if== 
(== 
equipRetorno== 
.== 
Count== "
(==" #
)==# $
>==% &
$num==' (
)==( )
return>> 
View>> 
(>> 
equipRetorno>> (
.>>( )
ToList>>) /
(>>/ 0
)>>0 1
)>>1 2
;>>2 3
else?? 
return@@ 
View@@ 
(@@ 
new@@ 
List@@  $
<@@$ %
Equipamentos@@% 1
>@@1 2
(@@2 3
)@@3 4
)@@4 5
;@@5 6
}AA 	
publicDD 
ActionResultDD 
DetailsDD #
(DD# $
intDD$ '
?DD' (
idDD) +
)DD+ ,
{EE 	
returnQQ 
ViewQQ 
(QQ 
)QQ 
;QQ 
}RR 	
[UU 	
FormularioPesquisaUU	 
(UU #
filtraUnidadePorUsuarioUU 3
=UU4 5
trueUU6 :
)UU: ;
]UU; <
publicVV 
ActionResultVV 
CreateVV "
(VV" #
)VV# $
{WW 	
returnXX 
ViewXX 
(XX 
)XX 
;XX 
}YY 	
[^^ 	
HttpPost^^	 
]^^ 
[__ 	$
ValidateAntiForgeryToken__	 !
]__! "
public`` 
ActionResult`` 
Create`` "
(``" #
[``# $
Bind``$ (
(``( )
Include``) 0
=``1 2
$str``3 T
)``T U
]``U V
Equipamentos``W c
equipamentos``d p
)``p q
{aa 	
ValidaEquipamentoscc 
(cc 
equipamentoscc +
)cc+ ,
;cc, -
ifdd 
(dd 

ModelStatedd 
.dd 
IsValiddd "
)dd" #
{ee 
equipamentosff 
.ff 
DataInsercaoff )
=ff* +
Systemff, 2
.ff2 3
DateTimeff3 ;
.ff; <
Nowff< ?
;ff? @
equipamentosgg 
.gg 
UsuarioInsercaogg ,
=gg- .
Guardgg/ 4
.gg4 5
GetUsuarioLogado_Idgg5 H
(ggH I
HttpContextggI T
)ggT U
;ggU V
equipamentoshh 
.hh 
Unidadehh $
=hh% &
$numhh' (
;hh( )
dbii 
.ii 
Equipamentosii 
.ii  
Addii  #
(ii# $
equipamentosii$ 0
)ii0 1
;ii1 2
dbjj 
.jj 
SaveChangesjj 
(jj 
)jj  
;jj  !
returnkk 
RedirectToActionkk '
(kk' (
$strkk( /
)kk/ 0
;kk0 1
}ll 
returnnn 
Viewnn 
(nn 
equipamentosnn $
)nn$ %
;nn% &
}oo 	
privateqq 
voidqq 
ValidaEquipamentosqq '
(qq' (
Equipamentosqq( 4
equipamentosqq5 A
)qqA B
{rr 	
ifss 
(ss 
equipamentosss 
.ss 
ParCompany_Idss *
==ss+ -
nullss. 2
)ss2 3

ModelStatett 
.tt 
AddModelErrortt (
(tt( )
$strtt) 8
,tt8 9
Guardtt: ?
.tt? @
MesangemModelErrortt@ R
(ttR S
$strttS \
,tt\ ]
truett^ b
)ttb c
)ttc d
;ttd e
ifvv 
(vv 
equipamentosvv 
.vv 
Nomevv !
==vv" $
nullvv% )
)vv) *

ModelStateww 
.ww 
AddModelErrorww (
(ww( )
$strww) /
,ww/ 0
Guardww1 6
.ww6 7
MesangemModelErrorww7 I
(wwI J
$strwwJ P
,wwP Q
truewwR V
)wwV W
)wwW X
;wwX Y
ifyy 
(yy 
equipamentosyy 
.yy 
Tipoyy !
==yy" $
nullyy% )
)yy) *

ModelStatezz 
.zz 
AddModelErrorzz (
(zz( )
$strzz) /
,zz/ 0
Guardzz1 6
.zz6 7
MesangemModelErrorzz7 I
(zzI J
$strzzJ P
,zzP Q
truezzR V
)zzV W
)zzW X
;zzX Y
}
ÅÅ 	
public
ÑÑ 
ActionResult
ÑÑ 
Edit
ÑÑ  
(
ÑÑ  !
int
ÑÑ! $
?
ÑÑ$ %
id
ÑÑ& (
)
ÑÑ( )
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
id
ÜÜ 
==
ÜÜ 
null
ÜÜ 
)
ÜÜ 
{
áá 
return
àà 
new
àà "
HttpStatusCodeResult
àà /
(
àà/ 0
HttpStatusCode
àà0 >
.
àà> ?

BadRequest
àà? I
)
ààI J
;
ààJ K
}
ââ 
Equipamentos
ää 
equipamentos
ää %
=
ää& '
db
ää( *
.
ää* +
Equipamentos
ää+ 7
.
ää7 8
Find
ää8 <
(
ää< =
id
ää= ?
)
ää? @
;
ää@ A
if
ãã 
(
ãã 
equipamentos
ãã 
==
ãã 
null
ãã  $
)
ãã$ %
{
åå 
return
çç 
HttpNotFound
çç #
(
çç# $
)
çç$ %
;
çç% &
}
éé 
return
êê 
View
êê 
(
êê 
equipamentos
êê $
)
êê$ %
;
êê% &
}
ëë 	
[
ññ 	
HttpPost
ññ	 
]
ññ 
[
óó 	&
ValidateAntiForgeryToken
óó	 !
]
óó! "
public
òò 
ActionResult
òò 
Edit
òò  
(
òò  !
[
òò! "
Bind
òò" &
(
òò& '
Include
òò' .
=
òò/ 0
$str
òò1 U
)
òòU V
]
òòV W
Equipamentos
òòX d
equipamentos
òòe q
)
òòq r
{
ôô 	 
ValidaEquipamentos
öö 
(
öö 
equipamentos
öö +
)
öö+ ,
;
öö, -
if
úú 
(
úú 

ModelState
úú 
.
úú 
IsValid
úú "
)
úú" #
{
ùù 
equipamentos
ûû 
.
ûû 
DataInsercao
ûû )
=
ûû* +
System
ûû, 2
.
ûû2 3
DateTime
ûû3 ;
.
ûû; <
Now
ûû< ?
;
ûû? @
equipamentos
üü 
.
üü 
UsuarioAlteracao
üü -
=
üü. /
Guard
üü0 5
.
üü5 6!
GetUsuarioLogado_Id
üü6 I
(
üüI J
HttpContext
üüJ U
)
üüU V
;
üüV W
equipamentos
†† 
.
†† 
Unidade
†† $
=
††% &
$num
††' (
;
††( )
db
°° 
.
°° 
Entry
°° 
(
°° 
equipamentos
°° %
)
°°% &
.
°°& '
State
°°' ,
=
°°- .
EntityState
°°/ :
.
°°: ;
Modified
°°; C
;
°°C D
db
¢¢ 
.
¢¢ 
SaveChanges
¢¢ 
(
¢¢ 
)
¢¢  
;
¢¢  !
return
££ 
RedirectToAction
££ '
(
££' (
$str
££( /
)
££/ 0
;
££0 1
}
§§ 
return
•• 
View
•• 
(
•• 
equipamentos
•• $
)
••$ %
;
••% &
}
¶¶ 	
public
©© 
ActionResult
©© 
Delete
©© "
(
©©" #
int
©©# &
?
©©& '
id
©©( *
)
©©* +
{
™™ 	
if
´´ 
(
´´ 
id
´´ 
==
´´ 
null
´´ 
)
´´ 
{
¨¨ 
return
≠≠ 
new
≠≠ "
HttpStatusCodeResult
≠≠ /
(
≠≠/ 0
HttpStatusCode
≠≠0 >
.
≠≠> ?

BadRequest
≠≠? I
)
≠≠I J
;
≠≠J K
}
ÆÆ 
Equipamentos
ØØ 
equipamentos
ØØ %
=
ØØ& '
db
ØØ( *
.
ØØ* +
Equipamentos
ØØ+ 7
.
ØØ7 8
Find
ØØ8 <
(
ØØ< =
id
ØØ= ?
)
ØØ? @
;
ØØ@ A
if
∞∞ 
(
∞∞ 
equipamentos
∞∞ 
==
∞∞ 
null
∞∞  $
)
∞∞$ %
{
±± 
return
≤≤ 
HttpNotFound
≤≤ #
(
≤≤# $
)
≤≤$ %
;
≤≤% &
}
≥≥ 
return
¥¥ 
View
¥¥ 
(
¥¥ 
equipamentos
¥¥ $
)
¥¥$ %
;
¥¥% &
}
µµ 	
[
∏∏ 	
HttpPost
∏∏	 
,
∏∏ 

ActionName
∏∏ 
(
∏∏ 
$str
∏∏ &
)
∏∏& '
]
∏∏' (
[
ππ 	&
ValidateAntiForgeryToken
ππ	 !
]
ππ! "
public
∫∫ 
ActionResult
∫∫ 
DeleteConfirmed
∫∫ +
(
∫∫+ ,
int
∫∫, /
id
∫∫0 2
)
∫∫2 3
{
ªª 	
Equipamentos
ºº 
equipamentos
ºº %
=
ºº& '
db
ºº( *
.
ºº* +
Equipamentos
ºº+ 7
.
ºº7 8
Find
ºº8 <
(
ºº< =
id
ºº= ?
)
ºº? @
;
ºº@ A
db
ΩΩ 
.
ΩΩ 
Equipamentos
ΩΩ 
.
ΩΩ 
Remove
ΩΩ "
(
ΩΩ" #
equipamentos
ΩΩ# /
)
ΩΩ/ 0
;
ΩΩ0 1
db
ææ 
.
ææ 
SaveChanges
ææ 
(
ææ 
)
ææ 
;
ææ 
return
øø 
RedirectToAction
øø #
(
øø# $
$str
øø$ +
)
øø+ ,
;
øø, -
}
¿¿ 	
	protected
¬¬ 
override
¬¬ 
void
¬¬ 
Dispose
¬¬  '
(
¬¬' (
bool
¬¬( ,
	disposing
¬¬- 6
)
¬¬6 7
{
√√ 	
if
ƒƒ 
(
ƒƒ 
	disposing
ƒƒ 
)
ƒƒ 
{
≈≈ 
db
∆∆ 
.
∆∆ 
Dispose
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 
base
»» 
.
»» 
Dispose
»» 
(
»» 
	disposing
»» "
)
»»" #
;
»»# $
}
…… 	
}
   
}ÀÀ Ä
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\Level1ControlController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Params  &
{		 
[

 
CustomAuthorize

 
]

 
public 

class #
Level1ControlController (
:) *

Controller+ 5
{ 
private 
readonly 
IBaseDomain $
<$ %
ParLevel2Level1% 4
,4 5
ParLevel2Level1DTO6 H
>H I$
_baseRepoParLevel2Level1J b
;b c
private 
readonly 
IBaseDomain $
<$ %

ParCompany% /
,/ 0
ParCompanyDTO1 >
>> ?
_baseRepoParCompany@ S
;S T
public #
Level1ControlController &
(& '
IBaseDomain' 2
<2 3
ParLevel2Level13 B
,B C
ParLevel2Level1DTOD V
>V W#
baseRepoParLevel2Level1X o
,o p
IBaseDomain 
< 

ParCompany "
," #
ParCompanyDTO$ 1
>1 2
baseRepoParCompany3 E
)E F
{ 	$
_baseRepoParLevel2Level1 $
=% &#
baseRepoParLevel2Level1' >
;> ?
_baseRepoParCompany 
=  !
baseRepoParCompany" 4
;4 5
ViewBag 
. 

ParCompany 
=  
_baseRepoParCompany! 4
.4 5
GetAllNoLazyLoad5 E
(E F
)F G
;G H
ViewBag 
. 
ParLevel2Level1 #
=$ %$
_baseRepoParLevel2Level1& >
.> ?
GetAllNoLazyLoad? O
(O P
)P Q
;Q R
}   	
public## 
ActionResult## 
Index## !
(##! "
)##" #
{$$ 	
return%% 
View%% 
(%% 
)%% 
;%% 
}&& 	
public)) 
ActionResult)) 
SelectLevel1)) (
())( )
int))) ,
	companyId))- 6
)))6 7
{** 	
var++ 
company++ 
=++ 
_baseRepoParCompany++ -
.++- .
GetByIdNoLazyLoad++. ?
(++? @
	companyId++@ I
)++I J
;++J K
var-- 
allParLevel2Level1-- "
=--# $$
_baseRepoParLevel2Level1--% =
.--= >
GetAll--> D
(--D E
)--E F
;--F G
ViewBag.. 
... !
level2LevelSemCompany.. )
=..* +
allParLevel2Level1.., >
...> ?
Where..? D
(..D E
r..E F
=>..G I
r..J K
...K L
ParCompany_Id..L Y
==..Z \
null..] a
)..a b
...b c
ToList..c i
(..i j
)..j k
;..k l
ViewBag// 
.// 
level2LevelCompany// &
=//' (
allParLevel2Level1//) ;
.//; <
Where//< A
(//A B
r//B C
=>//D F
r//G H
.//H I
ParCompany_Id//I V
!=//W Y
null//Z ^
)//^ _
.//_ `
ToList//` f
(//f g
)//g h
;//h i
return11 
PartialView11 
(11 
$str11 7
)117 8
;118 9
}22 	
}44 
}55 ¿u
oC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Familia\ParLevel2ControlCompanyController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
[ 

FilterUnit 
( "
filtraUnidadeDoUsuario &
=' (
true) -
)- .
]. /
public 

class -
!ParLevel2ControlCompanyController 2
:3 4
BaseController5 C
{ 
private 
SgqDbDevEntities  
db! #
;# $
public -
!ParLevel2ControlCompanyController 0
(0 1
)1 2
{   	
db!! 
=!! 
new!! 
SgqDbDevEntities!! %
(!!% &
)!!& '
;!!' (
db"" 
."" 
Configuration"" 
."" 
LazyLoadingEnabled"" /
=""0 1
false""2 7
;""7 8
ViewBag$$ 
.$$ 
	ParLevel1$$ 
=$$ 
db$$  "
.$$" #
	ParLevel1$$# ,
.$$, -
Where$$- 2
($$2 3
r$$3 4
=>$$5 7
r$$8 9
.$$9 :#
IsFixedEvaluetionNumber$$: Q
==$$R T
true$$U Y
)$$Y Z
.$$Z [
ToList$$[ a
($$a b
)$$b c
;$$c d
ViewBag%% 
.%% 
ParLevel2Todos%% "
=%%# $
new%%% (
List%%) -
<%%- .
ParLevel2DTO%%. :
>%%: ;
(%%; <
)%%< =
;%%= >
ViewBag&& 
.&& 
level2Number&&  
=&&! "
$num&&# $
;&&$ %
ViewBag'' 
.'' 
level2Comporativo'' %
=''& '
new''( +
List'', 0
<''0 1
ParLevel2DTO''1 =
>''= >
(''> ?
)''? @
;''@ A
ViewBag(( 
.(( '
level2DisponivelParaEmpresa(( /
=((0 1
new((2 5
List((6 :
<((: ;
ParLevel2DTO((; G
>((G H
(((H I
)((I J
;((J K
ViewBag)) 
.)) 
company)) 
=)) 
db))  
.))  !

ParCompany))! +
.))+ ,
ToList)), 2
())2 3
)))3 4
;))4 5
}** 	
public,, 
ActionResult,, 
Index,, !
(,,! "
),," #
{-- 	
var.. 
allControlCompany.. !
=.." #
db..$ &
...& '#
ParLevel2ControlCompany..' >
...> ?
Include..? F
(..F G
$str..G R
)..R S
...S T
Where..T Y
(..Y Z
r..Z [
=>..\ ^
r.._ `
...` a
IsActive..a i
==..j l
true..m q
&&..r t
r..u v
...v w
InitDate..w 
<=
..Ä Ç
DateTime
..É ã
.
..ã å
Now
..å è
)
..è ê
;
..ê ë
var// $
lastDateDaControlCompany// (
=//) *
allControlCompany//+ <
.//< =
Where//= B
(//B C
r//C D
=>//E G
r//H I
.//I J
ParCompany_Id//J W
==//X Z
null//[ _
)//_ `
.//` a
OrderByDescending//a r
(//r s
r//s t
=>//u w
r//x y
.//y z
InitDate	//z Ç
)
//Ç É
.
//É Ñ
FirstOrDefault
//Ñ í
(
//í ì
)
//ì î
?
//î ï
.
//ï ñ
InitDate
//ñ û
;
//û ü
if11 
(11 $
lastDateDaControlCompany11 (
==11) +
null11, 0
)110 1$
lastDateDaControlCompany22 (
=22) *
DateTime22+ 3
.223 4
Now224 7
;227 8
ViewBag44 
.44 
dataInit44 
=44 $
lastDateDaControlCompany44 7
;447 8
return55 
View55 
(55 
)55 
;55 
}66 	
public88 
ActionResult88 
ChangeLevel288 (
(88( )
int88) ,
id88- /
,88/ 0
string881 7
dataInit888 @
)88@ A
{99 	
var:: 
	_dataInit:: 
=:: 
Guard:: !
.::! "
ParseDateToSqlV2::" 2
(::2 3
dataInit::3 ;
)::; <
;::< =
if;; 
(;; 
id;; 
>;; 
$num;; 
);; 
{<< 
var== 
allControlCompany== %
===& '
db==( *
.==* +#
ParLevel2ControlCompany==+ B
.==B C
Include==C J
(==J K
$str==K V
)==V W
.==W X
Where==X ]
(==] ^
r==^ _
=>==` b
r==c d
.==d e
ParLevel1_Id==e q
====r t
id==u w
&&==x z
r=={ |
.==| }
InitDate	==} Ö
==
==Ü à
	_dataInit
==â í
&&
==ì ï
r
==ñ ó
.
==ó ò
IsActive
==ò †
==
==° £
true
==§ ®
)
==® ©
;
==© ™
var>> $
lastDateDaControlCompany>> ,
=>>- .
allControlCompany>>/ @
.>>@ A
Where>>A F
(>>F G
r>>G H
=>>>I K
r>>L M
.>>M N
ParCompany_Id>>N [
==>>\ ^
null>>_ c
)>>c d
.>>d e
OrderByDescending>>e v
(>>v w
r>>w x
=>>>y {
r>>| }
.>>} ~
InitDate	>>~ Ü
)
>>Ü á
.
>>á à
FirstOrDefault
>>à ñ
(
>>ñ ó
)
>>ó ò
?
>>ò ô
.
>>ô ö
InitDate
>>ö ¢
;
>>¢ £
var?? 
level2Comporativo?? %
=??& '
allControlCompany??( 9
.??9 :
Where??: ?
(??? @
r??@ A
=>??B D
r??E F
.??F G
InitDate??G O
==??P R$
lastDateDaControlCompany??S k
&&??l n
r??o p
.??p q
ParCompany_Id??q ~
==	?? Å
null
??Ç Ü
)
??Ü á
.
??á à
Select
??à é
(
??é è
r
??è ê
=>
??ë ì
r
??î ï
.
??ï ñ
	ParLevel2
??ñ ü
)
??ü †
;
??† °
var@@ /
#level2VinculadosAoLevel1Selecionado@@ 7
=@@8 9
db@@: <
.@@< =!
ParLevel3Level2Level1@@= R
.@@R S
Where@@S X
(@@X Y
r@@Y Z
=>@@[ ]
r@@^ _
.@@_ `
ParLevel1_Id@@` l
==@@m o
id@@p r
)@@r s
.@@s t
Select@@t z
(@@z {
r@@{ |
=>@@} 
r
@@Ä Å
.
@@Å Ç
ParLevel3Level2
@@Ç ë
.
@@ë í
	ParLevel2
@@í õ
)
@@õ ú
.
@@ú ù
Distinct
@@ù •
(
@@• ¶
)
@@¶ ß
.
@@ß ®
ToList
@@® Æ
(
@@Æ Ø
)
@@Ø ∞
;
@@∞ ±
ViewBagBB 
.BB 
ParLevel2TodosBB &
=BB' (/
#level2VinculadosAoLevel1SelecionadoBB) L
;BBL M
ViewBagCC 
.CC 
ParLevel2IdsCC $
=CC% &
level2ComporativoCC' 8
?CC8 9
.CC9 :
SelectCC: @
(CC@ A
rCCA B
=>CCC E
rCCF G
.CCG H
IdCCH J
)CCJ K
;CCK L
ViewBagDD 
.DD 
level2NumberDD $
=DD% &
dbDD' )
.DD) *
	ParLevel1DD* 3
.DD3 4
FirstOrDefaultDD4 B
(DDB C
rDDC D
=>DDD F
rDDF G
.DDG H
IdDDH J
==DDK M
idDDN P
)DDP Q
.DDQ R
Level2NumberDDR ^
;DD^ _
}EE 
elseFF 
{GG 
ViewBagHH 
.HH 
	ParLevel2HH !
=HH" #
newHH$ '
ListHH( ,
<HH, -
ParLevel2DTOHH- 9
>HH9 :
(HH: ;
)HH; <
;HH< =
ViewBagII 
.II 
level2NumberII $
=II% &
$numII' (
;II( )
}JJ 
returnKK 
PartialViewKK 
(KK 
$strKK ?
)KK? @
;KK@ A
}LL 	
publicNN 
ActionResultNN #
ChangeLevel2UserCompanyNN 3
(NN3 4
intNN4 7
idNN8 :
,NN: ;
intNN< ?
	companyIdNN@ I
,NNI J
stringNNK Q
dataInitNNR Z
)NNZ [
{OO 	
varPP 
	_dataInitPP 
=PP 
GuardPP !
.PP! "
ParseDateToSqlV2PP" 2
(PP2 3
dataInitPP3 ;
)PP; <
;PP< =
ifQQ 
(QQ 
idQQ 
>QQ 
$numQQ 
&&QQ 
	companyIdQQ #
>QQ$ %
$numQQ& '
)QQ' (
{RR 
varSS 
allControlCompanySS %
=SS& '
dbSS( *
.SS* +#
ParLevel2ControlCompanySS+ B
.SSB C
IncludeSSC J
(SSJ K
$strSSK V
)SSV W
.SSW X
WhereSSX ]
(SS] ^
rSS^ _
=>SS` b
rSSc d
.SSd e
ParLevel1_IdSSe q
==SSr t
idSSu w
&&SSx z
rSS{ |
.SS| }
InitDate	SS} Ö
==
SSÜ à
	_dataInit
SSâ í
&&
SSì ï
r
SSñ ó
.
SSó ò
IsActive
SSò †
==
SS° £
true
SS§ ®
)
SS® ©
;
SS© ™
varTT $
lastDateDaControlCompanyTT ,
=TT- .
allControlCompanyTT/ @
.TT@ A
WhereTTA F
(TTF G
rTTG H
=>TTI K
rTTL M
.TTM N
ParCompany_IdTTN [
==TT\ ^
nullTT_ c
)TTc d
.TTd e
OrderByDescendingTTe v
(TTv w
rTTw x
=>TTy {
rTT| }
.TT} ~
InitDate	TT~ Ü
)
TTÜ á
.
TTá à
FirstOrDefault
TTà ñ
(
TTñ ó
)
TTó ò
?
TTò ô
.
TTô ö
InitDate
TTö ¢
;
TT¢ £
varUU 
level2ComporativoUU %
=UU& '
allControlCompanyUU( 9
.UU9 :
WhereUU: ?
(UU? @
rUU@ A
=>UUB D
rUUE F
.UUF G
InitDateUUG O
==UUP R$
lastDateDaControlCompanyUUS k
&&UUl n
rUUo p
.UUp q
ParCompany_IdUUq ~
==	UU Å
null
UUÇ Ü
)
UUÜ á
.
UUá à
Select
UUà é
(
UUé è
r
UUè ê
=>
UUë ì
r
UUî ï
.
UUï ñ
	ParLevel2
UUñ ü
)
UUü †
;
UU† °
varWW 
lastDateCompanyWW #
=WW$ %
allControlCompanyWW& 7
.WW7 8
WhereWW8 =
(WW= >
rWW> ?
=>WW@ B
rWWC D
.WWD E
ParCompany_IdWWE R
==WWS U
	companyIdWWV _
)WW_ `
.WW` a
OrderByDescendingWWa r
(WWr s
rWWs t
=>WWu w
rWWx y
.WWy z
InitDate	WWz Ç
)
WWÇ É
.
WWÉ Ñ
FirstOrDefault
WWÑ í
(
WWí ì
)
WWì î
?
WWî ï
.
WWï ñ
InitDate
WWñ û
;
WWû ü
varXX )
level2SelecionadosParaEmpresaXX 1
=XX2 3
allControlCompanyXX4 E
.XXE F
WhereXXF K
(XXK L
rXXL M
=>XXN P
rXXQ R
.XXR S
ParCompany_IdXXS `
==XXa c
	companyIdXXd m
&&XXn p
rXXq r
.XXr s
InitDateXXs {
==XX| ~
lastDateCompany	XX é
)
XXé è
.
XXè ê
Select
XXê ñ
(
XXñ ó
r
XXó ò
=>
XXô õ
r
XXú ù
.
XXù û
	ParLevel2
XXû ß
)
XXß ®
;
XX® ©
varYY '
level2DisponivelParaEmpresaYY /
=YY0 1
dbYY2 4
.YY4 5!
ParLevel3Level2Level1YY5 J
.YYJ K
WhereYYK P
(YYP Q
rYYQ R
=>YYS U
rYYV W
.YYW X
ParLevel1_IdYYX d
==YYe g
idYYh j
&&YYk m
!YYn o
level2Comporativo	YYo Ä
.
YYÄ Å
Any
YYÅ Ñ
(
YYÑ Ö
c
YYÖ Ü
=>
YYá â
c
YYä ã
.
YYã å
Id
YYå é
==
YYè ë
r
YYí ì
.
YYì î
ParLevel3Level2
YYî £
.
YY£ §
	ParLevel2
YY§ ≠
.
YY≠ Æ
Id
YYÆ ∞
)
YY∞ ±
)
YY± ≤
.
YY≤ ≥
Select
YY≥ π
(
YYπ ∫
r
YY∫ ª
=>
YYº æ
r
YYø ¿
.
YY¿ ¡
ParLevel3Level2
YY¡ –
.
YY– —
	ParLevel2
YY— ⁄
)
YY⁄ €
.
YY€ ‹
Distinct
YY‹ ‰
(
YY‰ Â
)
YYÂ Ê
.
YYÊ Á
ToList
YYÁ Ì
(
YYÌ Ó
)
YYÓ Ô
;
YYÔ 
ViewBag[[ 
.[[ 
level2Number[[ $
=[[% &
db[[' )
.[[) *
	ParLevel1[[* 3
.[[3 4
FirstOrDefault[[4 B
([[B C
r[[C D
=>[[E G
r[[H I
.[[I J
Id[[J L
==[[M O
id[[P R
)[[R S
.[[S T
Level2Number[[T `
;[[` a
ViewBag\\ 
.\\ 
level2Comporativo\\ )
=\\* +
level2Comporativo\\, =
;\\= >
ViewBag]] 
.]]  
level2ComporativoIds]] ,
=]]- .
level2Comporativo]]/ @
.]]@ A
Select]]A G
(]]G H
r]]H I
=>]]J L
r]]M N
.]]N O
Id]]O Q
)]]Q R
;]]R S
ViewBag^^ 
.^^ '
level2DisponivelParaEmpresa^^ 3
=^^4 5'
level2DisponivelParaEmpresa^^6 Q
;^^Q R
ViewBag__ 
.__ ,
 level2SelecionadosParaEmpresaIds__ 8
=__9 :)
level2SelecionadosParaEmpresa__; X
?__X Y
.__Y Z
Select__Z `
(__` a
r__a b
=>__c e
r__f g
.__g h
Id__h j
)__j k
;__k l
}`` 
elseaa 
{bb 
ViewBagcc 
.cc 
	ParLevel2cc !
=cc" #
newcc$ '
Listcc( ,
<cc, -
ParLevel2DTOcc- 9
>cc9 :
(cc: ;
)cc; <
;cc< =
ViewBagdd 
.dd 
level2Numberdd $
=dd% &
$numdd' (
;dd( )
}ee 
returnff 
PartialViewff 
(ff 
$strff J
)ffJ K
;ffK L
}gg 	
}hh 
}ii ãq
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParBinaryDataTypeController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Params

  &
{ 
[ 
CustomAuthorize 
] 
public 

class '
ParBinaryDataTypeController ,
:- .
BaseController/ =
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
_DataTypeFalse *
(* +
)+ ,
{ 	
return 
PartialView 
( 
db !
.! "
ParLevel3BoolFalse" 4
.4 5
ToList5 ;
(; <
)< =
)= >
;> ?
} 	
public 
ActionResult 
_DataTypeTrue )
() *
)* +
{ 	
return 
PartialView 
( 
db !
.! "
ParLevel3BoolTrue" 3
.3 4
ToList4 :
(: ;
); <
)< =
;= >
} 	
public 
ActionResult 

CreateTrue &
(& '
)' (
{   	
return!! 
View!! 
(!! 
)!! 
;!! 
}"" 	
public## 
ActionResult## 
CreateFalse## '
(##' (
)##( )
{$$ 	
return%% 
View%% 
(%% 
)%% 
;%% 
}&& 	
public(( 
ActionResult(( 
EditTrue(( $
((($ %
int((% (
?((( )
id((* ,
)((, -
{)) 	
if++ 
(++ 
id++ 
==++ 
null++ 
)++ 
{,, 
return-- 
new--  
HttpStatusCodeResult-- /
(--/ 0
HttpStatusCode--0 >
.--> ?

BadRequest--? I
)--I J
;--J K
}.. 
var00 !
parBinaryDataTypeTrue00 %
=00& '
db00( *
.00* +
ParLevel3BoolTrue00+ <
.00< =
Find00= A
(00A B
id00B D
)00D E
;00E F
if22 
(22 !
parBinaryDataTypeTrue22 %
==22& (
null22) -
)22- .
{33 
return44 
HttpNotFound44 #
(44# $
)44$ %
;44% &
}55 
return77 
View77 
(77 !
parBinaryDataTypeTrue77 -
)77- .
;77. /
}99 	
public:: 
ActionResult:: 
	EditFalse:: %
(::% &
int::& )
?::) *
id::+ -
)::- .
{;; 	
ParLevel3BoolFalse<< "
parBinaryDataTypeFalse<< 5
=<<6 7
new<<8 ;
ParLevel3BoolFalse<<< N
(<<N O
)<<O P
;<<P Q
if>> 
(>> 
id>> 
==>> 
null>> 
)>> 
{?? 
return@@ 
new@@  
HttpStatusCodeResult@@ /
(@@/ 0
HttpStatusCode@@0 >
.@@> ?

BadRequest@@? I
)@@I J
;@@J K
}AA "
parBinaryDataTypeFalseCC "
=CC# $
dbCC% '
.CC' (
ParLevel3BoolFalseCC( :
.CC: ;
FindCC; ?
(CC? @
idCC@ B
)CCB C
;CCC D
ifDD 
(DD "
parBinaryDataTypeFalseDD &
==DD' )
nullDD* .
)DD. /
{EE 
returnFF 
HttpNotFoundFF #
(FF# $
)FF$ %
;FF% &
}GG 
returnII 
ViewII 
(II "
parBinaryDataTypeFalseII .
)II. /
;II/ 0
}JJ 	
publicLL 
ActionResultLL 

DeleteTrueLL &
(LL& '
intLL' *
?LL* +
idLL, .
)LL. /
{MM 	
ifOO 
(OO 
idOO 
==OO 
nullOO 
)OO 
{PP 
returnQQ 
newQQ  
HttpStatusCodeResultQQ /
(QQ/ 0
HttpStatusCodeQQ0 >
.QQ> ?

BadRequestQQ? I
)QQI J
;QQJ K
}RR 
varTT !
parBinaryDataTypeTrueTT %
=TT& '
dbTT( *
.TT* +
ParLevel3BoolTrueTT+ <
.TT< =
FindTT= A
(TTA B
idTTB D
)TTD E
;TTE F
ifUU 
(UU !
parBinaryDataTypeTrueUU %
==UU& (
nullUU) -
)UU- .
{VV 
returnWW 
HttpNotFoundWW #
(WW# $
)WW$ %
;WW% &
}XX 
returnZZ 
ViewZZ 
(ZZ !
parBinaryDataTypeTrueZZ -
)ZZ- .
;ZZ. /
}\\ 	
public]] 
ActionResult]] 
DeleteFalse]] '
(]]' (
int]]( +
?]]+ ,
id]]- /
)]]/ 0
{^^ 	
if`` 
(`` 
id`` 
==`` 
null`` 
)`` 
{aa 
returnbb 
newbb  
HttpStatusCodeResultbb /
(bb/ 0
HttpStatusCodebb0 >
.bb> ?

BadRequestbb? I
)bbI J
;bbJ K
}cc 
varee "
parBinaryDataTypeFalseee &
=ee' (
dbee) +
.ee+ ,
ParLevel3BoolFalseee, >
.ee> ?
Findee? C
(eeC D
ideeD F
)eeF G
;eeG H
ifff 
(ff "
parBinaryDataTypeFalseff &
==ff' )
nullff* .
)ff. /
{gg 
returnhh 
HttpNotFoundhh #
(hh# $
)hh$ %
;hh% &
}ii 
returnjj 
Viewjj 
(jj "
parBinaryDataTypeFalsejj .
)jj. /
;jj/ 0
}ll 	
[nn 	
HttpPostnn	 
]nn 
[oo 	$
ValidateAntiForgeryTokenoo	 !
]oo! "
publicpp 
ActionResultpp 

DeleteTruepp &
(pp& '
intpp' *
idpp+ -
,pp- .
ParLevel3BoolTruepp/ @
parLevel3BoolppA N
)ppN O
{qq 	
varrr !
parBinaryDataTypeTruerr %
=rr& '
dbrr( *
.rr* +
ParLevel3BoolTruerr+ <
.rr< =
Findrr= A
(rrA B
idrrB D
)rrD E
;rrE F
dbss 
.ss 
ParLevel3BoolTruess  
.ss  !
Removess! '
(ss' (!
parBinaryDataTypeTruess( =
)ss= >
;ss> ?
dbtt 
.tt 
SaveChangestt 
(tt 
)tt 
;tt 
returnuu 
RedirectToActionuu #
(uu# $
$struu$ +
)uu+ ,
;uu, -
}vv 	
[xx 	
HttpPostxx	 
]xx 
[yy 	$
ValidateAntiForgeryTokenyy	 !
]yy! "
publiczz 
ActionResultzz 
DeleteFalsezz '
(zz' (
intzz( +
idzz, .
,zz. /
ParLevel3BoolFalsezz0 B
parLevel3BoolzzC P
)zzP Q
{{{ 	
ParLevel3BoolFalse}} "
parBinaryDataTypeFalse}} 5
=}}6 7
new}}8 ;
ParLevel3BoolFalse}}< N
(}}N O
)}}O P
;}}P Q"
parBinaryDataTypeFalse "
=# $
db% '
.' (
ParLevel3BoolFalse( :
.: ;
Find; ?
(? @
id@ B
)B C
;C D
db
ÄÄ 
.
ÄÄ  
ParLevel3BoolFalse
ÄÄ !
.
ÄÄ! "
Remove
ÄÄ" (
(
ÄÄ( )$
parBinaryDataTypeFalse
ÄÄ) ?
)
ÄÄ? @
;
ÄÄ@ A
db
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
return
ÇÇ 
RedirectToAction
ÇÇ #
(
ÇÇ# $
$str
ÇÇ$ +
)
ÇÇ+ ,
;
ÇÇ, -
}
ÑÑ 	
[
ÜÜ 	
HttpPost
ÜÜ	 
]
ÜÜ 
[
áá 	&
ValidateAntiForgeryToken
áá	 !
]
áá! "
public
àà 
ActionResult
àà 

CreateTrue
àà &
(
àà& '
ParLevel3BoolTrue
àà' 8
parLevel3Bool
àà9 F
)
ààF G
{
ââ 	
if
ãã 
(
ãã 

ModelState
ãã 
.
ãã 
IsValid
ãã "
)
ãã" #
{
åå 
parLevel3Bool
çç 
.
çç 
AddDate
çç %
=
çç& '
DateTime
çç( 0
.
çç0 1
Now
çç1 4
;
çç4 5
db
êê 
.
êê 
ParLevel3BoolTrue
êê $
.
êê$ %
Add
êê% (
(
êê( )
parLevel3Bool
êê) 6
)
êê6 7
;
êê7 8
db
ëë 
.
ëë 
SaveChanges
ëë 
(
ëë 
)
ëë  
;
ëë  !
return
íí 
RedirectToAction
íí '
(
íí' (
$str
íí( /
)
íí/ 0
;
íí0 1
}
ìì 
return
ïï 
View
ïï 
(
ïï 
parLevel3Bool
ïï %
)
ïï% &
;
ïï& '
}
ññ 	
[
òò 	
HttpPost
òò	 
]
òò 
[
ôô 	&
ValidateAntiForgeryToken
ôô	 !
]
ôô! "
public
öö 
ActionResult
öö 
CreateFalse
öö '
(
öö' ( 
ParLevel3BoolFalse
öö( :
parLevel3Bool
öö; H
)
ööH I
{
õõ 	
if
úú 
(
úú 

ModelState
úú 
.
úú 
IsValid
úú "
)
úú" #
{
ùù 
parLevel3Bool
ûû 
.
ûû 
AddDate
ûû %
=
ûû& '
DateTime
ûû( 0
.
ûû0 1
Now
ûû1 4
;
ûû4 5
db
°° 
.
°°  
ParLevel3BoolFalse
°° %
.
°°% &
Add
°°& )
(
°°) *
parLevel3Bool
°°* 7
)
°°7 8
;
°°8 9
db
¢¢ 
.
¢¢ 
SaveChanges
¢¢ 
(
¢¢ 
)
¢¢  
;
¢¢  !
return
££ 
RedirectToAction
££ '
(
££' (
$str
££( /
)
££/ 0
;
££0 1
}
•• 
return
¶¶ 
View
¶¶ 
(
¶¶ 
parLevel3Bool
¶¶ %
)
¶¶% &
;
¶¶& '
}
ßß 	
[
©© 	
HttpPost
©©	 
]
©© 
[
™™ 	&
ValidateAntiForgeryToken
™™	 !
]
™™! "
public
´´ 
ActionResult
´´ 
EditTrue
´´ $
(
´´$ %
int
´´% (
?
´´( )
id
´´* ,
,
´´, -
ParLevel3BoolTrue
´´. ?
parLevel3Bool
´´@ M
)
´´M N
{
¨¨ 	
var
ÆÆ 
original
ÆÆ 
=
ÆÆ 
db
ÆÆ 
.
ÆÆ 
ParLevel3BoolTrue
ÆÆ /
.
ÆÆ/ 0
Find
ÆÆ0 4
(
ÆÆ4 5
id
ÆÆ5 7
)
ÆÆ7 8
;
ÆÆ8 9
if
∞∞ 
(
∞∞ 
original
∞∞ 
!=
∞∞ 
null
∞∞  
)
∞∞  !
{
±± 
parLevel3Bool
≤≤ 
.
≤≤ 
	AlterDate
≤≤ '
=
≤≤( )
DateTime
≤≤* 2
.
≤≤2 3
Now
≤≤3 6
;
≤≤6 7
parLevel3Bool
≥≥ 
.
≥≥ 
AddDate
≥≥ %
=
≥≥& '
original
≥≥( 0
.
≥≥0 1
AddDate
≥≥1 8
;
≥≥8 9
db
¥¥ 
.
¥¥ 
Entry
¥¥ 
(
¥¥ 
original
¥¥ !
)
¥¥! "
.
¥¥" #
CurrentValues
¥¥# 0
.
¥¥0 1
	SetValues
¥¥1 :
(
¥¥: ;
parLevel3Bool
¥¥; H
)
¥¥H I
;
¥¥I J
db
µµ 
.
µµ 
SaveChanges
µµ 
(
µµ 
)
µµ  
;
µµ  !
return
∑∑ 
RedirectToAction
∑∑ '
(
∑∑' (
$str
∑∑( /
)
∑∑/ 0
;
∑∑0 1
}
∏∏ 
return
∫∫ 
View
∫∫ 
(
∫∫ 
parLevel3Bool
∫∫ %
)
∫∫% &
;
∫∫& '
}
ºº 	
[
ææ 	
HttpPost
ææ	 
]
ææ 
[
øø 	&
ValidateAntiForgeryToken
øø	 !
]
øø! "
public
¿¿ 
ActionResult
¿¿ 
	EditFalse
¿¿ %
(
¿¿% &
int
¿¿& )
?
¿¿) *
id
¿¿+ -
,
¿¿- .
ParLevel3BoolTrue
¿¿/ @
parLevel3Bool
¿¿A N
)
¿¿N O
{
¡¡ 	
var
√√ 
original
√√ 
=
√√ 
db
√√ 
.
√√  
ParLevel3BoolFalse
√√ 0
.
√√0 1
Find
√√1 5
(
√√5 6
id
√√6 8
)
√√8 9
;
√√9 :
if
≈≈ 
(
≈≈ 
original
≈≈ 
!=
≈≈ 
null
≈≈  
)
≈≈  !
{
∆∆ 
parLevel3Bool
«« 
.
«« 
	AlterDate
«« '
=
««( )
DateTime
««* 2
.
««2 3
Now
««3 6
;
««6 7
parLevel3Bool
»» 
.
»» 
AddDate
»» %
=
»»& '
original
»»( 0
.
»»0 1
AddDate
»»1 8
;
»»8 9
db
…… 
.
…… 
Entry
…… 
(
…… 
original
…… !
)
……! "
.
……" #
CurrentValues
……# 0
.
……0 1
	SetValues
……1 :
(
……: ;
parLevel3Bool
……; H
)
……H I
;
……I J
db
   
.
   
SaveChanges
   
(
   
)
    
;
    !
return
ÃÃ 
RedirectToAction
ÃÃ '
(
ÃÃ' (
$str
ÃÃ( /
)
ÃÃ/ 0
;
ÃÃ0 1
}
ÕÕ 
return
œœ 
View
œœ 
(
œœ 
parLevel3Bool
œœ %
)
œœ% &
;
œœ& '
}
–– 	
}
““ 
}‘‘ ÓO
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Recravacao\RecravacaoLinhasController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  

Recravacao  *
{ 
[ 
CustomAuthorize 
] 
public		 

class		 &
RecravacaoLinhasController		 +
:		, -

Controller		. 8
{

 
private 
SgqDbDevEntities  
db! #
;# $
public &
RecravacaoLinhasController )
() *
)* +
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
ViewBag 
. 

ParCompany 
=  
db! #
.# $

ParCompany$ .
.. /
Where/ 4
(4 5
r5 6
=>7 9
r: ;
.; <
IsActive< D
==E G
trueH L
)L M
.M N
ToListN T
(T U
)U V
;V W
ViewBag 
. 
TipoLata 
= 
db !
.! "
Database" *
.* +
SqlQuery+ 3
<3 4"
ParRecravacao_TipoLata4 J
>J K
(K L
$str	L å
)
å ç
;
ç é
ViewBag 
. 
	ParLevel2 
= 
db  "
." #
Database# +
.+ ,
SqlQuery, 4
<4 5
DTO5 8
.8 9
DTO9 <
.< =
Params= C
.C D
ParLevel2DTOD P
>P Q
(Q R
$str	R ¡
)
¡ ¬
;
¬ √
} 	
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 
model 
= 
db 
. 
Database #
.# $
SqlQuery$ ,
<, - 
ParRecravacao_Linhas- A
>A B
(B C
$strC y
)y z
.z {
OrderByDescending	{ å
(
å ç
r
ç é
=>
é ê
r
ê ë
.
ë í
IsActive
í ö
==
õ ù
false
û £
)
£ §
.
§ •
ToList
• ´
(
´ ¨
)
¨ ≠
;
≠ Æ
return 
View 
( 
model 
) 
; 
} 	
public 
ActionResult 
Create "
(" #
)# $
{   	
var!! 
model!! 
=!! 
new!!  
ParRecravacao_Linhas!! 0
(!!0 1
)!!1 2
;!!2 3
model"" 
."" 
IsActive"" 
="" 
true"" !
;""! "
return## 
View## 
(## 
model## 
)## 
;## 
}$$ 	
public'' 
ActionResult'' 
Edit''  
(''  !
int''! $
id''% '
)''' (
{(( 	 
ParRecravacao_Linhas))  
model))! &
=))' (
GetTipoLinhas))) 6
())6 7
id))7 9
)))9 :
;)): ;
return** 
View** 
(** 
$str**  
,**  !
model**" '
)**' (
;**( )
}++ 	
[-- 	
HttpPost--	 
]-- 
public.. 
ActionResult.. 
Edit..  
(..  ! 
ParRecravacao_Linhas..! 5

collection..6 @
)..@ A
{// 	
return00 
Create00 
(00 

collection00 $
)00$ %
;00% &
}11 	
public44 
ActionResult44 
Details44 #
(44# $
int44$ '
id44( *
)44* +
{55 	 
ParRecravacao_Linhas66  
model66! &
=66' (
GetTipoLinhas66) 6
(666 7
id667 9
)669 :
;66: ;
return77 
View77 
(77 
model77 
)77 
;77 
}88 	
[;; 	
HttpPost;;	 
];; 
public<< 
ActionResult<< 
Create<< "
(<<" # 
ParRecravacao_Linhas<<# 7

collection<<8 B
)<<B C
{== 	
try>> 
{?? 
ifAA 
(AA 

ModelStateAA 
.AA 
IsValidAA &
)AA& '
SaveBB 
(BB 

collectionBB #
)BB# $
;BB$ %
elseCC 
returnDD 
ViewDD 
(DD  
)DD  !
;DD! "
returnFF 
RedirectToActionFF '
(FF' (
$strFF( /
)FF/ 0
;FF0 1
}GG 
catchHH 
{II 
returnJJ 
ViewJJ 
(JJ 
)JJ 
;JJ 
}KK 
}LL 	
privateNN 
voidNN 
SaveNN 
(NN  
ParRecravacao_LinhasNN .
modelNN/ 4
)NN4 5
{OO 	
ifPP 
(PP 
modelPP 
.PP 
IdPP 
>PP 
$numPP 
)PP 
{QQ 
varRR 
updateRR 
=RR 
stringRR #
.RR# $
FormatRR$ *
(RR* +
$strRR+ T
+RRU V
$strSS ,
+SS- .
$strTT 5
+TT6 7
$strUU A
+UUB C
$strVV 5
+VV6 7
$strWW 5
+WW6 7
$strXX 1
+XX2 3
$strYY 4
+YY5 6
$strZZ 0
+ZZ1 2
$str[[ (
,\\ 
model\\ 
.\\ 
Name\\  
,]] 
model]] 
.]] 
ParCompany_Id]] )
.]]) *
ToString]]* 2
(]]2 3
)]]3 4
,^^ 
model^^ 
.^^ %
ParRecravacao_TypeLata_Id^^ 5
.^^5 6
ToString^^6 >
(^^> ?
)^^? @
,__ 
model__ 
.__ 
NumberOfHeads__ )
.__) *
ToString__* 2
(__2 3
)__3 4
,`` 
model`` 
.`` 
Description`` '
,aa 
$straa !
,bb 
modelbb 
.bb 
IsActivebb $
?bb% &
$strbb' *
:bb+ ,
$strbb- 0
,cc 
modelcc 
.cc 
Idcc 
.cc 
ToStringcc '
(cc' (
)cc( )
,dd 
modeldd 
.dd 
ParLevel2_Iddd (
)dd( )
;dd) *
dbff 
.ff 
Databaseff 
.ff 
ExecuteSqlCommandff -
(ff- .
updateff. 4
)ff4 5
;ff5 6
}hh 
elseii 
{jj 
varkk 
insertkk 
=kk 
stringkk #
.kk# $
Formatkk$ *
(kk* +
$strkk+ Y
+kkZ [
$strll -
+ll. /
$strmm 6
+mm7 8
$strnn B
+nnC D
$stroo 6
+oo7 8
$strpp 4
+pp5 6
$strqq 0
+qq1 2
$strrr 5
+rr6 7
$strss 2
+ss3 4
$strtt (
+tt) *
$struu -
+uu. /
$strvv *
+vv+ ,
$strww *
+ww+ ,
$strxx *
+xx+ ,
$stryy ,
+yy- .
$strzz *
+zz+ ,
$str{{ *
+{{+ ,
$str|| B
,}} 
model}} !
.}}! "
Name}}" &
,~~ 
model~~ !
.~~! "
ParCompany_Id~~" /
.~~/ 0
ToString~~0 8
(~~8 9
)~~9 :
, 
model !
.! "%
ParRecravacao_TypeLata_Id" ;
.; <
ToString< D
(D E
)E F
,
ÄÄ 
model
ÄÄ !
.
ÄÄ! "
NumberOfHeads
ÄÄ" /
.
ÄÄ/ 0
ToString
ÄÄ0 8
(
ÄÄ8 9
)
ÄÄ9 :
,
ÅÅ 
model
ÅÅ !
.
ÅÅ! "
Description
ÅÅ" -
,
ÇÇ 
$str
ÇÇ '
,
ÉÉ 
model
ÉÉ !
.
ÉÉ! "
IsActive
ÉÉ" *
?
ÉÉ+ ,
$str
ÉÉ- 0
:
ÉÉ1 2
$str
ÉÉ3 6
,
ÑÑ 
model
ÑÑ !
.
ÑÑ! "
ParLevel2_Id
ÑÑ" .
)
ÖÖ 
;
ÖÖ 
model
áá 
.
áá 
Id
áá 
=
áá 
int
áá 
.
áá 
Parse
áá $
(
áá$ %
db
áá% '
.
áá' (
Database
áá( 0
.
áá0 1
SqlQuery
áá1 9
<
áá9 :
decimal
áá: A
>
ááA B
(
ááB C
insert
ááC I
)
ááI J
.
ááJ K
FirstOrDefault
ááK Y
(
ááY Z
)
ááZ [
.
áá[ \
ToString
áá\ d
(
áád e
)
ááe f
)
ááf g
;
áág h
}
àà 
}
ââ 	
private
ãã "
ParRecravacao_Linhas
ãã $
GetTipoLinhas
ãã% 2
(
ãã2 3
int
ãã3 6
id
ãã7 9
)
ãã9 :
{
åå 	
var
çç 
model
çç 
=
çç 
new
çç "
ParRecravacao_Linhas
çç 0
(
çç0 1
)
çç1 2
;
çç2 3
if
éé 
(
éé 
id
éé 
>
éé 
$num
éé 
)
éé 
model
èè 
=
èè 
db
èè 
.
èè 
Database
èè #
.
èè# $
SqlQuery
èè$ ,
<
èè, -"
ParRecravacao_Linhas
èè- A
>
èèA B
(
èèB C
$str
èèC s
+
èèt u
id
èèv x
)
èèx y
.
èèy z
FirstOrDefaultèèz à
(èèà â
)èèâ ä
;èèä ã
return
êê 
model
êê 
;
êê 
}
ëë 	
}
íí 
}ìì ∆"
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Recravacao\ParRecravacao_Linhas.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  

Recravacao  *
{ 
public 

class  
ParRecravacao_Linhas %
:& '

EntityBase( 2
{		 
[

 	
Display

	 
(

 
Name

 
=

 
$str

 
)

 
]

  
[ 	
Required	 
( 
ErrorMessage 
=  
$str! G
)G H
]H I
[ 	
	MaxLength	 
( 
$num 
, 
ErrorMessage $
=% &
$str' U
)U V
]V W
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Display	 
( 
Name 
= 
$str !
)! "
]" #
[ 	
Required	 
( 
ErrorMessage 
=  
$str! G
)G H
]H I
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
[ 	
Required	 
( 
ErrorMessage 
=  
$str! K
)K L
]L M
public 
int %
ParRecravacao_TypeLata_Id ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
[ 	
Display	 
( 
Name 
= 
$str '
)' (
]( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! L
)L M
]M N
public 
int 
? 
ParLevel2_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Display	 
( 
Name 
= 
$str /
)/ 0
]0 1
[ 	
Range	 
( 
$num 
, 
$num 
, 
ErrorMessage *
=+ ,
$str- P
)P Q
]Q R
public 
int 
NumberOfHeads  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Display	 
( 
Name 
= 
$str #
)# $
]$ %
[   	
	MaxLength  	 
(   
$num   
,   
ErrorMessage   $
=  % &
$str  ' U
)  U V
]  V W
public!! 
string!! 
Description!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
[## 	
Display##	 
(## 
Name## 
=## 
$str## 
)##  
]##  !
public$$ 
bool$$ 
IsActive$$ 
{$$ 
get$$ "
;$$" #
set$$$ '
;$$' (
}$$) *
[&& 	

ForeignKey&&	 
(&& 
$str&& #
)&&# $
]&&$ %
public'' 
virtual'' 

ParCompany'' !

ParCompany''" ,
{''- .
get''/ 2
;''2 3
set''4 7
;''7 8
}''9 :
[)) 	

ForeignKey))	 
()) 
$str)) /
)))/ 0
]))0 1
public** 
virtual** "
ParRecravacao_TipoLata** -
TipoLata**. 6
{**7 8
get**9 <
;**< =
set**> A
;**A B
}**C D
[,, 	

ForeignKey,,	 
(,, 
$str,, "
),," #
],,# $
public-- 
virtual-- 
	ParLevel2--  
	ParLevel2--! *
{--+ ,
get--- 0
;--0 1
set--2 5
;--5 6
}--7 8
}.. 
}// ≈
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Recravacao\ParRecravacao_TipoLata.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  

Recravacao  *
{ 
public 

class "
ParRecravacao_TipoLata '
:( )

EntityBase* 4
{ 
[ 	
Display	 
( 
Name 
= 
$str 
) 
]  
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! G
)		G H
]		H I
[

 	
	MaxLength

	 
(

 
$num

 
,

 
ErrorMessage

 $
=

% &
$str

' U
)

U V
]

V W
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Display	 
( 
Name 
= 
$str #
)# $
]$ %
[ 	
	MaxLength	 
( 
$num 
, 
ErrorMessage $
=% &
$str' U
)U V
]V W
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Display	 
( 
Name 
= 
$str 8
)8 9
]9 :
[ 	
Range	 
( 
$num 
, 
$num 
, 
ErrorMessage *
=+ ,
$str- X
)X Y
]Y Z
public 
int 
NumberOfPoints !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Display	 
( 
Name 
= 
$str 
)  
]  !
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ’
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Recravacao\RecravacaoController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  

Recravacao  *
{		 
[

 
CustomAuthorize

 
]

 
public 

class  
RecravacaoController %
:& '

Controller( 2
{ 
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
Print !
(! "
int" %
?% &
indicadorId' 2
=3 4
$num5 6
,6 7
int8 ;
?; <
linhaId= D
=E F
$numG H
)H I
{ 	
ViewBag 
. 
IndicadorId 
=  !
indicadorId" -
;- .
ViewBag 
. 
LinhaId 
= 
linhaId %
;% &
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
Print2 "
(" #
)# $
{ 	
return 
View 
( 
) 
; 
} 	
}   
}!! Ív
mC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Recravacao\RecravacaoTipoLataController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  

Recravacao  *
{ 
[ 
CustomAuthorize 
] 
public 

class (
RecravacaoTipoLataController -
:. /

Controller0 :
{ 
private 
SgqDbDevEntities  
db! #
;# $
public (
RecravacaoTipoLataController +
(+ ,
), -
{ 	
db 
= 
new 
SgqDbDevEntities %
(% &
)& '
;' (
} 	
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 
model 
= 
db 
. 
Database #
.# $
SqlQuery$ ,
<, -"
ParRecravacao_TipoLata- C
>C D
(D E
$strE k
)k l
.l m
OrderByDescendingm ~
(~ 
r	 Ä
=>
Å É
r
Ñ Ö
.
Ö Ü
IsActive
Ü é
)
é è
.
è ê
ToList
ê ñ
(
ñ ó
)
ó ò
;
ò ô
return 
View 
( 
model 
) 
; 
} 	
public"" 
ActionResult"" 
Create"" "
(""" #
)""# $
{## 	
var$$ 
model$$ 
=$$ 
new$$ %
ParRecravacao_TipoLataDTO$$ 5
($$5 6
)$$6 7
;$$7 8
model%% 
.%% 
ParLataImagensList%% $
=%%% &
new%%' *
List%%+ /
<%%/ 0
ParLataImagens%%0 >
>%%> ?
(%%? @
)%%@ A
;%%A B
model&& 
.&& 
IsActive&& 
=&& 
true&& !
;&&! "
return'' 
View'' 
('' 
model'' 
)'' 
;'' 
}(( 	
public++ 
ActionResult++ 
Edit++  
(++  !
int++! $
id++% '
)++' (
{,, 	%
ParRecravacao_TipoLataDTO-- %
model--& +
=--, -
GetTipoLata--. 9
(--9 :
id--: <
)--< =
;--= >
return// 
View// 
(// 
$str//  
,//  !
model//" '
)//' (
;//( )
}00 	
[22 	
HttpPost22	 
]22 
public33 
ActionResult33 
Edit33  
(33  !%
ParRecravacao_TipoLataDTO33! :"
parRecravacao_TipoLata33; Q
,33Q R
IEnumerable33S ^
<33^ _
HttpPostedFileBase33_ q
>33q r
files33s x
)33x y
{44 	
return55 
Create55 
(55 "
parRecravacao_TipoLata55 0
,550 1
files552 7
)557 8
;558 9
}66 	
public99 
ActionResult99 
Details99 #
(99# $
int99$ '
id99( *
)99* +
{:: 	"
ParRecravacao_TipoLata;; "
model;;# (
=;;) *
GetTipoLata;;+ 6
(;;6 7
id;;7 9
);;9 :
;;;: ;
return<< 
View<< 
(<< 
model<< 
)<< 
;<< 
}== 	
[@@ 	
HttpPost@@	 
]@@ 
publicAA 
ActionResultAA 
CreateAA "
(AA" #%
ParRecravacao_TipoLataDTOAA# <"
parRecravacao_TipoLataAA= S
,AAS T
IEnumerableAAU `
<AA` a
HttpPostedFileBaseAAa s
>AAs t
filesAAu z
)AAz {
{BB 	
tryCC 
{DD 
ifFF 
(FF 

ModelStateFF 
.FF 
IsValidFF &
)FF& '
{GG 
SaveII 
(II "
parRecravacao_TipoLataII /
)II/ 0
;II0 1
varJJ 
counterJJ 
=JJ  !
$numJJ" #
;JJ# $
foreachKK 
(KK 
varKK  
fileKK! %
inKK& (
filesKK) .
)KK. /
{LL 
ifMM 
(MM 
fileMM  
!=MM! #
nullMM$ (
)MM( )
ifNN 
(NN  
fileNN  $
.NN$ %
ContentLengthNN% 2
>NN3 4
$numNN5 6
)NN6 7
{OO 
varPP  #
fileNamePP$ ,
=PP- .
PathPP/ 3
.PP3 4
GetFileNamePP4 ?
(PP? @
filePP@ D
.PPD E
FileNamePPE M
)PPM N
;PPN O
varQQ  #
pathQQ$ (
=QQ) *
PathQQ+ /
.QQ/ 0
CombineQQ0 7
(QQ7 8
ServerQQ8 >
.QQ> ?
MapPathQQ? F
(QQF G
$strQQG R
)QQR S
,QQS T
fileNameQQU ]
)QQ] ^
;QQ^ _
fileRR  $
.RR$ %
SaveAsRR% +
(RR+ ,
pathRR, 0
)RR0 1
;RR1 2
varSS  #
imagemSS$ *
=SS+ ,
ImageSS- 2
.SS2 3

FromStreamSS3 =
(SS= >
fileSS> B
.SSB C
InputStreamSSC N
,SSN O
trueSSP T
,SST U
trueSSV Z
)SSZ [
;SS[ \
varUU  #
parLataImagensUU$ 2
=UU3 4
newUU5 8
ParLataImagensUU9 G
(UUG H
)UUH I
{UUJ K
AddDateUUL S
=UUT U
DateTimeUUV ^
.UU^ _
NowUU_ b
}UUc d
;UUd e
parLataImagensVV  .
.VV. /
ImagemVV/ 5
=VV6 7
ImageToByteArrayVV8 H
(VVH I
imagemVVI O
)VVO P
;VVP Q
parLataImagensWW  .
.WW. /%
ParRecravacao_TipoLata_IdWW/ H
=WWI J"
parRecravacao_TipoLataWWK a
.WWa b
IdWWb d
;WWd e
parLataImagensXX  .
.XX. /
PathFileXX/ 7
=XX8 9
pathXX: >
;XX> ?
parLataImagensYY  .
.YY. /
FileNameYY/ 7
=YY8 9
fileNameYY: B
;YYB C
parLataImagensZZ  .
.ZZ. /

PontoIndexZZ/ 9
=ZZ: ;
(ZZ< =
counterZZ= D
+ZZE F
$numZZG H
)ZZH I
;ZZI J"
parRecravacao_TipoLata\\  6
.\\6 7
ParLataImagensList\\7 I
=\\J K
new\\L O
List\\P T
<\\T U
ParLataImagens\\U c
>\\c d
(\\d e
)\\e f
;\\f g"
parRecravacao_TipoLata]]  6
.]]6 7
ParLataImagensList]]7 I
.]]I J
Add]]J M
(]]M N
parLataImagens]]N \
)]]\ ]
;]]] ^
db__  "
.__" #
ParLataImagens__# 1
.__1 2
Add__2 5
(__5 6
parLataImagens__6 D
)__D E
;__E F
db``  "
.``" #
SaveChanges``# .
(``. /
)``/ 0
;``0 1
}aa 
countercc 
++cc !
;cc! "
}dd 
}ee 
elseff 
returngg 
Viewgg 
(gg  "
parRecravacao_TipoLatagg  6
)gg6 7
;gg7 8
returnii 
RedirectToActionii '
(ii' (
$strii( /
)ii/ 0
;ii0 1
}jj 
catchkk 
(kk 
	Exceptionkk 
ekk 
)kk 
{ll 
returnmm 
Viewmm 
(mm "
parRecravacao_TipoLatamm 2
)mm2 3
;mm3 4
}nn 
}oo 	
privateqq 
voidqq 
Saveqq 
(qq "
ParRecravacao_TipoLataqq 0
modelqq1 6
)qq6 7
{rr 	
ifss 
(ss 
modelss 
.ss 
Idss 
>ss 
$numss 
)ss 
{tt 
varuu 
updateuu 
=uu 
stringuu #
.uu# $
Formatuu$ *
(uu* +
$struu+ V
+uuW X
$strvv -
+vv. /
$strww 5
+ww6 7
$strxx 5
+xx6 7
$stryy 0
+yy1 2
$strzz /
+zz0 1
$str{{ '
,|| 
model|| 
.|| 
Name||  
,}} 
model}} 
.}} 
Description}} '
,~~ 
model~~ 
.~~ 
NumberOfPoints~~ *
.~~* +
ToString~~+ 3
(~~3 4
)~~4 5
, 
$str !
,
ÄÄ 
model
ÄÄ 
.
ÄÄ 
IsActive
ÄÄ $
?
ÄÄ% &
$str
ÄÄ' *
:
ÄÄ+ ,
$str
ÄÄ- 0
,
ÅÅ 
model
ÅÅ 
.
ÅÅ 
Id
ÅÅ 
)
ÇÇ 
;
ÇÇ 
db
ÑÑ 
.
ÑÑ 
Database
ÑÑ 
.
ÑÑ 
ExecuteSqlCommand
ÑÑ -
(
ÑÑ- .
update
ÑÑ. 4
)
ÑÑ4 5
;
ÑÑ5 6
}
ÜÜ 
else
áá 
{
àà 
var
ââ 
insert
ââ 
=
ââ 
string
ââ #
.
ââ# $
Format
ââ$ *
(
ââ* +
$str
ââ+ Z
+
ââ[ \
$str
ää A
+
ääB C
$str
ãã A
+
ããB C
$str
åå A
+
ååB C
$str
çç A
+
ççB C
$str
éé A
+
ééB C
$str
èè A
+
èèB C
$str
êê B
+
êêC D
$str
ëë ;
+
ëë< =
$str
íí =
+
íí> ?
$str
ìì ;
+
ìì< =
$str
îî >
,
ïï 
model
ïï 
.
ïï 
Name
ïï  
,
ññ 
model
ññ 
.
ññ 
Description
ññ '
,
óó 
model
óó 
.
óó 
NumberOfPoints
óó *
.
óó* +
ToString
óó+ 3
(
óó3 4
)
óó4 5
,
òò 
$str
òò !
,
ôô 
model
ôô 
.
ôô 
IsActive
ôô $
?
ôô% &
$str
ôô' *
:
ôô+ ,
$str
ôô- 0
)
ôô0 1
;
ôô1 2
model
õõ 
.
õõ 
Id
õõ 
=
õõ 
int
õõ 
.
õõ 
Parse
õõ $
(
õõ$ %
db
õõ% '
.
õõ' (
Database
õõ( 0
.
õõ0 1
SqlQuery
õõ1 9
<
õõ9 :
decimal
õõ: A
>
õõA B
(
õõB C
insert
õõC I
)
õõI J
.
õõJ K
FirstOrDefault
õõK Y
(
õõY Z
)
õõZ [
.
õõ[ \
ToString
õõ\ d
(
õõd e
)
õõe f
)
õõf g
;
õõg h
}
úú 
}
ùù 	
private
üü '
ParRecravacao_TipoLataDTO
üü )
GetTipoLata
üü* 5
(
üü5 6
int
üü6 9
id
üü: <
)
üü< =
{
†† 	
var
°° 
model
°° 
=
°° 
new
°° '
ParRecravacao_TipoLataDTO
°° 5
(
°°5 6
)
°°6 7
;
°°7 8
if
¢¢ 
(
¢¢ 
id
¢¢ 
>
¢¢ 
$num
¢¢ 
)
¢¢ 
model
££ 
=
££ 
db
££ 
.
££ 
Database
££ #
.
££# $
SqlQuery
££$ ,
<
££, -'
ParRecravacao_TipoLataDTO
££- F
>
££F G
(
££G H
$str
££H z
+
££{ |
id
££} 
)££ Ä
.££Ä Å
FirstOrDefault££Å è
(££è ê
)££ê ë
;££ë í
model
•• 
.
••  
ParLataImagensList
•• $
=
••% &
new
••' *
List
••+ /
<
••/ 0
ParLataImagens
••0 >
>
••> ?
(
••? @
)
••@ A
;
••A B
model
¶¶ 
.
¶¶  
ParLataImagensList
¶¶ $
=
¶¶% &
db
¶¶' )
.
¶¶) *
ParLataImagens
¶¶* 8
.
¶¶8 9
Where
¶¶9 >
(
¶¶> ?
r
¶¶? @
=>
¶¶A C
r
¶¶D E
.
¶¶E F'
ParRecravacao_TipoLata_Id
¶¶F _
==
¶¶` b
model
¶¶c h
.
¶¶h i
Id
¶¶i k
)
¶¶k l
.
¶¶l m
OrderBy
¶¶m t
(
¶¶t u
r
¶¶u v
=>
¶¶w y
r
¶¶z {
.
¶¶{ |

PontoIndex¶¶| Ü
)¶¶Ü á
.¶¶á à
ToList¶¶à é
(¶¶é è
)¶¶è ê
;¶¶ê ë
return
ßß 
model
ßß 
;
ßß 
}
®® 	
private
™™ 
byte
™™ 
[
™™ 
]
™™ 
ImageToByteArray
™™ '
(
™™' (
System
™™( .
.
™™. /
Drawing
™™/ 6
.
™™6 7
Image
™™7 <
imageIn
™™= D
)
™™D E
{
´´ 	
MemoryStream
¨¨ 
ms
¨¨ 
=
¨¨ 
new
¨¨ !
MemoryStream
¨¨" .
(
¨¨. /
)
¨¨/ 0
;
¨¨0 1
imageIn
≠≠ 
.
≠≠ 
Save
≠≠ 
(
≠≠ 
ms
≠≠ 
,
≠≠ 
System
≠≠ #
.
≠≠# $
Drawing
≠≠$ +
.
≠≠+ ,
Imaging
≠≠, 3
.
≠≠3 4
ImageFormat
≠≠4 ?
.
≠≠? @
Gif
≠≠@ C
)
≠≠C D
;
≠≠D E
return
ÆÆ 
ms
ÆÆ 
.
ÆÆ 
ToArray
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ  
}
ØØ 	
private
±± 
Image
±± 
ByteArrayToImage
±± &
(
±±& '
byte
±±' +
[
±±+ ,
]
±±, -
byteArrayIn
±±. 9
)
±±9 :
{
≤≤ 	
MemoryStream
≥≥ 
ms
≥≥ 
=
≥≥ 
new
≥≥ !
MemoryStream
≥≥" .
(
≥≥. /
byteArrayIn
≥≥/ :
)
≥≥: ;
;
≥≥; <
Image
¥¥ 
returnImage
¥¥ 
=
¥¥ 
Image
¥¥  %
.
¥¥% &

FromStream
¥¥& 0
(
¥¥0 1
ms
¥¥1 3
)
¥¥3 4
;
¥¥4 5
return
µµ 
returnImage
µµ 
;
µµ 
}
∂∂ 	
}
∏∏ 
public
∫∫ 

class
∫∫ '
ParRecravacao_TipoLataDTO
∫∫ *
:
∫∫+ ,$
ParRecravacao_TipoLata
∫∫- C
{
ªª 
public
ºº 
List
ºº 
<
ºº 
ParLataImagens
ºº "
>
ºº" # 
ParLataImagensList
ºº$ 6
{
ºº7 8
get
ºº9 <
;
ºº< =
set
ºº> A
;
ººA B
}
ººC D
public
ΩΩ 
List
ΩΩ 
<
ΩΩ 
Image
ΩΩ 
>
ΩΩ 
	ImageList
ΩΩ $
{
ΩΩ% &
get
ΩΩ' *
;
ΩΩ* +
set
ΩΩ, /
;
ΩΩ/ 0
}
ΩΩ1 2
}
ææ 
}¿¿ ¬9
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Relatorios\ParGoalScorecardController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
RelatoriosBrasil  0
{		 
[

 
CustomAuthorize

 
]

 
public 

class &
ParGoalScorecardController +
:, -

Controller. 8
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
db 
. 
ParGoalScorecard +
.+ ,
ToList, 2
(2 3
)3 4
)4 5
;5 6
} 	
public 
ActionResult 
Details #
(# $
int$ '
?' (
id) +
)+ ,
{ 	
if 
( 
id 
== 
null 
) 
{ 
return 
new  
HttpStatusCodeResult /
(/ 0
HttpStatusCode0 >
.> ?

BadRequest? I
)I J
;J K
} 
ParGoalScorecard 
parGoalScorecard -
=. /
db0 2
.2 3
ParGoalScorecard3 C
.C D
FindD H
(H I
idI K
)K L
;L M
if 
( 
parGoalScorecard  
==! #
null$ (
)( )
{ 
return 
HttpNotFound #
(# $
)$ %
;% &
}   
return!! 
View!! 
(!! 
parGoalScorecard!! (
)!!( )
;!!) *
}"" 	
public%% 
ActionResult%% 
Create%% "
(%%" #
int%%# &
?%%& '
id%%( *
)%%* +
{&& 	
if'' 
('' 
id'' 
>'' 
$num'' 
)'' 
{(( 
ParGoalScorecard))  
parGoalScorecard))! 1
=))2 3
db))4 6
.))6 7
ParGoalScorecard))7 G
.))G H
Find))H L
())L M
id))M O
)))O P
;))P Q
if** 
(** 
parGoalScorecard** $
==**% '
null**( ,
)**, -
{++ 
return,, 
HttpNotFound,, '
(,,' (
),,( )
;,,) *
}-- 
return.. 
View.. 
(.. 
parGoalScorecard.. ,
).., -
;..- .
}// 
return11 
View11 
(11 
new11 
ParGoalScorecard11 ,
(11, -
)11- .
)11. /
;11/ 0
}22 	
[77 	
HttpPost77	 
]77 
[88 	$
ValidateAntiForgeryToken88	 !
]88! "
public99 
ActionResult99 
Create99 "
(99" #
[99# $
Bind99$ (
(99( )
Include99) 0
=991 2
$str993 |
)99| }
]99} ~
ParGoalScorecard	99 è
parGoalScorecard
99ê †
)
99† °
{:: 	
if;; 
(;; 

ModelState;; 
.;; 
IsValid;; "
);;" #
{<< 
if== 
(== 
parGoalScorecard== $
.==$ %
Id==% '
>==( )
$num==* +
)==+ ,
{>> 
db?? 
.?? 
Entry?? 
(?? 
parGoalScorecard?? -
)??- .
.??. /
State??/ 4
=??5 6
EntityState??7 B
.??B C
Modified??C K
;??K L
db@@ 
.@@ 
SaveChanges@@ "
(@@" #
)@@# $
;@@$ %
returnAA 
RedirectToActionAA +
(AA+ ,
$strAA, 3
)AA3 4
;AA4 5
}BB 
elseCC 
{DD 
dbEE 
.EE 
ParGoalScorecardEE '
.EE' (
AddEE( +
(EE+ ,
parGoalScorecardEE, <
)EE< =
;EE= >
dbFF 
.FF 
SaveChangesFF "
(FF" #
)FF# $
;FF$ %
returnGG 
RedirectToActionGG +
(GG+ ,
$strGG, 3
)GG3 4
;GG4 5
}HH 
}II 
returnKK 
ViewKK 
(KK 
parGoalScorecardKK (
)KK( )
;KK) *
}LL 	
publicPP 
ActionResultPP 
DeletePP "
(PP" #
intPP# &
?PP& '
idPP( *
)PP* +
{QQ 	
ifRR 
(RR 
idRR 
==RR 
nullRR 
)RR 
{SS 
returnTT 
newTT  
HttpStatusCodeResultTT /
(TT/ 0
HttpStatusCodeTT0 >
.TT> ?

BadRequestTT? I
)TTI J
;TTJ K
}UU 
ParGoalScorecardVV 
parGoalScorecardVV -
=VV. /
dbVV0 2
.VV2 3
ParGoalScorecardVV3 C
.VVC D
FindVVD H
(VVH I
idVVI K
)VVK L
;VVL M
ifWW 
(WW 
parGoalScorecardWW  
==WW! #
nullWW$ (
)WW( )
{XX 
returnYY 
HttpNotFoundYY #
(YY# $
)YY$ %
;YY% &
}ZZ 
return[[ 
View[[ 
([[ 
parGoalScorecard[[ (
)[[( )
;[[) *
}\\ 	
[__ 	
HttpPost__	 
,__ 

ActionName__ 
(__ 
$str__ &
)__& '
]__' (
[`` 	$
ValidateAntiForgeryToken``	 !
]``! "
publicaa 
ActionResultaa 
DeleteConfirmedaa +
(aa+ ,
intaa, /
idaa0 2
)aa2 3
{bb 	
ParGoalScorecardcc 
parGoalScorecardcc -
=cc. /
dbcc0 2
.cc2 3
ParGoalScorecardcc3 C
.ccC D
FindccD H
(ccH I
idccI K
)ccK L
;ccL M
dbdd 
.dd 
ParGoalScorecarddd 
.dd  
Removedd  &
(dd& '
parGoalScorecarddd' 7
)dd7 8
;dd8 9
dbee 
.ee 
SaveChangesee 
(ee 
)ee 
;ee 
returnff 
RedirectToActionff #
(ff# $
$strff$ +
)ff+ ,
;ff, -
}gg 	
	protectedii 
overrideii 
voidii 
Disposeii  '
(ii' (
boolii( ,
	disposingii- 6
)ii6 7
{jj 	
ifkk 
(kk 
	disposingkk 
)kk 
{ll 
dbmm 
.mm 
Disposemm 
(mm 
)mm 
;mm 
}nn 
baseoo 
.oo 
Disposeoo 
(oo 
	disposingoo "
)oo" #
;oo# $
}pp 	
}qq 
}rr ¥ø
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Relatorios\RelatoriosSgqController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
[ 
OutputCache 
( 
Duration 
= 
$num 
, 
VaryByParam  +
=, -
$str. 4
)4 5
]5 6
public 

class #
RelatoriosSgqController (
:) *
BaseController+ 9
{ 
private ,
 FormularioParaRelatorioViewModel 0
form1 5
;5 6
public #
RelatoriosSgqController &
(& '"
IRelatorioColetaDomain' =!
relatorioColetaDomain> S
)S T
{ 	
form 
= 
new ,
 FormularioParaRelatorioViewModel 7
(7 8
)8 9
;9 :
}!! 	
[%% 	
FormularioPesquisa%%	 
(%% #
filtraUnidadePorUsuario%% 3
=%%4 5
true%%6 :
)%%: ;
]%%; <
public&& 
ActionResult&& 
	Scorecard&& %
(&&% &
)&&& '
{'' 	!
GetMetaAtualScorecard)) !
())! "
)))" #
;))# $
return** 
View** 
(** 
form** 
)** 
;** 
}++ 	
private-- 
void-- !
GetMetaAtualScorecard-- *
(--* +
)--+ ,
{.. 	
using// 
(// 
var// 
db// 
=// 
new// 
SgqDbDevEntities//  0
(//0 1
)//1 2
)//2 3
{00 
var11 
atual11 
=11 
db11 
.11 
ParGoalScorecard11 /
.11/ 0
OrderByDescending110 A
(11A B
r11B C
=>11D F
r11G H
.11H I
Id11I K
)11K L
.11L M
FirstOrDefault11M [
(11[ \
)11\ ]
;11] ^
if22 
(22 
atual22 
!=22 
null22 !
)22! "
{33 
ViewBag44 
.44 
PercentValueMid44 +
=44, -
atual44. 3
.443 4
PercentValueMid444 C
;44C D
ViewBag55 
.55 
PercentValueHigh55 ,
=55- .
atual55/ 4
.554 5
PercentValueHigh555 E
;55E F
}66 
else77 
{88 
ViewBag99 
.99 
PercentValueMid99 +
=99, -
$str99. 2
;992 3
ViewBag:: 
.:: 
PercentValueHigh:: ,
=::- .
$str::/ 3
;::3 4
};; 
}<< 
}== 	
public?? 
ActionResult?? 
ScorecardConfig?? +
(??+ ,
)??, -
{@@ 	!
GetMetaAtualScorecardAA !
(AA! "
)AA" #
;AA# $
returnBB 
ViewBB 
(BB 
newBB 
ParGoalScorecardBB ,
(BB, -
)BB- .
)BB. /
;BB/ 0
}CC 	
[EE 	
HttpPostEE	 
]EE 
publicFF 
ActionResultFF 
ScorecardConfigFF +
(FF+ ,
ParGoalScorecardFF, <
parGoalScorecardFF= M
)FFM N
{GG 	
usingHH 
(HH 
varHH 
dbHH 
=HH 
newHH 
SgqDbDevEntitiesHH  0
(HH0 1
)HH1 2
)HH2 3
{II 
parGoalScorecardJJ  
.JJ  !
InitDateJJ! )
=JJ* +
DateTimeJJ, 4
.JJ4 5
NowJJ5 8
;JJ8 9
dbKK 
.KK 
ParGoalScorecardKK #
.KK# $
AddKK$ '
(KK' (
parGoalScorecardKK( 8
)KK8 9
;KK9 :
dbLL 
.LL 
SaveChangesLL 
(LL 
)LL  
;LL  !
varNN 
atualNN 
=NN 
dbNN 
.NN 
ParGoalScorecardNN /
.NN/ 0
OrderByDescendingNN0 A
(NNA B
rNNB C
=>NND F
rNNG H
.NNH I
IdNNI K
)NNK L
.NNL M
FirstOrDefaultNNM [
(NN[ \
)NN\ ]
;NN] ^
ifOO 
(OO 
atualOO 
!=OO 
nullOO !
)OO! "
{PP 
ViewBagQQ 
.QQ 
PercentValueMidQQ +
=QQ, -
atualQQ. 3
.QQ3 4
PercentValueMidQQ4 C
;QQC D
ViewBagRR 
.RR 
PercentValueHighRR ,
=RR- .
atualRR/ 4
.RR4 5
PercentValueHighRR5 E
;RRE F
}SS 
elseTT 
{UU 
ViewBagVV 
.VV 
PercentValueMidVV +
=VV, -
$strVV. 2
;VV2 3
ViewBagWW 
.WW 
PercentValueHighWW ,
=WW- .
$strWW/ 3
;WW3 4
}XX 
}YY 
return[[ 
View[[ 
([[ 
parGoalScorecard[[ (
)[[( )
;[[) *
}\\ 	
[^^ 	
FormularioPesquisa^^	 
(^^ #
filtraUnidadePorUsuario^^ 3
=^^4 5
true^^6 :
)^^: ;
]^^; <
public__ 
ActionResult__ 
RelatorioDiario__ +
(__+ ,
)__, -
{`` 	
returnaa 
Viewaa 
(aa 
formaa 
)aa 
;aa 
}bb 	
[dd 	
FormularioPesquisadd	 
(dd #
filtraUnidadePorUsuariodd 3
=dd4 5
truedd6 :
,dd: ;
parLevel1e2dd< G
=ddH I
trueddJ N
)ddN O
]ddO P
publicee 
ActionResultee 
ApontamentosDiariosee /
(ee/ 0
)ee0 1
{ff 	

HttpCookiehh 
cookiehh 
=hh 
HttpContexthh  +
.hh+ ,
Requesthh, 3
.hh3 4
Cookieshh4 ;
.hh; <
Gethh< ?
(hh? @
$strhh@ R
)hhR S
;hhS T
varii 
dbii 
=ii 
newii 
SgqDbDevEntitiesii )
(ii) *
)ii* +
;ii+ ,
Listjj 
<jj 
stringjj 
>jj 
Retornojj  
=jj! "
newjj# &
Listjj' +
<jj+ ,
stringjj, 2
>jj2 3
(jj3 4
)jj4 5
;jj5 6
intll 
_userIdll 
=ll 
$numll 
;ll 
ifmm 
(mm 
!mm 
stringmm 
.mm 
IsNullOrEmptymm %
(mm% &
cookiemm& ,
.mm, -
Valuesmm- 3
[mm3 4
$strmm4 ;
]mm; <
)mm< =
)mm= >
{nn 
_userIdoo 
=oo 
Convertoo !
.oo! "
ToInt32oo" )
(oo) *
cookieoo* 0
.oo0 1
Valuesoo1 7
[oo7 8
$stroo8 @
]oo@ A
.ooA B
ToStringooB J
(ooJ K
)ooK L
)ooL M
;ooM N
}pp 
varrr 
rolesrr 
=rr 
dbrr 
.rr 
ParCompanyXUserSgqrr -
.rr- .
Whererr. 3
(rr3 4
rrr4 5
=>rr6 8
rrr9 :
.rr: ;

UserSgq_Idrr; E
==rrF H
_userIdrrI P
)rrP Q
.rrQ R
ToListrrR X
(rrX Y
)rrY Z
;rrZ [
foreachtt 
(tt 
vartt 
rolett 
intt  
rolestt! &
)tt& '
{uu 
Retornovv 
.vv 
Addvv 
(vv 
rolevv  
.vv  !
Rolevv! %
)vv% &
;vv& '
}ww 
ViewBagyy 
.yy 
Rolesyy 
=yy 
Retornoyy #
;yy# $
return|| 
View|| 
(|| 
form|| 
)|| 
;|| 
}}} 	
[ 	
FormularioPesquisa	 
( #
filtraUnidadePorUsuario 3
=4 5
true6 :
): ;
]; <
public
ÄÄ 
ActionResult
ÄÄ 
NaoConformidade
ÄÄ +
(
ÄÄ+ ,
)
ÄÄ, -
{
ÅÅ 	
return
ÇÇ 
View
ÇÇ 
(
ÇÇ 
form
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
[
ÖÖ 	 
FormularioPesquisa
ÖÖ	 
(
ÖÖ %
filtraUnidadePorUsuario
ÖÖ 3
=
ÖÖ4 5
true
ÖÖ6 :
)
ÖÖ: ;
]
ÖÖ; <
public
ÜÜ 
ActionResult
ÜÜ 
ExemploRelatorio
ÜÜ ,
(
ÜÜ, -
)
ÜÜ- .
{
áá 	
return
àà 
View
àà 
(
àà 
form
àà 
)
àà 
;
àà 
}
ââ 	
[
ãã 	 
FormularioPesquisa
ãã	 
(
ãã %
filtraUnidadePorUsuario
ãã 3
=
ãã4 5
true
ãã6 :
)
ãã: ;
]
ãã; <
public
åå 
ActionResult
åå 
VisaoGeralDaArea
åå ,
(
åå, -
)
åå- .
{
çç 	
return
éé 
View
éé 
(
éé 
form
éé 
)
éé 
;
éé 
}
èè 	
[
ëë 	 
FormularioPesquisa
ëë	 
(
ëë %
filtraUnidadePorUsuario
ëë 3
=
ëë4 5
true
ëë6 :
)
ëë: ;
]
ëë; <
public
íí 
ActionResult
íí )
NaoConformidadePorCabecalho
íí 7
(
íí7 8
)
íí8 9
{
ìì 	
return
îî 
View
îî 
(
îî 
form
îî 
)
îî 
;
îî 
}
ïï 	
[
óó 	 
FormularioPesquisa
óó	 
(
óó $
filtraUnidadeDoUsuario
óó 2
=
óó3 4
true
óó5 9
,
óó9 :
parLevel1e2
óó; F
=
óóG H
true
óóI M
)
óóM N
]
óóN O
public
òò 
ActionResult
òò 
	CartasCep
òò %
(
òò% &
)
òò& '
{
ôô 	
return
öö 
View
öö 
(
öö 
form
öö 
)
öö 
;
öö 
}
õõ 	
[
ùù 	 
FormularioPesquisa
ùù	 
(
ùù %
filtraUnidadePorUsuario
ùù 3
=
ùù4 5
true
ùù6 :
)
ùù: ;
]
ùù; <
public
ûû 
ActionResult
ûû 
RelatorioGenerico
ûû -
(
ûû- .
)
ûû. /
{
üü 	
return
†† 
View
†† 
(
†† 
form
†† 
)
†† 
;
†† 
}
°° 	
[
££ 	 
FormularioPesquisa
££	 
(
££ %
filtraUnidadePorUsuario
££ 3
=
££4 5
true
££6 :
)
££: ;
]
££; <
public
§§ 
ActionResult
§§ $
VerificacaoTipificacao
§§ 2
(
§§2 3
)
§§3 4
{
•• 	
return
¶¶ 
View
¶¶ 
(
¶¶ 
form
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 	
[
´´ 	 
FormularioPesquisa
´´	 
(
´´ %
filtraUnidadePorUsuario
´´ 3
=
´´4 5
true
´´6 :
)
´´: ;
]
´´; <
public
¨¨ 
ActionResult
¨¨ 
GetTable
¨¨ $
(
¨¨$ %#
DataCarrierFormulario
¨¨% :
form
¨¨; ?
)
¨¨? @
{
≠≠ 	&
TabelaDinamicaResultados
ÆÆ $
tabela
ÆÆ% +
;
ÆÆ+ ,
if
ØØ 
(
ØØ 
form
ØØ 
.
ØØ 
Query
ØØ 
.
ØØ 
Equals
ØØ !
(
ØØ! "
$str
ØØ" +
)
ØØ+ ,
)
ØØ, -
{
∞∞ 
tabela
±± 
=
±± 
GetTbl1
±±  
(
±±  !
form
±±! %
)
±±% &
;
±±& '
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥ 
form
≥≥ 
.
≥≥ 
Query
≥≥ 
.
≥≥  
Equals
≥≥  &
(
≥≥& '
$str
≥≥' 0
)
≥≥0 1
)
≥≥1 2
{
¥¥ 
tabela
µµ 
=
µµ 
GetTbl2
µµ  
(
µµ  !
form
µµ! %
)
µµ% &
;
µµ& '
}
∂∂ 
else
∑∑ 
if
∑∑ 
(
∑∑ 
form
∑∑ 
.
∑∑ 
Query
∑∑ 
.
∑∑  
Equals
∑∑  &
(
∑∑& '
$str
∑∑' 9
)
∑∑9 :
)
∑∑: ;
{
∏∏ 
tabela
ππ 
=
ππ 
GetTbl1SemGrupos
ππ )
(
ππ) *
form
ππ* .
)
ππ. /
;
ππ/ 0
}
∫∫ 
else
ªª 
if
ªª 
(
ªª 
form
ªª 
.
ªª 
Query
ªª 
.
ªª  
Equals
ªª  &
(
ªª& '
$str
ªª' 9
)
ªª9 :
)
ªª: ;
{
ºº 
tabela
ΩΩ 
=
ΩΩ 
GetTbl2SemGrupos
ΩΩ )
(
ΩΩ) *
form
ΩΩ* .
)
ΩΩ. /
;
ΩΩ/ 0
}
ææ 
else
øø 
{
¿¿ 
tabela
¡¡ 
=
¡¡ (
MockTabelaVisaoGeralDaArea
¡¡ 3
(
¡¡3 4
)
¡¡4 5
;
¡¡5 6
}
¬¬ 
tabela
ƒƒ 
.
ƒƒ 
CallBackTableBody
ƒƒ $
=
ƒƒ% &
form
ƒƒ' +
.
ƒƒ+ ,
CallBackTableBody
ƒƒ, =
;
ƒƒ= >
tabela
≈≈ 
.
≈≈ 
Title
≈≈ 
=
≈≈ 
form
≈≈ 
.
≈≈  
Title
≈≈  %
;
≈≈% &
return
∆∆ 
View
∆∆ 
(
∆∆ 
tabela
∆∆ 
)
∆∆ 
;
∆∆  
}
«« 	
public
…… &
TabelaDinamicaResultados
…… '
GetTbl1
……( /
(
……/ 0#
DataCarrierFormulario
……0 E
form
……F J
)
……J K
{
   	
var
““ 
query
““ 
=
““ 
$str
““ 
+
““ 
$str	÷÷ Ã
+÷÷Õ Œ
$str	◊◊ °
+◊◊¢ £
$str	ÿÿ ã
+ÿÿå ç
$strŸŸ {
+
ŸŸ| }
$str	⁄⁄ ã
+⁄⁄å ç
$str	€€ à
+€€â ä
$str	‹‹ í
+‹‹ì î
$str	›› â
+››ä ã
$str	ﬁﬁ ì
+ﬁﬁî ï
$str	ﬂﬂ ç
+ﬂﬂé è
$str	‡‡ ï
+‡‡ñ ó
$str	·· ç
+··é è
$str	‚‚ ó
+‚‚ò ô
$str	„„ â
+„„ä ã
$str	‰‰ í
+‰‰ì î
$str	ÂÂ â
+ÂÂä ã
$str	ÊÊ ì
+ÊÊî ï
$str	ÁÁ å
+ÁÁç é
$str	ËË å
+ËËç é
$str	ÈÈ è
+ÈÈê ë
$str	ÍÍ ñ
+ÍÍó ò
$str	ÎÎ ç
+ÎÎé è
$str	ÏÏ ç
+ÏÏé è
$str	ÌÌ ñ
+ÌÌó ò
$str	ÓÓ ë
+ÓÓí ì
$strÔÔ #
+
ÔÔ$ %
$str  
+
! "
$strÒÒ |
+
ÒÒ} ~
$strÚÚ {
+
ÚÚ| }
$strÛÛ {
+
ÛÛ| }
$strÙÙ {
+
ÙÙ| }
$str	ıı â
+ııä ã
$strˆˆ {
+
ˆˆ| }
$str	˜˜ ã
+˜˜å ç
$str¯¯ }
+
¯¯~ 
$str˘˘ z
+
˘˘{ |
$str˙˙ ~
+˙˙ Ä
$str˚˚ (
+
˚˚) *
form
˚˚+ /
.
˚˚/ 0
_dataInicioSQL
˚˚0 >
+
˚˚? @
$str˚˚A “
+˚˚” ‘
$str¸¸ (
+
¸¸) *
form
¸¸+ /
.
¸¸/ 0
_dataFimSQL
¸¸0 ;
+
¸¸< =
$str¸¸> œ
+¸¸– —
$str
ÅÅ 1
+
ÅÅ2 3
$str
ÉÉ '
+
ÉÉ( )
$str
ÑÑ )
+
ÑÑ* +
$str
ÖÖ "
+
ÖÖ# $
$str
ÜÜ %
+
ÜÜ& '
$str
áá 
+
áá 
$str
ää /
+
ää0 1
$str
ëë  
+
ëë! "
$str
ìì )
+
ìì* +
$str
îî 8
+
îî9 :
$strïï É
+ïïÑ Ö
$str
ññ @
+
ññA B
$str
öö ;
+
öö< =
$str
õõ ;
+
õõ< =
$str
úú 4
+
úú5 6
$str
ûû ;
+
ûû< =
$str
üü -
+
üü. /
$str
†† U
+
††V W
$str
°° 3
+
°°4 5
$str
¢¢ /
+
¢¢0 1
$str
££ <
+
££= >
$str
§§ 4
+
§§5 6
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str	µµ ø
+µµ¿ ¡
$str	∂∂ ø
+∂∂¿ ¡
$str	∑∑ Ã
+∑∑Õ Œ
$str	∏∏ Ã
+∏∏Õ Œ
$str	ππ Ã
+ππÕ Œ
$str	∫∫ Ã
+∫∫Õ Œ
$str	ªª Ã
+ªªÕ Œ
$str	ºº Ã
+ººÕ Œ
$str	ΩΩ Ã
+ΩΩÕ Œ
$str	ææ Ã
+ææÕ Œ
$str	øø Ã
+øøÕ Œ
$str	¿¿ Ã
+¿¿Õ Œ
$str	¡¡ Ã
+¡¡Õ Œ
$str	¬¬ Ã
+¬¬Õ Œ
$str	√√ Ã
+√√Õ Œ
$str	ƒƒ Ω
+ƒƒæ ø
$str	≈≈ ¿
+≈≈¡ ¬
$str	∆∆ Ã
+∆∆Õ Œ
$str	«« Ã
+««Õ Œ
$str	»» Ã
+»»Õ Œ
$str	…… Ã
+……Õ Œ
$str	   Ã
+  Õ Œ
$str	ÀÀ Ã
+ÀÀÕ Œ
$str	ÃÃ Ã
+ÃÃÕ Œ
$str	ÕÕ Ã
+ÕÕÕ Œ
$str	ŒŒ Ã
+ŒŒÕ Œ
$str	œœ Ã
+œœÕ Œ
$str	–– Ã
+––Õ Œ
$str	—— Ã
+——Õ Œ
$str	““ Ã
+““Õ Œ
$str	”” Ã
+””Õ Œ
$str	‘‘ Ã
+‘‘Õ Œ
$str	’’ Ã
+’’Õ Œ
$str	÷÷ Ã
+÷÷Õ Œ
$str	◊◊ Ã
+◊◊Õ Œ
$str	ÿÿ Ã
+ÿÿÕ Œ
$str	ŸŸ Ã
+ŸŸÕ Œ
$str	⁄⁄ Ã
+⁄⁄Õ Œ
$str	€€ Ã
+€€Õ Œ
$str	‹‹ Ã
+‹‹Õ Œ
$str	›› Ã
+››Õ Œ
$str	ﬁﬁ Ã
+ﬁﬁÕ Œ
$str	ﬂﬂ Ã
+ﬂﬂÕ Œ
$str	‡‡ Ã
+‡‡Õ Œ
$str	·· Ã
+··Õ Œ
$str	‚‚ Ã
+‚‚Õ Œ
$str	„„ Ã
+„„Õ Œ
$str	‰‰ Ã
+‰‰Õ Œ
$str	ÂÂ Ã
+ÂÂÕ Œ
$str	ÊÊ Ã
+ÊÊÕ Œ
$str	ÁÁ Ã
+ÁÁÕ Œ
$str	ËË Ã
+ËËÕ Œ
$str	ÈÈ Ã
+ÈÈÕ Œ
$str	ÍÍ Ã
+ÍÍÕ Œ
$str	ÎÎ Ã
+ÎÎÕ Œ
$str	ÏÏ Ã
+ÏÏÕ Œ
$str	ÌÌ Ã
+ÌÌÕ Œ
$str	ÓÓ Ã
+ÓÓÕ Œ
$str	ÔÔ Ã
+ÔÔÕ Œ
$str	 Ã
+Õ Œ
$str	ÒÒ Ã
+ÒÒÕ Œ
$str	ÚÚ Ã
+ÚÚÕ Œ
$str	ÛÛ Ã
+ÛÛÕ Œ
$str	ÙÙ ø
+ÙÙ¿ ¡
$str	ıı ø
+ıı¿ ¡
$str	ˆˆ Ã
+ˆˆÕ Œ
$str	˜˜ …
+˜˜  À
$str	¯¯ ⁄
+¯¯€ ‹
$str	˘˘ Ã
+˘˘Õ Œ
$str	˙˙ ø
+˙˙¿ ¡
$str	˚˚ ÿ
+˚˚Ÿ ⁄
$str	¸¸ Ã
+¸¸Õ Œ
$str	˝˝ Ã
+˝˝Õ Œ
$str	˛˛ …
+˛˛  À
$str	ˇˇ …
+ˇˇ  À
$str	ÄÄ Ã
+ÄÄÕ Œ
$str	ÅÅ ø
+ÅÅ¿ ¡
$str	ÇÇ Ã
+ÇÇÕ Œ
$str	ÉÉ Ã
+ÉÉÕ Œ
$str	ÑÑ …
+ÑÑ  À
$str	ÖÖ …
+ÖÖ  À
$str	ÜÜ …
+ÜÜ  À
$str	áá …
+áá  À
$str	àà Ã
+ààÕ Œ
$strââ 
+
ââ 
$strää ◊
+ääÿ Ÿ
$str	ãã Ã
+ããÕ Œ
$str	åå …
+åå  À
$str	çç …
+çç  À
$str	éé Ã
+ééÕ Œ
$str	èè ≥
+èè¥ µ
$str	êê ø
+êê¿ ¡
$str	ëë Ã
+ëëÕ Œ
$str	íí ∂
+íí∑ ∏
$str	ìì ∫
+ììª º
$str	îî ∫
+îîª º
$str	ïï ∫
+ïïª º
$str	ññ Ã
+ññÕ Œ
$str	óó ≥
+óó¥ µ
$str	òò ∫
+òòª º
$str	ôô ∫
+ôôª º
$str	öö ∫
+ööª º
$str	õõ ∫
+õõª º
$str	úú ∫
+úúª º
$str	ùù º
+ùùΩ æ
$str	ûû ∫
+ûûª º
$str	üü Ω
+üüæ ø
$str	†† ∑
+††∏ π
$str	°° ∫
+°°ª º
$str	¢¢ π
+¢¢∫ ª
$str££ |
+
££} ~
$str§§ ?
+
§§@ A
$str	•• „
+••‰ Â
$str	¶¶ „
+¶¶‰ Â
$str	ßß „
+ßß‰ Â
$str	®® „
+®®‰ Â
$str	©© „
+©©‰ Â
$str	™™ ‚
+™™„ ‰
$str	´´ „
+´´‰ Â
$str	¨¨ „
+¨¨‰ Â
$str	≠≠ „
+≠≠‰ Â
$str	ÆÆ „
+ÆÆ‰ Â
$str	ØØ „
+ØØ‰ Â
$str	∞∞ „
+∞∞‰ Â
$str	±± „
+±±‰ Â
$str	≤≤ ê
+≤≤ë í
$str	≥≥ „
+≥≥‰ Â
$str	¥¥ ã
+¥¥å ç
$str	µµ ã
+µµå ç
$str	∂∂ „
+∂∂‰ Â
$str	∏∏ ç
+∏∏é è
$str	ππ Ñ	
+ππÖ	 Ü	
$str	∫∫ ¬
+∫∫√ ƒ
$strºº 
+
ºº 
$str	ΩΩ å
+ΩΩç é
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ ó
+ÕÕò ô
$strŒŒ î
+ŒŒï ñ
$strœœ õ
+œœú ù
$str–– µ
+––∂ ∑
$str—— ú
+——ù û
$str““ ˙
+““˚ ¸
$str”” Ê
+””Á Ë
$str‘‘ ﬂ
+‘‘‡ ·
$str’’ ù
+’’û ü
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› Ú
+››Û Ù
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ ˛
+‰‰ˇ Ä
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË ©
+ËË™ ´
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ ˛
+ˆˆˇ Ä
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ ©
+˙˙™ ´
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ í
+ÑÑì î
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã ˛
+ããˇ Ä
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè ©
+èè™ ´
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù ˛
+ùùˇ Ä
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° ©
+°°™ ´
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• ï
+••ñ ó
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ ˛
+ØØˇ Ä
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ ©
+≥≥™ ´
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ ì
+ÕÕî ï
$strŒŒ î
+ŒŒï ñ
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$str··  
+··À Ã
$str‚‚ À
+‚‚Ã Õ
$str
„„ D
+
„„E F
$str‰‰ À
+‰‰Ã Õ
$strÂÂ ‚
+ÂÂ„ ‰
$strÊÊ À
+ÊÊÃ Õ
$strÁÁ À
+ÁÁÃ Õ
$strËË À
+ËËÃ Õ
$strÈÈ À
+ÈÈÃ Õ
$strÍÍ £
+ÍÍ§ •
$strÎÎ À
+ÎÎÃ Õ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ
 …
+ˆˆ  À
$str˜˜ À
+˜˜Ã Õ
$str
¯¯ D
+
¯¯E F
$str˘˘ À
+˘˘Ã Õ
$str˙˙ ‚
+˙˙„ ‰
$str˚˚ À
+˚˚Ã Õ
$str¸¸ À
+¸¸Ã Õ
$str˝˝ À
+˝˝Ã Õ
$str˛˛ À
+˛˛Ã Õ
$strˇˇ £
+ˇˇ§ •
$strÄÄ À
+ÄÄÃ Õ
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$str
àà @
+
ààA B
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$str
ññ @
+
ññA B
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† ì
+††î ï
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©©  
+©©À Ã
$str™™ À
+™™Ã Õ
$str
´´ D
+
´´E F
$str¨¨ À
+¨¨Ã Õ
$str≠≠ ‚
+≠≠„ ‰
$strÆÆ À
+ÆÆÃ Õ
$strØØ À
+ØØÃ Õ
$str∞∞ À
+∞∞Ã Õ
$str±± À
+±±Ã Õ
$str≤≤ £
+≤≤§ •
$str≥≥ À
+≥≥Ã Õ
$strµµ ê
+µµë í
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø  
+øøÀ Ã
$str¿¿ À
+¿¿Ã Õ
$str
¡¡ D
+
¡¡E F
$str¬¬ À
+¬¬Ã Õ
$str√√ ‚
+√√„ ‰
$strƒƒ À
+ƒƒÃ Õ
$str≈≈ À
+≈≈Ã Õ
$str∆∆ À
+∆∆Ã Õ
$str«« À
+««Ã Õ
$str»» £
+»»§ •
$str…… À
+……Ã Õ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$str
œœ D
+
œœE F
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ ú
+’’ù û
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str
‹‹ D
+
‹‹E F
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ ú
+‚‚ù û
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ ì
+ÊÊî ï
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ  
+ÏÏÀ Ã
$strÌÌ À
+ÌÌÃ Õ
$str
ÓÓ D
+
ÓÓE F
$strÔÔ À
+ÔÔÃ Õ
$str ‚
+„ ‰
$strÒÒ À
+ÒÒÃ Õ
$strÚÚ À
+ÚÚÃ Õ
$strÛÛ À
+ÛÛÃ Õ
$strÙÙ À
+ÙÙÃ Õ
$strıı £
+ıı§ •
$strˆˆ À
+ˆˆÃ Õ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ û
+ÅÅü †
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ û
+ÑÑü †
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ û
+ââü †
$strää û
+ääü †
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç û
+ççü †
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê û
+êêü †
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì û
+ììü †
$strîî í
+îîì î
$strïï ±
+ïï≤ ≥
$strññ û
+ññü †
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô û
+ôôü †
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú û
+úúü †
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü û
+üüü †
$str†† î
+††ï ñ
$str°° ß
+°°® ©
$str¢¢ û
+¢¢ü †
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• û
+••ü †
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® û
+®®ü †
$str©© î
+©©ï ñ
$str™™ ®
+™™© ™
$str´´ û
+´´ü †
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$str	ÆÆ î
+ÆÆï ñ
$str	ØØ î
+ØØï ñ
$str	∞∞ î
+∞∞ï ñ
$str	±± î
+±±ï ñ
$str	≤≤ î
+≤≤ï ñ
$str	≥≥ œ
+≥≥– —
$str	¥¥ î
+¥¥ï ñ
$str	µµ î
+µµï ñ
$str	∂∂ î
+∂∂ï ñ
$str	∑∑ î
+∑∑ï ñ
$str	∏∏ î
+∏∏ï ñ
$str	ππ î
+ππï ñ
$str	∫∫ î
+∫∫ï ñ
$str	ªª î
+ªªï ñ
$str	ºº î
+ººï ñ
$str	ΩΩ î
+ΩΩï ñ
$str	ææ î
+ææï ñ
$str	øø î
+øøï ñ
$str	¿¿ î
+¿¿ï ñ
$str	¡¡ î
+¡¡ï ñ
$str	¬¬ î
+¬¬ï ñ
$str	√√ î
+√√ï ñ
$str	ƒƒ î
+ƒƒï ñ
$str	≈≈ î
+≈≈ï ñ
$str	∆∆ î
+∆∆ï ñ
$str	«« î
+««ï ñ
$str	»» î
+»»ï ñ
$str	…… î
+……ï ñ
$str	   î
+  ï ñ
$str	ÀÀ î
+ÀÀï ñ
$str	ÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ à
+ŒŒâ ä
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ ∆
+‡‡« »
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$str	ÊÊ ø
+ÊÊ¿ ¡
$strÁÁ 
+
ÁÁ 
$strËË 
+
ËË  
$strÈÈ 
+
ÈÈ  
$strÍÍ 
+
ÍÍ  
$strÎÎ 
+
ÎÎ  
$strÏÏ 
+
ÏÏ  
$strÌÌ 
+
ÌÌ  
$strÓÓ 
+
ÓÓ  
$strÔÔ 
+
ÔÔ  
$str 
+
  
$strÒÒ 
+
ÒÒ  
$strÚÚ 
+
ÚÚ  
$strÛÛ 
+
ÛÛ  
$strÙÙ 
+
ÙÙ  
$strıı 
+
ıı  
$str	˜˜ ø
+˜˜¿ ¡
$str	¯¯ Ã
+¯¯Õ Œ
$str	˘˘ À
+˘˘Ã Õ
$str	˙˙ Ã
+˙˙Õ Œ
$str	˚˚ ü
+˚˚† °
$str¸¸ {
+
¸¸| }
$str	˝˝ à
+˝˝â ä
$str˛˛ {
+
˛˛| }
$str	ˇˇ Ã
+ˇˇÕ Œ
$strÄÄ {
+
ÄÄ| }
$strÅÅ 	
;
ÅÅ	 

var
áá 
tabela
áá 
=
áá 
new
áá &
TabelaDinamicaResultados
áá 5
(
áá5 6
)
áá6 7
;
áá7 8
var
ââ 
where
ââ 
=
ââ 
string
ââ 
.
ââ 
Empty
ââ $
;
ââ$ %
where
ää 
+=
ää 
$str
ää 
;
ää 
var
öö 
query0
öö 
=
öö 
$str
öö F
+
ööG H
$str
õõ +
+
õõ, -
$str
úú <
+
úú= >
$str
ùù 9
+
ùù: ;
$str
ûû 1
+
ûû2 3
$str
üü 5
+
üü6 7
$str
†† 1
+
††2 3
$str
°° !
+
°°" #
$str
££ C
+
££D E
$str
§§ 5
+
§§6 7
$str
•• :
+
••; <
$str
¶¶ >
+
¶¶? @
$str
®® ,
+
®®- .
$str
©© L
+
©©M N
$str
´´ &
+
´´' (
$str
¨¨ g
;
¨¨g h
var
∞∞ 
query1
∞∞ 
=
∞∞ 
$str
∞∞ i
+
∞∞j k
$str±± ¨
+±±≠ Æ
$str
≤≤ N
+
≤≤O P
getMetaScore
≤≤Q ]
(
≤≤] ^
)
≤≤^ _
.
≤≤_ `
ToString
≤≤` h
(
≤≤h i
)
≤≤i j
+
≤≤k l
$str≤≤m Å
+≤≤Ç É
$str≥≥ ä
+≥≥ã å
getMetaScore≥≥ç ô
(≥≥ô ö
)≥≥ö õ
.≥≥õ ú
ToString≥≥ú §
(≥≥§ •
)≥≥• ¶
+≥≥ß ®
$str≥≥© ∏
+≥≥π ∫
getMetaScore≥≥ª «
(≥≥« »
)≥≥» …
.≥≥…  
ToString≥≥  “
(≥≥“ ”
)≥≥” ‘
+≥≥’ ÷
$str≥≥◊ ¥
+≥≥µ ∂
$str¥¥ ä
+¥¥ã å
getMetaScore¥¥ç ô
(¥¥ô ö
)¥¥ö õ
.¥¥õ ú
ToString¥¥ú §
(¥¥§ •
)¥¥• ¶
+¥¥ß ®
$str¥¥© π
+¥¥∫ ª
getMetaScore¥¥º »
(¥¥» …
)¥¥…  
.¥¥  À
ToString¥¥À ”
(¥¥” ‘
)¥¥‘ ’
+¥¥÷ ◊
$str¥¥ÿ É
+¥¥Ñ Ö
getMetaScore¥¥Ü í
(¥¥í ì
)¥¥ì î
.¥¥î ï
ToString¥¥ï ù
(¥¥ù û
)¥¥û ü
+¥¥† °
$str¥¥¢ Ì
+¥¥Ó Ô
$str
µµ .
+
µµ/ 0
$str
∂∂ <
+
∂∂= >
$str
∑∑ 9
+
∑∑: ;
$str
∏∏ 1
+
∏∏2 3
$str
ππ 5
+
ππ6 7
$str
∫∫ 1
+
∫∫2 3
$str
ªª !
+
ªª" #
$str
ΩΩ C
+
ΩΩD E
$str
ææ 5
+
ææ6 7
$str
øø :
+
øø; <
$str
¿¿ >
+
¿¿? @
$str
¬¬ ,
+
¬¬- .
$str
√√ L
+
√√M N
$str
≈≈ &
+
≈≈' (
$str
∆∆ g
+
∆∆h i
$str
»» 2
+
»»3 4
$str
…… &
;
……& '
var
ÕÕ 
query2
ÕÕ 
=
ÕÕ 
$str
ŒŒ X
+
ŒŒY Z
$strœœ ¨
+œœ≠ Æ
$str
–– N
+
––O P
getMetaScore
––Q ]
(
––] ^
)
––^ _
.
––_ `
ToString
––` h
(
––h i
)
––i j
+
––k l
$str––m Å
+––Ç É
$str—— ä
+——ã å
getMetaScore——ç ô
(——ô ö
)——ö õ
.——õ ú
ToString——ú §
(——§ •
)——• ¶
+——ß ®
$str——© ∏
+——π ∫
getMetaScore——ª «
(——« »
)——» …
.——…  
ToString——  “
(——“ ”
)——” ‘
+——’ ÷
$str——◊ ¥
+——µ ∂
$str““ ä
+““ã å
getMetaScore““ç ô
(““ô ö
)““ö õ
.““õ ú
ToString““ú §
(““§ •
)““• ¶
+““ß ®
$str““© π
+““∫ ª
getMetaScore““º »
(““» …
)““…  
.““  À
ToString““À ”
(““” ‘
)““‘ ’
+““÷ ◊
$str““ÿ É
+““Ñ Ö
getMetaScore““Ü í
(““í ì
)““ì î
.““î ï
ToString““ï ù
(““ù û
)““û ü
+““† °
$str““¢ Ì
+““Ó Ô
$str
‘‘ -
+
‘‘. /
$str
’’ <
+
’’= >
$str
÷÷ 9
+
÷÷: ;
$str
◊◊ 1
+
◊◊2 3
$str
ÿÿ 5
+
ÿÿ6 7
$str
ŸŸ 1
+
ŸŸ2 3
$str
⁄⁄ !
+
⁄⁄" #
$str
‹‹ C
+
‹‹D E
$str
›› 5
+
››6 7
$str
ﬁﬁ :
+
ﬁﬁ; <
$str
ﬂﬂ >
+
ﬂﬂ? @
$str
·· ,
+
··- .
$str
‚‚ L
+
‚‚M N
$str
‰‰ &
+
‰‰' (
$str
ÂÂ f
+
ÂÂg h
$str
ÁÁ )
+
ÁÁ* +
$str
ËË #
;
ËË# $
var
ÎÎ 
query3
ÎÎ 
=
ÎÎ 
$str
ÏÏ X
+
ÏÏY Z
$strÌÌ ¨
+ÌÌ≠ Æ
$str
ÓÓ N
+
ÓÓO P
getMetaScore
ÓÓQ ]
(
ÓÓ] ^
)
ÓÓ^ _
.
ÓÓ_ `
ToString
ÓÓ` h
(
ÓÓh i
)
ÓÓi j
+
ÓÓk l
$strÓÓm Å
+ÓÓÇ É
$strÔÔ ä
+ÔÔã å
getMetaScoreÔÔç ô
(ÔÔô ö
)ÔÔö õ
.ÔÔõ ú
ToStringÔÔú §
(ÔÔ§ •
)ÔÔ• ¶
+ÔÔß ®
$strÔÔ© ∏
+ÔÔπ ∫
getMetaScoreÔÔª «
(ÔÔ« »
)ÔÔ» …
.ÔÔ…  
ToStringÔÔ  “
(ÔÔ“ ”
)ÔÔ” ‘
+ÔÔ’ ÷
$strÔÔ◊ ¥
+ÔÔµ ∂
$str ä
+ã å
getMetaScoreç ô
(ô ö
)ö õ
.õ ú
ToStringú §
(§ •
)• ¶
+ß ®
$str© π
+∫ ª
getMetaScoreº »
(» …
)…  
.  À
ToStringÀ ”
(” ‘
)‘ ’
+÷ ◊
$strÿ É
+Ñ Ö
getMetaScoreÜ í
(í ì
)ì î
.î ï
ToStringï ù
(ù û
)û ü
+† °
$str¢ Ì
+Ó Ô
$str
ÚÚ -
+
ÚÚ. /
$str
ÛÛ <
+
ÛÛ= >
$str
ÙÙ 9
+
ÙÙ: ;
$str
ıı 1
+
ıı2 3
$str
ˆˆ 5
+
ˆˆ6 7
$str
˜˜ 1
+
˜˜2 3
$str
¯¯ !
+
¯¯" #
$str
˙˙ C
+
˙˙D E
$str
˚˚ 5
+
˚˚6 7
$str
¸¸ :
+
¸¸; <
$str
˝˝ >
+
˝˝? @
$str
ˇˇ ,
+
ˇˇ- .
$str
ÄÄ L
+
ÄÄM N
$str
ÇÇ &
+
ÇÇ' (
$str
ÉÉ g
+
ÉÉh i
$str
ÖÖ )
+
ÖÖ* +
$str
ÜÜ #
;
ÜÜ# $
var
ââ 
query4
ââ 
=
ââ 
$str
ää Y
+
ääZ [
$strãã ¨
+ãã≠ Æ
$str
åå N
+
ååO P
getMetaScore
ååQ ]
(
åå] ^
)
åå^ _
.
åå_ `
ToString
åå` h
(
ååh i
)
ååi j
+
ååk l
$strååm Å
+ååÇ É
$strçç ä
+ççã å
getMetaScoreççç ô
(ççô ö
)ççö õ
.ççõ ú
ToStringççú §
(çç§ •
)çç• ¶
+ççß ®
$strçç© ∏
+ççπ ∫
getMetaScoreççª «
(çç« »
)çç» …
.çç…  
ToStringçç  “
(çç“ ”
)çç” ‘
+çç’ ÷
$strçç◊ ¥
+ççµ ∂
$stréé ä
+ééã å
getMetaScoreééç ô
(ééô ö
)ééö õ
.ééõ ú
ToStringééú §
(éé§ •
)éé• ¶
+ééß ®
$stréé© π
+éé∫ ª
getMetaScoreééº »
(éé» …
)éé…  
.éé  À
ToStringééÀ ”
(éé” ‘
)éé‘ ’
+éé÷ ◊
$strééÿ É
+ééÑ Ö
getMetaScoreééÜ í
(ééí ì
)ééì î
.ééî ï
ToStringééï ù
(ééù û
)ééû ü
+éé† °
$stréé¢ Ì
+ééÓ Ô
$str
êê -
+
êê. /
$str
ëë <
+
ëë= >
$str
íí 9
+
íí: ;
$str
ìì 1
+
ìì2 3
$str
îî 5
+
îî6 7
$str
ïï 1
+
ïï2 3
$str
ññ !
+
ññ" #
$str
òò C
+
òòD E
$str
ôô 5
+
ôô6 7
$str
öö :
+
öö; <
$str
õõ >
+
õõ? @
$str
ùù ,
+
ùù- .
$str
ûû L
+
ûûM N
$str
†† &
+
††' (
$str
°° g
+
°°h i
$str
££ 
;
££ 
var
ßß 
query6
ßß 
=
ßß 
$strßß ´
+ßß¨ ≠
$str
®® +
+
®®, -
$str
©© <
+
©©= >
$str
™™ 9
+
™™: ;
$str
´´ 1
+
´´2 3
$str
¨¨ 5
+
¨¨6 7
$str
≠≠ 1
+
≠≠2 3
$str
ÆÆ !
+
ÆÆ" #
$str
∞∞ C
+
∞∞D E
$str
±± 5
+
±±6 7
$str
≤≤ :
+
≤≤; <
$str
≥≥ >
+
≥≥? @
$str
µµ ,
+
µµ- .
$str
∂∂ L
+
∂∂M N
$str
∏∏ &
+
∏∏' (
$str
ππ g
+
ππh i
$str
∫∫ *
;
∫∫* +
var
ºº 
orderby
ºº 
=
ºº 
$str
ºº /
;
ºº/ 0
var
ææ 
db
ææ 
=
ææ 
new
ææ 
SgqDbDevEntities
ææ )
(
ææ) *
)
ææ* +
;
ææ+ ,
string
¡¡ 
grandeQuery
¡¡ 
=
¡¡  
query
¡¡! &
+
¡¡' (
$str
¡¡) ,
+
¡¡- .
query1
¡¡/ 5
+
¡¡6 7
$str
¡¡8 I
+
¡¡J K
query2
¡¡L R
+
¡¡S T
$str
¡¡U f
+
¡¡g h
query3
¡¡i o
+
¡¡p q
$str¡¡r É
+¡¡Ñ Ö
query4¡¡Ü å
+¡¡ç é
$str¡¡è †
+¡¡° ¢
query6¡¡£ ©
+¡¡™ ´
orderby¡¡¨ ≥
;¡¡¥ µ
var
√√ 
result
√√ 
=
√√ 
db
√√ 
.
√√ 
Database
√√ $
.
√√$ %
SqlQuery
√√% -
<
√√- .
ResultQuery1
√√. :
>
√√: ;
(
√√; <
grandeQuery
√√< G
)
√√G H
.
√√H I
ToList
√√I O
(
√√O P
)
√√P Q
;
√√Q R
var
ÀÀ 
result1
ÀÀ 
=
ÀÀ 
result
ÀÀ  
.
ÀÀ  !
Where
ÀÀ! &
(
ÀÀ& '
r
ÀÀ' (
=>
ÀÀ) +
r
ÀÀ, -
.
ÀÀ- .
QUERY
ÀÀ. 3
==
ÀÀ4 6
$num
ÀÀ7 8
)
ÀÀ8 9
.
ÀÀ9 :
ToList
ÀÀ: @
(
ÀÀ@ A
)
ÀÀA B
;
ÀÀB C
var
ÃÃ 
result2
ÃÃ 
=
ÃÃ 
result
ÃÃ  
.
ÃÃ  !
Where
ÃÃ! &
(
ÃÃ& '
r
ÃÃ' (
=>
ÃÃ) +
r
ÃÃ, -
.
ÃÃ- .
QUERY
ÃÃ. 3
==
ÃÃ4 6
$num
ÃÃ7 8
)
ÃÃ8 9
.
ÃÃ9 :
ToList
ÃÃ: @
(
ÃÃ@ A
)
ÃÃA B
;
ÃÃB C
var
ÕÕ 
result3
ÕÕ 
=
ÕÕ 
result
ÕÕ  
.
ÕÕ  !
Where
ÕÕ! &
(
ÕÕ& '
r
ÕÕ' (
=>
ÕÕ) +
r
ÕÕ, -
.
ÕÕ- .
QUERY
ÕÕ. 3
==
ÕÕ4 6
$num
ÕÕ7 8
)
ÕÕ8 9
.
ÕÕ9 :
ToList
ÕÕ: @
(
ÕÕ@ A
)
ÕÕA B
;
ÕÕB C
var
ŒŒ 
result4
ŒŒ 
=
ŒŒ 
result
ŒŒ  
.
ŒŒ  !
Where
ŒŒ! &
(
ŒŒ& '
r
ŒŒ' (
=>
ŒŒ) +
r
ŒŒ, -
.
ŒŒ- .
QUERY
ŒŒ. 3
==
ŒŒ4 6
$num
ŒŒ7 8
)
ŒŒ8 9
.
ŒŒ9 :
ToList
ŒŒ: @
(
ŒŒ@ A
)
ŒŒA B
;
ŒŒB C
var
œœ 
queryRowsBody
œœ 
=
œœ 
result
œœ  &
.
œœ& '
Where
œœ' ,
(
œœ, -
r
œœ- .
=>
œœ/ 1
r
œœ2 3
.
œœ3 4
QUERY
œœ4 9
==
œœ: <
$num
œœ= >
)
œœ> ?
.
œœ? @
ToList
œœ@ F
(
œœF G
)
œœG H
;
œœH I
tabela
◊◊ 
.
◊◊ 
trsCabecalho1
◊◊  
=
◊◊! "
new
◊◊# &
List
◊◊' +
<
◊◊+ ,
Ths
◊◊, /
>
◊◊/ 0
(
◊◊0 1
)
◊◊1 2
;
◊◊2 3
tabela
ÿÿ 
.
ÿÿ 
trsCabecalho1
ÿÿ  
.
ÿÿ  !
Add
ÿÿ! $
(
ÿÿ$ %
new
ÿÿ% (
Ths
ÿÿ) ,
(
ÿÿ, -
)
ÿÿ- .
{
ÿÿ/ 0
name
ÿÿ1 5
=
ÿÿ6 7
$str
ÿÿ8 :
}
ÿÿ; <
)
ÿÿ< =
;
ÿÿ= >
tabela
ŸŸ 
.
ŸŸ 
trsCabecalho1
ŸŸ  
.
ŸŸ  !
Add
ŸŸ! $
(
ŸŸ$ %
new
ŸŸ% (
Ths
ŸŸ) ,
(
ŸŸ, -
)
ŸŸ- .
{
ŸŸ/ 0
name
ŸŸ1 5
=
ŸŸ6 7
$str
ŸŸ8 :
}
ŸŸ; <
)
ŸŸ< =
;
ŸŸ= >
tabela
ËË 
.
ËË 
trsCabecalho2
ËË  
=
ËË! "
db
ËË# %
.
ËË% &
Database
ËË& .
.
ËË. /
SqlQuery
ËË/ 7
<
ËË7 8
Ths
ËË8 ;
>
ËË; <
(
ËË< =
query
ËË= B
+
ËËC D
$str
ËËE H
+
ËËI J
query0
ËËK Q
)
ËËQ R
.
ËËR S
OrderBy
ËËS Z
(
ËËZ [
r
ËË[ \
=>
ËË] _
r
ËË` a
.
ËËa b
name
ËËb f
)
ËËf g
.
ËËg h
ToList
ËËh n
(
ËËn o
)
ËËo p
;
ËËp q
var
ÍÍ 
thsMeio
ÍÍ 
=
ÍÍ 
new
ÍÍ 
List
ÍÍ "
<
ÍÍ" #
Ths
ÍÍ# &
>
ÍÍ& '
(
ÍÍ' (
)
ÍÍ( )
;
ÍÍ) *
thsMeio
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
new
ÎÎ 
Ths
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
{
ÎÎ" #
name
ÎÎ$ (
=
ÎÎ) *
$str
ÎÎ+ .
,
ÎÎ. /
coolspan
ÎÎ0 8
=
ÎÎ9 :
$num
ÎÎ; <
}
ÎÎ= >
)
ÎÎ> ?
;
ÎÎ? @
thsMeio
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
new
ÏÏ 
Ths
ÏÏ 
(
ÏÏ  
)
ÏÏ  !
{
ÏÏ" #
name
ÏÏ$ (
=
ÏÏ) *
$str
ÏÏ+ .
,
ÏÏ. /
coolspan
ÏÏ0 8
=
ÏÏ9 :
$num
ÏÏ; <
}
ÏÏ= >
)
ÏÏ> ?
;
ÏÏ? @
thsMeio
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
new
ÌÌ 
Ths
ÌÌ 
(
ÌÌ  
)
ÌÌ  !
{
ÌÌ" #
name
ÌÌ$ (
=
ÌÌ) *
$str
ÌÌ+ .
,
ÌÌ. /
coolspan
ÌÌ0 8
=
ÌÌ9 :
$num
ÌÌ; <
}
ÌÌ= >
)
ÌÌ> ?
;
ÌÌ? @
thsMeio
ÓÓ 
.
ÓÓ 
Add
ÓÓ 
(
ÓÓ 
new
ÓÓ 
Ths
ÓÓ 
(
ÓÓ  
)
ÓÓ  !
{
ÓÓ" #
name
ÓÓ$ (
=
ÓÓ) *
$str
ÓÓ+ .
,
ÓÓ. /
coolspan
ÓÓ0 8
=
ÓÓ9 :
$num
ÓÓ; <
}
ÓÓ= >
)
ÓÓ> ?
;
ÓÓ? @
foreach
 
(
 
var
 
i
 
in
 
tabela
 $
.
$ %
trsCabecalho2
% 2
)
2 3
i
ÒÒ 
.
ÒÒ 
tds
ÒÒ 
=
ÒÒ 
thsMeio
ÒÒ 
;
ÒÒ  
tabela
ÛÛ 
.
ÛÛ 
trsCabecalho3
ÛÛ  
=
ÛÛ! "
new
ÛÛ# &
List
ÛÛ' +
<
ÛÛ+ ,
Ths
ÛÛ, /
>
ÛÛ/ 0
(
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
tabela
ÙÙ 
.
ÙÙ 
trsCabecalho3
ÙÙ  
.
ÙÙ  !
Add
ÙÙ! $
(
ÙÙ$ %
new
ÙÙ% (
Ths
ÙÙ) ,
(
ÙÙ, -
)
ÙÙ- .
{
ÙÙ/ 0
name
ÙÙ1 5
=
ÙÙ6 7
$str
ÙÙ8 ?
,
ÙÙ? @
coolspan
ÙÙA I
=
ÙÙJ K
$num
ÙÙL M
,
ÙÙM N
tds
ÙÙO R
=
ÙÙS T
thsMeio
ÙÙU \
}
ÙÙ] ^
)
ÙÙ^ _
;
ÙÙ_ `
tabela
˚˚ 
.
˚˚ 
trsMeio
˚˚ 
=
˚˚ 
new
˚˚  
List
˚˚! %
<
˚˚% &
Trs
˚˚& )
>
˚˚) *
(
˚˚* +
)
˚˚+ ,
;
˚˚, -
foreach
∂	∂	 
(
∂	∂	 
var
∂	∂	 
i
∂	∂	 
in
∂	∂	 
queryRowsBody
∂	∂	 +
)
∂	∂	+ ,
{
∑	∑	 
var
π	π	 
filtro
π	π	 
=
π	π	 
result1
π	π	 $
.
π	π	$ %
Where
π	π	% *
(
π	π	* +
r
π	π	+ ,
=>
π	π	- /
r
π	π	0 1
.
π	π	1 2
CLASSIFIC_NEGOCIO
π	π	2 C
.
π	π	C D
Equals
π	π	D J
(
π	π	J K
i
π	π	K L
.
π	π	L M
CLASSIFIC_NEGOCIO
π	π	M ^
)
π	π	^ _
)
π	π	_ `
.
π	π	` a
ToList
π	π	a g
(
π	π	g h
)
π	π	h i
;
π	π	i j
var
∫	∫	 
Tr
∫	∫	 
=
∫	∫	 
new
∫	∫	 
Trs
∫	∫	  
(
∫	∫	  !
)
∫	∫	! "
{
ª	ª	 
name
º	º	 
=
º	º	 
i
º	º	 
.
º	º	 
CLASSIFIC_NEGOCIO
º	º	 .
,
º	º	. /
tdsEsquerda
Ω	Ω	 
=
Ω	Ω	  !
new
Ω	Ω	" %
List
Ω	Ω	& *
<
Ω	Ω	* +
Tds
Ω	Ω	+ .
>
Ω	Ω	. /
(
Ω	Ω	/ 0
)
Ω	Ω	0 1
,
Ω	Ω	1 2

tdsDireita
æ	æ	 
=
æ	æ	  
new
æ	æ	! $
List
æ	æ	% )
<
æ	æ	) *
Tds
æ	æ	* -
>
æ	æ	- .
(
æ	æ	. /
)
æ	æ	/ 0
}
ø	ø	 
;
ø	ø	 
filtro
«	«	 
=
«	«	 
filtro
«	«	 
.
«	«	  
OrderBy
«	«	  '
(
«	«	' (
r
«	«	( )
=>
«	«	* ,
r
«	«	- .
.
«	«	. /
MACROPROCESSO
«	«	/ <
)
«	«	< =
.
«	«	= >
ToList
«	«	> D
(
«	«	D E
)
«	«	E F
;
«	«	F G
foreach
»	»	 
(
»	»	 
var
»	»	 
ii
»	»	 
in
»	»	  "
filtro
»	»	# )
)
»	»	) *
{
…	…	 
Tr
 	 	 
.
 	 	 
tdsEsquerda
 	 	 "
.
 	 	" #
Add
 	 	# &
(
 	 	& '
new
 	 	' *
Tds
 	 	+ .
(
 	 	. /
)
 	 	/ 0
{
 	 	1 2
valor
 	 	3 8
=
 	 	9 :
ii
 	 	; =
.
 	 	= >
REAL
 	 	> B
.
 	 	B C
ToString
 	 	C K
(
 	 	K L
)
 	 	L M
}
 	 	N O
)
 	 	O P
;
 	 	P Q
Tr
À	À	 
.
À	À	 
tdsEsquerda
À	À	 "
.
À	À	" #
Add
À	À	# &
(
À	À	& '
new
À	À	' *
Tds
À	À	+ .
(
À	À	. /
)
À	À	/ 0
{
À	À	1 2
valor
À	À	3 8
=
À	À	9 :
ii
À	À	; =
.
À	À	= >
ORCADO
À	À	> D
.
À	À	D E
ToString
À	À	E M
(
À	À	M N
)
À	À	N O
}
À	À	P Q
)
À	À	Q R
;
À	À	R S
Tr
Ã	Ã	 
.
Ã	Ã	 
tdsEsquerda
Ã	Ã	 "
.
Ã	Ã	" #
Add
Ã	Ã	# &
(
Ã	Ã	& '
new
Ã	Ã	' *
Tds
Ã	Ã	+ .
(
Ã	Ã	. /
)
Ã	Ã	/ 0
{
Ã	Ã	1 2
valor
Ã	Ã	3 8
=
Ã	Ã	9 :
ii
Ã	Ã	; =
.
Ã	Ã	= >
DESVIO
Ã	Ã	> D
.
Ã	Ã	D E
ToString
Ã	Ã	E M
(
Ã	Ã	M N
)
Ã	Ã	N O
}
Ã	Ã	P Q
)
Ã	Ã	Q R
;
Ã	Ã	R S
Tr
Õ	Õ	 
.
Õ	Õ	 
tdsEsquerda
Õ	Õ	 "
.
Õ	Õ	" #
Add
Õ	Õ	# &
(
Õ	Õ	& '
new
Õ	Õ	' *
Tds
Õ	Õ	+ .
(
Õ	Õ	. /
)
Õ	Õ	/ 0
{
Õ	Õ	1 2
valor
Õ	Õ	3 8
=
Õ	Õ	9 :
ii
Õ	Õ	; =
.
Õ	Õ	= >
DESVIOPERCENTUAL
Õ	Õ	> N
.
Õ	Õ	N O
ToString
Õ	Õ	O W
(
Õ	Õ	W X
)
Õ	Õ	X Y
}
Õ	Õ	Z [
)
Õ	Õ	[ \
;
Õ	Õ	\ ]
}
Œ	Œ	 
filtro
‘	‘	 
=
‘	‘	 
result2
‘	‘	  
.
‘	‘	  !
Where
‘	‘	! &
(
‘	‘	& '
r
‘	‘	' (
=>
‘	‘	) +
r
‘	‘	, -
.
‘	‘	- .
CLASSIFIC_NEGOCIO
‘	‘	. ?
.
‘	‘	? @
Equals
‘	‘	@ F
(
‘	‘	F G
i
‘	‘	G H
.
‘	‘	H I
CLASSIFIC_NEGOCIO
‘	‘	I Z
)
‘	‘	Z [
)
‘	‘	[ \
.
‘	‘	\ ]
ToList
‘	‘	] c
(
‘	‘	c d
)
‘	‘	d e
;
‘	‘	e f
foreach
’	’	 
(
’	’	 
var
’	’	 
ii
’	’	 
in
’	’	  "
filtro
’	’	# )
)
’	’	) *
{
÷	÷	 
Tr
◊	◊	 
.
◊	◊	 

tdsDireita
◊	◊	 !
.
◊	◊	! "
Add
◊	◊	" %
(
◊	◊	% &
new
◊	◊	& )
Tds
◊	◊	* -
(
◊	◊	- .
)
◊	◊	. /
{
◊	◊	0 1
valor
◊	◊	2 7
=
◊	◊	8 9
ii
◊	◊	: <
.
◊	◊	< =
REAL
◊	◊	= A
.
◊	◊	A B
ToString
◊	◊	B J
(
◊	◊	J K
)
◊	◊	K L
}
◊	◊	M N
)
◊	◊	N O
;
◊	◊	O P
Tr
ÿ	ÿ	 
.
ÿ	ÿ	 

tdsDireita
ÿ	ÿ	 !
.
ÿ	ÿ	! "
Add
ÿ	ÿ	" %
(
ÿ	ÿ	% &
new
ÿ	ÿ	& )
Tds
ÿ	ÿ	* -
(
ÿ	ÿ	- .
)
ÿ	ÿ	. /
{
ÿ	ÿ	0 1
valor
ÿ	ÿ	2 7
=
ÿ	ÿ	8 9
ii
ÿ	ÿ	: <
.
ÿ	ÿ	< =
ORCADO
ÿ	ÿ	= C
.
ÿ	ÿ	C D
ToString
ÿ	ÿ	D L
(
ÿ	ÿ	L M
)
ÿ	ÿ	M N
}
ÿ	ÿ	O P
)
ÿ	ÿ	P Q
;
ÿ	ÿ	Q R
Tr
Ÿ	Ÿ	 
.
Ÿ	Ÿ	 

tdsDireita
Ÿ	Ÿ	 !
.
Ÿ	Ÿ	! "
Add
Ÿ	Ÿ	" %
(
Ÿ	Ÿ	% &
new
Ÿ	Ÿ	& )
Tds
Ÿ	Ÿ	* -
(
Ÿ	Ÿ	- .
)
Ÿ	Ÿ	. /
{
Ÿ	Ÿ	0 1
valor
Ÿ	Ÿ	2 7
=
Ÿ	Ÿ	8 9
ii
Ÿ	Ÿ	: <
.
Ÿ	Ÿ	< =
DESVIO
Ÿ	Ÿ	= C
.
Ÿ	Ÿ	C D
ToString
Ÿ	Ÿ	D L
(
Ÿ	Ÿ	L M
)
Ÿ	Ÿ	M N
}
Ÿ	Ÿ	O P
)
Ÿ	Ÿ	P Q
;
Ÿ	Ÿ	Q R
Tr
⁄	⁄	 
.
⁄	⁄	 

tdsDireita
⁄	⁄	 !
.
⁄	⁄	! "
Add
⁄	⁄	" %
(
⁄	⁄	% &
new
⁄	⁄	& )
Tds
⁄	⁄	* -
(
⁄	⁄	- .
)
⁄	⁄	. /
{
⁄	⁄	0 1
valor
⁄	⁄	2 7
=
⁄	⁄	8 9
ii
⁄	⁄	: <
.
⁄	⁄	< =
DESVIOPERCENTUAL
⁄	⁄	= M
.
⁄	⁄	M N
ToString
⁄	⁄	N V
(
⁄	⁄	V W
)
⁄	⁄	W X
}
⁄	⁄	Y Z
)
⁄	⁄	Z [
;
⁄	⁄	[ \
}
€	€	 
tabela
ﬂ	ﬂ	 
.
ﬂ	ﬂ	 
trsMeio
ﬂ	ﬂ	 
.
ﬂ	ﬂ	 
Add
ﬂ	ﬂ	 "
(
ﬂ	ﬂ	" #
Tr
ﬂ	ﬂ	# %
)
ﬂ	ﬂ	% &
;
ﬂ	ﬂ	& '
}
‡	‡	 
var
Ê	Ê	 
queryRowsFooter
Ê	Ê	 
=
Ê	Ê	  !
new
Ê	Ê	" %
List
Ê	Ê	& *
<
Ê	Ê	* +
string
Ê	Ê	+ 1
>
Ê	Ê	1 2
(
Ê	Ê	2 3
)
Ê	Ê	3 4
;
Ê	Ê	4 5
queryRowsFooter
Á	Á	 
.
Á	Á	 
Add
Á	Á	 
(
Á	Á	  
$str
Á	Á	  '
)
Á	Á	' (
;
Á	Á	( )
tabela
Ë	Ë	 
.
Ë	Ë	 
footer
Ë	Ë	 
=
Ë	Ë	 
new
Ë	Ë	 
List
Ë	Ë	  $
<
Ë	Ë	$ %
Trs
Ë	Ë	% (
>
Ë	Ë	( )
(
Ë	Ë	) *
)
Ë	Ë	* +
;
Ë	Ë	+ ,
foreach
È	È	 
(
È	È	 
var
È	È	 
i
È	È	 
in
È	È	 
queryRowsFooter
È	È	 -
)
È	È	- .
{
Í	Í	 
var
Ï	Ï	 
Tr
Ï	Ï	 
=
Ï	Ï	 
new
Ï	Ï	 
Trs
Ï	Ï	  
(
Ï	Ï	  !
)
Ï	Ï	! "
{
Ì	Ì	 
name
Ó	Ó	 
=
Ó	Ó	 
i
Ó	Ó	 
,
Ó	Ó	 
tdsEsquerda
Ô	Ô	 
=
Ô	Ô	  !
new
Ô	Ô	" %
List
Ô	Ô	& *
<
Ô	Ô	* +
Tds
Ô	Ô	+ .
>
Ô	Ô	. /
(
Ô	Ô	/ 0
)
Ô	Ô	0 1
,
Ô	Ô	1 2

tdsDireita
		 
=
		  
new
		! $
List
		% )
<
		) *
Tds
		* -
>
		- .
(
		. /
)
		/ 0
}
Ò	Ò	 
;
Ò	Ò	 
foreach
ı	ı	 
(
ı	ı	 
var
ı	ı	 
ii
ı	ı	 
in
ı	ı	  "
result3
ı	ı	# *
)
ı	ı	* +
{
ˆ	ˆ	 
Tr
˜	˜	 
.
˜	˜	 
tdsEsquerda
˜	˜	 "
.
˜	˜	" #
Add
˜	˜	# &
(
˜	˜	& '
new
˜	˜	' *
Tds
˜	˜	+ .
(
˜	˜	. /
)
˜	˜	/ 0
{
˜	˜	1 2
valor
˜	˜	3 8
=
˜	˜	9 :
ii
˜	˜	; =
.
˜	˜	= >
REAL
˜	˜	> B
.
˜	˜	B C
ToString
˜	˜	C K
(
˜	˜	K L
)
˜	˜	L M
}
˜	˜	N O
)
˜	˜	O P
;
˜	˜	P Q
Tr
¯	¯	 
.
¯	¯	 
tdsEsquerda
¯	¯	 "
.
¯	¯	" #
Add
¯	¯	# &
(
¯	¯	& '
new
¯	¯	' *
Tds
¯	¯	+ .
(
¯	¯	. /
)
¯	¯	/ 0
{
¯	¯	1 2
valor
¯	¯	3 8
=
¯	¯	9 :
ii
¯	¯	; =
.
¯	¯	= >
ORCADO
¯	¯	> D
.
¯	¯	D E
ToString
¯	¯	E M
(
¯	¯	M N
)
¯	¯	N O
}
¯	¯	P Q
)
¯	¯	Q R
;
¯	¯	R S
Tr
˘	˘	 
.
˘	˘	 
tdsEsquerda
˘	˘	 "
.
˘	˘	" #
Add
˘	˘	# &
(
˘	˘	& '
new
˘	˘	' *
Tds
˘	˘	+ .
(
˘	˘	. /
)
˘	˘	/ 0
{
˘	˘	1 2
valor
˘	˘	3 8
=
˘	˘	9 :
ii
˘	˘	; =
.
˘	˘	= >
DESVIO
˘	˘	> D
.
˘	˘	D E
ToString
˘	˘	E M
(
˘	˘	M N
)
˘	˘	N O
}
˘	˘	P Q
)
˘	˘	Q R
;
˘	˘	R S
Tr
˙	˙	 
.
˙	˙	 
tdsEsquerda
˙	˙	 "
.
˙	˙	" #
Add
˙	˙	# &
(
˙	˙	& '
new
˙	˙	' *
Tds
˙	˙	+ .
(
˙	˙	. /
)
˙	˙	/ 0
{
˙	˙	1 2
valor
˙	˙	3 8
=
˙	˙	9 :
ii
˙	˙	; =
.
˙	˙	= >
DESVIOPERCENTUAL
˙	˙	> N
.
˙	˙	N O
ToString
˙	˙	O W
(
˙	˙	W X
)
˙	˙	X Y
}
˙	˙	Z [
)
˙	˙	[ \
;
˙	˙	\ ]
}
˚	˚	 
foreach
Å
Å
 
(
Å
Å
 
var
Å
Å
 
ii
Å
Å
 
in
Å
Å
  "
result4
Å
Å
# *
)
Å
Å
* +
{
Ç
Ç
 
Tr
É
É
 
.
É
É
 

tdsDireita
É
É
 !
.
É
É
! "
Add
É
É
" %
(
É
É
% &
new
É
É
& )
Tds
É
É
* -
(
É
É
- .
)
É
É
. /
{
É
É
0 1
valor
É
É
2 7
=
É
É
8 9
ii
É
É
: <
.
É
É
< =
REAL
É
É
= A
.
É
É
A B
ToString
É
É
B J
(
É
É
J K
)
É
É
K L
}
É
É
M N
)
É
É
N O
;
É
É
O P
Tr
Ñ
Ñ
 
.
Ñ
Ñ
 

tdsDireita
Ñ
Ñ
 !
.
Ñ
Ñ
! "
Add
Ñ
Ñ
" %
(
Ñ
Ñ
% &
new
Ñ
Ñ
& )
Tds
Ñ
Ñ
* -
(
Ñ
Ñ
- .
)
Ñ
Ñ
. /
{
Ñ
Ñ
0 1
valor
Ñ
Ñ
2 7
=
Ñ
Ñ
8 9
ii
Ñ
Ñ
: <
.
Ñ
Ñ
< =
ORCADO
Ñ
Ñ
= C
.
Ñ
Ñ
C D
ToString
Ñ
Ñ
D L
(
Ñ
Ñ
L M
)
Ñ
Ñ
M N
}
Ñ
Ñ
O P
)
Ñ
Ñ
P Q
;
Ñ
Ñ
Q R
Tr
Ö
Ö
 
.
Ö
Ö
 

tdsDireita
Ö
Ö
 !
.
Ö
Ö
! "
Add
Ö
Ö
" %
(
Ö
Ö
% &
new
Ö
Ö
& )
Tds
Ö
Ö
* -
(
Ö
Ö
- .
)
Ö
Ö
. /
{
Ö
Ö
0 1
valor
Ö
Ö
2 7
=
Ö
Ö
8 9
ii
Ö
Ö
: <
.
Ö
Ö
< =
DESVIO
Ö
Ö
= C
.
Ö
Ö
C D
ToString
Ö
Ö
D L
(
Ö
Ö
L M
)
Ö
Ö
M N
}
Ö
Ö
O P
)
Ö
Ö
P Q
;
Ö
Ö
Q R
Tr
Ü
Ü
 
.
Ü
Ü
 

tdsDireita
Ü
Ü
 !
.
Ü
Ü
! "
Add
Ü
Ü
" %
(
Ü
Ü
% &
new
Ü
Ü
& )
Tds
Ü
Ü
* -
(
Ü
Ü
- .
)
Ü
Ü
. /
{
Ü
Ü
0 1
valor
Ü
Ü
2 7
=
Ü
Ü
8 9
ii
Ü
Ü
: <
.
Ü
Ü
< =
DESVIOPERCENTUAL
Ü
Ü
= M
.
Ü
Ü
M N
ToString
Ü
Ü
N V
(
Ü
Ü
V W
)
Ü
Ü
W X
}
Ü
Ü
Y Z
)
Ü
Ü
Z [
;
Ü
Ü
[ \
}
á
á
 
tabela
ã
ã
 
.
ã
ã
 
footer
ã
ã
 
.
ã
ã
 
Add
ã
ã
 !
(
ã
ã
! "
Tr
ã
ã
" $
)
ã
ã
$ %
;
ã
ã
% &
}
å
å
 
return
ê
ê
 
tabela
ê
ê
 
;
ê
ê
 
}
ë
ë
 	
public
ì
ì
 &
TabelaDinamicaResultados
ì
ì
 '
GetTbl2
ì
ì
( /
(
ì
ì
/ 0#
DataCarrierFormulario
ì
ì
0 E
form
ì
ì
F J
)
ì
ì
J K
{
î
î
 	
var
ú
ú
 
query
ú
ú
 
=
ú
ú
 
$str
ú
ú
 
+
ú
ú
 
$str	†
†
 Ã
+†
†
Õ Œ
$str	°
°
 °
+°
°
¢ £
$str	¢
¢
 ã
+¢
¢
å ç
$str£
£
 {
+
£
£
| }
$str	§
§
 ã
+§
§
å ç
$str	•
•
 à
+•
•
â ä
$str	¶
¶
 í
+¶
¶
ì î
$str	ß
ß
 â
+ß
ß
ä ã
$str	®
®
 ì
+®
®
î ï
$str	©
©
 ç
+©
©
é è
$str	™
™
 ï
+™
™
ñ ó
$str	´
´
 ç
+´
´
é è
$str	¨
¨
 ó
+¨
¨
ò ô
$str	≠
≠
 â
+≠
≠
ä ã
$str	Æ
Æ
 í
+Æ
Æ
ì î
$str	Ø
Ø
 â
+Ø
Ø
ä ã
$str	∞
∞
 ì
+∞
∞
î ï
$str	±
±
 å
+±
±
ç é
$str	≤
≤
 å
+≤
≤
ç é
$str	≥
≥
 è
+≥
≥
ê ë
$str	¥
¥
 ñ
+¥
¥
ó ò
$str	µ
µ
 ç
+µ
µ
é è
$str	∂
∂
 ç
+∂
∂
é è
$str	∑
∑
 ñ
+∑
∑
ó ò
$str	∏
∏
 ë
+∏
∏
í ì
$strπ
π
 #
+
π
π
$ %
$str∫
∫
  
+
∫
∫
! "
$strª
ª
 |
+
ª
ª
} ~
$strº
º
 {
+
º
º
| }
$strΩ
Ω
 {
+
Ω
Ω
| }
$stræ
æ
 {
+
æ
æ
| }
$str	ø
ø
 â
+ø
ø
ä ã
$str¿
¿
 {
+
¿
¿
| }
$str	¡
¡
 ã
+¡
¡
å ç
$str¬
¬
 }
+
¬
¬
~ 
$str√
√
 z
+
√
√
{ |
$strƒ
ƒ
 ~
+ƒ
ƒ
 Ä
$str≈
≈
 (
+
≈
≈
) *
form
≈
≈
+ /
.
≈
≈
/ 0
_dataInicioSQL
≈
≈
0 >
+
≈
≈
? @
$str≈
≈
A “
+≈
≈
” ‘
$str∆
∆
 (
+
∆
∆
) *
form
∆
∆
+ /
.
∆
∆
/ 0
_dataFimSQL
∆
∆
0 ;
+
∆
∆
< =
$str∆
∆
> œ
+∆
∆
– —
$str
À
À
 1
+
À
À
2 3
$str
Õ
Õ
 '
+
Õ
Õ
( )
$str
Œ
Œ
 )
+
Œ
Œ
* +
$str
œ
œ
 "
+
œ
œ
# $
$str
–
–
 %
+
–
–
& '
$str
—
—
 
+
—
—
 
$str
‘
‘
 /
+
‘
‘
0 1
$str
€
€
  
+
€
€
! "
$str
›
›
 )
+
›
›
* +
$str
ﬁ
ﬁ
 8
+
ﬁ
ﬁ
9 :
$strﬂ
ﬂ
 É
+ﬂ
ﬂ
Ñ Ö
$str
‡
‡
 @
+
‡
‡
A B
$str
‰
‰
 ;
+
‰
‰
< =
$str
Â
Â
 ;
+
Â
Â
< =
$str
Ê
Ê
 4
+
Ê
Ê
5 6
$str
Ë
Ë
 ;
+
Ë
Ë
< =
$str
È
È
 -
+
È
È
. /
$str
Í
Í
 U
+
Í
Í
V W
$str
Î
Î
 3
+
Î
Î
4 5
$str
Ï
Ï
 /
+
Ï
Ï
0 1
$str
Ì
Ì
 <
+
Ì
Ì
= >
$str
Ó
Ó
 4
+
Ó
Ó
5 6
$strˆ
ˆ
 î
+ˆ
ˆ
ï ñ
$str˜
˜
 î
+˜
˜
ï ñ
$str¯
¯
 î
+¯
¯
ï ñ
$str˘
˘
 î
+˘
˘
ï ñ
$str˙
˙
 î
+˙
˙
ï ñ
$str˚
˚
 î
+˚
˚
ï ñ
$str¸
¸
 î
+¸
¸
ï ñ
$str˝
˝
 î
+˝
˝
ï ñ
$str	ˇ
ˇ
 ø
+ˇ
ˇ
¿ ¡
$str	ÄÄ ø
+ÄÄ¿ ¡
$str	ÅÅ Ã
+ÅÅÕ Œ
$str	ÇÇ Ã
+ÇÇÕ Œ
$str	ÉÉ Ã
+ÉÉÕ Œ
$str	ÑÑ Ã
+ÑÑÕ Œ
$str	ÖÖ Ã
+ÖÖÕ Œ
$str	ÜÜ Ã
+ÜÜÕ Œ
$str	áá Ã
+ááÕ Œ
$str	àà Ã
+ààÕ Œ
$str	ââ Ã
+ââÕ Œ
$str	ää Ã
+ääÕ Œ
$str	ãã Ã
+ããÕ Œ
$str	åå Ã
+ååÕ Œ
$str	çç Ã
+ççÕ Œ
$str	éé Ω
+ééæ ø
$str	èè ¿
+èè¡ ¬
$str	êê Ã
+êêÕ Œ
$str	ëë Ã
+ëëÕ Œ
$str	íí Ã
+ííÕ Œ
$str	ìì Ã
+ììÕ Œ
$str	îî Ã
+îîÕ Œ
$str	ïï Ã
+ïïÕ Œ
$str	ññ Ã
+ññÕ Œ
$str	óó Ã
+óóÕ Œ
$str	òò Ã
+òòÕ Œ
$str	ôô Ã
+ôôÕ Œ
$str	öö Ã
+ööÕ Œ
$str	õõ Ã
+õõÕ Œ
$str	úú Ã
+úúÕ Œ
$str	ùù Ã
+ùùÕ Œ
$str	ûû Ã
+ûûÕ Œ
$str	üü Ã
+üüÕ Œ
$str	†† Ã
+††Õ Œ
$str	°° Ã
+°°Õ Œ
$str	¢¢ Ã
+¢¢Õ Œ
$str	££ Ã
+££Õ Œ
$str	§§ Ã
+§§Õ Œ
$str	•• Ã
+••Õ Œ
$str	¶¶ Ã
+¶¶Õ Œ
$str	ßß Ã
+ßßÕ Œ
$str	®® Ã
+®®Õ Œ
$str	©© Ã
+©©Õ Œ
$str	™™ Ã
+™™Õ Œ
$str	´´ Ã
+´´Õ Œ
$str	¨¨ Ã
+¨¨Õ Œ
$str	≠≠ Ã
+≠≠Õ Œ
$str	ÆÆ Ã
+ÆÆÕ Œ
$str	ØØ Ã
+ØØÕ Œ
$str	∞∞ Ã
+∞∞Õ Œ
$str	±± Ã
+±±Õ Œ
$str	≤≤ Ã
+≤≤Õ Œ
$str	≥≥ Ã
+≥≥Õ Œ
$str	¥¥ Ã
+¥¥Õ Œ
$str	µµ Ã
+µµÕ Œ
$str	∂∂ Ã
+∂∂Õ Œ
$str	∑∑ Ã
+∑∑Õ Œ
$str	∏∏ Ã
+∏∏Õ Œ
$str	ππ Ã
+ππÕ Œ
$str	∫∫ Ã
+∫∫Õ Œ
$str	ªª Ã
+ªªÕ Œ
$str	ºº Ã
+ººÕ Œ
$str	ΩΩ Ã
+ΩΩÕ Œ
$str	ææ ø
+ææ¿ ¡
$str	øø ø
+øø¿ ¡
$str	¿¿ Ã
+¿¿Õ Œ
$str	¡¡ …
+¡¡  À
$str	¬¬ ⁄
+¬¬€ ‹
$str	√√ Ã
+√√Õ Œ
$str	ƒƒ ø
+ƒƒ¿ ¡
$str	≈≈ ÿ
+≈≈Ÿ ⁄
$str	∆∆ Ã
+∆∆Õ Œ
$str	«« Ã
+««Õ Œ
$str	»» …
+»»  À
$str	…… …
+……  À
$str	   Ã
+  Õ Œ
$str	ÀÀ ø
+ÀÀ¿ ¡
$str	ÃÃ Ã
+ÃÃÕ Œ
$str	ÕÕ Ã
+ÕÕÕ Œ
$str	ŒŒ …
+ŒŒ  À
$str	œœ …
+œœ  À
$str	–– …
+––  À
$str	—— …
+——  À
$str	““ Ã
+““Õ Œ
$str”” 
+
”” 
$str‘‘ ◊
+‘‘ÿ Ÿ
$str	’’ Ã
+’’Õ Œ
$str	÷÷ …
+÷÷  À
$str	◊◊ …
+◊◊  À
$str	ÿÿ Ã
+ÿÿÕ Œ
$str	ŸŸ ≥
+ŸŸ¥ µ
$str	⁄⁄ ø
+⁄⁄¿ ¡
$str	€€ Ã
+€€Õ Œ
$str	‹‹ ∂
+‹‹∑ ∏
$str	›› ∫
+››ª º
$str	ﬁﬁ ∫
+ﬁﬁª º
$str	ﬂﬂ ∫
+ﬂﬂª º
$str	‡‡ Ã
+‡‡Õ Œ
$str	·· ≥
+··¥ µ
$str	‚‚ ∫
+‚‚ª º
$str	„„ ∫
+„„ª º
$str	‰‰ ∫
+‰‰ª º
$str	ÂÂ ∫
+ÂÂª º
$str	ÊÊ ∫
+ÊÊª º
$str	ÁÁ º
+ÁÁΩ æ
$str	ËË ∫
+ËËª º
$str	ÈÈ Ω
+ÈÈæ ø
$str	ÍÍ ∑
+ÍÍ∏ π
$str	ÎÎ ∫
+ÎÎª º
$str	ÏÏ π
+ÏÏ∫ ª
$strÌÌ |
+
ÌÌ} ~
$strÓÓ ?
+
ÓÓ@ A
$str	ÔÔ „
+ÔÔ‰ Â
$str	 „
+‰ Â
$str	ÒÒ „
+ÒÒ‰ Â
$str	ÚÚ „
+ÚÚ‰ Â
$str	ÛÛ „
+ÛÛ‰ Â
$str	ÙÙ ‚
+ÙÙ„ ‰
$str	ıı „
+ıı‰ Â
$str	ˆˆ „
+ˆˆ‰ Â
$str	˜˜ „
+˜˜‰ Â
$str	¯¯ „
+¯¯‰ Â
$str	˘˘ „
+˘˘‰ Â
$str	˙˙ „
+˙˙‰ Â
$str	˚˚ „
+˚˚‰ Â
$str	¸¸ ê
+¸¸ë í
$str	˝˝ „
+˝˝‰ Â
$str	˛˛ ã
+˛˛å ç
$str	ˇˇ ã
+ˇˇå ç
$str	ÄÄ „
+ÄÄ‰ Â
$str	ÇÇ ç
+ÇÇé è
$str	ÉÉ Ñ	
+ÉÉÖ	 Ü	
$str	ÑÑ ¬
+ÑÑ√ ƒ
$strÜÜ 
+
ÜÜ 
$str	áá å
+ááç é
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó ó
+óóò ô
$stròò î
+òòï ñ
$strôô õ
+ôôú ù
$ströö µ
+öö∂ ∑
$strõõ ú
+õõù û
$strúú ˙
+úú˚ ¸
$strùù Â
+ùùÊ Á
$strûû ﬂ
+ûû‡ ·
$strüü ù
+üüû ü
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß Ú
+ßßÛ Ù
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ ˛
+ÆÆˇ Ä
$strØØ î
+ØØï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ ©
+≤≤™ ´
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ ˛
+¿¿ˇ Ä
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ ©
+ƒƒ™ ´
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ í
+ŒŒì î
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ ˛
+’’ˇ Ä
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ ©
+ŸŸ™ ´
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ ˛
+ÁÁˇ Ä
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ ©
+ÎÎ™ ´
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ ï
+ÔÔñ ó
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ ˛
+˘˘ˇ Ä
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ ©
+˝˝™ ´
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó ì
+óóî ï
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str´´  
+´´À Ã
$str¨¨ À
+¨¨Ã Õ
$str
≠≠ D
+
≠≠E F
$strÆÆ À
+ÆÆÃ Õ
$strØØ ‚
+ØØ„ ‰
$str∞∞ À
+∞∞Ã Õ
$str±± À
+±±Ã Õ
$str≤≤ À
+≤≤Ã Õ
$str≥≥ À
+≥≥Ã Õ
$str¥¥ £
+¥¥§ •
$strµµ À
+µµÃ Õ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿
 …
+¿¿  À
$str¡¡ À
+¡¡Ã Õ
$str
¬¬ D
+
¬¬E F
$str√√ À
+√√Ã Õ
$strƒƒ ‚
+ƒƒ„ ‰
$str≈≈ À
+≈≈Ã Õ
$str∆∆ À
+∆∆Ã Õ
$str«« À
+««Ã Õ
$str»» À
+»»Ã Õ
$str…… £
+……§ •
$str   À
+  Ã Õ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str
““ @
+
““A B
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str
‡‡ @
+
‡‡A B
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ ì
+ÍÍî ï
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ  
+ÛÛÀ Ã
$strÙÙ À
+ÙÙÃ Õ
$str
ıı D
+
ııE F
$strˆˆ À
+ˆˆÃ Õ
$str˜˜ ‚
+˜˜„ ‰
$str¯¯ À
+¯¯Ã Õ
$str˘˘ À
+˘˘Ã Õ
$str˙˙ À
+˙˙Ã Õ
$str˚˚ À
+˚˚Ã Õ
$str¸¸ £
+¸¸§ •
$str˝˝ À
+˝˝Ã Õ
$strˇˇ ê
+ˇˇë í
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ  
+ââÀ Ã
$strää À
+ääÃ Õ
$str
ãã D
+
ããE F
$stråå À
+ååÃ Õ
$strçç ‚
+çç„ ‰
$stréé À
+ééÃ Õ
$strèè À
+èèÃ Õ
$strêê À
+êêÃ Õ
$strëë À
+ëëÃ Õ
$stríí £
+íí§ •
$strìì À
+ììÃ Õ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$str
ôô D
+
ôôE F
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü ú
+üüù û
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str
¶¶ D
+
¶¶E F
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ ú
+¨¨ù û
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ ì
+∞∞î ï
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str∂∂  
+∂∂À Ã
$str∑∑ À
+∑∑Ã Õ
$str
∏∏ D
+
∏∏E F
$strππ À
+ππÃ Õ
$str∫∫ ‚
+∫∫„ ‰
$strªª À
+ªªÃ Õ
$strºº À
+ººÃ Õ
$strΩΩ À
+ΩΩÃ Õ
$strææ À
+ææÃ Õ
$strøø £
+øø§ •
$str¿¿ À
+¿¿Ã Õ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ û
+ÀÀü †
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ û
+ŒŒü †
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” û
+””ü †
$str‘‘ û
+‘‘ü †
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ û
+◊◊ü †
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ û
+⁄⁄ü †
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› û
+››ü †
$strﬁﬁ í
+ﬁﬁì î
$strﬂﬂ ±
+ﬂﬂ≤ ≥
$str‡‡ û
+‡‡ü †
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ û
+„„ü †
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ û
+ÊÊü †
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ û
+ÈÈü †
$strÍÍ î
+ÍÍï ñ
$strÎÎ ß
+ÎÎ® ©
$strÏÏ û
+ÏÏü †
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ û
+ÔÔü †
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ û
+ÚÚü †
$strÛÛ î
+ÛÛï ñ
$strÙÙ ®
+ÙÙ© ™
$strıı û
+ııü †
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str	¯¯ î
+¯¯ï ñ
$str	˘˘ î
+˘˘ï ñ
$str	˙˙ î
+˙˙ï ñ
$str	˚˚ î
+˚˚ï ñ
$str	¸¸ î
+¸¸ï ñ
$str	˝˝ œ
+˝˝– —
$str	˛˛ î
+˛˛ï ñ
$str	ˇˇ î
+ˇˇï ñ
$str	ÄÄ î
+ÄÄï ñ
$str	ÅÅ î
+ÅÅï ñ
$str	ÇÇ î
+ÇÇï ñ
$str	ÉÉ î
+ÉÉï ñ
$str	ÑÑ î
+ÑÑï ñ
$str	ÖÖ î
+ÖÖï ñ
$str	ÜÜ î
+ÜÜï ñ
$str	áá î
+ááï ñ
$str	àà î
+ààï ñ
$str	ââ î
+ââï ñ
$str	ää î
+ääï ñ
$str	ãã î
+ããï ñ
$str	åå î
+ååï ñ
$str	çç î
+ççï ñ
$str	éé î
+ééï ñ
$str	èè î
+èèï ñ
$str	êê î
+êêï ñ
$str	ëë î
+ëëï ñ
$str	íí î
+ííï ñ
$str	ìì î
+ììï ñ
$str	îî î
+îîï ñ
$str	ïï î
+ïïï ñ
$str	ññ î
+ññï ñ
$stróó î
+óóï ñ
$stròò à
+òòâ ä
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ ∆
+™™« »
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str	∞∞ ø
+∞∞¿ ¡
$str±± 
+
±± 
$str≤≤ 
+
≤≤  
$str≥≥ 
+
≥≥  
$str¥¥ 
+
¥¥  
$strµµ 
+
µµ  
$str∂∂ 
+
∂∂  
$str∑∑ 
+
∑∑  
$str∏∏ 
+
∏∏  
$strππ 
+
ππ  
$str∫∫ 
+
∫∫  
$strªª 
+
ªª  
$strºº 
+
ºº  
$strΩΩ 
+
ΩΩ  
$strææ 
+
ææ  
$strøø 
+
øø  
$str	¡¡ ø
+¡¡¿ ¡
$str	¬¬ Ã
+¬¬Õ Œ
$str	√√ À
+√√Ã Õ
$str	ƒƒ Ã
+ƒƒÕ Œ
$str	≈≈ ü
+≈≈† °
$str∆∆ {
+
∆∆| }
$str	«« à
+««â ä
$str»» {
+
»»| }
$str	…… Ã
+……Õ Œ
$str   {
+
  | }
$strÀÀ 	
;
ÀÀ	 

var
–– 
tabela
–– 
=
–– 
new
–– &
TabelaDinamicaResultados
–– 5
(
––5 6
)
––6 7
;
––7 8
var
““ 
where
““ 
=
““ 
string
““ 
.
““ 
Empty
““ $
;
““$ %
where
”” 
+=
”” 
$str
”” 
;
”” 
var
„„ 
query0
„„ 
=
„„ 
$str
„„ J
+
„„K L
$str
ÂÂ /
+
ÂÂ0 1
$str
ÊÊ <
+
ÊÊ= >
$str
ÁÁ 9
+
ÁÁ: ;
$str
ËË 1
+
ËË2 3
$str
ÈÈ 4
+
ÈÈ5 6
$str
ÍÍ 1
+
ÍÍ2 3
$str
ÎÎ !
+
ÎÎ" #
$str
ÌÌ C
+
ÌÌD E
$str
ÓÓ 5
+
ÓÓ6 7
$str
ÔÔ :
+
ÔÔ; <
$str
 >
+
? @
$str
ÚÚ ,
+
ÚÚ- .
$str
ÛÛ L
+
ÛÛM N
$str
ıı +
+
ıı, -
form
ıı. 2
.
ıı2 3
ParametroTableCol
ıı3 D
[
ııD E
$num
ııE F
]
ııF G
+
ııH I
$str
ııJ M
+
ııN O
$str
ˆˆ )
+
ˆˆ* +
form
ˆˆ, 0
.
ˆˆ0 1
ParametroTableRow
ˆˆ1 B
[
ˆˆB C
$num
ˆˆC D
]
ˆˆD E
+
ˆˆF G
$str
ˆˆH K
+
ˆˆL M
$str
¯¯ {
+
¯¯| }
$str
˙˙ #
;
˙˙# $
var
˝˝ 
query1
˝˝ 
=
˝˝ 
$str
˝˝ j
+
˝˝k l
$str˛˛ ¨
+˛˛≠ Æ
$str
ˇˇ N
+
ˇˇO P
getMetaScore
ˇˇQ ]
(
ˇˇ] ^
)
ˇˇ^ _
.
ˇˇ_ `
ToString
ˇˇ` h
(
ˇˇh i
)
ˇˇi j
+
ˇˇk l
$strˇˇm Å
+ˇˇÇ É
$strÄÄ ä
+ÄÄã å
getMetaScoreÄÄç ô
(ÄÄô ö
)ÄÄö õ
.ÄÄõ ú
ToStringÄÄú §
(ÄÄ§ •
)ÄÄ• ¶
+ÄÄß ®
$strÄÄ© ∏
+ÄÄπ ∫
getMetaScoreÄÄª «
(ÄÄ« »
)ÄÄ» …
.ÄÄ…  
ToStringÄÄ  “
(ÄÄ“ ”
)ÄÄ” ‘
+ÄÄ’ ÷
$strÄÄ◊ ¥
+ÄÄµ ∂
$strÅÅ ä
+ÅÅã å
getMetaScoreÅÅç ô
(ÅÅô ö
)ÅÅö õ
.ÅÅõ ú
ToStringÅÅú §
(ÅÅ§ •
)ÅÅ• ¶
+ÅÅß ®
$strÅÅ© π
+ÅÅ∫ ª
getMetaScoreÅÅº »
(ÅÅ» …
)ÅÅ…  
.ÅÅ  À
ToStringÅÅÀ ”
(ÅÅ” ‘
)ÅÅ‘ ’
+ÅÅ÷ ◊
$strÅÅÿ É
+ÅÅÑ Ö
getMetaScoreÅÅÜ í
(ÅÅí ì
)ÅÅì î
.ÅÅî ï
ToStringÅÅï ù
(ÅÅù û
)ÅÅû ü
+ÅÅ† °
$strÅÅ¢ Ì
+ÅÅÓ Ô
$str
ÉÉ .
+
ÉÉ/ 0
$str
ÑÑ <
+
ÑÑ= >
$str
ÖÖ 9
+
ÖÖ: ;
$str
ÜÜ 1
+
ÜÜ2 3
$str
áá 5
+
áá6 7
$str
àà 1
+
àà2 3
$str
ââ !
+
ââ" #
$str
ãã C
+
ããD E
$str
åå 5
+
åå6 7
$str
çç :
+
çç; <
$str
éé >
+
éé? @
$str
êê ,
+
êê- .
$str
ëë L
+
ëëM N
$str
ìì +
+
ìì, -
form
ìì. 2
.
ìì2 3
ParametroTableCol
ìì3 D
[
ììD E
$num
ììE F
]
ììF G
+
ììH I
$str
ììJ M
+
ììN O
$str
îî )
+
îî* +
form
îî, 0
.
îî0 1
ParametroTableRow
îî1 B
[
îîB C
$num
îîC D
]
îîD E
+
îîF G
$str
îîH K
+
îîL M
$str
ññ z
+
ññ{ |
$str
òò 4
+
òò5 6
$str
ôô &
;
ôô& '
var
úú 
query2
úú 
=
úú 
$str
ùù V
+
ùùW X
$strûû ¨
+ûû≠ Æ
$str
üü N
+
üüO P
getMetaScore
üüQ ]
(
üü] ^
)
üü^ _
.
üü_ `
ToString
üü` h
(
üüh i
)
üüi j
+
üük l
$strüüm Å
+üüÇ É
$str†† ä
+††ã å
getMetaScore††ç ô
(††ô ö
)††ö õ
.††õ ú
ToString††ú §
(††§ •
)††• ¶
+††ß ®
$str††© ∏
+††π ∫
getMetaScore††ª «
(††« »
)††» …
.††…  
ToString††  “
(††“ ”
)††” ‘
+††’ ÷
$str††◊ ¥
+††µ ∂
$str°° ä
+°°ã å
getMetaScore°°ç ô
(°°ô ö
)°°ö õ
.°°õ ú
ToString°°ú §
(°°§ •
)°°• ¶
+°°ß ®
$str°°© π
+°°∫ ª
getMetaScore°°º »
(°°» …
)°°…  
.°°  À
ToString°°À ”
(°°” ‘
)°°‘ ’
+°°÷ ◊
$str°°ÿ É
+°°Ñ Ö
getMetaScore°°Ü í
(°°í ì
)°°ì î
.°°î ï
ToString°°ï ù
(°°ù û
)°°û ü
+°°† °
$str°°¢ Ì
+°°Ó Ô
$str
££ .
+
££/ 0
$str
§§ <
+
§§= >
$str
•• 9
+
••: ;
$str
¶¶ 1
+
¶¶2 3
$str
ßß 5
+
ßß6 7
$str
®® 1
+
®®2 3
$str
©© !
+
©©" #
$str
´´ C
+
´´D E
$str
¨¨ 5
+
¨¨6 7
$str
≠≠ :
+
≠≠; <
$str
ÆÆ >
+
ÆÆ? @
$str
∞∞ ,
+
∞∞- .
$str
±± L
+
±±M N
$str
≥≥ +
+
≥≥, -
form
≥≥. 2
.
≥≥2 3
ParametroTableCol
≥≥3 D
[
≥≥D E
$num
≥≥E F
]
≥≥F G
+
≥≥H I
$str
≥≥J M
+
≥≥N O
$str
¥¥ )
+
¥¥* +
form
¥¥, 0
.
¥¥0 1
ParametroTableRow
¥¥1 B
[
¥¥B C
$num
¥¥C D
]
¥¥D E
+
¥¥F G
$str
¥¥H K
+
¥¥L M
$str
∂∂ z
+
∂∂{ |
$str
∏∏ (
+
∏∏) *
$str
ππ #
;
ππ# $
var
ºº 
query3
ºº 
=
ºº 
$str
ΩΩ Z
+
ΩΩ[ \
$strææ ¨
+ææ≠ Æ
$str
øø N
+
øøO P
getMetaScore
øøQ ]
(
øø] ^
)
øø^ _
.
øø_ `
ToString
øø` h
(
øøh i
)
øøi j
+
øøk l
$strøøm Å
+øøÇ É
$str¿¿ ä
+¿¿ã å
getMetaScore¿¿ç ô
(¿¿ô ö
)¿¿ö õ
.¿¿õ ú
ToString¿¿ú §
(¿¿§ •
)¿¿• ¶
+¿¿ß ®
$str¿¿© ∏
+¿¿π ∫
getMetaScore¿¿ª «
(¿¿« »
)¿¿» …
.¿¿…  
ToString¿¿  “
(¿¿“ ”
)¿¿” ‘
+¿¿’ ÷
$str¿¿◊ ¥
+¿¿µ ∂
$str¡¡ ä
+¡¡ã å
getMetaScore¡¡ç ô
(¡¡ô ö
)¡¡ö õ
.¡¡õ ú
ToString¡¡ú §
(¡¡§ •
)¡¡• ¶
+¡¡ß ®
$str¡¡© π
+¡¡∫ ª
getMetaScore¡¡º »
(¡¡» …
)¡¡…  
.¡¡  À
ToString¡¡À ”
(¡¡” ‘
)¡¡‘ ’
+¡¡÷ ◊
$str¡¡ÿ É
+¡¡Ñ Ö
getMetaScore¡¡Ü í
(¡¡í ì
)¡¡ì î
.¡¡î ï
ToString¡¡ï ù
(¡¡ù û
)¡¡û ü
+¡¡† °
$str¡¡¢ Ì
+¡¡Ó Ô
$str
√√ .
+
√√/ 0
$str
ƒƒ <
+
ƒƒ= >
$str
≈≈ 9
+
≈≈: ;
$str
∆∆ 1
+
∆∆2 3
$str
«« 5
+
««6 7
$str
»» 1
+
»»2 3
$str
…… !
+
……" #
$str
ÀÀ C
+
ÀÀD E
$str
ÃÃ 5
+
ÃÃ6 7
$str
ÕÕ :
+
ÕÕ; <
$str
ŒŒ >
+
ŒŒ? @
$str
–– ,
+
––- .
$str
—— L
+
——M N
$str
”” +
+
””, -
form
””. 2
.
””2 3
ParametroTableCol
””3 D
[
””D E
$num
””E F
]
””F G
+
””H I
$str
””J M
+
””N O
$str
‘‘ )
+
‘‘* +
form
‘‘, 0
.
‘‘0 1
ParametroTableRow
‘‘1 B
[
‘‘B C
$num
‘‘C D
]
‘‘D E
+
‘‘F G
$str
‘‘H K
+
‘‘L M
$str
÷÷ {
+
÷÷| }
$str
ÿÿ +
+
ÿÿ, -
$str
ŸŸ #
;
ŸŸ# $
var
‹‹ 
query4
‹‹ 
=
‹‹ 
$str
›› Y
+
››Z [
$strﬁﬁ ¨
+ﬁﬁ≠ Æ
$str
ﬂﬂ N
+
ﬂﬂO P
getMetaScore
ﬂﬂQ ]
(
ﬂﬂ] ^
)
ﬂﬂ^ _
.
ﬂﬂ_ `
ToString
ﬂﬂ` h
(
ﬂﬂh i
)
ﬂﬂi j
+
ﬂﬂk l
$strﬂﬂm Å
+ﬂﬂÇ É
$str‡‡ ä
+‡‡ã å
getMetaScore‡‡ç ô
(‡‡ô ö
)‡‡ö õ
.‡‡õ ú
ToString‡‡ú §
(‡‡§ •
)‡‡• ¶
+‡‡ß ®
$str‡‡© ∏
+‡‡π ∫
getMetaScore‡‡ª «
(‡‡« »
)‡‡» …
.‡‡…  
ToString‡‡  “
(‡‡“ ”
)‡‡” ‘
+‡‡’ ÷
$str‡‡◊ ¥
+‡‡µ ∂
$str·· ä
+··ã å
getMetaScore··ç ô
(··ô ö
)··ö õ
.··õ ú
ToString··ú §
(··§ •
)··• ¶
+··ß ®
$str··© π
+··∫ ª
getMetaScore··º »
(··» …
)··…  
.··  À
ToString··À ”
(··” ‘
)··‘ ’
+··÷ ◊
$str··ÿ É
+··Ñ Ö
getMetaScore··Ü í
(··í ì
)··ì î
.··î ï
ToString··ï ù
(··ù û
)··û ü
+··† °
$str··¢ Ì
+··Ó Ô
$str
„„ /
+
„„0 1
$str
‰‰ <
+
‰‰= >
$str
ÂÂ 9
+
ÂÂ: ;
$str
ÊÊ 1
+
ÊÊ2 3
$str
ÁÁ 5
+
ÁÁ6 7
$str
ËË 1
+
ËË2 3
$str
ÈÈ !
+
ÈÈ" #
$str
ÎÎ C
+
ÎÎD E
$str
ÏÏ 5
+
ÏÏ6 7
$str
ÌÌ :
+
ÌÌ; <
$str
ÓÓ >
+
ÓÓ? @
$str
 ,
+
- .
$str
ÒÒ L
+
ÒÒM N
$str
ÛÛ +
+
ÛÛ, -
form
ÛÛ. 2
.
ÛÛ2 3
ParametroTableCol
ÛÛ3 D
[
ÛÛD E
$num
ÛÛE F
]
ÛÛF G
+
ÛÛH I
$str
ÛÛJ M
+
ÛÛN O
$str
ÙÙ )
+
ÙÙ* +
form
ÙÙ, 0
.
ÙÙ0 1
ParametroTableRow
ÙÙ1 B
[
ÙÙB C
$num
ÙÙC D
]
ÙÙD E
+
ÙÙF G
$str
ÙÙH K
+
ÙÙL M
$str
ˆˆ {
+
ˆˆ| }
$str
¯¯ 
;
¯¯ 
var
¸¸ 
query6
¸¸ 
=
¸¸ 
$str¸¸ ™
+¸¸´ ¨
$str
˝˝ (
+
˝˝) *
$str
˛˛ <
+
˛˛= >
$str
ˇˇ 9
+
ˇˇ: ;
$str
ÄÄ 1
+
ÄÄ2 3
$str
ÅÅ 5
+
ÅÅ6 7
$str
ÇÇ 1
+
ÇÇ2 3
$str
ÉÉ !
+
ÉÉ" #
$str
ÖÖ C
+
ÖÖD E
$str
ÜÜ 5
+
ÜÜ6 7
$str
áá :
+
áá; <
$str
àà >
+
àà? @
$str
ää ,
+
ää- .
$str
ãã K
+
ããL M
$str
çç +
+
çç, -
form
çç. 2
.
çç2 3
ParametroTableCol
çç3 D
[
ççD E
$num
ççE F
]
ççF G
+
ççH I
$str
ççJ M
+
ççN O
$str
éé )
+
éé* +
form
éé, 0
.
éé0 1
ParametroTableRow
éé1 B
[
ééB C
$num
ééC D
]
ééD E
+
ééF G
$str
ééH K
+
ééL M
$str
êê {
+
êê| }
$str
ëë )
;
ëë) *
var
ìì 
orderby
ìì 
=
ìì 
$str
ìì /
;
ìì/ 0
var
ïï 
db
ïï 
=
ïï 
new
ïï 
SgqDbDevEntities
ïï )
(
ïï) *
)
ïï* +
;
ïï+ ,
string
òò 
grandeQuery
òò 
=
òò  
query
òò! &
+
òò' (
$str
òò) ,
+
òò- .
query1
òò/ 5
+
òò6 7
$str
òò8 I
+
òòJ K
query2
òòL R
+
òòS T
$str
òòU f
+
òòg h
query3
òòi o
+
òòp q
$stròòr É
+òòÑ Ö
query4òòÜ å
+òòç é
$stròòè †
+òò° ¢
query6òò£ ©
+òò™ ´
orderbyòò¨ ≥
;òò≥ ¥
var
öö 
result
öö 
=
öö 
db
öö 
.
öö 
Database
öö $
.
öö$ %
SqlQuery
öö% -
<
öö- .
ResultQuery1
öö. :
>
öö: ;
(
öö; <
grandeQuery
öö< G
)
ööG H
.
ööH I
ToList
ööI O
(
ööO P
)
ööP Q
;
ööQ R
var
¢¢ 
result1
¢¢ 
=
¢¢ 
result
¢¢  
.
¢¢  !
Where
¢¢! &
(
¢¢& '
r
¢¢' (
=>
¢¢) +
r
¢¢, -
.
¢¢- .
QUERY
¢¢. 3
==
¢¢4 6
$num
¢¢7 8
)
¢¢8 9
.
¢¢9 :
ToList
¢¢: @
(
¢¢@ A
)
¢¢A B
;
¢¢B C
var
££ 
result2
££ 
=
££ 
result
££  
.
££  !
Where
££! &
(
££& '
r
££' (
=>
££) +
r
££, -
.
££- .
QUERY
££. 3
==
££4 6
$num
££7 8
)
££8 9
.
££9 :
ToList
££: @
(
££@ A
)
££A B
;
££B C
var
§§ 
result3
§§ 
=
§§ 
result
§§  
.
§§  !
Where
§§! &
(
§§& '
r
§§' (
=>
§§) +
r
§§, -
.
§§- .
QUERY
§§. 3
==
§§4 6
$num
§§7 8
)
§§8 9
.
§§9 :
ToList
§§: @
(
§§@ A
)
§§A B
;
§§B C
var
•• 
result4
•• 
=
•• 
result
••  
.
••  !
Where
••! &
(
••& '
r
••' (
=>
••) +
r
••, -
.
••- .
QUERY
••. 3
==
••4 6
$num
••7 8
)
••8 9
.
••9 :
ToList
••: @
(
••@ A
)
••A B
;
••B C
var
¶¶ 
queryRowsBody
¶¶ 
=
¶¶ 
result
¶¶  &
.
¶¶& '
Where
¶¶' ,
(
¶¶, -
r
¶¶- .
=>
¶¶/ 1
r
¶¶2 3
.
¶¶3 4
QUERY
¶¶4 9
==
¶¶: <
$num
¶¶= >
)
¶¶> ?
.
¶¶? @
ToList
¶¶@ F
(
¶¶F G
)
¶¶G H
;
¶¶H I
tabela
≠≠ 
.
≠≠ 
trsCabecalho1
≠≠  
=
≠≠! "
new
≠≠# &
List
≠≠' +
<
≠≠+ ,
Ths
≠≠, /
>
≠≠/ 0
(
≠≠0 1
)
≠≠1 2
;
≠≠2 3
tabela
ÆÆ 
.
ÆÆ 
trsCabecalho1
ÆÆ  
.
ÆÆ  !
Add
ÆÆ! $
(
ÆÆ$ %
new
ÆÆ% (
Ths
ÆÆ) ,
(
ÆÆ, -
)
ÆÆ- .
{
ÆÆ/ 0
name
ÆÆ1 5
=
ÆÆ6 7
$str
ÆÆ8 B
+
ÆÆC D
form
ÆÆE I
.
ÆÆI J
ParametroTableRow
ÆÆJ [
[
ÆÆ[ \
$num
ÆÆ\ ]
]
ÆÆ] ^
}
ÆÆ` a
)
ÆÆa b
;
ÆÆb c
tabela
ØØ 
.
ØØ 
trsCabecalho1
ØØ  
.
ØØ  !
Add
ØØ! $
(
ØØ$ %
new
ØØ% (
Ths
ØØ) ,
(
ØØ, -
)
ØØ- .
{
ØØ/ 0
name
ØØ1 5
=
ØØ6 7
$str
ØØ8 D
+
ØØE F
form
ØØG K
.
ØØK L
ParametroTableCol
ØØL ]
[
ØØ] ^
$num
ØØ^ _
]
ØØ_ `
}
ØØa b
)
ØØb c
;
ØØc d
tabela
ææ 
.
ææ 
trsCabecalho2
ææ $
=
ææ% &
db
ææ' )
.
ææ) *
Database
ææ* 2
.
ææ2 3
SqlQuery
ææ3 ;
<
ææ; <
Ths
ææ< ?
>
ææ? @
(
ææ@ A
query
ææA F
+
ææG H
$str
ææI L
+
ææM N
query0
ææO U
)
ææU V
.
ææV W
OrderBy
ææW ^
(
ææ^ _
r
ææ_ `
=>
ææa c
r
ææd e
.
ææe f
name
ææf j
)
ææj k
.
ææk l
ToList
ææl r
(
æær s
)
ææs t
;
ææt u
var
¿¿ 
thsMeio
¿¿ 
=
¿¿ 
new
¿¿ 
List
¿¿ "
<
¿¿" #
Ths
¿¿# &
>
¿¿& '
(
¿¿' (
)
¿¿( )
;
¿¿) *
thsMeio
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
new
¡¡ 
Ths
¡¡ 
(
¡¡  
)
¡¡  !
{
¡¡" #
name
¡¡$ (
=
¡¡) *
$str
¡¡+ .
,
¡¡. /
coolspan
¡¡0 8
=
¡¡9 :
$num
¡¡; <
}
¡¡= >
)
¡¡> ?
;
¡¡? @
thsMeio
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
new
¬¬ 
Ths
¬¬ 
(
¬¬  
)
¬¬  !
{
¬¬" #
name
¬¬$ (
=
¬¬) *
$str
¬¬+ .
,
¬¬. /
coolspan
¬¬0 8
=
¬¬9 :
$num
¬¬; <
}
¬¬= >
)
¬¬> ?
;
¬¬? @
thsMeio
√√ 
.
√√ 
Add
√√ 
(
√√ 
new
√√ 
Ths
√√ 
(
√√  
)
√√  !
{
√√" #
name
√√$ (
=
√√) *
$str
√√+ .
,
√√. /
coolspan
√√0 8
=
√√9 :
$num
√√; <
}
√√= >
)
√√> ?
;
√√? @
thsMeio
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
new
ƒƒ 
Ths
ƒƒ 
(
ƒƒ  
)
ƒƒ  !
{
ƒƒ" #
name
ƒƒ$ (
=
ƒƒ) *
$str
ƒƒ+ .
,
ƒƒ. /
coolspan
ƒƒ0 8
=
ƒƒ9 :
$num
ƒƒ; <
}
ƒƒ= >
)
ƒƒ> ?
;
ƒƒ? @
foreach
∆∆ 
(
∆∆ 
var
∆∆ 
i
∆∆ 
in
∆∆ 
tabela
∆∆ $
.
∆∆$ %
trsCabecalho2
∆∆% 2
)
∆∆2 3
i
«« 
.
«« 
tds
«« 
=
«« 
thsMeio
«« 
;
««  
tabela
…… 
.
…… 
trsCabecalho3
……  
=
……! "
new
……# &
List
……' +
<
……+ ,
Ths
……, /
>
……/ 0
(
……0 1
)
……1 2
;
……2 3
tabela
   
.
   
trsCabecalho3
    
.
    !
Add
  ! $
(
  $ %
new
  % (
Ths
  ) ,
(
  , -
)
  - .
{
  / 0
name
  1 5
=
  6 7
$str
  8 ?
,
  ? @
coolspan
  A I
=
  J K
$num
  L M
,
  M N
tds
  O R
=
  S T
thsMeio
  U \
}
  ] ^
)
  ^ _
;
  _ `
tabela
—— 
.
—— 
trsMeio
—— 
=
—— 
new
——  
List
——! %
<
——% &
Trs
——& )
>
——) *
(
——* +
)
——+ ,
;
——, -
foreach
åå 
(
åå 
var
åå 
i
åå 
in
åå 
queryRowsBody
åå +
)
åå+ ,
{
çç 
var
èè 
filtro
èè 
=
èè 
result1
èè $
.
èè$ %
Where
èè% *
(
èè* +
r
èè+ ,
=>
èè- /
r
èè0 1
.
èè1 2
CLASSIFIC_NEGOCIO
èè2 C
.
èèC D
Equals
èèD J
(
èèJ K
i
èèK L
.
èèL M
CLASSIFIC_NEGOCIO
èèM ^
)
èè^ _
)
èè_ `
.
èè` a
ToList
èèa g
(
èèg h
)
èèh i
;
èèi j
var
êê 
Tr
êê 
=
êê 
new
êê 
Trs
êê  
(
êê  !
)
êê! "
{
ëë 
name
íí 
=
íí 
i
íí 
.
íí 
CLASSIFIC_NEGOCIO
íí .
,
íí. /
tdsEsquerda
ìì 
=
ìì  !
new
ìì" %
List
ìì& *
<
ìì* +
Tds
ìì+ .
>
ìì. /
(
ìì/ 0
)
ìì0 1
,
ìì1 2

tdsDireita
îî 
=
îî  
new
îî! $
List
îî% )
<
îî) *
Tds
îî* -
>
îî- .
(
îî. /
)
îî/ 0
}
ïï 
;
ïï 
filtro
ùù 
=
ùù 
filtro
ùù 
.
ùù  
OrderBy
ùù  '
(
ùù' (
r
ùù( )
=>
ùù* ,
r
ùù- .
.
ùù. /
MACROPROCESSO
ùù/ <
)
ùù< =
.
ùù= >
ToList
ùù> D
(
ùùD E
)
ùùE F
;
ùùF G
foreach
ûû 
(
ûû 
var
ûû 
ii
ûû 
in
ûû  "
filtro
ûû# )
)
ûû) *
{
üü 
Tr
†† 
.
†† 
tdsEsquerda
†† "
.
††" #
Add
††# &
(
††& '
new
††' *
Tds
††+ .
(
††. /
)
††/ 0
{
††1 2
valor
††3 8
=
††9 :
ii
††; =
.
††= >
REAL
††> B
.
††B C
ToString
††C K
(
††K L
)
††L M
}
††N O
)
††O P
;
††P Q
Tr
°° 
.
°° 
tdsEsquerda
°° "
.
°°" #
Add
°°# &
(
°°& '
new
°°' *
Tds
°°+ .
(
°°. /
)
°°/ 0
{
°°1 2
valor
°°3 8
=
°°9 :
ii
°°; =
.
°°= >
ORCADO
°°> D
.
°°D E
ToString
°°E M
(
°°M N
)
°°N O
}
°°P Q
)
°°Q R
;
°°R S
Tr
¢¢ 
.
¢¢ 
tdsEsquerda
¢¢ "
.
¢¢" #
Add
¢¢# &
(
¢¢& '
new
¢¢' *
Tds
¢¢+ .
(
¢¢. /
)
¢¢/ 0
{
¢¢1 2
valor
¢¢3 8
=
¢¢9 :
ii
¢¢; =
.
¢¢= >
DESVIO
¢¢> D
.
¢¢D E
ToString
¢¢E M
(
¢¢M N
)
¢¢N O
}
¢¢P Q
)
¢¢Q R
;
¢¢R S
Tr
££ 
.
££ 
tdsEsquerda
££ "
.
££" #
Add
££# &
(
££& '
new
££' *
Tds
££+ .
(
££. /
)
££/ 0
{
££1 2
valor
££3 8
=
££9 :
ii
££; =
.
££= >
DESVIOPERCENTUAL
££> N
.
££N O
ToString
££O W
(
££W X
)
££X Y
}
££Z [
)
££[ \
;
££\ ]
}
§§ 
filtro
™™ 
=
™™ 
result2
™™  
.
™™  !
Where
™™! &
(
™™& '
r
™™' (
=>
™™) +
r
™™, -
.
™™- .
CLASSIFIC_NEGOCIO
™™. ?
.
™™? @
Equals
™™@ F
(
™™F G
i
™™G H
.
™™H I
CLASSIFIC_NEGOCIO
™™I Z
)
™™Z [
)
™™[ \
.
™™\ ]
ToList
™™] c
(
™™c d
)
™™d e
;
™™e f
foreach
´´ 
(
´´ 
var
´´ 
ii
´´ 
in
´´  "
filtro
´´# )
)
´´) *
{
¨¨ 
Tr
≠≠ 
.
≠≠ 

tdsDireita
≠≠ !
.
≠≠! "
Add
≠≠" %
(
≠≠% &
new
≠≠& )
Tds
≠≠* -
(
≠≠- .
)
≠≠. /
{
≠≠0 1
valor
≠≠2 7
=
≠≠8 9
ii
≠≠: <
.
≠≠< =
REAL
≠≠= A
.
≠≠A B
ToString
≠≠B J
(
≠≠J K
)
≠≠K L
}
≠≠M N
)
≠≠N O
;
≠≠O P
Tr
ÆÆ 
.
ÆÆ 

tdsDireita
ÆÆ !
.
ÆÆ! "
Add
ÆÆ" %
(
ÆÆ% &
new
ÆÆ& )
Tds
ÆÆ* -
(
ÆÆ- .
)
ÆÆ. /
{
ÆÆ0 1
valor
ÆÆ2 7
=
ÆÆ8 9
ii
ÆÆ: <
.
ÆÆ< =
ORCADO
ÆÆ= C
.
ÆÆC D
ToString
ÆÆD L
(
ÆÆL M
)
ÆÆM N
}
ÆÆO P
)
ÆÆP Q
;
ÆÆQ R
Tr
ØØ 
.
ØØ 

tdsDireita
ØØ !
.
ØØ! "
Add
ØØ" %
(
ØØ% &
new
ØØ& )
Tds
ØØ* -
(
ØØ- .
)
ØØ. /
{
ØØ0 1
valor
ØØ2 7
=
ØØ8 9
ii
ØØ: <
.
ØØ< =
DESVIO
ØØ= C
.
ØØC D
ToString
ØØD L
(
ØØL M
)
ØØM N
}
ØØO P
)
ØØP Q
;
ØØQ R
Tr
∞∞ 
.
∞∞ 

tdsDireita
∞∞ !
.
∞∞! "
Add
∞∞" %
(
∞∞% &
new
∞∞& )
Tds
∞∞* -
(
∞∞- .
)
∞∞. /
{
∞∞0 1
valor
∞∞2 7
=
∞∞8 9
ii
∞∞: <
.
∞∞< =
DESVIOPERCENTUAL
∞∞= M
.
∞∞M N
ToString
∞∞N V
(
∞∞V W
)
∞∞W X
}
∞∞Y Z
)
∞∞Z [
;
∞∞[ \
}
±± 
tabela
µµ 
.
µµ 
trsMeio
µµ 
.
µµ 
Add
µµ "
(
µµ" #
Tr
µµ# %
)
µµ% &
;
µµ& '
}
∂∂ 
var
ºº 
queryRowsFooter
ºº 
=
ºº  !
new
ºº" %
List
ºº& *
<
ºº* +
string
ºº+ 1
>
ºº1 2
(
ºº2 3
)
ºº3 4
;
ºº4 5
queryRowsFooter
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ  
$str
ΩΩ  '
)
ΩΩ' (
;
ΩΩ( )
tabela
ææ 
.
ææ 
footer
ææ 
=
ææ 
new
ææ 
List
ææ  $
<
ææ$ %
Trs
ææ% (
>
ææ( )
(
ææ) *
)
ææ* +
;
ææ+ ,
foreach
øø 
(
øø 
var
øø 
i
øø 
in
øø 
queryRowsFooter
øø -
)
øø- .
{
¿¿ 
var
¬¬ 
Tr
¬¬ 
=
¬¬ 
new
¬¬ 
Trs
¬¬  
(
¬¬  !
)
¬¬! "
{
√√ 
name
ƒƒ 
=
ƒƒ 
i
ƒƒ 
,
ƒƒ 
tdsEsquerda
≈≈ 
=
≈≈  !
new
≈≈" %
List
≈≈& *
<
≈≈* +
Tds
≈≈+ .
>
≈≈. /
(
≈≈/ 0
)
≈≈0 1
,
≈≈1 2

tdsDireita
∆∆ 
=
∆∆  
new
∆∆! $
List
∆∆% )
<
∆∆) *
Tds
∆∆* -
>
∆∆- .
(
∆∆. /
)
∆∆/ 0
}
«« 
;
«« 
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ 
ii
ÀÀ 
in
ÀÀ  "
result3
ÀÀ# *
)
ÀÀ* +
{
ÃÃ 
Tr
ÕÕ 
.
ÕÕ 
tdsEsquerda
ÕÕ "
.
ÕÕ" #
Add
ÕÕ# &
(
ÕÕ& '
new
ÕÕ' *
Tds
ÕÕ+ .
(
ÕÕ. /
)
ÕÕ/ 0
{
ÕÕ1 2
valor
ÕÕ3 8
=
ÕÕ9 :
ii
ÕÕ; =
.
ÕÕ= >
REAL
ÕÕ> B
.
ÕÕB C
ToString
ÕÕC K
(
ÕÕK L
)
ÕÕL M
}
ÕÕN O
)
ÕÕO P
;
ÕÕP Q
Tr
ŒŒ 
.
ŒŒ 
tdsEsquerda
ŒŒ "
.
ŒŒ" #
Add
ŒŒ# &
(
ŒŒ& '
new
ŒŒ' *
Tds
ŒŒ+ .
(
ŒŒ. /
)
ŒŒ/ 0
{
ŒŒ1 2
valor
ŒŒ3 8
=
ŒŒ9 :
ii
ŒŒ; =
.
ŒŒ= >
ORCADO
ŒŒ> D
.
ŒŒD E
ToString
ŒŒE M
(
ŒŒM N
)
ŒŒN O
}
ŒŒP Q
)
ŒŒQ R
;
ŒŒR S
Tr
œœ 
.
œœ 
tdsEsquerda
œœ "
.
œœ" #
Add
œœ# &
(
œœ& '
new
œœ' *
Tds
œœ+ .
(
œœ. /
)
œœ/ 0
{
œœ1 2
valor
œœ3 8
=
œœ9 :
ii
œœ; =
.
œœ= >
DESVIO
œœ> D
.
œœD E
ToString
œœE M
(
œœM N
)
œœN O
}
œœP Q
)
œœQ R
;
œœR S
Tr
–– 
.
–– 
tdsEsquerda
–– "
.
––" #
Add
––# &
(
––& '
new
––' *
Tds
––+ .
(
––. /
)
––/ 0
{
––1 2
valor
––3 8
=
––9 :
ii
––; =
.
––= >
DESVIOPERCENTUAL
––> N
.
––N O
ToString
––O W
(
––W X
)
––X Y
}
––Z [
)
––[ \
;
––\ ]
}
—— 
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
ii
◊◊ 
in
◊◊  "
result4
◊◊# *
)
◊◊* +
{
ÿÿ 
Tr
ŸŸ 
.
ŸŸ 

tdsDireita
ŸŸ !
.
ŸŸ! "
Add
ŸŸ" %
(
ŸŸ% &
new
ŸŸ& )
Tds
ŸŸ* -
(
ŸŸ- .
)
ŸŸ. /
{
ŸŸ0 1
valor
ŸŸ2 7
=
ŸŸ8 9
ii
ŸŸ: <
.
ŸŸ< =
REAL
ŸŸ= A
.
ŸŸA B
ToString
ŸŸB J
(
ŸŸJ K
)
ŸŸK L
}
ŸŸM N
)
ŸŸN O
;
ŸŸO P
Tr
⁄⁄ 
.
⁄⁄ 

tdsDireita
⁄⁄ !
.
⁄⁄! "
Add
⁄⁄" %
(
⁄⁄% &
new
⁄⁄& )
Tds
⁄⁄* -
(
⁄⁄- .
)
⁄⁄. /
{
⁄⁄0 1
valor
⁄⁄2 7
=
⁄⁄8 9
ii
⁄⁄: <
.
⁄⁄< =
ORCADO
⁄⁄= C
.
⁄⁄C D
ToString
⁄⁄D L
(
⁄⁄L M
)
⁄⁄M N
}
⁄⁄O P
)
⁄⁄P Q
;
⁄⁄Q R
Tr
€€ 
.
€€ 

tdsDireita
€€ !
.
€€! "
Add
€€" %
(
€€% &
new
€€& )
Tds
€€* -
(
€€- .
)
€€. /
{
€€0 1
valor
€€2 7
=
€€8 9
ii
€€: <
.
€€< =
DESVIO
€€= C
.
€€C D
ToString
€€D L
(
€€L M
)
€€M N
}
€€O P
)
€€P Q
;
€€Q R
Tr
‹‹ 
.
‹‹ 

tdsDireita
‹‹ !
.
‹‹! "
Add
‹‹" %
(
‹‹% &
new
‹‹& )
Tds
‹‹* -
(
‹‹- .
)
‹‹. /
{
‹‹0 1
valor
‹‹2 7
=
‹‹8 9
ii
‹‹: <
.
‹‹< =
DESVIOPERCENTUAL
‹‹= M
.
‹‹M N
ToString
‹‹N V
(
‹‹V W
)
‹‹W X
}
‹‹Y Z
)
‹‹Z [
;
‹‹[ \
}
›› 
tabela
·· 
.
·· 
footer
·· 
.
·· 
Add
·· !
(
··! "
Tr
··" $
)
··$ %
;
··% &
}
‚‚ 
return
ÊÊ 
tabela
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
ÈÈ &
TabelaDinamicaResultados
ÈÈ '
GetTbl1SemGrupos
ÈÈ( 8
(
ÈÈ8 9#
DataCarrierFormulario
ÈÈ9 N
form
ÈÈO S
)
ÈÈS T
{
ÍÍ 	
var
ÚÚ 
query
ÚÚ 
=
ÚÚ 
$str
ÚÚ 
+
ÚÚ 
$str	ˆˆ Ã
+ˆˆÕ Œ
$str	˜˜ °
+˜˜¢ £
$str	¯¯ ã
+¯¯å ç
$str˘˘ {
+
˘˘| }
$str	˙˙ ã
+˙˙å ç
$str	˚˚ à
+˚˚â ä
$str	¸¸ í
+¸¸ì î
$str	˝˝ â
+˝˝ä ã
$str	˛˛ ì
+˛˛î ï
$str	ˇˇ ç
+ˇˇé è
$str	ÄÄ ï
+ÄÄñ ó
$str	ÅÅ ç
+ÅÅé è
$str	ÇÇ ó
+ÇÇò ô
$str	ÉÉ â
+ÉÉä ã
$str	ÑÑ í
+ÑÑì î
$str	ÖÖ â
+ÖÖä ã
$str	ÜÜ ì
+ÜÜî ï
$str	áá å
+ááç é
$str	àà å
+ààç é
$str	ââ è
+ââê ë
$str	ää ñ
+ääó ò
$str	ãã ç
+ããé è
$str	åå ç
+ååé è
$str	çç ñ
+ççó ò
$str	éé ë
+ééí ì
$strèè #
+
èè$ %
$strêê  
+
êê! "
$strëë |
+
ëë} ~
$stríí {
+
íí| }
$strìì {
+
ìì| }
$strîî {
+
îî| }
$str	ïï â
+ïïä ã
$strññ {
+
ññ| }
$str	óó ã
+óóå ç
$stròò }
+
òò~ 
$strôô z
+
ôô{ |
$ströö ~
+öö Ä
$strõõ (
+
õõ) *
form
õõ+ /
.
õõ/ 0
_dataInicioSQL
õõ0 >
+
õõ? @
$strõõA “
+õõ” ‘
$strúú (
+
úú) *
form
úú+ /
.
úú/ 0
_dataFimSQL
úú0 ;
+
úú< =
$strúú> œ
+úú– —
$str
°° 1
+
°°2 3
$str
££ '
+
££( )
$str
§§ )
+
§§* +
$str
•• "
+
••# $
$str
¶¶ %
+
¶¶& '
$str
ßß 
+
ßß 
$str
™™ /
+
™™0 1
$str
±±  
+
±±! "
$str
≥≥ )
+
≥≥* +
$str
¥¥ 8
+
¥¥9 :
$strµµ É
+µµÑ Ö
$str
∂∂ @
+
∂∂A B
$str
∫∫ ;
+
∫∫< =
$str
ªª ;
+
ªª< =
$str
ºº 4
+
ºº5 6
$str
ææ ;
+
ææ< =
$str
øø -
+
øø. /
$str
¿¿ U
+
¿¿V W
$str
¡¡ 3
+
¡¡4 5
$str
¬¬ /
+
¬¬0 1
$str
√√ <
+
√√= >
$str
ƒƒ 4
+
ƒƒ5 6
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str	’’ ø
+’’¿ ¡
$str	÷÷ ø
+÷÷¿ ¡
$str	◊◊ Ã
+◊◊Õ Œ
$str	ÿÿ Ã
+ÿÿÕ Œ
$str	ŸŸ Ã
+ŸŸÕ Œ
$str	⁄⁄ Ã
+⁄⁄Õ Œ
$str	€€ Ã
+€€Õ Œ
$str	‹‹ Ã
+‹‹Õ Œ
$str	›› Ã
+››Õ Œ
$str	ﬁﬁ Ã
+ﬁﬁÕ Œ
$str	ﬂﬂ Ã
+ﬂﬂÕ Œ
$str	‡‡ Ã
+‡‡Õ Œ
$str	·· Ã
+··Õ Œ
$str	‚‚ Ã
+‚‚Õ Œ
$str	„„ Ã
+„„Õ Œ
$str	‰‰ Ω
+‰‰æ ø
$str	ÂÂ ¿
+ÂÂ¡ ¬
$str	ÊÊ Ã
+ÊÊÕ Œ
$str	ÁÁ Ã
+ÁÁÕ Œ
$str	ËË Ã
+ËËÕ Œ
$str	ÈÈ Ã
+ÈÈÕ Œ
$str	ÍÍ Ã
+ÍÍÕ Œ
$str	ÎÎ Ã
+ÎÎÕ Œ
$str	ÏÏ Ã
+ÏÏÕ Œ
$str	ÌÌ Ã
+ÌÌÕ Œ
$str	ÓÓ Ã
+ÓÓÕ Œ
$str	ÔÔ Ã
+ÔÔÕ Œ
$str	 Ã
+Õ Œ
$str	ÒÒ Ã
+ÒÒÕ Œ
$str	ÚÚ Ã
+ÚÚÕ Œ
$str	ÛÛ Ã
+ÛÛÕ Œ
$str	ÙÙ Ã
+ÙÙÕ Œ
$str	ıı Ã
+ııÕ Œ
$str	ˆˆ Ã
+ˆˆÕ Œ
$str	˜˜ Ã
+˜˜Õ Œ
$str	¯¯ Ã
+¯¯Õ Œ
$str	˘˘ Ã
+˘˘Õ Œ
$str	˙˙ Ã
+˙˙Õ Œ
$str	˚˚ Ã
+˚˚Õ Œ
$str	¸¸ Ã
+¸¸Õ Œ
$str	˝˝ Ã
+˝˝Õ Œ
$str	˛˛ Ã
+˛˛Õ Œ
$str	ˇˇ Ã
+ˇˇÕ Œ
$str	ÄÄ Ã
+ÄÄÕ Œ
$str	ÅÅ Ã
+ÅÅÕ Œ
$str	ÇÇ Ã
+ÇÇÕ Œ
$str	ÉÉ Ã
+ÉÉÕ Œ
$str	ÑÑ Ã
+ÑÑÕ Œ
$str	ÖÖ Ã
+ÖÖÕ Œ
$str	ÜÜ Ã
+ÜÜÕ Œ
$str	áá Ã
+ááÕ Œ
$str	àà Ã
+ààÕ Œ
$str	ââ Ã
+ââÕ Œ
$str	ää Ã
+ääÕ Œ
$str	ãã Ã
+ããÕ Œ
$str	åå Ã
+ååÕ Œ
$str	çç Ã
+ççÕ Œ
$str	éé Ã
+ééÕ Œ
$str	èè Ã
+èèÕ Œ
$str	êê Ã
+êêÕ Œ
$str	ëë Ã
+ëëÕ Œ
$str	íí Ã
+ííÕ Œ
$str	ìì Ã
+ììÕ Œ
$str	îî ø
+îî¿ ¡
$str	ïï ø
+ïï¿ ¡
$str	ññ Ã
+ññÕ Œ
$str	óó …
+óó  À
$str	òò ⁄
+òò€ ‹
$str	ôô Ã
+ôôÕ Œ
$str	öö ø
+öö¿ ¡
$str	õõ ÿ
+õõŸ ⁄
$str	úú Ã
+úúÕ Œ
$str	ùù Ã
+ùùÕ Œ
$str	ûû …
+ûû  À
$str	üü …
+üü  À
$str	†† Ã
+††Õ Œ
$str	°° ø
+°°¿ ¡
$str	¢¢ Ã
+¢¢Õ Œ
$str	££ Ã
+££Õ Œ
$str	§§ …
+§§  À
$str	•• …
+••  À
$str	¶¶ …
+¶¶  À
$str	ßß …
+ßß  À
$str	®® Ã
+®®Õ Œ
$str©© 
+
©© 
$str™™ ◊
+™™ÿ Ÿ
$str	´´ Ã
+´´Õ Œ
$str	¨¨ …
+¨¨  À
$str	≠≠ …
+≠≠  À
$str	ÆÆ Ã
+ÆÆÕ Œ
$str	ØØ ≥
+ØØ¥ µ
$str	∞∞ ø
+∞∞¿ ¡
$str	±± Ã
+±±Õ Œ
$str	≤≤ ∂
+≤≤∑ ∏
$str	≥≥ ∫
+≥≥ª º
$str	¥¥ ∫
+¥¥ª º
$str	µµ ∫
+µµª º
$str	∂∂ Ã
+∂∂Õ Œ
$str	∑∑ ≥
+∑∑¥ µ
$str	∏∏ ∫
+∏∏ª º
$str	ππ ∫
+ππª º
$str	∫∫ ∫
+∫∫ª º
$str	ªª ∫
+ªªª º
$str	ºº ∫
+ººª º
$str	ΩΩ º
+ΩΩΩ æ
$str	ææ ∫
+ææª º
$str	øø Ω
+øøæ ø
$str	¿¿ ∑
+¿¿∏ π
$str	¡¡ ∫
+¡¡ª º
$str	¬¬ π
+¬¬∫ ª
$str√√ |
+
√√} ~
$strƒƒ ?
+
ƒƒ@ A
$str	≈≈ „
+≈≈‰ Â
$str	∆∆ „
+∆∆‰ Â
$str	«« „
+««‰ Â
$str	»» „
+»»‰ Â
$str	…… „
+……‰ Â
$str	   ‚
+  „ ‰
$str	ÀÀ „
+ÀÀ‰ Â
$str	ÃÃ „
+ÃÃ‰ Â
$str	ÕÕ „
+ÕÕ‰ Â
$str	ŒŒ „
+ŒŒ‰ Â
$str	œœ „
+œœ‰ Â
$str	–– „
+––‰ Â
$str	—— „
+——‰ Â
$str	““ ê
+““ë í
$str	”” „
+””‰ Â
$str	‘‘ ã
+‘‘å ç
$str	’’ ã
+’’å ç
$str	÷÷ „
+÷÷‰ Â
$str	ÿÿ ç
+ÿÿé è
$str	ŸŸ Ñ	
+ŸŸÖ	 Ü	
$str	⁄⁄ ¬
+⁄⁄√ ƒ
$str‹‹ 
+
‹‹ 
$str	›› å
+››ç é
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ ó
+ÌÌò ô
$strÓÓ î
+ÓÓï ñ
$strÔÔ õ
+ÔÔú ù
$str µ
+∂ ∑
$strÒÒ ú
+ÒÒù û
$strÚÚ ˙
+ÚÚ˚ ¸
$strÛÛ Ê
+ÛÛÁ Ë
$strÙÙ ﬂ
+ÙÙ‡ ·
$strıı ù
+ııû ü
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ Ú
+˝˝Û Ù
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ ˛
+ÑÑˇ Ä
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà ©
+àà™ ´
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ ˛
+ññˇ Ä
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö ©
+öö™ ´
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ í
+§§ì î
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ ˛
+´´ˇ Ä
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ ©
+ØØ™ ´
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ ˛
+ΩΩˇ Ä
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ ©
+¡¡™ ´
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ ï
+≈≈ñ ó
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ ˛
+œœˇ Ä
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” ©
+””™ ´
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ ì
+ÌÌî ï
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strÅÅ  
+ÅÅÀ Ã
$strÇÇ À
+ÇÇÃ Õ
$str
ÉÉ D
+
ÉÉE F
$strÑÑ À
+ÑÑÃ Õ
$strÖÖ ‚
+ÖÖ„ ‰
$strÜÜ À
+ÜÜÃ Õ
$stráá À
+ááÃ Õ
$stràà À
+ààÃ Õ
$strââ À
+ââÃ Õ
$strää £
+ää§ •
$strãã À
+ããÃ Õ
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ
 …
+ññ  À
$stróó À
+óóÃ Õ
$str
òò D
+
òòE F
$strôô À
+ôôÃ Õ
$ströö ‚
+öö„ ‰
$strõõ À
+õõÃ Õ
$strúú À
+úúÃ Õ
$strùù À
+ùùÃ Õ
$strûû À
+ûûÃ Õ
$strüü £
+üü§ •
$str†† À
+††Ã Õ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str
®® @
+
®®A B
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str
∂∂ @
+
∂∂A B
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ ì
+¿¿î ï
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str……  
+……À Ã
$str   À
+  Ã Õ
$str
ÀÀ D
+
ÀÀE F
$strÃÃ À
+ÃÃÃ Õ
$strÕÕ ‚
+ÕÕ„ ‰
$strŒŒ À
+ŒŒÃ Õ
$strœœ À
+œœÃ Õ
$str–– À
+––Ã Õ
$str—— À
+——Ã Õ
$str““ £
+““§ •
$str”” À
+””Ã Õ
$str’’ ê
+’’ë í
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› î
+››ï ñ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ  
+ﬂﬂÀ Ã
$str‡‡ À
+‡‡Ã Õ
$str
·· D
+
··E F
$str‚‚ À
+‚‚Ã Õ
$str„„ ‚
+„„„ ‰
$str‰‰ À
+‰‰Ã Õ
$strÂÂ À
+ÂÂÃ Õ
$strÊÊ À
+ÊÊÃ Õ
$strÁÁ À
+ÁÁÃ Õ
$strËË £
+ËË§ •
$strÈÈ À
+ÈÈÃ Õ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$str
ÔÔ D
+
ÔÔE F
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı ú
+ııù û
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str
¸¸ D
+
¸¸E F
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ ú
+ÇÇù û
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ ì
+ÜÜî ï
$stráá î
+ááï ñ
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå  
+ååÀ Ã
$strçç À
+ççÃ Õ
$str
éé D
+
ééE F
$strèè À
+èèÃ Õ
$strêê ‚
+êê„ ‰
$strëë À
+ëëÃ Õ
$stríí À
+ííÃ Õ
$strìì À
+ììÃ Õ
$strîî À
+îîÃ Õ
$strïï £
+ïï§ •
$strññ À
+ññÃ Õ
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° û
+°°ü †
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ û
+§§ü †
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© û
+©©ü †
$str™™ û
+™™ü †
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ û
+≠≠ü †
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ û
+∞∞ü †
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ û
+≥≥ü †
$str¥¥ í
+¥¥ì î
$strµµ ±
+µµ≤ ≥
$str∂∂ û
+∂∂ü †
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ û
+ππü †
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº û
+ººü †
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø û
+øøü †
$str¿¿ î
+¿¿ï ñ
$str¡¡ ß
+¡¡® ©
$str¬¬ û
+¬¬ü †
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ û
+≈≈ü †
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» û
+»»ü †
$str…… î
+……ï ñ
$str   ®
+  © ™
$strÀÀ û
+ÀÀü †
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$str	ŒŒ î
+ŒŒï ñ
$str	œœ î
+œœï ñ
$str	–– î
+––ï ñ
$str	—— î
+——ï ñ
$str	““ î
+““ï ñ
$str	”” œ
+””– —
$str	‘‘ î
+‘‘ï ñ
$str	’’ î
+’’ï ñ
$str	÷÷ î
+÷÷ï ñ
$str	◊◊ î
+◊◊ï ñ
$str	ÿÿ î
+ÿÿï ñ
$str	ŸŸ î
+ŸŸï ñ
$str	⁄⁄ î
+⁄⁄ï ñ
$str	€€ î
+€€ï ñ
$str	‹‹ î
+‹‹ï ñ
$str	›› î
+››ï ñ
$str	ﬁﬁ î
+ﬁﬁï ñ
$str	ﬂﬂ î
+ﬂﬂï ñ
$str	‡‡ î
+‡‡ï ñ
$str	·· î
+··ï ñ
$str	‚‚ î
+‚‚ï ñ
$str	„„ î
+„„ï ñ
$str	‰‰ î
+‰‰ï ñ
$str	ÂÂ î
+ÂÂï ñ
$str	ÊÊ î
+ÊÊï ñ
$str	ÁÁ î
+ÁÁï ñ
$str	ËË î
+ËËï ñ
$str	ÈÈ î
+ÈÈï ñ
$str	ÍÍ î
+ÍÍï ñ
$str	ÎÎ î
+ÎÎï ñ
$str	ÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ à
+ÓÓâ ä
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ ∆
+ÄÄ« »
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ î
+ÑÑï ñ
$strÖÖ î
+ÖÖï ñ
$str	ÜÜ ø
+ÜÜ¿ ¡
$stráá 
+
áá 
$stràà 
+
àà  
$strââ 
+
ââ  
$strää 
+
ää  
$strãã 
+
ãã  
$stråå 
+
åå  
$strçç 
+
çç  
$stréé 
+
éé  
$strèè 
+
èè  
$strêê 
+
êê  
$strëë 
+
ëë  
$stríí 
+
íí  
$strìì 
+
ìì  
$strîî 
+
îî  
$strïï 
+
ïï  
$str	óó ø
+óó¿ ¡
$str	òò Ã
+òòÕ Œ
$str	ôô À
+ôôÃ Õ
$str	öö Ã
+ööÕ Œ
$str	õõ ü
+õõ† °
$strúú {
+
úú| }
$str	ùù à
+ùùâ ä
$strûû {
+
ûû| }
$str	üü Ã
+üüÕ Œ
$str†† {
+
††| }
$str°° 	
;
°°	 

var
ßß 
tabela
ßß 
=
ßß 
new
ßß &
TabelaDinamicaResultados
ßß 5
(
ßß5 6
)
ßß6 7
;
ßß7 8
var
©© 
where
©© 
=
©© 
string
©© 
.
©© 
Empty
©© $
;
©©$ %
where
™™ 
+=
™™ 
$str
™™ 
;
™™ 
var
∫∫ 
query0
∫∫ 
=
∫∫ 
$str
∫∫ F
+
∫∫G H
$str
ªª +
+
ªª, -
$str
ºº <
+
ºº= >
$str
ΩΩ 9
+
ΩΩ: ;
$str
ææ 1
+
ææ2 3
$str
øø 5
+
øø6 7
$str
¿¿ 1
+
¿¿2 3
$str
¡¡ !
+
¡¡" #
$str
√√ C
+
√√D E
$str
ƒƒ 5
+
ƒƒ6 7
$str
≈≈ :
+
≈≈; <
$str
∆∆ >
+
∆∆? @
$str
»» ,
+
»»- .
$str
…… L
+
……M N
$str
ÀÀ &
+
ÀÀ' (
$str
ÃÃ g
;
ÃÃg h
var
–– 
query1
–– 
=
–– 
$str
–– h
+
––i j
$str—— ¨
+——≠ Æ
$str
““ N
+
““O P
getMetaScore
““Q ]
(
““] ^
)
““^ _
.
““_ `
ToString
““` h
(
““h i
)
““i j
+
““k l
$str““m Å
+““Ç É
$str”” ä
+””ã å
getMetaScore””ç ô
(””ô ö
)””ö õ
.””õ ú
ToString””ú §
(””§ •
)””• ¶
+””ß ®
$str””© ∏
+””π ∫
getMetaScore””ª «
(””« »
)””» …
.””…  
ToString””  “
(””“ ”
)””” ‘
+””’ ÷
$str””◊ ¥
+””µ ∂
$str‘‘ ä
+‘‘ã å
getMetaScore‘‘ç ô
(‘‘ô ö
)‘‘ö õ
.‘‘õ ú
ToString‘‘ú §
(‘‘§ •
)‘‘• ¶
+‘‘ß ®
$str‘‘© π
+‘‘∫ ª
getMetaScore‘‘º »
(‘‘» …
)‘‘…  
.‘‘  À
ToString‘‘À ”
(‘‘” ‘
)‘‘‘ ’
+‘‘÷ ◊
$str‘‘ÿ É
+‘‘Ñ Ö
getMetaScore‘‘Ü í
(‘‘í ì
)‘‘ì î
.‘‘î ï
ToString‘‘ï ù
(‘‘ù û
)‘‘û ü
+‘‘† °
$str‘‘¢ Ì
+‘‘Ó Ô
$str
’’ .
+
’’/ 0
$str
÷÷ <
+
÷÷= >
$str
◊◊ 9
+
◊◊: ;
$str
ÿÿ 1
+
ÿÿ2 3
$str
ŸŸ 5
+
ŸŸ6 7
$str
⁄⁄ 1
+
⁄⁄2 3
$str
€€ !
+
€€" #
$str
›› C
+
››D E
$str
ﬁﬁ 5
+
ﬁﬁ6 7
$str
ﬂﬂ :
+
ﬂﬂ; <
$str
‡‡ >
+
‡‡? @
$str
‚‚ ,
+
‚‚- .
$str
„„ L
+
„„M N
$str
ÂÂ &
+
ÂÂ' (
$str
ÊÊ g
+
ÊÊh i
$str
ËË 1
+
ËË2 3
$str
ÈÈ &
;
ÈÈ& '
var
ÌÌ 
query2
ÌÌ 
=
ÌÌ 
$str
ÓÓ V
+
ÓÓW X
$strÔÔ ¨
+ÔÔ≠ Æ
$str
 N
+
O P
getMetaScore
Q ]
(
] ^
)
^ _
.
_ `
ToString
` h
(
h i
)
i j
+
k l
$strm Å
+Ç É
$strÒÒ ä
+ÒÒã å
getMetaScoreÒÒç ô
(ÒÒô ö
)ÒÒö õ
.ÒÒõ ú
ToStringÒÒú §
(ÒÒ§ •
)ÒÒ• ¶
+ÒÒß ®
$strÒÒ© ∏
+ÒÒπ ∫
getMetaScoreÒÒª «
(ÒÒ« »
)ÒÒ» …
.ÒÒ…  
ToStringÒÒ  “
(ÒÒ“ ”
)ÒÒ” ‘
+ÒÒ’ ÷
$strÒÒ◊ ¥
+ÒÒµ ∂
$strÚÚ ä
+ÚÚã å
getMetaScoreÚÚç ô
(ÚÚô ö
)ÚÚö õ
.ÚÚõ ú
ToStringÚÚú §
(ÚÚ§ •
)ÚÚ• ¶
+ÚÚß ®
$strÚÚ© π
+ÚÚ∫ ª
getMetaScoreÚÚº »
(ÚÚ» …
)ÚÚ…  
.ÚÚ  À
ToStringÚÚÀ ”
(ÚÚ” ‘
)ÚÚ‘ ’
+ÚÚ÷ ◊
$strÚÚÿ É
+ÚÚÑ Ö
getMetaScoreÚÚÜ í
(ÚÚí ì
)ÚÚì î
.ÚÚî ï
ToStringÚÚï ù
(ÚÚù û
)ÚÚû ü
+ÚÚ† °
$strÚÚ¢ Ì
+ÚÚÓ Ô
$str
ÙÙ -
+
ÙÙ. /
$str
ıı <
+
ıı= >
$str
ˆˆ 9
+
ˆˆ: ;
$str
˜˜ 1
+
˜˜2 3
$str
¯¯ 5
+
¯¯6 7
$str
˘˘ 1
+
˘˘2 3
$str
˙˙ !
+
˙˙" #
$str
¸¸ C
+
¸¸D E
$str
˝˝ 5
+
˝˝6 7
$str
˛˛ :
+
˛˛; <
$str
ˇˇ >
+
ˇˇ? @
$str
ÅÅ ,
+
ÅÅ- .
$str
ÇÇ L
+
ÇÇM N
$str
ÑÑ &
+
ÑÑ' (
$str
ÖÖ f
+
ÖÖg h
$str
áá (
+
áá) *
$str
àà #
;
àà# $
var
ãã 
query3
ãã 
=
ãã 
$str
åå X
+
ååY Z
$strçç ¨
+çç≠ Æ
$str
éé N
+
ééO P
getMetaScore
ééQ ]
(
éé] ^
)
éé^ _
.
éé_ `
ToString
éé` h
(
ééh i
)
ééi j
+
éék l
$stréém Å
+ééÇ É
$strèè ä
+èèã å
getMetaScoreèèç ô
(èèô ö
)èèö õ
.èèõ ú
ToStringèèú §
(èè§ •
)èè• ¶
+èèß ®
$strèè© ∏
+èèπ ∫
getMetaScoreèèª «
(èè« »
)èè» …
.èè…  
ToStringèè  “
(èè“ ”
)èè” ‘
+èè’ ÷
$strèè◊ ¥
+èèµ ∂
$strêê ä
+êêã å
getMetaScoreêêç ô
(êêô ö
)êêö õ
.êêõ ú
ToStringêêú §
(êê§ •
)êê• ¶
+êêß ®
$strêê© π
+êê∫ ª
getMetaScoreêêº »
(êê» …
)êê…  
.êê  À
ToStringêêÀ ”
(êê” ‘
)êê‘ ’
+êê÷ ◊
$strêêÿ É
+êêÑ Ö
getMetaScoreêêÜ í
(êêí ì
)êêì î
.êêî ï
ToStringêêï ù
(êêù û
)êêû ü
+êê† °
$strêê¢ Ì
+êêÓ Ô
$str
íí -
+
íí. /
$str
ìì <
+
ìì= >
$str
îî 9
+
îî: ;
$str
ïï 1
+
ïï2 3
$str
ññ 5
+
ññ6 7
$str
óó 1
+
óó2 3
$str
òò !
+
òò" #
$str
öö C
+
ööD E
$str
õõ 5
+
õõ6 7
$str
úú :
+
úú; <
$str
ùù >
+
ùù? @
$str
üü ,
+
üü- .
$str
†† L
+
††M N
$str
¢¢ &
+
¢¢' (
$str
££ g
+
££h i
$str
•• )
+
••* +
$str
¶¶ #
;
¶¶# $
var
©© 
query4
©© 
=
©© 
$str
™™ Y
+
™™Z [
$str´´ ¨
+´´≠ Æ
$str
¨¨ N
+
¨¨O P
getMetaScore
¨¨Q ]
(
¨¨] ^
)
¨¨^ _
.
¨¨_ `
ToString
¨¨` h
(
¨¨h i
)
¨¨i j
+
¨¨k l
$str¨¨m Å
+¨¨Ç É
$str≠≠ ä
+≠≠ã å
getMetaScore≠≠ç ô
(≠≠ô ö
)≠≠ö õ
.≠≠õ ú
ToString≠≠ú §
(≠≠§ •
)≠≠• ¶
+≠≠ß ®
$str≠≠© ∏
+≠≠π ∫
getMetaScore≠≠ª «
(≠≠« »
)≠≠» …
.≠≠…  
ToString≠≠  “
(≠≠“ ”
)≠≠” ‘
+≠≠’ ÷
$str≠≠◊ ¥
+≠≠µ ∂
$strÆÆ ä
+ÆÆã å
getMetaScoreÆÆç ô
(ÆÆô ö
)ÆÆö õ
.ÆÆõ ú
ToStringÆÆú §
(ÆÆ§ •
)ÆÆ• ¶
+ÆÆß ®
$strÆÆ© π
+ÆÆ∫ ª
getMetaScoreÆÆº »
(ÆÆ» …
)ÆÆ…  
.ÆÆ  À
ToStringÆÆÀ ”
(ÆÆ” ‘
)ÆÆ‘ ’
+ÆÆ÷ ◊
$strÆÆÿ É
+ÆÆÑ Ö
getMetaScoreÆÆÜ í
(ÆÆí ì
)ÆÆì î
.ÆÆî ï
ToStringÆÆï ù
(ÆÆù û
)ÆÆû ü
+ÆÆ† °
$strÆÆ¢ Ì
+ÆÆÓ Ô
$str
∞∞ -
+
∞∞. /
$str
±± <
+
±±= >
$str
≤≤ 9
+
≤≤: ;
$str
≥≥ 1
+
≥≥2 3
$str
¥¥ 5
+
¥¥6 7
$str
µµ 1
+
µµ2 3
$str
∂∂ !
+
∂∂" #
$str
∏∏ C
+
∏∏D E
$str
ππ 5
+
ππ6 7
$str
∫∫ :
+
∫∫; <
$str
ªª >
+
ªª? @
$str
ΩΩ ,
+
ΩΩ- .
$str
ææ L
+
ææM N
$str
¿¿ &
+
¿¿' (
$str
¡¡ g
+
¡¡h i
$str
√√ 
;
√√ 
var
«« 
query6
«« 
=
«« 
$str«« ™
+««´ ¨
$str
»» +
+
»», -
$str
…… <
+
……= >
$str
   9
+
  : ;
$str
ÀÀ 1
+
ÀÀ2 3
$str
ÃÃ 5
+
ÃÃ6 7
$str
ÕÕ 1
+
ÕÕ2 3
$str
ŒŒ !
+
ŒŒ" #
$str
–– C
+
––D E
$str
—— 5
+
——6 7
$str
““ :
+
““; <
$str
”” >
+
””? @
$str
’’ ,
+
’’- .
$str
÷÷ L
+
÷÷M N
$str
ÿÿ &
+
ÿÿ' (
$str
ŸŸ g
+
ŸŸh i
$str
⁄⁄ )
;
⁄⁄) *
var
‹‹ 
orderby
‹‹ 
=
‹‹ 
$str
‹‹ /
;
‹‹/ 0
var
ﬁﬁ 
db
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
SgqDbDevEntities
ﬁﬁ )
(
ﬁﬁ) *
)
ﬁﬁ* +
;
ﬁﬁ+ ,
string
ﬂﬂ 
grandeQuery
ﬂﬂ 
=
ﬂﬂ  
query
ﬂﬂ! &
+
ﬂﬂ' (
$str
ﬂﬂ) ,
+
ﬂﬂ- .
query1
ﬂﬂ/ 5
+
ﬂﬂ6 7
$str
ﬂﬂ8 I
+
ﬂﬂJ K
query2
ﬂﬂL R
+
ﬂﬂS T
$str
ﬂﬂU f
+
ﬂﬂg h
query3
ﬂﬂi o
+
ﬂﬂp q
$strﬂﬂr É
+ﬂﬂÑ Ö
query4ﬂﬂÜ å
+ﬂﬂç é
$strﬂﬂè †
+ﬂﬂ° ¢
query6ﬂﬂ£ ©
+ﬂﬂ™ ´
orderbyﬂﬂ¨ ≥
;ﬂﬂ≥ ¥
var
·· 
result
·· 
=
·· 
db
·· 
.
·· 
Database
·· $
.
··$ %
SqlQuery
··% -
<
··- .
ResultQuery1
··. :
>
··: ;
(
··; <
grandeQuery
··< G
)
··G H
.
··H I
ToList
··I O
(
··O P
)
··P Q
;
··Q R
var
ÈÈ 
result1
ÈÈ 
=
ÈÈ 
result
ÈÈ  
.
ÈÈ  !
Where
ÈÈ! &
(
ÈÈ& '
r
ÈÈ' (
=>
ÈÈ) +
r
ÈÈ, -
.
ÈÈ- .
QUERY
ÈÈ. 3
==
ÈÈ4 6
$num
ÈÈ7 8
)
ÈÈ8 9
.
ÈÈ9 :
ToList
ÈÈ: @
(
ÈÈ@ A
)
ÈÈA B
;
ÈÈB C
var
ÍÍ 
result2
ÍÍ 
=
ÍÍ 
result
ÍÍ  
.
ÍÍ  !
Where
ÍÍ! &
(
ÍÍ& '
r
ÍÍ' (
=>
ÍÍ) +
r
ÍÍ, -
.
ÍÍ- .
QUERY
ÍÍ. 3
==
ÍÍ4 6
$num
ÍÍ7 8
)
ÍÍ8 9
.
ÍÍ9 :
ToList
ÍÍ: @
(
ÍÍ@ A
)
ÍÍA B
;
ÍÍB C
var
ÎÎ 
result3
ÎÎ 
=
ÎÎ 
result
ÎÎ  
.
ÎÎ  !
Where
ÎÎ! &
(
ÎÎ& '
r
ÎÎ' (
=>
ÎÎ) +
r
ÎÎ, -
.
ÎÎ- .
QUERY
ÎÎ. 3
==
ÎÎ4 6
$num
ÎÎ7 8
)
ÎÎ8 9
.
ÎÎ9 :
ToList
ÎÎ: @
(
ÎÎ@ A
)
ÎÎA B
;
ÎÎB C
var
ÏÏ 
result4
ÏÏ 
=
ÏÏ 
result
ÏÏ  
.
ÏÏ  !
Where
ÏÏ! &
(
ÏÏ& '
r
ÏÏ' (
=>
ÏÏ) +
r
ÏÏ, -
.
ÏÏ- .
QUERY
ÏÏ. 3
==
ÏÏ4 6
$num
ÏÏ7 8
)
ÏÏ8 9
.
ÏÏ9 :
ToList
ÏÏ: @
(
ÏÏ@ A
)
ÏÏA B
;
ÏÏB C
var
ÌÌ 
queryRowsBody
ÌÌ 
=
ÌÌ 
result
ÌÌ  &
.
ÌÌ& '
Where
ÌÌ' ,
(
ÌÌ, -
r
ÌÌ- .
=>
ÌÌ/ 1
r
ÌÌ2 3
.
ÌÌ3 4
QUERY
ÌÌ4 9
==
ÌÌ: <
$num
ÌÌ= >
)
ÌÌ> ?
.
ÌÌ? @
ToList
ÌÌ@ F
(
ÌÌF G
)
ÌÌG H
;
ÌÌH I
tabela
ÙÙ 
.
ÙÙ 
trsCabecalho1
ÙÙ  
=
ÙÙ! "
new
ÙÙ# &
List
ÙÙ' +
<
ÙÙ+ ,
Ths
ÙÙ, /
>
ÙÙ/ 0
(
ÙÙ0 1
)
ÙÙ1 2
;
ÙÙ2 3
tabela
ıı 
.
ıı 
trsCabecalho1
ıı  
.
ıı  !
Add
ıı! $
(
ıı$ %
new
ıı% (
Ths
ıı) ,
(
ıı, -
)
ıı- .
{
ıı/ 0
name
ıı1 5
=
ıı6 7
$str
ıı8 :
}
ıı; <
)
ıı< =
;
ıı= >
tabela
ˆˆ 
.
ˆˆ 
trsCabecalho1
ˆˆ  
.
ˆˆ  !
Add
ˆˆ! $
(
ˆˆ$ %
new
ˆˆ% (
Ths
ˆˆ) ,
(
ˆˆ, -
)
ˆˆ- .
{
ˆˆ/ 0
name
ˆˆ1 5
=
ˆˆ6 7
$str
ˆˆ8 :
}
ˆˆ; <
)
ˆˆ< =
;
ˆˆ= >
tabela
ÖÖ 
.
ÖÖ 
trsCabecalho2
ÖÖ  
=
ÖÖ! "
db
ÖÖ# %
.
ÖÖ% &
Database
ÖÖ& .
.
ÖÖ. /
SqlQuery
ÖÖ/ 7
<
ÖÖ7 8
Ths
ÖÖ8 ;
>
ÖÖ; <
(
ÖÖ< =
query
ÖÖ= B
+
ÖÖC D
$str
ÖÖE H
+
ÖÖI J
query0
ÖÖK Q
)
ÖÖQ R
.
ÖÖR S
OrderBy
ÖÖS Z
(
ÖÖZ [
r
ÖÖ[ \
=>
ÖÖ] _
r
ÖÖ` a
.
ÖÖa b
name
ÖÖb f
)
ÖÖf g
.
ÖÖg h
ToList
ÖÖh n
(
ÖÖn o
)
ÖÖo p
;
ÖÖp q
var
áá 
thsMeio
áá 
=
áá 
new
áá 
List
áá "
<
áá" #
Ths
áá# &
>
áá& '
(
áá' (
)
áá( )
;
áá) *
thsMeio
àà 
.
àà 
Add
àà 
(
àà 
new
àà 
Ths
àà 
(
àà  
)
àà  !
{
àà" #
name
àà$ (
=
àà) *
$str
àà+ .
,
àà. /
coolspan
àà0 8
=
àà9 :
$num
àà; <
}
àà= >
)
àà> ?
;
àà? @
thsMeio
ââ 
.
ââ 
Add
ââ 
(
ââ 
new
ââ 
Ths
ââ 
(
ââ  
)
ââ  !
{
ââ" #
name
ââ$ (
=
ââ) *
$str
ââ+ .
,
ââ. /
coolspan
ââ0 8
=
ââ9 :
$num
ââ; <
}
ââ= >
)
ââ> ?
;
ââ? @
thsMeio
ää 
.
ää 
Add
ää 
(
ää 
new
ää 
Ths
ää 
(
ää  
)
ää  !
{
ää" #
name
ää$ (
=
ää) *
$str
ää+ .
,
ää. /
coolspan
ää0 8
=
ää9 :
$num
ää; <
}
ää= >
)
ää> ?
;
ää? @
thsMeio
ãã 
.
ãã 
Add
ãã 
(
ãã 
new
ãã 
Ths
ãã 
(
ãã  
)
ãã  !
{
ãã" #
name
ãã$ (
=
ãã) *
$str
ãã+ .
,
ãã. /
coolspan
ãã0 8
=
ãã9 :
$num
ãã; <
}
ãã= >
)
ãã> ?
;
ãã? @
foreach
çç 
(
çç 
var
çç 
i
çç 
in
çç 
tabela
çç $
.
çç$ %
trsCabecalho2
çç% 2
)
çç2 3
i
éé 
.
éé 
tds
éé 
=
éé 
thsMeio
éé 
;
éé  
tabela
êê 
.
êê 
trsCabecalho3
êê  
=
êê! "
new
êê# &
List
êê' +
<
êê+ ,
Ths
êê, /
>
êê/ 0
(
êê0 1
)
êê1 2
;
êê2 3
tabela
ëë 
.
ëë 
trsCabecalho3
ëë  
.
ëë  !
Add
ëë! $
(
ëë$ %
new
ëë% (
Ths
ëë) ,
(
ëë, -
)
ëë- .
{
ëë/ 0
name
ëë1 5
=
ëë6 7
$str
ëë8 ?
,
ëë? @
coolspan
ëëA I
=
ëëJ K
$num
ëëL M
,
ëëM N
tds
ëëO R
=
ëëS T
thsMeio
ëëU \
}
ëë] ^
)
ëë^ _
;
ëë_ `
tabela
òò 
.
òò 
trsMeio
òò 
=
òò 
new
òò  
List
òò! %
<
òò% &
Trs
òò& )
>
òò) *
(
òò* +
)
òò+ ,
;
òò, -
foreach
”” 
(
”” 
var
”” 
i
”” 
in
”” 
queryRowsBody
”” +
)
””+ ,
{
‘‘ 
var
÷÷ 
filtro
÷÷ 
=
÷÷ 
result1
÷÷ $
.
÷÷$ %
Where
÷÷% *
(
÷÷* +
r
÷÷+ ,
=>
÷÷- /
r
÷÷0 1
.
÷÷1 2
CLASSIFIC_NEGOCIO
÷÷2 C
.
÷÷C D
Equals
÷÷D J
(
÷÷J K
i
÷÷K L
.
÷÷L M
CLASSIFIC_NEGOCIO
÷÷M ^
)
÷÷^ _
)
÷÷_ `
.
÷÷` a
ToList
÷÷a g
(
÷÷g h
)
÷÷h i
;
÷÷i j
var
◊◊ 
Tr
◊◊ 
=
◊◊ 
new
◊◊ 
Trs
◊◊  
(
◊◊  !
)
◊◊! "
{
ÿÿ 
name
ŸŸ 
=
ŸŸ 
i
ŸŸ 
.
ŸŸ 
CLASSIFIC_NEGOCIO
ŸŸ .
,
ŸŸ. /
tdsEsquerda
⁄⁄ 
=
⁄⁄  !
new
⁄⁄" %
List
⁄⁄& *
<
⁄⁄* +
Tds
⁄⁄+ .
>
⁄⁄. /
(
⁄⁄/ 0
)
⁄⁄0 1
,
⁄⁄1 2

tdsDireita
€€ 
=
€€  
new
€€! $
List
€€% )
<
€€) *
Tds
€€* -
>
€€- .
(
€€. /
)
€€/ 0
}
‹‹ 
;
‹‹ 
filtro
‰‰ 
=
‰‰ 
filtro
‰‰ 
.
‰‰  
OrderBy
‰‰  '
(
‰‰' (
r
‰‰( )
=>
‰‰* ,
r
‰‰- .
.
‰‰. /
MACROPROCESSO
‰‰/ <
)
‰‰< =
.
‰‰= >
ToList
‰‰> D
(
‰‰D E
)
‰‰E F
;
‰‰F G
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
ii
ÂÂ 
in
ÂÂ  "
filtro
ÂÂ# )
)
ÂÂ) *
{
ÊÊ 
Tr
ÁÁ 
.
ÁÁ 
tdsEsquerda
ÁÁ "
.
ÁÁ" #
Add
ÁÁ# &
(
ÁÁ& '
new
ÁÁ' *
Tds
ÁÁ+ .
(
ÁÁ. /
)
ÁÁ/ 0
{
ÁÁ1 2
valor
ÁÁ3 8
=
ÁÁ9 :
ii
ÁÁ; =
.
ÁÁ= >
REAL
ÁÁ> B
.
ÁÁB C
ToString
ÁÁC K
(
ÁÁK L
)
ÁÁL M
}
ÁÁN O
)
ÁÁO P
;
ÁÁP Q
Tr
ËË 
.
ËË 
tdsEsquerda
ËË "
.
ËË" #
Add
ËË# &
(
ËË& '
new
ËË' *
Tds
ËË+ .
(
ËË. /
)
ËË/ 0
{
ËË1 2
valor
ËË3 8
=
ËË9 :
ii
ËË; =
.
ËË= >
ORCADO
ËË> D
.
ËËD E
ToString
ËËE M
(
ËËM N
)
ËËN O
}
ËËP Q
)
ËËQ R
;
ËËR S
Tr
ÈÈ 
.
ÈÈ 
tdsEsquerda
ÈÈ "
.
ÈÈ" #
Add
ÈÈ# &
(
ÈÈ& '
new
ÈÈ' *
Tds
ÈÈ+ .
(
ÈÈ. /
)
ÈÈ/ 0
{
ÈÈ1 2
valor
ÈÈ3 8
=
ÈÈ9 :
ii
ÈÈ; =
.
ÈÈ= >
DESVIO
ÈÈ> D
.
ÈÈD E
ToString
ÈÈE M
(
ÈÈM N
)
ÈÈN O
}
ÈÈP Q
)
ÈÈQ R
;
ÈÈR S
Tr
ÍÍ 
.
ÍÍ 
tdsEsquerda
ÍÍ "
.
ÍÍ" #
Add
ÍÍ# &
(
ÍÍ& '
new
ÍÍ' *
Tds
ÍÍ+ .
(
ÍÍ. /
)
ÍÍ/ 0
{
ÍÍ1 2
valor
ÍÍ3 8
=
ÍÍ9 :
ii
ÍÍ; =
.
ÍÍ= >
DESVIOPERCENTUAL
ÍÍ> N
.
ÍÍN O
ToString
ÍÍO W
(
ÍÍW X
)
ÍÍX Y
}
ÍÍZ [
)
ÍÍ[ \
;
ÍÍ\ ]
}
ÎÎ 
filtro
ÒÒ 
=
ÒÒ 
result2
ÒÒ  
.
ÒÒ  !
Where
ÒÒ! &
(
ÒÒ& '
r
ÒÒ' (
=>
ÒÒ) +
r
ÒÒ, -
.
ÒÒ- .
CLASSIFIC_NEGOCIO
ÒÒ. ?
.
ÒÒ? @
Equals
ÒÒ@ F
(
ÒÒF G
i
ÒÒG H
.
ÒÒH I
CLASSIFIC_NEGOCIO
ÒÒI Z
)
ÒÒZ [
)
ÒÒ[ \
.
ÒÒ\ ]
ToList
ÒÒ] c
(
ÒÒc d
)
ÒÒd e
;
ÒÒe f
foreach
ÚÚ 
(
ÚÚ 
var
ÚÚ 
ii
ÚÚ 
in
ÚÚ  "
filtro
ÚÚ# )
)
ÚÚ) *
{
ÛÛ 
Tr
ÙÙ 
.
ÙÙ 

tdsDireita
ÙÙ !
.
ÙÙ! "
Add
ÙÙ" %
(
ÙÙ% &
new
ÙÙ& )
Tds
ÙÙ* -
(
ÙÙ- .
)
ÙÙ. /
{
ÙÙ0 1
valor
ÙÙ2 7
=
ÙÙ8 9
ii
ÙÙ: <
.
ÙÙ< =
REAL
ÙÙ= A
.
ÙÙA B
ToString
ÙÙB J
(
ÙÙJ K
)
ÙÙK L
}
ÙÙM N
)
ÙÙN O
;
ÙÙO P
Tr
ıı 
.
ıı 

tdsDireita
ıı !
.
ıı! "
Add
ıı" %
(
ıı% &
new
ıı& )
Tds
ıı* -
(
ıı- .
)
ıı. /
{
ıı0 1
valor
ıı2 7
=
ıı8 9
ii
ıı: <
.
ıı< =
ORCADO
ıı= C
.
ııC D
ToString
ııD L
(
ııL M
)
ııM N
}
ııO P
)
ııP Q
;
ııQ R
Tr
ˆˆ 
.
ˆˆ 

tdsDireita
ˆˆ !
.
ˆˆ! "
Add
ˆˆ" %
(
ˆˆ% &
new
ˆˆ& )
Tds
ˆˆ* -
(
ˆˆ- .
)
ˆˆ. /
{
ˆˆ0 1
valor
ˆˆ2 7
=
ˆˆ8 9
ii
ˆˆ: <
.
ˆˆ< =
DESVIO
ˆˆ= C
.
ˆˆC D
ToString
ˆˆD L
(
ˆˆL M
)
ˆˆM N
}
ˆˆO P
)
ˆˆP Q
;
ˆˆQ R
Tr
˜˜ 
.
˜˜ 

tdsDireita
˜˜ !
.
˜˜! "
Add
˜˜" %
(
˜˜% &
new
˜˜& )
Tds
˜˜* -
(
˜˜- .
)
˜˜. /
{
˜˜0 1
valor
˜˜2 7
=
˜˜8 9
ii
˜˜: <
.
˜˜< =
DESVIOPERCENTUAL
˜˜= M
.
˜˜M N
ToString
˜˜N V
(
˜˜V W
)
˜˜W X
}
˜˜Y Z
)
˜˜Z [
;
˜˜[ \
}
¯¯ 
tabela
¸¸ 
.
¸¸ 
trsMeio
¸¸ 
.
¸¸ 
Add
¸¸ "
(
¸¸" #
Tr
¸¸# %
)
¸¸% &
;
¸¸& '
}
˝˝ 
var
ÉÉ 
queryRowsFooter
ÉÉ 
=
ÉÉ  !
new
ÉÉ" %
List
ÉÉ& *
<
ÉÉ* +
string
ÉÉ+ 1
>
ÉÉ1 2
(
ÉÉ2 3
)
ÉÉ3 4
;
ÉÉ4 5
queryRowsFooter
ÑÑ 
.
ÑÑ 
Add
ÑÑ 
(
ÑÑ  
$str
ÑÑ  '
)
ÑÑ' (
;
ÑÑ( )
tabela
ÖÖ 
.
ÖÖ 
footer
ÖÖ 
=
ÖÖ 
new
ÖÖ 
List
ÖÖ  $
<
ÖÖ$ %
Trs
ÖÖ% (
>
ÖÖ( )
(
ÖÖ) *
)
ÖÖ* +
;
ÖÖ+ ,
foreach
ÜÜ 
(
ÜÜ 
var
ÜÜ 
i
ÜÜ 
in
ÜÜ 
queryRowsFooter
ÜÜ -
)
ÜÜ- .
{
áá 
var
ââ 
Tr
ââ 
=
ââ 
new
ââ 
Trs
ââ  
(
ââ  !
)
ââ! "
{
ää 
name
ãã 
=
ãã 
i
ãã 
,
ãã 
tdsEsquerda
åå 
=
åå  !
new
åå" %
List
åå& *
<
åå* +
Tds
åå+ .
>
åå. /
(
åå/ 0
)
åå0 1
,
åå1 2

tdsDireita
çç 
=
çç  
new
çç! $
List
çç% )
<
çç) *
Tds
çç* -
>
çç- .
(
çç. /
)
çç/ 0
}
éé 
;
éé 
foreach
íí 
(
íí 
var
íí 
ii
íí 
in
íí  "
result3
íí# *
)
íí* +
{
ìì 
Tr
îî 
.
îî 
tdsEsquerda
îî "
.
îî" #
Add
îî# &
(
îî& '
new
îî' *
Tds
îî+ .
(
îî. /
)
îî/ 0
{
îî1 2
valor
îî3 8
=
îî9 :
ii
îî; =
.
îî= >
REAL
îî> B
.
îîB C
ToString
îîC K
(
îîK L
)
îîL M
}
îîN O
)
îîO P
;
îîP Q
Tr
ïï 
.
ïï 
tdsEsquerda
ïï "
.
ïï" #
Add
ïï# &
(
ïï& '
new
ïï' *
Tds
ïï+ .
(
ïï. /
)
ïï/ 0
{
ïï1 2
valor
ïï3 8
=
ïï9 :
ii
ïï; =
.
ïï= >
ORCADO
ïï> D
.
ïïD E
ToString
ïïE M
(
ïïM N
)
ïïN O
}
ïïP Q
)
ïïQ R
;
ïïR S
Tr
ññ 
.
ññ 
tdsEsquerda
ññ "
.
ññ" #
Add
ññ# &
(
ññ& '
new
ññ' *
Tds
ññ+ .
(
ññ. /
)
ññ/ 0
{
ññ1 2
valor
ññ3 8
=
ññ9 :
ii
ññ; =
.
ññ= >
DESVIO
ññ> D
.
ññD E
ToString
ññE M
(
ññM N
)
ññN O
}
ññP Q
)
ññQ R
;
ññR S
Tr
óó 
.
óó 
tdsEsquerda
óó "
.
óó" #
Add
óó# &
(
óó& '
new
óó' *
Tds
óó+ .
(
óó. /
)
óó/ 0
{
óó1 2
valor
óó3 8
=
óó9 :
ii
óó; =
.
óó= >
DESVIOPERCENTUAL
óó> N
.
óóN O
ToString
óóO W
(
óóW X
)
óóX Y
}
óóZ [
)
óó[ \
;
óó\ ]
}
òò 
foreach
ûû 
(
ûû 
var
ûû 
ii
ûû 
in
ûû  "
result4
ûû# *
)
ûû* +
{
üü 
Tr
†† 
.
†† 

tdsDireita
†† !
.
††! "
Add
††" %
(
††% &
new
††& )
Tds
††* -
(
††- .
)
††. /
{
††0 1
valor
††2 7
=
††8 9
ii
††: <
.
††< =
REAL
††= A
.
††A B
ToString
††B J
(
††J K
)
††K L
}
††M N
)
††N O
;
††O P
Tr
°° 
.
°° 

tdsDireita
°° !
.
°°! "
Add
°°" %
(
°°% &
new
°°& )
Tds
°°* -
(
°°- .
)
°°. /
{
°°0 1
valor
°°2 7
=
°°8 9
ii
°°: <
.
°°< =
ORCADO
°°= C
.
°°C D
ToString
°°D L
(
°°L M
)
°°M N
}
°°O P
)
°°P Q
;
°°Q R
Tr
¢¢ 
.
¢¢ 

tdsDireita
¢¢ !
.
¢¢! "
Add
¢¢" %
(
¢¢% &
new
¢¢& )
Tds
¢¢* -
(
¢¢- .
)
¢¢. /
{
¢¢0 1
valor
¢¢2 7
=
¢¢8 9
ii
¢¢: <
.
¢¢< =
DESVIO
¢¢= C
.
¢¢C D
ToString
¢¢D L
(
¢¢L M
)
¢¢M N
}
¢¢O P
)
¢¢P Q
;
¢¢Q R
Tr
££ 
.
££ 

tdsDireita
££ !
.
££! "
Add
££" %
(
££% &
new
££& )
Tds
££* -
(
££- .
)
££. /
{
££0 1
valor
££2 7
=
££8 9
ii
££: <
.
££< =
DESVIOPERCENTUAL
££= M
.
££M N
ToString
££N V
(
££V W
)
££W X
}
££Y Z
)
££Z [
;
££[ \
}
§§ 
tabela
®® 
.
®® 
footer
®® 
.
®® 
Add
®® !
(
®®! "
Tr
®®" $
)
®®$ %
;
®®% &
}
©© 
return
≠≠ 
tabela
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
∞∞ &
TabelaDinamicaResultados
∞∞ '
GetTbl2SemGrupos
∞∞( 8
(
∞∞8 9#
DataCarrierFormulario
∞∞9 N
form
∞∞O S
)
∞∞S T
{
±± 	
var
ππ 
query
ππ 
=
ππ 
$str
ππ 
+
ππ 
$str	ΩΩ Ã
+ΩΩÕ Œ
$str	ææ °
+ææ¢ £
$str	øø ã
+øøå ç
$str¿¿ {
+
¿¿| }
$str	¡¡ ã
+¡¡å ç
$str	¬¬ à
+¬¬â ä
$str	√√ í
+√√ì î
$str	ƒƒ â
+ƒƒä ã
$str	≈≈ ì
+≈≈î ï
$str	∆∆ ç
+∆∆é è
$str	«« ï
+««ñ ó
$str	»» ç
+»»é è
$str	…… ó
+……ò ô
$str	   â
+  ä ã
$str	ÀÀ í
+ÀÀì î
$str	ÃÃ â
+ÃÃä ã
$str	ÕÕ ì
+ÕÕî ï
$str	ŒŒ å
+ŒŒç é
$str	œœ å
+œœç é
$str	–– è
+––ê ë
$str	—— ñ
+——ó ò
$str	““ ç
+““é è
$str	”” ç
+””é è
$str	‘‘ ñ
+‘‘ó ò
$str	’’ ë
+’’í ì
$str÷÷ #
+
÷÷$ %
$str◊◊  
+
◊◊! "
$strÿÿ |
+
ÿÿ} ~
$strŸŸ {
+
ŸŸ| }
$str⁄⁄ {
+
⁄⁄| }
$str€€ {
+
€€| }
$str	‹‹ â
+‹‹ä ã
$str›› {
+
››| }
$str	ﬁﬁ ã
+ﬁﬁå ç
$strﬂﬂ }
+
ﬂﬂ~ 
$str‡‡ z
+
‡‡{ |
$str·· ~
+·· Ä
$str‚‚ (
+
‚‚) *
form
‚‚+ /
.
‚‚/ 0
_dataInicioSQL
‚‚0 >
+
‚‚? @
$str‚‚A “
+‚‚” ‘
$str„„ (
+
„„) *
form
„„+ /
.
„„/ 0
_dataFimSQL
„„0 ;
+
„„< =
$str„„> œ
+„„– —
$str
ËË 1
+
ËË2 3
$str
ÍÍ '
+
ÍÍ( )
$str
ÎÎ )
+
ÎÎ* +
$str
ÏÏ "
+
ÏÏ# $
$str
ÌÌ %
+
ÌÌ& '
$str
ÓÓ 
+
ÓÓ 
$str
ÒÒ /
+
ÒÒ0 1
$str
¯¯  
+
¯¯! "
$str
˙˙ )
+
˙˙* +
$str
˚˚ 8
+
˚˚9 :
$str¸¸ É
+¸¸Ñ Ö
$str
˝˝ @
+
˝˝A B
$str
ÅÅ ;
+
ÅÅ< =
$str
ÇÇ ;
+
ÇÇ< =
$str
ÉÉ 4
+
ÉÉ5 6
$str
ÖÖ ;
+
ÖÖ< =
$str
ÜÜ -
+
ÜÜ. /
$str
áá U
+
ááV W
$str
àà 3
+
àà4 5
$str
ââ /
+
ââ0 1
$str
ää <
+
ää= >
$str
ãã 4
+
ãã5 6
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ î
+ññï ñ
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö î
+ööï ñ
$str	úú ø
+úú¿ ¡
$str	ùù ø
+ùù¿ ¡
$str	ûû Ã
+ûûÕ Œ
$str	üü Ã
+üüÕ Œ
$str	†† Ã
+††Õ Œ
$str	°° Ã
+°°Õ Œ
$str	¢¢ Ã
+¢¢Õ Œ
$str	££ Ã
+££Õ Œ
$str	§§ Ã
+§§Õ Œ
$str	•• Ã
+••Õ Œ
$str	¶¶ Ã
+¶¶Õ Œ
$str	ßß Ã
+ßßÕ Œ
$str	®® Ã
+®®Õ Œ
$str	©© Ã
+©©Õ Œ
$str	™™ Ã
+™™Õ Œ
$str	´´ Ω
+´´æ ø
$str	¨¨ ¿
+¨¨¡ ¬
$str	≠≠ Ã
+≠≠Õ Œ
$str	ÆÆ Ã
+ÆÆÕ Œ
$str	ØØ Ã
+ØØÕ Œ
$str	∞∞ Ã
+∞∞Õ Œ
$str	±± Ã
+±±Õ Œ
$str	≤≤ Ã
+≤≤Õ Œ
$str	≥≥ Ã
+≥≥Õ Œ
$str	¥¥ Ã
+¥¥Õ Œ
$str	µµ Ã
+µµÕ Œ
$str	∂∂ Ã
+∂∂Õ Œ
$str	∑∑ Ã
+∑∑Õ Œ
$str	∏∏ Ã
+∏∏Õ Œ
$str	ππ Ã
+ππÕ Œ
$str	∫∫ Ã
+∫∫Õ Œ
$str	ªª Ã
+ªªÕ Œ
$str	ºº Ã
+ººÕ Œ
$str	ΩΩ Ã
+ΩΩÕ Œ
$str	ææ Ã
+ææÕ Œ
$str	øø Ã
+øøÕ Œ
$str	¿¿ Ã
+¿¿Õ Œ
$str	¡¡ Ã
+¡¡Õ Œ
$str	¬¬ Ã
+¬¬Õ Œ
$str	√√ Ã
+√√Õ Œ
$str	ƒƒ Ã
+ƒƒÕ Œ
$str	≈≈ Ã
+≈≈Õ Œ
$str	∆∆ Ã
+∆∆Õ Œ
$str	«« Ã
+««Õ Œ
$str	»» Ã
+»»Õ Œ
$str	…… Ã
+……Õ Œ
$str	   Ã
+  Õ Œ
$str	ÀÀ Ã
+ÀÀÕ Œ
$str	ÃÃ Ã
+ÃÃÕ Œ
$str	ÕÕ Ã
+ÕÕÕ Œ
$str	ŒŒ Ã
+ŒŒÕ Œ
$str	œœ Ã
+œœÕ Œ
$str	–– Ã
+––Õ Œ
$str	—— Ã
+——Õ Œ
$str	““ Ã
+““Õ Œ
$str	”” Ã
+””Õ Œ
$str	‘‘ Ã
+‘‘Õ Œ
$str	’’ Ã
+’’Õ Œ
$str	÷÷ Ã
+÷÷Õ Œ
$str	◊◊ Ã
+◊◊Õ Œ
$str	ÿÿ Ã
+ÿÿÕ Œ
$str	ŸŸ Ã
+ŸŸÕ Œ
$str	⁄⁄ Ã
+⁄⁄Õ Œ
$str	€€ ø
+€€¿ ¡
$str	‹‹ ø
+‹‹¿ ¡
$str	›› Ã
+››Õ Œ
$str	ﬁﬁ …
+ﬁﬁ  À
$str	ﬂﬂ ⁄
+ﬂﬂ€ ‹
$str	‡‡ Ã
+‡‡Õ Œ
$str	·· ø
+··¿ ¡
$str	‚‚ ÿ
+‚‚Ÿ ⁄
$str	„„ Ã
+„„Õ Œ
$str	‰‰ Ã
+‰‰Õ Œ
$str	ÂÂ …
+ÂÂ  À
$str	ÊÊ …
+ÊÊ  À
$str	ÁÁ Ã
+ÁÁÕ Œ
$str	ËË ø
+ËË¿ ¡
$str	ÈÈ Ã
+ÈÈÕ Œ
$str	ÍÍ Ã
+ÍÍÕ Œ
$str	ÎÎ …
+ÎÎ  À
$str	ÏÏ …
+ÏÏ  À
$str	ÌÌ …
+ÌÌ  À
$str	ÓÓ …
+ÓÓ  À
$str	ÔÔ Ã
+ÔÔÕ Œ
$str 
+
 
$strÒÒ ◊
+ÒÒÿ Ÿ
$str	ÚÚ Ã
+ÚÚÕ Œ
$str	ÛÛ …
+ÛÛ  À
$str	ÙÙ …
+ÙÙ  À
$str	ıı Ã
+ııÕ Œ
$str	ˆˆ ≥
+ˆˆ¥ µ
$str	˜˜ ø
+˜˜¿ ¡
$str	¯¯ Ã
+¯¯Õ Œ
$str	˘˘ ∂
+˘˘∑ ∏
$str	˙˙ ∫
+˙˙ª º
$str	˚˚ ∫
+˚˚ª º
$str	¸¸ ∫
+¸¸ª º
$str	˝˝ Ã
+˝˝Õ Œ
$str	˛˛ ≥
+˛˛¥ µ
$str	ˇˇ ∫
+ˇˇª º
$str	ÄÄ ∫
+ÄÄª º
$str	ÅÅ ∫
+ÅÅª º
$str	ÇÇ ∫
+ÇÇª º
$str	ÉÉ ∫
+ÉÉª º
$str	ÑÑ º
+ÑÑΩ æ
$str	ÖÖ ∫
+ÖÖª º
$str	ÜÜ Ω
+ÜÜæ ø
$str	áá ∑
+áá∏ π
$str	àà ∫
+ààª º
$str	ââ π
+ââ∫ ª
$strää |
+
ää} ~
$strãã ?
+
ãã@ A
$str	åå „
+åå‰ Â
$str	çç „
+çç‰ Â
$str	éé „
+éé‰ Â
$str	èè „
+èè‰ Â
$str	êê „
+êê‰ Â
$str	ëë ‚
+ëë„ ‰
$str	íí „
+íí‰ Â
$str	ìì „
+ìì‰ Â
$str	îî „
+îî‰ Â
$str	ïï „
+ïï‰ Â
$str	ññ „
+ññ‰ Â
$str	óó „
+óó‰ Â
$str	òò „
+òò‰ Â
$str	ôô ê
+ôôë í
$str	öö „
+öö‰ Â
$str	õõ ã
+õõå ç
$str	úú ã
+úúå ç
$str	ùù „
+ùù‰ Â
$str	üü ç
+üüé è
$str	†† Ñ	
+††Ö	 Ü	
$str	°° ¬
+°°√ ƒ
$str££ 
+
££ 
$str	§§ å
+§§ç é
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ ó
+¥¥ò ô
$strµµ î
+µµï ñ
$str∂∂ õ
+∂∂ú ù
$str∑∑ µ
+∑∑∂ ∑
$str∏∏ ú
+∏∏ù û
$strππ ˙
+ππ˚ ¸
$str∫∫ Â
+∫∫Ê Á
$strªª ﬂ
+ªª‡ ·
$strºº ù
+ººû ü
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ Ú
+ƒƒÛ Ù
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… î
+……ï ñ
$str   î
+  ï ñ
$strÀÀ ˛
+ÀÀˇ Ä
$strÃÃ î
+ÃÃï ñ
$strÕÕ î
+ÕÕï ñ
$strŒŒ î
+ŒŒï ñ
$strœœ ©
+œœ™ ´
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str”” î
+””ï ñ
$str‘‘ î
+‘‘ï ñ
$str’’ î
+’’ï ñ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str›› ˛
+››ˇ Ä
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· ©
+··™ ´
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË î
+ËËï ñ
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ í
+ÎÎì î
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ ˛
+ÚÚˇ Ä
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$strˆˆ ©
+ˆˆ™ ´
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str˝˝ î
+˝˝ï ñ
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÑÑ ˛
+ÑÑˇ Ä
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá î
+ááï ñ
$stràà ©
+àà™ ´
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå ï
+ååñ ó
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê î
+êêï ñ
$strëë î
+ëëï ñ
$stríí î
+ííï ñ
$strìì î
+ììï ñ
$strîî î
+îîï ñ
$strïï î
+ïïï ñ
$strññ ˛
+ññˇ Ä
$stróó î
+óóï ñ
$stròò î
+òòï ñ
$strôô î
+ôôï ñ
$ströö ©
+öö™ ´
$strõõ î
+õõï ñ
$strúú î
+úúï ñ
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶ î
+¶¶ï ñ
$strßß î
+ßßï ñ
$str®® î
+®®ï ñ
$str©© î
+©©ï ñ
$str™™ î
+™™ï ñ
$str´´ î
+´´ï ñ
$str¨¨ î
+¨¨ï ñ
$str≠≠ î
+≠≠ï ñ
$strÆÆ î
+ÆÆï ñ
$strØØ î
+ØØï ñ
$str∞∞ î
+∞∞ï ñ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ ì
+¥¥î ï
$strµµ î
+µµï ñ
$str∂∂ î
+∂∂ï ñ
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº î
+ººï ñ
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str√√ î
+√√ï ñ
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str»»  
+»»À Ã
$str…… À
+……Ã Õ
$str
   D
+
  E F
$strÀÀ À
+ÀÀÃ Õ
$strÃÃ ‚
+ÃÃ„ ‰
$strÕÕ À
+ÕÕÃ Õ
$strŒŒ À
+ŒŒÃ Õ
$strœœ À
+œœÃ Õ
$str–– À
+––Ã Õ
$str—— £
+——§ •
$str““ À
+““Ã Õ
$str÷÷ î
+÷÷ï ñ
$str◊◊ î
+◊◊ï ñ
$strÿÿ î
+ÿÿï ñ
$strŸŸ î
+ŸŸï ñ
$str⁄⁄ î
+⁄⁄ï ñ
$str€€ î
+€€ï ñ
$str‹‹ î
+‹‹ï ñ
$str››
 …
+››  À
$strﬁﬁ À
+ﬁﬁÃ Õ
$str
ﬂﬂ D
+
ﬂﬂE F
$str‡‡ À
+‡‡Ã Õ
$str·· ‚
+··„ ‰
$str‚‚ À
+‚‚Ã Õ
$str„„ À
+„„Ã Õ
$str‰‰ À
+‰‰Ã Õ
$strÂÂ À
+ÂÂÃ Õ
$strÊÊ £
+ÊÊ§ •
$strÁÁ À
+ÁÁÃ Õ
$strÍÍ î
+ÍÍï ñ
$strÎÎ î
+ÎÎï ñ
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$str
ÔÔ @
+
ÔÔA B
$str î
+ï ñ
$strÒÒ î
+ÒÒï ñ
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ î
+ÙÙï ñ
$strıı î
+ııï ñ
$str˜˜ î
+˜˜ï ñ
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ î
+˙˙ï ñ
$str˚˚ î
+˚˚ï ñ
$str¸¸ î
+¸¸ï ñ
$str
˝˝ @
+
˝˝A B
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄÄ î
+ÄÄï ñ
$strÅÅ î
+ÅÅï ñ
$strÇÇ î
+ÇÇï ñ
$strÉÉ î
+ÉÉï ñ
$strÖÖ î
+ÖÖï ñ
$strÜÜ î
+ÜÜï ñ
$stráá ì
+ááî ï
$stràà î
+ààï ñ
$strââ î
+ââï ñ
$strää î
+ääï ñ
$strãã î
+ããï ñ
$stråå î
+ååï ñ
$strçç î
+ççï ñ
$stréé î
+ééï ñ
$strèè î
+èèï ñ
$strêê  
+êêÀ Ã
$strëë À
+ëëÃ Õ
$str
íí D
+
ííE F
$strìì À
+ììÃ Õ
$strîî ‚
+îî„ ‰
$strïï À
+ïïÃ Õ
$strññ À
+ññÃ Õ
$stróó À
+óóÃ Õ
$stròò À
+òòÃ Õ
$strôô £
+ôô§ •
$ströö À
+ööÃ Õ
$strúú ê
+úúë í
$strùù î
+ùùï ñ
$strûû î
+ûûï ñ
$strüü î
+üüï ñ
$str†† î
+††ï ñ
$str°° î
+°°ï ñ
$str¢¢ î
+¢¢ï ñ
$str££ î
+££ï ñ
$str§§ î
+§§ï ñ
$str•• î
+••ï ñ
$str¶¶  
+¶¶À Ã
$strßß À
+ßßÃ Õ
$str
®® D
+
®®E F
$str©© À
+©©Ã Õ
$str™™ ‚
+™™„ ‰
$str´´ À
+´´Ã Õ
$str¨¨ À
+¨¨Ã Õ
$str≠≠ À
+≠≠Ã Õ
$strÆÆ À
+ÆÆÃ Õ
$strØØ £
+ØØ§ •
$str∞∞ À
+∞∞Ã Õ
$str±± î
+±±ï ñ
$str≤≤ î
+≤≤ï ñ
$str≥≥ î
+≥≥ï ñ
$str¥¥ î
+¥¥ï ñ
$strµµ î
+µµï ñ
$str
∂∂ D
+
∂∂E F
$str∑∑ î
+∑∑ï ñ
$str∏∏ î
+∏∏ï ñ
$strππ î
+ππï ñ
$str∫∫ î
+∫∫ï ñ
$strªª î
+ªªï ñ
$strºº ú
+ººù û
$strΩΩ î
+ΩΩï ñ
$strææ î
+ææï ñ
$strøø î
+øøï ñ
$str¿¿ î
+¿¿ï ñ
$str¡¡ î
+¡¡ï ñ
$str¬¬ î
+¬¬ï ñ
$str
√√ D
+
√√E F
$strƒƒ î
+ƒƒï ñ
$str≈≈ î
+≈≈ï ñ
$str∆∆ î
+∆∆ï ñ
$str«« î
+««ï ñ
$str»» î
+»»ï ñ
$str…… ú
+……ù û
$strÀÀ î
+ÀÀï ñ
$strÃÃ î
+ÃÃï ñ
$strÕÕ ì
+ÕÕî ï
$strŒŒ î
+ŒŒï ñ
$strœœ î
+œœï ñ
$str–– î
+––ï ñ
$str—— î
+——ï ñ
$str““ î
+““ï ñ
$str””  
+””À Ã
$str‘‘ À
+‘‘Ã Õ
$str
’’ D
+
’’E F
$str÷÷ À
+÷÷Ã Õ
$str◊◊ ‚
+◊◊„ ‰
$strÿÿ À
+ÿÿÃ Õ
$strŸŸ À
+ŸŸÃ Õ
$str⁄⁄ À
+⁄⁄Ã Õ
$str€€ À
+€€Ã Õ
$str‹‹ £
+‹‹§ •
$str›› À
+››Ã Õ
$strﬁﬁ î
+ﬁﬁï ñ
$strﬂﬂ î
+ﬂﬂï ñ
$str‡‡ î
+‡‡ï ñ
$str·· î
+··ï ñ
$str‚‚ î
+‚‚ï ñ
$str„„ î
+„„ï ñ
$str‰‰ î
+‰‰ï ñ
$strÂÂ î
+ÂÂï ñ
$strÊÊ î
+ÊÊï ñ
$strÁÁ î
+ÁÁï ñ
$strËË û
+ËËü †
$strÈÈ î
+ÈÈï ñ
$strÍÍ î
+ÍÍï ñ
$strÎÎ û
+ÎÎü †
$strÏÏ î
+ÏÏï ñ
$strÌÌ î
+ÌÌï ñ
$strÓÓ î
+ÓÓï ñ
$strÔÔ î
+ÔÔï ñ
$str û
+ü †
$strÒÒ û
+ÒÒü †
$strÚÚ î
+ÚÚï ñ
$strÛÛ î
+ÛÛï ñ
$strÙÙ û
+ÙÙü †
$strıı î
+ııï ñ
$strˆˆ î
+ˆˆï ñ
$str˜˜ û
+˜˜ü †
$str¯¯ î
+¯¯ï ñ
$str˘˘ î
+˘˘ï ñ
$str˙˙ û
+˙˙ü †
$str˚˚ í
+˚˚ì î
$str¸¸ ±
+¸¸≤ ≥
$str˝˝ û
+˝˝ü †
$str˛˛ î
+˛˛ï ñ
$strˇˇ î
+ˇˇï ñ
$strÄ Ä  û
+Ä Ä ü †
$strÅ Å  î
+Å Å ï ñ
$strÇ Ç  î
+Ç Ç ï ñ
$strÉ É  û
+É É ü †
$strÑ Ñ  î
+Ñ Ñ ï ñ
$strÖ Ö  î
+Ö Ö ï ñ
$strÜ Ü  û
+Ü Ü ü †
$strá á  î
+á á ï ñ
$strà à  ß
+à à ® ©
$strâ â  û
+â â ü †
$strä ä  î
+ä ä ï ñ
$strã ã  î
+ã ã ï ñ
$strå å  û
+å å ü †
$strç ç  î
+ç ç ï ñ
$stré é  î
+é é ï ñ
$strè è  û
+è è ü †
$strê ê  î
+ê ê ï ñ
$strë ë  ®
+ë ë © ™
$strí í  û
+í í ü †
$strì ì  î
+ì ì ï ñ
$strî î  î
+î î ï ñ
$str	ï ï  î
+ï ï ï ñ
$str	ñ ñ  î
+ñ ñ ï ñ
$str	ó ó  î
+ó ó ï ñ
$str	ò ò  î
+ò ò ï ñ
$str	ô ô  î
+ô ô ï ñ
$str	ö ö  œ
+ö ö – —
$str	õ õ  î
+õ õ ï ñ
$str	ú ú  î
+ú ú ï ñ
$str	ù ù  î
+ù ù ï ñ
$str	û û  î
+û û ï ñ
$str	ü ü  î
+ü ü ï ñ
$str	† †  î
+† † ï ñ
$str	° °  î
+° ° ï ñ
$str	¢ ¢  î
+¢ ¢ ï ñ
$str	£ £  î
+£ £ ï ñ
$str	§ §  î
+§ § ï ñ
$str	• •  î
+• • ï ñ
$str	¶ ¶  î
+¶ ¶ ï ñ
$str	ß ß  î
+ß ß ï ñ
$str	® ®  î
+® ® ï ñ
$str	© ©  î
+© © ï ñ
$str	™ ™  î
+™ ™ ï ñ
$str	´ ´  î
+´ ´ ï ñ
$str	¨ ¨  î
+¨ ¨ ï ñ
$str	≠ ≠  î
+≠ ≠ ï ñ
$str	Æ Æ  î
+Æ Æ ï ñ
$str	Ø Ø  î
+Ø Ø ï ñ
$str	∞ ∞  î
+∞ ∞ ï ñ
$str	± ±  î
+± ± ï ñ
$str	≤ ≤  î
+≤ ≤ ï ñ
$str	≥ ≥  î
+≥ ≥ ï ñ
$str¥ ¥  î
+¥ ¥ ï ñ
$strµ µ  à
+µ µ â ä
$str∂ ∂  î
+∂ ∂ ï ñ
$str∑ ∑  î
+∑ ∑ ï ñ
$str∏ ∏  î
+∏ ∏ ï ñ
$strπ π  î
+π π ï ñ
$str∫ ∫  î
+∫ ∫ ï ñ
$strª ª  î
+ª ª ï ñ
$strº º  î
+º º ï ñ
$strΩ Ω  î
+Ω Ω ï ñ
$stræ æ  î
+æ æ ï ñ
$strø ø  î
+ø ø ï ñ
$str¿ ¿  î
+¿ ¿ ï ñ
$str¡ ¡  î
+¡ ¡ ï ñ
$str¬ ¬  î
+¬ ¬ ï ñ
$strƒ ƒ  î
+ƒ ƒ ï ñ
$str≈ ≈  î
+≈ ≈ ï ñ
$str∆ ∆  î
+∆ ∆ ï ñ
$str« «  ∆
+« « « »
$str» »  î
+» » ï ñ
$str… …  î
+… … ï ñ
$str     î
+    ï ñ
$strÀ À  î
+À À ï ñ
$strÃ Ã  î
+Ã Ã ï ñ
$str	Õ Õ  ø
+Õ Õ ¿ ¡
$strŒ Œ  
+
Œ Œ  
$strœ œ  
+
œ œ   
$str– –  
+
– –   
$str— —  
+
— —   
$str“ “  
+
“ “   
$str” ”  
+
” ”   
$str‘ ‘  
+
‘ ‘   
$str’ ’  
+
’ ’   
$str÷ ÷  
+
÷ ÷   
$str◊ ◊  
+
◊ ◊   
$strÿ ÿ  
+
ÿ ÿ   
$strŸ Ÿ  
+
Ÿ Ÿ   
$str⁄ ⁄  
+
⁄ ⁄   
$str€ €  
+
€ €   
$str‹ ‹  
+
‹ ‹   
$str	ﬁ ﬁ  ø
+ﬁ ﬁ ¿ ¡
$str	ﬂ ﬂ  Ã
+ﬂ ﬂ Õ Œ
$str	‡ ‡  À
+‡ ‡ Ã Õ
$str	· ·  Ã
+· · Õ Œ
$str	‚ ‚  ü
+‚ ‚ † °
$str„ „  {
+
„ „ | }
$str	‰ ‰  à
+‰ ‰ â ä
$strÂ Â  {
+
Â Â | }
$str	Ê Ê  Ã
+Ê Ê Õ Œ
$strÁ Á  {
+
Á Á | }
$strË Ë  	
;
Ë Ë 	 

var
Ì Ì  
tabela
Ì Ì  
=
Ì Ì  
new
Ì Ì  &
TabelaDinamicaResultados
Ì Ì  5
(
Ì Ì 5 6
)
Ì Ì 6 7
;
Ì Ì 7 8
var
Ô Ô  
where
Ô Ô  
=
Ô Ô  
string
Ô Ô  
.
Ô Ô  
Empty
Ô Ô  $
;
Ô Ô $ %
where
   
+=
   
$str
   
;
   
var
Ä!Ä! 
query0
Ä!Ä! 
=
Ä!Ä! 
$str
Ä!Ä! J
+
Ä!Ä!K L
$str
Ç!Ç! /
+
Ç!Ç!0 1
$str
É!É! <
+
É!É!= >
$str
Ñ!Ñ! 9
+
Ñ!Ñ!: ;
$str
Ö!Ö! 1
+
Ö!Ö!2 3
$str
Ü!Ü! 4
+
Ü!Ü!5 6
$str
á!á! 1
+
á!á!2 3
$str
à!à! !
+
à!à!" #
$str
ä!ä! C
+
ä!ä!D E
$str
ã!ã! 5
+
ã!ã!6 7
$str
å!å! :
+
å!å!; <
$str
ç!ç! >
+
ç!ç!? @
$str
è!è! ,
+
è!è!- .
$str
ê!ê! L
+
ê!ê!M N
$str
í!í! +
+
í!í!, -
form
í!í!. 2
.
í!í!2 3
ParametroTableCol
í!í!3 D
[
í!í!D E
$num
í!í!E F
]
í!í!F G
+
í!í!H I
$str
í!í!J M
+
í!í!N O
$str
ì!ì! (
+
ì!ì!) *
form
ì!ì!+ /
.
ì!ì!/ 0
ParametroTableRow
ì!ì!0 A
[
ì!ì!A B
$num
ì!ì!B C
]
ì!ì!C D
+
ì!ì!E F
$str
ì!ì!G J
+
ì!ì!K L
$str
ï!ï! {
+
ï!ï!| }
$str
ó!ó! #
;
ó!ó!# $
var
ö!ö! 
query1
ö!ö! 
=
ö!ö! 
$str
ö!ö! j
+
ö!ö!k l
$strõ!õ! ¨
+õ!õ!≠ Æ
$str
ú!ú! N
+
ú!ú!O P
getMetaScore
ú!ú!Q ]
(
ú!ú!] ^
)
ú!ú!^ _
.
ú!ú!_ `
ToString
ú!ú!` h
(
ú!ú!h i
)
ú!ú!i j
+
ú!ú!k l
$strú!ú!m Å
+ú!ú!Ç É
$strù!ù! ä
+ù!ù!ã å
getMetaScoreù!ù!ç ô
(ù!ù!ô ö
)ù!ù!ö õ
.ù!ù!õ ú
ToStringù!ù!ú §
(ù!ù!§ •
)ù!ù!• ¶
+ù!ù!ß ®
$strù!ù!© ∏
+ù!ù!π ∫
getMetaScoreù!ù!ª «
(ù!ù!« »
)ù!ù!» …
.ù!ù!…  
ToStringù!ù!  “
(ù!ù!“ ”
)ù!ù!” ‘
+ù!ù!’ ÷
$strù!ù!◊ ¥
+ù!ù!µ ∂
$strû!û! ä
+û!û!ã å
getMetaScoreû!û!ç ô
(û!û!ô ö
)û!û!ö õ
.û!û!õ ú
ToStringû!û!ú §
(û!û!§ •
)û!û!• ¶
+û!û!ß ®
$strû!û!© π
+û!û!∫ ª
getMetaScoreû!û!º »
(û!û!» …
)û!û!…  
.û!û!  À
ToStringû!û!À ”
(û!û!” ‘
)û!û!‘ ’
+û!û!÷ ◊
$strû!û!ÿ É
+û!û!Ñ Ö
getMetaScoreû!û!Ü í
(û!û!í ì
)û!û!ì î
.û!û!î ï
ToStringû!û!ï ù
(û!û!ù û
)û!û!û ü
+û!û!† °
$strû!û!¢ Ì
+û!û!Ó Ô
$str
†!†! .
+
†!†!/ 0
$str
°!°! <
+
°!°!= >
$str
¢!¢! 9
+
¢!¢!: ;
$str
£!£! 1
+
£!£!2 3
$str
§!§! 5
+
§!§!6 7
$str
•!•! 1
+
•!•!2 3
$str
¶!¶! !
+
¶!¶!" #
$str
®!®! C
+
®!®!D E
$str
©!©! 5
+
©!©!6 7
$str
™!™! :
+
™!™!; <
$str
´!´! >
+
´!´!? @
$str
≠!≠! ,
+
≠!≠!- .
$str
Æ!Æ! L
+
Æ!Æ!M N
$str
∞!∞! +
+
∞!∞!, -
form
∞!∞!. 2
.
∞!∞!2 3
ParametroTableCol
∞!∞!3 D
[
∞!∞!D E
$num
∞!∞!E F
]
∞!∞!F G
+
∞!∞!H I
$str
∞!∞!J M
+
∞!∞!N O
$str
±!±! (
+
±!±!) *
form
±!±!+ /
.
±!±!/ 0
ParametroTableRow
±!±!0 A
[
±!±!A B
$num
±!±!B C
]
±!±!C D
+
±!±!E F
$str
±!±!G J
+
±!±!K L
$str
≥!≥! z
+
≥!≥!{ |
$str
µ!µ! 4
+
µ!µ!5 6
$str
∂!∂! &
;
∂!∂!& '
var
π!π! 
query2
π!π! 
=
π!π! 
$str
∫!∫! V
+
∫!∫!W X
$strª!ª! ¨
+ª!ª!≠ Æ
$str
º!º! N
+
º!º!O P
getMetaScore
º!º!Q ]
(
º!º!] ^
)
º!º!^ _
.
º!º!_ `
ToString
º!º!` h
(
º!º!h i
)
º!º!i j
+
º!º!k l
$strº!º!m Å
+º!º!Ç É
$strΩ!Ω! ä
+Ω!Ω!ã å
getMetaScoreΩ!Ω!ç ô
(Ω!Ω!ô ö
)Ω!Ω!ö õ
.Ω!Ω!õ ú
ToStringΩ!Ω!ú §
(Ω!Ω!§ •
)Ω!Ω!• ¶
+Ω!Ω!ß ®
$strΩ!Ω!© ∏
+Ω!Ω!π ∫
getMetaScoreΩ!Ω!ª «
(Ω!Ω!« »
)Ω!Ω!» …
.Ω!Ω!…  
ToStringΩ!Ω!  “
(Ω!Ω!“ ”
)Ω!Ω!” ‘
+Ω!Ω!’ ÷
$strΩ!Ω!◊ ¥
+Ω!Ω!µ ∂
$stræ!æ! ä
+æ!æ!ã å
getMetaScoreæ!æ!ç ô
(æ!æ!ô ö
)æ!æ!ö õ
.æ!æ!õ ú
ToStringæ!æ!ú §
(æ!æ!§ •
)æ!æ!• ¶
+æ!æ!ß ®
$stræ!æ!© π
+æ!æ!∫ ª
getMetaScoreæ!æ!º »
(æ!æ!» …
)æ!æ!…  
.æ!æ!  À
ToStringæ!æ!À ”
(æ!æ!” ‘
)æ!æ!‘ ’
+æ!æ!÷ ◊
$stræ!æ!ÿ É
+æ!æ!Ñ Ö
getMetaScoreæ!æ!Ü í
(æ!æ!í ì
)æ!æ!ì î
.æ!æ!î ï
ToStringæ!æ!ï ù
(æ!æ!ù û
)æ!æ!û ü
+æ!æ!† °
$stræ!æ!¢ Ì
+æ!æ!Ó Ô
$str
¿!¿! .
+
¿!¿!/ 0
$str
¡!¡! <
+
¡!¡!= >
$str
¬!¬! 9
+
¬!¬!: ;
$str
√!√! 1
+
√!√!2 3
$str
ƒ!ƒ! 5
+
ƒ!ƒ!6 7
$str
≈!≈! 1
+
≈!≈!2 3
$str
∆!∆! !
+
∆!∆!" #
$str
»!»! C
+
»!»!D E
$str
…!…! 5
+
…!…!6 7
$str
 ! ! :
+
 ! !; <
$str
À!À! >
+
À!À!? @
$str
Õ!Õ! ,
+
Õ!Õ!- .
$str
Œ!Œ! L
+
Œ!Œ!M N
$str
–!–! +
+
–!–!, -
form
–!–!. 2
.
–!–!2 3
ParametroTableCol
–!–!3 D
[
–!–!D E
$num
–!–!E F
]
–!–!F G
+
–!–!H I
$str
–!–!J M
+
–!–!N O
$str
—!—! (
+
—!—!) *
form
—!—!+ /
.
—!—!/ 0
ParametroTableRow
—!—!0 A
[
—!—!A B
$num
—!—!B C
]
—!—!C D
+
—!—!E F
$str
—!—!G J
+
—!—!K L
$str
”!”! z
+
”!”!{ |
$str
’!’! (
+
’!’!) *
$str
÷!÷! #
;
÷!÷!# $
var
Ÿ!Ÿ! 
query3
Ÿ!Ÿ! 
=
Ÿ!Ÿ! 
$str
⁄!⁄! [
+
⁄!⁄!\ ]
$str€!€! ¨
+€!€!≠ Æ
$str
‹!‹! N
+
‹!‹!O P
getMetaScore
‹!‹!Q ]
(
‹!‹!] ^
)
‹!‹!^ _
.
‹!‹!_ `
ToString
‹!‹!` h
(
‹!‹!h i
)
‹!‹!i j
+
‹!‹!k l
$str‹!‹!m Å
+‹!‹!Ç É
$str›!›! ä
+›!›!ã å
getMetaScore›!›!ç ô
(›!›!ô ö
)›!›!ö õ
.›!›!õ ú
ToString›!›!ú §
(›!›!§ •
)›!›!• ¶
+›!›!ß ®
$str›!›!© ∏
+›!›!π ∫
getMetaScore›!›!ª «
(›!›!« »
)›!›!» …
.›!›!…  
ToString›!›!  “
(›!›!“ ”
)›!›!” ‘
+›!›!’ ÷
$str›!›!◊ ¥
+›!›!µ ∂
$strﬁ!ﬁ! ä
+ﬁ!ﬁ!ã å
getMetaScoreﬁ!ﬁ!ç ô
(ﬁ!ﬁ!ô ö
)ﬁ!ﬁ!ö õ
.ﬁ!ﬁ!õ ú
ToStringﬁ!ﬁ!ú §
(ﬁ!ﬁ!§ •
)ﬁ!ﬁ!• ¶
+ﬁ!ﬁ!ß ®
$strﬁ!ﬁ!© π
+ﬁ!ﬁ!∫ ª
getMetaScoreﬁ!ﬁ!º »
(ﬁ!ﬁ!» …
)ﬁ!ﬁ!…  
.ﬁ!ﬁ!  À
ToStringﬁ!ﬁ!À ”
(ﬁ!ﬁ!” ‘
)ﬁ!ﬁ!‘ ’
+ﬁ!ﬁ!÷ ◊
$strﬁ!ﬁ!ÿ É
+ﬁ!ﬁ!Ñ Ö
getMetaScoreﬁ!ﬁ!Ü í
(ﬁ!ﬁ!í ì
)ﬁ!ﬁ!ì î
.ﬁ!ﬁ!î ï
ToStringﬁ!ﬁ!ï ù
(ﬁ!ﬁ!ù û
)ﬁ!ﬁ!û ü
+ﬁ!ﬁ!† °
$strﬁ!ﬁ!¢ Ì
+ﬁ!ﬁ!Ó Ô
$str
‡!‡! .
+
‡!‡!/ 0
$str
·!·! <
+
·!·!= >
$str
‚!‚! 9
+
‚!‚!: ;
$str
„!„! 1
+
„!„!2 3
$str
‰!‰! 5
+
‰!‰!6 7
$str
Â!Â! 1
+
Â!Â!2 3
$str
Ê!Ê! !
+
Ê!Ê!" #
$str
Ë!Ë! C
+
Ë!Ë!D E
$str
È!È! 5
+
È!È!6 7
$str
Í!Í! :
+
Í!Í!; <
$str
Î!Î! >
+
Î!Î!? @
$str
Ì!Ì! ,
+
Ì!Ì!- .
$str
Ó!Ó! L
+
Ó!Ó!M N
$str
!! +
+
!!, -
form
!!. 2
.
!!2 3
ParametroTableCol
!!3 D
[
!!D E
$num
!!E F
]
!!F G
+
!!H I
$str
!!J M
+
!!N O
$str
Ò!Ò! (
+
Ò!Ò!) *
form
Ò!Ò!+ /
.
Ò!Ò!/ 0
ParametroTableRow
Ò!Ò!0 A
[
Ò!Ò!A B
$num
Ò!Ò!B C
]
Ò!Ò!C D
+
Ò!Ò!E F
$str
Ò!Ò!G J
+
Ò!Ò!K L
$str
Û!Û! {
+
Û!Û!| }
$str
ı!ı! +
+
ı!ı!, -
$str
ˆ!ˆ! #
;
ˆ!ˆ!# $
var
˘!˘! 
query4
˘!˘! 
=
˘!˘! 
$str
˙!˙! Z
+
˙!˙![ \
$str˚!˚! ¨
+˚!˚!≠ Æ
$str
¸!¸! N
+
¸!¸!O P
getMetaScore
¸!¸!Q ]
(
¸!¸!] ^
)
¸!¸!^ _
.
¸!¸!_ `
ToString
¸!¸!` h
(
¸!¸!h i
)
¸!¸!i j
+
¸!¸!k l
$str¸!¸!m Å
+¸!¸!Ç É
$str˝!˝! ä
+˝!˝!ã å
getMetaScore˝!˝!ç ô
(˝!˝!ô ö
)˝!˝!ö õ
.˝!˝!õ ú
ToString˝!˝!ú §
(˝!˝!§ •
)˝!˝!• ¶
+˝!˝!ß ®
$str˝!˝!© ∏
+˝!˝!π ∫
getMetaScore˝!˝!ª «
(˝!˝!« »
)˝!˝!» …
.˝!˝!…  
ToString˝!˝!  “
(˝!˝!“ ”
)˝!˝!” ‘
+˝!˝!’ ÷
$str˝!˝!◊ ¥
+˝!˝!µ ∂
$str˛!˛! ä
+˛!˛!ã å
getMetaScore˛!˛!ç ô
(˛!˛!ô ö
)˛!˛!ö õ
.˛!˛!õ ú
ToString˛!˛!ú §
(˛!˛!§ •
)˛!˛!• ¶
+˛!˛!ß ®
$str˛!˛!© π
+˛!˛!∫ ª
getMetaScore˛!˛!º »
(˛!˛!» …
)˛!˛!…  
.˛!˛!  À
ToString˛!˛!À ”
(˛!˛!” ‘
)˛!˛!‘ ’
+˛!˛!÷ ◊
$str˛!˛!ÿ É
+˛!˛!Ñ Ö
getMetaScore˛!˛!Ü í
(˛!˛!í ì
)˛!˛!ì î
.˛!˛!î ï
ToString˛!˛!ï ù
(˛!˛!ù û
)˛!˛!û ü
+˛!˛!† °
$str˛!˛!¢ Ì
+˛!˛!Ó Ô
$str
Ä"Ä" /
+
Ä"Ä"0 1
$str
Å"Å" <
+
Å"Å"= >
$str
Ç"Ç" 9
+
Ç"Ç": ;
$str
É"É" 1
+
É"É"2 3
$str
Ñ"Ñ" 5
+
Ñ"Ñ"6 7
$str
Ö"Ö" 1
+
Ö"Ö"2 3
$str
Ü"Ü" !
+
Ü"Ü"" #
$str
à"à" C
+
à"à"D E
$str
â"â" 5
+
â"â"6 7
$str
ä"ä" :
+
ä"ä"; <
$str
ã"ã" >
+
ã"ã"? @
$str
ç"ç" ,
+
ç"ç"- .
$str
é"é" L
+
é"é"M N
$str
ê"ê" +
+
ê"ê", -
form
ê"ê". 2
.
ê"ê"2 3
ParametroTableCol
ê"ê"3 D
[
ê"ê"D E
$num
ê"ê"E F
]
ê"ê"F G
+
ê"ê"H I
$str
ê"ê"J M
+
ê"ê"N O
$str
ë"ë" (
+
ë"ë") *
form
ë"ë"+ /
.
ë"ë"/ 0
ParametroTableRow
ë"ë"0 A
[
ë"ë"A B
$num
ë"ë"B C
]
ë"ë"C D
+
ë"ë"E F
$str
ë"ë"G J
+
ë"ë"K L
$str
ì"ì" {
+
ì"ì"| }
$str
ï"ï" 
;
ï"ï" 
var
ô"ô" 
query6
ô"ô" 
=
ô"ô" 
$strô"ô" ™
+ô"ô"´ ¨
$str
ö"ö" (
+
ö"ö") *
$str
õ"õ" <
+
õ"õ"= >
$str
ú"ú" 9
+
ú"ú": ;
$str
ù"ù" 1
+
ù"ù"2 3
$str
û"û" 5
+
û"û"6 7
$str
ü"ü" 1
+
ü"ü"2 3
$str
†"†" !
+
†"†"" #
$str
¢"¢" C
+
¢"¢"D E
$str
£"£" 5
+
£"£"6 7
$str
§"§" :
+
§"§"; <
$str
•"•" >
+
•"•"? @
$str
ß"ß" ,
+
ß"ß"- .
$str
®"®" K
+
®"®"L M
$str
™"™" +
+
™"™", -
form
™"™". 2
.
™"™"2 3
ParametroTableCol
™"™"3 D
[
™"™"D E
$num
™"™"E F
]
™"™"F G
+
™"™"H I
$str
™"™"J M
+
™"™"N O
$str
´"´" (
+
´"´") *
form
´"´"+ /
.
´"´"/ 0
ParametroTableRow
´"´"0 A
[
´"´"A B
$num
´"´"B C
]
´"´"C D
+
´"´"E F
$str
´"´"G J
+
´"´"K L
$str
≠"≠" {
+
≠"≠"| }
$str
Æ"Æ" )
;
Æ"Æ") *
var
∞"∞" 
orderby
∞"∞" 
=
∞"∞" 
$str
∞"∞" /
;
∞"∞"/ 0
var
≤"≤" 
db
≤"≤" 
=
≤"≤" 
new
≤"≤" 
SgqDbDevEntities
≤"≤" )
(
≤"≤") *
)
≤"≤"* +
;
≤"≤"+ ,
string
≥"≥" 
grandeQuery
≥"≥" 
=
≥"≥"  
query
≥"≥"! &
+
≥"≥"' (
$str
≥"≥") ,
+
≥"≥"- .
query1
≥"≥"/ 5
+
≥"≥"6 7
$str
≥"≥"8 I
+
≥"≥"J K
query2
≥"≥"L R
+
≥"≥"S T
$str
≥"≥"U f
+
≥"≥"g h
query3
≥"≥"i o
+
≥"≥"p q
$str≥"≥"r É
+≥"≥"Ñ Ö
query4≥"≥"Ü å
+≥"≥"ç é
$str≥"≥"è †
+≥"≥"° ¢
query6≥"≥"£ ©
+≥"≥"™ ´
orderby≥"≥"¨ ≥
;≥"≥"≥ ¥
var
µ"µ" 
result
µ"µ" 
=
µ"µ" 
db
µ"µ" 
.
µ"µ" 
Database
µ"µ" $
.
µ"µ"$ %
SqlQuery
µ"µ"% -
<
µ"µ"- .
ResultQuery1
µ"µ". :
>
µ"µ": ;
(
µ"µ"; <
grandeQuery
µ"µ"< G
)
µ"µ"G H
.
µ"µ"H I
ToList
µ"µ"I O
(
µ"µ"O P
)
µ"µ"P Q
;
µ"µ"Q R
var
Ω"Ω" 
result1
Ω"Ω" 
=
Ω"Ω" 
result
Ω"Ω"  
.
Ω"Ω"  !
Where
Ω"Ω"! &
(
Ω"Ω"& '
r
Ω"Ω"' (
=>
Ω"Ω") +
r
Ω"Ω", -
.
Ω"Ω"- .
QUERY
Ω"Ω". 3
==
Ω"Ω"4 6
$num
Ω"Ω"7 8
)
Ω"Ω"8 9
.
Ω"Ω"9 :
ToList
Ω"Ω": @
(
Ω"Ω"@ A
)
Ω"Ω"A B
;
Ω"Ω"B C
var
æ"æ" 
result2
æ"æ" 
=
æ"æ" 
result
æ"æ"  
.
æ"æ"  !
Where
æ"æ"! &
(
æ"æ"& '
r
æ"æ"' (
=>
æ"æ") +
r
æ"æ", -
.
æ"æ"- .
QUERY
æ"æ". 3
==
æ"æ"4 6
$num
æ"æ"7 8
)
æ"æ"8 9
.
æ"æ"9 :
ToList
æ"æ": @
(
æ"æ"@ A
)
æ"æ"A B
;
æ"æ"B C
var
ø"ø" 
result3
ø"ø" 
=
ø"ø" 
result
ø"ø"  
.
ø"ø"  !
Where
ø"ø"! &
(
ø"ø"& '
r
ø"ø"' (
=>
ø"ø") +
r
ø"ø", -
.
ø"ø"- .
QUERY
ø"ø". 3
==
ø"ø"4 6
$num
ø"ø"7 8
)
ø"ø"8 9
.
ø"ø"9 :
ToList
ø"ø": @
(
ø"ø"@ A
)
ø"ø"A B
;
ø"ø"B C
var
¿"¿" 
result4
¿"¿" 
=
¿"¿" 
result
¿"¿"  
.
¿"¿"  !
Where
¿"¿"! &
(
¿"¿"& '
r
¿"¿"' (
=>
¿"¿") +
r
¿"¿", -
.
¿"¿"- .
QUERY
¿"¿". 3
==
¿"¿"4 6
$num
¿"¿"7 8
)
¿"¿"8 9
.
¿"¿"9 :
ToList
¿"¿": @
(
¿"¿"@ A
)
¿"¿"A B
;
¿"¿"B C
var
¡"¡" 
queryRowsBody
¡"¡" 
=
¡"¡" 
result
¡"¡"  &
.
¡"¡"& '
Where
¡"¡"' ,
(
¡"¡", -
r
¡"¡"- .
=>
¡"¡"/ 1
r
¡"¡"2 3
.
¡"¡"3 4
QUERY
¡"¡"4 9
==
¡"¡": <
$num
¡"¡"= >
)
¡"¡"> ?
.
¡"¡"? @
ToList
¡"¡"@ F
(
¡"¡"F G
)
¡"¡"G H
;
¡"¡"H I
tabela
»"»" 
.
»"»" 
trsCabecalho1
»"»"  
=
»"»"! "
new
»"»"# &
List
»"»"' +
<
»"»"+ ,
Ths
»"»", /
>
»"»"/ 0
(
»"»"0 1
)
»"»"1 2
;
»"»"2 3
tabela
…"…" 
.
…"…" 
trsCabecalho1
…"…"  
.
…"…"  !
Add
…"…"! $
(
…"…"$ %
new
…"…"% (
Ths
…"…") ,
(
…"…", -
)
…"…"- .
{
…"…"/ 0
name
…"…"1 5
=
…"…"6 7
$str
…"…"8 E
+
…"…"F G
form
…"…"H L
.
…"…"L M
ParametroTableRow
…"…"M ^
[
…"…"^ _
$num
…"…"_ `
]
…"…"` a
}
…"…"b c
)
…"…"c d
;
…"…"d e
tabela
 " " 
.
 " " 
trsCabecalho1
 " "  
.
 " "  !
Add
 " "! $
(
 " "$ %
new
 " "% (
Ths
 " ") ,
(
 " ", -
)
 " "- .
{
 " "/ 0
name
 " "1 5
=
 " "6 7
$str
 " "8 D
+
 " "E F
form
 " "G K
.
 " "K L
ParametroTableCol
 " "L ]
[
 " "] ^
$num
 " "^ _
]
 " "_ `
}
 " "a b
)
 " "b c
;
 " "c d
tabela
Ÿ"Ÿ" 
.
Ÿ"Ÿ" 
trsCabecalho2
Ÿ"Ÿ"  
=
Ÿ"Ÿ"! "
db
Ÿ"Ÿ"# %
.
Ÿ"Ÿ"% &
Database
Ÿ"Ÿ"& .
.
Ÿ"Ÿ". /
SqlQuery
Ÿ"Ÿ"/ 7
<
Ÿ"Ÿ"7 8
Ths
Ÿ"Ÿ"8 ;
>
Ÿ"Ÿ"; <
(
Ÿ"Ÿ"< =
query
Ÿ"Ÿ"= B
+
Ÿ"Ÿ"C D
$str
Ÿ"Ÿ"E H
+
Ÿ"Ÿ"I J
query0
Ÿ"Ÿ"K Q
)
Ÿ"Ÿ"Q R
.
Ÿ"Ÿ"R S
OrderBy
Ÿ"Ÿ"S Z
(
Ÿ"Ÿ"Z [
r
Ÿ"Ÿ"[ \
=>
Ÿ"Ÿ"] _
r
Ÿ"Ÿ"` a
.
Ÿ"Ÿ"a b
name
Ÿ"Ÿ"b f
)
Ÿ"Ÿ"f g
.
Ÿ"Ÿ"g h
ToList
Ÿ"Ÿ"h n
(
Ÿ"Ÿ"n o
)
Ÿ"Ÿ"o p
;
Ÿ"Ÿ"p q
var
€"€" 
thsMeio
€"€" 
=
€"€" 
new
€"€" 
List
€"€" "
<
€"€"" #
Ths
€"€"# &
>
€"€"& '
(
€"€"' (
)
€"€"( )
;
€"€") *
thsMeio
‹"‹" 
.
‹"‹" 
Add
‹"‹" 
(
‹"‹" 
new
‹"‹" 
Ths
‹"‹" 
(
‹"‹"  
)
‹"‹"  !
{
‹"‹"" #
name
‹"‹"$ (
=
‹"‹") *
$str
‹"‹"+ .
,
‹"‹". /
coolspan
‹"‹"0 8
=
‹"‹"9 :
$num
‹"‹"; <
}
‹"‹"= >
)
‹"‹"> ?
;
‹"‹"? @
thsMeio
›"›" 
.
›"›" 
Add
›"›" 
(
›"›" 
new
›"›" 
Ths
›"›" 
(
›"›"  
)
›"›"  !
{
›"›"" #
name
›"›"$ (
=
›"›") *
$str
›"›"+ .
,
›"›". /
coolspan
›"›"0 8
=
›"›"9 :
$num
›"›"; <
}
›"›"= >
)
›"›"> ?
;
›"›"? @
thsMeio
ﬁ"ﬁ" 
.
ﬁ"ﬁ" 
Add
ﬁ"ﬁ" 
(
ﬁ"ﬁ" 
new
ﬁ"ﬁ" 
Ths
ﬁ"ﬁ" 
(
ﬁ"ﬁ"  
)
ﬁ"ﬁ"  !
{
ﬁ"ﬁ"" #
name
ﬁ"ﬁ"$ (
=
ﬁ"ﬁ") *
$str
ﬁ"ﬁ"+ .
,
ﬁ"ﬁ". /
coolspan
ﬁ"ﬁ"0 8
=
ﬁ"ﬁ"9 :
$num
ﬁ"ﬁ"; <
}
ﬁ"ﬁ"= >
)
ﬁ"ﬁ"> ?
;
ﬁ"ﬁ"? @
thsMeio
ﬂ"ﬂ" 
.
ﬂ"ﬂ" 
Add
ﬂ"ﬂ" 
(
ﬂ"ﬂ" 
new
ﬂ"ﬂ" 
Ths
ﬂ"ﬂ" 
(
ﬂ"ﬂ"  
)
ﬂ"ﬂ"  !
{
ﬂ"ﬂ"" #
name
ﬂ"ﬂ"$ (
=
ﬂ"ﬂ") *
$str
ﬂ"ﬂ"+ .
,
ﬂ"ﬂ". /
coolspan
ﬂ"ﬂ"0 8
=
ﬂ"ﬂ"9 :
$num
ﬂ"ﬂ"; <
}
ﬂ"ﬂ"= >
)
ﬂ"ﬂ"> ?
;
ﬂ"ﬂ"? @
foreach
·"·" 
(
·"·" 
var
·"·" 
i
·"·" 
in
·"·" 
tabela
·"·" $
.
·"·"$ %
trsCabecalho2
·"·"% 2
)
·"·"2 3
i
‚"‚" 
.
‚"‚" 
tds
‚"‚" 
=
‚"‚" 
thsMeio
‚"‚" 
;
‚"‚"  
tabela
‰"‰" 
.
‰"‰" 
trsCabecalho3
‰"‰"  
=
‰"‰"! "
new
‰"‰"# &
List
‰"‰"' +
<
‰"‰"+ ,
Ths
‰"‰", /
>
‰"‰"/ 0
(
‰"‰"0 1
)
‰"‰"1 2
;
‰"‰"2 3
tabela
Â"Â" 
.
Â"Â" 
trsCabecalho3
Â"Â"  
.
Â"Â"  !
Add
Â"Â"! $
(
Â"Â"$ %
new
Â"Â"% (
Ths
Â"Â") ,
(
Â"Â", -
)
Â"Â"- .
{
Â"Â"/ 0
name
Â"Â"1 5
=
Â"Â"6 7
$str
Â"Â"8 ?
,
Â"Â"? @
coolspan
Â"Â"A I
=
Â"Â"J K
$num
Â"Â"L M
,
Â"Â"M N
tds
Â"Â"O R
=
Â"Â"S T
thsMeio
Â"Â"U \
}
Â"Â"] ^
)
Â"Â"^ _
;
Â"Â"_ `
tabela
Ï"Ï" 
.
Ï"Ï" 
trsMeio
Ï"Ï" 
=
Ï"Ï" 
new
Ï"Ï"  
List
Ï"Ï"! %
<
Ï"Ï"% &
Trs
Ï"Ï"& )
>
Ï"Ï") *
(
Ï"Ï"* +
)
Ï"Ï"+ ,
;
Ï"Ï", -
foreach
ß#ß# 
(
ß#ß# 
var
ß#ß# 
i
ß#ß# 
in
ß#ß# 
queryRowsBody
ß#ß# +
)
ß#ß#+ ,
{
®#®# 
var
™#™# 
filtro
™#™# 
=
™#™# 
result1
™#™# $
.
™#™#$ %
Where
™#™#% *
(
™#™#* +
r
™#™#+ ,
=>
™#™#- /
r
™#™#0 1
.
™#™#1 2
CLASSIFIC_NEGOCIO
™#™#2 C
.
™#™#C D
Equals
™#™#D J
(
™#™#J K
i
™#™#K L
.
™#™#L M
CLASSIFIC_NEGOCIO
™#™#M ^
)
™#™#^ _
)
™#™#_ `
.
™#™#` a
ToList
™#™#a g
(
™#™#g h
)
™#™#h i
;
™#™#i j
var
´#´# 
Tr
´#´# 
=
´#´# 
new
´#´# 
Trs
´#´#  
(
´#´#  !
)
´#´#! "
{
¨#¨# 
name
≠#≠# 
=
≠#≠# 
i
≠#≠# 
.
≠#≠# 
CLASSIFIC_NEGOCIO
≠#≠# .
,
≠#≠#. /
tdsEsquerda
Æ#Æ# 
=
Æ#Æ#  !
new
Æ#Æ#" %
List
Æ#Æ#& *
<
Æ#Æ#* +
Tds
Æ#Æ#+ .
>
Æ#Æ#. /
(
Æ#Æ#/ 0
)
Æ#Æ#0 1
,
Æ#Æ#1 2

tdsDireita
Ø#Ø# 
=
Ø#Ø#  
new
Ø#Ø#! $
List
Ø#Ø#% )
<
Ø#Ø#) *
Tds
Ø#Ø#* -
>
Ø#Ø#- .
(
Ø#Ø#. /
)
Ø#Ø#/ 0
}
∞#∞# 
;
∞#∞# 
filtro
∏#∏# 
=
∏#∏# 
filtro
∏#∏# 
.
∏#∏#  
OrderBy
∏#∏#  '
(
∏#∏#' (
r
∏#∏#( )
=>
∏#∏#* ,
r
∏#∏#- .
.
∏#∏#. /
MACROPROCESSO
∏#∏#/ <
)
∏#∏#< =
.
∏#∏#= >
ToList
∏#∏#> D
(
∏#∏#D E
)
∏#∏#E F
;
∏#∏#F G
foreach
π#π# 
(
π#π# 
var
π#π# 
ii
π#π# 
in
π#π#  "
filtro
π#π## )
)
π#π#) *
{
∫#∫# 
Tr
ª#ª# 
.
ª#ª# 
tdsEsquerda
ª#ª# "
.
ª#ª#" #
Add
ª#ª## &
(
ª#ª#& '
new
ª#ª#' *
Tds
ª#ª#+ .
(
ª#ª#. /
)
ª#ª#/ 0
{
ª#ª#1 2
valor
ª#ª#3 8
=
ª#ª#9 :
ii
ª#ª#; =
.
ª#ª#= >
REAL
ª#ª#> B
.
ª#ª#B C
ToString
ª#ª#C K
(
ª#ª#K L
)
ª#ª#L M
}
ª#ª#N O
)
ª#ª#O P
;
ª#ª#P Q
Tr
º#º# 
.
º#º# 
tdsEsquerda
º#º# "
.
º#º#" #
Add
º#º## &
(
º#º#& '
new
º#º#' *
Tds
º#º#+ .
(
º#º#. /
)
º#º#/ 0
{
º#º#1 2
valor
º#º#3 8
=
º#º#9 :
ii
º#º#; =
.
º#º#= >
ORCADO
º#º#> D
.
º#º#D E
ToString
º#º#E M
(
º#º#M N
)
º#º#N O
}
º#º#P Q
)
º#º#Q R
;
º#º#R S
Tr
Ω#Ω# 
.
Ω#Ω# 
tdsEsquerda
Ω#Ω# "
.
Ω#Ω#" #
Add
Ω#Ω## &
(
Ω#Ω#& '
new
Ω#Ω#' *
Tds
Ω#Ω#+ .
(
Ω#Ω#. /
)
Ω#Ω#/ 0
{
Ω#Ω#1 2
valor
Ω#Ω#3 8
=
Ω#Ω#9 :
ii
Ω#Ω#; =
.
Ω#Ω#= >
DESVIO
Ω#Ω#> D
.
Ω#Ω#D E
ToString
Ω#Ω#E M
(
Ω#Ω#M N
)
Ω#Ω#N O
}
Ω#Ω#P Q
)
Ω#Ω#Q R
;
Ω#Ω#R S
Tr
æ#æ# 
.
æ#æ# 
tdsEsquerda
æ#æ# "
.
æ#æ#" #
Add
æ#æ## &
(
æ#æ#& '
new
æ#æ#' *
Tds
æ#æ#+ .
(
æ#æ#. /
)
æ#æ#/ 0
{
æ#æ#1 2
valor
æ#æ#3 8
=
æ#æ#9 :
ii
æ#æ#; =
.
æ#æ#= >
DESVIOPERCENTUAL
æ#æ#> N
.
æ#æ#N O
ToString
æ#æ#O W
(
æ#æ#W X
)
æ#æ#X Y
}
æ#æ#Z [
)
æ#æ#[ \
;
æ#æ#\ ]
}
ø#ø# 
filtro
≈#≈# 
=
≈#≈# 
result2
≈#≈#  
.
≈#≈#  !
Where
≈#≈#! &
(
≈#≈#& '
r
≈#≈#' (
=>
≈#≈#) +
r
≈#≈#, -
.
≈#≈#- .
CLASSIFIC_NEGOCIO
≈#≈#. ?
.
≈#≈#? @
Equals
≈#≈#@ F
(
≈#≈#F G
i
≈#≈#G H
.
≈#≈#H I
CLASSIFIC_NEGOCIO
≈#≈#I Z
)
≈#≈#Z [
)
≈#≈#[ \
.
≈#≈#\ ]
ToList
≈#≈#] c
(
≈#≈#c d
)
≈#≈#d e
;
≈#≈#e f
foreach
∆#∆# 
(
∆#∆# 
var
∆#∆# 
ii
∆#∆# 
in
∆#∆#  "
filtro
∆#∆## )
)
∆#∆#) *
{
«#«# 
Tr
»#»# 
.
»#»# 

tdsDireita
»#»# !
.
»#»#! "
Add
»#»#" %
(
»#»#% &
new
»#»#& )
Tds
»#»#* -
(
»#»#- .
)
»#»#. /
{
»#»#0 1
valor
»#»#2 7
=
»#»#8 9
ii
»#»#: <
.
»#»#< =
REAL
»#»#= A
.
»#»#A B
ToString
»#»#B J
(
»#»#J K
)
»#»#K L
}
»#»#M N
)
»#»#N O
;
»#»#O P
Tr
…#…# 
.
…#…# 

tdsDireita
…#…# !
.
…#…#! "
Add
…#…#" %
(
…#…#% &
new
…#…#& )
Tds
…#…#* -
(
…#…#- .
)
…#…#. /
{
…#…#0 1
valor
…#…#2 7
=
…#…#8 9
ii
…#…#: <
.
…#…#< =
ORCADO
…#…#= C
.
…#…#C D
ToString
…#…#D L
(
…#…#L M
)
…#…#M N
}
…#…#O P
)
…#…#P Q
;
…#…#Q R
Tr
 # # 
.
 # # 

tdsDireita
 # # !
.
 # #! "
Add
 # #" %
(
 # #% &
new
 # #& )
Tds
 # #* -
(
 # #- .
)
 # #. /
{
 # #0 1
valor
 # #2 7
=
 # #8 9
ii
 # #: <
.
 # #< =
DESVIO
 # #= C
.
 # #C D
ToString
 # #D L
(
 # #L M
)
 # #M N
}
 # #O P
)
 # #P Q
;
 # #Q R
Tr
À#À# 
.
À#À# 

tdsDireita
À#À# !
.
À#À#! "
Add
À#À#" %
(
À#À#% &
new
À#À#& )
Tds
À#À#* -
(
À#À#- .
)
À#À#. /
{
À#À#0 1
valor
À#À#2 7
=
À#À#8 9
ii
À#À#: <
.
À#À#< =
DESVIOPERCENTUAL
À#À#= M
.
À#À#M N
ToString
À#À#N V
(
À#À#V W
)
À#À#W X
}
À#À#Y Z
)
À#À#Z [
;
À#À#[ \
}
Ã#Ã# 
tabela
–#–# 
.
–#–# 
trsMeio
–#–# 
.
–#–# 
Add
–#–# "
(
–#–#" #
Tr
–#–## %
)
–#–#% &
;
–#–#& '
}
—#—# 
var
◊#◊# 
queryRowsFooter
◊#◊# 
=
◊#◊#  !
new
◊#◊#" %
List
◊#◊#& *
<
◊#◊#* +
string
◊#◊#+ 1
>
◊#◊#1 2
(
◊#◊#2 3
)
◊#◊#3 4
;
◊#◊#4 5
queryRowsFooter
ÿ#ÿ# 
.
ÿ#ÿ# 
Add
ÿ#ÿ# 
(
ÿ#ÿ#  
$str
ÿ#ÿ#  '
)
ÿ#ÿ#' (
;
ÿ#ÿ#( )
tabela
Ÿ#Ÿ# 
.
Ÿ#Ÿ# 
footer
Ÿ#Ÿ# 
=
Ÿ#Ÿ# 
new
Ÿ#Ÿ# 
List
Ÿ#Ÿ#  $
<
Ÿ#Ÿ#$ %
Trs
Ÿ#Ÿ#% (
>
Ÿ#Ÿ#( )
(
Ÿ#Ÿ#) *
)
Ÿ#Ÿ#* +
;
Ÿ#Ÿ#+ ,
foreach
⁄#⁄# 
(
⁄#⁄# 
var
⁄#⁄# 
i
⁄#⁄# 
in
⁄#⁄# 
queryRowsFooter
⁄#⁄# -
)
⁄#⁄#- .
{
€#€# 
var
›#›# 
Tr
›#›# 
=
›#›# 
new
›#›# 
Trs
›#›#  
(
›#›#  !
)
›#›#! "
{
ﬁ#ﬁ# 
name
ﬂ#ﬂ# 
=
ﬂ#ﬂ# 
i
ﬂ#ﬂ# 
,
ﬂ#ﬂ# 
tdsEsquerda
‡#‡# 
=
‡#‡#  !
new
‡#‡#" %
List
‡#‡#& *
<
‡#‡#* +
Tds
‡#‡#+ .
>
‡#‡#. /
(
‡#‡#/ 0
)
‡#‡#0 1
,
‡#‡#1 2

tdsDireita
·#·# 
=
·#·#  
new
·#·#! $
List
·#·#% )
<
·#·#) *
Tds
·#·#* -
>
·#·#- .
(
·#·#. /
)
·#·#/ 0
}
‚#‚# 
;
‚#‚# 
foreach
Ê#Ê# 
(
Ê#Ê# 
var
Ê#Ê# 
ii
Ê#Ê# 
in
Ê#Ê#  "
result3
Ê#Ê## *
)
Ê#Ê#* +
{
Á#Á# 
Tr
Ë#Ë# 
.
Ë#Ë# 
tdsEsquerda
Ë#Ë# "
.
Ë#Ë#" #
Add
Ë#Ë## &
(
Ë#Ë#& '
new
Ë#Ë#' *
Tds
Ë#Ë#+ .
(
Ë#Ë#. /
)
Ë#Ë#/ 0
{
Ë#Ë#1 2
valor
Ë#Ë#3 8
=
Ë#Ë#9 :
ii
Ë#Ë#; =
.
Ë#Ë#= >
REAL
Ë#Ë#> B
.
Ë#Ë#B C
ToString
Ë#Ë#C K
(
Ë#Ë#K L
)
Ë#Ë#L M
}
Ë#Ë#N O
)
Ë#Ë#O P
;
Ë#Ë#P Q
Tr
È#È# 
.
È#È# 
tdsEsquerda
È#È# "
.
È#È#" #
Add
È#È## &
(
È#È#& '
new
È#È#' *
Tds
È#È#+ .
(
È#È#. /
)
È#È#/ 0
{
È#È#1 2
valor
È#È#3 8
=
È#È#9 :
ii
È#È#; =
.
È#È#= >
ORCADO
È#È#> D
.
È#È#D E
ToString
È#È#E M
(
È#È#M N
)
È#È#N O
}
È#È#P Q
)
È#È#Q R
;
È#È#R S
Tr
Í#Í# 
.
Í#Í# 
tdsEsquerda
Í#Í# "
.
Í#Í#" #
Add
Í#Í## &
(
Í#Í#& '
new
Í#Í#' *
Tds
Í#Í#+ .
(
Í#Í#. /
)
Í#Í#/ 0
{
Í#Í#1 2
valor
Í#Í#3 8
=
Í#Í#9 :
ii
Í#Í#; =
.
Í#Í#= >
DESVIO
Í#Í#> D
.
Í#Í#D E
ToString
Í#Í#E M
(
Í#Í#M N
)
Í#Í#N O
}
Í#Í#P Q
)
Í#Í#Q R
;
Í#Í#R S
Tr
Î#Î# 
.
Î#Î# 
tdsEsquerda
Î#Î# "
.
Î#Î#" #
Add
Î#Î## &
(
Î#Î#& '
new
Î#Î#' *
Tds
Î#Î#+ .
(
Î#Î#. /
)
Î#Î#/ 0
{
Î#Î#1 2
valor
Î#Î#3 8
=
Î#Î#9 :
ii
Î#Î#; =
.
Î#Î#= >
DESVIOPERCENTUAL
Î#Î#> N
.
Î#Î#N O
ToString
Î#Î#O W
(
Î#Î#W X
)
Î#Î#X Y
}
Î#Î#Z [
)
Î#Î#[ \
;
Î#Î#\ ]
}
Ï#Ï# 
foreach
Ú#Ú# 
(
Ú#Ú# 
var
Ú#Ú# 
ii
Ú#Ú# 
in
Ú#Ú#  "
result4
Ú#Ú## *
)
Ú#Ú#* +
{
Û#Û# 
Tr
Ù#Ù# 
.
Ù#Ù# 

tdsDireita
Ù#Ù# !
.
Ù#Ù#! "
Add
Ù#Ù#" %
(
Ù#Ù#% &
new
Ù#Ù#& )
Tds
Ù#Ù#* -
(
Ù#Ù#- .
)
Ù#Ù#. /
{
Ù#Ù#0 1
valor
Ù#Ù#2 7
=
Ù#Ù#8 9
ii
Ù#Ù#: <
.
Ù#Ù#< =
REAL
Ù#Ù#= A
.
Ù#Ù#A B
ToString
Ù#Ù#B J
(
Ù#Ù#J K
)
Ù#Ù#K L
}
Ù#Ù#M N
)
Ù#Ù#N O
;
Ù#Ù#O P
Tr
ı#ı# 
.
ı#ı# 

tdsDireita
ı#ı# !
.
ı#ı#! "
Add
ı#ı#" %
(
ı#ı#% &
new
ı#ı#& )
Tds
ı#ı#* -
(
ı#ı#- .
)
ı#ı#. /
{
ı#ı#0 1
valor
ı#ı#2 7
=
ı#ı#8 9
ii
ı#ı#: <
.
ı#ı#< =
ORCADO
ı#ı#= C
.
ı#ı#C D
ToString
ı#ı#D L
(
ı#ı#L M
)
ı#ı#M N
}
ı#ı#O P
)
ı#ı#P Q
;
ı#ı#Q R
Tr
ˆ#ˆ# 
.
ˆ#ˆ# 

tdsDireita
ˆ#ˆ# !
.
ˆ#ˆ#! "
Add
ˆ#ˆ#" %
(
ˆ#ˆ#% &
new
ˆ#ˆ#& )
Tds
ˆ#ˆ#* -
(
ˆ#ˆ#- .
)
ˆ#ˆ#. /
{
ˆ#ˆ#0 1
valor
ˆ#ˆ#2 7
=
ˆ#ˆ#8 9
ii
ˆ#ˆ#: <
.
ˆ#ˆ#< =
DESVIO
ˆ#ˆ#= C
.
ˆ#ˆ#C D
ToString
ˆ#ˆ#D L
(
ˆ#ˆ#L M
)
ˆ#ˆ#M N
}
ˆ#ˆ#O P
)
ˆ#ˆ#P Q
;
ˆ#ˆ#Q R
Tr
˜#˜# 
.
˜#˜# 

tdsDireita
˜#˜# !
.
˜#˜#! "
Add
˜#˜#" %
(
˜#˜#% &
new
˜#˜#& )
Tds
˜#˜#* -
(
˜#˜#- .
)
˜#˜#. /
{
˜#˜#0 1
valor
˜#˜#2 7
=
˜#˜#8 9
ii
˜#˜#: <
.
˜#˜#< =
DESVIOPERCENTUAL
˜#˜#= M
.
˜#˜#M N
ToString
˜#˜#N V
(
˜#˜#V W
)
˜#˜#W X
}
˜#˜#Y Z
)
˜#˜#Z [
;
˜#˜#[ \
}
¯#¯# 
tabela
¸#¸# 
.
¸#¸# 
footer
¸#¸# 
.
¸#¸# 
Add
¸#¸# !
(
¸#¸#! "
Tr
¸#¸#" $
)
¸#¸#$ %
;
¸#¸#% &
}
˝#˝# 
return
Å$Å$ 
tabela
Å$Å$ 
;
Å$Å$ 
}
Ç$Ç$ 	
public
Ö$Ö$ 
class
Ö$Ö$ 
ResultQuery1
Ö$Ö$ !
{
Ü$Ü$ 	
public
á$á$ 
int
á$á$ 
QUERY
á$á$ 
{
á$á$ 
get
á$á$ "
;
á$á$" #
set
á$á$$ '
;
á$á$' (
}
á$á$) *
public
à$à$ 
string
à$à$ 
CLASSIFIC_NEGOCIO
à$à$ +
{
à$à$, -
get
à$à$. 1
;
à$à$1 2
set
à$à$3 6
;
à$à$6 7
}
à$à$8 9
public
â$â$ 
string
â$â$ 
MACROPROCESSO
â$â$ '
{
â$â$( )
get
â$â$* -
;
â$â$- .
set
â$â$/ 2
;
â$â$2 3
}
â$â$4 5
public
ä$ä$ 
string
ä$ä$ 
ORCADO
ä$ä$  
{
ä$ä$! "
get
ä$ä$# &
;
ä$ä$& '
set
ä$ä$( +
;
ä$ä$+ ,
}
ä$ä$- .
public
ã$ã$ 
string
ã$ã$ 
DESVIO
ã$ã$  
{
ã$ã$! "
get
ã$ã$# &
;
ã$ã$& '
set
ã$ã$( +
;
ã$ã$+ ,
}
ã$ã$- .
public
å$å$ 
string
å$å$ 
DESVIOPERCENTUAL
å$å$ *
{
å$å$+ ,
get
å$å$- 0
;
å$å$0 1
set
å$å$2 5
;
å$å$5 6
}
å$å$7 8
public
ç$ç$ 
string
ç$ç$ 
REAL
ç$ç$ 
{
ç$ç$  
get
ç$ç$! $
;
ç$ç$$ %
set
ç$ç$& )
;
ç$ç$) *
}
ç$ç$+ ,
}
è$è$ 	
public
¬$¬$ 
static
¬$¬$ &
TabelaDinamicaResultados
¬$¬$ .(
MockTabelaVisaoGeralDaArea
¬$¬$/ I
(
¬$¬$I J
)
¬$¬$J K
{
√$√$ 	
var
ƒ$ƒ$ 
tabela
ƒ$ƒ$ 
=
ƒ$ƒ$ 
new
ƒ$ƒ$ &
TabelaDinamicaResultados
ƒ$ƒ$ 5
(
ƒ$ƒ$5 6
)
ƒ$ƒ$6 7
;
ƒ$ƒ$7 8
tabela
…$…$ 
.
…$…$ 
trsCabecalho1
…$…$  
=
…$…$! "
new
…$…$# &
List
…$…$' +
<
…$…$+ ,
Ths
…$…$, /
>
…$…$/ 0
(
…$…$0 1
)
…$…$1 2
;
…$…$2 3
tabela
À$À$ 
.
À$À$ 
trsCabecalho1
À$À$  
.
À$À$  !
Add
À$À$! $
(
À$À$$ %
new
À$À$% (
Ths
À$À$) ,
(
À$À$, -
)
À$À$- .
{
Ã$Ã$ 
name
Õ$Õ$ 
=
Õ$Õ$ 
$str
Õ$Õ$ 
}
Œ$Œ$ 
)
Œ$Œ$ 
;
Œ$Œ$ 
tabela
–$–$ 
.
–$–$ 
trsCabecalho1
–$–$  
.
–$–$  !
Add
–$–$! $
(
–$–$$ %
new
–$–$% (
Ths
–$–$) ,
(
–$–$, -
)
–$–$- .
{
—$—$ 
name
“$“$ 
=
“$“$ 
$str
“$“$  
}
”$”$ 
)
”$”$ 
;
”$”$ 
tabela
◊$◊$ 
.
◊$◊$ 
trsCabecalho2
◊$◊$  
=
◊$◊$! "
new
◊$◊$# &
List
◊$◊$' +
<
◊$◊$+ ,
Ths
◊$◊$, /
>
◊$◊$/ 0
(
◊$◊$0 1
)
◊$◊$1 2
;
◊$◊$2 3
tabela
ÿ$ÿ$ 
.
ÿ$ÿ$ 
trsCabecalho2
ÿ$ÿ$  
.
ÿ$ÿ$  !
Add
ÿ$ÿ$! $
(
ÿ$ÿ$$ %
new
ÿ$ÿ$% (
Ths
ÿ$ÿ$) ,
(
ÿ$ÿ$, -
)
ÿ$ÿ$- .
{
Ÿ$Ÿ$ 
name
⁄$⁄$ 
=
⁄$⁄$ 
$str
⁄$⁄$ 
,
⁄$⁄$ 
coolspan
€$€$ 
=
€$€$ 
$num
€$€$ 
,
€$€$ 
}
›$›$ 
)
›$›$ 
;
›$›$ 
tabela
ﬂ$ﬂ$ 
.
ﬂ$ﬂ$ 
trsCabecalho2
ﬂ$ﬂ$  
.
ﬂ$ﬂ$  !
Add
ﬂ$ﬂ$! $
(
ﬂ$ﬂ$$ %
new
ﬂ$ﬂ$% (
Ths
ﬂ$ﬂ$) ,
(
ﬂ$ﬂ$, -
)
ﬂ$ﬂ$- .
{
‡$‡$ 
name
·$·$ 
=
·$·$ 
$str
·$·$ 
,
·$·$ 
coolspan
‚$‚$ 
=
‚$‚$ 
$num
‚$‚$ 
,
‚$‚$ 
}
‰$‰$ 
)
‰$‰$ 
;
‰$‰$ 
tabela
Ê$Ê$ 
.
Ê$Ê$ 
trsCabecalho2
Ê$Ê$  
.
Ê$Ê$  !
Add
Ê$Ê$! $
(
Ê$Ê$$ %
new
Ê$Ê$% (
Ths
Ê$Ê$) ,
(
Ê$Ê$, -
)
Ê$Ê$- .
{
Á$Á$ 
name
Ë$Ë$ 
=
Ë$Ë$ 
$str
Ë$Ë$ 
,
Ë$Ë$ 
coolspan
È$È$ 
=
È$È$ 
$num
È$È$ 
,
È$È$ 
}
Î$Î$ 
)
Î$Î$ 
;
Î$Î$ 
var
Ó$Ó$ 
thsMeio
Ó$Ó$ 
=
Ó$Ó$ 
new
Ó$Ó$ 
List
Ó$Ó$ "
<
Ó$Ó$" #
Ths
Ó$Ó$# &
>
Ó$Ó$& '
(
Ó$Ó$' (
)
Ó$Ó$( )
;
Ó$Ó$) *
thsMeio
Ô$Ô$ 
.
Ô$Ô$ 
Add
Ô$Ô$ 
(
Ô$Ô$ 
new
Ô$Ô$ 
Ths
Ô$Ô$ 
(
Ô$Ô$  
)
Ô$Ô$  !
{
Ô$Ô$" #
name
Ô$Ô$$ (
=
Ô$Ô$) *
$str
Ô$Ô$+ 3
,
Ô$Ô$3 4
coolspan
Ô$Ô$5 =
=
Ô$Ô$> ?
$num
Ô$Ô$@ A
}
Ô$Ô$B C
)
Ô$Ô$C D
;
Ô$Ô$D E
thsMeio
$$ 
.
$$ 
Add
$$ 
(
$$ 
new
$$ 
Ths
$$ 
(
$$  
)
$$  !
{
$$" #
name
$$$ (
=
$$) *
$str
$$+ 1
,
$$1 2
coolspan
$$3 ;
=
$$< =
$num
$$> ?
}
$$@ A
)
$$A B
;
$$B C
thsMeio
Ò$Ò$ 
.
Ò$Ò$ 
Add
Ò$Ò$ 
(
Ò$Ò$ 
new
Ò$Ò$ 
Ths
Ò$Ò$ 
(
Ò$Ò$  
)
Ò$Ò$  !
{
Ò$Ò$" #
name
Ò$Ò$$ (
=
Ò$Ò$) *
$str
Ò$Ò$+ 5
,
Ò$Ò$5 6
coolspan
Ò$Ò$7 ?
=
Ò$Ò$@ A
$num
Ò$Ò$B C
}
Ò$Ò$D E
)
Ò$Ò$E F
;
Ò$Ò$F G
thsMeio
Ú$Ú$ 
.
Ú$Ú$ 
Add
Ú$Ú$ 
(
Ú$Ú$ 
new
Ú$Ú$ 
Ths
Ú$Ú$ 
(
Ú$Ú$  
)
Ú$Ú$  !
{
Ú$Ú$" #
name
Ú$Ú$$ (
=
Ú$Ú$) *
$str
Ú$Ú$+ 5
,
Ú$Ú$5 6
coolspan
Ú$Ú$7 ?
=
Ú$Ú$@ A
$num
Ú$Ú$B C
}
Ú$Ú$D E
)
Ú$Ú$E F
;
Ú$Ú$F G
foreach
Ù$Ù$ 
(
Ù$Ù$ 
var
Ù$Ù$ 
i
Ù$Ù$ 
in
Ù$Ù$ 
tabela
Ù$Ù$ $
.
Ù$Ù$$ %
trsCabecalho2
Ù$Ù$% 2
)
Ù$Ù$2 3
{
ı$ı$ 
i
ˆ$ˆ$ 
.
ˆ$ˆ$ 
tds
ˆ$ˆ$ 
=
ˆ$ˆ$ 
thsMeio
ˆ$ˆ$ 
;
ˆ$ˆ$  
}
˜$˜$ 
tabela
˘$˘$ 
.
˘$˘$ 
trsCabecalho3
˘$˘$  
=
˘$˘$! "
new
˘$˘$# &
List
˘$˘$' +
<
˘$˘$+ ,
Ths
˘$˘$, /
>
˘$˘$/ 0
(
˘$˘$0 1
)
˘$˘$1 2
;
˘$˘$2 3
tabela
˙$˙$ 
.
˙$˙$ 
trsCabecalho3
˙$˙$  
.
˙$˙$  !
Add
˙$˙$! $
(
˙$˙$$ %
new
˙$˙$% (
Ths
˙$˙$) ,
(
˙$˙$, -
)
˙$˙$- .
{
˚$˚$ 
name
¸$¸$ 
=
¸$¸$ 
$str
¸$¸$ 
,
¸$¸$ 
coolspan
˝$˝$ 
=
˝$˝$ 
$num
˝$˝$ 
,
˝$˝$ 
tds
˛$˛$ 
=
˛$˛$ 
thsMeio
˛$˛$ 
}
ˇ$ˇ$ 
)
ˇ$ˇ$ 
;
ˇ$ˇ$ 
tabela
Ü%Ü% 
.
Ü%Ü% 
trsMeio
Ü%Ü% 
=
Ü%Ü% 
new
Ü%Ü%  
List
Ü%Ü%! %
<
Ü%Ü%% &
Trs
Ü%Ü%& )
>
Ü%Ü%) *
(
Ü%Ü%* +
)
Ü%Ü%+ ,
;
Ü%Ü%, -
var
à%à% 
tdsEsquerda1
à%à% 
=
à%à% 
new
à%à% "
List
à%à%# '
<
à%à%' (
Tds
à%à%( +
>
à%à%+ ,
(
à%à%, -
)
à%à%- .
;
à%à%. /
var
â%â% 
tdsEsquerda2
â%â% 
=
â%â% 
new
â%â% "
List
â%â%# '
<
â%â%' (
Tds
â%â%( +
>
â%â%+ ,
(
â%â%, -
)
â%â%- .
;
â%â%. /
var
ä%ä% 
tdsEsquerda3
ä%ä% 
=
ä%ä% 
new
ä%ä% "
List
ä%ä%# '
<
ä%ä%' (
Tds
ä%ä%( +
>
ä%ä%+ ,
(
ä%ä%, -
)
ä%ä%- .
;
ä%ä%. /
for
å%å% 
(
å%å% 
int
å%å% 
i
å%å% 
=
å%å% 
$num
å%å% 
;
å%å% 
i
å%å% 
<
å%å% 
$num
å%å%  !
*
å%å%" #
$num
å%å%$ %
;
å%å%% &
i
å%å%' (
++
å%å%( *
)
å%å%* +
{
ç%ç% 
tdsEsquerda1
é%é% 
.
é%é% 
Add
é%é%  
(
é%é%  !
new
é%é%! $
Tds
é%é%% (
(
é%é%( )
)
é%é%) *
{
é%é%+ ,
valor
é%é%- 2
=
é%é%3 4
(
é%é%5 6
$num
é%é%6 8
*
é%é%9 :
i
é%é%; <
)
é%é%< =
.
é%é%= >
ToString
é%é%> F
(
é%é%F G
)
é%é%G H
,
é%é%H I
coolspan
é%é%J R
=
é%é%S T
$num
é%é%U V
}
é%é%W X
)
é%é%X Y
;
é%é%Y Z
tdsEsquerda2
ê%ê% 
.
ê%ê% 
Add
ê%ê%  
(
ê%ê%  !
new
ê%ê%! $
Tds
ê%ê%% (
(
ê%ê%( )
)
ê%ê%) *
{
ê%ê%+ ,
valor
ê%ê%- 2
=
ê%ê%3 4
(
ê%ê%5 6
$num
ê%ê%6 8
*
ê%ê%9 :
i
ê%ê%; <
)
ê%ê%< =
.
ê%ê%= >
ToString
ê%ê%> F
(
ê%ê%F G
)
ê%ê%G H
,
ê%ê%H I
coolspan
ê%ê%J R
=
ê%ê%S T
$num
ê%ê%U V
}
ê%ê%W X
)
ê%ê%X Y
;
ê%ê%Y Z
tdsEsquerda3
í%í% 
.
í%í% 
Add
í%í%  
(
í%í%  !
new
í%í%! $
Tds
í%í%% (
(
í%í%( )
)
í%í%) *
{
í%í%+ ,
valor
í%í%- 2
=
í%í%3 4
(
í%í%5 6
$num
í%í%6 8
*
í%í%9 :
i
í%í%; <
)
í%í%< =
.
í%í%= >
ToString
í%í%> F
(
í%í%F G
)
í%í%G H
,
í%í%H I
coolspan
í%í%J R
=
í%í%S T
$num
í%í%U V
}
í%í%W X
)
í%í%X Y
;
í%í%Y Z
}
ì%ì% 
var
ï%ï% 
tdsDireita1
ï%ï% 
=
ï%ï% 
new
ï%ï% !
List
ï%ï%" &
<
ï%ï%& '
Tds
ï%ï%' *
>
ï%ï%* +
(
ï%ï%+ ,
)
ï%ï%, -
;
ï%ï%- .
var
ñ%ñ% 
tdsDireita2
ñ%ñ% 
=
ñ%ñ% 
new
ñ%ñ% !
List
ñ%ñ%" &
<
ñ%ñ%& '
Tds
ñ%ñ%' *
>
ñ%ñ%* +
(
ñ%ñ%+ ,
)
ñ%ñ%, -
;
ñ%ñ%- .
var
ó%ó% 
tdsDireita3
ó%ó% 
=
ó%ó% 
new
ó%ó% !
List
ó%ó%" &
<
ó%ó%& '
Tds
ó%ó%' *
>
ó%ó%* +
(
ó%ó%+ ,
)
ó%ó%, -
;
ó%ó%- .
for
ô%ô% 
(
ô%ô% 
int
ô%ô% 
i
ô%ô% 
=
ô%ô% 
$num
ô%ô% 
;
ô%ô% 
i
ô%ô% 
<
ô%ô% 
$num
ô%ô%  !
;
ô%ô%! "
i
ô%ô%# $
++
ô%ô%$ &
)
ô%ô%& '
{
ö%ö% 
tdsDireita1
õ%õ% 
.
õ%õ% 
Add
õ%õ% 
(
õ%õ%  
new
õ%õ%  #
Tds
õ%õ%$ '
(
õ%õ%' (
)
õ%õ%( )
{
õ%õ%* +
valor
õ%õ%, 1
=
õ%õ%2 3
(
õ%õ%4 5
i
õ%õ%5 6
*
õ%õ%7 8
$num
õ%õ%9 <
)
õ%õ%< =
.
õ%õ%= >
ToString
õ%õ%> F
(
õ%õ%F G
)
õ%õ%G H
,
õ%õ%H I
coolspan
õ%õ%J R
=
õ%õ%S T
$num
õ%õ%U V
}
õ%õ%W X
)
õ%õ%X Y
;
õ%õ%Y Z
tdsDireita2
ù%ù% 
.
ù%ù% 
Add
ù%ù% 
(
ù%ù%  
new
ù%ù%  #
Tds
ù%ù%$ '
(
ù%ù%' (
)
ù%ù%( )
{
ù%ù%* +
valor
ù%ù%, 1
=
ù%ù%2 3
(
ù%ù%4 5
i
ù%ù%5 6
*
ù%ù%7 8
$num
ù%ù%9 =
)
ù%ù%= >
.
ù%ù%> ?
ToString
ù%ù%? G
(
ù%ù%G H
)
ù%ù%H I
,
ù%ù%I J
coolspan
ù%ù%K S
=
ù%ù%T U
$num
ù%ù%V W
}
ù%ù%X Y
)
ù%ù%Y Z
;
ù%ù%Z [
tdsDireita3
ü%ü% 
.
ü%ü% 
Add
ü%ü% 
(
ü%ü%  
new
ü%ü%  #
Tds
ü%ü%$ '
(
ü%ü%' (
)
ü%ü%( )
{
ü%ü%* +
valor
ü%ü%, 1
=
ü%ü%2 3
(
ü%ü%4 5
i
ü%ü%5 6
*
ü%ü%7 8
$num
ü%ü%9 >
)
ü%ü%> ?
.
ü%ü%? @
ToString
ü%ü%@ H
(
ü%ü%H I
)
ü%ü%I J
,
ü%ü%J K
coolspan
ü%ü%L T
=
ü%ü%U V
$num
ü%ü%W X
}
ü%ü%Y Z
)
ü%ü%Z [
;
ü%ü%[ \
}
°%°% 
tabela
£%£% 
.
£%£% 
trsMeio
£%£% 
.
£%£% 
Add
£%£% 
(
£%£% 
new
£%£% "
Trs
£%£%# &
(
£%£%& '
)
£%£%' (
{
§%§% 
name
•%•% 
=
•%•% 
$str
•%•% 
,
•%•%  
tdsEsquerda
¶%¶% 
=
¶%¶% 
tdsEsquerda1
¶%¶% *
,
¶%¶%* +

tdsDireita
ß%ß% 
=
ß%ß% 
tdsDireita1
ß%ß% (
}
®%®% 
)
®%®% 
;
®%®% 
tabela
™%™% 
.
™%™% 
trsMeio
™%™% 
.
™%™% 
Add
™%™% 
(
™%™% 
new
™%™% "
Trs
™%™%# &
(
™%™%& '
)
™%™%' (
{
´%´% 
name
¨%¨% 
=
¨%¨% 
$str
¨%¨% 
,
¨%¨%  
tdsEsquerda
≠%≠% 
=
≠%≠% 
tdsEsquerda2
≠%≠% *
,
≠%≠%* +

tdsDireita
Æ%Æ% 
=
Æ%Æ% 
tdsDireita2
Æ%Æ% (
}
∞%∞% 
)
∞%∞% 
;
∞%∞% 
tabela
≤%≤% 
.
≤%≤% 
trsMeio
≤%≤% 
.
≤%≤% 
Add
≤%≤% 
(
≤%≤% 
new
≤%≤% "
Trs
≤%≤%# &
(
≤%≤%& '
)
≤%≤%' (
{
≥%≥% 
name
¥%¥% 
=
¥%¥% 
$str
¥%¥% 
,
¥%¥%  
tdsEsquerda
µ%µ% 
=
µ%µ% 
tdsEsquerda3
µ%µ% *
,
µ%µ%* +

tdsDireita
∂%∂% 
=
∂%∂% 
tdsDireita3
∂%∂% (
}
∏%∏% 
)
∏%∏% 
;
∏%∏% 
tabela
¡%¡% 
.
¡%¡% 
footer
¡%¡% 
=
¡%¡% 
new
¡%¡% 
List
¡%¡%  $
<
¡%¡%$ %
Trs
¡%¡%% (
>
¡%¡%( )
(
¡%¡%) *
)
¡%¡%* +
;
¡%¡%+ ,
var
√%√% 
tdsDoFooter2
√%√% 
=
√%√% 
new
√%√% "
List
√%√%# '
<
√%√%' (
Tds
√%√%( +
>
√%√%+ ,
(
√%√%, -
)
√%√%- .
;
√%√%. /
for
ƒ%ƒ% 
(
ƒ%ƒ% 
int
ƒ%ƒ% 
i
ƒ%ƒ% 
=
ƒ%ƒ% 
$num
ƒ%ƒ% 
;
ƒ%ƒ% 
i
ƒ%ƒ% 
<
ƒ%ƒ% 
$num
ƒ%ƒ%  !
*
ƒ%ƒ%" #
$num
ƒ%ƒ%$ %
;
ƒ%ƒ%% &
i
ƒ%ƒ%' (
++
ƒ%ƒ%( *
)
ƒ%ƒ%* +
{
≈%≈% 
tdsDoFooter2
∆%∆% 
.
∆%∆% 
Add
∆%∆%  
(
∆%∆%  !
new
∆%∆%! $
Tds
∆%∆%% (
(
∆%∆%( )
)
∆%∆%) *
{
«%«% 
coolspan
»%»% 
=
»%»% 
$num
»%»%  
,
»%»%  !
valor
…%…% 
=
…%…% 
(
…%…% 
$num
…%…% !
*
…%…%" #
i
…%…%$ %
)
…%…%% &
.
…%…%& '
ToString
…%…%' /
(
…%…%/ 0
)
…%…%0 1
}
 % % 
)
 % % 
;
 % % 
}
À%À% 
var
Õ%Õ% 
tdsDoFooter3
Õ%Õ% 
=
Õ%Õ% 
new
Õ%Õ% "
List
Õ%Õ%# '
<
Õ%Õ%' (
Tds
Õ%Õ%( +
>
Õ%Õ%+ ,
(
Õ%Õ%, -
)
Õ%Õ%- .
;
Õ%Õ%. /
for
Œ%Œ% 
(
Œ%Œ% 
int
Œ%Œ% 
i
Œ%Œ% 
=
Œ%Œ% 
$num
Œ%Œ% 
;
Œ%Œ% 
i
Œ%Œ% 
<
Œ%Œ% 
$num
Œ%Œ%  !
*
Œ%Œ%" #
$num
Œ%Œ%$ %
;
Œ%Œ%% &
i
Œ%Œ%' (
++
Œ%Œ%( *
)
Œ%Œ%* +
{
œ%œ% 
tdsDoFooter3
–%–% 
.
–%–% 
Add
–%–%  
(
–%–%  !
new
–%–%! $
Tds
–%–%% (
(
–%–%( )
)
–%–%) *
{
—%—% 
coolspan
“%“% 
=
“%“% 
$num
“%“%  
,
“%“%  !
valor
”%”% 
=
”%”% 
(
”%”% 
$num
”%”% !
*
”%”%" #
i
”%”%$ %
)
”%”%% &
.
”%”%& '
ToString
”%”%' /
(
”%”%/ 0
)
”%”%0 1
}
‘%‘% 
)
‘%‘% 
;
‘%‘% 
}
’%’% 
tabela
◊%◊% 
.
◊%◊% 
footer
◊%◊% 
.
◊%◊% 
Add
◊%◊% 
(
◊%◊% 
new
◊%◊% !
Trs
◊%◊%" %
(
◊%◊%% &
)
◊%◊%& '
{
ÿ%ÿ% 
name
Ÿ%Ÿ% 
=
Ÿ%Ÿ% 
$str
Ÿ%Ÿ% 
,
Ÿ%Ÿ%  
coolspan
⁄%⁄% 
=
⁄%⁄% 
$num
⁄%⁄% 
,
⁄%⁄% 
tdsEsquerda
€%€% 
=
€%€% 
tdsDoFooter2
€%€% *
,
€%€%* +

tdsDireita
‹%‹% 
=
‹%‹% 
tdsDoFooter3
‹%‹% )
}
ﬁ%ﬁ% 
)
ﬁ%ﬁ% 
;
ﬁ%ﬁ% 
return
‚%‚% 
tabela
‚%‚% 
;
‚%‚% 
}
„%„% 	
public
Á%Á% 
static
Á%Á% 
decimal
Á%Á% 
getMetaScore
Á%Á% *
(
Á%Á%* +
)
Á%Á%+ ,
{
Ë%Ë% 	
decimal
È%È% 
meta
È%È% 
=
È%È% 
$num
È%È% 
;
È%È% 
return
Í%Í% 
meta
Í%Í% 
;
Í%Í% 
}
Î%Î% 	
}
Ì%Ì% 
}Ò%Ò% ‹¬
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\UserAndRoles\RoleController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
public 

class 
RoleController 
:  !
BaseController" 0
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
private 
IBaseDomain 
< 
RoleType $
,$ %
RoleTypeDTO& 1
>1 2
_baseDomainRoleType3 F
;F G
private 
IBaseDomain 
< 
ScreenComponent +
,+ ,
ScreenComponentDTO- ?
>? @&
_baseDomainScreenComponentA [
;[ \
private 
IBaseDomain 
< 
RoleSGQ #
,# $

RoleSGQDTO% /
>/ 0
_baseDomainRoleSGQ1 C
;C D
private 
IBaseDomain 
< 
RoleJBS #
,# $

RoleJBSDTO% /
>/ 0
_baseDomainRoleJBS1 C
;C D
public 
RoleController 
( 
IBaseDomain )
<) *
RoleType* 2
,2 3
RoleTypeDTO4 ?
>? @
baseDomainRoleTypeA S
,S T
IBaseDomain 
< 
ScreenComponent '
,' (
ScreenComponentDTO) ;
>; <%
baseDomainScreenComponent= V
,V W
IBaseDomain 
< 
RoleSGQ 
,  

RoleSGQDTO! +
>+ ,
baseDomainRoleSGQ- >
,> ?
IBaseDomain 
< 
RoleJBS 
,  

RoleJBSDTO! +
>+ ,
baseDomainRoleJBS- >
) 
{ 	
_baseDomainRoleType   
=    !
baseDomainRoleType  " 4
;  4 5&
_baseDomainScreenComponent!! &
=!!' (%
baseDomainScreenComponent!!) B
;!!B C
_baseDomainRoleSGQ"" 
=""  
baseDomainRoleSGQ""! 2
;""2 3
_baseDomainRoleJBS## 
=##  
baseDomainRoleJBS##! 2
;##2 3
ViewBag%% 
.%% 
listaRoleType%% !
=%%" #
_baseDomainRoleType%%$ 7
.%%7 8
GetAll%%8 >
(%%> ?
)%%? @
;%%@ A
ViewBag&& 
.&&  
listaScreenComponent&& (
=&&) *&
_baseDomainScreenComponent&&+ E
.&&E F
GetAll&&F L
(&&L M
)&&M N
;&&N O
ViewBag'' 
.'' 
listaRoleSGQ''  
=''! "
_baseDomainRoleSGQ''# 5
.''5 6
GetAll''6 <
(''< =
)''= >
;''> ?
ViewBag(( 
.(( 
listaRoleJBS((  
=((! "
_baseDomainRoleJBS((# 5
.((5 6
GetAll((6 <
(((< =
)((= >
;((> ?
})) 	
public++ 
ActionResult++ 
Index++ !
(++! "
)++" #
{,, 	
return-- 
View-- 
(-- 
)-- 
;-- 
}.. 	
public00 
String00 %
UpdateScreenComponentList00 /
(00/ 0
)000 1
{11 	
ViewBag22 
.22  
listaScreenComponent22 (
=22) *&
_baseDomainScreenComponent22+ E
.22E F
GetAll22F L
(22L M
)22M N
;22N O
var44 
lines44 
=44 
$str44 
;44 
foreach55 
(55 
var55 
	component55 "
in55# %
ViewBag55& -
.55- . 
listaScreenComponent55. B
)55B C
{66 
lines77 
+=77 
$str88 
+88 
$str99 
+99 
	component99 &
.99& '
HashKey99' .
+99/ 0
$str991 8
+999 :
$str:: 
+:: 
	component:: &
.::& '
	Component::' 0
+::1 2
$str::3 :
+::; <
$str;; 
;;; 
if== 
(== 
	component== 
.== 
RoleType== &
!===' )
null==* .
)==. /
lines>> 
+=>> 
	component>> &
.>>& '
RoleType>>' /
.>>/ 0
Type>>0 4
;>>4 5
lines@@ 
+=@@ 
$str@@  
+@@! "
$strAA 
+AA 
$strBB O
+BBP Q
$strCC F
+CCG H
	componentCCI R
.CCR S
IdCCS U
+CCV W
$strCCX ]
+CC^ _
	ResourcesDD !
.DD! "
ResourceDD" *
.DD* +
editDD+ /
+DD0 1
$strDD2 =
+DD> ?
$strEE 
+EE 
$strFF 
;FF 
}GG 
varII 
bodyII 
=II 
$strII  
+II! "
linesII# (
+II) *
$strII+ 5
;II5 6
returnKK 
bodyKK 
;KK 
}MM 	
publicPP 
StringPP 
UpdateRoleJBSListPP '
(PP' (
)PP( )
{QQ 	
ViewBagRR 
.RR 
listaRoleJBSRR  
=RR! "
_baseDomainRoleJBSRR# 5
.RR5 6
GetAllRR6 <
(RR< =
)RR= >
;RR> ?
varTT 
linesTT 
=TT 
$strTT 
;TT 
foreachUU 
(UU 
varUU 
	componentUU "
inUU# %
ViewBagUU& -
.UU- .
listaRoleJBSUU. :
)UU: ;
{VV 
linesWW 
+=WW 
$strXX 
+XX 
$strYY E
+YYF G
	componentZZ !
.ZZ! "
IdZZ" $
+ZZ% &
$str[[ 
+[[ 
$str\\ 
+\\ 
	component]] !
.]]! "
ScreenComponent_Id]]" 4
+]]5 6
$str^^ 
+^^ 
$str__ 
+__ 
	component`` !
.``! "
Role``" &
+``' (
$straa 
+aa 
$strbb 
+bb 
$strcc A
+ccB C
	componentccD M
.ccM N
IdccN P
+ccQ R
$strccS w
+ccx y
	Resources	ccz É
.
ccÉ Ñ
Resource
ccÑ å
.
ccå ç
edit
ccç ë
+
ccí ì
$str
ccî ü
+
cc† °
$strdd 
+dd 
$stree 
;ee 
}ff 
varhh 
bodyhh 
=hh 
$strhh  
+hh! "
lineshh# (
+hh) *
$strhh+ 5
;hh5 6
returnjj 
bodyjj 
;jj 
}ll 	
publicnn 
Stringnn 
UpdateRoleSGQListnn '
(nn' (
)nn( )
{oo 	
ViewBagpp 
.pp 
listaRoleTypepp !
=pp" #
_baseDomainRoleTypepp$ 7
.pp7 8
GetAllpp8 >
(pp> ?
)pp? @
;pp@ A
ViewBagqq 
.qq  
listaScreenComponentqq (
=qq) *&
_baseDomainScreenComponentqq+ E
.qqE F
GetAllqqF L
(qqL M
)qqM N
;qqN O
ViewBagrr 
.rr 
listaRoleSGQrr  
=rr! "
_baseDomainRoleSGQrr# 5
.rr5 6
GetAllrr6 <
(rr< =
)rr= >
;rr> ?
vartt 
linestt 
=tt 
$strtt 
;tt 
foreachuu 
(uu 
varuu 
	componentuu "
inuu# %
ViewBaguu& -
.uu- .
listaRoleSGQuu. :
)uu: ;
{vv 
linesww 
+=ww 
$strxx 
+xx 
$stryy )
+yy* +
	componentyy, 5
.yy5 6
Idyy6 8
+yy9 :
$stryy; L
+yyM N
	componentzz !
.zz! "
Idzz" $
+zz% &
$str{{ 
+{{ 
$str|| 
+|| 
	component}} !
.}}! "
ScreenComponent_Id}}" 4
+}}5 6
$str~~ 
+~~ 
$str 
+ 
	component
ÄÄ !
.
ÄÄ! "
Role
ÄÄ" &
+
ÄÄ' (
$str
ÅÅ 
+
ÅÅ 
$str
ÇÇ 
+
ÇÇ 
$str
ÉÉ A
+
ÉÉB C
	component
ÉÉD M
.
ÉÉM N
Id
ÉÉN P
+
ÉÉQ R
$str
ÉÉS w
+
ÉÉx y
	ResourcesÉÉz É
.ÉÉÉ Ñ
ResourceÉÉÑ å
.ÉÉå ç
editÉÉç ë
+ÉÉí ì
$strÉÉî ü
+ÉÉ† °
$str
ÑÑ 
+
ÑÑ 
$str
ÖÖ 
;
ÖÖ 
}
ÜÜ 
var
àà 
body
àà 
=
àà 
$str
àà  
+
àà! "
lines
àà# (
+
àà) *
$str
àà+ 5
;
àà5 6
return
ää 
body
ää 
;
ää 
}
åå 	
public
èè 
ActionResult
èè 
LeftControlRole
èè +
(
èè+ ,
)
èè, -
{
êê 	
ViewBag
ëë 
.
ëë 
Title
ëë 
=
ëë 
	Resources
ëë %
.
ëë% &
Resource
ëë& .
.
ëë. /
left_menu_control
ëë/ @
;
ëë@ A
var
ìì 
model
ìì 
=
ìì 
db
ìì 
.
ìì 
LeftControlRole
ìì *
.
ìì* +
ToList
ìì+ 1
(
ìì1 2
)
ìì2 3
;
ìì3 4
return
ïï 
View
ïï 
(
ïï 
model
ïï 
)
ïï 
;
ïï 
}
ññ 	
public
òò 
ActionResult
òò !
EditLeftControlRole
òò /
(
òò/ 0
int
òò0 3
?
òò3 4
id
òò5 7
)
òò7 8
{
ôô 	
ViewBag
öö 
.
öö 
Title
öö 
=
öö 
	Resources
öö %
.
öö% &
Resource
öö& .
.
öö. /
edit
öö/ 3
;
öö3 4
if
úú 
(
úú 
id
úú 
==
úú 
null
úú 
)
úú 
{
ùù 
return
ûû 
new
ûû "
HttpStatusCodeResult
ûû /
(
ûû/ 0
HttpStatusCode
ûû0 >
.
ûû> ?

BadRequest
ûû? I
)
ûûI J
;
ûûJ K
}
üü 
var
†† 
model
†† 
=
†† 
db
†† 
.
†† 
LeftControlRole
†† *
.
††* +
Find
††+ /
(
††/ 0
id
††0 2
)
††2 3
;
††3 4
if
°° 
(
°° 
model
°° 
==
°° 
null
°° 
)
°° 
{
¢¢ 
return
££ 
HttpNotFound
££ #
(
££# $
)
££$ %
;
££% &
}
§§ 
return
•• 
View
•• 
(
•• 
model
•• 
)
•• 
;
•• 
}
¶¶ 	
[
®® 	
HttpPost
®®	 
]
®® 
[
©© 	&
ValidateAntiForgeryToken
©©	 !
]
©©! "
public
™™ 
string
™™ !
SaveLeftControlRole
™™ )
(
™™) *
LeftControlRole
™™* 9
model
™™: ?
)
™™? @
{
´´ 	
try
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
model
ÆÆ 
.
ÆÆ 
Id
ÆÆ 
==
ÆÆ 
$num
ÆÆ  !
)
ÆÆ! "
{
ØØ 
db
∞∞ 
.
∞∞ 
Entry
∞∞ 
(
∞∞ 
model
∞∞ "
)
∞∞" #
.
∞∞# $
State
∞∞$ )
=
∞∞* +
EntityState
∞∞, 7
.
∞∞7 8
Added
∞∞8 =
;
∞∞= >
db
±± 
.
±± 
LeftControlRole
±± &
.
±±& '
Add
±±' *
(
±±* +
model
±±+ 0
)
±±0 1
;
±±1 2
}
≤≤ 
else
≥≥ 
{
¥¥ 
var
µµ 
leftControlRole
µµ '
=
µµ( )
db
µµ* ,
.
µµ, -
LeftControlRole
µµ- <
.
µµ< =
Where
µµ= B
(
µµB C
x
µµC D
=>
µµE G
x
µµH I
.
µµI J
Id
µµJ L
==
µµM O
model
µµP U
.
µµU V
Id
µµV X
)
µµX Y
.
µµY Z
FirstOrDefault
µµZ h
(
µµh i
)
µµi j
;
µµj k
db
∑∑ 
.
∑∑ 
Entry
∑∑ 
(
∑∑ 
leftControlRole
∑∑ ,
)
∑∑, -
.
∑∑- .
State
∑∑. 3
=
∑∑4 5
EntityState
∑∑6 A
.
∑∑A B
Modified
∑∑B J
;
∑∑J K
leftControlRole
ππ #
.
ππ# $

Controller
ππ$ .
=
ππ/ 0
model
ππ1 6
.
ππ6 7

Controller
ππ7 A
;
ππA B
leftControlRole
∫∫ #
.
∫∫# $
Action
∫∫$ *
=
∫∫+ ,
model
∫∫- 2
.
∫∫2 3
Action
∫∫3 9
;
∫∫9 :
leftControlRole
ªª #
.
ªª# $
Role
ªª$ (
=
ªª) *
model
ªª+ 0
.
ªª0 1
Role
ªª1 5
;
ªª5 6
}
ºº 
db
ææ 
.
ææ 
SaveChanges
ææ 
(
ææ 
)
ææ  
;
ææ  !
return
øø 
	Resources
øø  
.
øø  !
Resource
øø! )
.
øø) * 
saved_successfully
øø* <
;
øø< =
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
)
¬¬ 
{
√√ 
return
ƒƒ 
	Resources
ƒƒ  
.
ƒƒ  !
Resource
ƒƒ! )
.
ƒƒ) *'
try_again_contact_support
ƒƒ* C
;
ƒƒC D
}
≈≈ 
}
«« 	
[
…… 	
HttpPost
……	 
]
…… 
public
   
bool
   
VerificarRoleLink
   %
(
  % &
string
  & ,

controller
  - 7
,
  7 8
string
  9 ?
action
  @ F
)
  F G
{
ÀÀ 	
try
ÃÃ 
{
ÕÕ 
var
ŒŒ 
leftControlRole
ŒŒ #
=
ŒŒ$ %
db
ŒŒ& (
.
ŒŒ( )
LeftControlRole
ŒŒ) 8
.
ŒŒ8 9
Where
ŒŒ9 >
(
ŒŒ> ?
x
ŒŒ? @
=>
ŒŒA C
x
ŒŒD E
.
ŒŒE F

Controller
ŒŒF P
.
ŒŒP Q
Equals
ŒŒQ W
(
ŒŒW X

controller
ŒŒX b
)
ŒŒb c
&&
ŒŒd f
x
ŒŒg h
.
ŒŒh i
Action
ŒŒi o
.
ŒŒo p
Equals
ŒŒp v
(
ŒŒv w
action
ŒŒw }
)
ŒŒ} ~
)
ŒŒ~ 
.ŒŒ Ä
FirstOrDefaultŒŒÄ é
(ŒŒé è
)ŒŒè ê
;ŒŒê ë
if
–– 
(
–– 
leftControlRole
–– #
!=
––$ &
null
––' +
)
––+ ,
{
—— 
var
““ 
	rolesLink
““ !
=
““" #
new
““$ '
List
““( ,
<
““, -
string
““- 3
>
““3 4
(
““4 5
)
““5 6
;
““6 7
if
‘‘ 
(
‘‘ 
leftControlRole
‘‘ '
.
‘‘' (
Role
‘‘( ,
!=
‘‘- /
null
‘‘0 4
)
‘‘4 5
{
’’ 
	rolesLink
÷÷ !
=
÷÷" #
leftControlRole
÷÷$ 3
.
÷÷3 4
Role
÷÷4 8
.
÷÷8 9
Trim
÷÷9 =
(
÷÷= >
)
÷÷> ?
.
÷÷? @
Replace
÷÷@ G
(
÷÷G H
$str
÷÷H K
,
÷÷K L
$str
÷÷M O
)
÷÷O P
.
÷÷P Q
Split
÷÷Q V
(
÷÷V W
$char
÷÷W Z
)
÷÷Z [
.
÷÷[ \
ToList
÷÷\ b
(
÷÷b c
)
÷÷c d
;
÷÷d e
	rolesLink
◊◊ !
=
◊◊" #
LimparListaVazia
◊◊$ 4
(
◊◊4 5
	rolesLink
◊◊5 >
)
◊◊> ?
;
◊◊? @
}
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
	rolesLink
⁄⁄ !
.
⁄⁄! "
Count
⁄⁄" '
>
⁄⁄( )
$num
⁄⁄* +
)
⁄⁄+ ,
{
€€ 

HttpCookie
›› "
cookie
››# )
=
››* +
HttpContext
››, 7
.
››7 8
Request
››8 ?
.
››? @
Cookies
››@ G
.
››G H
Get
››H K
(
››K L
$str
››L ^
)
››^ _
;
››_ `
if
ﬁﬁ 
(
ﬁﬁ 
cookie
ﬁﬁ "
!=
ﬁﬁ# %
null
ﬁﬁ& *
)
ﬁﬁ* +
{
ﬂﬂ 
int
‡‡ 
userId
‡‡  &
=
‡‡' (
$num
‡‡) *
;
‡‡* +
if
·· 
(
··  
!
··  !
string
··! '
.
··' (
IsNullOrEmpty
··( 5
(
··5 6
cookie
··6 <
.
··< =
Values
··= C
[
··C D
$str
··D L
]
··L M
)
··M N
)
··N O
{
‚‚ 
int
„„  #
.
„„# $
TryParse
„„$ ,
(
„„, -
cookie
„„- 3
.
„„3 4
Values
„„4 :
[
„„: ;
$str
„„; C
]
„„C D
.
„„D E
ToString
„„E M
(
„„M N
)
„„N O
,
„„O P
out
„„Q T
userId
„„U [
)
„„[ \
;
„„\ ]
var
ÁÁ  #
userSgq
ÁÁ$ +
=
ÁÁ, -
db
ÁÁ. 0
.
ÁÁ0 1
UserSgq
ÁÁ1 8
.
ÁÁ8 9
Where
ÁÁ9 >
(
ÁÁ> ?
x
ÁÁ? @
=>
ÁÁA C
x
ÁÁD E
.
ÁÁE F
Id
ÁÁF H
==
ÁÁI K
userId
ÁÁL R
)
ÁÁR S
.
ÁÁS T
FirstOrDefault
ÁÁT b
(
ÁÁb c
)
ÁÁc d
;
ÁÁd e
var
ËË  #
rolesUserSgq
ËË$ 0
=
ËË1 2
new
ËË3 6
List
ËË7 ;
<
ËË; <
string
ËË< B
>
ËËB C
(
ËËC D
)
ËËD E
;
ËËE F
if
ÈÈ  "
(
ÈÈ# $
userSgq
ÈÈ$ +
.
ÈÈ+ ,
Role
ÈÈ, 0
!=
ÈÈ1 3
null
ÈÈ4 8
)
ÈÈ8 9
{
ÍÍ  !
rolesUserSgq
ÎÎ$ 0
=
ÎÎ1 2
userSgq
ÎÎ3 :
.
ÎÎ: ;
Role
ÎÎ; ?
.
ÎÎ? @
Trim
ÎÎ@ D
(
ÎÎD E
)
ÎÎE F
.
ÎÎF G
Replace
ÎÎG N
(
ÎÎN O
$str
ÎÎO R
,
ÎÎR S
$str
ÎÎT V
)
ÎÎV W
.
ÎÎW X
Replace
ÎÎX _
(
ÎÎ_ `
$str
ÎÎ` c
,
ÎÎc d
$str
ÎÎe h
)
ÎÎh i
.
ÎÎi j
Split
ÎÎj o
(
ÎÎo p
$char
ÎÎp s
)
ÎÎs t
.
ÎÎt u
ToList
ÎÎu {
(
ÎÎ{ |
)
ÎÎ| }
;
ÎÎ} ~
rolesUserSgq
ÏÏ$ 0
=
ÏÏ1 2
LimparListaVazia
ÏÏ3 C
(
ÏÏC D
rolesUserSgq
ÏÏD P
)
ÏÏP Q
;
ÏÏQ R
}
ÌÌ  !
var
ÛÛ  #

parCompany
ÛÛ$ .
=
ÛÛ/ 0
db
ÛÛ1 3
.
ÛÛ3 4 
ParCompanyXUserSgq
ÛÛ4 F
.
ÛÛF G
Where
ÛÛG L
(
ÛÛL M
x
ÛÛM N
=>
ÛÛO Q
x
ÛÛR S
.
ÛÛS T

UserSgq_Id
ÛÛT ^
==
ÛÛ_ a
userId
ÛÛb h
)
ÛÛh i
.
ÛÛi j
ToList
ÛÛj p
(
ÛÛp q
)
ÛÛq r
;
ÛÛr s
var
ÙÙ  #%
rolesParCompanyXUserSgq
ÙÙ$ ;
=
ÙÙ< =
new
ÙÙ> A
List
ÙÙB F
<
ÙÙF G
string
ÙÙG M
>
ÙÙM N
(
ÙÙN O
)
ÙÙO P
;
ÙÙP Q%
rolesParCompanyXUserSgq
ıı  7
=
ıı8 9

parCompany
ıı: D
.
ııD E
Select
ııE K
(
ııK L
x
ııL M
=>
ııN P
x
ııQ R
.
ııR S
Role
ııS W
)
ııW X
.
ııX Y
ToList
ııY _
(
ıı_ `
)
ıı` a
;
ııa b%
rolesParCompanyXUserSgq
ˆˆ  7
=
ˆˆ8 9
LimparListaVazia
ˆˆ: J
(
ˆˆJ K%
rolesParCompanyXUserSgq
ˆˆK b
)
ˆˆb c
;
ˆˆc d
rolesUserSgq
˙˙  ,
.
˙˙, -
AddRange
˙˙- 5
(
˙˙5 6%
rolesParCompanyXUserSgq
˙˙6 M
)
˙˙M N
;
˙˙N O
if
˝˝  "
(
˝˝# $
	rolesLink
˝˝$ -
.
˝˝- .
Count
˝˝. 3
>
˝˝4 5
$num
˝˝6 7
)
˝˝7 8
{
˛˛  !
foreach
ˇˇ$ +
(
ˇˇ, -
var
ˇˇ- 0
i
ˇˇ1 2
in
ˇˇ3 5
	rolesLink
ˇˇ6 ?
)
ˇˇ? @
{
ÄÄ$ %
if
ÅÅ( *
(
ÅÅ+ ,
rolesUserSgq
ÅÅ, 8
.
ÅÅ8 9
Contains
ÅÅ9 A
(
ÅÅA B
i
ÅÅB C
)
ÅÅC D
)
ÅÅD E
{
ÇÇ( )
return
ÉÉ, 2
true
ÉÉ3 7
;
ÉÉ7 8
}
ÑÑ( )
}
ÖÖ$ %
}
ÜÜ  !
}
áá 
return
ââ "
false
ââ# (
;
ââ( )
}
ää 
else
ãã 
{
åå 
return
çç "
false
çç# (
;
çç( )
}
éé 
}
êê 
return
íí 
true
íí 
;
íí  
}
ìì 
else
îî 
{
ïï 
leftControlRole
óó #
=
óó$ %
new
óó& )
Dominio
óó* 1
.
óó1 2
LeftControlRole
óó2 A
(
óóA B
)
óóB C
;
óóC D
leftControlRole
òò #
.
òò# $
Id
òò$ &
=
òò' (
$num
òò) *
;
òò* +
leftControlRole
ôô #
.
ôô# $
Action
ôô$ *
=
ôô+ ,
action
ôô- 3
;
ôô3 4
leftControlRole
öö #
.
öö# $

Controller
öö$ .
=
öö/ 0

controller
öö1 ;
;
öö; <
leftControlRole
õõ #
.
õõ# $
Role
õõ$ (
=
õõ) *
null
õõ+ /
;
õõ/ 0
db
úú 
.
úú 
Entry
úú 
(
úú 
leftControlRole
úú ,
)
úú, -
.
úú- .
State
úú. 3
=
úú4 5
EntityState
úú6 A
.
úúA B
Added
úúB G
;
úúG H
db
ùù 
.
ùù 
LeftControlRole
ùù &
.
ùù& '
Add
ùù' *
(
ùù* +
leftControlRole
ùù+ :
)
ùù: ;
;
ùù; <
db
ûû 
.
ûû 
SaveChanges
ûû "
(
ûû" #
)
ûû# $
;
ûû$ %
return
üü 
true
üü 
;
üü  
}
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
)
¢¢ 
{
££ 
return
§§ 
false
§§ 
;
§§ 
}
•• 
}
ßß 	
private
©© 
List
©© 
<
©© 
string
©© 
>
©© 
LimparListaVazia
©© -
(
©©- .
List
©©. 2
<
©©2 3
string
©©3 9
>
©©9 :
value
©©; @
)
©©@ A
{
™™ 	
for
´´ 
(
´´ 
var
´´ 
i
´´ 
=
´´ 
$num
´´ 
;
´´ 
i
´´ 
<
´´ 
value
´´  %
.
´´% &
Count
´´& +
;
´´+ ,
)
´´, -
{
¨¨ 
if
≠≠ 
(
≠≠ 
value
≠≠ 
[
≠≠ 
i
≠≠ 
]
≠≠ 
.
≠≠ 
Trim
≠≠ !
(
≠≠! "
)
≠≠" #
.
≠≠# $
Equals
≠≠$ *
(
≠≠* +
$str
≠≠+ -
)
≠≠- .
)
≠≠. /
{
ÆÆ 
value
ØØ 
.
ØØ 
RemoveAt
ØØ "
(
ØØ" #
i
ØØ# $
)
ØØ$ %
;
ØØ% &
}
∞∞ 
else
±± 
{
≤≤ 
i
≥≥ 
++
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 
return
∂∂ 
value
∂∂ 
;
∂∂ 
}
∑∑ 	
	protected
ππ 
override
ππ 
void
ππ 
Dispose
ππ  '
(
ππ' (
bool
ππ( ,
	disposing
ππ- 6
)
ππ6 7
{
∫∫ 	
if
ªª 
(
ªª 
	disposing
ªª 
)
ªª 
{
ºº 
db
ΩΩ 
.
ΩΩ 
Dispose
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
}
ææ 
base
øø 
.
øø 
Dispose
øø 
(
øø 
	disposing
øø "
)
øø" #
;
øø# $
}
¿¿ 	
}
¬¬ 
}√√ Ôó
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\UserAndRoles\UserSgqController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
public 

class 
UserSgqController "
:# $
BaseController% 3
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
private 
IBaseDomain 
< 

ParCompany &
,& '
ParCompanyDTO( 5
>5 6!
_baseDomainParCompany7 L
;L M
private 
IBaseDomain 
< 
ParCompanyXUserSgq .
,. /!
ParCompanyXUserSgqDTO0 E
>E F)
_baseDomainParCompanyXUserSgqG d
;d e
private 
IBaseDomain 
< 
UserSgq #
,# $
UserDTO% ,
>, -
_baseDomainUserSgq. @
;@ A
private 
IBaseDomain 
< 
RoleUserSgq '
,' (
RoleUserSgqDTO) 7
>7 8"
_baseDomainRoleUserSGQ9 O
;O P
public 
UserSgqController  
(  !
IBaseDomain! ,
<, -

ParCompany- 7
,7 8
ParCompanyDTO9 F
>F G 
baseDomainParCompanyH \
,\ ]
IBaseDomain   
<   
ParCompanyXUserSgq   *
,  * +!
ParCompanyXUserSgqDTO  , A
>  A B(
baseDomainParCompanyXUserSgq  C _
,  _ `
IBaseDomain!! 
<!! 
UserSgq!! 
,!!  
UserDTO!!! (
>!!( )
baseDomainUserSgq!!* ;
,!!; <
IBaseDomain"" 
<"" 
RoleUserSgq"" #
,""# $
RoleUserSgqDTO""% 3
>""3 4!
baseDomainRoleUserSGQ""5 J
)## 
{$$ 	!
_baseDomainParCompany%% !
=%%" # 
baseDomainParCompany%%$ 8
;%%8 9
_baseDomainUserSgq&& 
=&&  
baseDomainUserSgq&&! 2
;&&2 3)
_baseDomainParCompanyXUserSgq'' )
=''* +(
baseDomainParCompanyXUserSgq'', H
;''H I"
_baseDomainRoleUserSGQ(( "
=((# $!
baseDomainRoleUserSGQ((% :
;((: ;
ViewBag** 
.** 
listaParCompany** #
=**$ %!
_baseDomainParCompany**& ;
.**; <
GetAll**< B
(**B C
)**C D
;**D E
var++ 
listaRoleSGQ++ 
=++ "
_baseDomainRoleUserSGQ++ 5
.++5 6
GetAll++6 <
(++< =
)++= >
;++> ?
foreach-- 
(-- 
var-- 
roleSgq--  
in--! #
listaRoleSGQ--$ 0
)--0 1
roleSgq.. 
... 
Name.. 
=.. 
roleSgq.. &
...& '
Name..' +
...+ ,
Trim.., 0
(..0 1
)..1 2
;..2 3
ViewBag00 
.00 
listaRoleSGQ00  
=00! "
listaRoleSGQ00# /
;00/ 0
}11 	
public44 
ActionResult44 
Index44 !
(44! "
)44" #
{55 	
return66 
View66 
(66 
_baseDomainUserSgq66 *
.66* +
GetAllNoLazyLoad66+ ;
(66; <
)66< =
.66= >
ToList66> D
(66D E
)66E F
)66F G
;66G H
}77 	
public:: 
ActionResult:: 
Details:: #
(::# $
int::$ '
?::' (
id::) +
)::+ ,
{;; 	
if<< 
(<< 
id<< 
==<< 
null<< 
)<< 
{== 
return>> 
new>>  
HttpStatusCodeResult>> /
(>>/ 0
HttpStatusCode>>0 >
.>>> ?

BadRequest>>? I
)>>I J
;>>J K
}?? 
UserSgq@@ 
userSgq@@ 
=@@ 
db@@  
.@@  !
UserSgq@@! (
.@@( )
Find@@) -
(@@- .
id@@. 0
)@@0 1
;@@1 2
ifAA 
(AA 
userSgqAA 
==AA 
nullAA 
)AA  
{BB 
returnCC 
HttpNotFoundCC #
(CC# $
)CC$ %
;CC% &
}DD 
returnEE 
ViewEE 
(EE 
userSgqEE 
)EE  
;EE  !
}FF 	
[MM 	

FilterUnitMM	 
(MM "
filtraUnidadeDoUsuarioMM *
=MM+ ,
falseMM- 2
)MM2 3
]MM3 4
publicNN 
ActionResultNN 
PerfilNN "
(NN" #
stringNN# )
motivoNN* 0
=NN1 2
$strNN3 5
)NN5 6
{OO 	
ViewBagPP 
.PP 
TitlePP 
=PP 
$strPP $
;PP$ %
ViewBagRR 
.RR 
MotivoRR 
=RR 
motivoRR #
;RR# $
varTT 
	idUsuarioTT 
=TT 
GuardTT !
.TT! "
GetUsuarioLogado_IdTT" 5
(TT5 6
ControllerContextTT6 G
.TTG H
HttpContextTTH S
)TTS T
;TTT U
varVV 
userSgqVV 
=VV 
dbVV 
.VV 
UserSgqVV $
.VV$ %
WhereVV% *
(VV* +
xVV+ ,
=>VV- /
xVV0 1
.VV1 2
IdVV2 4
==VV5 7
	idUsuarioVV8 A
)VVA B
.VVB C
FirstOrDefaultVVC Q
(VVQ R
)VVR S
;VVS T
ListXX 
<XX 
ParCompanyXUserSgqXX #
>XX# $
parCompanyXUserSgqXX% 7
=XX8 9
dbXX: <
.XX< =
ParCompanyXUserSgqXX= O
.XXO P
WhereXXP U
(XXU V
xXXV W
=>XXX Z
xXX[ \
.XX\ ]

UserSgq_IdXX] g
==XXh j
	idUsuarioXXk t
)XXt u
.XXu v
ToListXXv |
(XX| }
)XX} ~
;XX~ 
varZZ 
modelZZ 
=ZZ 
newZZ 
UserViewModelZZ )
(ZZ) *
)ZZ* +
{[[ 
Id\\ 
=\\ 
userSgq\\ 
.\\ 
Id\\ 
,\\  
Name]] 
=]] 
userSgq]] 
.]] 
Name]] #
,]]# $
FullName^^ 
=^^ 
userSgq^^ "
.^^" #
FullName^^# +
,^^+ ,
Email__ 
=__ 
userSgq__ 
.__  
Email__  %
,__% &
Roles`` 
=`` 
userSgq`` 
.``  
Role``  $
==``% '
null``( ,
?``- .
new``/ 2
string``3 9
[``9 :
$num``: ;
]``; <
:``= >
userSgq``? F
.``F G
Role``G K
.``K L
Split``L Q
(``Q R
$char``R U
)``U V
,``V W
Passwordaa 
=aa 
userSgqaa "
.aa" #
Passwordaa# +
,aa+ ,
Phonebb 
=bb 
userSgqbb 
.bb  
Phonebb  %
,bb% &
ParCompany_Idcc 
=cc 
userSgqcc  '
.cc' (
ParCompany_Idcc( 5
,cc5 6
Empresadd 
=dd 
parCompanyXUserSgqdd ,
!=dd- /
nulldd0 4
?dd5 6
(dd7 8
fromdd8 <
compdd= A
inddB D
parCompanyXUserSgqddE W
selectddX ^
newdd_ b

EmpresaDTOddc m
{ddn o
Roleddp t
=ddu v
compddw {
.dd{ |
Role	dd| Ä
,
ddÄ Å
Nome
ddÇ Ü
=
ddá à
comp
ddâ ç
.
ddç é

ParCompany
ddé ò
.
ddò ô
Name
ddô ù
}
ddû ü
)
ddü †
.
dd† °
ToList
dd° ß
(
ddß ®
)
dd® ©
:
dd™ ´
new
dd¨ Ø
List
dd∞ ¥
<
dd¥ µ

EmpresaDTO
ddµ ø
>
ddø ¿
(
dd¿ ¡
)
dd¡ ¬
}ee 
;ee 
returngg 
Viewgg 
(gg 
modelgg 
)gg 
;gg 
}hh 	
publickk 
ActionResultkk 
Createkk "
(kk" #
)kk# $
{ll 	
returnmm 
Viewmm 
(mm 
)mm 
;mm 
}nn 	
[ss 	
HttpPostss	 
]ss 
[tt 	$
ValidateAntiForgeryTokentt	 !
]tt! "
publicuu 
booluu 
Saveuu 
(uu 
UserDTOuu  

userSgqDtouu! +
)uu+ ,
{vv 	
ValidaUserSgqDtoxx 
(xx 

userSgqDtoxx '
)xx' (
;xx( )
ifzz 
(zz 
!zz 

ModelStatezz 
.zz 
IsValidzz #
)zz# $
return{{ 
false{{ 
;{{ 
if~~ 
(~~ 
(~~ 
DTO~~ 
.~~ 
GlobalConfig~~ !
.~~! "
Eua~~" %
==~~& (
true~~) -
||~~. 0
DTO~~1 4
.~~4 5
GlobalConfig~~5 A
.~~A B
Canada~~B H
==~~I K
true~~L P
)~~P Q
&&~~R T

userSgqDto~~U _
.~~_ `
Id~~` b
==~~c e
$num~~f g
)~~g h
{ 
if
ÄÄ 
(
ÄÄ 
(
ÄÄ 

userSgqDto
ÄÄ 
.
ÄÄ  
Password
ÄÄ  (
==
ÄÄ) +
$str
ÄÄ, .
)
ÄÄ. /
||
ÄÄ0 2
(
ÄÄ3 4

userSgqDto
ÄÄ4 >
.
ÄÄ> ?
Password
ÄÄ? G
==
ÄÄH J
null
ÄÄK O
)
ÄÄO P
)
ÄÄP Q

userSgqDto
ÅÅ 
.
ÅÅ 
Password
ÅÅ '
=
ÅÅ( )
$str
ÅÅ* 3
;
ÅÅ3 4
}
ÇÇ 

userSgqDto
ÑÑ 
.
ÑÑ 
ParCompany_Id
ÑÑ $
=
ÑÑ% &

userSgqDto
ÑÑ' 1
.
ÑÑ1 2
ListParCompany_Id
ÑÑ2 C
.
ÑÑC D
FirstOrDefault
ÑÑD R
(
ÑÑR S
)
ÑÑS T
;
ÑÑT U
if
ÖÖ 
(
ÖÖ 

userSgqDto
ÖÖ 
.
ÖÖ 
Id
ÖÖ 
==
ÖÖ  
$num
ÖÖ! "
)
ÖÖ" #
{
ÜÜ 

userSgqDto
áá 
.
áá 
AddDate
áá "
=
áá# $
DateTime
áá% -
.
áá- .
Now
áá. 1
;
áá1 2

userSgqDto
àà 
.
àà 
Password
àà #
=
àà$ %
Guard
àà& +
.
àà+ ,
EncryptStringAES
àà, <
(
àà< =

userSgqDto
àà= G
.
ààG H
Password
ààH P
)
ààP Q
;
ààQ R
}
ââ 
else
ää 
{
ãã 

userSgqDto
åå 
.
åå 
	AlterDate
åå $
=
åå% &
DateTime
åå' /
.
åå/ 0
Now
åå0 3
;
åå3 4
if
éé 
(
éé 

userSgqDto
éé 
.
éé 
Password
éé '
==
éé( *
null
éé+ /
)
éé/ 0
{
èè 
UserSgq
êê 
dummy
êê !
=
êê" #
db
êê$ &
.
êê& '
UserSgq
êê' .
.
êê. /
Find
êê/ 3
(
êê3 4

userSgqDto
êê4 >
.
êê> ?
Id
êê? A
)
êêA B
;
êêB C

userSgqDto
ëë 
.
ëë 
Password
ëë '
=
ëë( )
dummy
ëë* /
.
ëë/ 0
Password
ëë0 8
;
ëë8 9
}
íí 
else
ìì 
{
îî 

userSgqDto
ïï 
.
ïï 
Password
ïï '
=
ïï( )
Guard
ïï* /
.
ïï/ 0
EncryptStringAES
ïï0 @
(
ïï@ A

userSgqDto
ïïA K
.
ïïK L
Password
ïïL T
)
ïïT U
;
ïïU V
}
ññ 
}
óó 
if
öö 
(
öö 

userSgqDto
öö 
.
öö 
ListRole
öö #
!=
öö$ &
null
öö' +
)
öö+ ,
{
õõ 
string
úú 
roles
úú 
=
úú 
string
úú %
.
úú% &
Join
úú& *
(
úú* +
$str
úú+ .
,
úú. /

userSgqDto
úú0 :
.
úú: ;
ListRole
úú; C
)
úúC D
;
úúD E

userSgqDto
ùù 
.
ùù 
Role
ùù 
=
ùù  !
roles
ùù" '
;
ùù' (
}
ûû 
var
†† 
ListParCompany_Id
†† !
=
††" #

userSgqDto
††$ .
.
††. /
ListParCompany_Id
††/ @
;
††@ A

userSgqDto
°° 
=
°°  
_baseDomainUserSgq
°° +
.
°°+ ,
AddOrUpdate
°°, 7
(
°°7 8

userSgqDto
°°8 B
,
°°B C
true
°°D H
)
°°H I
;
°°I J
foreach
§§ 
(
§§ 
var
§§ 
i
§§ 
in
§§ 
ListParCompany_Id
§§ /
)
§§/ 0
{
•• 
var
¶¶ 
lista
¶¶ 
=
¶¶ 
db
¶¶ 
.
¶¶  
ParCompanyXUserSgq
¶¶ 1
.
¶¶1 2
Where
¶¶2 7
(
¶¶7 8
r
¶¶8 9
=>
¶¶: <
r
¶¶= >
.
¶¶> ?
ParCompany_Id
¶¶? L
==
¶¶M O
i
¶¶P Q
&&
¶¶R T
r
¶¶U V
.
¶¶V W

UserSgq_Id
¶¶W a
==
¶¶b d

userSgqDto
¶¶e o
.
¶¶o p
Id
¶¶p r
)
¶¶r s
.
¶¶s t
ToList
¶¶t z
(
¶¶z {
)
¶¶{ |
;
¶¶| }
if
ßß 
(
ßß 
lista
ßß 
.
ßß 
Count
ßß 
==
ßß  "
$num
ßß# $
)
ßß$ %
{
®® +
_baseDomainParCompanyXUserSgq
©© 1
.
©©1 2
AddOrUpdate
©©2 =
(
©©= >
new
©©> A#
ParCompanyXUserSgqDTO
©©B W
(
©©W X
)
©©X Y
{
©©Z [
Id
©©\ ^
=
©©_ `
$num
©©a b
,
©©b c

UserSgq_Id
©©d n
=
©©o p

userSgqDto
©©q {
.
©©{ |
Id
©©| ~
,
©©~ 
ParCompany_Id©©Ä ç
=©©é è
i©©ê ë
}©©í ì
,©©ì î
true©©ï ô
)©©ô ö
;©©ö õ
}
™™ 
}
´´ 
foreach
ÆÆ 
(
ÆÆ 
var
ÆÆ 
i
ÆÆ 
in
ÆÆ 
db
ÆÆ  
.
ÆÆ  ! 
ParCompanyXUserSgq
ÆÆ! 3
.
ÆÆ3 4
Where
ÆÆ4 9
(
ÆÆ9 :
r
ÆÆ: ;
=>
ÆÆ< >
r
ÆÆ? @
.
ÆÆ@ A

UserSgq_Id
ÆÆA K
==
ÆÆL N

userSgqDto
ÆÆO Y
.
ÆÆY Z
Id
ÆÆZ \
)
ÆÆ\ ]
)
ÆÆ] ^
{
ØØ 
var
∞∞ 
lista
∞∞ 
=
∞∞ 
ListParCompany_Id
∞∞ -
.
∞∞- .
Where
∞∞. 3
(
∞∞3 4
r
∞∞4 5
=>
∞∞6 8
r
∞∞9 :
==
∞∞; =
i
∞∞> ?
.
∞∞? @
ParCompany_Id
∞∞@ M
)
∞∞M N
.
∞∞N O
ToList
∞∞O U
(
∞∞U V
)
∞∞V W
;
∞∞W X
if
±± 
(
±± 
lista
±± 
.
±± 
Count
±± 
==
±±  "
$num
±±# $
)
±±$ %
{
≤≤ +
_baseDomainParCompanyXUserSgq
¥¥ 1
.
¥¥1 2

ExecuteSql
¥¥2 <
(
¥¥< =
$str
¥¥= q
+
¥¥r s

userSgqDto
¥¥t ~
.
¥¥~ 
Id¥¥ Å
+¥¥Ç É
$str¥¥Ñ õ
+¥¥ú ù
i¥¥û ü
.¥¥ü †
ParCompany_Id¥¥† ≠
)¥¥≠ Æ
;¥¥Æ Ø
}
µµ 
}
∑∑ 
if
∫∫ 
(
∫∫ 

userSgqDto
∫∫ 
!=
∫∫ 
null
∫∫ "
)
∫∫" #
if
ªª 
(
ªª 
GlobalConfig
ªª  
.
ªª  !
Eua
ªª! $
)
ªª$ %
{
ºº 
var
ΩΩ 
ativo
ΩΩ 
=
ΩΩ 

userSgqDto
ΩΩ  *
.
ΩΩ* +
IsActive
ΩΩ+ 3
?
ΩΩ4 5
$str
ΩΩ6 9
:
ΩΩ: ;
$str
ΩΩ< ?
;
ΩΩ? @
var
ææ 

ativoQuery
ææ "
=
ææ# $
$str
ææ% E
+
ææF G
ativo
ææH M
+
ææN O
$str
ææP ^
+
ææ_ `

userSgqDto
ææa k
.
ææk l
Id
ææl n
+
ææo p
$strææq ú
+ææù û

userSgqDtoææü ©
.ææ© ™
Idææ™ ¨
;ææ¨ ≠
var
øø 
estadoAtual
øø #
=
øø$ %
db
øø& (
.
øø( )
Database
øø) 1
.
øø1 2
SqlQuery
øø2 :
<
øø: ;
bool
øø; ?
>
øø? @
(
øø@ A

ativoQuery
øøA K
)
øøK L
.
øøL M
FirstOrDefault
øøM [
(
øø[ \
)
øø\ ]
;
øø] ^
}
¿¿ 
return
»» 
true
»» 
;
»» 
}
   	
public
ÕÕ 
ActionResult
ÕÕ 
Edit
ÕÕ  
(
ÕÕ  !
int
ÕÕ! $
?
ÕÕ$ %
id
ÕÕ& (
)
ÕÕ( )
{
ŒŒ 	
if
œœ 
(
œœ 
id
œœ 
==
œœ 
null
œœ 
)
œœ 
{
–– 
return
—— 
new
—— "
HttpStatusCodeResult
—— /
(
——/ 0
HttpStatusCode
——0 >
.
——> ?

BadRequest
——? I
)
——I J
;
——J K
}
““ 
UserDTO
”” 
userSgq
”” 
=
””  
_baseDomainUserSgq
”” 0
.
””0 1
GetById
””1 8
(
””8 9
id
””9 ;
.
””; <
GetValueOrDefault
””< M
(
””M N
)
””N O
)
””O P
;
””P Q
if
‘‘ 
(
‘‘ 
userSgq
‘‘ 
==
‘‘ 
null
‘‘ 
)
‘‘  
{
’’ 
return
÷÷ 
HttpNotFound
÷÷ #
(
÷÷# $
)
÷÷$ %
;
÷÷% &
}
◊◊ 
return
ﬁﬁ 
View
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
‚‚ 
ActionResult
‚‚ 
Delete
‚‚ "
(
‚‚" #
int
‚‚# &
?
‚‚& '
id
‚‚( *
)
‚‚* +
{
„„ 	
if
‰‰ 
(
‰‰ 
id
‰‰ 
==
‰‰ 
null
‰‰ 
)
‰‰ 
{
ÂÂ 
return
ÊÊ 
new
ÊÊ "
HttpStatusCodeResult
ÊÊ /
(
ÊÊ/ 0
HttpStatusCode
ÊÊ0 >
.
ÊÊ> ?

BadRequest
ÊÊ? I
)
ÊÊI J
;
ÊÊJ K
}
ÁÁ 
UserSgq
ËË 
userSgq
ËË 
=
ËË 
db
ËË  
.
ËË  !
UserSgq
ËË! (
.
ËË( )
Find
ËË) -
(
ËË- .
id
ËË. 0
)
ËË0 1
;
ËË1 2
if
ÈÈ 
(
ÈÈ 
userSgq
ÈÈ 
==
ÈÈ 
null
ÈÈ 
)
ÈÈ  
{
ÍÍ 
return
ÎÎ 
HttpNotFound
ÎÎ #
(
ÎÎ# $
)
ÎÎ$ %
;
ÎÎ% &
}
ÏÏ 
return
ÌÌ 
View
ÌÌ 
(
ÌÌ 
userSgq
ÌÌ 
)
ÌÌ  
;
ÌÌ  !
}
ÓÓ 	
[
ÒÒ 	
HttpPost
ÒÒ	 
,
ÒÒ 

ActionName
ÒÒ 
(
ÒÒ 
$str
ÒÒ &
)
ÒÒ& '
]
ÒÒ' (
[
ÚÚ 	&
ValidateAntiForgeryToken
ÚÚ	 !
]
ÚÚ! "
public
ÛÛ 
ActionResult
ÛÛ 
DeleteConfirmed
ÛÛ +
(
ÛÛ+ ,
int
ÛÛ, /
id
ÛÛ0 2
)
ÛÛ2 3
{
ÙÙ 	
UserSgq
ıı 
userSgq
ıı 
=
ıı 
db
ıı  
.
ıı  !
UserSgq
ıı! (
.
ıı( )
Find
ıı) -
(
ıı- .
id
ıı. 0
)
ıı0 1
;
ıı1 2
db
ˆˆ 
.
ˆˆ 
UserSgq
ˆˆ 
.
ˆˆ 
Remove
ˆˆ 
(
ˆˆ 
userSgq
ˆˆ %
)
ˆˆ% &
;
ˆˆ& '
db
˜˜ 
.
˜˜ 
SaveChanges
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
return
¯¯ 
RedirectToAction
¯¯ #
(
¯¯# $
$str
¯¯$ +
)
¯¯+ ,
;
¯¯, -
}
˘˘ 	
[
˚˚ 	
HttpPost
˚˚	 
]
˚˚ 
public
¸¸ 
void
¸¸ 
ResetSessionTimer
¸¸ %
(
¸¸% &
)
¸¸& '
{
˝˝ 	
try
˛˛ 
{
ˇˇ 

HttpCookie
ÄÄ 
currentUserCookie
ÄÄ ,
=
ÄÄ- .
Request
ÄÄ/ 6
.
ÄÄ6 7
Cookies
ÄÄ7 >
[
ÄÄ> ?
$str
ÄÄ? Q
]
ÄÄQ R
;
ÄÄR S
if
ÅÅ 
(
ÅÅ 
currentUserCookie
ÅÅ %
!=
ÅÅ& (
null
ÅÅ) -
)
ÅÅ- .
{
ÇÇ 
currentUserCookie
ÉÉ %
.
ÉÉ% &
Expires
ÉÉ& -
=
ÉÉ. /
DateTime
ÉÉ0 8
.
ÉÉ8 9
Now
ÉÉ9 <
.
ÉÉ< =
AddHours
ÉÉ= E
(
ÉÉE F
$num
ÉÉF G
)
ÉÉG H
;
ÉÉH I
Response
ÑÑ 
.
ÑÑ 
	SetCookie
ÑÑ &
(
ÑÑ& '
currentUserCookie
ÑÑ' 8
)
ÑÑ8 9
;
ÑÑ9 :
}
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
)
áá 
{
àà 
}
ââ 
}
ää 	
[
åå 	
HttpPost
åå	 
]
åå 
public
çç 
bool
çç #
VerificarCookieExiste
çç )
(
çç) *
)
çç* +
{
éé 	
try
èè 
{
êê 

HttpCookie
ëë 
currentUserCookie
ëë ,
=
ëë- .
Request
ëë/ 6
.
ëë6 7
Cookies
ëë7 >
[
ëë> ?
$str
ëë? Q
]
ëëQ R
;
ëëR S
if
íí 
(
íí 
currentUserCookie
íí %
!=
íí& (
null
íí) -
)
íí- .
{
ìì 
return
îî 
true
îî 
;
îî  
}
ïï 
return
ññ 
false
ññ 
;
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
)
òò 
{
ôô 
return
öö 
false
öö 
;
öö 
}
õõ 
}
úú 	
[
ûû 	
HttpPost
ûû	 
]
ûû 
[
üü 	&
ValidateAntiForgeryToken
üü	 !
]
üü! "
public
†† 
string
†† 
AlterarSenha
†† "
(
††" #
UserViewModel
††# 0
model
††1 6
)
††6 7
{
°° 	
try
¢¢ 
{
££ 
var
§§ 
userSgq
§§ 
=
§§ 
db
§§  
.
§§  !
UserSgq
§§! (
.
§§( )
Where
§§) .
(
§§. /
x
§§/ 0
=>
§§1 3
x
§§4 5
.
§§5 6
Id
§§6 8
==
§§9 ;
model
§§< A
.
§§A B
Id
§§B D
)
§§D E
.
§§E F
FirstOrDefault
§§F T
(
§§T U
)
§§U V
;
§§V W
var
¶¶ 
senhaAntiga
¶¶ 
=
¶¶  !
userSgq
¶¶" )
.
¶¶) *
Password
¶¶* 2
;
¶¶2 3
if
®® 
(
®® 
Guard
®® 
.
®® 
DecryptStringAES
®® *
(
®®* +
senhaAntiga
®®+ 6
)
®®6 7
.
®®7 8
Equals
®®8 >
(
®®> ?
model
®®? D
.
®®D E
SenhaAntiga
®®E P
)
®®P Q
)
®®Q R
{
©© 
userSgq
™™ 
.
™™ 
	AlterDate
™™ %
=
™™& '
DateTime
™™( 0
.
™™0 1
Now
™™1 4
;
™™4 5
userSgq
´´ 
.
´´ 
PasswordDate
´´ (
=
´´) *
DateTime
´´+ 3
.
´´3 4
Now
´´4 7
.
´´7 8
	AddMonths
´´8 A
(
´´A B
$num
´´B C
)
´´C D
;
´´D E
userSgq
¨¨ 
.
¨¨ 
Password
¨¨ $
=
¨¨% &
Guard
¨¨' ,
.
¨¨, -
EncryptStringAES
¨¨- =
(
¨¨= >
model
¨¨> C
.
¨¨C D
Password
¨¨D L
)
¨¨L M
;
¨¨M N
db
ÆÆ 
.
ÆÆ 
Entry
ÆÆ 
(
ÆÆ 
userSgq
ÆÆ $
)
ÆÆ$ %
.
ÆÆ% &
State
ÆÆ& +
=
ÆÆ, -
EntityState
ÆÆ. 9
.
ÆÆ9 :
Modified
ÆÆ: B
;
ÆÆB C
db
∞∞ 
.
∞∞ 
SaveChanges
∞∞ "
(
∞∞" #
)
∞∞# $
;
∞∞$ %

HttpCookie
µµ 
myCookie
µµ '
=
µµ( )
new
µµ* -

HttpCookie
µµ. 8
(
µµ8 9
$str
µµ9 K
)
µµK L
;
µµL M
myCookie
∏∏ 
.
∏∏ 
Values
∏∏ #
.
∏∏# $
Add
∏∏$ '
(
∏∏' (
$str
∏∏( 0
,
∏∏0 1
userSgq
∏∏2 9
.
∏∏9 :
Id
∏∏: <
.
∏∏< =
ToString
∏∏= E
(
∏∏E F
)
∏∏F G
)
∏∏G H
;
∏∏H I
myCookie
ππ 
.
ππ 
Values
ππ #
.
ππ# $
Add
ππ$ '
(
ππ' (
$str
ππ( 2
,
ππ2 3
userSgq
ππ4 ;
.
ππ; <
Name
ππ< @
)
ππ@ A
;
ππA B
if
ºº 
(
ºº 
userSgq
ºº 
.
ºº  
PasswordDate
ºº  ,
!=
ºº- /
null
ºº0 4
)
ºº4 5
{
ΩΩ 
myCookie
ææ  
.
ææ  !
Values
ææ! '
.
ææ' (
Add
ææ( +
(
ææ+ ,
$str
ææ, :
,
ææ: ;
userSgq
ææ< C
.
ææC D
PasswordDate
ææD P
.
ææP Q
GetValueOrDefault
ææQ b
(
ææb c
)
ææc d
.
ææd e
ToString
ææe m
(
ææm n
$str
ææn z
)
ææz {
)
ææ{ |
;
ææ| }
}
øø 
else
¿¿ 
if
¿¿ 
(
¿¿ 
userSgq
¿¿ $
.
¿¿$ %
	AlterDate
¿¿% .
!=
¿¿/ 1
null
¿¿2 6
)
¿¿6 7
{
¡¡ 
myCookie
¬¬  
.
¬¬  !
Values
¬¬! '
.
¬¬' (
Add
¬¬( +
(
¬¬+ ,
$str
¬¬, 7
,
¬¬7 8
userSgq
¬¬9 @
.
¬¬@ A
	AlterDate
¬¬A J
.
¬¬J K
GetValueOrDefault
¬¬K \
(
¬¬\ ]
)
¬¬] ^
.
¬¬^ _
ToString
¬¬_ g
(
¬¬g h
$str
¬¬h t
)
¬¬t u
)
¬¬u v
;
¬¬v w
}
√√ 
else
ƒƒ 
{
≈≈ 
myCookie
∆∆  
.
∆∆  !
Values
∆∆! '
.
∆∆' (
Add
∆∆( +
(
∆∆+ ,
$str
∆∆, 7
,
∆∆7 8
$str
∆∆9 ;
)
∆∆; <
;
∆∆< =
}
«« 
myCookie
…… 
.
…… 
Values
…… #
.
……# $
Add
……$ '
(
……' (
$str
……( 1
,
……1 2
userSgq
……3 :
.
……: ;
AddDate
……; B
.
……B C
ToString
……C K
(
……K L
$str
……L X
)
……X Y
)
……Y Z
;
……Z [
if
ÀÀ 
(
ÀÀ 
userSgq
ÀÀ 
.
ÀÀ  
Role
ÀÀ  $
!=
ÀÀ% '
null
ÀÀ( ,
)
ÀÀ, -
myCookie
ÃÃ  
.
ÃÃ  !
Values
ÃÃ! '
.
ÃÃ' (
Add
ÃÃ( +
(
ÃÃ+ ,
$str
ÃÃ, 3
,
ÃÃ3 4
userSgq
ÃÃ5 <
.
ÃÃ< =
Role
ÃÃ= A
.
ÃÃA B
Replace
ÃÃB I
(
ÃÃI J
$char
ÃÃJ M
,
ÃÃM N
$char
ÃÃO R
)
ÃÃR S
.
ÃÃS T
ToString
ÃÃT \
(
ÃÃ\ ]
)
ÃÃ] ^
)
ÃÃ^ _
;
ÃÃ_ `
else
ÕÕ 
myCookie
ŒŒ  
.
ŒŒ  !
Values
ŒŒ! '
.
ŒŒ' (
Add
ŒŒ( +
(
ŒŒ+ ,
$str
ŒŒ, 3
,
ŒŒ3 4
$str
ŒŒ5 7
)
ŒŒ7 8
;
ŒŒ8 9
if
–– 
(
–– 
userSgq
–– 
.
––   
ParCompanyXUserSgq
––  2
!=
––3 5
null
––6 :
)
––: ;
if
—— 
(
—— 
userSgq
—— #
.
——# $ 
ParCompanyXUserSgq
——$ 6
.
——6 7
Any
——7 :
(
——: ;
r
——; <
=>
——= ?
r
——@ A
.
——A B
Role
——B F
!=
——G I
null
——J N
)
——N O
)
——O P
myCookie
““ $
.
““$ %
Values
““% +
.
““+ ,
Add
““, /
(
““/ 0
$str
““0 >
,
““> ?
string
““@ F
.
““F G
Join
““G K
(
““K L
$str
““L O
,
““O P
userSgq
““Q X
.
““X Y 
ParCompanyXUserSgq
““Y k
.
““k l
Select
““l r
(
““r s
n
““s t
=>
““u w
n
““x y
.
““y z
Role
““z ~
)
““~ 
.““ Ä
Distinct““Ä à
(““à â
)““â ä
.““ä ã
ToArray““ã í
(““í ì
)““ì î
)““î ï
)““ï ñ
;““ñ ó
else
”” 
myCookie
‘‘ $
.
‘‘$ %
Values
‘‘% +
.
‘‘+ ,
Add
‘‘, /
(
‘‘/ 0
$str
‘‘0 >
,
‘‘> ?
$str
‘‘@ B
)
‘‘B C
;
‘‘C D
myCookie
◊◊ 
.
◊◊ 
Expires
◊◊ $
=
◊◊% &
DateTime
◊◊' /
.
◊◊/ 0
Now
◊◊0 3
.
◊◊3 4

AddMinutes
◊◊4 >
(
◊◊> ?
$num
◊◊? A
)
◊◊A B
;
◊◊B C
Response
⁄⁄ 
.
⁄⁄ 
Cookies
⁄⁄ $
.
⁄⁄$ %
Add
⁄⁄% (
(
⁄⁄( )
myCookie
⁄⁄) 1
)
⁄⁄1 2
;
⁄⁄2 3
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
return
·· 
	Resources
·· $
.
··$ %
Resource
··% -
.
··- .$
old_password_incorrect
··. D
;
··D E
}
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
)
‰‰ 
{
ÂÂ 
return
ÊÊ 
	Resources
ÊÊ  
.
ÊÊ  !
Resource
ÊÊ! )
.
ÊÊ) *'
try_again_contact_support
ÊÊ* C
;
ÊÊC D
}
ÁÁ 
return
ËË 
$str
ËË 
;
ËË 
}
ÈÈ 	
[
ÎÎ 	
HttpPost
ÎÎ	 
]
ÎÎ 
[
ÏÏ 	&
ValidateAntiForgeryToken
ÏÏ	 !
]
ÏÏ! "
public
ÌÌ 
string
ÌÌ 
AlterarCompany
ÌÌ $
(
ÌÌ$ %
UserViewModel
ÌÌ% 2
model
ÌÌ3 8
)
ÌÌ8 9
{
ÓÓ 	
try
ÔÔ 
{
 
var
ÒÒ 
userSgq
ÒÒ 
=
ÒÒ 
db
ÒÒ  
.
ÒÒ  !
UserSgq
ÒÒ! (
.
ÒÒ( )
Where
ÒÒ) .
(
ÒÒ. /
x
ÒÒ/ 0
=>
ÒÒ1 3
x
ÒÒ4 5
.
ÒÒ5 6
Id
ÒÒ6 8
==
ÒÒ9 ;
model
ÒÒ< A
.
ÒÒA B
Id
ÒÒB D
)
ÒÒD E
.
ÒÒE F
FirstOrDefault
ÒÒF T
(
ÒÒT U
)
ÒÒU V
;
ÒÒV W
userSgq
ÛÛ 
.
ÛÛ 
	AlterDate
ÛÛ !
=
ÛÛ" #
DateTime
ÛÛ$ ,
.
ÛÛ, -
Now
ÛÛ- 0
;
ÛÛ0 1
userSgq
ÙÙ 
.
ÙÙ 
ParCompany_Id
ÙÙ %
=
ÙÙ& '
model
ÙÙ( -
.
ÙÙ- .
ParCompany_Id
ÙÙ. ;
;
ÙÙ; <
db
ˆˆ 
.
ˆˆ 
Entry
ˆˆ 
(
ˆˆ 
userSgq
ˆˆ  
)
ˆˆ  !
.
ˆˆ! "
State
ˆˆ" '
=
ˆˆ( )
EntityState
ˆˆ* 5
.
ˆˆ5 6
Modified
ˆˆ6 >
;
ˆˆ> ?
db
˜˜ 
.
˜˜ 
SaveChanges
˜˜ 
(
˜˜ 
)
˜˜  
;
˜˜  !
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
)
˙˙ 
{
˚˚ 
return
¸¸ 
	Resources
¸¸  
.
¸¸  !
Resource
¸¸! )
.
¸¸) *'
try_again_contact_support
¸¸* C
;
¸¸C D
}
˝˝ 
return
˛˛ 
$str
˛˛ 
;
˛˛ 
}
ˇˇ 	
	protected
ÅÅ 
override
ÅÅ 
void
ÅÅ 
Dispose
ÅÅ  '
(
ÅÅ' (
bool
ÅÅ( ,
	disposing
ÅÅ- 6
)
ÅÅ6 7
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
	disposing
ÉÉ 
)
ÉÉ 
{
ÑÑ 
db
ÖÖ 
.
ÖÖ 
Dispose
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
base
áá 
.
áá 
Dispose
áá 
(
áá 
	disposing
áá "
)
áá" #
;
áá# $
}
àà 	
private
ää 
void
ää 
ValidaUserSgqDto
ää %
(
ää% &
UserDTO
ää& -

userSgqDto
ää. 8
)
ää8 9
{
ãã 	
if
åå 
(
åå 

userSgqDto
åå 
.
åå 
Id
åå 
>
åå 
$num
åå  !
)
åå! "
{
çç 
if
éé 
(
éé 
db
éé 
.
éé 
UserSgq
éé 
.
éé 
Where
éé $
(
éé$ %
r
éé% &
=>
éé' )
r
éé* +
.
éé+ ,
Name
éé, 0
==
éé1 3

userSgqDto
éé4 >
.
éé> ?
Name
éé? C
&&
ééD F
r
ééG H
.
ééH I
Id
ééI K
!=
ééL N

userSgqDto
ééO Y
.
ééY Z
Id
ééZ \
)
éé\ ]
.
éé] ^
ToList
éé^ d
(
ééd e
)
éée f
.
ééf g
Count
éég l
(
éél m
)
éém n
>
ééo p
$num
ééq r
)
éér s

ModelState
èè 
.
èè 
AddModelError
èè ,
(
èè, -
$str
èè- 3
,
èè3 4
	Resources
èè5 >
.
èè> ?
Resource
èè? G
.
èèG H
repeated_username
èèH Y
)
èèY Z
;
èèZ [
}
êê 
else
ëë 
if
ëë 
(
ëë 
db
ëë 
.
ëë 
UserSgq
ëë 
.
ëë  
Where
ëë  %
(
ëë% &
r
ëë& '
=>
ëë( *
r
ëë+ ,
.
ëë, -
Name
ëë- 1
==
ëë2 4

userSgqDto
ëë5 ?
.
ëë? @
Name
ëë@ D
)
ëëD E
.
ëëE F
ToList
ëëF L
(
ëëL M
)
ëëM N
.
ëëN O
Count
ëëO T
(
ëëT U
)
ëëU V
>
ëëW X
$num
ëëY Z
)
ëëZ [
{
íí 

ModelState
ìì 
.
ìì 
AddModelError
ìì (
(
ìì( )
$str
ìì) /
,
ìì/ 0
	Resources
ìì1 :
.
ìì: ;
Resource
ìì; C
.
ììC D
repeated_username
ììD U
)
ììU V
;
ììV W
}
îî 
}
ïï 	
}
ññ 
}óó Å”
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\VolumeProducao\CepDesossasController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 

FilterUnit 
] 
[ 
CustomAuthorize 
] 
public 

class !
CepDesossasController &
:' (
BaseController) 7
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
[ 	
FormularioPesquisa	 
( #
filtraUnidadePorUsuario 3
=4 5
true6 :
): ;
]; <
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 
userId 
= 
Guard 
. 
GetUsuarioLogado_Id 2
(2 3
HttpContext3 >
)> ?
;? @
var 

userLogado 
= 
db 
.  
UserSgq  '
.' (
Where( -
(- .
r. /
=>0 2
r3 4
.4 5
Id5 7
==8 :
userId; A
)A B
;B C
var 

cepDesossa 
= 
db 
.  
VolumeCepDesossa  0
.0 1
Where1 6
(6 7
VCD7 :
=>; =

userLogado> H
.H I
FirstOrDefaultI W
(W X
)X Y
.Y Z
ParCompanyXUserSgqZ l
.l m
Anym p
(p q
cq r
=>s u
cv w
.w x
ParCompany_Id	x Ö
==
Ü à
VCD
â å
.
å ç
ParCompany_id
ç ö
)
ö õ
||
ú û
VCD
ü ¢
.
¢ £
ParCompany_id
£ ∞
==
± ≥

userLogado
¥ æ
.
æ ø
FirstOrDefault
ø Õ
(
Õ Œ
)
Œ œ
.
œ –
ParCompany_Id
– ›
)
› ﬁ
. 
Include 
( 
c 
=> 
c 
.  

ParCompany  *
)* +
. 
Include 
( 
c 
=> 
c 
.  
	ParLevel1  )
)) *
;* +
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
Request& -
.- .
QueryString. 9
[9 :
$str: E
]E F
)F G
&&H J
!K L
stringL R
.R S
IsNullOrEmptyS `
(` a
Requesta h
.h i
QueryStringi t
[t u
$stru ~
]~ 
)	 Ä
)
Ä Å
{   
System"" 
."" 
DateTime"" 
	startDate""  )
=""* +
Guard"", 1
.""1 2
ParseDateToSqlV2""2 B
(""B C
Request""C J
.""J K
QueryString""K V
[""V W
$str""W b
]""b c
)""c d
;""d e
System## 
.## 
DateTime## 
endDate##  '
=##( )
Guard##* /
.##/ 0
ParseDateToSqlV2##0 @
(##@ A
Request##A H
.##H I
QueryString##I T
[##T U
$str##U ^
]##^ _
)##_ `
;##` a

cepDesossa%% 
=%% 

cepDesossa%% '
.%%' (
Where%%( -
(%%- .
VCD%%. 1
=>%%2 4
VCD%%5 8
.%%8 9
Data%%9 =
>=%%> @
	startDate%%A J
&&%%K M
VCD%%N Q
.%%Q R
Data%%R V
<=%%W Y
endDate%%Z a
)%%a b
;%%b c
}&& 
else'' 
{(( 
System)) 
.)) 
DateTime)) 
	startDate))  )
=))* +
System)), 2
.))2 3
DateTime))3 ;
.)); <
Now))< ?
.))? @
AddDays))@ G
())G H
-))H I
$num))I J
)))J K
;))K L
System** 
.** 
DateTime** 
endDate**  '
=**( )
System*** 0
.**0 1
DateTime**1 9
.**9 :
Now**: =
;**= >

cepDesossa++ 
=++ 

cepDesossa++ '
.++' (
Where++( -
(++- .
VCD++. 1
=>++2 4
VCD++5 8
.++8 9
Data++9 =
>=++> @
	startDate++A J
&&++K M
VCD++N Q
.++Q R
Data++R V
<=++W Y
endDate++Z a
)++a b
;++b c
},, 
if// 
(// 
!// 
string// 
.// 
IsNullOrEmpty// %
(//% &
Request//& -
.//- .
QueryString//. 9
[//9 :
$str//: I
]//I J
)//J K
)//K L
{00 
int11 
id11 
=11 
System11 
.11  
Convert11  '
.11' (
ToInt3211( /
(11/ 0
Request110 7
.117 8
QueryString118 C
[11C D
$str11D S
]11S T
)11T U
;11U V

cepDesossa22 
=22 

cepDesossa22 '
.22' (
Where22( -
(22- .
VCD22. 1
=>222 4
VCD225 8
.228 9
ParCompany_id229 F
==22G I
id22J L
)22L M
;22M N
}33 

cepDesossa55 
=55 

cepDesossa55 #
.55# $
OrderByDescending55$ 5
(555 6
c556 7
=>558 :
c55; <
.55< =
Data55= A
)55A B
;55B C
if77 
(77 

cepDesossa77 
.77 
Count77  
(77  !
)77! "
>77# $
$num77% &
)77& '
return88 
View88 
(88 

cepDesossa88 &
.88& '
ToList88' -
(88- .
)88. /
)88/ 0
;880 1
else99 
return:: 
View:: 
(:: 
new:: 
System::  &
.::& '
Collections::' 2
.::2 3
Generic::3 :
.::: ;
List::; ?
<::? @
VolumeCepDesossa::@ P
>::P Q
(::Q R
)::R S
)::S T
;::T U
};; 	
public>> 
ActionResult>> 
Details>> #
(>># $
int>>$ '
?>>' (
id>>) +
)>>+ ,
{?? 	
if@@ 
(@@ 
id@@ 
==@@ 
null@@ 
)@@ 
{AA 
returnBB 
newBB  
HttpStatusCodeResultBB /
(BB/ 0
HttpStatusCodeBB0 >
.BB> ?

BadRequestBB? I
)BBI J
;BBJ K
}CC 
VolumeCepDesossaDD 

cepDesossaDD '
=DD( )
dbDD* ,
.DD, -
VolumeCepDesossaDD- =
.DD= >
FindDD> B
(DDB C
idDDC E
)DDE F
;DDF G
ifEE 
(EE 

cepDesossaEE 
==EE 
nullEE "
)EE" #
{FF 
returnGG 
HttpNotFoundGG #
(GG# $
)GG$ %
;GG% &
}HH 
returnII 
ViewII 
(II 

cepDesossaII "
)II" #
;II# $
}JJ 	
publicMM 
ActionResultMM 
CreateMM "
(MM" #
)MM# $
{NN 	
ViewBagOO 
.OO 
ParCompany_idOO !
=OO" #
newOO$ '

SelectListOO( 2
(OO2 3
dbOO3 5
.OO5 6

ParCompanyOO6 @
.OO@ A
OrderByOOA H
(OOH I
cOOI J
=>OOK M
cOON O
.OOO P
NameOOP T
)OOT U
,OOU V
$strOOW [
,OO[ \
$strOO] c
)OOc d
;OOd e
ViewBagPP 
.PP 
ParLevel1_idPP  
=PP! "
newPP# &

SelectListPP' 1
(PP1 2
dbPP2 4
.PP4 5
	ParLevel1PP5 >
.PP> ?
WherePP? D
(PPD E
cPPE F
=>PPG I
cPPJ K
.PPK L
IdPPL N
==PPO Q
$numPPR S
)PPS T
,PPT U
$strPPV Z
,PPZ [
$strPP\ b
)PPb c
;PPc d
varRR 
modelRR 
=RR 
newRR 
VolumeCepDesossaRR ,
(RR, -
)RR- .
;RR. /9
-GetNumeroDeFamiliasPorUnidadeDoUsuarioDesossaSS 9
(SS9 :
modelSS: ?
)SS? @
;SS@ A
returnUU 
ViewUU 
(UU 
modelUU 
)UU 
;UU 
}VV 	
privateXX 
voidXX 9
-GetNumeroDeFamiliasPorUnidadeDoUsuarioDesossaXX B
(XXB C
VolumeCepDesossaXXC S
modelXXT Y
)XXY Z
{YY 	
varZZ 
naoCorporativasZZ 
=ZZ  !

CommonDataZZ" ,
.ZZ, -2
&GetNumeroDeFamiliasPorUnidadeDoUsuarioZZ- S
(ZZS T
HttpContextZZT _
,ZZ_ `
$numZZa b
)ZZb c
;ZZc d
var[[ 
corporativos[[ 
=[[ 

CommonData[[ )
.[[) **
GetNumeroDeFamiliasCorporativo[[* H
([[H I
HttpContext[[I T
,[[T U
$num[[V W
)[[W X
;[[X Y
model\\ 
.\\  
QtdadeFamiliaProduto\\ &
=\\' (
corporativos\\) 5
+\\6 7
naoCorporativas\\8 G
;\\G H
model]] 
.]] 
ParLevel1_id]] 
=]]  
db]]! #
.]]# $
	ParLevel1]]$ -
.]]- .
AsNoTracking]]. :
(]]: ;
)]]; <
.]]< =
FirstOrDefault]]= K
(]]K L
r]]L M
=>]]N P
r]]Q R
.]]R S
hashKey]]S Z
==]][ ]
$num]]^ _
)]]_ `
.]]` a
Id]]a c
;]]c d
}^^ 	
[cc 	
HttpPostcc	 
]cc 
[dd 	$
ValidateAntiForgeryTokendd	 !
]dd! "
publicee 
ActionResultee 
Createee "
(ee" #
[ee# $
Bindee$ (
(ee( )
Includeee) 0
=ee1 2
$str	ee3 ÷
)
ee÷ ◊
]
ee◊ ÿ
VolumeCepDesossa
eeŸ È

cepDesossa
eeÍ Ù
)
eeÙ ı
{ff 	9
-GetNumeroDeFamiliasPorUnidadeDoUsuarioDesossagg 9
(gg9 :

cepDesossagg: D
)ggD E
;ggE F
ValidaCepDesossahh 
(hh 

cepDesossahh '
)hh' (
;hh( )
ifii 
(ii 

ModelStateii 
.ii 
IsValidii "
)ii" #
{jj 
ifll 
(ll 
dbll 
.ll 
VolumeCepDesossall &
.ll& '
Wherell' ,
(ll, -
rll- .
=>ll/ 1
rll2 3
.ll3 4
Datall4 8
==ll9 ;

cepDesossall< F
.llF G
DatallG K
&&llL N
rllO P
.llP Q
ParCompany_idllQ ^
==ll_ a

cepDesossallb l
.lll m
ParCompany_idllm z
)llz {
.ll{ |
ToList	ll| Ç
(
llÇ É
)
llÉ Ñ
.
llÑ Ö
Count
llÖ ä
(
llä ã
)
llã å
==
llç è
$num
llê ë
)
llë í
{mm 
dbnn 
.nn 
VolumeCepDesossann '
.nn' (
Addnn( +
(nn+ ,

cepDesossann, 6
)nn6 7
;nn7 8
dboo 
.oo 
SaveChangesoo "
(oo" #
)oo# $
;oo$ %
returnpp 
RedirectToActionpp +
(pp+ ,
$strpp, 3
)pp3 4
;pp4 5
}qq 
elserr 
{ss 
ReturnErrortt 
(tt  
)tt  !
;tt! "
}vv 
}ww 
ViewBagyy 
.yy 
ParCompany_idyy !
=yy" #
newyy$ '

SelectListyy( 2
(yy2 3
dbyy3 5
.yy5 6

ParCompanyyy6 @
.yy@ A
OrderByyyA H
(yyH I
cyyI J
=>yyK M
cyyN O
.yyO P
NameyyP T
)yyT U
,yyU V
$stryyW [
,yy[ \
$stryy] c
,yyc d

cepDesossayye o
.yyo p
ParCompany_idyyp }
)yy} ~
;yy~ 
ViewBagzz 
.zz 
ParLevel1_idzz  
=zz! "
newzz# &

SelectListzz' 1
(zz1 2
dbzz2 4
.zz4 5
	ParLevel1zz5 >
,zz> ?
$strzz@ D
,zzD E
$strzzF L
,zzL M

cepDesossazzN X
.zzX Y
ParLevel1_idzzY e
)zze f
;zzf g
return{{ 
View{{ 
({{ 

cepDesossa{{ "
){{" #
;{{# $
}|| 	
private~~ 
void~~ 
ValidaCepDesossa~~ %
(~~% &
VolumeCepDesossa~~& 6

cepDesossa~~7 A
)~~A B
{ 	
if
ÄÄ 
(
ÄÄ 

cepDesossa
ÄÄ 
.
ÄÄ 
Data
ÄÄ 
==
ÄÄ  "
null
ÄÄ# '
)
ÄÄ' (

ModelState
ÅÅ 
.
ÅÅ 
AddModelError
ÅÅ (
(
ÅÅ( )
$str
ÅÅ) /
,
ÅÅ/ 0
Guard
ÅÅ1 6
.
ÅÅ6 7 
MesangemModelError
ÅÅ7 I
(
ÅÅI J
$str
ÅÅJ P
,
ÅÅP Q
true
ÅÅR V
)
ÅÅV W
)
ÅÅW X
;
ÅÅX Y
if
ÉÉ 
(
ÉÉ 

cepDesossa
ÉÉ 
.
ÉÉ 
ParCompany_id
ÉÉ (
==
ÉÉ) +
null
ÉÉ, 0
)
ÉÉ0 1

ModelState
ÑÑ 
.
ÑÑ 
AddModelError
ÑÑ (
(
ÑÑ( )
$str
ÑÑ) 8
,
ÑÑ8 9
$str
ÑÑ: h
)
ÑÑh i
;
ÑÑi j
if
ÜÜ 
(
ÜÜ 

cepDesossa
ÜÜ 
.
ÜÜ 
ParLevel1_id
ÜÜ '
==
ÜÜ( *
null
ÜÜ+ /
)
ÜÜ/ 0

ModelState
áá 
.
áá 
AddModelError
áá (
(
áá( )
$str
áá) 7
,
áá7 8
$str
áá9 i
)
áái j
;
ááj k
if
ââ 
(
ââ 

cepDesossa
ââ 
.
ââ $
HorasTrabalhadasPorDia
ââ 1
==
ââ2 4
null
ââ5 9
)
ââ9 :

ModelState
ää 
.
ää 
AddModelError
ää (
(
ää( )
$str
ää) A
,
ääA B
$strääC Ç
)ääÇ É
;ääÉ Ñ
else
ãã 
if
åå 
(
åå 

cepDesossa
åå 
.
åå $
HorasTrabalhadasPorDia
åå 1
.
åå1 2
Value
åå2 7
<=
åå8 :
$num
åå; <
)
åå< =

ModelState
çç 
.
çç 
AddModelError
çç (
(
çç( )
$str
çç) A
,
ççA B
$strççC â
)ççâ ä
;ççä ã
if
èè 
(
èè 

cepDesossa
èè 
.
èè 
AmostraPorDia
èè (
==
èè) +
null
èè, 0
)
èè0 1

ModelState
êê 
.
êê 
AddModelError
êê (
(
êê( )
$str
êê) 8
,
êê8 9
$str
êê: p
)
êêp q
;
êêq r
if
íí 
(
íí 

cepDesossa
íí 
.
íí "
QtdadeFamiliaProduto
íí /
==
íí0 2
null
íí3 7
)
íí7 8

ModelState
ìì 
.
ìì 
AddModelError
ìì (
(
ìì( )
$str
ìì) ?
,
ìì? @
$strììA Ö
)ììÖ Ü
;ììÜ á
}
öö 	
private
úú 
void
úú 
ReturnError
úú  
(
úú  !
)
úú! "
{
ùù 	

ModelState
ûû 
.
ûû 
AddModelError
ûû $
(
ûû$ %
$str
ûû% +
,
ûû+ ,
$str
ûû, a
)
ûûa b
;
ûûb c
}
üü 	
public
¢¢ 
ActionResult
¢¢ 
Edit
¢¢  
(
¢¢  !
int
¢¢! $
?
¢¢$ %
id
¢¢& (
)
¢¢( )
{
££ 	
if
§§ 
(
§§ 
id
§§ 
==
§§ 
null
§§ 
)
§§ 
{
•• 
return
¶¶ 
new
¶¶ "
HttpStatusCodeResult
¶¶ /
(
¶¶/ 0
HttpStatusCode
¶¶0 >
.
¶¶> ?

BadRequest
¶¶? I
)
¶¶I J
;
¶¶J K
}
ßß 
VolumeCepDesossa
®® 

cepDesossa
®® '
=
®®( )
db
®®* ,
.
®®, -
VolumeCepDesossa
®®- =
.
®®= >
Find
®®> B
(
®®B C
id
®®C E
)
®®E F
;
®®F G
if
©© 
(
©© 

cepDesossa
©© 
==
©© 
null
©© "
)
©©" #
{
™™ 
return
´´ 
HttpNotFound
´´ #
(
´´# $
)
´´$ %
;
´´% &
}
¨¨ 
ViewBag
≠≠ 
.
≠≠ 
ParCompany_id
≠≠ !
=
≠≠" #
new
≠≠$ '

SelectList
≠≠( 2
(
≠≠2 3
db
≠≠3 5
.
≠≠5 6

ParCompany
≠≠6 @
.
≠≠@ A
OrderBy
≠≠A H
(
≠≠H I
c
≠≠I J
=>
≠≠K M
c
≠≠N O
.
≠≠O P
Name
≠≠P T
)
≠≠T U
,
≠≠U V
$str
≠≠W [
,
≠≠[ \
$str
≠≠] c
,
≠≠c d

cepDesossa
≠≠e o
.
≠≠o p
ParCompany_id
≠≠p }
)
≠≠} ~
;
≠≠~ 
ViewBag
ÆÆ 
.
ÆÆ 
ParLevel1_id
ÆÆ  
=
ÆÆ! "
new
ÆÆ# &

SelectList
ÆÆ' 1
(
ÆÆ1 2
db
ÆÆ2 4
.
ÆÆ4 5
	ParLevel1
ÆÆ5 >
.
ÆÆ> ?
Where
ÆÆ? D
(
ÆÆD E
c
ÆÆE F
=>
ÆÆG I
c
ÆÆJ K
.
ÆÆK L
Id
ÆÆL N
==
ÆÆO Q
$num
ÆÆR S
)
ÆÆS T
,
ÆÆT U
$str
ÆÆV Z
,
ÆÆZ [
$str
ÆÆ\ b
,
ÆÆb c

cepDesossa
ÆÆd n
.
ÆÆn o
ParLevel1_id
ÆÆo {
)
ÆÆ{ |
;
ÆÆ| };
-GetNumeroDeFamiliasPorUnidadeDoUsuarioDesossa
ØØ 9
(
ØØ9 :

cepDesossa
ØØ: D
)
ØØD E
;
ØØE F
return
±± 
View
±± 
(
±± 

cepDesossa
±± "
)
±±" #
;
±±# $
}
≤≤ 	
[
∑∑ 	
HttpPost
∑∑	 
]
∑∑ 
[
∏∏ 	&
ValidateAntiForgeryToken
∏∏	 !
]
∏∏! "
public
ππ 
ActionResult
ππ 
Edit
ππ  
(
ππ  !
[
ππ! "
Bind
ππ" &
(
ππ& '
Include
ππ' .
=
ππ/ 0
$strππ1 ‘
)ππ‘ ’
]ππ’ ÷ 
VolumeCepDesossaππ◊ Á

cepDesossaππË Ú
)ππÚ Û
{
∫∫ 	;
-GetNumeroDeFamiliasPorUnidadeDoUsuarioDesossa
ªª 9
(
ªª9 :

cepDesossa
ªª: D
)
ªªD E
;
ªªE F
ValidaCepDesossa
ºº 
(
ºº 

cepDesossa
ºº '
)
ºº' (
;
ºº( )
if
ææ 
(
ææ 

ModelState
ææ 
.
ææ 
IsValid
ææ "
)
ææ" #
{
øø 
if
¿¿ 
(
¿¿ 
db
¿¿ 
.
¿¿ 
VolumeCepDesossa
¿¿ '
.
¿¿' (
Where
¿¿( -
(
¿¿- .
r
¿¿. /
=>
¿¿0 2
r
¿¿3 4
.
¿¿4 5
Data
¿¿5 9
==
¿¿: <

cepDesossa
¿¿= G
.
¿¿G H
Data
¿¿H L
&&
¿¿M O
r
¿¿P Q
.
¿¿Q R
ParCompany_id
¿¿R _
==
¿¿` b

cepDesossa
¿¿c m
.
¿¿m n
ParCompany_id
¿¿n {
)
¿¿{ |
.
¿¿| }
ToList¿¿} É
(¿¿É Ñ
)¿¿Ñ Ö
.¿¿Ö Ü
Count¿¿Ü ã
(¿¿ã å
)¿¿å ç
==¿¿é ê
$num¿¿ë í
)¿¿í ì
{
¡¡ 
db
¬¬ 
.
¬¬ 
Entry
¬¬ 
(
¬¬ 

cepDesossa
¬¬ '
)
¬¬' (
.
¬¬( )
State
¬¬) .
=
¬¬/ 0
EntityState
¬¬1 <
.
¬¬< =
Modified
¬¬= E
;
¬¬E F
db
√√ 
.
√√ 
SaveChanges
√√ "
(
√√" #
)
√√# $
;
√√$ %
return
ƒƒ 
RedirectToAction
ƒƒ +
(
ƒƒ+ ,
$str
ƒƒ, 3
)
ƒƒ3 4
;
ƒƒ4 5
}
≈≈ 
else
∆∆ 
{
«« 
if
…… 
(
…… 
db
…… 
.
…… 
VolumeCepDesossa
…… *
.
……* +
Where
……+ 0
(
……0 1
r
……1 2
=>
……3 5
r
……6 7
.
……7 8
Data
……8 <
==
……= ?

cepDesossa
……@ J
.
……J K
Data
……K O
&&
……P R
r
  6 7
.
  7 8
ParCompany_id
  8 E
==
  F H

cepDesossa
  I S
.
  S T
ParCompany_id
  T a
&&
  b d
r
ÀÀ6 7
.
ÀÀ7 8
Id
ÀÀ8 :
==
ÀÀ; =

cepDesossa
ÀÀ> H
.
ÀÀH I
Id
ÀÀI K
)
ÀÀK L
.
ÀÀL M
ToList
ÀÀM S
(
ÀÀS T
)
ÀÀT U
.
ÀÀU V
Count
ÀÀV [
(
ÀÀ[ \
)
ÀÀ\ ]
==
ÀÀ^ `
$num
ÀÀa b
)
ÀÀb c
{
ÃÃ 
using
ÕÕ 
(
ÕÕ 
var
ÕÕ "
db2
ÕÕ# &
=
ÕÕ' (
new
ÕÕ) ,
SgqDbDevEntities
ÕÕ- =
(
ÕÕ= >
)
ÕÕ> ?
)
ÕÕ? @
{
ŒŒ 
db2
œœ 
.
œœ  
Entry
œœ  %
(
œœ% &

cepDesossa
œœ& 0
)
œœ0 1
.
œœ1 2
State
œœ2 7
=
œœ8 9
EntityState
œœ: E
.
œœE F
Modified
œœF N
;
œœN O
db2
–– 
.
––  
SaveChanges
––  +
(
––+ ,
)
––, -
;
––- .
return
—— "
RedirectToAction
——# 3
(
——3 4
$str
——4 ;
)
——; <
;
——< =
}
““ 
}
‘‘ 
else
’’ 
{
÷÷ 
ReturnError
◊◊ #
(
◊◊# $
)
◊◊$ %
;
◊◊% &
}
ŸŸ 
}
⁄⁄ 
}
‹‹ 
ViewBag
›› 
.
›› 
ParCompany_id
›› !
=
››" #
new
››$ '

SelectList
››( 2
(
››2 3
db
››3 5
.
››5 6

ParCompany
››6 @
.
››@ A
AsNoTracking
››A M
(
››M N
)
››N O
.
››O P
OrderBy
››P W
(
››W X
c
››X Y
=>
››Z \
c
››] ^
.
››^ _
Name
››_ c
)
››c d
,
››d e
$str
››f j
,
››j k
$str
››l r
,
››r s

cepDesossa
››t ~
.
››~ 
ParCompany_id›› å
)››å ç
;››ç é
ViewBag
ﬁﬁ 
.
ﬁﬁ 
ParLevel1_id
ﬁﬁ  
=
ﬁﬁ! "
new
ﬁﬁ# &

SelectList
ﬁﬁ' 1
(
ﬁﬁ1 2
db
ﬁﬁ2 4
.
ﬁﬁ4 5
	ParLevel1
ﬁﬁ5 >
,
ﬁﬁ> ?
$str
ﬁﬁ@ D
,
ﬁﬁD E
$str
ﬁﬁF L
,
ﬁﬁL M

cepDesossa
ﬁﬁN X
.
ﬁﬁX Y
ParLevel1_id
ﬁﬁY e
)
ﬁﬁe f
;
ﬁﬁf g
return
ﬂﬂ 
View
ﬂﬂ 
(
ﬂﬂ 

cepDesossa
ﬂﬂ "
)
ﬂﬂ" #
;
ﬂﬂ# $
}
‡‡ 	
public
„„ 
ActionResult
„„ 
Delete
„„ "
(
„„" #
int
„„# &
?
„„& '
id
„„( *
)
„„* +
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
id
ÂÂ 
==
ÂÂ 
null
ÂÂ 
)
ÂÂ 
{
ÊÊ 
return
ÁÁ 
new
ÁÁ "
HttpStatusCodeResult
ÁÁ /
(
ÁÁ/ 0
HttpStatusCode
ÁÁ0 >
.
ÁÁ> ?

BadRequest
ÁÁ? I
)
ÁÁI J
;
ÁÁJ K
}
ËË 
VolumeCepDesossa
ÈÈ 

cepDesossa
ÈÈ '
=
ÈÈ( )
db
ÈÈ* ,
.
ÈÈ, -
VolumeCepDesossa
ÈÈ- =
.
ÈÈ= >
Find
ÈÈ> B
(
ÈÈB C
id
ÈÈC E
)
ÈÈE F
;
ÈÈF G
if
ÍÍ 
(
ÍÍ 

cepDesossa
ÍÍ 
==
ÍÍ 
null
ÍÍ "
)
ÍÍ" #
{
ÎÎ 
return
ÏÏ 
HttpNotFound
ÏÏ #
(
ÏÏ# $
)
ÏÏ$ %
;
ÏÏ% &
}
ÌÌ 
return
ÓÓ 
View
ÓÓ 
(
ÓÓ 

cepDesossa
ÓÓ "
)
ÓÓ" #
;
ÓÓ# $
}
ÔÔ 	
[
ÚÚ 	
HttpPost
ÚÚ	 
,
ÚÚ 

ActionName
ÚÚ 
(
ÚÚ 
$str
ÚÚ &
)
ÚÚ& '
]
ÚÚ' (
[
ÛÛ 	&
ValidateAntiForgeryToken
ÛÛ	 !
]
ÛÛ! "
public
ÙÙ 
ActionResult
ÙÙ 
DeleteConfirmed
ÙÙ +
(
ÙÙ+ ,
int
ÙÙ, /
id
ÙÙ0 2
)
ÙÙ2 3
{
ıı 	
VolumeCepDesossa
ˆˆ 

cepDesossa
ˆˆ '
=
ˆˆ( )
db
ˆˆ* ,
.
ˆˆ, -
VolumeCepDesossa
ˆˆ- =
.
ˆˆ= >
Find
ˆˆ> B
(
ˆˆB C
id
ˆˆC E
)
ˆˆE F
;
ˆˆF G
db
˜˜ 
.
˜˜ 
VolumeCepDesossa
˜˜ 
.
˜˜  
Remove
˜˜  &
(
˜˜& '

cepDesossa
˜˜' 1
)
˜˜1 2
;
˜˜2 3
db
¯¯ 
.
¯¯ 
SaveChanges
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
return
˘˘ 
RedirectToAction
˘˘ #
(
˘˘# $
$str
˘˘$ +
)
˘˘+ ,
;
˘˘, -
}
˙˙ 	
	protected
¸¸ 
override
¸¸ 
void
¸¸ 
Dispose
¸¸  '
(
¸¸' (
bool
¸¸( ,
	disposing
¸¸- 6
)
¸¸6 7
{
˝˝ 	
if
˛˛ 
(
˛˛ 
	disposing
˛˛ 
)
˛˛ 
{
ˇˇ 
db
ÄÄ 
.
ÄÄ 
Dispose
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
base
ÇÇ 
.
ÇÇ 
Dispose
ÇÇ 
(
ÇÇ 
	disposing
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
}ÖÖ ≤ÿ
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\VolumeProducao\CepRecortesController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 

FilterUnit 
] 
[ 
CustomAuthorize 
] 
public 

class !
CepRecortesController &
:' (
BaseController) 7
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
int 
getNQA 
( 
string  
nivel! &
,& '
string( .
tamanhoLote/ :
): ;
{ 	
int 
amostra 
= 
$num 
; 
int 
loteInt 
= 
Int32 
.  
Parse  %
(% &
tamanhoLote& 1
)1 2
;2 3
var 
L2EQuery 
= 
from 
nqa  #
in$ &
db' )
.) *
NQA* -
where  
nqa! $
.$ %
NivelGeralInspecao% 7
.7 8
ToString8 @
(@ A
)A B
==C E
nivelF K
where  
loteInt! (
>=) +
nqa, /
./ 0
TamanhoLoteMin0 >
where  
loteInt! (
<=) +
nqa, /
./ 0
TamanhoLoteMax0 >
select !
nqa" %
;% &
var   
result   
=   
L2EQuery   !
.  ! "
FirstOrDefault  " 0
(  0 1
)  1 2
;  2 3
if"" 
("" 
result"" 
!="" 
null"" 
)"" 
{## 
amostra$$ 
=$$ 
result$$  
.$$  !
Amostra$$! (
;$$( )
}%% 
return'' 
amostra'' 
;'' 
}(( 	
[++ 	
FormularioPesquisa++	 
(++ #
filtraUnidadePorUsuario++ 3
=++4 5
true++6 :
)++: ;
]++; <
public,, 
ActionResult,, 
Index,, !
(,,! "
),," #
{-- 	
var.. 
userId.. 
=.. 
Guard.. 
... 
GetUsuarioLogado_Id.. 2
(..2 3
HttpContext..3 >
)..> ?
;..? @
var// 

userLogado// 
=// 
db// 
.//  
UserSgq//  '
.//' (
Where//( -
(//- .
r//. /
=>//0 2
r//3 4
.//4 5
Id//5 7
==//8 :
userId//; A
)//A B
;//B C
var00 
cepRecortes00 
=00 
db00  
.00  !
VolumeCepRecortes00! 2
.002 3
Where003 8
(008 9
VCD009 <
=>00= ?

userLogado00@ J
.00J K
FirstOrDefault00K Y
(00Y Z
)00Z [
.00[ \
ParCompanyXUserSgq00\ n
.00n o
Any00o r
(00r s
c00s t
=>00u w
c00x y
.00y z
ParCompany_Id	00z á
==
00à ä
VCD
00ã é
.
00é è
ParCompany_id
00è ú
)
00ú ù
||
00û †
VCD
00° §
.
00§ •
ParCompany_id
00• ≤
==
00≥ µ

userLogado
00∂ ¿
.
00¿ ¡
FirstOrDefault
00¡ œ
(
00œ –
)
00– —
.
00— “
ParCompany_Id
00“ ﬂ
)
00ﬂ ‡
.
00‡ ·
Include
00· Ë
(
00Ë È
c
00È Í
=>
00Î Ì
c
00Ó Ô
.
00Ô 

ParCompany
00 ˙
)
00˙ ˚
.
00˚ ¸
Include
00¸ É
(
00É Ñ
c
00Ñ Ö
=>
00Ü à
c
00â ä
.
00ä ã
	ParLevel1
00ã î
)
00î ï
;
00ï ñ
if44 
(44 
!44 
string44 
.44 
IsNullOrEmpty44 %
(44% &
Request44& -
.44- .
QueryString44. 9
[449 :
$str44: E
]44E F
)44F G
&&44H J
!44K L
string44L R
.44R S
IsNullOrEmpty44S `
(44` a
Request44a h
.44h i
QueryString44i t
[44t u
$str44u ~
]44~ 
)	44 Ä
)
44Ä Å
{55 
System77 
.77 
DateTime77 
	startDate77  )
=77* +
Guard77, 1
.771 2
ParseDateToSqlV2772 B
(77B C
Request77C J
.77J K
QueryString77K V
[77V W
$str77W b
]77b c
)77c d
;77d e
System88 
.88 
DateTime88 
endDate88  '
=88( )
Guard88* /
.88/ 0
ParseDateToSqlV2880 @
(88@ A
Request88A H
.88H I
QueryString88I T
[88T U
$str88U ^
]88^ _
)88_ `
;88` a
cepRecortes:: 
=:: 
cepRecortes:: )
.::) *
Where::* /
(::/ 0
VCD::0 3
=>::4 6
VCD::7 :
.::: ;
Data::; ?
>=::@ B
	startDate::C L
&&::M O
VCD::P S
.::S T
Data::T X
<=::Y [
endDate::\ c
)::c d
;::d e
};; 
else<< 
{== 
System>> 
.>> 
DateTime>> 
	startDate>>  )
=>>* +
System>>, 2
.>>2 3
DateTime>>3 ;
.>>; <
Now>>< ?
.>>? @
AddDays>>@ G
(>>G H
->>H I
$num>>I J
)>>J K
;>>K L
System?? 
.?? 
DateTime?? 
endDate??  '
=??( )
System??* 0
.??0 1
DateTime??1 9
.??9 :
Now??: =
;??= >
cepRecortes@@ 
=@@ 
cepRecortes@@ )
.@@) *
Where@@* /
(@@/ 0
VCD@@0 3
=>@@4 6
VCD@@7 :
.@@: ;
Data@@; ?
>=@@@ B
	startDate@@C L
&&@@M O
VCD@@P S
.@@S T
Data@@T X
<=@@Y [
endDate@@\ c
)@@c d
;@@d e
}AA 
ifDD 
(DD 
!DD 
stringDD 
.DD 
IsNullOrEmptyDD %
(DD% &
RequestDD& -
.DD- .
QueryStringDD. 9
[DD9 :
$strDD: I
]DDI J
)DDJ K
)DDK L
{EE 
intFF 
idFF 
=FF 
SystemFF 
.FF  
ConvertFF  '
.FF' (
ToInt32FF( /
(FF/ 0
RequestFF0 7
.FF7 8
QueryStringFF8 C
[FFC D
$strFFD S
]FFS T
)FFT U
;FFU V
cepRecortesGG 
=GG 
cepRecortesGG )
.GG) *
WhereGG* /
(GG/ 0
VCDGG0 3
=>GG4 6
VCDGG7 :
.GG: ;
ParCompany_idGG; H
==GGI K
idGGL N
)GGN O
;GGO P
}HH 
cepRecortesJJ 
=JJ 
cepRecortesJJ %
.JJ% &
OrderByDescendingJJ& 7
(JJ7 8
cJJ8 9
=>JJ: <
cJJ= >
.JJ> ?
DataJJ? C
)JJC D
;JJD E
ifLL 
(LL 
cepRecortesLL 
.LL 
CountLL !
(LL! "
)LL" #
>LL$ %
$numLL& '
)LL' (
returnMM 
ViewMM 
(MM 
cepRecortesMM '
.MM' (
ToListMM( .
(MM. /
)MM/ 0
)MM0 1
;MM1 2
elseNN 
returnOO 
ViewOO 
(OO 
newOO 
SystemOO  &
.OO& '
CollectionsOO' 2
.OO2 3
GenericOO3 :
.OO: ;
ListOO; ?
<OO? @
VolumeCepRecortesOO@ Q
>OOQ R
(OOR S
)OOS T
)OOT U
;OOU V
}PP 	
publicSS 
ActionResultSS 
DetailsSS #
(SS# $
intSS$ '
?SS' (
idSS) +
)SS+ ,
{TT 	
ifUU 
(UU 
idUU 
==UU 
nullUU 
)UU 
{VV 
returnWW 
newWW  
HttpStatusCodeResultWW /
(WW/ 0
HttpStatusCodeWW0 >
.WW> ?

BadRequestWW? I
)WWI J
;WWJ K
}XX 
VolumeCepRecortesYY 
cepRecortesYY )
=YY* +
dbYY, .
.YY. /
VolumeCepRecortesYY/ @
.YY@ A
FindYYA E
(YYE F
idYYF H
)YYH I
;YYI J
ifZZ 
(ZZ 
cepRecortesZZ 
==ZZ 
nullZZ #
)ZZ# $
{[[ 
return\\ 
HttpNotFound\\ #
(\\# $
)\\$ %
;\\% &
}]] 
return^^ 
View^^ 
(^^ 
cepRecortes^^ #
)^^# $
;^^$ %
}__ 	
publicbb 
ActionResultbb 
Createbb "
(bb" #
)bb# $
{cc 	
ViewBagdd 
.dd 
ParCompany_iddd !
=dd" #
newdd$ '

SelectListdd( 2
(dd2 3
dbdd3 5
.dd5 6

ParCompanydd6 @
.dd@ A
OrderByddA H
(ddH I
cddI J
=>ddK M
cddN O
.ddO P
NameddP T
)ddT U
,ddU V
$strddW [
,dd[ \
$strdd] c
)ddc d
;ddd e
ViewBagee 
.ee 
ParLevel1_idee  
=ee! "
newee# &

SelectListee' 1
(ee1 2
dbee2 4
.ee4 5
	ParLevel1ee5 >
.ee> ?
Whereee? D
(eeD E
ceeE F
=>eeG I
ceeJ K
.eeK L
IdeeL N
==eeO Q
$numeeR T
)eeT U
,eeU V
$streeW [
,ee[ \
$stree] c
)eec d
;eed e
returnff 
Viewff 
(ff 
)ff 
;ff 
}gg 	
[ll 	
HttpPostll	 
]ll 
[mm 	$
ValidateAntiForgeryTokenmm	 !
]mm! "
publicnn 
ActionResultnn 
Createnn "
(nn" #
[nn# $
Bindnn$ (
(nn( )
Includenn) 0
=nn1 2
$str	nn3 Ó
)
nnÓ Ô
]
nnÔ 
VolumeCepRecortes
nnÒ Ç
cepRecortes
nnÉ é
)
nné è
{oo 	
ValidaCepRecortesss 
(ss 
cepRecortesss )
)ss) *
;ss* +
ifuu 
(uu 

ModelStateuu 
.uu 
IsValiduu "
)uu" #
{vv 
ifww 
(ww 
dbww 
.ww 
VolumeCepRecortesww (
.ww( )
Whereww) .
(ww. /
rww/ 0
=>ww1 3
rww4 5
.ww5 6
Dataww6 :
==ww; =
cepRecortesww> I
.wwI J
DatawwJ N
&&wwO Q
rwwR S
.wwS T
ParCompany_idwwT a
==wwb d
cepRecorteswwe p
.wwp q
ParCompany_idwwq ~
)ww~ 
.	ww Ä
ToList
wwÄ Ü
(
wwÜ á
)
wwá à
.
wwà â
Count
wwâ é
(
wwé è
)
wwè ê
==
wwë ì
$num
wwî ï
)
wwï ñ
{xx 
cepRecorteszz 
.zz  
AddDatezz  '
=zz( )
DateTimezz* 2
.zz2 3
Nowzz3 6
;zz6 7
db{{ 
.{{ 
VolumeCepRecortes{{ (
.{{( )
Add{{) ,
({{, -
cepRecortes{{- 8
){{8 9
;{{9 :
db|| 
.|| 
SaveChanges|| "
(||" #
)||# $
;||$ %
return}} 
RedirectToAction}} +
(}}+ ,
$str}}, 3
)}}3 4
;}}4 5
}~~ 
else 
{
ÄÄ 
ReturnError
ÅÅ 
(
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
}
ÉÉ 
}
ÑÑ 
ViewBag
ÜÜ 
.
ÜÜ 
ParCompany_id
ÜÜ !
=
ÜÜ" #
new
ÜÜ$ '

SelectList
ÜÜ( 2
(
ÜÜ2 3
db
ÜÜ3 5
.
ÜÜ5 6

ParCompany
ÜÜ6 @
.
ÜÜ@ A
OrderBy
ÜÜA H
(
ÜÜH I
c
ÜÜI J
=>
ÜÜK M
c
ÜÜN O
.
ÜÜO P
Name
ÜÜP T
)
ÜÜT U
,
ÜÜU V
$str
ÜÜW [
,
ÜÜ[ \
$str
ÜÜ] c
,
ÜÜc d
cepRecortes
ÜÜe p
.
ÜÜp q
ParCompany_id
ÜÜq ~
)
ÜÜ~ 
;ÜÜ Ä
ViewBag
áá 
.
áá 
ParLevel1_id
áá  
=
áá! "
new
áá# &

SelectList
áá' 1
(
áá1 2
db
áá2 4
.
áá4 5
	ParLevel1
áá5 >
,
áá> ?
$str
áá@ D
,
ááD E
$str
ááF L
,
ááL M
cepRecortes
ááN Y
.
ááY Z
ParLevel1_id
ááZ f
)
ááf g
;
áág h
return
àà 
View
àà 
(
àà 
cepRecortes
àà #
)
àà# $
;
àà$ %
}
ââ 	
private
ãã 
void
ãã 
ValidaCepRecortes
ãã &
(
ãã& '
VolumeCepRecortes
ãã' 8
cepRecortes
ãã9 D
)
ããD E
{
åå 	
if
çç 
(
çç 
cepRecortes
çç 
.
çç 
Data
çç  
==
çç! #
null
çç$ (
)
çç( )

ModelState
éé 
.
éé 
AddModelError
éé (
(
éé( )
$str
éé) /
,
éé/ 0
$str
éé1 W
)
ééW X
;
ééX Y
if
êê 
(
êê 
cepRecortes
êê 
.
êê 
ParCompany_id
êê )
==
êê* ,
null
êê- 1
||
êê2 4
cepRecortes
êê5 @
.
êê@ A
ParCompany_id
êêA N
<=
êêO Q
$num
êêR S
)
êêS T

ModelState
ëë 
.
ëë 
AddModelError
ëë (
(
ëë( )
$str
ëë) 8
,
ëë8 9
$str
ëë: `
)
ëë` a
;
ëëa b
if
ìì 
(
ìì 
cepRecortes
ìì 
.
ìì 
ParLevel1_id
ìì (
==
ìì) +
null
ìì, 0
||
ìì1 3
cepRecortes
ìì4 ?
.
ìì? @
ParLevel1_id
ìì@ L
<=
ììM O
$num
ììP Q
)
ììQ R

ModelState
îî 
.
îî 
AddModelError
îî (
(
îî( )
$str
îî) 7
,
îî7 8
$str
îî9 `
)
îî` a
;
îîa b
if
ññ 
(
ññ 
cepRecortes
ññ 
.
ññ $
HorasTrabalhadasPorDia
ññ 2
==
ññ3 5
null
ññ6 :
)
ññ: ;

ModelState
óó 
.
óó 
AddModelError
óó (
(
óó( )
$str
óó) A
,
óóA B
$stróóC Ç
)óóÇ É
;óóÉ Ñ
if
ôô 
(
ôô 
cepRecortes
ôô 
.
ôô %
QtdadeMediaKgRecProdDia
ôô 3
==
ôô4 6
null
ôô7 ;
)
ôô; <

ModelState
öö 
.
öö 
AddModelError
öö (
(
öö( )
$str
öö) B
,
ööB C
$strööD £
)öö£ §
;öö§ •
if
úú 
(
úú 
cepRecortes
úú 
.
úú 
NBR
úú 
==
úú  "
null
úú# '
||
úú( *
cepRecortes
úú+ 6
.
úú6 7
NBR
úú7 :
<=
úú; =
$num
úú> ?
)
úú? @

ModelState
ùù 
.
ùù 
AddModelError
ùù (
(
ùù( )
$str
ùù) .
,
ùù. /
$str
ùù0 u
)
ùùu v
;
ùùv w
if
üü 
(
üü 
cepRecortes
üü 
.
üü &
QtadeTrabEsteiraRecortes
üü 4
==
üü5 7
null
üü8 <
)
üü< =

ModelState
†† 
.
†† 
AddModelError
†† (
(
††( )
$str
††) C
,
††C D
$str††E û
)††û ü
;††ü †
if
¢¢ 
(
¢¢ 
cepRecortes
¢¢ 
.
¢¢ .
 TotalAvaliaColaborEsteirHoraProd
¢¢ <
==
¢¢= ?
null
¢¢@ D
)
¢¢D E

ModelState
££ 
.
££ 
AddModelError
££ (
(
££( )
$str
££) K
,
££K L
$str££M ª
)££ª º
;££º Ω
if
•• 
(
•• 
cepRecortes
•• 
.
•• 
TamanhoAmostra
•• *
==
••+ -
null
••. 2
)
••2 3

ModelState
¶¶ 
.
¶¶ 
AddModelError
¶¶ (
(
¶¶( )
$str
¶¶) 9
,
¶¶9 :
$str
¶¶; x
)
¶¶x y
;
¶¶y z
}
ßß 	
private
©© 
void
©© 
ReturnError
©©  
(
©©  !
)
©©! "
{
™™ 	

ModelState
´´ 
.
´´ 
AddModelError
´´ $
(
´´$ %
$str
´´% +
,
´´+ ,
$str
´´- b
)
´´b c
;
´´c d
}
¨¨ 	
public
ØØ 
ActionResult
ØØ 
Edit
ØØ  
(
ØØ  !
int
ØØ! $
?
ØØ$ %
id
ØØ& (
)
ØØ( )
{
∞∞ 	
if
±± 
(
±± 
id
±± 
==
±± 
null
±± 
)
±± 
{
≤≤ 
return
≥≥ 
new
≥≥ "
HttpStatusCodeResult
≥≥ /
(
≥≥/ 0
HttpStatusCode
≥≥0 >
.
≥≥> ?

BadRequest
≥≥? I
)
≥≥I J
;
≥≥J K
}
¥¥ 
VolumeCepRecortes
µµ 
cepRecortes
µµ )
=
µµ* +
db
µµ, .
.
µµ. /
VolumeCepRecortes
µµ/ @
.
µµ@ A
Find
µµA E
(
µµE F
id
µµF H
)
µµH I
;
µµI J
if
∂∂ 
(
∂∂ 
cepRecortes
∂∂ 
==
∂∂ 
null
∂∂ #
)
∂∂# $
{
∑∑ 
return
∏∏ 
HttpNotFound
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
}
ππ 
ViewBag
∫∫ 
.
∫∫ 
ParCompany_id
∫∫ !
=
∫∫" #
new
∫∫$ '

SelectList
∫∫( 2
(
∫∫2 3
db
∫∫3 5
.
∫∫5 6

ParCompany
∫∫6 @
.
∫∫@ A
OrderBy
∫∫A H
(
∫∫H I
c
∫∫I J
=>
∫∫K M
c
∫∫N O
.
∫∫O P
Name
∫∫P T
)
∫∫T U
,
∫∫U V
$str
∫∫W [
,
∫∫[ \
$str
∫∫] c
,
∫∫c d
cepRecortes
∫∫e p
.
∫∫p q
ParCompany_id
∫∫q ~
)
∫∫~ 
;∫∫ Ä
ViewBag
ªª 
.
ªª 
ParLevel1_id
ªª  
=
ªª! "
new
ªª# &

SelectList
ªª' 1
(
ªª1 2
db
ªª2 4
.
ªª4 5
	ParLevel1
ªª5 >
.
ªª> ?
Where
ªª? D
(
ªªD E
c
ªªE F
=>
ªªG I
c
ªªJ K
.
ªªK L
Id
ªªL N
==
ªªO Q
$num
ªªR T
)
ªªT U
,
ªªU V
$str
ªªW [
,
ªª[ \
$str
ªª] c
,
ªªc d
cepRecortes
ªªe p
.
ªªp q
ParLevel1_id
ªªq }
)
ªª} ~
;
ªª~ 
return
ºº 
View
ºº 
(
ºº 
cepRecortes
ºº #
)
ºº# $
;
ºº$ %
}
ΩΩ 	
[
¬¬ 	
HttpPost
¬¬	 
]
¬¬ 
public
√√ 
ActionResult
√√ 
Edit
√√  
(
√√  !
VolumeCepRecortes
√√! 2
cepRecortes
√√3 >
)
√√> ?
{
ƒƒ 	
ValidaCepRecortes
≈≈ 
(
≈≈ 
cepRecortes
≈≈ )
)
≈≈) *
;
≈≈* +
cepRecortes
∆∆ 
.
∆∆ 
	AlterDate
∆∆ !
=
∆∆" #
DateTime
∆∆$ ,
.
∆∆, -
Now
∆∆- 0
;
∆∆0 1
if
»» 
(
»» 

ModelState
»» 
.
»» 
IsValid
»» "
)
»»" #
{
…… 
if
   
(
   
db
   
.
   
VolumeCepRecortes
   (
.
  ( )
Where
  ) .
(
  . /
r
  / 0
=>
  1 3
r
  4 5
.
  5 6
Data
  6 :
==
  ; =
cepRecortes
  > I
.
  I J
Data
  J N
&&
  O Q
r
  R S
.
  S T
ParCompany_id
  T a
==
  b d
cepRecortes
  e p
.
  p q
ParCompany_id
  q ~
)
  ~ 
.   Ä
ToList  Ä Ü
(  Ü á
)  á à
.  à â
Count  â é
(  é è
)  è ê
==  ë ì
$num  î ï
)  ï ñ
{
ÀÀ 
db
ÃÃ 
.
ÃÃ 
Entry
ÃÃ 
(
ÃÃ 
cepRecortes
ÃÃ (
)
ÃÃ( )
.
ÃÃ) *
State
ÃÃ* /
=
ÃÃ0 1
EntityState
ÃÃ2 =
.
ÃÃ= >
Modified
ÃÃ> F
;
ÃÃF G
db
ÕÕ 
.
ÕÕ 
SaveChanges
ÕÕ "
(
ÕÕ" #
)
ÕÕ# $
;
ÕÕ$ %
return
ŒŒ 
RedirectToAction
ŒŒ +
(
ŒŒ+ ,
$str
ŒŒ, 3
)
ŒŒ3 4
;
ŒŒ4 5
}
œœ 
else
–– 
{
—— 
if
”” 
(
”” 
db
”” 
.
”” 
VolumeCepRecortes
”” ,
.
””, -
Where
””- 2
(
””2 3
r
””3 4
=>
””5 7
r
””8 9
.
””9 :
Data
””: >
==
””? A
cepRecortes
””B M
.
””M N
Data
””N R
&&
””S U
r
‘‘7 8
.
‘‘8 9
ParCompany_id
‘‘9 F
==
‘‘G I
cepRecortes
‘‘J U
.
‘‘U V
ParCompany_id
‘‘V c
&&
‘‘d f
r
’’7 8
.
’’8 9
Id
’’9 ;
==
’’< >
cepRecortes
’’? J
.
’’J K
Id
’’K M
)
’’M N
.
’’N O
ToList
’’O U
(
’’U V
)
’’V W
.
’’W X
Count
’’X ]
(
’’] ^
)
’’^ _
==
’’` b
$num
’’c d
)
’’d e
{
÷÷ 
using
◊◊ 
(
◊◊ 
var
◊◊ "
db2
◊◊# &
=
◊◊' (
new
◊◊) ,
SgqDbDevEntities
◊◊- =
(
◊◊= >
)
◊◊> ?
)
◊◊? @
{
ÿÿ 
db2
ŸŸ 
.
ŸŸ  
Entry
ŸŸ  %
(
ŸŸ% &
cepRecortes
ŸŸ& 1
)
ŸŸ1 2
.
ŸŸ2 3
State
ŸŸ3 8
=
ŸŸ9 :
EntityState
ŸŸ; F
.
ŸŸF G
Modified
ŸŸG O
;
ŸŸO P
db2
⁄⁄ 
.
⁄⁄  
SaveChanges
⁄⁄  +
(
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
return
€€ "
RedirectToAction
€€# 3
(
€€3 4
$str
€€4 ;
)
€€; <
;
€€< =
}
‹‹ 
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
ReturnError
·· #
(
··# $
)
··$ %
;
··% &
}
„„ 
}
‰‰ 
}
ÂÂ 
ViewBag
ÊÊ 
.
ÊÊ 
ParCompany_id
ÊÊ !
=
ÊÊ" #
new
ÊÊ$ '

SelectList
ÊÊ( 2
(
ÊÊ2 3
db
ÊÊ3 5
.
ÊÊ5 6

ParCompany
ÊÊ6 @
.
ÊÊ@ A
OrderBy
ÊÊA H
(
ÊÊH I
c
ÊÊI J
=>
ÊÊK M
c
ÊÊN O
.
ÊÊO P
Name
ÊÊP T
)
ÊÊT U
,
ÊÊU V
$str
ÊÊW [
,
ÊÊ[ \
$str
ÊÊ] c
,
ÊÊc d
cepRecortes
ÊÊe p
.
ÊÊp q
ParCompany_id
ÊÊq ~
)
ÊÊ~ 
;ÊÊ Ä
ViewBag
ÁÁ 
.
ÁÁ 
ParLevel1_id
ÁÁ  
=
ÁÁ! "
new
ÁÁ# &

SelectList
ÁÁ' 1
(
ÁÁ1 2
db
ÁÁ2 4
.
ÁÁ4 5
	ParLevel1
ÁÁ5 >
,
ÁÁ> ?
$str
ÁÁ@ D
,
ÁÁD E
$str
ÁÁF L
,
ÁÁL M
cepRecortes
ÁÁN Y
.
ÁÁY Z
ParLevel1_id
ÁÁZ f
)
ÁÁf g
;
ÁÁg h
return
ËË 
View
ËË 
(
ËË 
cepRecortes
ËË #
)
ËË# $
;
ËË$ %
}
ÈÈ 	
public
ÏÏ 
ActionResult
ÏÏ 
Delete
ÏÏ "
(
ÏÏ" #
int
ÏÏ# &
?
ÏÏ& '
id
ÏÏ( *
)
ÏÏ* +
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ 
id
ÓÓ 
==
ÓÓ 
null
ÓÓ 
)
ÓÓ 
{
ÔÔ 
return
 
new
 "
HttpStatusCodeResult
 /
(
/ 0
HttpStatusCode
0 >
.
> ?

BadRequest
? I
)
I J
;
J K
}
ÒÒ 
VolumeCepRecortes
ÚÚ 
cepRecortes
ÚÚ )
=
ÚÚ* +
db
ÚÚ, .
.
ÚÚ. /
VolumeCepRecortes
ÚÚ/ @
.
ÚÚ@ A
Find
ÚÚA E
(
ÚÚE F
id
ÚÚF H
)
ÚÚH I
;
ÚÚI J
if
ÛÛ 
(
ÛÛ 
cepRecortes
ÛÛ 
==
ÛÛ 
null
ÛÛ #
)
ÛÛ# $
{
ÙÙ 
return
ıı 
HttpNotFound
ıı #
(
ıı# $
)
ıı$ %
;
ıı% &
}
ˆˆ 
return
˜˜ 
View
˜˜ 
(
˜˜ 
cepRecortes
˜˜ #
)
˜˜# $
;
˜˜$ %
}
¯¯ 	
[
˚˚ 	
HttpPost
˚˚	 
,
˚˚ 

ActionName
˚˚ 
(
˚˚ 
$str
˚˚ &
)
˚˚& '
]
˚˚' (
[
¸¸ 	&
ValidateAntiForgeryToken
¸¸	 !
]
¸¸! "
public
˝˝ 
ActionResult
˝˝ 
DeleteConfirmed
˝˝ +
(
˝˝+ ,
int
˝˝, /
id
˝˝0 2
)
˝˝2 3
{
˛˛ 	
VolumeCepRecortes
ˇˇ 
cepRecortes
ˇˇ )
=
ˇˇ* +
db
ˇˇ, .
.
ˇˇ. /
VolumeCepRecortes
ˇˇ/ @
.
ˇˇ@ A
Find
ˇˇA E
(
ˇˇE F
id
ˇˇF H
)
ˇˇH I
;
ˇˇI J
db
ÄÄ 
.
ÄÄ 
VolumeCepRecortes
ÄÄ  
.
ÄÄ  !
Remove
ÄÄ! '
(
ÄÄ' (
cepRecortes
ÄÄ( 3
)
ÄÄ3 4
;
ÄÄ4 5
db
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
return
ÇÇ 
RedirectToAction
ÇÇ #
(
ÇÇ# $
$str
ÇÇ$ +
)
ÇÇ+ ,
;
ÇÇ, -
}
ÉÉ 	
	protected
ÖÖ 
override
ÖÖ 
void
ÖÖ 
Dispose
ÖÖ  '
(
ÖÖ' (
bool
ÖÖ( ,
	disposing
ÖÖ- 6
)
ÖÖ6 7
{
ÜÜ 	
if
áá 
(
áá 
	disposing
áá 
)
áá 
{
àà 
db
ââ 
.
ââ 
Dispose
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
base
ãã 
.
ãã 
Dispose
ãã 
(
ãã 
	disposing
ãã "
)
ãã" #
;
ãã# $
}
åå 	
}
êê 
}ëë „
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\GlobalConfigController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
public 

class "
GlobalConfigController '
:( )

Controller* 4
{		 
public 
ActionResult 
Config "
(" #
)# $
{ 	
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
db 
. 
Configuration  
.  !
LazyLoadingEnabled! 3
=4 5
false6 ;
;; <
ViewBag 
. 
unidades  
=! "
db# %
.% &

ParCompany& 0
.0 1
ToList1 7
(7 8
)8 9
;9 :
} 
return 
View 
( 
) 
; 
} 	
} 
}  ;
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\VolumeProducao\NQAsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{		 
[

 
CustomAuthorize

 
]

 
public 

class 
NQAsController 
:  !
BaseController" 0
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
db 
. 
NQA 
. 
ToList %
(% &
)& '
)' (
;( )
} 	
public 
ActionResult 
Details #
(# $
int$ '
?' (
id) +
)+ ,
{ 	
if 
( 
id 
== 
null 
) 
{ 
return 
new  
HttpStatusCodeResult /
(/ 0
HttpStatusCode0 >
.> ?

BadRequest? I
)I J
;J K
} 
NQA 
nQA 
= 
db 
. 
NQA 
. 
Find !
(! "
id" $
)$ %
;% &
if 
( 
nQA 
== 
null 
) 
{ 
return 
HttpNotFound #
(# $
)$ %
;% &
}   
return!! 
View!! 
(!! 
nQA!! 
)!! 
;!! 
}"" 	
public%% 
ActionResult%% 
Create%% "
(%%" #
)%%# $
{&& 	
return'' 
View'' 
('' 
)'' 
;'' 
}(( 	
[-- 	
HttpPost--	 
]-- 
[.. 	$
ValidateAntiForgeryToken..	 !
]..! "
public// 
ActionResult// 
Create// "
(//" #
[//# $
Bind//$ (
(//( )
Include//) 0
=//1 2
$str	//3 ¨
)
//¨ ≠
]
//≠ Æ
NQA
//Ø ≤
nQA
//≥ ∂
)
//∂ ∑
{00 	
if11 
(11 

ModelState11 
.11 
IsValid11 "
)11" #
{22 
db33 
.33 
NQA33 
.33 
Add33 
(33 
nQA33 
)33 
;33  
db44 
.44 
SaveChanges44 
(44 
)44  
;44  !
return55 
RedirectToAction55 '
(55' (
$str55( /
)55/ 0
;550 1
}66 
return88 
View88 
(88 
nQA88 
)88 
;88 
}99 	
public<< 
ActionResult<< 
Edit<<  
(<<  !
int<<! $
?<<$ %
id<<& (
)<<( )
{== 	
if>> 
(>> 
id>> 
==>> 
null>> 
)>> 
{?? 
return@@ 
new@@  
HttpStatusCodeResult@@ /
(@@/ 0
HttpStatusCode@@0 >
.@@> ?

BadRequest@@? I
)@@I J
;@@J K
}AA 
NQABB 
nQABB 
=BB 
dbBB 
.BB 
NQABB 
.BB 
FindBB !
(BB! "
idBB" $
)BB$ %
;BB% &
ifCC 
(CC 
nQACC 
==CC 
nullCC 
)CC 
{DD 
returnEE 
HttpNotFoundEE #
(EE# $
)EE$ %
;EE% &
}FF 
returnGG 
ViewGG 
(GG 
nQAGG 
)GG 
;GG 
}HH 	
[MM 	
HttpPostMM	 
]MM 
[NN 	$
ValidateAntiForgeryTokenNN	 !
]NN! "
publicOO 
ActionResultOO 
EditOO  
(OO  !
[OO! "
BindOO" &
(OO& '
IncludeOO' .
=OO/ 0
$str	OO1 ™
)
OO™ ´
]
OO´ ¨
NQA
OO≠ ∞
nQA
OO± ¥
)
OO¥ µ
{PP 	
ifQQ 
(QQ 

ModelStateQQ 
.QQ 
IsValidQQ "
)QQ" #
{RR 
dbSS 
.SS 
EntrySS 
(SS 
nQASS 
)SS 
.SS 
StateSS #
=SS$ %
EntityStateSS& 1
.SS1 2
ModifiedSS2 :
;SS: ;
dbTT 
.TT 
SaveChangesTT 
(TT 
)TT  
;TT  !
returnUU 
RedirectToActionUU '
(UU' (
$strUU( /
)UU/ 0
;UU0 1
}VV 
returnWW 
ViewWW 
(WW 
nQAWW 
)WW 
;WW 
}XX 	
public[[ 
ActionResult[[ 
Delete[[ "
([[" #
int[[# &
?[[& '
id[[( *
)[[* +
{\\ 	
if]] 
(]] 
id]] 
==]] 
null]] 
)]] 
{^^ 
return__ 
new__  
HttpStatusCodeResult__ /
(__/ 0
HttpStatusCode__0 >
.__> ?

BadRequest__? I
)__I J
;__J K
}`` 
NQAaa 
nQAaa 
=aa 
dbaa 
.aa 
NQAaa 
.aa 
Findaa !
(aa! "
idaa" $
)aa$ %
;aa% &
ifbb 
(bb 
nQAbb 
==bb 
nullbb 
)bb 
{cc 
returndd 
HttpNotFounddd #
(dd# $
)dd$ %
;dd% &
}ee 
returnff 
Viewff 
(ff 
nQAff 
)ff 
;ff 
}gg 	
[jj 	
HttpPostjj	 
,jj 

ActionNamejj 
(jj 
$strjj &
)jj& '
]jj' (
[kk 	$
ValidateAntiForgeryTokenkk	 !
]kk! "
publicll 
ActionResultll 
DeleteConfirmedll +
(ll+ ,
intll, /
idll0 2
)ll2 3
{mm 	
NQAnn 
nQAnn 
=nn 
dbnn 
.nn 
NQAnn 
.nn 
Findnn !
(nn! "
idnn" $
)nn$ %
;nn% &
dboo 
.oo 
NQAoo 
.oo 
Removeoo 
(oo 
nQAoo 
)oo 
;oo 
dbpp 
.pp 
SaveChangespp 
(pp 
)pp 
;pp 
returnqq 
RedirectToActionqq #
(qq# $
$strqq$ +
)qq+ ,
;qq, -
}rr 	
	protectedtt 
overridett 
voidtt 
Disposett  '
(tt' (
booltt( ,
	disposingtt- 6
)tt6 7
{uu 	
ifvv 
(vv 
	disposingvv 
)vv 
{ww 
dbxx 
.xx 
Disposexx 
(xx 
)xx 
;xx 
}yy 
basezz 
.zz 
Disposezz 
(zz 
	disposingzz "
)zz" #
;zz# $
}{{ 	
}|| 
}}} •H
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParCompanyController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{		 
[

 
CustomAuthorize

 
]

 
public 

class  
ParCompanyController %
:& '
BaseController( 6
{ 
private 
IBaseDomain 
< 

ParCompany &
,& '
ParCompanyDTO( 5
>5 6!
_baseDomainParCompany7 L
;L M
private 
IBaseDomain 
<  
ParCompanyXStructure 0
,0 1#
ParCompanyXStructureDTO2 I
>I J+
_baseDomainParCompanyXStructureK j
;j k
private 
IBaseDomain 
< 
ParStructure (
,( )
ParStructureDTO* 9
>9 :#
_baseDomainParStructure; R
;R S
private 
IBaseDomain 
< 
ParStructureGroup -
,- . 
ParStructureGroupDTO/ C
>C D(
_baseDomainParStructureGroupE a
;a b
private 
IBaseDomain 
< 

ParCluster &
,& '
ParClusterDTO( 5
>5 6!
_baseDomainParCluster7 L
;L M
private 
IBaseDomain 
< 
ParCompanyCluster -
,- . 
ParCompanyClusterDTO/ C
>C D(
_baseDomainParCompanyClusterE a
;a b
public  
ParCompanyController #
(# $
IBaseDomain$ /
</ 0

ParCompany0 :
,: ;
ParCompanyDTO< I
>I J 
baseDomainParCompanyK _
,_ `
IBaseDomain 
<   
ParCompanyXStructure  4
,4 5#
ParCompanyXStructureDTO6 M
>M N*
baseDomainParCompanyXStructureO m
,m n
IBaseDomain 
<  
ParStructure  ,
,, -
ParStructureDTO. =
>= >"
baseDomainParStructure? U
,U V
IBaseDomain 
<  
ParStructureGroup  1
,1 2 
ParStructureGroupDTO3 G
>G H'
baseDomainParStructureGroupI d
,d e
IBaseDomain 
<  

ParCluster  *
,* +
ParClusterDTO, 9
>9 : 
baseDomainParCluster; O
,O P
IBaseDomain 
<  
ParCompanyCluster  1
,1 2 
ParCompanyClusterDTO3 G
>G H'
baseDomainParCompanyClusterI d
) 
{ 	!
_baseDomainParCompany !
=" # 
baseDomainParCompany$ 8
;8 9+
_baseDomainParCompanyXStructure +
=, -*
baseDomainParCompanyXStructure. L
;L M#
_baseDomainParStructure #
=$ %"
baseDomainParStructure& <
;< =(
_baseDomainParStructureGroup (
=) *'
baseDomainParStructureGroup+ F
;F G!
_baseDomainParCluster   !
=  " # 
baseDomainParCluster  $ 8
;  8 9(
_baseDomainParCompanyCluster!! (
=!!) *'
baseDomainParCompanyCluster!!+ F
;!!F G
ViewBag## 
.## 
listaParCompany## #
=##$ %!
_baseDomainParCompany##& ;
.##; <
GetAll##< B
(##B C
)##C D
.##D E
Where##E J
(##J K
r##K L
=>##M O
r##P Q
.##Q R
IsActive##R Z
==##[ ]
true##^ b
)##b c
.##c d
ToList##d j
(##j k
)##k l
;##l m
ViewBag$$ 
.$$ $
listaParCompanyStructure$$ ,
=$$- .+
_baseDomainParCompanyXStructure$$/ N
.$$N O
GetAllNoLazyLoad$$O _
($$_ `
)$$` a
.$$a b
Where$$b g
($$g h
r$$h i
=>$$j l
r$$m n
.$$n o
Active$$o u
==$$v x
true$$y }
)$$} ~
.$$~ 
ToList	$$ Ö
(
$$Ö Ü
)
$$Ü á
;
$$á à
ViewBag%% 
.%% 
listaParStructure%% %
=%%& '#
_baseDomainParStructure%%( ?
.%%? @
GetAll%%@ F
(%%F G
)%%G H
.%%H I
Where%%I N
(%%N O
r%%O P
=>%%Q S
r%%T U
.%%U V
IsActive%%V ^
==%%_ a
true%%b f
)%%f g
.%%g h
ToList%%h n
(%%n o
)%%o p
;%%p q
ViewBag&& 
.&& "
listaParStructureGroup&& *
=&&+ ,(
_baseDomainParStructureGroup&&- I
.&&I J
GetAll&&J P
(&&P Q
)&&Q R
.&&R S
Where&&S X
(&&X Y
r&&Y Z
=>&&[ ]
r&&^ _
.&&_ `
IsActive&&` h
==&&i k
true&&l p
)&&p q
.&&q r
ToList&&r x
(&&x y
)&&y z
;&&z {
ViewBag'' 
.'' 
listaParCluster'' #
=''$ %!
_baseDomainParCluster''& ;
.''; <
GetAll''< B
(''B C
)''C D
.''D E
Where''E J
(''J K
r''K L
=>''L N
r''N O
.''O P
IsActive''P X
==''Y [
true''\ `
)''` a
.''a b
ToList''b h
(''h i
)''i j
;''j k
ViewBag(( 
.(( %
listaParStructureXCompany(( -
=((. /#
_baseDomainParStructure((0 G
.((G H
GetAll((H N
(((N O
)((O P
.((P Q
Where((Q V
(((V W
r)) 
=>)) 
r)) 
.))  
ParStructureGroup_Id)) )
==))* ,#
_baseDomainParStructure))- D
.))D E
GetAllNoLazyLoad))E U
())U V
)))V W
.))W X
Where))X ]
())] ^
y))^ _
=>))` b
y))c d
.))d e
IsActive))e m
==))n p
true))q u
)))u v
.))v w
Max))w z
())z {
x)){ |
=>))} 
x
))Ä Å
.
))Å Ç"
ParStructureGroup_Id
))Ç ñ
)
))ñ ó
&&
))ò ö
r
))õ ú
.
))ú ù
IsActive
))ù •
==
))¶ ®
true
))© ≠
)
))≠ Æ
;
))Æ Ø
foreach++ 
(++ 
ParCompanyDTO++ !
company++" )
in++* ,
ViewBag++- 4
.++4 5
listaParCompany++5 D
)++D E
{,, 
company-- 
.-- !
ListParCompanyCluster-- -
=--. /(
_baseDomainParCompanyCluster--0 L
.--L M
GetAll--M S
(--S T
)--T U
.--U V
Where--V [
(--[ \
r.. 
=>.. 
r.. 
... 
ParCompany_Id.. (
==..) +
company.., 3
...3 4
Id..4 6
&&..7 9
r..: ;
...; <
Active..< B
==..C E
true..F J
)..J K
...K L
ToList..L R
(..R S
)..S T
;..T U
company00 
.00 $
ListParCompanyXStructure00 0
=001 2+
_baseDomainParCompanyXStructure003 R
.00R S
GetAll00S Y
(00Y Z
)00Z [
.00[ \
Where00\ a
(00a b
r11 
=>11 
r11 
.11 
ParCompany_Id11 (
==11) +
company11, 3
.113 4
Id114 6
&&117 9
r11: ;
.11; <
Active11< B
==11C E
true11F J
)11J K
.11K L
ToList11L R
(11R S
)11S T
;11T U
}22 
}55 	
public88 
ActionResult88 
Index88 !
(88! "
)88" #
{99 	
return:: 
View:: 
(:: 
):: 
;:: 
};; 	
public== 
ActionResult== 
Index2== "
(==" #
)==# $
{>> 	
return?? 
View?? 
(?? 
)?? 
;?? 
}@@ 	
publicBB 
ActionResultBB 
GetParCompanyBB )
(BB) *
)BB* +
{CC 	
returnDD 
PartialViewDD 
(DD 
$strDD +
)DD+ ,
;DD, -
}EE 	
publicGG 
ActionResultGG 
GetParStructureGG +
(GG+ ,
)GG, -
{HH 	
returnII 
PartialViewII 
(II 
$strII -
)II- .
;II. /
}JJ 	
publicLL 
ActionResultLL  
GetParStructureGroupLL 0
(LL0 1
)LL1 2
{MM 	
returnNN 
PartialViewNN 
(NN 
$strNN 2
)NN2 3
;NN3 4
}OO 	
}TT 
}UU ô˚
uC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\ConsolidacaoTestes\ConsolidacaoTestesController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
ConsolidacaoTestes  2
{ 
public

 

class

 
ResultLevel3

 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
ResultLevel2Id !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
ParLevel1Id 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 

WeiDefects !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
WeiEvaluation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
String 
ParLevel1Name #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
ParLevel2Id 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
String 
ParLevel2Name #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 
ParLevel3Id 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
String 
ParLevel3Name #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
decimal 
Weight 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 

Evaluation !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
MinValue 
{  !
get" %
;% &
set' *
;* +
}, -
public 
decimal 
MaxValue 
{  !
get" %
;% &
set' *
;* +
}, -
public 
String 
	ValueDone 
{  !
get" %
;% &
set' *
;* +
}, -
public 
decimal 
Defects 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
CT4Def3 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
CT4Eva3 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
CollectionDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DateTime 
AddDate 
{  !
get" %
;% &
set' *
;* +
}, -
public   
int   
UserId   
{   
get   
;    
set  ! $
;  $ %
}  & '
public!! 
String!! 
AddIp!! 
{!! 
get!! !
;!!! "
set!!# &
;!!& '
}!!( )
public"" 
String"" 
AddMac"" 
{"" 
get"" "
;""" #
set""$ '
;""' (
}"") *
public## 
String##  
AddGeograficPosition## *
{##+ ,
get##- 0
;##0 1
set##2 5
;##5 6
}##7 8
public$$ 
int$$ 
	UnidadeId$$ 
{$$ 
get$$ "
;$$" #
set$$$ '
;$$' (
}$$) *
}&& 
public(( 

class(( 
ResultLevel2(( 
{)) 
public** 
int** 
Id** 
{** 
get** 
;** 
set**  
;**  !
}**" #
public++ 
int++ 
ResultLevel1Id++ !
{++" #
get++$ '
;++' (
set++) ,
;++, -
}++. /
public,, 
int,, 
ParLevel1Id,, 
{,,  
get,,! $
;,,$ %
set,,& )
;,,) *
},,+ ,
public-- 
String-- 
ParLevel1Name-- #
{--$ %
get--& )
;--) *
set--+ .
;--. /
}--0 1
public.. 
int.. 
ParLevel2Id.. 
{..  
get..! $
;..$ %
set..& )
;..) *
}..+ ,
public// 
String// 
ParLevel2Name// #
{//$ %
get//& )
;//) *
set//+ .
;//. /
}//0 1
public00 
int00 

Punishment00 
{00 
get00  
;00  !
set00" %
;00% &
}00' (
public11 
decimal11 
CT1Eva211 
{11 
get11 !
;11! "
set11# &
;11& '
}11( )
public22 
decimal22 
CT1Def222 
{22 
get22 !
;22! "
set22# &
;22& '
}22( )
public33 
decimal33 
CT2Eva233 
{33 
get33 !
;33! "
set33# &
;33& '
}33( )
public44 
decimal44 
CT2Def244 
{44 
get44 !
;44! "
set44# &
;44& '
}44( )
public55 
decimal55 
CT3Eva255 
{55 
get55 !
;55! "
set55# &
;55& '
}55( )
public66 
decimal66 
CT3Def266 
{66 
get66 !
;66! "
set66# &
;66& '
}66( )
public77 
decimal77 
CT4Eva277 
{77 
get77 !
;77! "
set77# &
;77& '
}77( )
public88 
decimal88 
CT4Def288 
{88 
get88 !
;88! "
set88# &
;88& '
}88( )
public99 
decimal99 
CT5Eva299 
{99 
get99 !
;99! "
set99# &
;99& '
}99( )
public:: 
decimal:: 
CT5Def2:: 
{:: 
get:: !
;::! "
set::# &
;::& '
}::( )
public;; 
DateTime;; 
AddDate;; 
{;;  !
get;;" %
;;;% &
set;;' *
;;;* +
};;, -
public<< 
int<< 
	UnidadeId<< 
{<< 
get<< "
;<<" #
set<<$ '
;<<' (
}<<) *
}== 
public?? 

class?? 
ResultLevel1?? 
{@@ 
publicAA 
intAA 
IdAA 
{AA 
getAA 
;AA 
setAA  
;AA  !
}AA" #
publicBB 
intBB 
ResultLevel1IdBB !
{BB" #
getBB$ '
;BB' (
setBB) ,
;BB, -
}BB. /
publicCC 
intCC 
ParLevel1IdCC 
{CC  
getCC! $
;CC$ %
setCC& )
;CC) *
}CC+ ,
publicDD 
StringDD 
ParLevel1NameDD #
{DD$ %
getDD& )
;DD) *
setDD+ .
;DD. /
}DD0 1
publicEE 
decimalEE 
CT1Eva1EE 
{EE  
getEE! $
;EE$ %
setEE& )
;EE) *
}EE+ ,
publicFF 
decimalFF 
CT1Def1FF 
{FF 
getFF !
;FF! "
setFF# &
;FF& '
}FF( )
publicGG 
decimalGG 
CT2Eva1GG 
{GG 
getGG !
;GG! "
setGG# &
;GG& '
}GG( )
publicHH 
decimalHH 
CT2Def1HH 
{HH 
getHH !
;HH! "
setHH# &
;HH& '
}HH( )
publicII 
decimalII 
CT3Eva1II 
{II 
getII !
;II! "
setII# &
;II& '
}II( )
publicJJ 
decimalJJ 
CT3Def1JJ 
{JJ 
getJJ !
;JJ! "
setJJ# &
;JJ& '
}JJ( )
publicKK 
decimalKK 
	CT3Def1_2KK  
{KK! "
getKK# &
;KK& '
setKK( +
;KK+ ,
}KK- .
publicLL 
decimalLL 
CT4Eva1LL 
{LL  
getLL! $
;LL$ %
setLL& )
;LL) *
}LL+ ,
publicMM 
decimalMM 
CT4Def1MM 
{MM 
getMM !
;MM! "
setMM# &
;MM& '
}MM( )
publicNN 
decimalNN 
CT5Eva1NN 
{NN 
getNN !
;NN! "
setNN# &
;NN& '
}NN( )
publicOO 
decimalOO 
CT5Def1OO 
{OO 
getOO !
;OO! "
setOO# &
;OO& '
}OO( )
publicPP 
DateTimePP 
AddDatePP 
{PP  !
getPP" %
;PP% &
setPP' *
;PP* +
}PP, -
publicQQ 
intQQ 
	UnidadeIdQQ 
{QQ 
getQQ "
;QQ" #
setQQ$ '
;QQ' (
}QQ) *
}RR 
publicVV 

classVV (
ConsolidacaoTestesControllerVV -
:VV. /
BaseControllerVV0 >
{WW 
private[[ 
List[[ 
<[[ 
ResultLevel3[[ !
>[[! ""
createListResultLevel3[[# 9
([[9 :
)[[: ;
{\\ 	
var]] 
listaLevel3]] 
=]] 
new]] !
List]]" &
<]]& '
ResultLevel3]]' 3
>]]3 4
(]]4 5
)]]5 6
;]]6 7
listaLevel3`` 
.`` 
Add`` 
(`` 
new`` 
ResultLevel3``  ,
{aa 
Idbb 
=bb 
$numbb 
,bb 
ResultLevel2Idcc 
=cc  
$numcc! "
,cc" #
ParLevel1Iddd 
=dd 
$numdd 
,dd  
ParLevel1Nameee 
=ee 
$stree  -
,ee- .
ParLevel2Idff 
=ff 
$numff 
,ff  
ParLevel2Namegg 
=gg 
$strgg  1
,gg1 2
ParLevel3Idhh 
=hh 
$numhh 
,hh  
ParLevel3Nameii 
=ii 
$strii  *
,ii* +
Weightjj 
=jj 
$numjj 
,jj 
WeiEvaluationkk 
=kk  
calcWeightEvaluationkk  4
(kk4 5
$numkk5 6
,kk6 7
$numkk8 9
)kk9 :
,kk: ;

Evaluationll 
=ll 
$numll 
,ll 
MinValuemm 
=mm 
$nummm 
,mm 
MaxValuenn 
=nn 
$numnn 
,nn 
	ValueDoneoo 
=oo 
$stroo 
,oo 
Defectspp 
=pp 
$numpp 
,pp 

WeiDefectsqq 
=qq 
calcWeightDefectsqq .
(qq. /
$numqq/ 0
,qq0 1
$numqq2 3
,qq3 4
$numqq5 6
)qq6 7
,qq7 8
CT4Eva3rr 
=rr 
CT4Eva3rr !
(rr! "
$numrr" #
)rr# $
,rr$ %
CT4Def3ss 
=ss 
CT4Def3ss !
(ss! "
$numss" #
)ss# $
,ss$ %
}tt 
)tt 
;tt 
returnvv 
listaLevel3vv 
;vv 
}ww 	
privateyy 
Listyy 
<yy 
ResultLevel2yy !
>yy! ""
createListResultLevel2yy# 9
(yy9 :
Listyy: >
<yy> ?
ResultLevel3yy? K
>yyK L
listaLevel3yyM X
)yyX Y
{zz 	
var{{ 
listaLevel2{{ 
={{ 
new{{ !
List{{" &
<{{& '
ResultLevel2{{' 3
>{{3 4
({{4 5
){{5 6
;{{6 7
listaLevel2}} 
.}} 
Add}} 
(}} 
new}} 
ResultLevel2}}  ,
{~~ 
Id 
= 
$num 
, 
ResultLevel1Id
ÄÄ 
=
ÄÄ  
$num
ÄÄ! "
,
ÄÄ" #
ParLevel1Name
ÅÅ 
=
ÅÅ 
$str
ÅÅ  "
,
ÅÅ" #
ParLevel2Id
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
,
ÇÇ  
ParLevel2Name
ÉÉ 
=
ÉÉ 
$str
ÉÉ  "
,
ÉÉ" #

Punishment
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
CT1Eva2
ÖÖ 
=
ÖÖ 
CT1Eva2
ÖÖ !
(
ÖÖ! "
$num
ÖÖ" #
,
ÖÖ# $
listaLevel3
ÖÖ% 0
)
ÖÖ0 1
,
ÖÖ1 2
CT1Def2
ÜÜ 
=
ÜÜ 
CT1Def2
ÜÜ !
(
ÜÜ! "
$num
ÜÜ" #
,
ÜÜ# $
$num
ÜÜ% &
,
ÜÜ& '
listaLevel3
ÜÜ( 3
)
ÜÜ3 4
,
ÜÜ4 5
CT2Eva2
áá 
=
áá 
CT2Eva2
áá !
(
áá! "
$num
áá" #
,
áá# $
listaLevel3
áá% 0
)
áá0 1
,
áá1 2
CT2Def2
àà 
=
àà 
CT2Def2
àà !
(
àà! "
$num
àà" #
,
àà# $
listaLevel3
àà% 0
)
àà0 1
,
àà1 2
CT3Eva2
ââ 
=
ââ 
CT3Eva2
ââ !
(
ââ! "
$num
ââ" #
,
ââ# $
listaLevel3
ââ% 0
)
ââ0 1
,
ââ1 2
CT3Def2
ää 
=
ää 
CT3Def2
ää !
(
ää! "
$num
ää" #
,
ää# $
listaLevel3
ää% 0
)
ää0 1
,
ää1 2
CT4Eva2
ãã 
=
ãã 
CT4Eva2
ãã !
(
ãã! "
$num
ãã" #
,
ãã# $
listaLevel3
ãã% 0
)
ãã0 1
,
ãã1 2
CT4Def2
åå 
=
åå 
CT4Def2
åå !
(
åå! "
$num
åå" #
,
åå# $
listaLevel3
åå% 0
)
åå0 1
,
åå1 2
CT5Eva2
çç 
=
çç 
CT5Eva2
çç !
(
çç! "
$num
çç" #
,
çç# $
listaLevel3
çç% 0
)
çç0 1
,
çç1 2
CT5Def2
éé 
=
éé 
CT5Def2
éé !
(
éé! "
$num
éé" #
,
éé# $
listaLevel3
éé% 0
)
éé0 1
,
éé1 2
}
èè 
)
èè 
;
èè 
return
ëë 
listaLevel2
ëë 
;
ëë 
}
íí 	
private
îî 
List
îî 
<
îî 
ResultLevel1
îî !
>
îî! "$
createListResultLevel1
îî# 9
(
îî9 :
List
îî: >
<
îî> ?
ResultLevel2
îî? K
>
îîK L
listaLevel2
îîM X
)
îîX Y
{
ïï 	
var
ññ 
listaLevel1
ññ 
=
ññ 
new
ññ !
List
ññ" &
<
ññ& '
ResultLevel1
ññ' 3
>
ññ3 4
(
ññ4 5
)
ññ5 6
;
ññ6 7
listaLevel1
ôô 
.
ôô 
Add
ôô 
(
ôô 
new
ôô 
ResultLevel1
ôô  ,
{
öö 
Id
õõ 
=
õõ 
$num
õõ 
,
õõ 
ResultLevel1Id
úú 
=
úú  
$num
úú  !
,
úú! "
ParLevel1Id
ùù 
=
ùù 
$num
ùù 
,
ùù  
ParLevel1Name
ûû 
=
ûû 
$str
ûû  "
,
ûû" #
CT1Eva1
üü 
=
üü 
CT1Eva1
üü #
(
üü# $
$num
üü$ %
,
üü% &
listaLevel2
üü' 2
)
üü2 3
,
üü3 4
CT1Def1
†† 
=
†† 
CT1Def1
†† #
(
††# $
$num
††$ %
,
††% &
listaLevel2
††' 2
)
††2 3
,
††3 4
CT2Eva1
°° 
=
°° 
CT2Eva1
°° #
(
°°# $
$num
°°$ %
,
°°% &
listaLevel2
°°' 2
)
°°2 3
,
°°3 4
CT2Def1
¢¢ 
=
¢¢ 
CT2Def1
¢¢ #
(
¢¢# $
$num
¢¢$ %
,
¢¢% &
listaLevel2
¢¢' 2
)
¢¢2 3
,
¢¢3 4
CT3Eva1
££ 
=
££ 
CT3Eva1
££ #
(
££# $
$num
££$ %
,
££% &
listaLevel2
££' 2
)
££2 3
,
££3 4
CT3Def1
§§ 
=
§§ 
CT3Def1
§§ #
(
§§# $
$num
§§$ %
,
§§% &
listaLevel2
§§' 2
)
§§2 3
,
§§3 4
	CT3Def1_2
•• 
=
•• 
	CT3Def1_2
•• %
(
••% &
$num
••& '
,
••' (
listaLevel2
••) 4
)
••4 5
,
••5 6
CT4Eva1
¶¶ 
=
¶¶ 
CT4Eva1
¶¶ #
(
¶¶# $
$num
¶¶$ %
,
¶¶% &
listaLevel2
¶¶' 2
)
¶¶2 3
,
¶¶3 4
CT4Def1
ßß 
=
ßß 
CT4Def1
ßß #
(
ßß# $
$num
ßß$ %
,
ßß% &
listaLevel2
ßß' 2
)
ßß2 3
,
ßß3 4
CT5Eva1
®® 
=
®® 
CT5Eva1
®® #
(
®®# $
$num
®®$ %
,
®®% &
listaLevel2
®®' 2
)
®®2 3
,
®®3 4
CT5Def1
©© 
=
©© 
CT5Def1
©© #
(
©©# $
$num
©©$ %
,
©©% &
listaLevel2
©©' 2
)
©©2 3
,
©©3 4
}
™™ 
)
™™ 
;
™™ 
return
¨¨ 
listaLevel1
¨¨ 
;
¨¨ 
}
≠≠ 	
public
≥≥ 
ActionResult
≥≥ 
Index
≥≥ !
(
≥≥! "
)
≥≥" #
{
¥¥ 	
var
µµ 
listResultLevel3
µµ  
=
µµ! "$
createListResultLevel3
µµ# 9
(
µµ9 :
)
µµ: ;
;
µµ; <
var
∑∑ 
listResultLevel2
∑∑  
=
∑∑! "$
createListResultLevel2
∑∑# 9
(
∑∑9 :
listResultLevel3
∑∑: J
)
∑∑J K
;
∑∑K L
var
ππ 
listResultLevel1
ππ  
=
ππ! "$
createListResultLevel1
ππ# 9
(
ππ9 :
listResultLevel2
ππ: J
)
ππJ K
;
ππK L
return
ªª 
View
ªª 
(
ªª 
)
ªª 
;
ªª 
}
ºº 	
private
«« 
decimal
«« 
CT1Eva1
«« 
(
««  
int
««  #
ResultLevel1Id
««$ 2
,
««2 3
List
««4 8
<
««8 9
ResultLevel2
««9 E
>
««E F

listLevel2
««G Q
)
««Q R
{
»» 	
decimal
…… 
sum
…… 
=
…… 
$num
…… 
;
…… 
for
ÀÀ 
(
ÀÀ 
int
ÀÀ 
i
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
i
ÀÀ 
<
ÀÀ 

listLevel2
ÀÀ  *
.
ÀÀ* +
Count
ÀÀ+ 0
;
ÀÀ0 1
i
ÀÀ2 3
++
ÀÀ3 5
)
ÀÀ5 6
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
ResultLevel1Id
ÕÕ "
==
ÕÕ# %

listLevel2
ÕÕ& 0
[
ÕÕ0 1
i
ÕÕ1 2
]
ÕÕ2 3
.
ÕÕ3 4
ResultLevel1Id
ÕÕ4 B
)
ÕÕB C
{
ŒŒ 
sum
œœ 
+=
œœ 

listLevel2
œœ %
[
œœ% &
i
œœ& '
]
œœ' (
.
œœ( )
CT1Eva2
œœ) 0
;
œœ0 1
}
–– 
}
—— 
return
”” 
sum
”” 
;
”” 
}
‘‘ 	
private
›› 
decimal
›› 
CT1Def1
›› 
(
››  
int
››  #
ResultLevel1Id
››$ 2
,
››2 3
List
››4 8
<
››8 9
ResultLevel2
››9 E
>
››E F

listLevel2
››G Q
)
››Q R
{
ﬁﬁ 	
decimal
ﬂﬂ 
sum
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
for
·· 
(
·· 
int
·· 
i
·· 
=
·· 
$num
·· 
;
·· 
i
·· 
<
·· 

listLevel2
··  *
.
··* +
Count
··+ 0
;
··0 1
i
··2 3
++
··3 5
)
··5 6
{
‚‚ 
if
„„ 
(
„„ 
ResultLevel1Id
„„ "
==
„„# %

listLevel2
„„& 0
[
„„0 1
i
„„1 2
]
„„2 3
.
„„3 4
ResultLevel1Id
„„4 B
)
„„B C
{
‰‰ 
sum
ÂÂ 
+=
ÂÂ 

listLevel2
ÂÂ %
[
ÂÂ% &
i
ÂÂ& '
]
ÂÂ' (
.
ÂÂ( )
CT1Def2
ÂÂ) 0
;
ÂÂ0 1
}
ÊÊ 
}
ÁÁ 
return
ÈÈ 
sum
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
private
ÛÛ 
decimal
ÛÛ 
CT2Eva1
ÛÛ 
(
ÛÛ  
int
ÛÛ  #
ResultLevel1Id
ÛÛ$ 2
,
ÛÛ2 3
List
ÛÛ4 8
<
ÛÛ8 9
ResultLevel2
ÛÛ9 E
>
ÛÛE F

listLevel2
ÛÛG Q
)
ÛÛQ R
{
ÙÙ 	
decimal
ıı 
sum
ıı 
=
ıı 
$num
ıı 
;
ıı 
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 

listLevel2
˜˜  *
.
˜˜* +
Count
˜˜+ 0
;
˜˜0 1
i
˜˜2 3
++
˜˜3 5
)
˜˜5 6
{
¯¯ 
if
˘˘ 
(
˘˘ 
ResultLevel1Id
˘˘ "
==
˘˘# %

listLevel2
˘˘& 0
[
˘˘0 1
i
˘˘1 2
]
˘˘2 3
.
˘˘3 4
ResultLevel1Id
˘˘4 B
)
˘˘B C
{
˙˙ 
sum
˚˚ 
+=
˚˚ 

listLevel2
˚˚ %
[
˚˚% &
i
˚˚& '
]
˚˚' (
.
˚˚( )
CT2Eva2
˚˚) 0
;
˚˚0 1
}
¸¸ 
}
˝˝ 
return
ˇˇ 
sum
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
private
ââ 
decimal
ââ 
CT2Def1
ââ 
(
ââ  
int
ââ  #
ResultLevel1Id
ââ$ 2
,
ââ2 3
List
ââ4 8
<
ââ8 9
ResultLevel2
ââ9 E
>
ââE F

listLevel2
ââG Q
)
ââQ R
{
ää 	
decimal
ãã 
sum
ãã 
=
ãã 
$num
ãã 
;
ãã 
for
çç 
(
çç 
int
çç 
i
çç 
=
çç 
$num
çç 
;
çç 
i
çç 
<
çç 

listLevel2
çç  *
.
çç* +
Count
çç+ 0
;
çç0 1
i
çç2 3
++
çç3 5
)
çç5 6
{
éé 
if
èè 
(
èè 
ResultLevel1Id
èè "
==
èè# %

listLevel2
èè& 0
[
èè0 1
i
èè1 2
]
èè2 3
.
èè3 4
ResultLevel1Id
èè4 B
)
èèB C
{
êê 
sum
ëë 
+=
ëë 

listLevel2
ëë %
[
ëë% &
i
ëë& '
]
ëë' (
.
ëë( )
CT2Def2
ëë) 0
;
ëë0 1
}
íí 
}
ìì 
return
ïï 
sum
ïï 
;
ïï 
}
ññ 	
private
££ 
decimal
££ 
CT3Eva1
££ 
(
££  
int
££  #
ResultLevel1Id
££$ 2
,
££2 3
List
££4 8
<
££8 9
ResultLevel2
££9 E
>
££E F

listLevel2
££G Q
)
££Q R
{
§§ 	
decimal
•• 
sum
•• 
=
•• 
$num
•• 
;
•• 
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 

listLevel2
ßß  *
.
ßß* +
Count
ßß+ 0
;
ßß0 1
i
ßß2 3
++
ßß3 5
)
ßß5 6
{
®® 
if
©© 
(
©© 
ResultLevel1Id
©© "
==
©©# %

listLevel2
©©& 0
[
©©0 1
i
©©1 2
]
©©2 3
.
©©3 4
ResultLevel1Id
©©4 B
)
©©B C
{
™™ 
sum
´´ 
+=
´´ 

listLevel2
´´ %
[
´´% &
i
´´& '
]
´´' (
.
´´( )
CT2Eva2
´´) 0
;
´´0 1
}
¨¨ 
}
≠≠ 
if
ØØ 
(
ØØ 
sum
ØØ 
>
ØØ 
$num
ØØ 
)
ØØ 
{
∞∞ 
return
±± 
$num
±± 
;
±± 
}
≤≤ 
else
≥≥ 
{
¥¥ 
return
µµ 
$num
µµ 
;
µµ 
}
∂∂ 
}
∑∑ 	
private
ƒƒ 
decimal
ƒƒ 
CT3Def1
ƒƒ 
(
ƒƒ  
int
ƒƒ  #
ResultLevel1Id
ƒƒ$ 2
,
ƒƒ2 3
List
ƒƒ4 8
<
ƒƒ8 9
ResultLevel2
ƒƒ9 E
>
ƒƒE F

listLevel2
ƒƒG Q
)
ƒƒQ R
{
≈≈ 	
decimal
∆∆ 
sum
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
for
»» 
(
»» 
int
»» 
i
»» 
=
»» 
$num
»» 
;
»» 
i
»» 
<
»» 

listLevel2
»»  *
.
»»* +
Count
»»+ 0
;
»»0 1
i
»»2 3
++
»»3 5
)
»»5 6
{
…… 
if
   
(
   
ResultLevel1Id
   "
==
  # %

listLevel2
  & 0
[
  0 1
i
  1 2
]
  2 3
.
  3 4
ResultLevel1Id
  4 B
)
  B C
{
ÀÀ 
sum
ÃÃ 
+=
ÃÃ 

listLevel2
ÃÃ %
[
ÃÃ% &
i
ÃÃ& '
]
ÃÃ' (
.
ÃÃ( )
CT3Def2
ÃÃ) 0
;
ÃÃ0 1
}
ÕÕ 
}
ŒŒ 
if
–– 
(
–– 
sum
–– 
>
–– 
$num
–– 
)
–– 
{
—— 
return
““ 
$num
““ 
;
““ 
}
”” 
else
‘‘ 
{
’’ 
return
÷÷ 
$num
÷÷ 
;
÷÷ 
}
◊◊ 
}
ÿÿ 	
private
·· 
decimal
·· 
	CT3Def1_2
·· !
(
··! "
int
··" %
ResultLevel1Id
··& 4
,
··4 5
List
··6 :
<
··: ;
ResultLevel2
··; G
>
··G H

listLevel2
··I S
)
··S T
{
‚‚ 	
decimal
„„ 
sum
„„ 
=
„„ 
$num
„„ 
;
„„ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
i
ÂÂ 
<
ÂÂ 

listLevel2
ÂÂ  *
.
ÂÂ* +
Count
ÂÂ+ 0
;
ÂÂ0 1
i
ÂÂ2 3
++
ÂÂ3 5
)
ÂÂ5 6
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
ResultLevel1Id
ÁÁ "
==
ÁÁ# %

listLevel2
ÁÁ& 0
[
ÁÁ0 1
i
ÁÁ1 2
]
ÁÁ2 3
.
ÁÁ3 4
ResultLevel1Id
ÁÁ4 B
)
ÁÁB C
{
ËË 
sum
ÈÈ 
+=
ÈÈ 

listLevel2
ÈÈ %
[
ÈÈ% &
i
ÈÈ& '
]
ÈÈ' (
.
ÈÈ( )
CT3Def2
ÈÈ) 0
;
ÈÈ0 1
}
ÍÍ 
}
ÎÎ 
return
ÌÌ 
sum
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
private
˜˜ 
decimal
˜˜ 
CT4Eva1
˜˜ 
(
˜˜  
int
˜˜  #
ResultLevel1Id
˜˜$ 2
,
˜˜2 3
List
˜˜4 8
<
˜˜8 9
ResultLevel2
˜˜9 E
>
˜˜E F

listLevel2
˜˜G Q
)
˜˜Q R
{
¯¯ 	
decimal
˘˘ 
sum
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
for
˚˚ 
(
˚˚ 
int
˚˚ 
i
˚˚ 
=
˚˚ 
$num
˚˚ 
;
˚˚ 
i
˚˚ 
<
˚˚ 

listLevel2
˚˚  *
.
˚˚* +
Count
˚˚+ 0
;
˚˚0 1
i
˚˚2 3
++
˚˚3 5
)
˚˚5 6
{
¸¸ 
if
˝˝ 
(
˝˝ 
ResultLevel1Id
˝˝ "
==
˝˝# %

listLevel2
˝˝& 0
[
˝˝0 1
i
˝˝1 2
]
˝˝2 3
.
˝˝3 4
ResultLevel1Id
˝˝4 B
)
˝˝B C
{
˛˛ 
sum
ˇˇ 
+=
ˇˇ 

listLevel2
ˇˇ %
[
ˇˇ% &
i
ˇˇ& '
]
ˇˇ' (
.
ˇˇ( )
CT4Eva2
ˇˇ) 0
;
ˇˇ0 1
}
ÄÄ 
}
ÅÅ 
return
ÉÉ 
sum
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
private
çç 
decimal
çç 
CT4Def1
çç 
(
çç  
int
çç  #
ResultLevel1Id
çç$ 2
,
çç2 3
List
çç4 8
<
çç8 9
ResultLevel2
çç9 E
>
ççE F

listLevel2
ççG Q
)
ççQ R
{
éé 	
decimal
èè 
sum
èè 
=
èè 
$num
èè 
;
èè 
for
ëë 
(
ëë 
int
ëë 
i
ëë 
=
ëë 
$num
ëë 
;
ëë 
i
ëë 
<
ëë 

listLevel2
ëë  *
.
ëë* +
Count
ëë+ 0
;
ëë0 1
i
ëë2 3
++
ëë3 5
)
ëë5 6
{
íí 
if
ìì 
(
ìì 
ResultLevel1Id
ìì "
==
ìì# %

listLevel2
ìì& 0
[
ìì0 1
i
ìì1 2
]
ìì2 3
.
ìì3 4
ResultLevel1Id
ìì4 B
)
ììB C
{
îî 
sum
ïï 
+=
ïï 

listLevel2
ïï %
[
ïï% &
i
ïï& '
]
ïï' (
.
ïï( )
CT4Def2
ïï) 0
;
ïï0 1
}
ññ 
}
óó 
return
ôô 
sum
ôô 
;
ôô 
}
öö 	
private
££ 
decimal
££ 
CT5Eva1
££ 
(
££  
int
££  #
ResultLevel1Id
££$ 2
,
££2 3
List
££4 8
<
££8 9
ResultLevel2
££9 E
>
££E F

listLevel2
££G Q
)
££Q R
{
§§ 	
decimal
•• 
sum
•• 
=
•• 
$num
•• 
;
•• 
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 

listLevel2
ßß  *
.
ßß* +
Count
ßß+ 0
;
ßß0 1
i
ßß2 3
++
ßß3 5
)
ßß5 6
{
®® 
if
©© 
(
©© 
ResultLevel1Id
©© "
==
©©# %

listLevel2
©©& 0
[
©©0 1
i
©©1 2
]
©©2 3
.
©©3 4
ResultLevel1Id
©©4 B
)
©©B C
{
™™ 
sum
´´ 
+=
´´ 

listLevel2
´´ %
[
´´% &
i
´´& '
]
´´' (
.
´´( )
CT5Eva2
´´) 0
;
´´0 1
}
¨¨ 
}
≠≠ 
return
ØØ 
sum
ØØ 
;
ØØ 
}
∞∞ 	
private
ππ 
decimal
ππ 
CT5Def1
ππ 
(
ππ  
int
ππ  #
ResultLevel1Id
ππ$ 2
,
ππ2 3
List
ππ4 8
<
ππ8 9
ResultLevel2
ππ9 E
>
ππE F

listLevel2
ππG Q
)
ππQ R
{
∫∫ 	
decimal
ªª 
sum
ªª 
=
ªª 
$num
ªª 
;
ªª 
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
i
ΩΩ 
<
ΩΩ 

listLevel2
ΩΩ  *
.
ΩΩ* +
Count
ΩΩ+ 0
;
ΩΩ0 1
i
ΩΩ2 3
++
ΩΩ3 5
)
ΩΩ5 6
{
ææ 
if
øø 
(
øø 
ResultLevel1Id
øø "
==
øø# %

listLevel2
øø& 0
[
øø0 1
i
øø1 2
]
øø2 3
.
øø3 4
ResultLevel1Id
øø4 B
)
øøB C
{
¿¿ 
sum
¡¡ 
+=
¡¡ 

listLevel2
¡¡ %
[
¡¡% &
i
¡¡& '
]
¡¡' (
.
¡¡( )
CT5Def2
¡¡) 0
;
¡¡0 1
}
¬¬ 
}
√√ 
return
≈≈ 
sum
≈≈ 
;
≈≈ 
}
∆∆ 	
private
”” 
decimal
”” 
CT1Eva2
”” 
(
””  
int
””  #
ResultLevel2Id
””$ 2
,
””2 3
List
””4 8
<
””8 9
ResultLevel3
””9 E
>
””E F

listLevel3
””G Q
)
””Q R
{
‘‘ 	
decimal
’’ 
sum
’’ 
=
’’ 
$num
’’ 
;
’’ 
for
◊◊ 
(
◊◊ 
int
◊◊ 
i
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
i
◊◊ 
<
◊◊ 

listLevel3
◊◊  *
.
◊◊* +
Count
◊◊+ 0
;
◊◊0 1
i
◊◊2 3
++
◊◊3 5
)
◊◊5 6
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
ResultLevel2Id
ŸŸ "
==
ŸŸ# %

listLevel3
ŸŸ& 0
[
ŸŸ0 1
i
ŸŸ1 2
]
ŸŸ2 3
.
ŸŸ3 4
ResultLevel2Id
ŸŸ4 B
)
ŸŸB C
{
⁄⁄ 
sum
€€ 
+=
€€ 

listLevel3
€€ %
[
€€% &
i
€€& '
]
€€' (
.
€€( )
WeiEvaluation
€€) 6
;
€€6 7
}
‹‹ 
}
›› 
return
ﬂﬂ 
sum
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
private
ÓÓ 
decimal
ÓÓ 
CT1Def2
ÓÓ 
(
ÓÓ  
int
ÓÓ  #
ResultLevel2Id
ÓÓ$ 2
,
ÓÓ2 3
decimal
ÓÓ4 ;
CT1Eva2
ÓÓ< C
,
ÓÓC D
List
ÓÓE I
<
ÓÓI J
ResultLevel3
ÓÓJ V
>
ÓÓV W

listLevel3
ÓÓX b
)
ÓÓb c
{
ÔÔ 	
decimal
 
sum
 
=
 
$num
 
;
 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
i
ÚÚ 
<
ÚÚ 

listLevel3
ÚÚ  *
.
ÚÚ* +
Count
ÚÚ+ 0
;
ÚÚ0 1
i
ÚÚ2 3
++
ÚÚ3 5
)
ÚÚ5 6
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
ResultLevel2Id
ÙÙ "
==
ÙÙ# %

listLevel3
ÙÙ& 0
[
ÙÙ0 1
i
ÙÙ1 2
]
ÙÙ2 3
.
ÙÙ3 4
ResultLevel2Id
ÙÙ4 B
)
ÙÙB C
{
ıı 
sum
ˆˆ 
+=
ˆˆ 

listLevel3
ˆˆ %
[
ˆˆ% &
i
ˆˆ& '
]
ˆˆ' (
.
ˆˆ( )

WeiDefects
ˆˆ) 3
;
ˆˆ3 4
}
˜˜ 
}
¯¯ 
if
˙˙ 
(
˙˙ 
sum
˙˙ 
>
˙˙ 
CT1Eva2
˙˙ 
)
˙˙ 
{
˚˚ 
return
¸¸ 
CT1Eva2
¸¸ 
;
¸¸ 
}
˝˝ 
else
˛˛ 
{
ˇˇ 
return
ÄÄ 
sum
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÉÉ 	
private
êê 
int
êê 
CT2Eva2
êê 
(
êê 
int
êê 
ResultLevel2Id
êê  .
,
êê. /
List
êê0 4
<
êê4 5
ResultLevel3
êê5 A
>
êêA B

listLevel3
êêC M
)
êêM N
{
ëë 	
decimal
íí 
sum
íí 
=
íí 
$num
íí 
;
íí 
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
$num
îî 
;
îî 
i
îî 
<
îî 

listLevel3
îî  *
.
îî* +
Count
îî+ 0
;
îî0 1
i
îî2 3
++
îî3 5
)
îî5 6
{
ïï 
if
ññ 
(
ññ 
ResultLevel2Id
ññ "
==
ññ# %

listLevel3
ññ& 0
[
ññ0 1
i
ññ1 2
]
ññ2 3
.
ññ3 4
ResultLevel2Id
ññ4 B
)
ññB C
{
óó 
sum
òò 
+=
òò 

listLevel3
òò %
[
òò% &
i
òò& '
]
òò' (
.
òò( )
WeiEvaluation
òò) 6
;
òò6 7
}
ôô 
}
öö 
if
úú 
(
úú 
sum
úú 
>
úú 
$num
úú 
)
úú 
{
ùù 
return
ûû 
$num
ûû 
;
ûû 
}
üü 
else
†† 
{
°° 
return
¢¢ 
$num
¢¢ 
;
¢¢ 
}
££ 
}
§§ 	
private
±± 
int
±± 
CT2Def2
±± 
(
±± 
int
±± 
ResultLevel2Id
±±  .
,
±±. /
List
±±0 4
<
±±4 5
ResultLevel3
±±5 A
>
±±A B

listLevel3
±±C M
)
±±M N
{
≤≤ 	
decimal
≥≥ 
sum
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
for
µµ 
(
µµ 
int
µµ 
i
µµ 
=
µµ 
$num
µµ 
;
µµ 
i
µµ 
<
µµ 

listLevel3
µµ  *
.
µµ* +
Count
µµ+ 0
;
µµ0 1
i
µµ2 3
++
µµ3 5
)
µµ5 6
{
∂∂ 
if
∑∑ 
(
∑∑ 
ResultLevel2Id
∑∑ "
==
∑∑# %

listLevel3
∑∑& 0
[
∑∑0 1
i
∑∑1 2
]
∑∑2 3
.
∑∑3 4
ResultLevel2Id
∑∑4 B
)
∑∑B C
{
∏∏ 
sum
ππ 
+=
ππ 

listLevel3
ππ %
[
ππ% &
i
ππ& '
]
ππ' (
.
ππ( )

WeiDefects
ππ) 3
;
ππ3 4
}
∫∫ 
}
ªª 
if
ΩΩ 
(
ΩΩ 
sum
ΩΩ 
>
ΩΩ 
$num
ΩΩ 
)
ΩΩ 
{
ææ 
return
øø 
$num
øø 
;
øø 
}
¿¿ 
else
¡¡ 
{
¬¬ 
return
√√ 
$num
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 	
private
““ 
int
““ 
CT3Eva2
““ 
(
““ 
int
““ 
ResultLevel2Id
““  .
,
““. /
List
““0 4
<
““4 5
ResultLevel3
““5 A
>
““A B

listLevel3
““C M
)
““M N
{
”” 	
decimal
‘‘ 
sum
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
for
÷÷ 
(
÷÷ 
int
÷÷ 
i
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
i
÷÷ 
<
÷÷ 

listLevel3
÷÷  *
.
÷÷* +
Count
÷÷+ 0
;
÷÷0 1
i
÷÷2 3
++
÷÷3 5
)
÷÷5 6
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
ResultLevel2Id
ÿÿ "
==
ÿÿ# %

listLevel3
ÿÿ& 0
[
ÿÿ0 1
i
ÿÿ1 2
]
ÿÿ2 3
.
ÿÿ3 4
ResultLevel2Id
ÿÿ4 B
)
ÿÿB C
{
ŸŸ 
sum
⁄⁄ 
+=
⁄⁄ 

listLevel3
⁄⁄ %
[
⁄⁄% &
i
⁄⁄& '
]
⁄⁄' (
.
⁄⁄( )
WeiEvaluation
⁄⁄) 6
;
⁄⁄6 7
}
€€ 
}
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
sum
ﬁﬁ 
>
ﬁﬁ 
$num
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 
return
‡‡ 
$num
‡‡ 
;
‡‡ 
}
·· 
else
‚‚ 
{
„„ 
return
‰‰ 
$num
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 	
private
ÔÔ 
decimal
ÔÔ 
CT3Def2
ÔÔ 
(
ÔÔ  
int
ÔÔ  #
ResultLevel2Id
ÔÔ$ 2
,
ÔÔ2 3
List
ÔÔ4 8
<
ÔÔ8 9
ResultLevel3
ÔÔ9 E
>
ÔÔE F

listLevel3
ÔÔG Q
)
ÔÔQ R
{
 	
decimal
ÒÒ 
sum
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
for
ÛÛ 
(
ÛÛ 
int
ÛÛ 
i
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
i
ÛÛ 
<
ÛÛ 

listLevel3
ÛÛ  *
.
ÛÛ* +
Count
ÛÛ+ 0
;
ÛÛ0 1
i
ÛÛ2 3
++
ÛÛ3 5
)
ÛÛ5 6
{
ÙÙ 
if
ıı 
(
ıı 
ResultLevel2Id
ıı "
==
ıı# %

listLevel3
ıı& 0
[
ıı0 1
i
ıı1 2
]
ıı2 3
.
ıı3 4
ResultLevel2Id
ıı4 B
)
ııB C
{
ˆˆ 
sum
˜˜ 
+=
˜˜ 

listLevel3
˜˜ %
[
˜˜% &
i
˜˜& '
]
˜˜' (
.
˜˜( )

WeiDefects
˜˜) 3
;
˜˜3 4
}
¯¯ 
}
˘˘ 
return
˚˚ 
sum
˚˚ 
;
˚˚ 
}
¸¸ 	
private
ÖÖ 
decimal
ÖÖ 
CT4Eva2
ÖÖ 
(
ÖÖ  
int
ÖÖ  #
ResultLevel2Id
ÖÖ$ 2
,
ÖÖ2 3
List
ÖÖ4 8
<
ÖÖ8 9
ResultLevel3
ÖÖ9 E
>
ÖÖE F

listLevel3
ÖÖG Q
)
ÖÖQ R
{
ÜÜ 	
decimal
áá 
sum
áá 
=
áá 
$num
áá 
;
áá 
for
ââ 
(
ââ 
int
ââ 
i
ââ 
=
ââ 
$num
ââ 
;
ââ 
i
ââ 
<
ââ 

listLevel3
ââ  *
.
ââ* +
Count
ââ+ 0
;
ââ0 1
i
ââ2 3
++
ââ3 5
)
ââ5 6
{
ää 
if
ãã 
(
ãã 
ResultLevel2Id
ãã "
==
ãã# %

listLevel3
ãã& 0
[
ãã0 1
i
ãã1 2
]
ãã2 3
.
ãã3 4
ResultLevel2Id
ãã4 B
)
ããB C
{
åå 
sum
çç 
+=
çç 

listLevel3
çç %
[
çç% &
i
çç& '
]
çç' (
.
çç( )
CT4Eva3
çç) 0
;
çç0 1
}
éé 
}
èè 
return
ëë 
sum
ëë 
;
ëë 
}
íí 	
private
õõ 
decimal
õõ 
CT4Def2
õõ 
(
õõ  
int
õõ  #
ResultLevel2Id
õõ$ 2
,
õõ2 3
List
õõ4 8
<
õõ8 9
ResultLevel3
õõ9 E
>
õõE F

listLevel3
õõG Q
)
õõQ R
{
úú 	
decimal
ùù 
sum
ùù 
=
ùù 
$num
ùù 
;
ùù 
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
;
üü 
i
üü 
<
üü 

listLevel3
üü  *
.
üü* +
Count
üü+ 0
;
üü0 1
i
üü2 3
++
üü3 5
)
üü5 6
{
†† 
if
°° 
(
°° 
ResultLevel2Id
°° "
==
°°# %

listLevel3
°°& 0
[
°°0 1
i
°°1 2
]
°°2 3
.
°°3 4
ResultLevel2Id
°°4 B
)
°°B C
{
¢¢ 
sum
££ 
+=
££ 

listLevel3
££ %
[
££% &
i
££& '
]
££' (
.
££( )
CT4Def3
££) 0
;
££0 1
}
§§ 
}
•• 
return
ßß 
sum
ßß 
;
ßß 
}
®® 	
private
±± 
decimal
±± 
CT5Eva2
±± 
(
±±  
int
±±  #
ResultLevel2Id
±±$ 2
,
±±2 3
List
±±4 8
<
±±8 9
ResultLevel3
±±9 E
>
±±E F

listLevel3
±±G Q
)
±±Q R
{
≤≤ 	
decimal
≥≥ 
sum
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
for
µµ 
(
µµ 
int
µµ 
i
µµ 
=
µµ 
$num
µµ 
;
µµ 
i
µµ 
<
µµ 

listLevel3
µµ  *
.
µµ* +
Count
µµ+ 0
;
µµ0 1
i
µµ2 3
++
µµ3 5
)
µµ5 6
{
∂∂ 
if
∑∑ 
(
∑∑ 
ResultLevel2Id
∑∑ "
==
∑∑# %

listLevel3
∑∑& 0
[
∑∑0 1
i
∑∑1 2
]
∑∑2 3
.
∑∑3 4
ResultLevel2Id
∑∑4 B
)
∑∑B C
{
∏∏ 
sum
ππ 
+=
ππ 

listLevel3
ππ %
[
ππ% &
i
ππ& '
]
ππ' (
.
ππ( )
WeiEvaluation
ππ) 6
;
ππ6 7
}
∫∫ 
}
ªª 
return
ΩΩ 
sum
ΩΩ 
;
ΩΩ 
}
ææ 	
private
«« 
decimal
«« 
CT5Def2
«« 
(
««  
int
««  #
ResultLevel2Id
««$ 2
,
««2 3
List
««4 8
<
««8 9
ResultLevel3
««9 E
>
««E F

listLevel3
««G Q
)
««Q R
{
»» 	
decimal
…… 
sum
…… 
=
…… 
$num
…… 
;
…… 
for
ÀÀ 
(
ÀÀ 
int
ÀÀ 
i
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
i
ÀÀ 
<
ÀÀ 

listLevel3
ÀÀ  *
.
ÀÀ* +
Count
ÀÀ+ 0
;
ÀÀ0 1
i
ÀÀ2 3
++
ÀÀ3 5
)
ÀÀ5 6
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
ResultLevel2Id
ÕÕ "
==
ÕÕ# %

listLevel3
ÕÕ& 0
[
ÕÕ0 1
i
ÕÕ1 2
]
ÕÕ2 3
.
ÕÕ3 4
ResultLevel2Id
ÕÕ4 B
)
ÕÕB C
{
ŒŒ 
sum
œœ 
+=
œœ 

listLevel3
œœ %
[
œœ% &
i
œœ& '
]
œœ' (
.
œœ( )

WeiDefects
œœ) 3
;
œœ3 4
}
–– 
}
—— 
return
”” 
sum
”” 
;
”” 
}
‘‘ 	
private
·· 
int
·· 
CT4Eva3
·· 
(
·· 
decimal
·· #
weightEvaluation
··$ 4
)
··4 5
{
‚‚ 	
if
„„ 
(
„„ 
weightEvaluation
„„  
>
„„! "
$num
„„# $
)
„„$ %
{
‰‰ 
return
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
}
ÊÊ 
else
ÁÁ 
{
ËË 
return
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
private
ÙÙ 
int
ÙÙ 
CT4Def3
ÙÙ 
(
ÙÙ 
decimal
ÙÙ #
weightDefects
ÙÙ$ 1
)
ÙÙ1 2
{
ıı 	
if
ˆˆ 
(
ˆˆ 
weightDefects
ˆˆ 
>
ˆˆ 
$num
ˆˆ  !
)
ˆˆ! "
{
˜˜ 
return
¯¯ 
$num
¯¯ 
;
¯¯ 
}
˘˘ 
else
˙˙ 
{
˚˚ 
return
¸¸ 
$num
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 	
private
ää 
decimal
ää 
calcWeightDefects
ää )
(
ää) *
decimal
ää* 1
weight
ää2 8
,
ää8 9
decimal
ää: A

evaluation
ääB L
,
ääL M
decimal
ääN U

punishment
ääV `
)
ää` a
{
ãã 	
return
åå 
weight
åå 
*
åå 
(
åå 

evaluation
åå '
+
åå' (

punishment
åå( 2
)
åå2 3
;
åå3 4
}
çç 	
private
óó 
decimal
óó "
calcWeightEvaluation
óó ,
(
óó, -
decimal
óó- 4
weight
óó5 ;
,
óó; <
decimal
óó= D

evaluation
óóE O
)
óóO P
{
òò 	
return
ôô 
weight
ôô 
*
ôô 

evaluation
ôô &
;
ôô& '
}
öö 	
}
üü 
}°° ±
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Error\ErrorController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Error  %
{ 
public 

class 
ErrorController  
:! "
BaseController# 1
{ 
public		 
ActionResult		 
Index		 !
(		! "
)		" #
{

 	
ViewBag 
. 
Title 
= 
$str $
;$ %
return 
View 
( 
) 
; 
} 	
} 
} î
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Exemplo\HtmlTesteController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Exemplo  '
{ 
public		 

class		 
HtmlTesteController		 $
:		% &
BaseController		' 5
{

 
private 
IParamsDomain 
_paramDomain *
;* +
private 
ParamsViewModel 
	ViewModel  )
;) *
public 
HtmlTesteController "
(" #
IParamsDomain# 0
paramDomain1 <
)< =
{ 	
Thread 
. 
CurrentThread  
.  !
CurrentCulture! /
=0 1
new2 5
CultureInfo6 A
(A B
$strB I
)I J
;J K
Thread 
. 
CurrentThread  
.  !
CurrentUICulture! 1
=2 3
new4 7
CultureInfo8 C
(C D
$strD K
)K L
;L M
_paramDomain 
= 
paramDomain &
;& '
	ViewModel 
= 
new 
ParamsViewModel +
(+ ,
_paramDomain, 8
.8 9"
CarregaDropDownsParams9 O
(O P
)P Q
)Q R
;R S
} 	
[ 	
HttpPost	 
] 
public 
ActionResult 
GetParLevel1ById ,
(, -
)- .
{ 	
	ViewModel   
.   
	paramsDto   
.    
collectionObject    0
=  1 2
_paramDomain  3 ?
.  ? @
GetAllLevel1  @ L
(  L M
)  M N
;  N O
return## 
PartialView## 
(## 
$str## ,
,##, -
	ViewModel##. 7
)##7 8
;##8 9
}$$ 	
}-- 
}.. ª
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\UserAndRoles\AccesDeniedController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
public 

class !
AccesDeniedController &
:' (
BaseController) 7
{ 
public 
ActionResult 
Index !
(! "
)" #
{		 	
return

 
View

 
(

 
)

 
;

 
} 	
} 
} ”#
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\File\FileController.cs
	namespace		 	
	SgqSystem		
 
.		 
Controllers		 
.		  
Api		  #
{

 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
public 

class 
FileController 
:  !

Controller" ,
{ 
private 
string 
ServerVirtualPath (
{) *
get+ .
{/ 0
return1 7
Server8 >
.> ?
MapPath? F
(F G
$strG S
)S T
;T U
}V W
}X Y
public 
ActionResult 
GetFiles $
($ %
)% &
{ 	
string 
[ 
] 
dirs 
= 
	Directory %
.% &
GetFiles& .
(. /
ServerVirtualPath/ @
,@ A
$strB G
)G H
;H I
var 
retorno 
= 
new 
files #
(# $
)$ %
{& '

filesInDir( 2
=3 4
new5 8
List9 =
<= >
string> D
>D E
(E F
)F G
}H I
;I J
foreach 
( 
var 
i 
in 
dirs "
)" #
retorno 
. 

filesInDir "
." #
Add# &
(& '
i' (
)( )
;) *
return 
Json 
( 
retorno 
)  
;  !
} 	
public 
System 
. 
Web 
. 
Mvc 
. 

FileResult (
Download) 1
(1 2
string2 8
fileName9 A
)A B
{ 	
var 
path 
= 
Path 
. 
Combine #
(# $
ServerVirtualPath$ 5
,5 6
fileName7 ?
)? @
;@ A
byte 
[ 
] 
	fileBytes 
= 
System %
.% &
IO& (
.( )
File) -
.- .
ReadAllBytes. :
(: ;
path; ?
)? @
;@ A
return 
File 
( 
	fileBytes !
,! "
System# )
.) *
Net* -
.- .
Mime. 2
.2 3
MediaTypeNames3 A
.A B
ApplicationB M
.M N
OctetN S
,S T
fileNameU ]
)] ^
;^ _
}   	
["" 	
HttpPost""	 
]"" 
public## 
string## 
Upload## 
(## 
HttpPostedFileBase## /
file##0 4
)##4 5
{$$ 	
if%% 
(%% 
file%% 
!=%% 
null%% 
&&%% 
file%%  $
.%%$ %
ContentLength%%% 2
>%%3 4
$num%%5 6
)%%6 7
{&& 
var(( 
fileName(( 
=(( 
Path(( #
.((# $
GetFileName(($ /
(((/ 0
file((0 4
.((4 5
FileName((5 =
)((= >
;((> ?
var** 
path** 
=** 
Path** 
.**  
Combine**  '
(**' (
ServerVirtualPath**( 9
,**9 :
fileName**; C
)**C D
;**D E
file++ 
.++ 
SaveAs++ 
(++ 
path++  
)++  !
;++! "
return,, 
$str,, (
+,,) *
path,,+ /
;,,/ 0
}-- 
return.. 
$str.. '
;..' (
}// 	
}11 
public33 

class33 
files33 
{44 
public55 
List55 
<55 
string55 
>55 

filesInDir55 &
{55' (
get55) ,
;55, -
set55. 1
;551 2
}553 4
}66 
}77 ⁄X
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Example\ExampleApiController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
.# $
Example$ +
{ 
[ 
	HandleApi 
( 
) 
] 
[ 
RoutePrefix 
( 
$str 
) 
]  
public 

class  
ExampleApiController %
:& '
BaseApiController( 9
{ 
private 
IExampleDomain 
_exampleDomain -
;- .
public  
ExampleApiController #
(# $
IExampleDomain$ 2
exampleDomain3 @
)@ A
{ 	
_exampleDomain 
= 
exampleDomain *
;* +
} 	
[$$ 	
HttpPost$$	 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
ContextExampleDTO&&  

AddExample&&! +
(&&+ ,
[&&, -
FromBody&&- 5
]&&5 6#
ContextExampleViewModel&&7 N
paramsViewModel&&O ^
)&&^ _
{'' 	
return(( 
_exampleDomain(( !
.((! "
AddUpdateExample((" 2
(((2 3
paramsViewModel((3 B
)((B C
;((C D
})) 	
[-- 	
HttpPost--	 
]-- 
[.. 	
	HandleApi..	 
(.. 
).. 
].. 
[// 	
Route//	 
(// 
$str// .
)//. /
]/// 0
public00 
string00 
ExemploPost00 !
(00! "
string00" (
param100) /
,00/ 0
string001 7
param2008 >
)00> ?
{11 	
return22 
param122 
+22 
$str22 
+22  !
param222" (
;22( )
}33 	
[55 	
HttpGet55	 
]55 
[66 	
Route66	 
(66 
$str66 -
)66- .
]66. /
public77 
string77 

ExemploGet77  
(77  !
string77! '
param177( .
,77. /
string770 6
param2777 =
)77= >
{88 	
return99 
param199 
+99 
$str99 
+99  !
param299" (
;99( )
}:: 	
[<< 	
HttpGet<<	 
]<< 
[== 	
Route==	 
(== 
$str== =
)=== >
]==> ?
public>> 
string>> 
ExemploGet2>> !
(>>! "
int>>" %
idLevel1>>& .
,>>. /
int>>0 3
idLevel2>>4 <
,>>< =
int>>> A
idLevel3>>B J
)>>J K
{?? 	
return@@ 
$str@@ 
;@@ 
}BB 	
[DD 	
HttpGetDD	 
]DD 
[EE 	
RouteEE	 
(EE 
$strEE =
)EE= >
]EE> ?
publicFF 
stringFF 
ExemploGet3FF !
(FF! "
stringFF" (
idLevel1FF) 1
,FF1 2
stringFF3 9
idLevel2FF: B
,FFB C
stringFFD J
idLevel3FFK S
)FFS T
{GG 	
returnHH 
$strHH 
;HH 
}JJ 	
[LL 	
HttpGetLL	 
]LL 
[MM 	
RouteMM	 
(MM 
$strMM 5
)MM5 6
]MM6 7
publicNN 
IEnumerableNN 
<NN 
DictionaryEntryNN *
>NN* +
ChangeCultureTableNN, >
(NN> ?
stringNN? E
cultureDesejadaNNF U
)NNU V
{OO 	
ifPP 
(PP 
cultureDesejadaPP 
!=PP  "
nullPP# '
)PP' (
ifQQ 
(QQ 
cultureDesejadaQQ #
.QQ# $
EqualsQQ$ *
(QQ* +
$strQQ+ /
)QQ/ 0
)QQ0 1
{RR 
ThreadSS 
.SS 
CurrentThreadSS (
.SS( )
CurrentCultureSS) 7
=SS8 9
newSS: =
CultureInfoSS> I
(SSI J
$strSSJ L
)SSL M
;SSM N
ThreadTT 
.TT 
CurrentThreadTT (
.TT( )
CurrentUICultureTT) 9
=TT: ;
newTT< ?
CultureInfoTT@ K
(TTK L
$strTTL N
)TTN O
;TTO P
}UU 
elseVV 
{WW 
ThreadXX 
.XX 
CurrentThreadXX (
.XX( )
CurrentCultureXX) 7
=XX8 9
newXX: =
CultureInfoXX> I
(XXI J
cultureDesejadaXXJ Y
)XXY Z
;XXZ [
ThreadYY 
.YY 
CurrentThreadYY (
.YY( )
CurrentUICultureYY) 9
=YY: ;
newYY< ?
CultureInfoYY@ K
(YYK L
cultureDesejadaYYL [
)YY[ \
;YY\ ]
}ZZ 
System\\ 
.\\ 
	Resources\\ 
.\\ 
ResourceManager\\ ,
resourceManager\\- <
=\\= >
	Resources\\? H
.\\H I
Resource\\I Q
.\\Q R
ResourceManager\\R a
;\\a b
var^^ 
resourceSet^^ 
=^^ 
	Resources^^ '
.^^' (
Resource^^( 0
.^^0 1
ResourceManager^^1 @
.^^@ A
GetResourceSet^^A O
(^^O P
Thread^^P V
.^^V W
CurrentThread^^W d
.^^d e
CurrentUICulture^^e u
,^^u v
true^^w {
,^^{ |
false	^^} Ç
)
^^Ç É
;
^^É Ñ
return`` 
resourceSet`` 
.`` 
Cast`` #
<``# $
DictionaryEntry``$ 3
>``3 4
(``4 5
)``5 6
;``6 7
}aa 	
[cc 	
HttpPostcc	 
]cc 
[dd 	
Routedd	 
(dd 
$strdd 
)dd 
]dd 
publicee 
stringee 
	PostAlbumee 
(ee  
JObjectee  '
jsonDataee( 0
)ee0 1
{ff 	
dynamicgg 
jsongg 
=gg 
jsonDatagg #
;gg# $
JObjecthh 
jalbumhh 
=hh 
jsonhh !
.hh! "
Albumhh" '
;hh' (
JObjectii 
juserii 
=ii 
jsonii  
.ii  !
Userii! %
;ii% &
stringjj 
tokenjj 
=jj 
jsonjj 
.jj  
	UserTokenjj  )
;jj) *
returnll 
stringll 
.ll 
Emptyll 
;ll  
}mm 	
[oo 	
HttpPostoo	 
]oo 
[pp 	
Routepp	 
(pp 
$strpp !
)pp! "
]pp" #
publicqq 
JObjectqq 
PostAlbumJObjectqq '
(qq' (
JObjectqq( /
jAlbumqq0 6
)qq6 7
{rr 	
dynamictt 
albumtt 
=tt 
jAlbumtt "
;tt" #
dynamicww 
newAlbumww 
=ww 
newww "
JObjectww# *
(ww* +
)ww+ ,
;ww, -
newAlbum{{ 
.{{ 
	AlbumName{{ 
={{  
$str{{! '
;{{' (
newAlbum|| 
.|| 
NewProperty||  
=||! "
$str||# 2
;||2 3
newAlbum}} 
.}} 
Songs}} 
=}} 
new}}  
JArray}}! '
(}}' (
)}}( )
;}}) *
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{
ÄÄ 
dynamic
ÅÅ 
teste
ÅÅ 
=
ÅÅ 
new
ÅÅ  #
JObject
ÅÅ$ +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
teste
ÇÇ 
=
ÇÇ 
db
ÇÇ 
.
ÇÇ 
Database
ÇÇ #
.
ÇÇ# $
SqlQuery
ÇÇ$ ,
<
ÇÇ, -
JObject
ÇÇ- 4
>
ÇÇ4 5
(
ÇÇ5 6
$str
ÇÇ6 O
)
ÇÇO P
.
ÇÇP Q
FirstOrDefault
ÇÇQ _
(
ÇÇ_ `
)
ÇÇ` a
;
ÇÇa b
}
ÉÉ 
return
ää 
newAlbum
ää 
;
ää 
}
ãã 	
[
çç 	
HttpPost
çç	 
]
çç 
[
éé 	
Route
éé	 
(
éé 
$str
éé 
)
éé 
]
éé 
public
èè 
List
èè 
<
èè 
ParLevel1DTO
èè  
>
èè  !
	GetParams
èè" +
(
èè+ ,
JObject
èè, 3

paramiters
èè4 >
)
èè> ?
{
êê 	
using
ëë 
(
ëë 
var
ëë 
db
ëë 
=
ëë 
new
ëë 
SgqDbDevEntities
ëë  0
(
ëë0 1
)
ëë1 2
)
ëë2 3
{
íí 
db
ìì 
.
ìì 
Configuration
ìì  
.
ìì  ! 
LazyLoadingEnabled
ìì! 3
=
ìì4 5
false
ìì6 ;
;
ìì; <
db
îî 
.
îî 
Configuration
îî  
.
îî  !"
ProxyCreationEnabled
îî! 5
=
îî6 7
false
îî8 =
;
îî= >
var
ïï 
retorno
ïï 
=
ïï 
db
ïï  
.
ïï  !
	ParLevel1
ïï! *
.
ññ 
Include
ññ 
(
ññ 
$str
ññ 4
)
ññ4 5
.
óó 
Include
óó 
(
óó 
$str
óó D
)
óóD E
.
òò 
Include
òò 
(
òò 
$str
òò N
)
òòN O
.
ôô 
Include
ôô 
(
ôô 
$str
ôô N
)
ôôN O
.
öö 
ToList
öö 
(
öö 
)
öö 
;
öö 
var
úú 
level1
úú 
=
úú 
Mapper
úú #
.
úú# $
Map
úú$ '
<
úú' (
List
úú( ,
<
úú, -
ParLevel1DTO
úú- 9
>
úú9 :
>
úú: ;
(
úú; <
retorno
úú< C
)
úúC D
;
úúD E
level1
ùù 
.
ùù 
ForEach
ùù 
(
ùù 
r
ùù  
=>
ùù! #
r
ùù$ %
.
ùù% &*
listParLevel3Level2Level1Dto
ùù& B
=
ùùC D
Mapper
ùùE K
.
ùùK L
Map
ùùL O
<
ùùO P
List
ùùP T
<
ùùT U&
ParLevel3Level2Level1DTO
ùùU m
>
ùùm n
>
ùùn o
(
ùùo p
retorno
ùùp w
.
ùùw x
Select
ùùx ~
(
ùù~ 
cùù Ä
=>ùùÅ É
cùùÑ Ö
.ùùÖ Ü%
ParLevel3Level2Level1ùùÜ õ
)ùùõ ú
.ùùú ù
ToListùùù £
(ùù£ §
)ùù§ •
)ùù• ¶
)ùù¶ ß
;ùùß ®
return
üü 
level1
üü 
;
üü 
}
†† 
}
°° 	
}
££ 	
}§§ Œ"
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\Reports\RelatorioColetaController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
.

  
Api

  #
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str &
)& '
]' (
public 

class %
RelatorioColetaController *
:+ ,
ApiController- :
{ 
private 
readonly "
IRelatorioColetaDomain /
_relColetaDomain0 @
;@ A
public %
RelatorioColetaController (
(( )"
IRelatorioColetaDomain) ?
relColetaDomain@ O
)O P
{ 	
_relColetaDomain 
= 
relColetaDomain .
;. /
} 	
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str (
)( )
]) *
public 
GenericReturn 
< $
ResultSetRelatorioColeta 5
>5 6#
GetConsolidationLevel017 N
(N O
[O P
FromBodyP X
]X Y,
 FormularioParaRelatorioViewModelZ z
form{ 
)	 Ä
{ 	
return 
_relColetaDomain #
.# $#
GetConsolidationLevel01$ ;
(; <
form< @
)@ A
;A B
} 	
[ 	
HttpPost	 
] 
[   	
Route  	 
(   
$str   (
)  ( )
]  ) *
public!! 
GenericReturn!! 
<!! $
ResultSetRelatorioColeta!! 5
>!!5 6#
GetConsolidationLevel02!!7 N
(!!N O
[!!O P
FromBody!!P X
]!!X Y,
 FormularioParaRelatorioViewModel!!Z z
form!!{ 
)	!! Ä
{"" 	
return## 
_relColetaDomain## #
.### $#
GetConsolidationLevel02##$ ;
(##; <
form##< @
)##@ A
;##A B
}$$ 	
[&& 	
HttpPost&&	 
]&& 
['' 	
Route''	 
('' 
$str'' %
)''% &
]''& '
public(( 
GenericReturn(( 
<(( $
ResultSetRelatorioColeta(( 5
>((5 6 
GetCollectionLevel02((7 K
(((K L
[((L M
FromBody((M U
]((U V,
 FormularioParaRelatorioViewModel((W w
form((x |
)((| }
{)) 	
return** 
_relColetaDomain** #
.**# $ 
GetCollectionLevel02**$ 8
(**8 9
form**9 =
)**= >
;**> ?
}++ 	
[-- 	
HttpPost--	 
]-- 
[.. 	
Route..	 
(.. 
$str.. %
)..% &
]..& '
public// 
GenericReturn// 
<// $
ResultSetRelatorioColeta// 5
>//5 6 
GetCollectionLevel03//7 K
(//K L
[//L M
FromBody//M U
]//U V,
 FormularioParaRelatorioViewModel//W w
form//x |
)//| }
{00 	
return11 
_relColetaDomain11 #
.11# $ 
GetCollectionLevel0311$ 8
(118 9
form119 =
)11= >
;11> ?
}22 	
[44 	
HttpPost44	 
]44 
[55 	
Route55	 
(55 
$str55 
)55  
]55  !
public66 
GenericReturn66 
<66 

GetSyncDTO66 '
>66' (
GetEntryByDate66) 7
(667 8
[668 9
FromBody669 A
]66A B,
 FormularioParaRelatorioViewModel66C c
form66d h
)66h i
{77 	
var88 
teste88 
=88 
_relColetaDomain88 (
.88( )
GetEntryByDate88) 7
(887 8
form888 <
)88< =
;88= >
return99 
teste99 
;99 
}:: 	
}<< 
}== ≥
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\File\FileControlController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
public 

class !
FileControlController &
:' (
BaseController) 7
{ 
public 
ActionResult 
Index !
(! "
)" #
{		 	
return

 
View

 
(

 
)

 
;

 
} 	
} 
} «B
_C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Example\ExampleController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
{ 
public 

class 
ExampleController "
:# $
BaseController% 3
{ 
public 
void 
Desfaz 
( 
) 
{ 	
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
using 
( 
var 
ts 
= 
db  "
." #
Database# +
.+ ,
BeginTransaction, <
(< =
IsolationLevel= K
.K L
ReadCommittedL Y
)Y Z
)Z [
{ 
db 
. 
Configuration $
.$ %$
AutoDetectChangesEnabled% =
=> ?
false@ E
;E F
db 
. 
Configuration $
.$ %
LazyLoadingEnabled% 7
=8 9
false: ?
;? @
var 
users 
= 
db  "
." #
UserSgq# *
.* +
ToList+ 1
(1 2
)2 3
;3 4
foreach 
( 
var  
i! "
in# %
users& +
)+ ,
{ 
var!! 
old!! 
=!!  !
i!!" #
.!!# $
Password!!$ ,
;!!, -
var"" 
nova""  
=""! "
Guard""# (
.""( )
DecryptStringAES"") 9
(""9 :
old"": =
)""= >
;""> ?
var## 
salvar## "
=### $
nova##% )
;##) *
i$$ 
.$$ 
Password$$ "
=$$# $
salvar$$% +
;$$+ ,
db&& 
.&& 
UserSgq&& "
.&&" #
Attach&&# )
(&&) *
i&&* +
)&&+ ,
;&&, -
var'' 
entry'' !
=''" #
db''$ &
.''& '
Entry''' ,
('', -
i''- .
)''. /
;''/ 0
entry(( 
.(( 
State(( #
=(($ %
System((& ,
.((, -
Data((- 1
.((1 2
Entity((2 8
.((8 9
EntityState((9 D
.((D E
Modified((E M
;((M N
entry)) 
.)) 
Property)) &
())& '
e))' (
=>))) +
e)), -
.))- .
Password)). 6
)))6 7
.))7 8

IsModified))8 B
=))C D
true))E I
;))I J
}** 
db,, 
.,, 
SaveChanges,, "
(,," #
),,# $
;,,$ %
ts-- 
.-- 
Commit-- 
(-- 
)-- 
;--  
}// 
}00 
}11 	
public33 
void33 
UpdatePassAES33 !
(33! "
)33" #
{44 	
using55 
(55 
var55 
db55 
=55 
new55 
SgqDbDevEntities55  0
(550 1
)551 2
)552 3
{66 
using77 
(77 
var77 
ts77 
=77 
db77  "
.77" #
Database77# +
.77+ ,
BeginTransaction77, <
(77< =
IsolationLevel77= K
.77K L
ReadCommitted77L Y
)77Y Z
)77Z [
{88 
db:: 
.:: 
Configuration:: $
.::$ %$
AutoDetectChangesEnabled::% =
=::> ?
false::@ E
;::E F
db;; 
.;; 
Configuration;; $
.;;$ %
LazyLoadingEnabled;;% 7
=;;8 9
false;;: ?
;;;? @
var== 
users== 
=== 
db==  "
.==" #
UserSgq==# *
.==* +
ToList==+ 1
(==1 2
)==2 3
;==3 4
foreach?? 
(?? 
var??  
i??! "
in??# %
users??& +
)??+ ,
{@@ 
varBB 
oldBB 
=BB  !
iBB" #
.BB# $
PasswordBB$ ,
;BB, -
varCC 
novaCC  
=CC! "
GuardCC# (
.CC( )
Descriptografar3DESCC) <
(CC< =
oldCC= @
)CC@ A
;CCA B
varDD 
salvarDD "
=DD# $
GuardDD% *
.DD* +
EncryptStringAESDD+ ;
(DD; <
novaDD< @
)DD@ A
;DDA B
iEE 
.EE 
PasswordEE "
=EE# $
salvarEE% +
;EE+ ,
dbGG 
.GG 
UserSgqGG "
.GG" #
AttachGG# )
(GG) *
iGG* +
)GG+ ,
;GG, -
varHH 
entryHH !
=HH" #
dbHH$ &
.HH& '
EntryHH' ,
(HH, -
iHH- .
)HH. /
;HH/ 0
entryII 
.II 
StateII #
=II$ %
SystemII& ,
.II, -
DataII- 1
.II1 2
EntityII2 8
.II8 9
EntityStateII9 D
.IID E
ModifiedIIE M
;IIM N
entryJJ 
.JJ 
PropertyJJ &
(JJ& '
eJJ' (
=>JJ) +
eJJ, -
.JJ- .
PasswordJJ. 6
)JJ6 7
.JJ7 8

IsModifiedJJ8 B
=JJC D
trueJJE I
;JJI J
}KK 
dbMM 
.MM 
SaveChangesMM "
(MM" #
)MM# $
;MM$ %
tsNN 
.NN 
CommitNN 
(NN 
)NN 
;NN  
}PP 
}QQ 
}RR 	
publicTT 
ActionResultTT 
IndexTT !
(TT! "
)TT" #
{UU 	
throwVV 
newVV 
SystemVV 
.VV 
	ExceptionVV &
(VV& '
$strVV' .
)VV. /
;VV/ 0
usingWW 
(WW 
varWW 
dbWW 
=WW 
newWW 
FactoryWW  '
(WW' (
$strWW( D
,WWD E
$strWWF P
,WWP Q
$strWWR \
,WW\ ]
$strWW^ b
)WWb c
)WWc d
{XX 
varYY 
resultsYY 
=YY 
dbYY 
.YY  
SearchQueryYY  +
<YY+ ,
UserSgqYY, 3
>YY3 4
(YY4 5
$strYY5 L
)YYL M
;YYM N
}ZZ #
ContextExampleViewModel\\ #
pvm\\$ '
=\\( )
new\\* -#
ContextExampleViewModel\\. E
(\\E F
)\\F G
;\\G H
return]] 
View]] 
(]] 
pvm]] 
)]] 
;]] 
}^^ 	
public`` 
ActionResult`` 
TesteSelect2`` (
(``( )
)``) *
{aa 	
returngg 
Viewgg 
(gg 
)gg 
;gg 
}hh 	
[jj 	
HttpGetjj	 
]jj 
publickk 
ActionResultkk 
TiposDeInputSgqkk +
(kk+ ,
)kk, -
{ll 	
returnmm 
Viewmm 
(mm 
newmm #
ContextExampleViewModelmm 3
(mm3 4
)mm4 5
{mm6 7
IntegerPropmm8 C
=mmD E
$nummmF G
,mmG H
DecimalPropmmI T
=mmU V
$nummmW ]
}mm^ _
)mm_ `
;mm` a
}nn 	
[pp 	
HttpPostpp	 
]pp 
publicqq 
ActionResultqq 
TiposDeInputSgqqq +
(qq+ ,#
ContextExampleViewModelqq, C
modelqqD I
)qqI J
{rr 	
returnss 
Viewss 
(ss 
modelss 
)ss 
;ss 
}tt 	
[vv 	
HttpPostvv	 
]vv 
publicww 
ActionResultww 
ResoursesTesteww *
(ww* +#
ContextExampleViewModelww+ B
modelwwC H
)wwH I
{xx 	
returnyy 
Viewyy 
(yy 
modelyy 
)yy 
;yy 
}zz 	
}}} 
}ÅÅ ˚H
oC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\UserAndRoles\UserAuthenticationController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
public 

class (
UserAuthenticationController -
:. /
BaseController0 >
{ 
private 
readonly 
IUserDomain $
_userDomain% 0
;0 1
private 
readonly 
IBaseDomain $
<$ %
UserSgq% ,
,, -
UserDTO. 5
>5 6
_userBaseDomain7 F
;F G
private 
IBaseDomain 
< 
UserSgq #
,# $

UserSgqDTO% /
>/ 0
_userSgqDomain1 ?
;? @
private 
IBaseDomain 
< 
EmailContent (
,( )
EmailContentDTO* 9
>9 :
_emailContent; H
;H I
public (
UserAuthenticationController +
(+ ,
IUserDomain, 7

userDomain8 B
,B C
IBaseDomainD O
<O P
UserSgqP W
,W X
UserDTOY `
>` a
userBaseDomainb p
,p q
IBaseDomainr }
<} ~
UserSgq	~ Ö
,
Ö Ü

UserSgqDTO
á ë
>
ë í
userSgqDomain
ì †
)H I
{ 	
_userBaseDomain 
= 
userBaseDomain ,
;, -
_userDomain 
= 

userDomain $
;$ %
_userSgqDomain 
= 
userSgqDomain *
;* +
} 	
[ 	
HttpGet	 
] 
[ 	
AllowAnonymous	 
] 
public   
ActionResult   
LogIn   !
(  ! "
)  " #
{!! 	

HttpCookie"" 
currentUserCookie"" (
="") *
Request""+ 2
.""2 3
Cookies""3 :
["": ;
$str""; M
]""M N
;""N O
if## 
(## 
currentUserCookie## !
!=##" $
null##% )
)##) *
return$$ 
RedirectToAction$$ '
($$' (
$str$$( /
,$$/ 0
$str$$1 7
)$$7 8
;$$8 9
ExpireCookie&& 
(&& 
)&& 
;&& 
return'' 
View'' 
('' 
new'' 
UserViewModel'' )
('') *
)''* +
{'', -
IsWeb''. 3
=''4 5
true''6 :
}'': ;
)''; <
;''< =
}(( 	
[** 	
HttpPost**	 
]** 
[++ 	
CustomAuthorize++	 
(++ 
isLogin++  
:++  !
true++" &
)++& '
]++' (
public,, 
ActionResult,, 
LogIn,, !
(,,! "
UserViewModel,," /
user,,0 4
),,4 5
{-- 	
var// 
isAuthorized// 
=// 
_userDomain// *
.//* +
AuthenticationLogin//+ >
(//> ?
user//? C
)//C D
;//D E
if11 
(11 
isAuthorized11 
.11 
Retorno11 $
.11$ %
	IsNotNull11% .
(11. /
)11/ 0
)110 1
{22 
CreateCookie33 
(33 
isAuthorized33 )
)33) *
;33* +
return44 
RedirectToAction44 '
(44' (
$str44( /
,44/ 0
$str441 7
)447 8
;448 9
}55 
else66 
{77 

ModelState88 
.88 
AddModelError88 (
(88( )
$str88) +
,88+ ,
$str88- /
)88H I
;88I J
user99 
.99 
	ErrorList99 
=99  
isAuthorized99! -
.99- .
MensagemExcecao99. =
+99> ?
isAuthorized99@ L
.99L M

StackTrace99M W
;99W X
}:: 
return<< 
View<< 
(<< 
user<< 
)<< 
;<< 
}== 	
private?? 
void?? 
CreateCookie?? !
(??! "
GenericReturn??" /
<??/ 0
DTO??0 3
.??3 4
DTO??4 7
.??7 8
UserDTO??8 ?
>??? @
isAuthorized??A M
)??M N
{@@ 	#
CreateCookieFromUserDTOAA #
(AA# $
isAuthorizedAA$ 0
.AA0 1
RetornoAA1 8
)AA8 9
;AA9 :
}BB 	
publicDD 
ActionResultDD 
LogOutDD "
(DD" #
UserViewModelDD# 0
userDD1 5
)DD5 6
{EE 	
ExpireCookieGG 
(GG 
)GG 
;GG 
returnHH 
RedirectToActionHH #
(HH# $
$strHH$ +
,HH+ ,
$strHH- A
)HHA B
;HHB C
}II 	
[KK 	
HttpPostKK	 
]KK 
publicLL 
voidLL 
LogOutCookieLL  
(LL  !
)LL! "
{MM 	
ExpireCookieOO 
(OO 
)OO 
;OO 
}PP 	
[TT 	
HttpGetTT	 
]TT 
publicUU 
ActionResultUU 
	KeepAliveUU %
(UU% &
intUU& )
idUU* ,
)UU, -
{VV 	
varWW 
isAuthorizedWW 
=WW 
_userBaseDomainWW .
.WW. /
GetByIdNoLazyLoadWW/ @
(WW@ A
idWWA C
)WWC D
;WWD E#
CreateCookieFromUserDTOXX #
(XX# $
isAuthorizedXX$ 0
)XX0 1
;XX1 2
returnYY 
JsonYY 
(YY 
$strYY 
,YY 
JsonRequestBehaviorYY 1
.YY1 2
AllowGetYY2 :
)YY: ;
;YY; <
}ZZ 	
public\\ 
ActionResult\\ 
PasswordRecovery\\ ,
(\\, -
)\\- .
{]] 	
return^^ 
View^^ 
(^^ 
$str^^ *
)^^* +
;^^+ ,
}__ 	
[aa 	
HttpGetaa	 
]aa 
publicbb 

JsonResultbb 

BuscaEmailbb $
(bb$ %
stringbb% +
nomebb, 0
)bb0 1
{cc 	
vardd 
dadodd 
=dd 
_userDomaindd "
.dd" #

GetByName2dd# -
(dd- .
nomedd. 2
)dd2 3
.dd3 4
Retornodd4 ;
;dd; <
returnff 
Jsonff 
(ff 
dadoff 
,ff 
JsonRequestBehaviorff 1
.ff1 2
AllowGetff2 :
)ff: ;
;ff; <
}gg 	
[ii 	
HttpPostii	 
]ii 
publicjj 
booljj 

enviaEmailjj 
(jj 
intjj "
idUserjj# )
)jj) *
{kk 	

UserSgqDTOll 
userll 
=ll 
_userSgqDomainll ,
.ll, -
GetByIdll- 4
(ll4 5
idUserll5 ;
)ll; <
;ll< =
stringmm 
hashmm 
=mm 
Guardmm 
.mm  
DecryptStringAESmm  0
(mm0 1
usermm1 5
.mm5 6
Passwordmm6 >
)mm> ?
;mm? @
EmailContentnn 
emailnn 
=nn  
newnn! $
EmailContentnn% 1
(nn1 2
)nn2 3
;nn3 4
emailoo 
.oo 
Tooo 
=oo 
useroo 
.oo 
Emailoo !
;oo! "
emailpp 
.pp 
Subjectpp 
=pp 
$strpp 6
;pp6 7
emailqq 
.qq 
Bodyqq 
=qq 
$strqq (
+qq) *
userqq+ /
.qq/ 0
Nameqq0 4
+qq5 6
$strqq7 <
+qq= >
$strqq? L
+qqM N
hashqqO S
;qqS T
emailrr 
.rr 
AddDaterr 
=rr 
DateTimerr $
.rr$ %
Nowrr% (
;rr( )
emailss 
.ss 
Projectss 
=ss 
$strss $
;ss$ %
emailtt 
.tt 

IsBodyHtmltt 
=tt 
falsett $
;tt$ %
usinguu 
(uu 
varuu 
dbuu 
=uu 
newuu 
SgqDbDevEntitiesuu  0
(uu0 1
)uu1 2
)uu2 3
{vv 
dbww 
.ww 
EmailContentww 
.ww  
Addww  #
(ww# $
emailww$ )
)ww) *
;ww* +
varxx 
retxx 
=xx 
dbxx 
.xx 
SaveChangesxx (
(xx( )
)xx) *
;xx* +
ifyy 
(yy 
retyy 
>yy 
$numyy 
)yy 
returnzz 
truezz 
;zz  
else{{ 
return|| 
false||  
;||  !
}}} 
}~~ 	
} 
}ÄÄ ∏
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Api\UserAndRoles\UserController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Api  #
{ 
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
RoutePrefix 
( 
$str 
) 
] 
public 

class 
UserController 
:  !
BaseApiController" 3
{ 
private 
readonly 
IUserDomain $
_userDomain% 0
;0 1
public 
UserController 
( 
IUserDomain )

userDomain* 4
)4 5
{ 	
_userDomain 
= 

userDomain $
;$ %
} 	
public 
GenericReturn 
< 
UserDTO $
>$ %
Post& *
(* +
[+ ,
FromBody, 4
]4 5
UserViewModel6 C
userVmD J
)J K
{ 	
return   
_userDomain   
.   
AuthenticationLogin   2
(  2 3
userVm  3 9
)  9 :
;  : ;
}!! 	
[## 	
HttpPost##	 
]## 
[$$ 	
	HandleApi$$	 
($$ 
)$$ 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% $
)%%$ %
]%%% &
public&& 
GenericReturn&& 
<&& 
UserDTO&& $
>&&$ %
AuthenticationLogin&&& 9
(&&9 :
[&&: ;
FromBody&&; C
]&&C D
UserViewModel&&E R
userVm&&S Y
)&&Y Z
{'' 	
return(( 
_userDomain(( 
.(( 
AuthenticationLogin(( 2
(((2 3
userVm((3 9
)((9 :
;((: ;
})) 	
[++ 	
HttpPost++	 
]++ 
[,, 	
Route,,	 
(,, 
$str,, '
),,' (
],,( )
public-- 
GenericReturn-- 
<-- 
List-- !
<--! "
UserDTO--" )
>--) *
>--* +"
GetAllUserValidationAd--, B
(--B C
UserViewModel--C P
user--Q U
)--U V
{.. 	
return// 
_userDomain// 
.// "
GetAllUserValidationAd// 5
(//5 6
user//6 :
)//: ;
;//; <
}00 	
[22 	
HttpPost22	 
]22 
[33 	
Route33	 
(33 
$str33 -
)33- .
]33. /
public44 
List44 
<44 
UserDTO44 
>44 
GetAllUserByUnit44 -
(44- .
int44. 1
	unidadeId442 ;
)44; <
{55 	
return66 
_userDomain66 
.66 
GetAllUserByUnit66 /
(66/ 0
	unidadeId660 9
)669 :
;66: ;
}77 	
[99 	
HttpPost99	 
]99 
[:: 	
Route::	 
(:: 
$str:: 0
)::0 1
]::1 2
public;; 
bool;; +
VerifyPassiveSiginInLoginScreen;; 3
(;;3 4
);;4 5
{<< 	
if== 
(== 
!== 
(== 
string== 
.== 
IsNullOrEmpty== &
(==& '
SessionPersister==' 7
.==7 8
Username==8 @
)==@ A
)==A B
)==B C
{>> 
return?? 
true?? 
;?? 
}@@ 
returnAA 
falseAA 
;AA 
}BB 	
}CC 
}EE í
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Home\HomeController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[		 
CustomAuthorize		 
]		 
public

 

class

 
HomeController

 
:

  !
BaseController

" 0
{ 
public 
ActionResult 
Index !
(! "
)" #
{ 	
System 
. 

Reflection 
. 
Assembly &
assembly' /
=0 1
System2 8
.8 9

Reflection9 C
.C D
AssemblyD L
.L M 
GetExecutingAssemblyM a
(a b
)b c
;c d
FileVersionInfo 
fvi 
=  !
FileVersionInfo" 1
.1 2
GetVersionInfo2 @
(@ A
assemblyA I
.I J
LocationJ R
)R S
;S T
string 
version 
= 
fvi  
.  !
FileVersion! ,
;, -
ViewBag 
. 
Asembly 
= 
version %
;% &
ViewBag 
. 
Title 
= 
$str (
;( )
return 
View 
( 
) 
; 
} 	
public 
void 
ChangeCulture !
(! "
string" (
language) 1
=2 3
$str4 ;
); <
{ 	
Response 
. 
Cookies 
. 
Remove #
(# $
$str$ .
). /
;/ 0

HttpCookie 
languageCookie %
=& '
System( .
.. /
Web/ 2
.2 3
HttpContext3 >
.> ?
Current? F
.F G
RequestG N
.N O
CookiesO V
[V W
$strW a
]a b
;b c
if 
( 
languageCookie 
== !
null" &
)& '
languageCookie( 6
=7 8
new9 <

HttpCookie= G
(G H
$strH R
)R S
;S T
languageCookie 
. 
Value  
=! "
language# +
;+ ,
languageCookie!! 
.!! 
Expires!! "
=!!# $
DateTime!!% -
.!!- .
Now!!. 1
.!!1 2
AddDays!!2 9
(!!9 :
$num!!: <
)!!< =
;!!= >
Response## 
.## 
	SetCookie## 
(## 
languageCookie## -
)##- .
;##. /
Response%% 
.%% 
Redirect%% 
(%% 
Request%% %
.%%% &
UrlReferrer%%& 1
.%%1 2
ToString%%2 :
(%%: ;
)%%; <
)%%< =
;%%= >
}'' 	
public** 
ActionResult** 
	Keepalive** %
(**% &
)**& '
{++ 	
return,, 
Json,, 
(,, 
$str,, 
,,, 
JsonRequestBehavior,, 1
.,,1 2
AllowGet,,2 :
),,: ;
;,,; <
}-- 	
}// 
}00 ¬	
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Charts\ChartsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
public 

class 
ChartsController !
:" #
BaseController$ 2
{ 
private

 
readonly

 "
IRelatorioColetaDomain

 /"
_relatorioColetaDomain

0 F
;

F G
private 
readonly 
IUserDomain $
_userDomain% 0
;0 1
public 
ChartsController 
(  "
IRelatorioColetaDomain  6!
relatorioColetaDomain7 L
,L M
IUserDomainN Y

userDomainZ d
)d e
{ 	
_userDomain 
= 

userDomain $
;$ %"
_relatorioColetaDomain "
=# $!
relatorioColetaDomain% :
;: ;
} 	
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
} 
} ùr
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParamsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
.  
Params  &
{ 
[ 
CustomAuthorize 
] 
public 

class 
ParamsController !
:" #
BaseController$ 2
{ 
private 
IParamsDomain 
_paramDomain *
;* +
private 
ParamsViewModel 
	ViewModel  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
private 
IBaseDomain 
< 
ParHeaderField *
,+ ,
ParHeaderFieldDTO- >
>> ?
_parHeaderField@ O
;O P
private 
IBaseDomain 
< 
ParMultipleValues -
,- . 
ParMultipleValuesDTO/ C
>C D
_parMultipleValuesE W
;W X
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ParamsController 
(  
IParamsDomain  -
paramDomain. 9
,9 :
IBaseDomain; F
<F G
ParHeaderFieldG U
,U V
ParHeaderFieldDTOW h
>h i
parHeaderFieldj x
,x y
IBaseDomain	z Ö
<
Ö Ü
ParMultipleValues
Ü ó
,
ó ò"
ParMultipleValuesDTO
ô ≠
>
≠ Æ
parmultiplevalues
Ø ¿
)
¿ ¡
{ 	
_paramDomain 
= 
paramDomain &
;& '
_parHeaderField   
=   
parHeaderField   ,
;  , -
_parMultipleValues!! 
=!!  
parmultiplevalues!!! 2
;!!2 3
if"" 
("" 
	ViewModel"" 
=="" 
null"" !
)""! "
	ViewModel## 
=## 
new## 
ParamsViewModel##  /
(##/ 0
_paramDomain##0 <
.##< ="
CarregaDropDownsParams##= S
(##S T
)##T U
)##U V
;##V W
}$$ 	
public(( 
ActionResult(( 
Index(( !
(((! "
)((" #
{)) 	
ViewBag** 
.** 
Role** 
=** 
VerificarRole** (
(**( )
)**) *
;*** +
return++ 
View++ 
(++ 
	ViewModel++ !
)++! "
;++" #
},, 	
private.. 
string.. 
VerificarRole.. $
(..$ %
)..% &
{// 	

HttpCookie00 
cookie00 
=00 
HttpContext00  +
.00+ ,
Request00, 3
.003 4
Cookies004 ;
.00; <
Get00< ?
(00? @
$str00@ R
)00R S
;00S T
string22 
_userSgqRoles22  
=22! "
$str22# %
;22% &
if44 
(44 
!44 
string44 
.44 
IsNullOrEmpty44 %
(44% &
cookie44& ,
.44, -
Values44- 3
[443 4
$str444 ;
]44; <
)44< =
)44= >
{55 
_userSgqRoles66 
=66 
cookie66  &
.66& '
Values66' -
[66- .
$str66. 5
]665 6
.666 7
ToString667 ?
(66? @
)66@ A
;66A B
}77 
return99 
_userSgqRoles99  
;99  !
}:: 	
public>> 
ActionResult>> 
GetParLevel1ById>> ,
(>>, -
int>>- 0
id>>1 3
)>>3 4
{?? 	
ViewBagAA 
.AA 
RoleAA 
=AA 
VerificarRoleAA (
(AA( )
)AA) *
;AA* +
	ViewModelCC 
.CC 
levelControlCC "
=CC# $
$numCC% &
;CC& '
ifDD 
(DD 
idDD 
==DD 
-DD 
$numDD 
)DD 
returnEE 
PartialViewEE "
(EE" #
$strEE# /
,EE/ 0
	ViewModelEE1 :
)EE: ;
;EE; <
	ViewModelLL 
.LL 
	paramsDtoLL 
.LL  
parLevel1DtoLL  ,
=LL- .
_paramDomainLL/ ;
.LL; <
	GetLevel1LL< E
(LLE F
idLLF H
)LLH I
;LLI J
	ViewModelMM 
.MM 
	paramsDtoMM 
.MM  
parLevel1DtoMM  ,
.MM, -(
listParLevel3Level2Level1DtoMM- I
=MMJ K
nullMML P
;MMP Q
ifOO 
(OO 
	ViewModelOO 
.OO 
	paramsDtoOO #
.OO# $
parLevel1DtoOO$ 0
.OO0 1 
listParCounterXLocalOO1 E
!=OOF H
nullOOI M
)OOM N
forPP 
(PP 
intPP 
iPP 
=PP 
$numPP 
;PP 
iPP  !
<PP" #
	ViewModelPP$ -
.PP- .
	paramsDtoPP. 7
.PP7 8
parLevel1DtoPP8 D
.PPD E 
listParCounterXLocalPPE Y
.PPY Z
CountPPZ _
;PP_ `
iPPa b
++PPb d
)PPd e
{QQ 
	ViewModelSS 
.SS 
	paramsDtoSS '
.SS' (
parLevel1DtoSS( 4
.SS4 5 
listParCounterXLocalSS5 I
[SSI J
iSSJ K
]SSK L
.SSL M

ParCounterSSM W
.SSW X
NameSSX \
=SS] ^
	ViewModelSS_ h
.SSh i
	paramsDtoSSi r
.SSr s
parLevel1DtoSSs 
.	SS Ä"
listParCounterXLocal
SSÄ î
[
SSî ï
i
SSï ñ
]
SSñ ó
.
SSó ò

ParCounter
SSò ¢
.
SS¢ £
Name
SS£ ß
;
SSß ®
	ViewModelUU 
.UU 
	paramsDtoUU '
.UU' (
parLevel1DtoUU( 4
.UU4 5 
listParCounterXLocalUU5 I
[UUI J
iUUJ K
]UUK L
.UUL M
ParLocalUUM U
.UUU V
NameUUV Z
=UU[ \

CommonDataUU] g
.UUg h
getResourceUUh s
(UUs t
	ViewModelUUt }
.UU} ~
	paramsDto	UU~ á
.
UUá à
parLevel1Dto
UUà î
.
UUî ï"
listParCounterXLocal
UUï ©
[
UU© ™
i
UU™ ´
]
UU´ ¨
.
UU¨ ≠
ParLocal
UU≠ µ
.
UUµ ∂
Name
UU∂ ∫
)
UU∫ ª
.
UUª º
Value
UUº ¡
.
UU¡ ¬
ToString
UU¬  
(
UU  À
)
UUÀ Ã
;
UUÃ Õ
}XX 
returnZZ 
PartialViewZZ 
(ZZ 
$strZZ +
,ZZ+ ,
	ViewModelZZ- 6
)ZZ6 7
;ZZ7 8
}[[ 	
public]] 
ActionResult]] 
GetParLevel2ById]] ,
(]], -
int]]- 0
level2Id]]1 9
,]]9 :
int]]; >
level3Id]]? G
=]]H I
$num]]J K
,]]K L
int]]M P
level1Id]]Q Y
=]]Z [
$num]]\ ]
)]]] ^
{^^ 	
ViewBag__ 
.__ 
Role__ 
=__ 
VerificarRole__ (
(__( )
)__) *
;__* +
ifaa 
(aa 
level2Idaa 
<=aa 
$numaa 
)aa 
returnbb 
PartialViewbb "
(bb" #
$strbb# /
,bb/ 0
	ViewModelbb1 :
)bb: ;
;bb; <
	ViewModeldd 
.dd 
levelControldd "
=dd# $
$numdd% &
;dd& '
	ViewModelee 
.ee 
	paramsDtoee 
=ee  !
_paramDomainee" .
.ee. /
	GetLevel2ee/ 8
(ee8 9
level2Idee9 A
,eeA B
level3IdeeC K
,eeK L
level1IdeeM U
)eeU V
;eeV W
ifii 
(ii 
	ViewModelii 
.ii 
	paramsDtoii #
.ii# $
parLevel2Dtoii$ 0
.ii0 1 
listParCounterXLocalii1 E
!=iiF H
nulliiI M
)iiM N
forjj 
(jj 
intjj 
ijj 
=jj 
$numjj 
;jj 
ijj  !
<jj" #
	ViewModeljj$ -
.jj- .
	paramsDtojj. 7
.jj7 8
parLevel2Dtojj8 D
.jjD E 
listParCounterXLocaljjE Y
.jjY Z
CountjjZ _
;jj_ `
ijja b
++jjb d
)jjd e
{kk 
}qq 
returnvv 
PartialViewvv 
(vv 
$strvv +
,vv+ ,
	ViewModelvv- 6
)vv6 7
;vv7 8
}ww 	
publicyy 
ActionResultyy 
GetParLevel3ByIdyy ,
(yy, -
intyy- 0
idyy1 3
,yy3 4
intyy5 8
?yy8 9
idParLevel2yy: E
=yyF G
$numyyH I
)yyI J
{zz 	
ViewBag{{ 
.{{ 
Role{{ 
={{ 
VerificarRole{{ (
({{( )
){{) *
;{{* +
	ViewModel}} 
.}} 
levelControl}} "
=}}# $
$num}}% &
;}}& '
if~~ 
(~~ 
id~~ 
<=~~ 
$num~~ 
)~~ 
return 
PartialView "
(" #
$str# /
,/ 0
	ViewModel1 :
): ;
;; <
var
ÅÅ !
viewModelPreenchido
ÅÅ #
=
ÅÅ$ %
	ViewModel
ÅÅ& /
;
ÅÅ/ 0!
viewModelPreenchido
ÇÇ 
.
ÇÇ  
	paramsDto
ÇÇ  )
=
ÇÇ* +
_paramDomain
ÇÇ, 8
.
ÇÇ8 9
	GetLevel3
ÇÇ9 B
(
ÇÇB C
id
ÇÇC E
,
ÇÇE F
idParLevel2
ÇÇG R
)
ÇÇR S
;
ÇÇS T
return
ÉÉ 
PartialView
ÉÉ 
(
ÉÉ 
$str
ÉÉ +
,
ÉÉ+ ,!
viewModelPreenchido
ÉÉ- @
)
ÉÉ@ A
;
ÉÉA B
}
ÑÑ 	
[
ää 	
HttpGet
ää	 
]
ää 
public
ãã 
ActionResult
ãã  
UpdateSelectLevel2
ãã .
(
ãã. /
int
ãã/ 2
id
ãã3 5
)
ãã5 6
{
åå 	
if
çç 
(
çç 
id
çç 
==
çç 
-
çç 
$num
çç 
)
çç 
return
éé 
PartialView
éé "
(
éé" #
$str
éé# 5
,
éé5 6
	ViewModel
éé7 @
)
éé@ A
;
ééA B
	ViewModel
êê 
.
êê 
	paramsDto
êê 
.
êê  
parLevel1Dto
êê  ,
=
êê- .
_paramDomain
êê/ ;
.
êê; <
	GetLevel1
êê< E
(
êêE F
id
êêF H
)
êêH I
;
êêI J
return
ëë 
PartialView
ëë 
(
ëë 
$str
ëë 1
,
ëë1 2
	ViewModel
ëë3 <
)
ëë< =
;
ëë= >
}
íí 	
[
îî 	
HttpGet
îî	 
]
îî 
public
ïï 
ActionResult
ïï  
UpdateSelectLevel3
ïï .
(
ïï. /
int
ïï/ 2
id
ïï3 5
,
ïï5 6
int
ïï7 :
level1Id
ïï; C
=
ïïD E
$num
ïïF G
)
ïïG H
{
ññ 	
if
óó 
(
óó 
id
óó 
==
óó 
-
óó 
$num
óó 
)
óó 
return
òò 
PartialView
òò "
(
òò" #
$str
òò# 5
,
òò5 6
	ViewModel
òò7 @
)
òò@ A
;
òòA B
	ViewModel
öö 
.
öö 
	paramsDto
öö 
=
öö  !
_paramDomain
öö" .
.
öö. /
	GetLevel2
öö/ 8
(
öö8 9
id
öö9 ;
,
öö; <
$num
öö= >
,
öö> ?
level1Id
öö@ H
)
ööH I
;
ööI J
return
õõ 
PartialView
õõ 
(
õõ 
$str
õõ 1
,
õõ1 2
	ViewModel
õõ3 <
)
õõ< =
;
õõ= >
}
úú 	
public
¢¢ 
ActionResult
¢¢ 
Index2
¢¢ "
(
¢¢" #
)
¢¢# $
{
££ 	
return
§§ 
View
§§ 
(
§§ 
	ViewModel
§§ !
)
§§! "
;
§§" #
}
•• 	
public
ßß 
ActionResult
ßß 
Index3
ßß "
(
ßß" #
)
ßß# $
{
®® 	
return
©© 
View
©© 
(
©© 
	ViewModel
©© !
)
©©! "
;
©©" #
}
™™ 	
public
∞∞ 
ActionResult
∞∞ !
GetCollectionLevel1
∞∞ /
(
∞∞/ 0
)
∞∞0 1
{
±± 	
	ViewModel
≤≤ 
.
≤≤ 
	paramsDto
≤≤ 
.
≤≤  
collectionObject
≤≤  0
=
≤≤1 2
_paramDomain
≤≤3 ?
.
≤≤? @
GetAllLevel1
≤≤@ L
(
≤≤L M
)
≤≤M N
;
≤≤N O
return
µµ 
View
µµ 
(
µµ 
$str
µµ %
,
µµ% &
	ViewModel
µµ' 0
)
µµ0 1
;
µµ1 2
}
∂∂ 	
public
∫∫ 
ActionResult
∫∫  
EditParHeaderField
∫∫ .
(
∫∫. /
int
∫∫/ 2
id
∫∫3 5
)
∫∫5 6
{
ªª 	
	ViewModel
ºº 
.
ºº 
	paramsDto
ºº 
.
ºº  
parHeaderFieldDto
ºº  1
=
ºº2 3
_parHeaderField
ºº4 C
.
ººC D
GetById
ººD K
(
ººK L
id
ººL N
)
ººN O
;
ººO P
return
ΩΩ 
View
ΩΩ 
(
ΩΩ 
$str
ΩΩ ,
,
ΩΩ- .
	ViewModel
ΩΩ/ 8
)
ΩΩ8 9
;
ΩΩ9 :
}
ææ 	
[
¿¿ 	
HttpPost
¿¿	 
]
¿¿ 
public
¡¡ 

JsonResult
¡¡ 
AttParHeaderField
¡¡ +
(
¡¡+ ,
ParHeaderField
¡¡, :
parHF
¡¡; @
)
¡¡@ A
{
¬¬ 	
ParHeaderField
√√ 
par
√√ 
=
√√  
parHF
√√! &
;
√√& '
return
…… 
new
…… 

JsonResult
…… !
(
……! "
)
……" #
;
……# $
}
   	
}
ÀÀ 
}ÕÕ ∑L
bC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParClustersController.cs
	namespace		 	
	SgqSystem		
 
.		 
Controllers		 
{

 
[ 
CustomAuthorize 
] 
public 

class !
ParClustersController &
:' (
BaseController) 7
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 

parCluster 
= 
db 
.  

ParCluster  *
.* +
Include+ 2
(2 3
p3 4
=>5 7
p8 9
.9 :
ParClusterGroup: I
)I J
;J K
return 
View 
( 

parCluster "
." #
ToList# )
() *
)* +
)+ ,
;, -
} 	
public 
ActionResult 
Details #
(# $
int$ '
?' (
id) +
)+ ,
{ 	
if 
( 
id 
== 
null 
) 
{ 
return 
new  
HttpStatusCodeResult /
(/ 0
HttpStatusCode0 >
.> ?

BadRequest? I
)I J
;J K
} 

ParCluster 

parCluster !
=" #
db$ &
.& '

ParCluster' 1
.1 2
Find2 6
(6 7
id7 9
)9 :
;: ;
if 
( 

parCluster 
== 
null "
)" #
{   
return!! 
HttpNotFound!! #
(!!# $
)!!$ %
;!!% &
}"" 
return## 
View## 
(## 

parCluster## "
)##" #
;### $
}$$ 	
public'' 
ActionResult'' 
Create'' "
(''" #
)''# $
{(( 	
ViewBag)) 
.)) 
ParClusterGroup_Id)) &
=))' (
new))) ,

SelectList))- 7
())7 8
db))8 :
.)): ;
ParClusterGroup)); J
,))J K
$str))L P
,))P Q
$str))R X
)))X Y
;))Y Z
return** 
View** 
(** 
)** 
;** 
}++ 	
[00 	
HttpPost00	 
]00 
[11 	$
ValidateAntiForgeryToken11	 !
]11! "
public22 
ActionResult22 
Create22 "
(22" #
[22# $
Bind22$ (
(22( )
Include22) 0
=221 2
$str	223 ä
)
22ä ã
]
22ã å

ParCluster
22ç ó

parCluster
22ò ¢
)
22¢ £
{33 	
if44 
(44 

ModelState44 
.44 
IsValid44 "
)44" #
{55 

parCluster66 
.66 
IsActive66 #
=66$ %
true66& *
;66* +
db77 
.77 

ParCluster77 
.77 
Add77 !
(77! "

parCluster77" ,
)77, -
;77- .
db88 
.88 
SaveChanges88 
(88 
)88  
;88  !
return99 
RedirectToAction99 '
(99' (
$str99( /
)99/ 0
;990 1
}:: 
ViewBag<< 
.<< 
ParClusterGroup_Id<< &
=<<' (
new<<) ,

SelectList<<- 7
(<<7 8
db<<8 :
.<<: ;
ParClusterGroup<<; J
,<<J K
$str<<L P
,<<P Q
$str<<R X
,<<X Y

parCluster<<Z d
.<<d e
ParClusterGroup_Id<<e w
)<<w x
;<<x y
return== 
View== 
(== 

parCluster== "
)==" #
;==# $
}>> 	
publicAA 
ActionResultAA 
EditAA  
(AA  !
intAA! $
?AA$ %
idAA& (
)AA( )
{BB 	
ifCC 
(CC 
idCC 
==CC 
nullCC 
)CC 
{DD 
returnEE 
newEE  
HttpStatusCodeResultEE /
(EE/ 0
HttpStatusCodeEE0 >
.EE> ?

BadRequestEE? I
)EEI J
;EEJ K
}FF 

ParClusterGG 

parClusterGG !
=GG" #
dbGG$ &
.GG& '

ParClusterGG' 1
.GG1 2
FindGG2 6
(GG6 7
idGG7 9
)GG9 :
;GG: ;
ifHH 
(HH 

parClusterHH 
==HH 
nullHH "
)HH" #
{II 
returnJJ 
HttpNotFoundJJ #
(JJ# $
)JJ$ %
;JJ% &
}KK 
ViewBagLL 
.LL 
ParClusterGroup_IdLL &
=LL' (
newLL) ,

SelectListLL- 7
(LL7 8
dbLL8 :
.LL: ;
ParClusterGroupLL; J
,LLJ K
$strLLL P
,LLP Q
$strLLR X
,LLX Y

parClusterLLZ d
.LLd e
ParClusterGroup_IdLLe w
)LLw x
;LLx y
returnMM 
ViewMM 
(MM 

parClusterMM "
)MM" #
;MM# $
}NN 	
[SS 	
HttpPostSS	 
]SS 
[TT 	$
ValidateAntiForgeryTokenTT	 !
]TT! "
publicUU 
ActionResultUU 
EditUU  
(UU  !
[UU! "
BindUU" &
(UU& '
IncludeUU' .
=UU/ 0
$str	UU1 à
)
UUà â
]
UUâ ä

ParCluster
UUã ï

parCluster
UUñ †
)
UU† °
{VV 	
ifWW 
(WW 

ModelStateWW 
.WW 
IsValidWW "
)WW" #
{XX 

parClusterYY 
.YY 
IsActiveYY #
=YY$ %
trueYY& *
;YY* +
dbZZ 
.ZZ 
EntryZZ 
(ZZ 

parClusterZZ #
)ZZ# $
.ZZ$ %
StateZZ% *
=ZZ+ ,
EntityStateZZ- 8
.ZZ8 9
ModifiedZZ9 A
;ZZA B
db[[ 
.[[ 
SaveChanges[[ 
([[ 
)[[  
;[[  !
return\\ 
RedirectToAction\\ '
(\\' (
$str\\( /
)\\/ 0
;\\0 1
}]] 
ViewBag^^ 
.^^ 
ParClusterGroup_Id^^ &
=^^' (
new^^) ,

SelectList^^- 7
(^^7 8
db^^8 :
.^^: ;
ParClusterGroup^^; J
,^^J K
$str^^L P
,^^P Q
$str^^R X
,^^X Y

parCluster^^Z d
.^^d e
ParClusterGroup_Id^^e w
)^^w x
;^^x y
return__ 
View__ 
(__ 

parCluster__ "
)__" #
;__# $
}`` 	
publiccc 
ActionResultcc 
Deletecc "
(cc" #
intcc# &
?cc& '
idcc( *
)cc* +
{dd 	
ifee 
(ee 
idee 
==ee 
nullee 
)ee 
{ff 
returngg 
newgg  
HttpStatusCodeResultgg /
(gg/ 0
HttpStatusCodegg0 >
.gg> ?

BadRequestgg? I
)ggI J
;ggJ K
}hh 

ParClusterii 

parClusterii !
=ii" #
dbii$ &
.ii& '

ParClusterii' 1
.ii1 2
Findii2 6
(ii6 7
idii7 9
)ii9 :
;ii: ;
ifjj 
(jj 

parClusterjj 
==jj 
nulljj "
)jj" #
{kk 
returnll 
HttpNotFoundll #
(ll# $
)ll$ %
;ll% &
}mm 
returnnn 
Viewnn 
(nn 

parClusternn "
)nn" #
;nn# $
}oo 	
[rr 	
HttpPostrr	 
,rr 

ActionNamerr 
(rr 
$strrr &
)rr& '
]rr' (
[ss 	$
ValidateAntiForgeryTokenss	 !
]ss! "
publictt 
ActionResulttt 
DeleteConfirmedtt +
(tt+ ,
inttt, /
idtt0 2
)tt2 3
{uu 	

ParClustervv 

parClustervv !
=vv" #
dbvv$ &
.vv& '

ParClustervv' 1
.vv1 2
Findvv2 6
(vv6 7
idvv7 9
)vv9 :
;vv: ;
dbww 
.ww 

ParClusterww 
.ww 
Removeww  
(ww  !

parClusterww! +
)ww+ ,
;ww, -
dbxx 
.xx 
SaveChangesxx 
(xx 
)xx 
;xx 
returnyy 
RedirectToActionyy #
(yy# $
$stryy$ +
)yy+ ,
;yy, -
}zz 	
	protected|| 
override|| 
void|| 
Dispose||  '
(||' (
bool||( ,
	disposing||- 6
)||6 7
{}} 	
if~~ 
(~~ 
	disposing~~ 
)~~ 
{ 
db
ÄÄ 
.
ÄÄ 
Dispose
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 
base
ÇÇ 
.
ÇÇ 
Dispose
ÇÇ 
(
ÇÇ 
	disposing
ÇÇ "
)
ÇÇ" #
;
ÇÇ# $
}
ÉÉ 	
}
ÑÑ 
}ÖÖ Ì=
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParDepartmentsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{		 
[

 
CustomAuthorize

 
]

 
public 

class $
ParDepartmentsController )
:* +
BaseController, :
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
db 
. 
ParDepartment (
.( )
ToList) /
(/ 0
)0 1
)1 2
;2 3
} 	
public 
ActionResult 
Details #
(# $
int$ '
?' (
id) +
)+ ,
{ 	
if 
( 
id 
== 
null 
) 
{ 
return 
new  
HttpStatusCodeResult /
(/ 0
HttpStatusCode0 >
.> ?

BadRequest? I
)I J
;J K
} 
ParDepartment 
parDepartment '
=( )
db* ,
., -
ParDepartment- :
.: ;
Find; ?
(? @
id@ B
)B C
;C D
if 
( 
parDepartment 
==  
null! %
)% &
{ 
return 
HttpNotFound #
(# $
)$ %
;% &
}   
return!! 
View!! 
(!! 
parDepartment!! %
)!!% &
;!!& '
}"" 	
public%% 
ActionResult%% 
Create%% "
(%%" #
)%%# $
{&& 	
return'' 
View'' 
('' 
)'' 
;'' 
}(( 	
[-- 	
HttpPost--	 
]-- 
[.. 	$
ValidateAntiForgeryToken..	 !
]..! "
public// 
ActionResult// 
Create// "
(//" #
[//# $
Bind//$ (
(//( )
Include//) 0
=//1 2
$str//3 a
)//a b
]//b c
ParDepartment//d q
parDepartment//r 
)	// Ä
{00 	
if11 
(11 

ModelState11 
.11 
IsValid11 "
)11" #
{22 
db33 
.33 
ParDepartment33  
.33  !
Add33! $
(33$ %
parDepartment33% 2
)332 3
;333 4
db44 
.44 
SaveChanges44 
(44 
)44  
;44  !
return55 
RedirectToAction55 '
(55' (
$str55( /
)55/ 0
;550 1
}66 
return88 
View88 
(88 
parDepartment88 %
)88% &
;88& '
}99 	
public<< 
ActionResult<< 
Edit<<  
(<<  !
int<<! $
?<<$ %
id<<& (
)<<( )
{== 	
if>> 
(>> 
id>> 
==>> 
null>> 
)>> 
{?? 
return@@ 
new@@  
HttpStatusCodeResult@@ /
(@@/ 0
HttpStatusCode@@0 >
.@@> ?

BadRequest@@? I
)@@I J
;@@J K
}AA 
ParDepartmentBB 
parDepartmentBB '
=BB( )
dbBB* ,
.BB, -
ParDepartmentBB- :
.BB: ;
FindBB; ?
(BB? @
idBB@ B
)BBB C
;BBC D
ifCC 
(CC 
parDepartmentCC 
==CC  
nullCC! %
)CC% &
{DD 
returnEE 
HttpNotFoundEE #
(EE# $
)EE$ %
;EE% &
}FF 
returnGG 
ViewGG 
(GG 
parDepartmentGG %
)GG% &
;GG& '
}HH 	
[MM 	
HttpPostMM	 
]MM 
[NN 	$
ValidateAntiForgeryTokenNN	 !
]NN! "
publicOO 
ActionResultOO 
EditOO  
(OO  !
[OO! "
BindOO" &
(OO& '
IncludeOO' .
=OO/ 0
$strOO1 _
)OO_ `
]OO` a
ParDepartmentOOb o
parDepartmentOOp }
)OO} ~
{PP 	
ifQQ 
(QQ 

ModelStateQQ 
.QQ 
IsValidQQ "
)QQ" #
{RR 
dbSS 
.SS 
EntrySS 
(SS 
parDepartmentSS &
)SS& '
.SS' (
StateSS( -
=SS. /
EntityStateSS0 ;
.SS; <
ModifiedSS< D
;SSD E
dbTT 
.TT 
SaveChangesTT 
(TT 
)TT  
;TT  !
returnUU 
RedirectToActionUU '
(UU' (
$strUU( /
)UU/ 0
;UU0 1
}VV 
returnWW 
ViewWW 
(WW 
parDepartmentWW %
)WW% &
;WW& '
}XX 	
public[[ 
ActionResult[[ 
Delete[[ "
([[" #
int[[# &
?[[& '
id[[( *
)[[* +
{\\ 	
if]] 
(]] 
id]] 
==]] 
null]] 
)]] 
{^^ 
return__ 
new__  
HttpStatusCodeResult__ /
(__/ 0
HttpStatusCode__0 >
.__> ?

BadRequest__? I
)__I J
;__J K
}`` 
ParDepartmentaa 
parDepartmentaa '
=aa( )
dbaa* ,
.aa, -
ParDepartmentaa- :
.aa: ;
Findaa; ?
(aa? @
idaa@ B
)aaB C
;aaC D
ifbb 
(bb 
parDepartmentbb 
==bb  
nullbb! %
)bb% &
{cc 
returndd 
HttpNotFounddd #
(dd# $
)dd$ %
;dd% &
}ee 
returnff 
Viewff 
(ff 
parDepartmentff %
)ff% &
;ff& '
}gg 	
[jj 	
HttpPostjj	 
,jj 

ActionNamejj 
(jj 
$strjj &
)jj& '
]jj' (
[kk 	$
ValidateAntiForgeryTokenkk	 !
]kk! "
publicll 
ActionResultll 
DeleteConfirmedll +
(ll+ ,
intll, /
idll0 2
)ll2 3
{mm 	
ParDepartmentnn 
parDepartmentnn '
=nn( )
dbnn* ,
.nn, -
ParDepartmentnn- :
.nn: ;
Findnn; ?
(nn? @
idnn@ B
)nnB C
;nnC D
dboo 
.oo 
ParDepartmentoo 
.oo 
Removeoo #
(oo# $
parDepartmentoo$ 1
)oo1 2
;oo2 3
dbpp 
.pp 
SaveChangespp 
(pp 
)pp 
;pp 
returnqq 
RedirectToActionqq #
(qq# $
$strqq$ +
)qq+ ,
;qq, -
}rr 	
	protectedtt 
overridett 
voidtt 
Disposett  '
(tt' (
booltt( ,
	disposingtt- 6
)tt6 7
{uu 	
ifvv 
(vv 
	disposingvv 
)vv 
{ww 
dbxx 
.xx 
Disposexx 
(xx 
)xx 
;xx 
}yy 
basezz 
.zz 
Disposezz 
(zz 
	disposingzz "
)zz" #
;zz# $
}{{ 	
}|| 
}}} í?
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Params\ParMeasurementUnitsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{		 
[

 
CustomAuthorize

 
]

 
public 

class )
ParMeasurementUnitsController .
:/ 0
BaseController1 ?
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
db 
. 
ParMeasurementUnit -
.- .
ToList. 4
(4 5
)5 6
)6 7
;7 8
} 	
public 
ActionResult 
Details #
(# $
int$ '
?' (
id) +
)+ ,
{ 	
if 
( 
id 
== 
null 
) 
{ 
return 
new  
HttpStatusCodeResult /
(/ 0
HttpStatusCode0 >
.> ?

BadRequest? I
)I J
;J K
} 
ParMeasurementUnit 
parMeasurementUnit 1
=2 3
db4 6
.6 7
ParMeasurementUnit7 I
.I J
FindJ N
(N O
idO Q
)Q R
;R S
if 
( 
parMeasurementUnit "
==# %
null& *
)* +
{ 
return 
HttpNotFound #
(# $
)$ %
;% &
}   
return!! 
View!! 
(!! 
parMeasurementUnit!! *
)!!* +
;!!+ ,
}"" 	
public%% 
ActionResult%% 
Create%% "
(%%" #
)%%# $
{&& 	
return'' 
View'' 
('' 
)'' 
;'' 
}(( 	
[-- 	
HttpPost--	 
]-- 
[.. 	$
ValidateAntiForgeryToken..	 !
]..! "
public// 
ActionResult// 
Create// "
(//" #
[//# $
Bind//$ (
(//( )
Include//) 0
=//1 2
$str//3 c
)//c d
]//d e
ParMeasurementUnit//f x
parMeasurementUnit	//y ã
)
//ã å
{00 	
if11 
(11 

ModelState11 
.11 
IsValid11 "
)11" #
{22 
db33 
.33 
ParMeasurementUnit33 %
.33% &
Add33& )
(33) *
parMeasurementUnit33* <
)33< =
;33= >
db44 
.44 
SaveChanges44 
(44 
)44  
;44  !
return55 
RedirectToAction55 '
(55' (
$str55( /
)55/ 0
;550 1
}66 
return88 
View88 
(88 
parMeasurementUnit88 *
)88* +
;88+ ,
}99 	
public<< 
ActionResult<< 
Edit<<  
(<<  !
int<<! $
?<<$ %
id<<& (
)<<( )
{== 	
if>> 
(>> 
id>> 
==>> 
null>> 
)>> 
{?? 
return@@ 
new@@  
HttpStatusCodeResult@@ /
(@@/ 0
HttpStatusCode@@0 >
.@@> ?

BadRequest@@? I
)@@I J
;@@J K
}AA 
ParMeasurementUnitBB 
parMeasurementUnitBB 1
=BB2 3
dbBB4 6
.BB6 7
ParMeasurementUnitBB7 I
.BBI J
FindBBJ N
(BBN O
idBBO Q
)BBQ R
;BBR S
ifCC 
(CC 
parMeasurementUnitCC "
==CC# %
nullCC& *
)CC* +
{DD 
returnEE 
HttpNotFoundEE #
(EE# $
)EE$ %
;EE% &
}FF 
returnGG 
ViewGG 
(GG 
parMeasurementUnitGG *
)GG* +
;GG+ ,
}HH 	
[MM 	
HttpPostMM	 
]MM 
[NN 	$
ValidateAntiForgeryTokenNN	 !
]NN! "
publicOO 
ActionResultOO 
EditOO  
(OO  !
[OO! "
BindOO" &
(OO& '
IncludeOO' .
=OO/ 0
$strOO1 a
)OOa b
]OOb c
ParMeasurementUnitOOd v
parMeasurementUnit	OOw â
)
OOâ ä
{PP 	
ifQQ 
(QQ 

ModelStateQQ 
.QQ 
IsValidQQ "
)QQ" #
{RR 
dbSS 
.SS 
EntrySS 
(SS 
parMeasurementUnitSS +
)SS+ ,
.SS, -
StateSS- 2
=SS3 4
EntityStateSS5 @
.SS@ A
ModifiedSSA I
;SSI J
dbTT 
.TT 
SaveChangesTT 
(TT 
)TT  
;TT  !
returnUU 
RedirectToActionUU '
(UU' (
$strUU( /
)UU/ 0
;UU0 1
}VV 
returnWW 
ViewWW 
(WW 
parMeasurementUnitWW *
)WW* +
;WW+ ,
}XX 	
public[[ 
ActionResult[[ 
Delete[[ "
([[" #
int[[# &
?[[& '
id[[( *
)[[* +
{\\ 	
if]] 
(]] 
id]] 
==]] 
null]] 
)]] 
{^^ 
return__ 
new__  
HttpStatusCodeResult__ /
(__/ 0
HttpStatusCode__0 >
.__> ?

BadRequest__? I
)__I J
;__J K
}`` 
ParMeasurementUnitaa 
parMeasurementUnitaa 1
=aa2 3
dbaa4 6
.aa6 7
ParMeasurementUnitaa7 I
.aaI J
FindaaJ N
(aaN O
idaaO Q
)aaQ R
;aaR S
ifbb 
(bb 
parMeasurementUnitbb "
==bb# %
nullbb& *
)bb* +
{cc 
returndd 
HttpNotFounddd #
(dd# $
)dd$ %
;dd% &
}ee 
returnff 
Viewff 
(ff 
parMeasurementUnitff *
)ff* +
;ff+ ,
}gg 	
[jj 	
HttpPostjj	 
,jj 

ActionNamejj 
(jj 
$strjj &
)jj& '
]jj' (
[kk 	$
ValidateAntiForgeryTokenkk	 !
]kk! "
publicll 
ActionResultll 
DeleteConfirmedll +
(ll+ ,
intll, /
idll0 2
)ll2 3
{mm 	
ParMeasurementUnitnn 
parMeasurementUnitnn 1
=nn2 3
dbnn4 6
.nn6 7
ParMeasurementUnitnn7 I
.nnI J
FindnnJ N
(nnN O
idnnO Q
)nnQ R
;nnR S
dboo 
.oo 
ParMeasurementUnitoo !
.oo! "
Removeoo" (
(oo( )
parMeasurementUnitoo) ;
)oo; <
;oo< =
dbpp 
.pp 
SaveChangespp 
(pp 
)pp 
;pp 
returnqq 
RedirectToActionqq #
(qq# $
$strqq$ +
)qq+ ,
;qq, -
}rr 	
	protectedtt 
overridett 
voidtt 
Disposett  '
(tt' (
booltt( ,
	disposingtt- 6
)tt6 7
{uu 	
ifvv 
(vv 
	disposingvv 
)vv 
{ww 
dbxx 
.xx 
Disposexx 
(xx 
)xx 
;xx 
}yy 
basezz 
.zz 
Disposezz 
(zz 
	disposingzz "
)zz" #
;zz# $
}{{ 	
}|| 
}}} Ï∏
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\VolumeProducao\Pcc1bController.cs
	namespace

 	
	SgqSystem


 
.

 
Controllers

 
{ 
[ 

FilterUnit 
] 
[ 
CustomAuthorize 
] 
public 

class 
Pcc1bController  
:! "
BaseController# 1
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
[ 	
FormularioPesquisa	 
( #
filtraUnidadePorUsuario 3
=4 5
true6 :
): ;
]; <
public 
ActionResult 
Index !
(! "
)" #
{ 	
var 
userId 
= 
Guard 
. 
GetUsuarioLogado_Id 2
(2 3
HttpContext3 >
)> ?
;? @
var 

userLogado 
= 
db 
.  
UserSgq  '
.' (
Where( -
(- .
r. /
=>0 2
r3 4
.4 5
Id5 7
==8 :
userId; A
)A B
;B C
var 
pcc1b 
= 
db 
. 
VolumePcc1b &
.& '
Where' ,
(, -
VCD- 0
=>1 3

userLogado4 >
.> ?
FirstOrDefault? M
(M N
)N O
.O P
ParCompanyXUserSgqP b
.b c
Anyc f
(f g
cg h
=>i k
cl m
.m n
ParCompany_Idn {
==| ~
VCD	 Ç
.
Ç É
ParCompany_id
É ê
)
ê ë
||
í î
VCD
ï ò
.
ò ô
ParCompany_id
ô ¶
==
ß ©

userLogado
™ ¥
.
¥ µ
FirstOrDefault
µ √
(
√ ƒ
)
ƒ ≈
.
≈ ∆
ParCompany_Id
∆ ”
)
” ‘
.
‘ ’
Include
’ ‹
(
‹ ›
c
› ﬁ
=>
ﬂ ·
c
‚ „
.
„ ‰

ParCompany
‰ Ó
)
Ó Ô
.
Ô 
Include
 ˜
(
˜ ¯
c
¯ ˘
=>
˙ ¸
c
˝ ˛
.
˛ ˇ
	ParLevel1
ˇ à
)
à â
;
â ä
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
Request& -
.- .
QueryString. 9
[9 :
$str: E
]E F
)F G
&&H J
!K L
stringL R
.R S
IsNullOrEmptyS `
(` a
Requesta h
.h i
QueryStringi t
[t u
$stru ~
]~ 
)	 Ä
)
Ä Å
{ 
System 
. 
DateTime 
	startDate  )
=* +
Guard, 1
.1 2
ParseDateToSqlV22 B
(B C
RequestC J
.J K
QueryStringK V
[V W
$strW b
]b c
)c d
;d e
System   
.   
DateTime   
endDate    '
=  ( )
Guard  * /
.  / 0
ParseDateToSqlV2  0 @
(  @ A
Request  A H
.  H I
QueryString  I T
[  T U
$str  U ^
]  ^ _
)  _ `
;  ` a
pcc1b"" 
="" 
pcc1b"" 
."" 
Where"" #
(""# $
VCD""$ '
=>""( *
VCD""+ .
."". /
Data""/ 3
>=""4 6
	startDate""7 @
&&""A C
VCD""D G
.""G H
Data""H L
<=""M O
endDate""P W
)""W X
;""X Y
}## 
else$$ 
{%% 
System&& 
.&& 
DateTime&& 
	startDate&&  )
=&&* +
System&&, 2
.&&2 3
DateTime&&3 ;
.&&; <
Now&&< ?
.&&? @
AddDays&&@ G
(&&G H
-&&H I
$num&&I J
)&&J K
;&&K L
System'' 
.'' 
DateTime'' 
endDate''  '
=''( )
System''* 0
.''0 1
DateTime''1 9
.''9 :
Now'': =
;''= >
pcc1b(( 
=(( 
pcc1b(( 
.(( 
Where(( #
(((# $
VCD(($ '
=>((( *
VCD((+ .
.((. /
Data((/ 3
>=((4 6
	startDate((7 @
&&((A C
VCD((D G
.((G H
Data((H L
<=((M O
endDate((P W
)((W X
;((X Y
})) 
if,, 
(,, 
!,, 
string,, 
.,, 
IsNullOrEmpty,, %
(,,% &
Request,,& -
.,,- .
QueryString,,. 9
[,,9 :
$str,,: I
],,I J
),,J K
),,K L
{-- 
int.. 
id.. 
=.. 
System.. 
...  
Convert..  '
...' (
ToInt32..( /
(../ 0
Request..0 7
...7 8
QueryString..8 C
[..C D
$str..D S
]..S T
)..T U
;..U V
pcc1b// 
=// 
pcc1b// 
.// 
Where// #
(//# $
VCD//$ '
=>//( *
VCD//+ .
.//. /
ParCompany_id/// <
==//= ?
id//@ B
)//B C
;//C D
}00 
pcc1b22 
=22 
pcc1b22 
.22 
OrderByDescending22 +
(22+ ,
c22, -
=>22. 0
c221 2
.222 3
Data223 7
)227 8
;228 9
if44 
(44 
pcc1b44 
.44 
Count44 
(44 
)44 
>44 
$num44  !
)44! "
return55 
View55 
(55 
pcc1b55 !
.55! "
ToList55" (
(55( )
)55) *
)55* +
;55+ ,
else66 
return77 
View77 
(77 
new77 
System77  &
.77& '
Collections77' 2
.772 3
Generic773 :
.77: ;
List77; ?
<77? @
VolumePcc1b77@ K
>77K L
(77L M
)77M N
)77N O
;77O P
}88 	
public;; 
ActionResult;; 
Details;; #
(;;# $
int;;$ '
?;;' (
id;;) +
);;+ ,
{<< 	
if== 
(== 
id== 
==== 
null== 
)== 
{>> 
return?? 
new??  
HttpStatusCodeResult?? /
(??/ 0
HttpStatusCode??0 >
.??> ?

BadRequest??? I
)??I J
;??J K
}@@ 
VolumePcc1bAA 
pcc1bAA 
=AA 
dbAA  "
.AA" #
VolumePcc1bAA# .
.AA. /
FindAA/ 3
(AA3 4
idAA4 6
)AA6 7
;AA7 8
ifBB 
(BB 
pcc1bBB 
==BB 
nullBB 
)BB 
{CC 
returnDD 
HttpNotFoundDD #
(DD# $
)DD$ %
;DD% &
}EE 
returnFF 
ViewFF 
(FF 
pcc1bFF 
)FF 
;FF 
}GG 	
publicJJ 
ActionResultJJ 
CreateJJ "
(JJ" #
)JJ# $
{KK 	
ViewBagLL 
.LL 
ParCompany_idLL !
=LL" #
newLL$ '

SelectListLL( 2
(LL2 3
dbLL3 5
.LL5 6

ParCompanyLL6 @
.LL@ A
OrderByLLA H
(LLH I
cLLI J
=>LLK M
cLLN O
.LLO P
NameLLP T
)LLT U
,LLU V
$strLLW [
,LL[ \
$strLL] c
)LLc d
;LLd e
ViewBagMM 
.MM 
ParLevel1_idMM  
=MM! "
newMM# &

SelectListMM' 1
(MM1 2
dbMM2 4
.MM4 5
	ParLevel1MM5 >
.MM> ?
WhereMM? D
(MMD E
cMME F
=>MMG I
cMMJ K
.MMK L
IdMML N
==MMO Q
$numMMR S
)MMS T
,MMT U
$strMMV Z
,MMZ [
$strMM\ b
)MMb c
;MMc d
returnNN 
ViewNN 
(NN 
)NN 
;NN 
}OO 	
[TT 	
HttpPostTT	 
]TT 
[UU 	$
ValidateAntiForgeryTokenUU	 !
]UU! "
publicVV 
ActionResultVV 
CreateVV "
(VV" #
[VV# $
BindVV$ (
(VV( )
IncludeVV) 0
=VV1 2
$str	VV3 ›
)
VV› ﬁ
]
VVﬁ ﬂ
VolumePcc1b
VV‡ Î
pcc1b
VVÏ Ò
)
VVÒ Ú
{WW 	
ValidaPcc1BXX 
(XX 
pcc1bXX 
)XX 
;XX 
ifZZ 
(ZZ 

ModelStateZZ 
.ZZ 
IsValidZZ "
)ZZ" #
{[[ 
if]] 
(]] 
db]] 
.]] 
VolumePcc1b]] "
.]]" #
Where]]# (
(]]( )
r]]) *
=>]]+ -
r]]. /
.]]/ 0
Data]]0 4
==]]5 7
pcc1b]]8 =
.]]= >
Data]]> B
&&]]C E
r]]F G
.]]G H
ParCompany_id]]H U
==]]V X
pcc1b]]Y ^
.]]^ _
ParCompany_id]]_ l
)]]l m
.]]m n
ToList]]n t
(]]t u
)]]u v
.]]v w
Count]]w |
(]]| }
)]]} ~
==	]] Å
$num
]]Ç É
)
]]É Ñ
{^^ 
db`` 
.`` 
VolumePcc1b`` "
.``" #
Add``# &
(``& '
pcc1b``' ,
)``, -
;``- .
dbaa 
.aa 
SaveChangesaa "
(aa" #
)aa# $
;aa$ %
returnbb 
RedirectToActionbb +
(bb+ ,
$strbb, 3
)bb3 4
;bb4 5
}cc 
elsedd 
{ee 
ReturnErrorff 
(ff  
)ff  !
;ff! "
}hh 
}ii 
ViewBagkk 
.kk 
ParCompany_idkk !
=kk" #
newkk$ '

SelectListkk( 2
(kk2 3
dbkk3 5
.kk5 6

ParCompanykk6 @
.kk@ A
OrderBykkA H
(kkH I
ckkI J
=>kkK M
ckkN O
.kkO P
NamekkP T
)kkT U
,kkU V
$strkkW [
,kk[ \
$strkk] c
,kkc d
pcc1bkke j
.kkj k
ParCompany_idkkk x
)kkx y
;kky z
ViewBagll 
.ll 
ParLevel1_idll  
=ll! "
newll# &

SelectListll' 1
(ll1 2
dbll2 4
.ll4 5
	ParLevel1ll5 >
,ll> ?
$strll@ D
,llD E
$strllF L
,llL M
pcc1bllN S
.llS T
ParLevel1_idllT `
)ll` a
;lla b
returnmm 
Viewmm 
(mm 
pcc1bmm 
)mm 
;mm 
}nn 	
publicqq 
ActionResultqq 
Editqq  
(qq  !
intqq! $
?qq$ %
idqq& (
)qq( )
{rr 	
ifss 
(ss 
idss 
==ss 
nullss 
)ss 
{tt 
returnuu 
newuu  
HttpStatusCodeResultuu /
(uu/ 0
HttpStatusCodeuu0 >
.uu> ?

BadRequestuu? I
)uuI J
;uuJ K
}vv 
VolumePcc1bww 
pcc1bww 
=ww 
dbww  "
.ww" #
VolumePcc1bww# .
.ww. /
Findww/ 3
(ww3 4
idww4 6
)ww6 7
;ww7 8
ifxx 
(xx 
pcc1bxx 
==xx 
nullxx 
)xx 
{yy 
returnzz 
HttpNotFoundzz #
(zz# $
)zz$ %
;zz% &
}{{ 
ViewBag|| 
.|| 
ParCompany_id|| !
=||" #
new||$ '

SelectList||( 2
(||2 3
db||3 5
.||5 6

ParCompany||6 @
.||@ A
OrderBy||A H
(||H I
c||I J
=>||K M
c||N O
.||O P
Name||P T
)||T U
,||U V
$str||W [
,||[ \
$str||] c
,||c d
pcc1b||e j
.||j k
ParCompany_id||k x
)||x y
;||y z
ViewBag}} 
.}} 
ParLevel1_id}}  
=}}! "
new}}# &

SelectList}}' 1
(}}1 2
db}}2 4
.}}4 5
	ParLevel1}}5 >
.}}> ?
Where}}? D
(}}D E
c}}E F
=>}}G I
c}}J K
.}}K L
Id}}L N
==}}O Q
$num}}R S
)}}S T
,}}T U
$str}}V Z
,}}Z [
$str}}\ b
,}}b c
pcc1b}}d i
.}}i j
ParLevel1_id}}j v
)}}v w
;}}w x
return~~ 
View~~ 
(~~ 
pcc1b~~ 
)~~ 
;~~ 
} 	
[
ÑÑ 	
HttpPost
ÑÑ	 
]
ÑÑ 
[
ÖÖ 	&
ValidateAntiForgeryToken
ÖÖ	 !
]
ÖÖ! "
public
ÜÜ 
ActionResult
ÜÜ 
Edit
ÜÜ  
(
ÜÜ  !
[
ÜÜ! "
Bind
ÜÜ" &
(
ÜÜ& '
Include
ÜÜ' .
=
ÜÜ/ 0
$strÜÜ1 €
)ÜÜ€ ‹
]ÜÜ‹ ›
VolumePcc1bÜÜﬁ È
pcc1bÜÜÍ Ô
)ÜÜÔ 
{
áá 	
ValidaPcc1B
àà 
(
àà 
pcc1b
àà 
)
àà 
;
àà 
if
ää 
(
ää 

ModelState
ää 
.
ää 
IsValid
ää "
)
ää" #
{
ãã 
if
åå 
(
åå 
db
åå 
.
åå 
VolumePcc1b
åå "
.
åå" #
Where
åå# (
(
åå( )
r
åå) *
=>
åå+ -
r
åå. /
.
åå/ 0
Data
åå0 4
==
åå5 7
pcc1b
åå8 =
.
åå= >
Data
åå> B
&&
ååC E
r
ååF G
.
ååG H
ParCompany_id
ååH U
==
ååV X
pcc1b
ååY ^
.
åå^ _
ParCompany_id
åå_ l
)
åål m
.
ååm n
ToList
åån t
(
ååt u
)
ååu v
.
ååv w
Count
ååw |
(
åå| }
)
åå} ~
==åå Å
$numååÇ É
)ååÉ Ñ
{
çç 
db
éé 
.
éé 
Entry
éé 
(
éé 
pcc1b
éé "
)
éé" #
.
éé# $
State
éé$ )
=
éé* +
EntityState
éé, 7
.
éé7 8
Modified
éé8 @
;
éé@ A
db
èè 
.
èè 
SaveChanges
èè "
(
èè" #
)
èè# $
;
èè$ %
return
êê 
RedirectToAction
êê +
(
êê+ ,
$str
êê, 3
)
êê3 4
;
êê4 5
}
ëë 
else
íí 
{
ìì 
if
ïï 
(
ïï 
db
ïï 
.
ïï 
VolumePcc1b
ïï &
.
ïï& '
Where
ïï' ,
(
ïï, -
r
ïï- .
=>
ïï/ 1
r
ïï2 3
.
ïï3 4
Data
ïï4 8
==
ïï9 ;
pcc1b
ïï< A
.
ïïA B
Data
ïïB F
&&
ïïG I
r
ññ7 8
.
ññ8 9
ParCompany_id
ññ9 F
==
ññG I
pcc1b
ññJ O
.
ññO P
ParCompany_id
ññP ]
&&
ññ^ `
r
óó7 8
.
óó8 9
Id
óó9 ;
==
óó< >
pcc1b
óó? D
.
óóD E
Id
óóE G
)
óóG H
.
óóH I
ToList
óóI O
(
óóO P
)
óóP Q
.
óóQ R
Count
óóR W
(
óóW X
)
óóX Y
==
óóZ \
$num
óó] ^
)
óó^ _
{
òò 
using
ôô 
(
ôô 
var
ôô "
db2
ôô# &
=
ôô' (
new
ôô) ,
SgqDbDevEntities
ôô- =
(
ôô= >
)
ôô> ?
)
ôô? @
{
öö 
db2
õõ 
.
õõ  
Entry
õõ  %
(
õõ% &
pcc1b
õõ& +
)
õõ+ ,
.
õõ, -
State
õõ- 2
=
õõ3 4
EntityState
õõ5 @
.
õõ@ A
Modified
õõA I
;
õõI J
db2
úú 
.
úú  
SaveChanges
úú  +
(
úú+ ,
)
úú, -
;
úú- .
return
ùù "
RedirectToAction
ùù# 3
(
ùù3 4
$str
ùù4 ;
)
ùù; <
;
ùù< =
}
ûû 
}
†† 
else
°° 
{
¢¢ 
ReturnError
££ #
(
££# $
)
££$ %
;
££% &
}
•• 
}
¶¶ 
}
ßß 
ViewBag
®® 
.
®® 
ParCompany_id
®® !
=
®®" #
new
®®$ '

SelectList
®®( 2
(
®®2 3
db
®®3 5
.
®®5 6

ParCompany
®®6 @
.
®®@ A
OrderBy
®®A H
(
®®H I
c
®®I J
=>
®®K M
c
®®N O
.
®®O P
Name
®®P T
)
®®T U
,
®®U V
$str
®®W [
,
®®[ \
$str
®®] c
,
®®c d
pcc1b
®®e j
.
®®j k
ParCompany_id
®®k x
)
®®x y
;
®®y z
ViewBag
©© 
.
©© 
ParLevel1_id
©©  
=
©©! "
new
©©# &

SelectList
©©' 1
(
©©1 2
db
©©2 4
.
©©4 5
	ParLevel1
©©5 >
,
©©> ?
$str
©©@ D
,
©©D E
$str
©©F L
,
©©L M
pcc1b
©©N S
.
©©S T
ParLevel1_id
©©T `
)
©©` a
;
©©a b
return
™™ 
View
™™ 
(
™™ 
pcc1b
™™ 
)
™™ 
;
™™ 
}
´´ 	
private
≠≠ 
void
≠≠ 
ValidaPcc1B
≠≠  
(
≠≠  !
VolumePcc1b
≠≠! ,
pcc1b
≠≠- 2
)
≠≠2 3
{
ÆÆ 	
if
ØØ 
(
ØØ 
pcc1b
ØØ 
.
ØØ 
Data
ØØ 
==
ØØ 
null
ØØ "
)
ØØ" #

ModelState
∞∞ 
.
∞∞ 
AddModelError
∞∞ (
(
∞∞( )
$str
∞∞) /
,
∞∞/ 0
Guard
∞∞1 6
.
∞∞6 7 
MesangemModelError
∞∞7 I
(
∞∞I J
$str
∞∞J P
,
∞∞P Q
false
∞∞R W
)
∞∞W X
)
∞∞X Y
;
∞∞Y Z
if
≤≤ 
(
≤≤ 
pcc1b
≤≤ 
.
≤≤ 
ParCompany_id
≤≤ #
==
≤≤$ &
null
≤≤' +
)
≤≤+ ,

ModelState
≥≥ 
.
≥≥ 
AddModelError
≥≥ (
(
≥≥( )
$str
≥≥) 8
,
≥≥8 9
Guard
≥≥: ?
.
≥≥? @ 
MesangemModelError
≥≥@ R
(
≥≥R S
$str
≥≥S \
,
≥≥\ ]
false
≥≥^ c
)
≥≥c d
)
≥≥d e
;
≥≥e f
if
µµ 
(
µµ 
pcc1b
µµ 
.
µµ 
ParLevel1_id
µµ "
==
µµ# %
null
µµ& *
)
µµ* +

ModelState
∂∂ 
.
∂∂ 
AddModelError
∂∂ (
(
∂∂( )
$str
∂∂) 7
,
∂∂7 8
Guard
∂∂9 >
.
∂∂> ? 
MesangemModelError
∂∂? Q
(
∂∂Q R
$str
∂∂R ]
,
∂∂] ^
false
∂∂_ d
)
∂∂d e
)
∂∂e f
;
∂∂f g
if
∏∏ 
(
∏∏ 
pcc1b
∏∏ 
.
∏∏ 
VolumeAnimais
∏∏ #
==
∏∏$ &
null
∏∏' +
)
∏∏+ ,

ModelState
ππ 
.
ππ 
AddModelError
ππ (
(
ππ( )
$str
ππ) 8
,
ππ8 9
Guard
ππ: ?
.
ππ? @ 
MesangemModelError
ππ@ R
(
ππR S
$str
ππS f
,
ππf g
false
ππh m
)
ππm n
)
ππn o
;
ππo p
}
∫∫ 	
private
ºº 
void
ºº 
ReturnError
ºº  
(
ºº  !
)
ºº! "
{
ΩΩ 	

ModelState
ææ 
.
ææ 
AddModelError
ææ $
(
ææ$ %
$str
ææ% +
,
ææ+ ,
$str
ææ- b
)
ææb c
;
ææc d
}
øø 	
public
¬¬ 
ActionResult
¬¬ 
Delete
¬¬ "
(
¬¬" #
int
¬¬# &
?
¬¬& '
id
¬¬( *
)
¬¬* +
{
√√ 	
if
ƒƒ 
(
ƒƒ 
id
ƒƒ 
==
ƒƒ 
null
ƒƒ 
)
ƒƒ 
{
≈≈ 
return
∆∆ 
new
∆∆ "
HttpStatusCodeResult
∆∆ /
(
∆∆/ 0
HttpStatusCode
∆∆0 >
.
∆∆> ?

BadRequest
∆∆? I
)
∆∆I J
;
∆∆J K
}
«« 
VolumePcc1b
»» 
pcc1b
»» 
=
»» 
db
»»  "
.
»»" #
VolumePcc1b
»»# .
.
»». /
Find
»»/ 3
(
»»3 4
id
»»4 6
)
»»6 7
;
»»7 8
if
…… 
(
…… 
pcc1b
…… 
==
…… 
null
…… 
)
…… 
{
   
return
ÀÀ 
HttpNotFound
ÀÀ #
(
ÀÀ# $
)
ÀÀ$ %
;
ÀÀ% &
}
ÃÃ 
return
ÕÕ 
View
ÕÕ 
(
ÕÕ 
pcc1b
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
[
—— 	
HttpPost
——	 
,
—— 

ActionName
—— 
(
—— 
$str
—— &
)
——& '
]
——' (
[
““ 	&
ValidateAntiForgeryToken
““	 !
]
““! "
public
”” 
ActionResult
”” 
DeleteConfirmed
”” +
(
””+ ,
int
””, /
id
””0 2
)
””2 3
{
‘‘ 	
VolumePcc1b
’’ 
pcc1b
’’ 
=
’’ 
db
’’  "
.
’’" #
VolumePcc1b
’’# .
.
’’. /
Find
’’/ 3
(
’’3 4
id
’’4 6
)
’’6 7
;
’’7 8
db
÷÷ 
.
÷÷ 
VolumePcc1b
÷÷ 
.
÷÷ 
Remove
÷÷ !
(
÷÷! "
pcc1b
÷÷" '
)
÷÷' (
;
÷÷( )
db
◊◊ 
.
◊◊ 
SaveChanges
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
return
ÿÿ 
RedirectToAction
ÿÿ #
(
ÿÿ# $
$str
ÿÿ$ +
)
ÿÿ+ ,
;
ÿÿ, -
}
ŸŸ 	
	protected
€€ 
override
€€ 
void
€€ 
Dispose
€€  '
(
€€' (
bool
€€( ,
	disposing
€€- 6
)
€€6 7
{
‹‹ 	
if
›› 
(
›› 
	disposing
›› 
)
›› 
{
ﬁﬁ 
db
ﬂﬂ 
.
ﬂﬂ 
Dispose
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
base
·· 
.
·· 
Dispose
·· 
(
·· 
	disposing
·· "
)
··" #
;
··# $
}
‚‚ 	
}
„„ 
}‰‰ ¶3
_C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\Reports\ReportsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 
CustomAuthorize 
] 
public 

class 
ReportsController "
:# $
BaseController% 3
{ 
private ,
 FormularioParaRelatorioViewModel 0
form1 5
;5 6
private 
readonly "
IRelatorioColetaDomain /"
_relatorioColetaDomain0 F
;F G
private 
readonly 
IUserDomain $
_userDomain% 0
;0 1
private 
readonly 
IBaseDomain $
<$ %
UserSgq% ,
,, -
UserDTO. 5
>5 6
_user7 <
;< =
private 
readonly 
IBaseDomain $
<$ %
Level01% ,
,, -

Level01DTO. 8
>8 9
_level01: B
;B C
private 
readonly 
IBaseDomain $
<$ %
Level02% ,
,, -

Level02DTO. 8
>8 9
_level02: B
;B C
private 
readonly 
IBaseDomain $
<$ %
Level03% ,
,, -

Level03DTO. 8
>8 9
_level03: B
;B C
private 
readonly 
IBaseDomain $
<$ %
Shift% *
,* +
ShiftDTO, 4
>4 5
_shift6 <
;< =
private 
readonly 
IBaseDomain $
<$ %
Period% +
,+ ,
	PeriodDTO- 6
>6 7
_period8 ?
;? @
private 
readonly 
IBaseDomain $
<$ %

ParCompany% /
,/ 0
ParCompanyDTO1 >
>> ?
_unit@ E
;E F
public   
ReportsController    
(    !"
IRelatorioColetaDomain  ! 7!
relatorioColetaDomain  8 M
,!! 
IUserDomain!! 

userDomain!! $
,"" 
IBaseDomain"" 
<"" 
UserSgq"" !
,""! "
UserDTO""# *
>""* +
user"", 0
,## 
IBaseDomain## 
<## 
Level01## !
,##! "

Level01DTO### -
>##- .
level01##/ 6
,$$ 
IBaseDomain$$ 
<$$ 
Level02$$ !
,$$! "

Level02DTO$$# -
>$$- .
level02$$/ 6
,%% 
IBaseDomain%% 
<%% 
Level03%% !
,%%! "

Level03DTO%%# -
>%%- .
level03%%/ 6
,&& 
IBaseDomain&& 
<&& 
Shift&& 
,&&  
ShiftDTO&&! )
>&&) *
shift&&+ 0
,'' 
IBaseDomain'' 
<'' 
Period''  
,''  !
	PeriodDTO''" +
>''+ ,
period''- 3
,(( 
IBaseDomain(( 
<(( 

ParCompany(( $
,(($ %
ParCompanyDTO((& 3
>((3 4
unit((5 9
))) 
{** 	
_unit++ 
=++ 
unit++ 
;++ 
_userDomain,, 
=,, 

userDomain,, $
;,,$ %
_level01-- 
=-- 
level01-- 
;-- 
_level02.. 
=.. 
level02.. 
;.. 
_level03// 
=// 
level03// 
;// 
_shift00 
=00 
shift00 
;00 
_period11 
=11 
period11 
;11 
_user22 
=22 
user22 
;22 "
_relatorioColetaDomain33 "
=33# $!
relatorioColetaDomain33% :
;33: ;
form55 
=55 
new55 ,
 FormularioParaRelatorioViewModel55 7
(557 8
)558 9
;559 :
form66 
.66  
SetLevel01SelectList66 %
(66% &
_level0166& .
.66. /
GetAllNoLazyLoad66/ ?
(66? @
)66@ A
)66A B
;66B C
form77 
.77  
Setlevel02SelectList77 %
(77% &
_level0277& .
.77. /
GetAllNoLazyLoad77/ ?
(77? @
)77@ A
)77A B
;77B C
form88 
.88  
SetLevel03SelectList88 %
(88% &
_level0388& .
.88. /
GetAllNoLazyLoad88/ ?
(88? @
)88@ A
)88A B
;88B C
form99 
.99 
SetUserSelectList99 "
(99" #
_user99# (
.99( )
GetAllNoLazyLoad99) 9
(999 :
)99: ;
)99; <
;99< =
form:: 
.:: 
SetShiftSelectList:: #
(::# $
)::7 8
;::8 9
form;; 
.;; 
SetPeriodSelectList;; $
(;;$ %
_period;;% ,
.;;, -
GetAllNoLazyLoad;;- =
(;;= >
);;> ?
);;? @
;;;@ A
form<< 
.<< 
SetUnitsSelectList<< #
(<<# $
_unit<<$ )
.<<) *
GetAllNoLazyLoad<<* :
(<<: ;
)<<; <
)<<< =
;<<= >
form== 
.== 
SetUserSelectList== "
(==" #
_user==# (
.==( )
GetAllNoLazyLoad==) 9
(==9 :
)==: ;
)==; <
;==< =
}>> 	
[AA 	
FormularioPesquisaAA	 
(AA "
filtraUnidadeDoUsuarioAA 2
=AA3 4
trueAA5 9
)AA9 :
]AA: ;
publicBB 
ActionResultBB  
DataCollectionReportBB 0
(BB0 1
)BB1 2
{CC 	
returnDD 
ViewDD 
(DD 
formDD 
)DD 
;DD 
}EE 	
[GG 	
FormularioPesquisaGG	 
(GG #
filtraUnidadePorUsuarioGG 3
=GG4 5
trueGG6 :
)GG: ;
]GG; <
publicHH 
ActionResultHH "
CorrectiveActionReportHH 2
(HH2 3
)HH3 4
{II 	
returnJJ 
ViewJJ 
(JJ 
formJJ 
)JJ 
;JJ 
}KK 	
}WW 
}XX µ—
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Controllers\VolumeProducao\VacuoGRDsController.cs
	namespace 	
	SgqSystem
 
. 
Controllers 
{ 
[ 

FilterUnit 
] 
[ 
CustomAuthorize 
] 
public 

class 
VacuoGRDsController $
:% &
BaseController' 5
{ 
private 
SgqDbDevEntities  
db! #
=$ %
new& )
SgqDbDevEntities* :
(: ;
); <
;< =
private 
void :
.GetNumeroDeFamiliasPorUnidadeDoUsuarioVacuoGRD C
(C D
VolumeVacuoGRDD R
modelS X
,X Y
intZ ]
hashKey^ e
)e f
{ 	
hashKey 
= 
$num 
; 
var 
naoCorporativas 
=  !

CommonData" ,
., -2
&GetNumeroDeFamiliasPorUnidadeDoUsuario- S
(S T
HttpContextT _
,_ `
hashKeya h
)h i
;i j
var 
corporativos 
= 

CommonData )
.) **
GetNumeroDeFamiliasCorporativo* H
(H I
HttpContextI T
,T U
hashKeyV ]
)] ^
;^ _
model 
.  
QtdadeFamiliaProduto &
=' (
corporativos) 5
+6 7
naoCorporativas8 G
;G H
model 
. 
ParLevel1_id 
=  
db! #
.# $
	ParLevel1$ -
.- .
AsNoTracking. :
(: ;
); <
.< =
FirstOrDefault= K
(K L
rL M
=>N P
rQ R
.R S
hashKeyS Z
==[ ]
hashKey^ e
)e f
.f g
Idg i
;i j
} 	
[ 	
FormularioPesquisa	 
( #
filtraUnidadePorUsuario 3
=4 5
true6 :
): ;
]; <
public 
ActionResult 
Index !
(! "
)" #
{ 	
var   
userId   
=   
Guard   
.   
GetUsuarioLogado_Id   2
(  2 3
HttpContext  3 >
)  > ?
;  ? @
var!! 

userLogado!! 
=!! 
db!! 
.!!  
UserSgq!!  '
.!!' (
Where!!( -
(!!- .
r!!. /
=>!!0 2
r!!3 4
.!!4 5
Id!!5 7
==!!8 :
userId!!; A
)!!A B
;!!B C
var"" 
vacuoGRD"" 
="" 
db"" 
."" 
VolumeVacuoGRD"" ,
."", -
Where""- 2
(""2 3
VCD""3 6
=>""7 9

userLogado"": D
.""D E
FirstOrDefault""E S
(""S T
)""T U
.""U V
ParCompanyXUserSgq""V h
.""h i
Any""i l
(""l m
c""m n
=>""o q
c""r s
.""s t
ParCompany_Id	""t Å
==
""Ç Ñ
VCD
""Ö à
.
""à â
ParCompany_id
""â ñ
)
""ñ ó
||
""ò ö
VCD
""õ û
.
""û ü
ParCompany_id
""ü ¨
==
""≠ Ø

userLogado
""∞ ∫
.
""∫ ª
FirstOrDefault
""ª …
(
""…  
)
""  À
.
""À Ã
ParCompany_Id
""Ã Ÿ
)
""Ÿ ⁄
.
""⁄ €
Include
""€ ‚
(
""‚ „
c
""„ ‰
=>
""Â Á
c
""Ë È
.
""È Í

ParCompany
""Í Ù
)
""Ù ı
.
""ı ˆ
Include
""ˆ ˝
(
""˝ ˛
c
""˛ ˇ
=>
""Ä Ç
c
""É Ñ
.
""Ñ Ö
	ParLevel1
""Ö é
)
""é è
;
""è ê
if&& 
(&& 
!&& 
string&& 
.&& 
IsNullOrEmpty&& %
(&&% &
Request&&& -
.&&- .
QueryString&&. 9
[&&9 :
$str&&: E
]&&E F
)&&F G
&&&&H J
!&&K L
string&&L R
.&&R S
IsNullOrEmpty&&S `
(&&` a
Request&&a h
.&&h i
QueryString&&i t
[&&t u
$str&&u ~
]&&~ 
)	&& Ä
)
&&Ä Å
{'' 
System)) 
.)) 
DateTime)) 
	startDate))  )
=))* +
Guard)), 1
.))1 2
ParseDateToSqlV2))2 B
())B C
Request))C J
.))J K
QueryString))K V
[))V W
$str))W b
]))b c
)))c d
;))d e
System** 
.** 
DateTime** 
endDate**  '
=**( )
Guard*** /
.**/ 0
ParseDateToSqlV2**0 @
(**@ A
Request**A H
.**H I
QueryString**I T
[**T U
$str**U ^
]**^ _
)**_ `
;**` a
vacuoGRD,, 
=,, 
vacuoGRD,, #
.,,# $
Where,,$ )
(,,) *
VCD,,* -
=>,,. 0
VCD,,1 4
.,,4 5
Data,,5 9
>=,,: <
	startDate,,= F
&&,,G I
VCD,,J M
.,,M N
Data,,N R
<=,,S U
endDate,,V ]
),,] ^
;,,^ _
}-- 
else.. 
{// 
System00 
.00 
DateTime00 
	startDate00  )
=00* +
System00, 2
.002 3
DateTime003 ;
.00; <
Now00< ?
.00? @
AddDays00@ G
(00G H
-00H I
$num00I J
)00J K
;00K L
System11 
.11 
DateTime11 
endDate11  '
=11( )
System11* 0
.110 1
DateTime111 9
.119 :
Now11: =
;11= >
vacuoGRD22 
=22 
vacuoGRD22 #
.22# $
Where22$ )
(22) *
VCD22* -
=>22. 0
VCD221 4
.224 5
Data225 9
>=22: <
	startDate22= F
&&22G I
VCD22J M
.22M N
Data22N R
<=22S U
endDate22V ]
)22] ^
;22^ _
}33 
if66 
(66 
!66 
string66 
.66 
IsNullOrEmpty66 %
(66% &
Request66& -
.66- .
QueryString66. 9
[669 :
$str66: I
]66I J
)66J K
)66K L
{77 
int88 
id88 
=88 
System88 
.88  
Convert88  '
.88' (
ToInt3288( /
(88/ 0
Request880 7
.887 8
QueryString888 C
[88C D
$str88D S
]88S T
)88T U
;88U V
vacuoGRD99 
=99 
vacuoGRD99 #
.99# $
Where99$ )
(99) *
VCD99* -
=>99. 0
VCD991 4
.994 5
ParCompany_id995 B
==99C E
id99F H
)99H I
;99I J
}:: 
vacuoGRD<< 
=<< 
vacuoGRD<< 
.<<  
OrderByDescending<<  1
(<<1 2
c<<2 3
=><<4 6
c<<7 8
.<<8 9
Data<<9 =
)<<= >
;<<> ?
if>> 
(>> 
vacuoGRD>> 
.>> 
Count>> 
(>> 
)>>  
>>>! "
$num>># $
)>>$ %
return?? 
View?? 
(?? 
vacuoGRD?? $
.??$ %
ToList??% +
(??+ ,
)??, -
)??- .
;??. /
else@@ 
returnAA 
ViewAA 
(AA 
newAA 
SystemAA  &
.AA& '
CollectionsAA' 2
.AA2 3
GenericAA3 :
.AA: ;
ListAA; ?
<AA? @
VolumeVacuoGRDAA@ N
>AAN O
(AAO P
)AAP Q
)AAQ R
;AAR S
}BB 	
publicEE 
ActionResultEE 
DetailsEE #
(EE# $
intEE$ '
?EE' (
idEE) +
)EE+ ,
{FF 	
ifGG 
(GG 
idGG 
==GG 
nullGG 
)GG 
{HH 
returnII 
newII  
HttpStatusCodeResultII /
(II/ 0
HttpStatusCodeII0 >
.II> ?

BadRequestII? I
)III J
;IIJ K
}JJ 
VolumeVacuoGRDKK 
vacuoGRDKK #
=KK$ %
dbKK& (
.KK( )
VolumeVacuoGRDKK) 7
.KK7 8
FindKK8 <
(KK< =
idKK= ?
)KK? @
;KK@ A
ifLL 
(LL 
vacuoGRDLL 
==LL 
nullLL  
)LL  !
{MM 
returnNN 
HttpNotFoundNN #
(NN# $
)NN$ %
;NN% &
}OO 
returnPP 
ViewPP 
(PP 
vacuoGRDPP  
)PP  !
;PP! "
}QQ 	
publicTT 
ActionResultTT 
CreateTT "
(TT" #
)TT# $
{UU 	
ViewBagVV 
.VV 
ParCompany_idVV !
=VV" #
newVV$ '

SelectListVV( 2
(VV2 3
dbVV3 5
.VV5 6

ParCompanyVV6 @
.VV@ A
OrderByVVA H
(VVH I
cVVI J
=>VVK M
cVVN O
.VVO P
NameVVP T
)VVT U
,VVU V
$strVVW [
,VV[ \
$strVV] c
)VVc d
;VVd e
ViewBagWW 
.WW 
ParLevel1_idWW  
=WW! "
newWW# &

SelectListWW' 1
(WW1 2
dbWW2 4
.WW4 5
	ParLevel1WW5 >
.WW> ?
WhereWW? D
(WWD E
cWWE F
=>WWG I
cWWJ K
.WWK L
IdWWL N
==WWO Q
$numWWR T
)WWT U
,WWU V
$strWWW [
,WW[ \
$strWW] c
)WWc d
;WWd e
varXX 
modelXX 
=XX 
newXX 
VolumeVacuoGRDXX *
(XX* +
)XX+ ,
;XX, -:
.GetNumeroDeFamiliasPorUnidadeDoUsuarioVacuoGRDYY :
(YY: ;
modelYY; @
,YY@ A
$numYYB C
)YYC D
;YYD E
returnZZ 
ViewZZ 
(ZZ 
modelZZ 
)ZZ 
;ZZ 
}[[ 	
[`` 	
HttpPost``	 
]`` 
[aa 	$
ValidateAntiForgeryTokenaa	 !
]aa! "
publicbb 
ActionResultbb 
Createbb "
(bb" #
[bb# $
Bindbb$ (
(bb( )
Includebb) 0
=bb1 2
$str	bb3 ÷
)
bb÷ ◊
]
bb◊ ÿ
VolumeVacuoGRD
bbŸ Á
vacuoGRD
bbË 
)
bb Ò
{cc 	:
.GetNumeroDeFamiliasPorUnidadeDoUsuarioVacuoGRDdd :
(dd: ;
vacuoGRDdd; C
,ddC D
$numddE F
)ddF G
;ddG H
ValidaVacuoGRDee 
(ee 
vacuoGRDee #
)ee# $
;ee$ %
ifgg 
(gg 

ModelStategg 
.gg 
IsValidgg "
)gg" #
{hh 
ifjj 
(jj 
dbjj 
.jj 
VolumeVacuoGRDjj %
.jj% &
Wherejj& +
(jj+ ,
rjj, -
=>jj. 0
rjj1 2
.jj2 3
Datajj3 7
==jj8 :
vacuoGRDjj; C
.jjC D
DatajjD H
&&jjI K
rjjL M
.jjM N
ParCompany_idjjN [
==jj\ ^
vacuoGRDjj_ g
.jjg h
ParCompany_idjjh u
)jju v
.jjv w
ToListjjw }
(jj} ~
)jj~ 
.	jj Ä
Count
jjÄ Ö
(
jjÖ Ü
)
jjÜ á
==
jjà ä
$num
jjã å
)
jjå ç
{kk 
dbmm 
.mm 
VolumeVacuoGRDmm %
.mm% &
Addmm& )
(mm) *
vacuoGRDmm* 2
)mm2 3
;mm3 4
dbnn 
.nn 
SaveChangesnn "
(nn" #
)nn# $
;nn$ %
returnoo 
RedirectToActionoo +
(oo+ ,
$stroo, 3
)oo3 4
;oo4 5
}pp 
elseqq 
{rr 
ReturnErrorss 
(ss  
)ss  !
;ss! "
}uu 
}vv 
ViewBagxx 
.xx 
ParCompany_idxx !
=xx" #
newxx$ '

SelectListxx( 2
(xx2 3
dbxx3 5
.xx5 6

ParCompanyxx6 @
.xx@ A
OrderByxxA H
(xxH I
cxxI J
=>xxK M
cxxN O
.xxO P
NamexxP T
)xxT U
,xxU V
$strxxW [
,xx[ \
$strxx] c
,xxc d
vacuoGRDxxe m
.xxm n
ParCompany_idxxn {
)xx{ |
;xx| }
ViewBagyy 
.yy 
ParLevel1_idyy  
=yy! "
newyy# &

SelectListyy' 1
(yy1 2
dbyy2 4
.yy4 5
	ParLevel1yy5 >
,yy> ?
$stryy@ D
,yyD E
$stryyF L
,yyL M
vacuoGRDyyN V
.yyV W
ParLevel1_idyyW c
)yyc d
;yyd e
returnzz 
Viewzz 
(zz 
vacuoGRDzz  
)zz  !
;zz! "
}{{ 	
private}} 
void}} 
ValidaVacuoGRD}} #
(}}# $
VolumeVacuoGRD}}$ 2
vacuoGRD}}3 ;
)}}; <
{~~ 	
if 
( 
vacuoGRD 
. 
Data 
==  
null! %
)% &

ModelState
ÄÄ 
.
ÄÄ 
AddModelError
ÄÄ (
(
ÄÄ( )
$str
ÄÄ) /
,
ÄÄ/ 0
Guard
ÄÄ1 6
.
ÄÄ6 7 
MesangemModelError
ÄÄ7 I
(
ÄÄI J
$str
ÄÄJ P
,
ÄÄP Q
false
ÄÄR W
)
ÄÄW X
)
ÄÄX Y
;
ÄÄY Z
if
ÇÇ 
(
ÇÇ 
vacuoGRD
ÇÇ 
.
ÇÇ 
ParCompany_id
ÇÇ &
==
ÇÇ' )
null
ÇÇ* .
)
ÇÇ. /

ModelState
ÉÉ 
.
ÉÉ 
AddModelError
ÉÉ (
(
ÉÉ( )
$str
ÉÉ) 8
,
ÉÉ8 9
Guard
ÉÉ: ?
.
ÉÉ? @ 
MesangemModelError
ÉÉ@ R
(
ÉÉR S
$str
ÉÉS \
,
ÉÉ\ ]
false
ÉÉ^ c
)
ÉÉc d
)
ÉÉd e
;
ÉÉe f
if
ÖÖ 
(
ÖÖ 
vacuoGRD
ÖÖ 
.
ÖÖ $
HorasTrabalhadasPorDia
ÖÖ /
==
ÖÖ0 2
null
ÖÖ3 7
)
ÖÖ7 8

ModelState
ÜÜ 
.
ÜÜ 
AddModelError
ÜÜ (
(
ÜÜ( )
$str
ÜÜ) A
,
ÜÜA B
Guard
ÜÜC H
.
ÜÜH I 
MesangemModelError
ÜÜI [
(
ÜÜ[ \
$str
ÜÜ\ w
,
ÜÜw x
false
ÜÜy ~
)
ÜÜ~ 
)ÜÜ Ä
;ÜÜÄ Å
else
áá 
if
àà 
(
àà 
vacuoGRD
àà 
.
àà $
HorasTrabalhadasPorDia
àà /
.
àà/ 0
Value
àà0 5
<=
àà6 8
$num
àà9 :
)
àà: ;

ModelState
ââ 
.
ââ 
AddModelError
ââ (
(
ââ( )
$str
ââ) A
,
ââA B
$strââC â
)âââ ä
;ââä ã
if
ãã 
(
ãã 
vacuoGRD
ãã 
.
ãã "
QtdadeFamiliaProduto
ãã -
==
ãã. 0
null
ãã1 5
)
ãã5 6

ModelState
åå 
.
åå 
AddModelError
åå (
(
åå( )
$str
åå) ?
,
åå? @
Guard
ååA F
.
ååF G 
MesangemModelError
ååG Y
(
ååY Z
$str
ååZ z
,
ååz {
falseåå| Å
)ååÅ Ç
)ååÇ É
;ååÉ Ñ
}
ìì 	
private
ïï 
void
ïï 
ReturnError
ïï  
(
ïï  !
)
ïï! "
{
ññ 	

ModelState
óó 
.
óó 
AddModelError
óó $
(
óó$ %
$str
óó% +
,
óó+ ,
$str
óó- b
)
óób c
;
óóc d
}
òò 	
public
õõ 
ActionResult
õõ 
Edit
õõ  
(
õõ  !
int
õõ! $
?
õõ$ %
id
õõ& (
)
õõ( )
{
úú 	
if
ùù 
(
ùù 
id
ùù 
==
ùù 
null
ùù 
)
ùù 
{
ûû 
return
üü 
new
üü "
HttpStatusCodeResult
üü /
(
üü/ 0
HttpStatusCode
üü0 >
.
üü> ?

BadRequest
üü? I
)
üüI J
;
üüJ K
}
†† 
VolumeVacuoGRD
°° 
vacuoGRD
°° #
=
°°$ %
db
°°& (
.
°°( )
VolumeVacuoGRD
°°) 7
.
°°7 8
Find
°°8 <
(
°°< =
id
°°= ?
)
°°? @
;
°°@ A
if
¢¢ 
(
¢¢ 
vacuoGRD
¢¢ 
==
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
return
§§ 
HttpNotFound
§§ #
(
§§# $
)
§§$ %
;
§§% &
}
•• 
ViewBag
¶¶ 
.
¶¶ 
ParCompany_id
¶¶ !
=
¶¶" #
new
¶¶$ '

SelectList
¶¶( 2
(
¶¶2 3
db
¶¶3 5
.
¶¶5 6

ParCompany
¶¶6 @
.
¶¶@ A
OrderBy
¶¶A H
(
¶¶H I
c
¶¶I J
=>
¶¶K M
c
¶¶N O
.
¶¶O P
Name
¶¶P T
)
¶¶T U
,
¶¶U V
$str
¶¶W [
,
¶¶[ \
$str
¶¶] c
,
¶¶c d
vacuoGRD
¶¶e m
.
¶¶m n
ParCompany_id
¶¶n {
)
¶¶{ |
;
¶¶| }
ViewBag
ßß 
.
ßß 
ParLevel1_id
ßß  
=
ßß! "
new
ßß# &

SelectList
ßß' 1
(
ßß1 2
db
ßß2 4
.
ßß4 5
	ParLevel1
ßß5 >
.
ßß> ?
Where
ßß? D
(
ßßD E
c
ßßE F
=>
ßßG I
c
ßßJ K
.
ßßK L
Id
ßßL N
==
ßßO Q
$num
ßßR T
)
ßßT U
,
ßßU V
$str
ßßW [
,
ßß[ \
$str
ßß] c
,
ßßc d
vacuoGRD
ßße m
.
ßßm n
ParLevel1_id
ßßn z
)
ßßz {
;
ßß{ |<
.GetNumeroDeFamiliasPorUnidadeDoUsuarioVacuoGRD
®® :
(
®®: ;
vacuoGRD
®®; C
,
®®C D
$num
®®E F
)
®®F G
;
®®G H
return
©© 
View
©© 
(
©© 
vacuoGRD
©©  
)
©©  !
;
©©! "
}
™™ 	
[
ØØ 	
HttpPost
ØØ	 
]
ØØ 
[
∞∞ 	&
ValidateAntiForgeryToken
∞∞	 !
]
∞∞! "
public
±± 
ActionResult
±± 
Edit
±±  
(
±±  !
[
±±! "
Bind
±±" &
(
±±& '
Include
±±' .
=
±±/ 0
$str±±1 ‘
)±±‘ ’
]±±’ ÷
VolumeVacuoGRD±±◊ Â
vacuoGRD±±Ê Ó
)±±Ó Ô
{
≤≤ 	<
.GetNumeroDeFamiliasPorUnidadeDoUsuarioVacuoGRD
≥≥ :
(
≥≥: ;
vacuoGRD
≥≥; C
,
≥≥C D
$num
≥≥E F
)
≥≥F G
;
≥≥G H
ValidaVacuoGRD
¥¥ 
(
¥¥ 
vacuoGRD
¥¥ #
)
¥¥# $
;
¥¥$ %
if
µµ 
(
µµ 

ModelState
µµ 
.
µµ 
IsValid
µµ "
)
µµ" #
{
∂∂ 
if
∑∑ 
(
∑∑ 
db
∑∑ 
.
∑∑ 
VolumeVacuoGRD
∑∑ %
.
∑∑% &
Where
∑∑& +
(
∑∑+ ,
r
∑∑, -
=>
∑∑. 0
r
∑∑1 2
.
∑∑2 3
Data
∑∑3 7
==
∑∑8 :
vacuoGRD
∑∑; C
.
∑∑C D
Data
∑∑D H
&&
∑∑I K
r
∑∑L M
.
∑∑M N
ParCompany_id
∑∑N [
==
∑∑\ ^
vacuoGRD
∑∑_ g
.
∑∑g h
ParCompany_id
∑∑h u
)
∑∑u v
.
∑∑v w
ToList
∑∑w }
(
∑∑} ~
)
∑∑~ 
.∑∑ Ä
Count∑∑Ä Ö
(∑∑Ö Ü
)∑∑Ü á
==∑∑à ä
$num∑∑ã å
)∑∑å ç
{
∏∏ 
db
ππ 
.
ππ 
Entry
ππ 
(
ππ 
vacuoGRD
ππ %
)
ππ% &
.
ππ& '
State
ππ' ,
=
ππ- .
EntityState
ππ/ :
.
ππ: ;
Modified
ππ; C
;
ππC D
db
∫∫ 
.
∫∫ 
SaveChanges
∫∫ "
(
∫∫" #
)
∫∫# $
;
∫∫$ %
return
ªª 
RedirectToAction
ªª +
(
ªª+ ,
$str
ªª, 3
)
ªª3 4
;
ªª4 5
}
ºº 
else
ΩΩ 
{
ææ 
if
¿¿ 
(
¿¿ 
db
¿¿ 
.
¿¿ 
VolumeVacuoGRD
¿¿ )
.
¿¿) *
Where
¿¿* /
(
¿¿/ 0
r
¿¿0 1
=>
¿¿2 4
r
¿¿5 6
.
¿¿6 7
Data
¿¿7 ;
==
¿¿< >
vacuoGRD
¿¿? G
.
¿¿G H
Data
¿¿H L
&&
¿¿M O
r
¡¡7 8
.
¡¡8 9
ParCompany_id
¡¡9 F
==
¡¡G I
vacuoGRD
¡¡J R
.
¡¡R S
ParCompany_id
¡¡S `
&&
¡¡a c
r
¬¬7 8
.
¬¬8 9
Id
¬¬9 ;
==
¬¬< >
vacuoGRD
¬¬? G
.
¬¬G H
Id
¬¬H J
)
¬¬J K
.
¬¬K L
ToList
¬¬L R
(
¬¬R S
)
¬¬S T
.
¬¬T U
Count
¬¬U Z
(
¬¬Z [
)
¬¬[ \
==
¬¬] _
$num
¬¬` a
)
¬¬a b
{
√√ 
using
ƒƒ 
(
ƒƒ 
var
ƒƒ "
db2
ƒƒ# &
=
ƒƒ' (
new
ƒƒ) ,
SgqDbDevEntities
ƒƒ- =
(
ƒƒ= >
)
ƒƒ> ?
)
ƒƒ? @
{
≈≈ 
db2
∆∆ 
.
∆∆  
Entry
∆∆  %
(
∆∆% &
vacuoGRD
∆∆& .
)
∆∆. /
.
∆∆/ 0
State
∆∆0 5
=
∆∆6 7
EntityState
∆∆8 C
.
∆∆C D
Modified
∆∆D L
;
∆∆L M
db2
«« 
.
««  
SaveChanges
««  +
(
««+ ,
)
««, -
;
««- .
return
»» "
RedirectToAction
»»# 3
(
»»3 4
$str
»»4 ;
)
»»; <
;
»»< =
}
…… 
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
ReturnError
ŒŒ #
(
ŒŒ# $
)
ŒŒ$ %
;
ŒŒ% &
}
–– 
}
—— 
}
““ 
ViewBag
”” 
.
”” 
ParCompany_id
”” !
=
””" #
new
””$ '

SelectList
””( 2
(
””2 3
db
””3 5
.
””5 6

ParCompany
””6 @
.
””@ A
OrderBy
””A H
(
””H I
c
””I J
=>
””K M
c
””N O
.
””O P
Name
””P T
)
””T U
,
””U V
$str
””W [
,
””[ \
$str
””] c
,
””c d
vacuoGRD
””e m
.
””m n
ParCompany_id
””n {
)
””{ |
;
””| }
ViewBag
‘‘ 
.
‘‘ 
ParLevel1_id
‘‘  
=
‘‘! "
new
‘‘# &

SelectList
‘‘' 1
(
‘‘1 2
db
‘‘2 4
.
‘‘4 5
	ParLevel1
‘‘5 >
,
‘‘> ?
$str
‘‘@ D
,
‘‘D E
$str
‘‘F L
,
‘‘L M
vacuoGRD
‘‘N V
.
‘‘V W
ParLevel1_id
‘‘W c
)
‘‘c d
;
‘‘d e
return
’’ 
View
’’ 
(
’’ 
vacuoGRD
’’  
)
’’  !
;
’’! "
}
÷÷ 	
public
ŸŸ 
ActionResult
ŸŸ 
Delete
ŸŸ "
(
ŸŸ" #
int
ŸŸ# &
?
ŸŸ& '
id
ŸŸ( *
)
ŸŸ* +
{
⁄⁄ 	
if
€€ 
(
€€ 
id
€€ 
==
€€ 
null
€€ 
)
€€ 
{
‹‹ 
return
›› 
new
›› "
HttpStatusCodeResult
›› /
(
››/ 0
HttpStatusCode
››0 >
.
››> ?

BadRequest
››? I
)
››I J
;
››J K
}
ﬁﬁ 
VolumeVacuoGRD
ﬂﬂ 
vacuoGRD
ﬂﬂ #
=
ﬂﬂ$ %
db
ﬂﬂ& (
.
ﬂﬂ( )
VolumeVacuoGRD
ﬂﬂ) 7
.
ﬂﬂ7 8
Find
ﬂﬂ8 <
(
ﬂﬂ< =
id
ﬂﬂ= ?
)
ﬂﬂ? @
;
ﬂﬂ@ A
if
‡‡ 
(
‡‡ 
vacuoGRD
‡‡ 
==
‡‡ 
null
‡‡  
)
‡‡  !
{
·· 
return
‚‚ 
HttpNotFound
‚‚ #
(
‚‚# $
)
‚‚$ %
;
‚‚% &
}
„„ 
return
‰‰ 
View
‰‰ 
(
‰‰ 
vacuoGRD
‰‰  
)
‰‰  !
;
‰‰! "
}
ÂÂ 	
[
ËË 	
HttpPost
ËË	 
,
ËË 

ActionName
ËË 
(
ËË 
$str
ËË &
)
ËË& '
]
ËË' (
[
ÈÈ 	&
ValidateAntiForgeryToken
ÈÈ	 !
]
ÈÈ! "
public
ÍÍ 
ActionResult
ÍÍ 
DeleteConfirmed
ÍÍ +
(
ÍÍ+ ,
int
ÍÍ, /
id
ÍÍ0 2
)
ÍÍ2 3
{
ÎÎ 	
VolumeVacuoGRD
ÏÏ 
vacuoGRD
ÏÏ #
=
ÏÏ$ %
db
ÏÏ& (
.
ÏÏ( )
VolumeVacuoGRD
ÏÏ) 7
.
ÏÏ7 8
Find
ÏÏ8 <
(
ÏÏ< =
id
ÏÏ= ?
)
ÏÏ? @
;
ÏÏ@ A
db
ÌÌ 
.
ÌÌ 
VolumeVacuoGRD
ÌÌ 
.
ÌÌ 
Remove
ÌÌ $
(
ÌÌ$ %
vacuoGRD
ÌÌ% -
)
ÌÌ- .
;
ÌÌ. /
db
ÓÓ 
.
ÓÓ 
SaveChanges
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
return
ÔÔ 
RedirectToAction
ÔÔ #
(
ÔÔ# $
$str
ÔÔ$ +
)
ÔÔ+ ,
;
ÔÔ, -
}
 	
	protected
ÚÚ 
override
ÚÚ 
void
ÚÚ 
Dispose
ÚÚ  '
(
ÚÚ' (
bool
ÚÚ( ,
	disposing
ÚÚ- 6
)
ÚÚ6 7
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
	disposing
ÙÙ 
)
ÙÙ 
{
ıı 
db
ˆˆ 
.
ˆˆ 
Dispose
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ 
}
˜˜ 
base
¯¯ 
.
¯¯ 
Dispose
¯¯ 
(
¯¯ 
	disposing
¯¯ "
)
¯¯" #
;
¯¯# $
}
˘˘ 	
}
¸¸ 
}˝˝ ·I
EC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Global.asax.cs
	namespace 	
	SgqSystem
 
{ 
public 

class 
WebApiApplication "
:# $
System% +
.+ ,
Web, /
./ 0
HttpApplication0 ?
{ 
private 
string 

ScriptFull !
;! "
private 
BackgroundJobServer # 
_backgroundJobServer$ 8
;8 9
	protected 
void 
Application_Start (
(( )
)) *
{ 	
AreaRegistration 
. 
RegisterAllAreas -
(- .
). /
;/ 0
ModelBinders 
. 
Binders  
.  !
Add! $
($ %
typeof% +
(+ ,
decimal, 3
)3 4
,4 5
new6 9
DecimalModelBinder: L
(L M
)M N
)N O
;O P
System 
. 
Web 
. 
Http 
. 
GlobalConfiguration /
./ 0
	Configure0 9
(9 :
WebApiConfig: F
.F G
RegisterG O
)O P
;P Q
FilterConfig 
. !
RegisterGlobalFilters .
(. /
GlobalFilters/ <
.< =
Filters= D
)D E
;E F
BundleTable   
.   
EnableOptimizations   +
=  , -
true  . 2
;  2 3
RouteConfig!! 
.!! 
RegisterRoutes!! &
(!!& '

RouteTable!!' 1
.!!1 2
Routes!!2 8
)!!8 9
;!!9 :
BundleConfig"" 
."" 
RegisterBundles"" (
(""( )
BundleTable"") 4
.""4 5
Bundles""5 <
)""< =
;""= >
AutoMapperConfig$$ 
.$$ 
RegisterMappings$$ -
($$- .
)$$. /
;$$/ 0-
!DisableApplicationInsightsOnDebug%% -
(%%- .
)%%. /
;%%/ 0
GlobalConfig&& 
.&& 
VerifyConfig&& %
(&&% &
$str&&& 7
)&&7 8
;&&8 9"
TelemetryConfiguration(( "
.((" #
Active((# )
.(() *
DisableTelemetry((* :
=((; <
true((= A
;((A B
var** 
options** 
=** 
new** #
SqlServerStorageOptions** 5
{++ $
PrepareSchemaIfNecessary,, (
=,,) *
false,,+ 0
,,,0 1
}-- 
;-- 
Hangfire.. 
... 
GlobalConfiguration.. (
...( )
Configuration..) 6
...6 7
UseSqlServerStorage..7 J
(..J K
$str..K \
,..\ ]
options..^ e
)..e f
;..f g 
_backgroundJobServer//  
=//! "
new//# &
BackgroundJobServer//' :
(//: ;
)//; <
;//< =
if11 
(11 
GlobalConfig11 
.11 
LanguageBrasil11 +
)11+ ,
{22 
Thread33 
.33 
CurrentThread33 $
.33$ %
CurrentCulture33% 3
=334 5
new336 9
CultureInfo33: E
(33E F
$str33F M
)33M N
;33N O
Thread44 
.44 
CurrentThread44 $
.44$ %
CurrentUICulture44% 5
=446 7
new448 ;
CultureInfo44< G
(44G H
$str44H O
)44O P
;44P Q
}55 
else66 
if66 
(66 
GlobalConfig66 !
.66! "
LanguageEUA66" -
)66- .
{77 
Thread88 
.88 
CurrentThread88 $
.88$ %
CurrentCulture88% 3
=884 5
new886 9
CultureInfo88: E
(88E F
$str88F H
)88H I
;88I J
Thread99 
.99 
CurrentThread99 $
.99$ %
CurrentUICulture99% 5
=996 7
new998 ;
CultureInfo99< G
(99G H
$str99H J
)99J K
;99K L
}:: 

ScriptFull<< 
=<< 
string<< 
.<<  
Empty<<  %
;<<% &2
&VerifyColumnExistsNotExistisThenCreate== 2
(==2 3
$str==3 >
,==> ?
$str==@ N
,==N O
$str==P U
,==U V
$str==W d
,==d e
$str==f x
)==x y
;==y z2
&VerifyColumnExistsNotExistisThenCreate>> 2
(>>2 3
$str>>3 >
,>>> ?
$str>>@ P
,>>P Q
$str>>R W
,>>W X
$str>>Y f
,>>f g
$str>>h |
)>>| }
;>>} ~2
&VerifyColumnExistsNotExistisThenCreate?? 2
(??2 3
$str??3 >
,??> ?
$str??@ \
,??\ ]
$str??^ c
,??c d
$str??e r
,??r s
$str	??t î
)
??î ï
;
??ï ñ2
&VerifyColumnExistsNotExistisThenCreate@@ 2
(@@2 3
$str@@3 >
,@@> ?
$str@@@ Y
,@@Y Z
$str@@[ `
,@@` a
$str@@b o
,@@o p
$str	@@q é
)
@@é è
;
@@è ê2
&VerifyColumnExistsNotExistisThenCreateCC 2
(CC2 3
$strCC3 I
,CCI J
$strCCK Y
,CCY Z
$strCC[ `
,CC` a
$strCCb p
,CCp q
$str	CCr á
)
CCá à
;
CCà â2
&VerifyColumnExistsNotExistisThenCreateDD 2
(DD2 3
$strDD3 C
,DDC D
$strDDE R
,DDR S
$strDDT Y
,DDY Z
$strDD[ h
,DDh i
$strDDj {
)DD{ |
;DD| }2
&VerifyColumnExistsNotExistisThenCreateEE 2
(EE2 3
$strEE3 C
,EEC D
$strEEE W
,EEW X
$strEEY g
,EEg h
$strEEi w
,EEw x
$str	EEy í
)
EEí ì
;
EEì î2
&VerifyColumnExistsNotExistisThenCreateHH 2
(HH2 3
$strHH3 >
,HH> ?
$strHH@ M
,HHM N
$strHHO T
,HHT U
$strHHV c
,HHc d
$strHHe v
)HHv w
;HHw x2
&VerifyColumnExistsNotExistisThenCreateII 2
(II2 3
$strII3 >
,II> ?
$strII@ I
,III J
$strIIK P
,IIP Q
$strIIR _
,II_ `
$strIIa n
)IIn o
;IIo p2
&VerifyColumnExistsNotExistisThenCreateJJ 2
(JJ2 3
$strJJ3 >
,JJ> ?
$strJJ@ M
,JJM N
$strJJO T
,JJT U
$strJJV \
,JJ\ ]
$strJJ^ o
)JJo p
;JJp q

ExecuteSqlKK 
(KK 
)KK 
;KK 
}MM 	
privateOO 
voidOO 

ExecuteSqlOO 
(OO  
)OO  !
{PP 	
usingQQ 
(QQ 
varQQ 
dbQQ 
=QQ 
newQQ 
DominioQQ  '
.QQ' (
SgqDbDevEntitiesQQ( 8
(QQ8 9
)QQ9 :
)QQ: ;
{RR 
trySS 
{TT 
dbUU 
.UU 
DatabaseUU 
.UU  
ExecuteSqlCommandUU  1
(UU1 2

ScriptFullUU2 <
)UU< =
;UU= >
}VV 
catchWW 
(WW 
	ExceptionWW  
eWW! "
)WW" #
{XX 
newYY 
	CreateLogYY !
(YY! "
newYY" %
	ExceptionYY& /
(YY/ 0
$strYY0 Z
+YY[ \

ScriptFullYY] g
,YYg h
eYYi j
)YYj k
,YYk l
ControllerActionYYm }
:YY} ~
$str	YY í
)
YYí ì
;
YYì î
}ZZ 
}[[ 
}\\ 	
privateff 
voidff 2
&VerifyColumnExistsNotExistisThenCreateff ;
(ff; <
stringff< B
tableffC H
,ffH I
stringffJ P
colmunffQ W
,ffW X
stringffY _
typeff` d
,ffd e
stringfff l
defaultValueffm y
,ffy z
string	ff{ Å
setValue
ffÇ ä
)
ffä ã
{gg 	

ScriptFullii 
+=ii 
stringii  
.ii  !
Formatii! '
(ii' (
$strir( 
,rr 
tablerr 
,rr 	
colmunrr
 
,rr 
typerr 
,rr 
defaultValuerr $
,rr$ %
setValuerr& .
)rr. /
;rr/ 0
}tt 	
	protectedvv 
voidvv 
Application_Endvv &
(vv& '
objectvv' -
sendervv. 4
,vv4 5
	EventArgsvv6 ?
evv@ A
)vvA B
{ww 	 
_backgroundJobServerxx  
.xx  !
Disposexx! (
(xx( )
)xx) *
;xx* +
}yy 	
[~~ 	
Conditional~~	 
(~~ 
$str~~ 
)~~ 
]~~ 
private 
static 
void -
!DisableApplicationInsightsOnDebug =
(= >
)> ?
{
ÄÄ 	
}
ÇÇ 	
}
ÑÑ 
}ÜÜ ª
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\Handlres\HandleApi.cs
	namespace 	
	SgqSystem
 
. 
Handlres 
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 $
.		$ %
Method		% +
|		, -
AttributeTargets		. >
.		> ?
Class		? D
,		D E
AllowMultiple		F S
=		T U
false		V [
,		[ \
	Inherited		] f
=		g h
true		i m
)		m n
]		n o
public

 

class

 
	HandleApi

 
:

 $
ExceptionFilterAttribute

 5
{ 
private 
bool 
saveLog 
; 
public 
	HandleApi 
( 
) 
{ 	
saveLog 
= 
true 
; 
} 	
public 
	HandleApi 
( 
bool 
saveLog %
)% &
{ 	
this 
. 
saveLog 
= 
saveLog "
;" #
} 	
public 
override 
void 
OnException (
(( )%
HttpActionExecutedContext) B
contextC J
)J K
{ 	
if 
( 
saveLog 
) 
LogException 
( 
context $
.$ %
	Exception% .
). /
;/ 0
context 
. 
Response 
= 
context &
.& '
Request' .
.. /
CreateErrorResponse/ B
(B C
HttpStatusCodeC Q
.Q R
InternalServerErrorR e
,e f
contextg n
.n o
	Exceptiono x
.x y
Message	y Ä
.
Ä Å
ToString
Å â
(
â ä
)
ä ã
)
ã å
;
å ç
base 
. 
OnException 
( 
context $
)$ %
;% &
} 	
private$$ 
void$$ 
LogException$$ !
($$! "
	Exception$$" +
ex$$, .
)$$. /
{%% 	
new&& 
	CreateLog&& 
(&& 
ex&& 
)&& 
;&& 
}'' 	
})) 
}** ”
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\Handlres\HandleController.cs
	namespace 	
Helper
 
{ 
public 

class 
HandleController !
:" #
FilterAttribute$ 3
,3 4
IExceptionFilter5 E
{		 
public 
void 
OnException 
(  
ExceptionContext  0
filterContext1 >
)> ?
{ 	
var 
ex 
= 
filterContext "
." #
	Exception# ,
;, -
filterContext 
. 
ExceptionHandled *
=+ ,
false- 2
;2 3
var 
controllerAction  
=! "
String# )
.) *
Join* .
(. /
$str/ 2
,2 3
filterContext4 A
.A B

ControllerB L
.L M
ControllerContextM ^
.^ _
	RouteData_ h
.h i
Valuesi o
.o p
ToListp v
(v w
)w x
)x y
;y z
LogException 
( 
ex 
, 
controllerAction -
)- .
;. /(
CreateExceptionContextResult (
(( )
filterContext) 6
)6 7
;7 8
throw 
ex 
; 
} 	
private 
void 
LogException !
(! "
	Exception" +
ex, .
). /
{ 	
new 
	CreateLog 
( 
ex 
) 
; 
} 	
private%% 
void%% 
LogException%% !
(%%! "
	Exception%%" +
ex%%, .
,%%. /
string%%0 6
controllerAction%%7 G
)%%G H
{&& 	
new'' 
	CreateLog'' 
('' 
ex'' 
,'' 
controllerAction'' .
)''. /
;''/ 0
}(( 	
private-- 
const-- 
string-- 
XMLHttpRequest-- +
=--, -
$str--. >
;--> ?
private.. 
const.. 
string.. $
XRequestedWithHeadername.. 5
=..6 7
$str..8 J
;..J K
private// 
const// 
string// 
JSONErrorMessage// -
=//. /
$str//0 i
;//i j
private00 
void00 (
CreateExceptionContextResult00 1
(001 2
ExceptionContext002 B
exceptionContext00C S
)00S T
{11 	
if33 
(33 
exceptionContext33  
.33  !
HttpContext33! ,
.33, -
Request33- 4
.334 5
Headers335 <
[33< =$
XRequestedWithHeadername33= U
]33U V
==33W Y
XMLHttpRequest33Z h
)33h i
{44 
exceptionContext66  
.66  !
Result66! '
=66( )
new66* -

JsonResult66. 8
{77 
JsonRequestBehavior88 '
=88( )
JsonRequestBehavior88* =
.88= >
AllowGet88> F
,88F G
Data99 
=99 
new99 
{99  
error99! &
=99' (
true99) -
,99- .
message99/ 6
=997 8
JSONErrorMessage999 I
}99J K
}:: 
;:: 
};; 
else<< 
{== 
}FF 
}GG 	
}II 
}JJ â
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\Handlres\ValidateModelAttribute.cs
	namespace 	
	SgqSystem
 
. 
Handlres 
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 $
.		$ %
Method		% +
|		, -
AttributeTargets		. >
.		> ?
Class		? D
,		D E
AllowMultiple		F S
=		T U
false		V [
,		[ \
	Inherited		] f
=		g h
true		i m
)		m n
]		n o
public

 

class

 "
ValidateModelAttribute

 '
:

( )!
ActionFilterAttribute

* ?
{ 
public 
override 
void 
OnActionExecuting .
(. /
HttpActionContext/ @
actionContextA N
)N O
{ 	
if 
( 
actionContext 
. 

ModelState (
.( )
IsValid) 0
==1 3
false4 9
)9 :
{ 
actionContext 
. 
Response &
=' (
actionContext) 6
.6 7
Request7 >
.> ?
CreateErrorResponse? R
(R S
HttpStatusCode "
." #

BadRequest# -
,- .
actionContext/ <
.< =

ModelState= G
)G H
;H I
} 
} 	
} 
} ÒŒ
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\CommonData.cs
	namespace 	
	SgqSystem
 
. 
Helpers 
{ 
public 

static 
class 

CommonData "
{ 
public 
static 
int 2
&GetNumeroDeFamiliasPorUnidadeDoUsuario @
(@ A
HttpContextBaseA P
filterContextQ ^
,^ _
int` c
hashKeyd k
)k l
{ 	
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
var 
id 
= 
Guard 
. 
GetUsuarioLogado_Id 2
(2 3
filterContext3 @
)@ A
;A B
var 
user 
= 
db 
. 
UserSgq %
.% &
FirstOrDefault& 4
(4 5
r5 6
=>7 9
r: ;
.; <
Id< >
==? A
idB D
)D E
;E F
var 
level1 
= 
db 
.  
	ParLevel1  )
.) *
FirstOrDefault* 8
(8 9
r9 :
=>; =
r> ?
.? @
hashKey@ G
==H J
hashKeyK R
)R S
;S T
var 
existeAlgum 
=  !
db" $
.$ %
Database% -
.- .
SqlQuery. 6
<6 7#
ParLevel2ControlCompany7 N
>N O
(O P
$str	P ´
+
¨ ≠
level1
Æ ¥
.
¥ µ
Id
µ ∑
)
∑ ∏
.
∏ π
ToList
π ø
(
ø ¿
)
¿ ¡
;
¡ ¬
if 
( 
existeAlgum 
!=  "
null# '
&&( *
existeAlgum+ 6
.6 7
Count7 <
(< =
)= >
>? @
$numA B
)B C
{ 
var 
lastDate  
=! "
existeAlgum# .
.. /
OrderByDescending/ @
(@ A
rA B
=>C E
rF G
.G H
InitDateH P
)P Q
.Q R
FirstOrDefaultR `
(` a
)a b
.b c
InitDatec k
;k l
var 
counter 
=  !
existeAlgum" -
.- .
Count. 3
(3 4
r4 5
=>6 8
r9 :
.: ;
InitDate; C
==D F
lastDateG O
)O P
;P Q
return   
counter   "
;  " #
}!! 
else"" 
{## 
return$$ 
$num$$ 
;$$ 
}%% 
}&& 
}'' 	
public)) 
static)) 
int)) *
GetNumeroDeFamiliasCorporativo)) 8
())8 9
HttpContextBase))9 H
filterContext))I V
,))V W
int))X [
hashKey))\ c
)))c d
{** 	
using++ 
(++ 
var++ 
db++ 
=++ 
new++ 
SgqDbDevEntities++  0
(++0 1
)++1 2
)++2 3
{,, 
var-- 
id-- 
=-- 
Guard-- 
.-- 
GetUsuarioLogado_Id-- 2
(--2 3
filterContext--3 @
)--@ A
;--A B
var.. 
user.. 
=.. 
db.. 
... 
UserSgq.. %
...% &
FirstOrDefault..& 4
(..4 5
r..5 6
=>..7 9
r..: ;
...; <
Id..< >
==..? A
id..B D
)..D E
;..E F
var// 
level1// 
=// 
db// 
.//  
	ParLevel1//  )
.//) *
FirstOrDefault//* 8
(//8 9
r//9 :
=>//; =
r//> ?
.//? @
hashKey//@ G
==//H J
hashKey//K R
)//R S
;//S T
var00 
existeAlgum00 
=00  !
db00" $
.00$ %
Database00% -
.00- .
SqlQuery00. 6
<006 7#
ParLevel2ControlCompany007 N
>00N O
(00O P
$str	00P ß
+
00® ©
level1
00™ ∞
.
00∞ ±
Id
00± ≥
)
00≥ ¥
.
00¥ µ
ToList
00µ ª
(
00ª º
)
00º Ω
;
00Ω æ
if22 
(22 
existeAlgum22 
!=22  "
null22# '
&&22( *
existeAlgum22+ 6
.226 7
Count227 <
(22< =
)22= >
>22? @
$num22A B
)22B C
{33 
var44 
lastDate44  
=44! "
existeAlgum44# .
.44. /
OrderByDescending44/ @
(44@ A
r44A B
=>44C E
r44F G
.44G H
InitDate44H P
)44P Q
.44Q R
FirstOrDefault44R `
(44` a
)44a b
.44b c
InitDate44c k
;44k l
var55 
counter55 
=55  !
existeAlgum55" -
.55- .
Count55. 3
(553 4
r554 5
=>556 8
r559 :
.55: ;
InitDate55; C
==55D F
lastDate55G O
)55O P
;55P Q
return66 
counter66 "
;66" #
}77 
else88 
{99 
return:: 
$num:: 
;:: 
};; 
}== 
}>> 	
public@@ 
static@@ 
UserSgq@@ 
GetuserSgqLogado@@ .
(@@. /
HttpContextBase@@/ >
filterContext@@? L
,@@L M
int@@N Q
hashKey@@R Y
)@@Y Z
{AA 	
usingBB 
(BB 
varBB 
dbBB 
=BB 
newBB 
SgqDbDevEntitiesBB  0
(BB0 1
)BB1 2
)BB2 3
{CC 
varDD 
idDD 
=DD 
GuardDD 
.DD 
GetUsuarioLogado_IdDD 2
(DD2 3
filterContextDD3 @
)DD@ A
;DDA B
returnEE 
dbEE 
.EE 
UserSgqEE !
.EE! "
FirstOrDefaultEE" 0
(EE0 1
rEE1 2
=>EE3 5
rEE6 7
.EE7 8
IdEE8 :
==EE; =
idEE> @
)EE@ A
;EEA B
}FF 
}GG 	
publicNN 
staticNN 
IEnumerableNN !
<NN! "
TupleNN" '
<NN' (
intNN( +
,NN+ ,
stringNN- 3
>NN3 4
>NN4 5$
GetOperacoesPorUnidadeIdNN6 N
(NNN O
intNNO R
	unidadeIdNNS \
)NN\ ]
{OO 	
usingPP 
(PP 
varPP 
dbPP 
=PP 
newPP 
SGQ_GlobalEntitiesPP  2
(PP2 3
)PP3 4
)PP4 5
{QQ 
varRR 
	operacoesRR 
=RR 
(RR  !
fromRR! %
uRR& '
inRR( *
dbRR+ -
.RR- .
UnidadesRR. 6
.RR6 7
AsNoTrackingRR7 C
(RRC D
)RRD E
joinSS! %
cSS& '
inSS( *
dbSS+ -
.SS- .
ClustersSS. 6
.SS6 7
AsNoTrackingSS7 C
(SSC D
)SSD E
onSSF H
uSSI J
.SSJ K
ClusterSSK R
equalsSSS Y
cSSZ [
.SS[ \
SiglaSS\ a
joinTT! %
cdTT& (
inTT) +
dbTT, .
.TT. / 
ClusterDepartamentosTT/ C
.TTC D
AsNoTrackingTTD P
(TTP Q
)TTQ R
onTTS U
cTTV W
.TTW X
LegendaTTX _
equalsTT` f
cdTTg i
.TTi j
ClusterTTj q
joinUU! %
dUU& '
inUU( *
dbUU+ -
.UU- .
DepartamentosUU. ;
.UU; <
AsNoTrackingUU< H
(UUH I
)UUI J
onUUK M
cdUUN P
.UUP Q
DepartamentoUUQ ]
equalsUU^ d
dUUe f
.UUf g
NomeUUg k
joinVV! %
depoVV& *
inVV+ -
dbVV. 0
.VV0 1!
DepartamentoOperacoesVV1 F
.VVF G
AsNoTrackingVVG S
(VVS T
)VVT U
onVVV X
dVVY Z
.VVZ [
IdVV[ ]
equalsVV^ d
depoVVe i
.VVi j
DepartamentoVVj v
joinWW! %
opeWW& )
inWW* ,
dbWW- /
.WW/ 0
	OperacoesWW0 9
.WW9 :
AsNoTrackingWW: F
(WWF G
)WWG H
onWWI K
depoWWL P
.WWP Q
OperacaoWWQ Y
equalsWWZ `
opeWWa d
.WWd e
IdWWe g
orderbyXX! (
opeXX) ,
.XX, -
NivelXX- 2
whereYY! &
(YY' (
(YY( )
uYY) *
.YY* +
IdYY+ -
==YY. 0
	unidadeIdYY1 :
||YY; =
	unidadeIdYY> G
==YYH J
$numYYK L
)YYL M
&&YYN P
uYYQ R
.YYR S
AtivaYYS X
.YYX Y
ValueYYY ^
&&YY_ a
uYYb c
.YYc d
IdYYd f
!=YYg i
$numYYj l
)YYl m
selectZZ! '
newZZ( +
{ZZ, -

OperacaoIdZZ. 8
=ZZ9 :
opeZZ; >
.ZZ> ?
IdZZ? A
,ZZA B
OperacaoZZC K
=ZZL M
opeZZN Q
.ZZQ R
NomeZZR V
}ZZW X
)ZZX Y
.[[  !
Distinct[[! )
([[) *
)[[* +
.\\  !
ToList\\! '
(\\' (
)\\( )
;\\) *
var^^ 
retorno^^ 
=^^ 
from^^ "
o^^# $
in^^% '
	operacoes^^( 1
.^^1 2
AsEnumerable^^2 >
(^^> ?
)^^? @
select__ $
Tuple__% *
.__* +
Create__+ 1
(__1 2
o__2 3
.__3 4

OperacaoId__4 >
,__> ?
o__@ A
.__A B
Operacao__B J
)__J K
;__K L
returnaa 
retornoaa 
;aa 
}bb 
}cc 	
publicjj 
staticjj 
IEnumerablejj !
<jj! "
intjj" %
>jj% &%
GetUnidadesIdPorUsuarioIdjj' @
(jj@ A
intjjA D
	usuarioIdjjE N
)jjN O
{kk 	
usingll 
(ll 
varll 
dbll 
=ll 
newll 
SGQ_GlobalEntitiesll  2
(ll2 3
)ll3 4
)ll4 5
{mm 
varnn 
retornonn 
=nn 
(nn 
fromnn #
uunn$ &
innn' )
dbnn* ,
.nn, -
UsuarioUnidadesnn- <
.nn< =
AsNoTrackingnn= I
(nnI J
)nnJ K
whereoo $
uuoo% '
.oo' (
Usuariooo( /
==oo0 2
	usuarioIdoo3 <
selectpp %
uupp& (
.pp( )
Unidadepp) 0
)pp0 1
.qq  !
Distinctqq! )
(qq) *
)qq* +
.rr  !
ToListrr! '
(rr' (
)rr( )
;rr) *
returntt 
retornott 
;tt 
}uu 
}vv 	
public|| 
static|| 
IEnumerable|| !
<||! "
Tuple||" '
<||' (
int||( +
,||+ ,
string||- 3
>||3 4
>||4 5
GetRegionais||6 B
(||B C
)||C D
{}} 	
using~~ 
(~~ 
var~~ 
db~~ 
=~~ 
new~~ 
SGQ_GlobalEntities~~  2
(~~2 3
)~~3 4
)~~4 5
{ 
var
ÄÄ 
	regionais
ÄÄ 
=
ÄÄ 
db
ÄÄ  "
.
ÄÄ" #
	Regionais
ÄÄ# ,
.
ÄÄ, -
AsNoTracking
ÄÄ- 9
(
ÄÄ9 :
)
ÄÄ: ;
.
ÄÄ; <
Select
ÄÄ< B
(
ÄÄB C
r
ÄÄC D
=>
ÄÄE G
new
ÄÄH K
{
ÄÄL M

RegionalId
ÄÄN X
=
ÄÄY Z
r
ÄÄ[ \
.
ÄÄ\ ]
Id
ÄÄ] _
,
ÄÄ_ `
Regional
ÄÄa i
=
ÄÄj k
r
ÄÄl m
.
ÄÄm n
Nome
ÄÄn r
}
ÄÄs t
)
ÄÄt u
.
ÄÄu v
ToList
ÄÄv |
(
ÄÄ| }
)
ÄÄ} ~
;
ÄÄ~ 
var
ÇÇ 
retorno
ÇÇ 
=
ÇÇ 
	regionais
ÇÇ '
.
ÇÇ' (
AsEnumerable
ÇÇ( 4
(
ÇÇ4 5
)
ÇÇ5 6
.
ÇÇ6 7
Select
ÇÇ7 =
(
ÇÇ= >
r
ÇÇ> ?
=>
ÇÇ@ B
Tuple
ÇÇC H
.
ÇÇH I
Create
ÇÇI O
(
ÇÇO P
r
ÇÇP Q
.
ÇÇQ R

RegionalId
ÇÇR \
,
ÇÇ\ ]
r
ÇÇ^ _
.
ÇÇ_ `
Regional
ÇÇ` h
)
ÇÇh i
)
ÇÇi j
;
ÇÇj k
return
ÑÑ 
retorno
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
çç 
static
çç 
IEnumerable
çç !
<
çç! "
Tuple
çç" '
<
çç' (
int
çç( +
,
çç+ ,
string
çç- 3
>
çç3 4
>
çç4 5&
GetUnidadesPorRegionalId
çç6 N
(
ççN O
int
ççO R

regionaoId
ççS ]
)
çç] ^
{
éé 	
using
èè 
(
èè 
var
èè 
db
èè 
=
èè 
new
èè  
SGQ_GlobalEntities
èè  2
(
èè2 3
)
èè3 4
)
èè4 5
{
êê 
var
ëë 
unidades
ëë 
=
ëë 
db
ëë !
.
ëë! "
Unidades
ëë" *
.
ëë* +
AsNoTracking
ëë+ 7
(
ëë7 8
)
ëë8 9
.
ëë9 :
Where
ëë: ?
(
ëë? @
u
ëë@ A
=>
ëëB D
u
ëëE F
.
ëëF G
Regional
ëëG O
.
ëëO P
Value
ëëP U
==
ëëV X

regionaoId
ëëY c
)
ëëc d
.
ëëd e
Select
ëëe k
(
ëëk l
u
ëël m
=>
ëën p
new
ëëq t
{
ëëu v
	UnidadeIdëëw Ä
=ëëÅ Ç
uëëÉ Ñ
.ëëÑ Ö
IdëëÖ á
,ëëá à
Unidadeëëâ ê
=ëëë í
uëëì î
.ëëî ï
Siglaëëï ö
}ëëõ ú
)ëëú ù
.ëëù û
ToListëëû §
(ëë§ •
)ëë• ¶
;ëë¶ ß
var
ìì 
retorno
ìì 
=
ìì 
unidades
ìì &
.
ìì& '
AsEnumerable
ìì' 3
(
ìì3 4
)
ìì4 5
.
ìì5 6
Select
ìì6 <
(
ìì< =
u
ìì= >
=>
ìì? A
Tuple
ììB G
.
ììG H
Create
ììH N
(
ììN O
u
ììO P
.
ììP Q
	UnidadeId
ììQ Z
,
ììZ [
u
ìì\ ]
.
ìì] ^
Unidade
ìì^ e
)
ììe f
)
ììf g
;
ììg h
return
ïï 
retorno
ïï 
;
ïï 
}
ññ 
}
óó 	
public
ùù 
static
ùù 
IEnumerable
ùù !
<
ùù! "
Tuple
ùù" '
<
ùù' (
int
ùù( +
,
ùù+ ,
string
ùù- 3
>
ùù3 4
>
ùù4 5
GetUnidades
ùù6 A
(
ùùA B
)
ùùB C
{
ûû 	
using
üü 
(
üü 
var
üü 
db
üü 
=
üü 
new
üü  
SGQ_GlobalEntities
üü  2
(
üü2 3
)
üü3 4
)
üü4 5
{
†† 
var
°° 
unidades
°° 
=
°° 
db
°° !
.
°°! "
Unidades
°°" *
.
°°* +
AsNoTracking
°°+ 7
(
°°7 8
)
°°8 9
.
¢¢ 
Where
¢¢ 
(
¢¢ 
u
¢¢ 
=>
¢¢ 
u
¢¢  !
.
¢¢! "
Ativa
¢¢" '
.
¢¢' (
Value
¢¢( -
)
¢¢- .
.
££ 
Select
££ 
(
££ 
u
££ 
=>
££  
new
££! $
{
§§ 
	UnidadeId
•• !
=
••" #
u
••$ %
.
••% &
Id
••& (
,
••( )
Unidade
¶¶ 
=
¶¶  !
u
¶¶" #
.
¶¶# $
Sigla
¶¶$ )
}
ßß 
)
ßß 
.
®® 
ToList
®® 
(
®® 
)
®® 
.
©© 
AsEnumerable
©© !
(
©©! "
)
©©" #
.
™™ 
Select
™™ 
(
™™ 
u
™™ 
=>
™™  
Tuple
™™! &
.
™™& '
Create
™™' -
(
™™- .
u
™™. /
.
™™/ 0
	UnidadeId
™™0 9
,
™™9 :
u
™™; <
.
™™< =
Unidade
™™= D
)
™™D E
)
™™E F
;
™™F G
return
¨¨ 
unidades
¨¨ 
;
¨¨  
}
≠≠ 
}
ÆÆ 	
public
µµ 
static
µµ 
IEnumerable
µµ !
<
µµ! "
Tuple
µµ" '
<
µµ' (
int
µµ( +
,
µµ+ ,
string
µµ- 3
>
µµ3 4
>
µµ4 5%
GetTarefasPorOperacaoId
µµ6 M
(
µµM N
int
µµN Q

operacaoId
µµR \
)
µµ\ ]
{
∂∂ 	
using
∑∑ 
(
∑∑ 
var
∑∑ 
db
∑∑ 
=
∑∑ 
new
∑∑  
SGQ_GlobalEntities
∑∑  2
(
∑∑2 3
)
∑∑3 4
)
∑∑4 5
{
∏∏ 
var
ππ 
tarefas
ππ 
=
ππ 
db
ππ  
.
ππ  !
Tarefas
ππ! (
.
ππ( )
AsNoTracking
ππ) 5
(
ππ5 6
)
ππ6 7
.
∫∫ 
Where
∫∫ 
(
∫∫ 
t
∫∫ 
=>
∫∫ 
t
∫∫  !
.
∫∫! "
Operacao
∫∫" *
==
∫∫+ -

operacaoId
∫∫. 8
)
∫∫8 9
.
ªª 
Select
ªª 
(
ªª 
t
ªª 
=>
ªª  
new
ªª! $
{
ºº 
TarefaId
ΩΩ  
=
ΩΩ! "
t
ΩΩ# $
.
ΩΩ$ %
Id
ΩΩ% '
,
ΩΩ' (
Tarefa
ææ 
=
ææ  
t
ææ! "
.
ææ" #
Nome
ææ# '
}
øø 
)
øø 
.
¿¿ 
ToList
¿¿ 
(
¿¿ 
)
¿¿ 
.
¡¡ 
AsEnumerable
¡¡ !
(
¡¡! "
)
¡¡" #
.
¬¬ 
Select
¬¬ 
(
¬¬ 
t
¬¬ 
=>
¬¬  
Tuple
¬¬! &
.
¬¬& '
Create
¬¬' -
(
¬¬- .
t
¬¬. /
.
¬¬/ 0
TarefaId
¬¬0 8
,
¬¬8 9
t
¬¬: ;
.
¬¬; <
Tarefa
¬¬< B
)
¬¬B C
)
¬¬C D
.
√√ 
ToList
√√ 
(
√√ 
)
√√ 
;
√√ 
return
≈≈ 
tarefas
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 	
public
ﬂﬂ 
static
ﬂﬂ 
IEnumerable
ﬂﬂ !
<
ﬂﬂ! "
Tuple
ﬂﬂ" '
<
ﬂﬂ' (
int
ﬂﬂ( +
,
ﬂﬂ+ ,
string
ﬂﬂ- 3
>
ﬂﬂ3 4
>
ﬂﬂ4 52
$GetMonitoramentoPorTarefaIdUnidadeId
ﬂﬂ6 Z
(
ﬂﬂZ [
int
ﬂﬂ[ ^
tarefaId
ﬂﬂ_ g
,
ﬂﬂg h
int
ﬂﬂi l
	unidadeId
ﬂﬂm v
)
ﬂﬂv w
{
‡‡ 	
using
·· 
(
·· 
var
·· 
db
·· 
=
·· 
new
··  
SGQ_GlobalEntities
··  2
(
··2 3
)
··3 4
)
··4 5
{
‚‚ 
var
„„ 
monitoramentos
„„ "
=
„„# $
(
„„% &
from
„„& *
tm
„„+ -
in
„„. 0
db
„„1 3
.
„„3 4"
TarefaMonitoramentos
„„4 H
.
„„H I
AsNoTracking
„„I U
(
„„U V
)
„„V W
join
‰‰& *
m
‰‰+ ,
in
‰‰- /
db
‰‰0 2
.
‰‰2 3
Monitoramentos
‰‰3 A
.
‰‰A B
AsNoTracking
‰‰B N
(
‰‰N O
)
‰‰O P
on
‰‰Q S
tm
‰‰T V
.
‰‰V W
Monitoramento
‰‰W d
equals
‰‰e k
m
‰‰l m
.
‰‰m n
Id
‰‰n p
where
ÂÂ& +
tm
ÂÂ, .
.
ÂÂ. /
Tarefa
ÂÂ/ 5
==
ÂÂ6 8
tarefaId
ÂÂ9 A
&&
ÂÂB D
(
ÂÂE F
tm
ÂÂF H
.
ÂÂH I
Unidade
ÂÂI P
.
ÂÂP Q
Value
ÂÂQ V
==
ÂÂW Y
	unidadeId
ÂÂZ c
||
ÂÂd f
!
ÂÂg h
tm
ÂÂh j
.
ÂÂj k
Unidade
ÂÂk r
.
ÂÂr s
HasValue
ÂÂs {
)
ÂÂ{ |
orderby
ÊÊ& -
m
ÊÊ. /
.
ÊÊ/ 0
Nome
ÊÊ0 4
select
ÁÁ& ,
new
ÁÁ- 0
{
ËË& '
MonitoramentoId
ÈÈ* 9
=
ÈÈ: ;
m
ÈÈ< =
.
ÈÈ= >
Id
ÈÈ> @
,
ÈÈ@ A
Monitoramento
ÍÍ* 7
=
ÍÍ8 9
m
ÍÍ: ;
.
ÍÍ; <
Nome
ÍÍ< @
}
ÎÎ& '
)
ÎÎ' (
.
ÏÏ% &
Distinct
ÏÏ& .
(
ÏÏ. /
)
ÏÏ/ 0
.
ÌÌ% &
ToList
ÌÌ& ,
(
ÌÌ, -
)
ÌÌ- .
.
ÓÓ% &
AsEnumerable
ÓÓ& 2
(
ÓÓ2 3
)
ÓÓ3 4
.
ÔÔ% &
Select
ÔÔ& ,
(
ÔÔ, -
m
ÔÔ- .
=>
ÔÔ/ 1
Tuple
ÔÔ2 7
.
ÔÔ7 8
Create
ÔÔ8 >
(
ÔÔ> ?
m
ÔÔ? @
.
ÔÔ@ A
MonitoramentoId
ÔÔA P
,
ÔÔP Q
m
ÔÔR S
.
ÔÔS T
Monitoramento
ÔÔT a
)
ÔÔa b
)
ÔÔb c
.
% &
ToList
& ,
(
, -
)
- .
;
. /
return
ÚÚ 
monitoramentos
ÚÚ %
;
ÚÚ% &
}
ÛÛ 
}
ÙÙ 	
public
˝˝ 
static
˝˝ 
IEnumerable
˝˝ !
<
˝˝! "
Tuple
˝˝" '
<
˝˝' (
string
˝˝( .
,
˝˝. /
int
˝˝0 3
,
˝˝3 4
string
˝˝5 ;
,
˝˝; <
int
˝˝= @
?
˝˝@ A
,
˝˝A B
int
˝˝C F
>
˝˝F G
>
˝˝G H9
+GetAvaliacoesPorUnidadeIdOperacaoIdTarefaId
˝˝I t
(
˝˝t u
int
˝˝u x
	unidadeId˝˝y Ç
,˝˝Ç É
int˝˝Ñ á

operacaoId˝˝à í
,˝˝í ì
int˝˝î ó
tarefaId˝˝ò †
)˝˝† °
{
˛˛ 	
using
ˇˇ 
(
ˇˇ 
var
ˇˇ 
db
ˇˇ 
=
ˇˇ 
new
ˇˇ  
SGQ_GlobalEntities
ˇˇ  2
(
ˇˇ2 3
)
ˇˇ3 4
)
ˇˇ4 5
{
ÄÄ 
var
ÅÅ 

avaliacoes
ÅÅ 
=
ÅÅ  
(
ÅÅ! "
from
ÅÅ" &
a
ÅÅ' (
in
ÅÅ) +
db
ÅÅ, .
.
ÅÅ. /
TarefaAvaliacoes
ÅÅ/ ?
.
ÅÅ? @
AsNoTracking
ÅÅ@ L
(
ÅÅL M
)
ÅÅM N
where
ÇÇ" '
(
ÇÇ( )
a
ÇÇ) *
.
ÇÇ* +
Unidade
ÇÇ+ 2
==
ÇÇ3 5
null
ÇÇ6 :
||
ÇÇ; =
a
ÇÇ> ?
.
ÇÇ? @
Unidade
ÇÇ@ G
==
ÇÇH J
	unidadeId
ÇÇK T
)
ÇÇT U
&&
ÇÇV X
a
ÇÇY Z
.
ÇÇZ [
Operacao
ÇÇ[ c
==
ÇÇd f

operacaoId
ÇÇg q
&&
ÇÇr t
a
ÇÇu v
.
ÇÇv w
Tarefa
ÇÇw }
==ÇÇ~ Ä
tarefaIdÇÇÅ â
orderby
ÉÉ" )
a
ÉÉ* +
.
ÉÉ+ ,
	Avaliacao
ÉÉ, 5
select
ÑÑ" (
new
ÑÑ) ,
{
ÖÖ" #
Departamento
ÜÜ& 2
=
ÜÜ3 4
a
ÜÜ5 6
.
ÜÜ6 7
Departamentos
ÜÜ7 D
.
ÜÜD E
Nome
ÜÜE I
,
ÜÜI J
	Avaliacao
áá& /
=
áá0 1
a
áá2 3
.
áá3 4
	Avaliacao
áá4 =
,
áá= >
Acesso
àà& ,
=
àà- .
a
àà/ 0
.
àà0 1
Acesso
àà1 7
,
àà7 8
Unidade
ââ& -
=
ââ. /
a
ââ0 1
.
ââ1 2
Unidade
ââ2 9
,
ââ9 :
Id
ää& (
=
ää) *
a
ää+ ,
.
ää, -
Id
ää- /
}
ãã" #
)
ãã# $
.
åå! "
ToList
åå" (
(
åå( )
)
åå) *
;
åå* +
var
éé 
retorno
éé 
=
éé 

avaliacoes
éé (
.
éé( )
AsEnumerable
éé) 5
(
éé5 6
)
éé6 7
.
éé7 8
Select
éé8 >
(
éé> ?
a
éé? @
=>
ééA C
Tuple
ééD I
.
ééI J
Create
ééJ P
(
ééP Q
a
ééQ R
.
ééR S
Departamento
ééS _
,
éé_ `
a
ééa b
.
ééb c
	Avaliacao
ééc l
,
éél m
a
één o
.
ééo p
Acesso
éép v
,
éév w
a
ééx y
.
ééy z
Unidadeééz Å
,ééÅ Ç
aééÉ Ñ
.ééÑ Ö
IdééÖ á
)ééá à
)ééà â
;ééâ ä
return
êê 
retorno
êê 
;
êê 
}
ëë 
}
íí 	
public
öö 
static
öö 
IEnumerable
öö !
<
öö! "
Tuple
öö" '
<
öö' (
string
öö( .
,
öö. /
string
öö0 6
,
öö6 7
string
öö8 >
,
öö> ?
string
öö@ F
,
ööF G
string
ööH N
,
ööN O
string
ööP V
,
ööV W
int
ööX [
>
öö[ \
>
öö\ ]2
#GetAvaliacoesEspecificasPorRegionalöö^ Å
(ööÅ Ç
intööÇ Ö
regionalööÜ é
)ööé è
{
õõ 	
using
úú 
(
úú 
var
úú 
db
úú 
=
úú 
new
úú  
SGQ_GlobalEntities
úú  2
(
úú2 3
)
úú3 4
)
úú4 5
{
ùù 
var
üü  
unidadesDaRegional
üü &
=
üü' (
db
üü) +
.
üü+ ,
Unidades
üü, 4
.
üü4 5
AsNoTracking
üü5 A
(
üüA B
)
üüB C
.
üüC D
Where
üüD I
(
üüI J
r
üüJ K
=>
üüL N
r
üüO P
.
üüP Q
Regional
üüQ Y
==
üüZ \
regional
üü] e
)
üüe f
.
üüf g
Select
üüg m
(
üüm n
r
üün o
=>
üüp r
r
üüs t
.
üüt u
Id
üüu w
)
üüw x
;
üüx y
var
°° 

avaliacoes
°° 
=
°°  
(
°°! "
from
°°" &
a
°°' (
in
°°) +
db
°°, .
.
°°. /
TarefaAvaliacoes
°°/ ?
.
°°? @
AsNoTracking
°°@ L
(
°°L M
)
°°M N
where
¢¢" '
(
¢¢( ) 
unidadesDaRegional
¢¢) ;
.
¢¢; <
Any
¢¢< ?
(
¢¢? @
r
¢¢@ A
=>
¢¢B D
r
¢¢E F
==
¢¢G I
a
¢¢J K
.
¢¢K L
Unidade
¢¢L S
)
¢¢S T
||
¢¢U W
a
¢¢X Y
.
¢¢Y Z
Unidade
¢¢Z a
==
¢¢b d
null
¢¢e i
)
¢¢i j
orderby
££" )
a
££* +
.
££+ ,
	Avaliacao
££, 5
select
§§" (
new
§§) ,
{
••" #
Departamento
¶¶& 2
=
¶¶3 4
a
¶¶5 6
.
¶¶6 7
Departamentos
¶¶7 D
.
¶¶D E
Nome
¶¶E I
,
¶¶I J
	Avaliacao
ßß& /
=
ßß0 1
a
ßß2 3
.
ßß3 4
	Avaliacao
ßß4 =
,
ßß= >
Acesso
®®& ,
=
®®- .
a
®®/ 0
.
®®0 1
Acesso
®®1 7
,
®®7 8
Unidade
©©& -
=
©©. /
a
©©0 1
.
©©1 2
Unidades
©©2 :
.
©©: ;
Nome
©©; ?
,
©©? @
Sigla
™™& +
=
™™, -
a
™™. /
.
™™/ 0
Unidades
™™0 8
.
™™8 9
Sigla
™™9 >
,
™™> ?
Operacao
´´& .
=
´´/ 0
a
´´1 2
.
´´2 3
	Operacoes
´´3 <
.
´´< =
Nome
´´= A
,
´´A B
Monitoramento
¨¨& 3
=
¨¨4 5
a
¨¨6 7
.
¨¨7 8
Tarefas
¨¨8 ?
.
¨¨? @
Nome
¨¨@ D
,
¨¨D E
Id
≠≠& (
=
≠≠) *
a
≠≠+ ,
.
≠≠, -
Id
≠≠- /
}
ÆÆ" #
)
ÆÆ# $
.
ØØ! "
Distinct
ØØ" *
(
ØØ* +
)
ØØ+ ,
.
∞∞! "
ToList
∞∞" (
(
∞∞( )
)
∞∞) *
;
∞∞* +
var
≤≤ 
retorno
≤≤ 
=
≤≤ 

avaliacoes
≤≤ (
.
≤≤( )
AsEnumerable
≤≤) 5
(
≤≤5 6
)
≤≤6 7
.
≤≤7 8
Select
≤≤8 >
(
≤≤> ?
a
≤≤? @
=>
≤≤A C
Tuple
≤≤D I
.
≤≤I J
Create
≤≤J P
(
≤≤P Q
a
≤≤Q R
.
≤≤R S
Unidade
≤≤S Z
.
≤≤Z [
	IsNotNull
≤≤[ d
(
≤≤d e
)
≤≤e f
?
≤≤g h
a
≤≤i j
.
≤≤j k
Sigla
≤≤k p
:
≤≤q r
$str
≤≤s y
,
≤≤y z
a
≤≤{ |
.
≤≤| }
Unidade≤≤} Ñ
.≤≤Ñ Ö
	IsNotNull≤≤Ö é
(≤≤é è
)≤≤è ê
?≤≤ë í
a≤≤ì î
.≤≤î ï
Unidade≤≤ï ú
:≤≤ù û
$str≤≤ü ¨
,≤≤¨ ≠
a≤≤Æ Ø
.≤≤Ø ∞
Departamento≤≤∞ º
,≤≤º Ω
a≤≤æ ø
.≤≤ø ¿
Operacao≤≤¿ »
,≤≤» …
a≤≤  À
.≤≤À Ã
Monitoramento≤≤Ã Ÿ
,≤≤Ÿ ⁄
a≤≤€ ‹
.≤≤‹ ›
Acesso≤≤› „
,≤≤„ ‰
a≤≤Â Ê
.≤≤Ê Á
	Avaliacao≤≤Á 
)≤≤ Ò
)≤≤Ò Ú
;≤≤Ú Û
return
¥¥ 
retorno
¥¥ 
;
¥¥ 
}
µµ 
}
∂∂ 	
public
ΩΩ 
static
ΩΩ 
List
ΩΩ 
<
ΩΩ 
Tuple
ΩΩ  
<
ΩΩ  !
string
ΩΩ! '
,
ΩΩ' (
object
ΩΩ) /
,
ΩΩ/ 0
string
ΩΩ1 7
,
ΩΩ7 8
string
ΩΩ9 ?
,
ΩΩ? @
string
ΩΩA G
,
ΩΩG H
string
ΩΩI O
,
ΩΩO P
string
ΩΩQ W
>
ΩΩW X
>
ΩΩX Y$
GetFlagsTarefaRegional
ΩΩZ p
(
ΩΩp q
int
ΩΩq t
regional
ΩΩu }
)
ΩΩ} ~
{
ææ 	
using
øø 
(
øø 
var
øø 
db
øø 
=
øø 
new
øø  
SGQ_GlobalEntities
øø  2
(
øø2 3
)
øø3 4
)
øø4 5
{
¿¿ 
var
¡¡ 
unidades
¡¡ 
=
¡¡ 
db
¡¡ !
.
¡¡! "
Unidades
¡¡" *
.
¡¡* +
AsNoTracking
¡¡+ 7
(
¡¡7 8
)
¡¡8 9
.
¡¡9 :
Where
¡¡: ?
(
¡¡? @
r
¡¡@ A
=>
¡¡B D
r
¡¡E F
.
¡¡F G
Regional
¡¡G O
==
¡¡P R
regional
¡¡S [
)
¡¡[ \
;
¡¡\ ]
var
√√ 
temp
√√ 
=
√√ 
db
√√ 
.
√√ "
TarefaMonitoramentos
√√ 2
.
√√2 3
AsNoTracking
√√3 ?
(
√√? @
)
√√@ A
.
√√A B
Where
√√B G
(
√√G H
r
√√H I
=>
√√J L
r
√√M N
.
√√N O
Unidade
√√O V
==
√√W Y
null
√√Z ^
||
√√_ a
unidades
√√b j
.
√√j k
Any
√√k n
(
√√n o
c
√√o p
=>
√√q s
c
√√t u
.
√√u v
Id
√√v x
==
√√y {
r
√√| }
.
√√} ~
Unidade√√~ Ö
)√√Ö Ü
)√√Ü á
.√√á à
Select√√à é
(√√é è
r√√è ê
=>√√ë ì
new√√î ó
{√√ò ô
r√√ö õ
.√√õ ú
Unidades√√ú §
,√√§ •
r√√¶ ß
.√√ß ®
Monitoramentos√√® ∂
,√√∂ ∑
r√√∏ π
.√√π ∫
Tarefa√√∫ ¿
,√√¿ ¡
r√√¬ √
.√√√ ƒ
Unidade√√ƒ À
,√√À Ã
r√√Õ Œ
.√√Œ œ
Tarefas√√œ ÷
}√√◊ ÿ
)√√ÿ Ÿ
.√√Ÿ ⁄
Distinct√√⁄ ‚
(√√‚ „
)√√„ ‰
;√√‰ Â
var
∆∆ 
retorno
∆∆ 
=
∆∆ 
new
∆∆ !
List
∆∆" &
<
∆∆& '
Tuple
∆∆' ,
<
∆∆, -
string
∆∆- 3
,
∆∆3 4
object
∆∆5 ;
,
∆∆; <
string
∆∆= C
,
∆∆C D
string
∆∆E K
,
∆∆K L
string
∆∆M S
,
∆∆S T
string
∆∆U [
,
∆∆[ \
string
∆∆] c
>
∆∆c d
>
∆∆d e
(
∆∆e f
)
∆∆f g
;
∆∆g h
var
«« 
flagsDb
«« 
=
«« 
db
««  
.
««  !
Tarefas
««! (
.
««( )
AsNoTracking
««) 5
(
««5 6
)
««6 7
.
««7 8
Where
««8 =
(
««= >
r
««> ?
=>
««@ B
temp
««C G
.
««G H
Any
««H K
(
««K L
c
««L M
=>
««N P
c
««Q R
.
««R S
Tarefa
««S Y
==
««Z \
r
««] ^
.
««^ _
Id
««_ a
)
««a b
)
««b c
.
««c d
Select
…… #
(
……# $
t
……$ %
=>
……& (
new
……) ,
{
   

Amostragem
ÀÀ! +
=
ÀÀ, -
t
ÀÀ. /
.
ÀÀ/ 0

Amostragem
ÀÀ0 :
,
ÀÀ: ;
Departamento
ÃÃ! -
=
ÃÃ. /
t
ÃÃ0 1
.
ÃÃ1 2
Departamento
ÃÃ2 >
.
ÃÃ> ?
HasValue
ÃÃ? G
?
ÃÃH I
t
ÃÃJ K
.
ÃÃK L
Departamentos
ÃÃL Y
.
ÃÃY Z
Nome
ÃÃZ ^
:
ÃÃ_ `
string
ÃÃa g
.
ÃÃg h
Empty
ÃÃh m
,
ÃÃm n

Frequencia
ÕÕ! +
=
ÕÕ, -
t
ÕÕ. /
.
ÕÕ/ 0

Frequencia
ÕÕ0 :
,
ÕÕ: ;
Vigencia
ŒŒ! )
=
ŒŒ* +
t
ŒŒ, -
.
ŒŒ- .
Vigencia
ŒŒ. 6
,
ŒŒ6 7
Produto
œœ! (
=
œœ) *
t
œœ+ ,
.
œœ, -
Produto
œœ- 4
.
œœ4 5
HasValue
œœ5 =
?
œœ> ?
t
œœ@ A
.
œœA B
Produtos
œœB J
.
œœJ K
Nome
œœK O
:
œœP Q
string
œœR X
.
œœX Y
Empty
œœY ^
,
œœ^ _
EditarAcesso
––! -
=
––. /
t
––0 1
.
––1 2
EditarAcesso
––2 >
,
––> ?
ExibirAcesso
——! -
=
——. /
t
——0 1
.
——1 2
ExibirAcesso
——2 >
,
——> ?
FormaAmostragem
““! 0
=
““1 2
t
““3 4
.
““4 5
FormaAmostragem
““5 D
,
““D E
AvaliarProdutos
””! 0
=
””1 2
t
””3 4
.
””4 5
AvaliarProdutos
””5 D
,
””D E
InformarPesagem
‘‘! 0
=
‘‘1 2
t
‘‘3 4
.
‘‘4 5
InformarPesagem
‘‘5 D
,
‘‘D E

Sequencial
’’! +
=
’’, -
t
’’. /
.
’’/ 0

Sequencial
’’0 :
,
’’: ;
Sigla
÷÷! &
=
÷÷' (
temp
÷÷) -
.
÷÷- .
Where
÷÷. 3
(
÷÷3 4
r
÷÷4 5
=>
÷÷6 8
r
÷÷9 :
.
÷÷: ;
Tarefa
÷÷; A
==
÷÷B D
t
÷÷E F
.
÷÷F G
Id
÷÷G I
)
÷÷I J
.
÷÷J K
FirstOrDefault
÷÷K Y
(
÷÷Y Z
)
÷÷Z [
.
÷÷[ \
Unidades
÷÷\ d
.
÷÷d e
Sigla
÷÷e j
,
÷÷j k
Unidade
◊◊! (
=
◊◊) *
temp
◊◊+ /
.
◊◊/ 0
Where
◊◊0 5
(
◊◊5 6
r
◊◊6 7
=>
◊◊8 :
r
◊◊; <
.
◊◊< =
Tarefa
◊◊= C
==
◊◊D F
t
◊◊G H
.
◊◊H I
Id
◊◊I K
)
◊◊K L
.
◊◊L M
FirstOrDefault
◊◊M [
(
◊◊[ \
)
◊◊\ ]
.
◊◊] ^
Unidades
◊◊^ f
.
◊◊f g
Nome
◊◊g k
,
◊◊k l
Monitoramento
ÿÿ! .
=
ÿÿ/ 0
temp
ÿÿ1 5
.
ÿÿ5 6
Where
ÿÿ6 ;
(
ÿÿ; <
r
ÿÿ< =
=>
ÿÿ> @
r
ÿÿA B
.
ÿÿB C
Tarefa
ÿÿC I
==
ÿÿJ L
t
ÿÿM N
.
ÿÿN O
Id
ÿÿO Q
)
ÿÿQ R
.
ÿÿR S
FirstOrDefault
ÿÿS a
(
ÿÿa b
)
ÿÿb c
.
ÿÿc d
Monitoramentos
ÿÿd r
.
ÿÿr s
Nome
ÿÿs w
,
ÿÿw x
Tarefa
ŸŸ! '
=
ŸŸ( )
temp
ŸŸ* .
.
ŸŸ. /
Where
ŸŸ/ 4
(
ŸŸ4 5
r
ŸŸ5 6
=>
ŸŸ7 9
r
ŸŸ: ;
.
ŸŸ; <
Tarefa
ŸŸ< B
==
ŸŸC E
t
ŸŸF G
.
ŸŸG H
Id
ŸŸH J
)
ŸŸJ K
.
ŸŸK L
FirstOrDefault
ŸŸL Z
(
ŸŸZ [
)
ŸŸ[ \
.
ŸŸ\ ]
Tarefas
ŸŸ] d
.
ŸŸd e
Nome
ŸŸe i
,
ŸŸi j
}
⁄⁄ 
)
⁄⁄ 
.
€€ 
Distinct
€€ &
(
€€& '
)
€€' (
.
‹‹ 
ToList
‹‹ $
(
‹‹$ %
)
‹‹% &
;
‹‹& '
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
flags
ﬁﬁ "
in
ﬁﬁ# %
flagsDb
ﬁﬁ& -
)
ﬁﬁ- .
{
ﬂﬂ 
foreach
‡‡ 
(
‡‡ 
var
‡‡  
prop
‡‡! %
in
‡‡& (
flags
‡‡) .
.
‡‡. /
GetType
‡‡/ 6
(
‡‡6 7
)
‡‡7 8
.
‡‡8 9
GetProperties
‡‡9 F
(
‡‡F G
)
‡‡G H
)
‡‡H I
{
·· 
retorno
‚‚ 
.
‚‚  
Add
‚‚  #
(
‚‚# $
Tuple
‚‚$ )
.
‚‚) *
Create
‚‚* 0
(
‚‚0 1
flags
‚‚1 6
.
‚‚6 7
Unidade
‚‚7 >
.
‚‚> ?
	IsNotNull
‚‚? H
(
‚‚H I
)
‚‚I J
?
‚‚K L
flags
‚‚M R
.
‚‚R S
Sigla
‚‚S X
:
‚‚Y Z
$str
‚‚[ a
,
‚‚a b
prop
‚‚c g
.
‚‚g h
GetValue
‚‚h p
(
‚‚p q
flags
‚‚q v
,
‚‚v w
null
‚‚x |
)
‚‚| }
,
‚‚} ~
(‚‚ Ä
prop‚‚Ä Ñ
.‚‚Ñ Ö
PropertyType‚‚Ö ë
.‚‚ë í
IsGenericType‚‚í ü
&&‚‚† ¢
prop‚‚£ ß
.‚‚ß ®
PropertyType‚‚® ¥
.‚‚¥ µ(
GetGenericTypeDefinition‚‚µ Õ
(‚‚Õ Œ
)‚‚Œ œ
==‚‚– “
typeof‚‚” Ÿ
(‚‚Ÿ ⁄
Nullable‚‚⁄ ‚
<‚‚‚ „
>‚‚„ ‰
)‚‚‰ Â
)‚‚Â Ê
?‚‚Á Ë
Nullable‚‚È Ò
.‚‚Ò Ú!
GetUnderlyingType‚‚Ú É
(‚‚É Ñ
prop‚‚Ñ à
.‚‚à â
PropertyType‚‚â ï
)‚‚ï ñ
.‚‚ñ ó
Name‚‚ó õ
:‚‚ú ù
prop‚‚û ¢
.‚‚¢ £
PropertyType‚‚£ Ø
.‚‚Ø ∞
Name‚‚∞ ¥
,‚‚¥ µ
prop‚‚∂ ∫
.‚‚∫ ª
Name‚‚ª ø
,‚‚ø ¿
flags‚‚¡ ∆
.‚‚∆ «
Unidade‚‚« Œ
.‚‚Œ œ
	IsNotNull‚‚œ ÿ
(‚‚ÿ Ÿ
)‚‚Ÿ ⁄
?‚‚€ ‹
flags‚‚› ‚
.‚‚‚ „
Unidade‚‚„ Í
:‚‚Î Ï
$str‚‚Ì ˙
,‚‚˙ ˚
flags‚‚¸ Å
.‚‚Å Ç
Tarefa‚‚Ç à
,‚‚à â
flags‚‚ä è
.‚‚è ê
Monitoramento‚‚ê ù
)‚‚ù û
)‚‚û ü
;‚‚ü †
}
„„ 
}
‰‰ 
return
ÊÊ 
retorno
ÊÊ 
;
ÊÊ 
}
ÁÁ 
}
ËË 	
public
ÔÔ 
static
ÔÔ 
List
ÔÔ 
<
ÔÔ 
Tuple
ÔÔ  
<
ÔÔ  !
string
ÔÔ! '
,
ÔÔ' (
string
ÔÔ) /
,
ÔÔ/ 0
object
ÔÔ1 7
,
ÔÔ7 8
string
ÔÔ9 ?
,
ÔÔ? @
string
ÔÔA G
,
ÔÔG H
string
ÔÔI O
,
ÔÔO P
string
ÔÔQ W
>
ÔÔW X
>
ÔÔX Y&
GetFlagsOperacaoRegional
ÔÔZ r
(
ÔÔr s
int
ÔÔs v
regional
ÔÔw 
)ÔÔ Ä
{
 	
using
ÒÒ 
(
ÒÒ 
var
ÒÒ 
db
ÒÒ 
=
ÒÒ 
new
ÒÒ  
SGQ_GlobalEntities
ÒÒ  2
(
ÒÒ2 3
)
ÒÒ3 4
)
ÒÒ4 5
{
ÚÚ 
var
ÛÛ 
unidades
ÛÛ 
=
ÛÛ 
db
ÛÛ !
.
ÛÛ! "
Unidades
ÛÛ" *
.
ÛÛ* +
AsNoTracking
ÛÛ+ 7
(
ÛÛ7 8
)
ÛÛ8 9
.
ÛÛ9 :
Where
ÛÛ: ?
(
ÛÛ? @
r
ÛÛ@ A
=>
ÛÛB D
r
ÛÛE F
.
ÛÛF G
Regional
ÛÛG O
==
ÛÛP R
regional
ÛÛS [
)
ÛÛ[ \
;
ÛÛ\ ]
var
ÙÙ 
tarMon
ÙÙ 
=
ÙÙ 
db
ÙÙ 
.
ÙÙ  
TarefaAvaliacoes
ÙÙ  0
.
ÙÙ0 1
AsNoTracking
ÙÙ1 =
(
ÙÙ= >
)
ÙÙ> ?
.
ÙÙ? @
Where
ÙÙ@ E
(
ÙÙE F
r
ÙÙF G
=>
ÙÙH J
r
ÙÙK L
.
ÙÙL M
Unidade
ÙÙM T
==
ÙÙU W
null
ÙÙX \
||
ÙÙ] _
unidades
ÙÙ` h
.
ÙÙh i
Any
ÙÙi l
(
ÙÙl m
c
ÙÙm n
=>
ÙÙo q
c
ÙÙr s
.
ÙÙs t
Id
ÙÙt v
==
ÙÙw y
r
ÙÙz {
.
ÙÙ{ |
UnidadeÙÙ| É
)ÙÙÉ Ñ
)ÙÙÑ Ö
.ÙÙÖ Ü
DistinctÙÙÜ é
(ÙÙé è
)ÙÙè ê
;ÙÙê ë
var
ıı 
retorno
ıı 
=
ıı 
new
ıı !
List
ıı" &
<
ıı& '
Tuple
ıı' ,
<
ıı, -
string
ıı- 3
,
ıı3 4
string
ıı5 ;
,
ıı; <
object
ıı= C
,
ııC D
string
ııE K
,
ııK L
string
ııM S
,
ııS T
string
ııU [
,
ıı[ \
string
ıı] c
>
ııc d
>
ııd e
(
ııe f
)
ııf g
;
ııg h
var
ˆˆ 
flagsDb
ˆˆ 
=
ˆˆ 
db
ˆˆ  
.
ˆˆ  !
	Operacoes
ˆˆ! *
.
ˆˆ* +
AsNoTracking
ˆˆ+ 7
(
ˆˆ7 8
)
ˆˆ8 9
.
ˆˆ9 :
Where
ˆˆ: ?
(
ˆˆ? @
r
ˆˆ@ A
=>
ˆˆB D
tarMon
ˆˆE K
.
ˆˆK L
Any
ˆˆL O
(
ˆˆO P
c
ˆˆP Q
=>
ˆˆR T
c
ˆˆU V
.
ˆˆV W
Operacao
ˆˆW _
==
ˆˆ` b
r
ˆˆc d
.
ˆˆd e
Id
ˆˆe g
)
ˆˆg h
)
ˆˆh i
.
ˆˆi j
Select
ˆˆj p
(
ˆˆp q
o
ˆˆq r
=>
ˆˆs u
new
ˆˆv y
{
˜˜ 
Sigla
˘˘ 
=
˘˘ 
tarMon
˘˘ "
.
˘˘" #
Where
˘˘# (
(
˘˘( )
r
˘˘) *
=>
˘˘+ -
r
˘˘. /
.
˘˘/ 0
	Operacoes
˘˘0 9
.
˘˘9 :
Id
˘˘: <
==
˘˘= ?
o
˘˘@ A
.
˘˘A B
Id
˘˘B D
)
˘˘D E
.
˘˘E F
FirstOrDefault
˘˘F T
(
˘˘T U
)
˘˘U V
.
˘˘V W
Unidades
˘˘W _
.
˘˘_ `
Sigla
˘˘` e
,
˘˘e f
Nivel
˙˙ 
=
˙˙ 
o
˙˙ 
.
˙˙ 
Nivel
˙˙ #
,
˙˙# $

Frequencia
˚˚ 
=
˚˚  
o
˚˚! "
.
˚˚" #

Frequencia
˚˚# -
,
˚˚- .
FrequenciaAlerta
¸¸ $
=
¸¸% &
o
¸¸' (
.
¸¸( )
FrequenciaAlerta
¸¸) 9
,
¸¸9 :
Vigencia
˝˝ 
=
˝˝ 
o
˝˝  
.
˝˝  !
Vigencia
˝˝! )
,
˝˝) *

ControleVP
˛˛ 
=
˛˛  
o
˛˛! "
.
˛˛" #

ControleVP
˛˛# -
,
˛˛- .

ControleFP
ˇˇ 
=
ˇˇ  
o
ˇˇ! "
.
ˇˇ" #

ControleFP
ˇˇ# -
,
ˇˇ- .
AdCampoVazio
ÄÄ  
=
ÄÄ! "
o
ÄÄ# $
.
ÄÄ$ %
ADCAMPOVAZIO
ÄÄ% 1
,
ÄÄ1 2!
AvaliarEquipamentos
ÅÅ '
=
ÅÅ( )
o
ÅÅ* +
.
ÅÅ+ ,!
AvaliarEquipamentos
ÅÅ, ?
,
ÅÅ? @
AvaliarCamaras
ÇÇ "
=
ÇÇ# $
o
ÇÇ% &
.
ÇÇ& '
AvaliarCamaras
ÇÇ' 5
,
ÇÇ5 6

Especifico
ÉÉ 
=
ÉÉ  
o
ÉÉ! "
.
ÉÉ" #

Especifico
ÉÉ# -
,
ÉÉ- .
AlterarAmostra
ÑÑ "
=
ÑÑ# $
o
ÑÑ% &
.
ÑÑ& '
AlterarAmostra
ÑÑ' 5
,
ÑÑ5 6
IncluirTarefa
ÖÖ !
=
ÖÖ" #
o
ÖÖ$ %
.
ÖÖ% &
IncluirTarefa
ÖÖ& 3
,
ÖÖ3 4
IncluirAvaliacao
ÜÜ $
=
ÜÜ% &
o
ÜÜ' (
.
ÜÜ( )
IncluirAvaliacao
ÜÜ) 9
,
ÜÜ9 :
ExibirPColeta
áá !
=
áá" #
o
áá$ %
.
áá% &
ExibirPColeta
áá& 3
,
áá3 4

PadraoPerc
àà 
=
àà  
o
àà! "
.
àà" #

PadraoPerc
àà# -
,
àà- .
AvaliarSequencial
ââ %
=
ââ& '
o
ââ( )
.
ââ) *
AvaliarSequencial
ââ* ;
,
ââ; <
Criterio
ää 
=
ää 
o
ää  
.
ää  !
Criterio
ää! )
,
ää) *

ExibirData
ãã 
=
ãã  
o
ãã! "
.
ãã" #

ExibirData
ãã# -
,
ãã- .
EmitirAlerta
åå  
=
åå! "
o
åå# $
.
åå$ %
EmitirAlerta
åå% 1
,
åå1 2!
ControlarAvaliacoes
çç '
=
çç( )
o
çç* +
.
çç+ ,!
ControlarAvaliacoes
çç, ?
,
çç? @
Unidade
éé 
=
éé 
tarMon
éé $
.
éé$ %
Where
éé% *
(
éé* +
r
éé+ ,
=>
éé- /
r
éé0 1
.
éé1 2
	Operacoes
éé2 ;
.
éé; <
Id
éé< >
==
éé? A
o
ééB C
.
ééC D
Id
ééD F
)
ééF G
.
ééG H
FirstOrDefault
ééH V
(
ééV W
)
ééW X
.
ééX Y
Unidades
ééY a
.
ééa b
Nome
ééb f
,
ééf g
	Indicador
èè 
=
èè 
tarMon
èè  &
.
èè& '
Where
èè' ,
(
èè, -
r
èè- .
=>
èè/ 1
r
èè2 3
.
èè3 4
	Operacoes
èè4 =
.
èè= >
Id
èè> @
==
èèA C
o
èèD E
.
èèE F
Id
èèF H
)
èèH I
.
èèI J
FirstOrDefault
èèJ X
(
èèX Y
)
èèY Z
.
èèZ [
Tarefas
èè[ b
.
èèb c
Nome
èèc g
,
èèg h
Departamento
êê  
=
êê! "
tarMon
êê# )
.
êê) *
Where
êê* /
(
êê/ 0
r
êê0 1
=>
êê2 4
r
êê5 6
.
êê6 7
	Operacoes
êê7 @
.
êê@ A
Id
êêA C
==
êêD F
o
êêG H
.
êêH I
Id
êêI K
)
êêK L
.
êêL M
FirstOrDefault
êêM [
(
êê[ \
)
êê\ ]
.
êê] ^
Departamentos
êê^ k
.
êêk l
Nome
êêl p
,
êêp q
}
ëë 
)
ëë 
.
ëë 
Distinct
ëë 
(
ëë 
)
ëë 
.
ëë 
ToList
ëë $
(
ëë$ %
)
ëë% &
;
ëë& '
foreach
ìì 
(
ìì 
var
ìì 
flags
ìì "
in
ìì# %
flagsDb
ìì& -
)
ìì- .
{
îî 
foreach
ïï 
(
ïï 
var
ïï  
prop
ïï! %
in
ïï& (
flags
ïï) .
.
ïï. /
GetType
ïï/ 6
(
ïï6 7
)
ïï7 8
.
ïï8 9
GetProperties
ïï9 F
(
ïïF G
)
ïïG H
)
ïïH I
{
ññ 
retorno
óó 
.
óó  
Add
óó  #
(
óó# $
Tuple
óó$ )
.
óó) *
Create
óó* 0
(
óó0 1
flags
óó1 6
.
óó6 7
Unidade
óó7 >
.
óó> ?
	IsNotNull
óó? H
(
óóH I
)
óóI J
?
óóK L
flags
óóM R
.
óóR S
Sigla
óóS X
:
óóY Z
$str
óó[ a
,
óóa b
prop
óóc g
.
óóg h
Name
óóh l
,
óól m
prop
óón r
.
óór s
GetValue
óós {
(
óó{ |
flagsóó| Å
,óóÅ Ç
nullóóÉ á
)óóá à
,óóà â
(óóä ã
propóóã è
.óóè ê
PropertyTypeóóê ú
.óóú ù
IsGenericTypeóóù ™
&&óó´ ≠
propóóÆ ≤
.óó≤ ≥
PropertyTypeóó≥ ø
.óóø ¿(
GetGenericTypeDefinitionóó¿ ÿ
(óóÿ Ÿ
)óóŸ ⁄
==óó€ ›
typeofóóﬁ ‰
(óó‰ Â
NullableóóÂ Ì
<óóÌ Ó
>óóÓ Ô
)óóÔ 
)óó Ò
?óóÚ Û
NullableóóÙ ¸
.óó¸ ˝!
GetUnderlyingTypeóó˝ é
(óóé è
propóóè ì
.óóì î
PropertyTypeóóî †
)óó† °
.óó° ¢
Nameóó¢ ¶
:óóß ®
propóó© ≠
.óó≠ Æ
PropertyTypeóóÆ ∫
.óó∫ ª
Nameóóª ø
,óóø ¿
flagsóó¡ ∆
.óó∆ «
Unidadeóó« Œ
.óóŒ œ
	IsNotNullóóœ ÿ
(óóÿ Ÿ
)óóŸ ⁄
?óó€ ‹
flagsóó› ‚
.óó‚ „
Unidadeóó„ Í
:óóÎ Ï
$stróóÌ ˙
,óó˙ ˚
flagsóó¸ Å
.óóÅ Ç
	IndicadoróóÇ ã
,óóã å
flagsóóç í
.óóí ì
Departamentoóóì ü
)óóü †
)óó† °
;óó° ¢
}
òò 
}
ôô 
return
õõ 
retorno
õõ 
;
õõ 
}
úú 
}
ùù 	
public
   
static
   
IEnumerable
   !
<
  ! "
Tuple
  " '
<
  ' (
string
  ( .
,
  . /
string
  0 6
,
  6 7
int
  8 ;
,
  ; <
string
  = C
,
  C D
int
  E H
?
  H I
,
  I J
int
  K N
>
  N O
>
  O P1
#GetAvaliacoesPorUnidadeIdOperacaoId
  Q t
(
  t u
int
  u x
	unidadeId  y Ç
,  Ç É
int  Ñ á

operacaoId  à í
)  í ì
{
ÀÀ 	
using
ÃÃ 
(
ÃÃ 
var
ÃÃ 
db
ÃÃ 
=
ÃÃ 
new
ÃÃ  
SGQ_GlobalEntities
ÃÃ  2
(
ÃÃ2 3
)
ÃÃ3 4
)
ÃÃ4 5
{
ÕÕ 
var
ŒŒ 

avaliacoes
ŒŒ 
=
ŒŒ  
(
ŒŒ! "
from
ŒŒ" &
a
ŒŒ' (
in
ŒŒ) +
db
ŒŒ, .
.
ŒŒ. /
TarefaAvaliacoes
ŒŒ/ ?
.
ŒŒ? @
AsNoTracking
ŒŒ@ L
(
ŒŒL M
)
ŒŒM N
where
œœ" '
(
œœ( )
a
œœ) *
.
œœ* +
Unidade
œœ+ 2
!=
œœ3 5
null
œœ6 :
&&
œœ; =
a
œœ> ?
.
œœ? @
Unidade
œœ@ G
==
œœH J
	unidadeId
œœK T
)
œœT U
&&
œœV X
a
œœY Z
.
œœZ [
Operacao
œœ[ c
==
œœd f

operacaoId
œœg q
orderby
––" )
a
––* +
.
––+ ,
	Avaliacao
––, 5
select
——" (
new
——) ,
{
““" #
Tarefa
””& ,
=
””- .
a
””/ 0
.
””0 1
Tarefas
””1 8
.
””8 9
Nome
””9 =
,
””= >
Departamento
‘‘& 2
=
‘‘3 4
a
‘‘5 6
.
‘‘6 7
Departamentos
‘‘7 D
.
‘‘D E
Nome
‘‘E I
,
‘‘I J
	Avaliacao
’’& /
=
’’0 1
a
’’2 3
.
’’3 4
	Avaliacao
’’4 =
,
’’= >
Acesso
÷÷& ,
=
÷÷- .
a
÷÷/ 0
.
÷÷0 1
Acesso
÷÷1 7
,
÷÷7 8
Unidade
◊◊& -
=
◊◊. /
a
◊◊0 1
.
◊◊1 2
Unidade
◊◊2 9
,
◊◊9 :
Id
ÿÿ& (
=
ÿÿ) *
a
ÿÿ+ ,
.
ÿÿ, -
Id
ÿÿ- /
}
ŸŸ" #
)
ŸŸ# $
.
⁄⁄! "
ToList
⁄⁄" (
(
⁄⁄( )
)
⁄⁄) *
;
⁄⁄* +
var
‹‹ 
retorno
‹‹ 
=
‹‹ 

avaliacoes
‹‹ (
.
‹‹( )
AsEnumerable
‹‹) 5
(
‹‹5 6
)
‹‹6 7
.
‹‹7 8
Select
‹‹8 >
(
‹‹> ?
a
‹‹? @
=>
‹‹A C
Tuple
‹‹D I
.
‹‹I J
Create
‹‹J P
(
‹‹P Q
a
‹‹Q R
.
‹‹R S
Departamento
‹‹S _
,
‹‹_ `
a
‹‹a b
.
‹‹b c
Tarefa
‹‹c i
,
‹‹i j
a
‹‹k l
.
‹‹l m
	Avaliacao
‹‹m v
,
‹‹v w
a
‹‹x y
.
‹‹y z
Acesso‹‹z Ä
,‹‹Ä Å
a‹‹Ç É
.‹‹É Ñ
Unidade‹‹Ñ ã
,‹‹ã å
a‹‹ç é
.‹‹é è
Id‹‹è ë
)‹‹ë í
)‹‹í ì
;‹‹ì î
return
ﬁﬁ 
retorno
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 	
public
ÈÈ 
static
ÈÈ 
IEnumerable
ÈÈ !
<
ÈÈ! "
Tuple
ÈÈ" '
<
ÈÈ' (
string
ÈÈ( .
,
ÈÈ. /
string
ÈÈ0 6
,
ÈÈ6 7
string
ÈÈ8 >
,
ÈÈ> ?
int
ÈÈ@ C
,
ÈÈC D
string
ÈÈE K
,
ÈÈK L
int
ÈÈM P
?
ÈÈP Q
,
ÈÈQ R
int
ÈÈS V
>
ÈÈV W
>
ÈÈW X
GetAvaliacoes
ÈÈY f
(
ÈÈf g
int
ÈÈg j
regional
ÈÈk s
)
ÈÈs t
{
ÍÍ 	
using
ÎÎ 
(
ÎÎ 
var
ÎÎ 
db
ÎÎ 
=
ÎÎ 
new
ÎÎ  
SGQ_GlobalEntities
ÎÎ  2
(
ÎÎ2 3
)
ÎÎ3 4
)
ÎÎ4 5
{
ÏÏ 
var
ÓÓ 
unidades
ÓÓ 
=
ÓÓ 
db
ÓÓ !
.
ÓÓ! "
Unidades
ÓÓ" *
.
ÓÓ* +
Where
ÓÓ+ 0
(
ÓÓ0 1
r
ÓÓ1 2
=>
ÓÓ3 5
r
ÓÓ6 7
.
ÓÓ7 8
Regional
ÓÓ8 @
==
ÓÓA C
regional
ÓÓD L
)
ÓÓL M
.
ÓÓM N
ToList
ÓÓN T
(
ÓÓT U
)
ÓÓU V
;
ÓÓV W
var
 

avaliacoes
 
=
  
(
! "
from
" &
a
' (
in
) +
db
, .
.
. /
TarefaAvaliacoes
/ ?
where
ÒÒ" '
(
ÒÒ( )
a
ÒÒ) *
.
ÒÒ* +
Unidade
ÒÒ+ 2
!=
ÒÒ3 5
null
ÒÒ6 :
&&
ÒÒ; =
unidades
ÒÒ> F
.
ÒÒF G
Any
ÒÒG J
(
ÒÒJ K
c
ÒÒK L
=>
ÒÒM O
c
ÒÒP Q
.
ÒÒQ R
Id
ÒÒR T
==
ÒÒU W
a
ÒÒX Y
.
ÒÒY Z
Unidade
ÒÒZ a
)
ÒÒa b
)
ÒÒb c
orderby
ÚÚ" )
a
ÚÚ* +
.
ÚÚ+ ,
	Avaliacao
ÚÚ, 5
select
ÛÛ" (
new
ÛÛ) ,
{
ÙÙ" #
Tarefa
ıı& ,
=
ıı- .
a
ıı/ 0
.
ıı0 1
Tarefas
ıı1 8
.
ıı8 9
Nome
ıı9 =
,
ıı= >
Operacao
ˆˆ& .
=
ˆˆ/ 0
a
ˆˆ1 2
.
ˆˆ2 3
	Operacoes
ˆˆ3 <
.
ˆˆ< =
Nome
ˆˆ= A
,
ˆˆA B
Departamento
˜˜& 2
=
˜˜3 4
a
˜˜5 6
.
˜˜6 7
Departamentos
˜˜7 D
.
˜˜D E
Nome
˜˜E I
,
˜˜I J
	Avaliacao
¯¯& /
=
¯¯0 1
a
¯¯2 3
.
¯¯3 4
	Avaliacao
¯¯4 =
,
¯¯= >
Acesso
˘˘& ,
=
˘˘- .
a
˘˘/ 0
.
˘˘0 1
Acesso
˘˘1 7
,
˘˘7 8
Unidade
˙˙& -
=
˙˙. /
a
˙˙0 1
.
˙˙1 2
Unidade
˙˙2 9
,
˙˙9 :
Id
˚˚& (
=
˚˚) *
a
˚˚+ ,
.
˚˚, -
Id
˚˚- /
}
¸¸" #
)
¸¸# $
.
˝˝! "
ToList
˝˝" (
(
˝˝( )
)
˝˝) *
;
˝˝* +
var
ˇˇ 
retorno
ˇˇ 
=
ˇˇ 

avaliacoes
ˇˇ (
.
ˇˇ( )
AsEnumerable
ˇˇ) 5
(
ˇˇ5 6
)
ˇˇ6 7
.
ˇˇ7 8
Select
ˇˇ8 >
(
ˇˇ> ?
a
ˇˇ? @
=>
ˇˇA C
Tuple
ˇˇD I
.
ˇˇI J
Create
ˇˇJ P
(
ˇˇP Q
a
ˇˇQ R
.
ˇˇR S
Departamento
ˇˇS _
,
ˇˇ_ `
a
ˇˇa b
.
ˇˇb c
Operacao
ˇˇc k
,
ˇˇk l
a
ˇˇm n
.
ˇˇn o
Tarefa
ˇˇo u
,
ˇˇu v
a
ˇˇw x
.
ˇˇx y
	Avaliacaoˇˇy Ç
,ˇˇÇ É
aˇˇÑ Ö
.ˇˇÖ Ü
AcessoˇˇÜ å
,ˇˇå ç
aˇˇé è
.ˇˇè ê
Unidadeˇˇê ó
,ˇˇó ò
aˇˇô ö
.ˇˇö õ
Idˇˇõ ù
)ˇˇù û
)ˇˇû ü
;ˇˇü †
return
ÅÅ 
retorno
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
public
éé 
static
éé 
IEnumerable
éé !
<
éé! "
Tuple
éé" '
<
éé' (
string
éé( .
,
éé. /
int
éé0 3
,
éé3 4
string
éé5 ;
,
éé; <
int
éé= @
?
éé@ A
,
ééA B
int
ééC F
>
ééF G
>
ééG HD
6GetAvaliacoesPorUnidadeEspecificasIdOperacaoIdTarefaId
ééI 
(éé Ä
intééÄ É
	unidadeIdééÑ ç
,ééç é
intééè í

operacaoIdééì ù
,ééù û
intééü ¢
tarefaIdéé£ ´
)éé´ ¨
{
èè 	
using
êê 
(
êê 
var
êê 
db
êê 
=
êê 
new
êê  
SGQ_GlobalEntities
êê  2
(
êê2 3
)
êê3 4
)
êê4 5
{
ëë 
var
íí 

avaliacoes
íí 
=
íí  
(
íí! "
from
íí" &
a
íí' (
in
íí) +
db
íí, .
.
íí. /
TarefaAvaliacoes
íí/ ?
where
ìì" '
(
ìì( )
a
ìì) *
.
ìì* +
Unidade
ìì+ 2
!=
ìì3 5
null
ìì6 :
||
ìì; =
a
ìì> ?
.
ìì? @
Unidade
ìì@ G
==
ììH J
	unidadeId
ììK T
)
ììT U
&&
ììV X
a
ììY Z
.
ììZ [
Operacao
ìì[ c
==
ììd f

operacaoId
ììg q
&&
ììr t
a
ììu v
.
ììv w
Tarefa
ììw }
==ìì~ Ä
tarefaIdììÅ â
orderby
îî" )
a
îî* +
.
îî+ ,
	Avaliacao
îî, 5
select
ïï" (
new
ïï) ,
{
ññ" #
Departamento
óó& 2
=
óó3 4
a
óó5 6
.
óó6 7
Departamentos
óó7 D
.
óóD E
Nome
óóE I
,
óóI J
	Avaliacao
òò& /
=
òò0 1
a
òò2 3
.
òò3 4
	Avaliacao
òò4 =
,
òò= >
Acesso
ôô& ,
=
ôô- .
a
ôô/ 0
.
ôô0 1
Acesso
ôô1 7
,
ôô7 8
Unidade
öö& -
=
öö. /
a
öö0 1
.
öö1 2
Unidade
öö2 9
,
öö9 :
Id
õõ& (
=
õõ) *
a
õõ+ ,
.
õõ, -
Id
õõ- /
}
úú" #
)
úú# $
.
ùù! "
ToList
ùù" (
(
ùù( )
)
ùù) *
;
ùù* +
var
üü 
retorno
üü 
=
üü 

avaliacoes
üü (
.
üü( )
AsEnumerable
üü) 5
(
üü5 6
)
üü6 7
.
üü7 8
Select
üü8 >
(
üü> ?
a
üü? @
=>
üüA C
Tuple
üüD I
.
üüI J
Create
üüJ P
(
üüP Q
a
üüQ R
.
üüR S
Departamento
üüS _
,
üü_ `
a
üüa b
.
üüb c
	Avaliacao
üüc l
,
üül m
a
üün o
.
üüo p
Acesso
üüp v
,
üüv w
a
üüx y
.
üüy z
Unidadeüüz Å
,üüÅ Ç
aüüÉ Ñ
.üüÑ Ö
IdüüÖ á
)üüá à
)üüà â
;üüâ ä
return
°° 
retorno
°° 
;
°° 
}
¢¢ 
}
££ 	
public
¨¨ 
static
¨¨ 
IEnumerable
¨¨ !
<
¨¨! "
Tuple
¨¨" '
<
¨¨' (
string
¨¨( .
,
¨¨. /
string
¨¨0 6
,
¨¨6 7
string
¨¨8 >
,
¨¨> ?
string
¨¨@ F
,
¨¨F G
string
¨¨H N
,
¨¨N O
int
¨¨P S
,
¨¨S T
int
¨¨U X
>
¨¨X Y
>
¨¨Y Z=
.GetAvaliacoesPorUnidadeEspecificasIdOperacaoId¨¨[ â
(¨¨â ä
int¨¨ä ç
	unidadeId¨¨é ó
,¨¨ó ò
int¨¨ô ú

operacaoId¨¨ù ß
)¨¨ß ®
{
≠≠ 	
using
ÆÆ 
(
ÆÆ 
var
ÆÆ 
db
ÆÆ 
=
ÆÆ 
new
ÆÆ  
SGQ_GlobalEntities
ÆÆ  2
(
ÆÆ2 3
)
ÆÆ3 4
)
ÆÆ4 5
{
ØØ 
var
∞∞ 

avaliacoes
∞∞ 
=
∞∞  
(
∞∞! "
from
∞∞" &
a
∞∞' (
in
∞∞) +
db
∞∞, .
.
∞∞. /
TarefaAvaliacoes
∞∞/ ?
.
∞∞? @
AsNoTracking
∞∞@ L
(
∞∞L M
)
∞∞M N
where
±±" '
(
±±( )
a
±±) *
.
±±* +
Unidade
±±+ 2
!=
±±3 5
null
±±6 :
||
±±; =
a
±±> ?
.
±±? @
Unidade
±±@ G
==
±±H J
	unidadeId
±±K T
)
±±T U
&&
±±V X
a
±±Y Z
.
±±Z [
Operacao
±±[ c
==
±±d f

operacaoId
±±g q
orderby
≤≤" )
a
≤≤* +
.
≤≤+ ,
	Avaliacao
≤≤, 5
select
≥≥" (
new
≥≥) ,
{
¥¥" #
Departamento
µµ& 2
=
µµ3 4
a
µµ5 6
.
µµ6 7
Departamentos
µµ7 D
.
µµD E
Nome
µµE I
,
µµI J
	Avaliacao
∂∂& /
=
∂∂0 1
a
∂∂2 3
.
∂∂3 4
	Avaliacao
∂∂4 =
,
∂∂= >
Acesso
∑∑& ,
=
∑∑- .
a
∑∑/ 0
.
∑∑0 1
Acesso
∑∑1 7
,
∑∑7 8
Unidade
∏∏& -
=
∏∏. /
a
∏∏0 1
.
∏∏1 2
Unidades
∏∏2 :
.
∏∏: ;
Nome
∏∏; ?
,
∏∏? @
Operacao
ππ& .
=
ππ/ 0
a
ππ1 2
.
ππ2 3
	Operacoes
ππ3 <
.
ππ< =
Nome
ππ= A
,
ππA B
Monitoramento
∫∫& 3
=
∫∫4 5
a
∫∫6 7
.
∫∫7 8
Tarefas
∫∫8 ?
.
∫∫? @
Nome
∫∫@ D
,
∫∫D E
Id
ªª& (
=
ªª) *
a
ªª+ ,
.
ªª, -
Id
ªª- /
}
ºº" #
)
ºº# $
.
ΩΩ! "
ToList
ΩΩ" (
(
ΩΩ( )
)
ΩΩ) *
;
ΩΩ* +
var
øø 
retorno
øø 
=
øø 

avaliacoes
øø (
.
øø( )
AsEnumerable
øø) 5
(
øø5 6
)
øø6 7
.
øø7 8
Select
øø8 >
(
øø> ?
a
øø? @
=>
øøA C
Tuple
øøD I
.
øøI J
Create
øøJ P
(
øøP Q
a
øøQ R
.
øøR S
Unidade
øøS Z
,
øøZ [
a
øø\ ]
.
øø] ^
Departamento
øø^ j
,
øøj k
a
øøl m
.
øøm n
Operacao
øøn v
,
øøv w
a
øøx y
.
øøy z
Monitoramentoøøz á
,øøá à
aøøâ ä
.øøä ã
Acessoøøã ë
,øøë í
aøøì î
.øøî ï
	Avaliacaoøøï û
,øøû ü
aøø† °
.øø° ¢
Idøø¢ §
)øø§ •
)øø• ¶
;øø¶ ß
return
¡¡ 
retorno
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 	
public
   
static
   
IEnumerable
   !
<
  ! "
Tuple
  " '
<
  ' (
int
  ( +
,
  + ,
string
  - 3
>
  3 4
>
  4 50
"GetOperacoesEspecificaPorUnidadeId
  6 X
(
  X Y
int
  Y \
	unidadeId
  ] f
)
  f g
{
ÀÀ 	
using
ÃÃ 
(
ÃÃ 
var
ÃÃ 
db
ÃÃ 
=
ÃÃ 
new
ÃÃ  
SGQ_GlobalEntities
ÃÃ  2
(
ÃÃ2 3
)
ÃÃ3 4
)
ÃÃ4 5
{
ÕÕ 
var
ŒŒ 
	operacoes
ŒŒ 
=
ŒŒ 
(
ŒŒ  !
from
ŒŒ! %
u
ŒŒ& '
in
ŒŒ( *
db
ŒŒ+ -
.
ŒŒ- .
Unidades
ŒŒ. 6
.
ŒŒ6 7
AsNoTracking
ŒŒ7 C
(
ŒŒC D
)
ŒŒD E
join
œœ! %
c
œœ& '
in
œœ( *
db
œœ+ -
.
œœ- .
Clusters
œœ. 6
.
œœ6 7
AsNoTracking
œœ7 C
(
œœC D
)
œœD E
on
œœF H
u
œœI J
.
œœJ K
Cluster
œœK R
equals
œœS Y
c
œœZ [
.
œœ[ \
Sigla
œœ\ a
join
––! %
cd
––& (
in
––) +
db
––, .
.
––. /"
ClusterDepartamentos
––/ C
.
––C D
AsNoTracking
––D P
(
––P Q
)
––Q R
on
––S U
c
––V W
.
––W X
Legenda
––X _
equals
––` f
cd
––g i
.
––i j
Cluster
––j q
join
——! %
d
——& '
in
——( *
db
——+ -
.
——- .
Departamentos
——. ;
.
——; <
AsNoTracking
——< H
(
——H I
)
——I J
on
——K M
cd
——N P
.
——P Q
Departamento
——Q ]
equals
——^ d
d
——e f
.
——f g
Nome
——g k
join
““! %
depo
““& *
in
““+ -
db
““. 0
.
““0 1#
DepartamentoOperacoes
““1 F
.
““F G
AsNoTracking
““G S
(
““S T
)
““T U
on
““V X
d
““Y Z
.
““Z [
Id
““[ ]
equals
““^ d
depo
““e i
.
““i j
Departamento
““j v
join
””! %
ope
””& )
in
””* ,
db
””- /
.
””/ 0
	Operacoes
””0 9
.
””9 :
AsNoTracking
””: F
(
””F G
)
””G H
on
””I K
depo
””L P
.
””P Q
Operacao
””Q Y
equals
””Z `
ope
””a d
.
””d e
Id
””e g
orderby
’’! (
ope
’’) ,
.
’’, -
Nivel
’’- 2
where
÷÷! &
(
÷÷' (
(
÷÷( )
u
÷÷) *
.
÷÷* +
Id
÷÷+ -
==
÷÷. 0
	unidadeId
÷÷1 :
||
÷÷; =
	unidadeId
÷÷> G
==
÷÷H J
$num
÷÷K L
)
÷÷L M
&&
÷÷N P
u
÷÷Q R
.
÷÷R S
Ativa
÷÷S X
.
÷÷X Y
Value
÷÷Y ^
&&
÷÷_ a
u
÷÷b c
.
÷÷c d
Id
÷÷d f
!=
÷÷g i
$num
÷÷j l
&&
÷÷m o
(
÷÷p q
ope
÷÷q t
.
÷÷t u

Especifico
÷÷u 
==÷÷Ä Ç
true÷÷É á
)÷÷á à
)÷÷à â
select
◊◊! '
new
◊◊( +
{
◊◊, -

OperacaoId
◊◊. 8
=
◊◊9 :
ope
◊◊; >
.
◊◊> ?
Id
◊◊? A
,
◊◊A B
Operacao
◊◊C K
=
◊◊L M
ope
◊◊N Q
.
◊◊Q R
Nome
◊◊R V
}
◊◊W X
)
◊◊X Y
.
ÿÿ  !
Distinct
ÿÿ! )
(
ÿÿ) *
)
ÿÿ* +
.
ŸŸ  !
ToList
ŸŸ! '
(
ŸŸ' (
)
ŸŸ( )
;
ŸŸ) *
var
€€ 
retorno
€€ 
=
€€ 
from
€€ "
o
€€# $
in
€€% '
	operacoes
€€( 1
.
€€1 2
AsEnumerable
€€2 >
(
€€> ?
)
€€? @
select
‹‹ $
Tuple
‹‹% *
.
‹‹* +
Create
‹‹+ 1
(
‹‹1 2
o
‹‹2 3
.
‹‹3 4

OperacaoId
‹‹4 >
,
‹‹> ?
o
‹‹@ A
.
‹‹A B
Operacao
‹‹B J
)
‹‹J K
;
‹‹K L
return
ﬁﬁ 
retorno
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 	
public
ÁÁ 
static
ÁÁ 
IEnumerable
ÁÁ !
<
ÁÁ! "
Tuple
ÁÁ" '
<
ÁÁ' (
int
ÁÁ( +
,
ÁÁ+ ,
string
ÁÁ- 3
>
ÁÁ3 4
>
ÁÁ4 5;
-GetUnidadesComTarefasEspecificasPorRegionalId
ÁÁ6 c
(
ÁÁc d
int
ÁÁd g

regionaoId
ÁÁh r
)
ÁÁr s
{
ËË 	
using
ÈÈ 
(
ÈÈ 
var
ÈÈ 
db
ÈÈ 
=
ÈÈ 
new
ÈÈ  
SGQ_GlobalEntities
ÈÈ  2
(
ÈÈ2 3
)
ÈÈ3 4
)
ÈÈ4 5
{
ÍÍ 
var
ÎÎ 
unidades
ÎÎ 
=
ÎÎ 
db
ÎÎ !
.
ÎÎ! "
Unidades
ÎÎ" *
.
ÎÎ* +
AsNoTracking
ÎÎ+ 7
(
ÎÎ7 8
)
ÎÎ8 9
.
ÎÎ9 :
Where
ÎÎ: ?
(
ÎÎ? @
u
ÎÎ@ A
=>
ÎÎB D
u
ÎÎE F
.
ÎÎF G
Regional
ÎÎG O
.
ÎÎO P
Value
ÎÎP U
==
ÎÎV X

regionaoId
ÎÎY c
)
ÎÎc d
.
ÎÎd e
Select
ÎÎe k
(
ÎÎk l
u
ÎÎl m
=>
ÎÎn p
new
ÎÎq t
{
ÎÎu v
	UnidadeIdÎÎw Ä
=ÎÎÅ Ç
uÎÎÉ Ñ
.ÎÎÑ Ö
IdÎÎÖ á
,ÎÎá à
UnidadeÎÎâ ê
=ÎÎë í
uÎÎì î
.ÎÎî ï
SiglaÎÎï ö
}ÎÎõ ú
)ÎÎú ù
.ÎÎù û
ToListÎÎû §
(ÎÎ§ •
)ÎÎ• ¶
;ÎÎ¶ ß
var
ÌÌ 
filtro
ÌÌ 
=
ÌÌ 
db
ÌÌ 
.
ÌÌ  
TarefaAvaliacoes
ÌÌ  0
.
ÌÌ0 1
Where
ÌÌ1 6
(
ÌÌ6 7
r
ÌÌ7 8
=>
ÌÌ9 ;
r
ÌÌ< =
.
ÌÌ= >
Unidade
ÌÌ> E
!=
ÌÌF H
null
ÌÌI M
)
ÌÌM N
.
ÌÌN O
Select
ÌÌO U
(
ÌÌU V
c
ÌÌV W
=>
ÌÌX Z
c
ÌÌ[ \
.
ÌÌ\ ]
Unidade
ÌÌ] d
)
ÌÌd e
.
ÌÌe f
Distinct
ÌÌf n
(
ÌÌn o
)
ÌÌo p
;
ÌÌp q
unidades
ÔÔ 
=
ÔÔ 
unidades
ÔÔ #
.
ÔÔ# $
Where
ÔÔ$ )
(
ÔÔ) *
r
ÔÔ* +
=>
ÔÔ, .
filtro
ÔÔ/ 5
.
ÔÔ5 6
Any
ÔÔ6 9
(
ÔÔ9 :
c
ÔÔ: ;
=>
ÔÔ< >
c
ÔÔ? @
==
ÔÔA C
r
ÔÔD E
.
ÔÔE F
	UnidadeId
ÔÔF O
)
ÔÔO P
)
ÔÔP Q
.
ÔÔQ R
ToList
ÔÔR X
(
ÔÔX Y
)
ÔÔY Z
;
ÔÔZ [
var
ÒÒ 
retorno
ÒÒ 
=
ÒÒ 
unidades
ÒÒ &
.
ÒÒ& '
AsEnumerable
ÒÒ' 3
(
ÒÒ3 4
)
ÒÒ4 5
.
ÒÒ5 6
Select
ÒÒ6 <
(
ÒÒ< =
u
ÒÒ= >
=>
ÒÒ? A
Tuple
ÒÒB G
.
ÒÒG H
Create
ÒÒH N
(
ÒÒN O
u
ÒÒO P
.
ÒÒP Q
	UnidadeId
ÒÒQ Z
,
ÒÒZ [
u
ÒÒ\ ]
.
ÒÒ] ^
Unidade
ÒÒ^ e
)
ÒÒe f
)
ÒÒf g
;
ÒÒg h
return
ÛÛ 
retorno
ÛÛ 
;
ÛÛ 
}
ÙÙ 
}
ıı 	
public
çç 
static
çç 
IEnumerable
çç !
<
çç! "
Tuple
çç" '
<
çç' (
int
çç( +
,
çç+ ,
string
çç- 3
>
çç3 4
>
çç4 50
"GetTarefasEspecificasPorOperacaoId
çç6 X
(
ççX Y
int
ççY \

operacaoId
çç] g
)
ççg h
{
éé 	
using
èè 
(
èè 
var
èè 
db
èè 
=
èè 
new
èè  
SGQ_GlobalEntities
èè  2
(
èè2 3
)
èè3 4
)
èè4 5
{
êê 
var
ëë 
filtro
ëë 
=
ëë 
db
ëë 
.
ëë  
TarefaAvaliacoes
ëë  0
.
ëë0 1
AsNoTracking
ëë1 =
(
ëë= >
)
ëë> ?
.
ëë? @
Where
ëë@ E
(
ëëE F
r
ëëF G
=>
ëëH J
r
ëëK L
.
ëëL M
Unidade
ëëM T
!=
ëëU W
null
ëëX \
)
ëë\ ]
.
ëë] ^
Select
ëë^ d
(
ëëd e
c
ëëe f
=>
ëëg i
c
ëëj k
.
ëëk l
Tarefa
ëël r
)
ëër s
.
ëës t
Distinct
ëët |
(
ëë| }
)
ëë} ~
;
ëë~ 
var
íí 
tarefas
íí 
=
íí 
db
íí  
.
íí  !
Tarefas
íí! (
.
íí( )
AsNoTracking
íí) 5
(
íí5 6
)
íí6 7
.
ìì 
Where
ìì 
(
ìì 
t
ìì 
=>
ìì 
t
ìì  !
.
ìì! "
Operacao
ìì" *
==
ìì+ -

operacaoId
ìì. 8
&&
ìì9 ;
filtro
ìì< B
.
ììB C
Any
ììC F
(
ììF G
c
ììG H
=>
ììI K
c
ììL M
==
ììN P
t
ììQ R
.
ììR S
Id
ììS U
)
ììU V
)
ììV W
.
îî 
Select
îî 
(
îî 
t
îî 
=>
îî  
new
îî! $
{
ïï 
TarefaId
ññ  
=
ññ! "
t
ññ# $
.
ññ$ %
Id
ññ% '
,
ññ' (
Tarefa
óó 
=
óó  
t
óó! "
.
óó" #
Nome
óó# '
}
òò 
)
òò 
.
ôô 
ToList
ôô 
(
ôô 
)
ôô 
.
öö 
AsEnumerable
öö !
(
öö! "
)
öö" #
.
õõ 
Select
õõ 
(
õõ 
t
õõ 
=>
õõ  
Tuple
õõ! &
.
õõ& '
Create
õõ' -
(
õõ- .
t
õõ. /
.
õõ/ 0
TarefaId
õõ0 8
,
õõ8 9
t
õõ: ;
.
õõ; <
Tarefa
õõ< B
)
õõB C
)
õõC D
.
úú 
ToList
úú 
(
úú 
)
úú 
;
úú 
return
ùù 
tarefas
ùù 
;
ùù 
}
ûû 
}
üü 	
public
¶¶ 
static
¶¶ 
List
¶¶ 
<
¶¶ 
Tuple
¶¶  
<
¶¶  !
string
¶¶! '
,
¶¶' (
object
¶¶) /
,
¶¶/ 0
string
¶¶1 7
>
¶¶7 8
>
¶¶8 9)
GetFlagsOperacaoEspecificas
¶¶: U
(
¶¶U V
int
¶¶V Y

operacaoId
¶¶Z d
)
¶¶d e
{
ßß 	
using
®® 
(
®® 
var
®® 
db
®® 
=
®® 
new
®®  
SGQ_GlobalEntities
®®  2
(
®®2 3
)
®®3 4
)
®®4 5
{
©© 
var
™™ 
filtro
™™ 
=
™™ 
db
™™ 
.
™™  
TarefaAvaliacoes
™™  0
.
™™0 1
Where
™™1 6
(
™™6 7
r
™™7 8
=>
™™9 ;
r
™™< =
.
™™= >
Unidade
™™> E
!=
™™F H
null
™™I M
)
™™M N
.
™™N O
Select
™™O U
(
™™U V
c
™™V W
=>
™™X Z
c
™™[ \
.
™™\ ]
Operacao
™™] e
)
™™e f
.
™™f g
Distinct
™™g o
(
™™o p
)
™™p q
;
™™q r
var
´´ 
flags
´´ 
=
´´ 
(
´´ 
from
´´ !
o
´´" #
in
´´$ &
db
´´' )
.
´´) *
	Operacoes
´´* 3
.
´´3 4
AsNoTracking
´´4 @
(
´´@ A
)
´´A B
where
¨¨ "
o
¨¨# $
.
¨¨$ %
Id
¨¨% '
==
¨¨( *

operacaoId
¨¨+ 5
&&
¨¨6 8
filtro
¨¨9 ?
.
¨¨? @
Any
¨¨@ C
(
¨¨C D
r
¨¨D E
=>
¨¨F H
r
¨¨I J
==
¨¨K M
o
¨¨N O
.
¨¨O P
Id
¨¨P R
)
¨¨R S
select
≠≠ #
new
≠≠$ '
{
ÆÆ 
Nivel
ØØ! &
=
ØØ' (
o
ØØ) *
.
ØØ* +
Nivel
ØØ+ 0
,
ØØ0 1

Frequencia
∞∞! +
=
∞∞, -
o
∞∞. /
.
∞∞/ 0

Frequencia
∞∞0 :
,
∞∞: ;
FrequenciaAlerta
±±! 1
=
±±2 3
o
±±4 5
.
±±5 6
FrequenciaAlerta
±±6 F
,
±±F G
Vigencia
≤≤! )
=
≤≤* +
o
≤≤, -
.
≤≤- .
Vigencia
≤≤. 6
,
≤≤6 7

ControleVP
≥≥! +
=
≥≥, -
o
≥≥. /
.
≥≥/ 0

ControleVP
≥≥0 :
,
≥≥: ;

ControleFP
¥¥! +
=
¥¥, -
o
¥¥. /
.
¥¥/ 0

ControleFP
¥¥0 :
,
¥¥: ;
AdCampoVazio
µµ! -
=
µµ. /
o
µµ0 1
.
µµ1 2
ADCAMPOVAZIO
µµ2 >
,
µµ> ?!
AvaliarEquipamentos
∂∂! 4
=
∂∂5 6
o
∂∂7 8
.
∂∂8 9!
AvaliarEquipamentos
∂∂9 L
,
∂∂L M
AvaliarCamaras
∑∑! /
=
∑∑0 1
o
∑∑2 3
.
∑∑3 4
AvaliarCamaras
∑∑4 B
,
∑∑B C

Especifico
∏∏! +
=
∏∏, -
o
∏∏. /
.
∏∏/ 0

Especifico
∏∏0 :
,
∏∏: ;
AlterarAmostra
ππ! /
=
ππ0 1
o
ππ2 3
.
ππ3 4
AlterarAmostra
ππ4 B
,
ππB C
IncluirTarefa
∫∫! .
=
∫∫/ 0
o
∫∫1 2
.
∫∫2 3
IncluirTarefa
∫∫3 @
,
∫∫@ A
IncluirAvaliacao
ªª! 1
=
ªª2 3
o
ªª4 5
.
ªª5 6
IncluirAvaliacao
ªª6 F
,
ªªF G
ExibirPColeta
ºº! .
=
ºº/ 0
o
ºº1 2
.
ºº2 3
ExibirPColeta
ºº3 @
,
ºº@ A

PadraoPerc
ΩΩ! +
=
ΩΩ, -
o
ΩΩ. /
.
ΩΩ/ 0

PadraoPerc
ΩΩ0 :
,
ΩΩ: ;
AvaliarSequencial
ææ! 2
=
ææ3 4
o
ææ5 6
.
ææ6 7
AvaliarSequencial
ææ7 H
,
ææH I
Criterio
øø! )
=
øø* +
o
øø, -
.
øø- .
Criterio
øø. 6
,
øø6 7

ExibirData
¿¿! +
=
¿¿, -
o
¿¿. /
.
¿¿/ 0

ExibirData
¿¿0 :
,
¿¿: ;
EmitirAlerta
¡¡! -
=
¡¡. /
o
¡¡0 1
.
¡¡1 2
EmitirAlerta
¡¡2 >
,
¡¡> ?!
ControlarAvaliacoes
¬¬! 4
=
¬¬5 6
o
¬¬7 8
.
¬¬8 9!
ControlarAvaliacoes
¬¬9 L
}
√√ 
)
√√ 
.
ƒƒ 
First
ƒƒ "
(
ƒƒ" #
)
ƒƒ# $
;
ƒƒ$ %
var
∆∆ 
retorno
∆∆ 
=
∆∆ 
new
∆∆ !
List
∆∆" &
<
∆∆& '
Tuple
∆∆' ,
<
∆∆, -
string
∆∆- 3
,
∆∆3 4
object
∆∆5 ;
,
∆∆; <
string
∆∆= C
>
∆∆C D
>
∆∆D E
(
∆∆E F
)
∆∆F G
;
∆∆G H
foreach
»» 
(
»» 
var
»» 
prop
»» !
in
»»" $
flags
»»% *
.
»»* +
GetType
»»+ 2
(
»»2 3
)
»»3 4
.
»»4 5
GetProperties
»»5 B
(
»»B C
)
»»C D
)
»»D E
{
…… 
retorno
   
.
   
Add
   
(
    
Tuple
    %
.
  % &
Create
  & ,
(
  , -
prop
  - 1
.
  1 2
Name
  2 6
,
  6 7
prop
  8 <
.
  < =
GetValue
  = E
(
  E F
flags
  F K
,
  K L
null
  M Q
)
  Q R
,
  R S
(
  T U
prop
  U Y
.
  Y Z
PropertyType
  Z f
.
  f g
IsGenericType
  g t
&&
  u w
prop
  x |
.
  | }
PropertyType  } â
.  â ä(
GetGenericTypeDefinition  ä ¢
(  ¢ £
)  £ §
==  • ß
typeof  ® Æ
(  Æ Ø
Nullable  Ø ∑
<  ∑ ∏
>  ∏ π
)  π ∫
)  ∫ ª
?  º Ω
Nullable  æ ∆
.  ∆ «!
GetUnderlyingType  « ÿ
(  ÿ Ÿ
prop  Ÿ ›
.  › ﬁ
PropertyType  ﬁ Í
)  Í Î
.  Î Ï
Name  Ï 
:  Ò Ú
prop  Û ˜
.  ˜ ¯
PropertyType  ¯ Ñ
.  Ñ Ö
Name  Ö â
)  â ä
)  ä ã
;  ã å
}
ÀÀ 
return
ÕÕ 
retorno
ÕÕ 
;
ÕÕ 
}
ŒŒ 
}
œœ 	
public
÷÷ 
static
÷÷ 
List
÷÷ 
<
÷÷ 
Tuple
÷÷  
<
÷÷  !
string
÷÷! '
,
÷÷' (
object
÷÷) /
,
÷÷/ 0
string
÷÷1 7
>
÷÷7 8
>
÷÷8 9'
GetFlagsTarefaEspecificas
÷÷: S
(
÷÷S T
int
÷÷T W
tarefaId
÷÷X `
)
÷÷` a
{
◊◊ 	
using
ÿÿ 
(
ÿÿ 
var
ÿÿ 
db
ÿÿ 
=
ÿÿ 
new
ÿÿ  
SGQ_GlobalEntities
ÿÿ  2
(
ÿÿ2 3
)
ÿÿ3 4
)
ÿÿ4 5
{
ŸŸ 
var
⁄⁄ 
filtro
⁄⁄ 
=
⁄⁄ 
db
⁄⁄ 
.
⁄⁄  
TarefaAvaliacoes
⁄⁄  0
.
⁄⁄0 1
Where
⁄⁄1 6
(
⁄⁄6 7
r
⁄⁄7 8
=>
⁄⁄9 ;
r
⁄⁄< =
.
⁄⁄= >
Unidade
⁄⁄> E
!=
⁄⁄F H
null
⁄⁄I M
)
⁄⁄M N
.
⁄⁄N O
Select
⁄⁄O U
(
⁄⁄U V
c
⁄⁄V W
=>
⁄⁄X Z
c
⁄⁄[ \
.
⁄⁄\ ]
Tarefa
⁄⁄] c
)
⁄⁄c d
.
⁄⁄d e
Distinct
⁄⁄e m
(
⁄⁄m n
)
⁄⁄n o
;
⁄⁄o p
var
€€ 
flags
€€ 
=
€€ 
(
€€ 
from
€€ !
t
€€" #
in
€€$ &
db
€€' )
.
€€) *
Tarefas
€€* 1
.
€€1 2
AsNoTracking
€€2 >
(
€€> ?
)
€€? @
where
‹‹ "
t
‹‹# $
.
‹‹$ %
Id
‹‹% '
==
‹‹( *
tarefaId
‹‹+ 3
&&
‹‹4 6
filtro
‹‹7 =
.
‹‹= >
Any
‹‹> A
(
‹‹A B
r
‹‹B C
=>
‹‹D F
r
‹‹G H
==
‹‹I K
t
‹‹L M
.
‹‹M N
Id
‹‹N P
)
‹‹P Q
select
›› #
new
››$ '
{
ﬁﬁ 

Amostragem
ﬂﬂ! +
=
ﬂﬂ, -
t
ﬂﬂ. /
.
ﬂﬂ/ 0

Amostragem
ﬂﬂ0 :
,
ﬂﬂ: ;
Departamento
‡‡! -
=
‡‡. /
t
‡‡0 1
.
‡‡1 2
Departamento
‡‡2 >
.
‡‡> ?
HasValue
‡‡? G
?
‡‡H I
t
‡‡J K
.
‡‡K L
Departamentos
‡‡L Y
.
‡‡Y Z
Nome
‡‡Z ^
:
‡‡_ `
string
‡‡a g
.
‡‡g h
Empty
‡‡h m
,
‡‡m n

Frequencia
··! +
=
··, -
t
··. /
.
··/ 0

Frequencia
··0 :
,
··: ;
Vigencia
‚‚! )
=
‚‚* +
t
‚‚, -
.
‚‚- .
Vigencia
‚‚. 6
,
‚‚6 7
Produto
„„! (
=
„„) *
t
„„+ ,
.
„„, -
Produto
„„- 4
.
„„4 5
HasValue
„„5 =
?
„„> ?
t
„„@ A
.
„„A B
Produtos
„„B J
.
„„J K
Nome
„„K O
:
„„P Q
string
„„R X
.
„„X Y
Empty
„„Y ^
,
„„^ _
EditarAcesso
‰‰! -
=
‰‰. /
t
‰‰0 1
.
‰‰1 2
EditarAcesso
‰‰2 >
,
‰‰> ?
ExibirAcesso
ÂÂ! -
=
ÂÂ. /
t
ÂÂ0 1
.
ÂÂ1 2
ExibirAcesso
ÂÂ2 >
,
ÂÂ> ?
FormaAmostragem
ÊÊ! 0
=
ÊÊ1 2
t
ÊÊ3 4
.
ÊÊ4 5
FormaAmostragem
ÊÊ5 D
,
ÊÊD E
AvaliarProdutos
ÁÁ! 0
=
ÁÁ1 2
t
ÁÁ3 4
.
ÁÁ4 5
AvaliarProdutos
ÁÁ5 D
,
ÁÁD E
InformarPesagem
ËË! 0
=
ËË1 2
t
ËË3 4
.
ËË4 5
InformarPesagem
ËË5 D
,
ËËD E

Sequencial
ÈÈ! +
=
ÈÈ, -
t
ÈÈ. /
.
ÈÈ/ 0

Sequencial
ÈÈ0 :
}
ÍÍ 
)
ÍÍ 
.
ÎÎ 
First
ÎÎ "
(
ÎÎ" #
)
ÎÎ# $
;
ÎÎ$ %
var
ÌÌ 
retorno
ÌÌ 
=
ÌÌ 
new
ÌÌ !
List
ÌÌ" &
<
ÌÌ& '
Tuple
ÌÌ' ,
<
ÌÌ, -
string
ÌÌ- 3
,
ÌÌ3 4
object
ÌÌ5 ;
,
ÌÌ; <
string
ÌÌ= C
>
ÌÌC D
>
ÌÌD E
(
ÌÌE F
)
ÌÌF G
;
ÌÌG H
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ 
prop
ÔÔ !
in
ÔÔ" $
flags
ÔÔ% *
.
ÔÔ* +
GetType
ÔÔ+ 2
(
ÔÔ2 3
)
ÔÔ3 4
.
ÔÔ4 5
GetProperties
ÔÔ5 B
(
ÔÔB C
)
ÔÔC D
)
ÔÔD E
{
 
retorno
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ  
Tuple
ÒÒ  %
.
ÒÒ% &
Create
ÒÒ& ,
(
ÒÒ, -
prop
ÒÒ- 1
.
ÒÒ1 2
Name
ÒÒ2 6
,
ÒÒ6 7
prop
ÒÒ8 <
.
ÒÒ< =
GetValue
ÒÒ= E
(
ÒÒE F
flags
ÒÒF K
,
ÒÒK L
null
ÒÒM Q
)
ÒÒQ R
,
ÒÒR S
(
ÒÒT U
prop
ÒÒU Y
.
ÒÒY Z
PropertyType
ÒÒZ f
.
ÒÒf g
IsGenericType
ÒÒg t
&&
ÒÒu w
prop
ÒÒx |
.
ÒÒ| }
PropertyTypeÒÒ} â
.ÒÒâ ä(
GetGenericTypeDefinitionÒÒä ¢
(ÒÒ¢ £
)ÒÒ£ §
==ÒÒ• ß
typeofÒÒ® Æ
(ÒÒÆ Ø
NullableÒÒØ ∑
<ÒÒ∑ ∏
>ÒÒ∏ π
)ÒÒπ ∫
)ÒÒ∫ ª
?ÒÒº Ω
NullableÒÒæ ∆
.ÒÒ∆ «!
GetUnderlyingTypeÒÒ« ÿ
(ÒÒÿ Ÿ
propÒÒŸ ›
.ÒÒ› ﬁ
PropertyTypeÒÒﬁ Í
)ÒÒÍ Î
.ÒÒÎ Ï
NameÒÒÏ 
:ÒÒÒ Ú
propÒÒÛ ˜
.ÒÒ˜ ¯
PropertyTypeÒÒ¯ Ñ
.ÒÒÑ Ö
NameÒÒÖ â
)ÒÒâ ä
)ÒÒä ã
;ÒÒã å
}
ÚÚ 
return
ÙÙ 
retorno
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 	
public
ÇÇ 
static
ÇÇ 
int
ÇÇ $
GetMaximoNumeroAmostra
ÇÇ 0
(
ÇÇ0 1
int
ÇÇ1 4
	unidadeId
ÇÇ5 >
,
ÇÇ> ?
int
ÇÇ@ C
departamentoId
ÇÇD R
,
ÇÇR S
int
ÇÇT W

operacaoId
ÇÇX b
,
ÇÇb c
int
ÇÇd g
tarefaId
ÇÇh p
)
ÇÇp q
{
ÉÉ 	
DateTime
ÑÑ 
dataConsultar
ÑÑ "
=
ÑÑ# $!
GetDataSegundoTurno
ÑÑ% 8
(
ÑÑ8 9
	unidadeId
ÑÑ9 B
,
ÑÑB C

operacaoId
ÑÑD N
)
ÑÑN O
;
ÑÑO P
return
ÜÜ $
GetMaximoNumeroAmostra
ÜÜ )
(
ÜÜ) *
	unidadeId
ÜÜ* 3
,
ÜÜ3 4
departamentoId
ÜÜ5 C
,
ÜÜC D

operacaoId
ÜÜE O
,
ÜÜO P
tarefaId
ÜÜQ Y
,
ÜÜY Z
dataConsultar
ÜÜ[ h
)
ÜÜh i
;
ÜÜi j
}
áá 	
public
íí 
static
íí 
int
íí $
GetMaximoNumeroAmostra
íí 0
(
íí0 1
int
íí1 4
	unidadeId
íí5 >
,
íí> ?
int
íí@ C
departamentoId
ííD R
,
ííR S
int
ííT W

operacaoId
ííX b
,
ííb c
int
ííd g
tarefaId
ííh p
,
ííp q
DateTime
íír z
dataConsultaríí{ à
)ííà â
{
ìì 	
using
îî 
(
îî 
var
îî 
db
îî 
=
îî 
new
îî  
SGQ_GlobalEntities
îî  2
(
îî2 3
)
îî3 4
)
îî4 5
{
ïï 
int
ññ 
retorno
ññ 
=
ññ 
$num
ññ 
;
ññ  
var
òò 
operacao
òò 
=
òò 
db
òò !
.
òò! "
	Operacoes
òò" +
.
òò+ ,
AsNoTracking
òò, 8
(
òò8 9
)
òò9 :
.
òò: ;
Single
òò; A
(
òòA B
o
òòB C
=>
òòD F
o
òòG H
.
òòH I
Id
òòI K
==
òòL N

operacaoId
òòO Y
)
òòY Z
;
òòZ [
if
öö 
(
öö 
!
öö 
operacao
öö 
.
öö 

ControleVP
öö (
.
öö( )
Value
öö) .
)
öö. /
{
õõ 
retorno
úú 
=
úú 
db
úú  
.
úú  !
TarefaAmostras
úú! /
.
úú/ 0
AsNoTracking
úú0 <
(
úú< =
)
úú= >
.
ùù 
Where
ùù 
(
ùù 
ta
ùù !
=>
ùù" $
ta
ùù% '
.
ùù' (
Tarefa
ùù( .
==
ùù/ 1
tarefaId
ùù2 :
&&
ùù; =
ta
ùù> @
.
ùù@ A
Unidade
ùùA H
.
ùùH I
Value
ùùI N
==
ùùO Q
	unidadeId
ùùR [
)
ùù[ \
.
ûû 
Select
ûû 
(
ûû  
ta
ûû  "
=>
ûû# %
ta
ûû& (
.
ûû( )
Amostras
ûû) 1
)
ûû1 2
.
ûû2 3
FirstOrDefault
ûû3 A
(
ûûA B
)
ûûB C
;
ûûC D
if
†† 
(
†† 
retorno
†† 
==
††  "
$num
††# $
)
††$ %
{
°° 
retorno
¢¢ 
=
¢¢  !
db
¢¢" $
.
¢¢$ %
TarefaAmostras
¢¢% 3
.
¢¢3 4
AsNoTracking
¢¢4 @
(
¢¢@ A
)
¢¢A B
.
££ 
Where
££ "
(
££" #
ta
££# %
=>
££& (
ta
££) +
.
££+ ,
Tarefa
££, 2
==
££3 5
tarefaId
££6 >
&&
££? A
!
££B C
ta
££C E
.
££E F
Unidade
££F M
.
££M N
HasValue
££N V
)
££V W
.
§§ 
Select
§§ #
(
§§# $
ta
§§$ &
=>
§§' )
ta
§§* ,
.
§§, -
Amostras
§§- 5
)
§§5 6
.
§§6 7
FirstOrDefault
§§7 E
(
§§E F
)
§§F G
;
§§G H
}
•• 
}
¶¶ 
else
ßß 
{
®® 
if
©© 
(
©© 
operacao
©©  
.
©©  !
Nome
©©! %
.
©©% &
IndexOf
©©& -
(
©©- .
$str
©©. 3
)
©©3 4
>
©©5 6
$num
©©7 8
)
©©8 9
{
™™ 
if
´´ 
(
´´ 
operacao
´´ $
.
´´$ %

ControleFP
´´% /
.
´´/ 0
Value
´´0 5
)
´´5 6
{
¨¨ 
var
≠≠  
quantidadeFamilias
≠≠  2
=
≠≠3 4
db
≠≠5 7
.
≠≠7 8
FamiliaProdutos
≠≠8 G
.
≠≠G H
AsNoTracking
≠≠H T
(
≠≠T U
)
≠≠U V
.
ÆÆ  !
Where
ÆÆ! &
(
ÆÆ& '
fp
ÆÆ' )
=>
ÆÆ* ,
fp
ÆÆ- /
.
ÆÆ/ 0
Ano
ÆÆ0 3
==
ÆÆ4 6
dataConsultar
ÆÆ7 D
.
ÆÆD E
Year
ÆÆE I
&&
ÆÆJ L
fp
ØØ$ &
.
ØØ& '
Mes
ØØ' *
==
ØØ+ -
dataConsultar
ØØ. ;
.
ØØ; <
Month
ØØ< A
&&
ØØB D
(
∞∞$ %
!
∞∞% &
fp
∞∞& (
.
∞∞( )
Operacao
∞∞) 1
.
∞∞1 2
HasValue
∞∞2 :
||
∞∞; =
fp
∞∞> @
.
∞∞@ A
Operacao
∞∞A I
.
∞∞I J
Value
∞∞J O
==
∞∞P R

operacaoId
∞∞S ]
)
∞∞] ^
&&
∞∞_ a
(
±±$ %
!
±±% &
fp
±±& (
.
±±( )
Unidade
±±) 0
.
±±0 1
HasValue
±±1 9
||
±±: <
fp
±±= ?
.
±±? @
Unidade
±±@ G
.
±±G H
Value
±±H M
==
±±N P
	unidadeId
±±Q Z
)
±±Z [
)
±±[ \
.
≤≤$ %
Count
≤≤% *
(
≤≤* +
)
≤≤+ ,
;
≤≤, -
retorno
¥¥ #
=
¥¥$ %
db
¥¥& (
.
¥¥( )
VolumeProducao
¥¥) 7
.
¥¥7 8
AsNoTracking
¥¥8 D
(
¥¥D E
)
¥¥E F
.
µµ  
Where
µµ  %
(
µµ% &
vp
µµ& (
=>
µµ) +
vp
µµ, .
.
µµ. /
Unidade
µµ/ 6
==
µµ7 9
	unidadeId
µµ: C
&&
µµD F
vp
∂∂ !
.
∂∂! "
Departamento
∂∂" .
==
∂∂/ 1
departamentoId
∂∂2 @
&&
∂∂A C
vp
∑∑ !
.
∑∑! "
Operacao
∑∑" *
==
∑∑+ -

operacaoId
∑∑. 8
&&
∑∑9 ;
DbFunctions
∏∏ *
.
∏∏* +
TruncateTime
∏∏+ 7
(
∏∏7 8
vp
∏∏8 :
.
∏∏: ;
Data
∏∏; ?
)
∏∏? @
<=
∏∏A C
DbFunctions
∏∏D O
.
∏∏O P
TruncateTime
∏∏P \
(
∏∏\ ]
dataConsultar
∏∏] j
)
∏∏j k
)
ππ  
.
ππ  !
OrderByDescending
ππ! 2
(
ππ2 3
vp
ππ3 5
=>
ππ6 8
vp
ππ9 ;
.
ππ; <
Data
ππ< @
)
ππ@ A
.
ππA B
ThenBy
ππB H
(
ππH I
vp
ππI K
=>
ππL N
vp
ππO Q
.
ππQ R
DataAlteracao
ππR _
)
ππ_ `
.
∫∫  
Select
∫∫  &
(
∫∫& '
vp
∫∫' )
=>
∫∫* ,
new
∫∫- 0
{
∫∫1 2

AmostraDia
∫∫3 =
=
∫∫> ?
vp
∫∫@ B
.
∫∫B C

AmostraDia
∫∫C M
.
∫∫M N
Value
∫∫N S
,
∫∫S T
HorasTrabalho
∫∫U b
=
∫∫c d
vp
∫∫e g
.
∫∫g h
HorasTrabalho
∫∫h u
.
∫∫u v
Value
∫∫v {
,
∫∫{ |
id
∫∫} 
=∫∫Ä Å
vp∫∫Ç Ñ
.∫∫Ñ Ö
Id∫∫Ö á
}∫∫à â
)∫∫â ä
.
ªª  
AsEnumerable
ªª  ,
(
ªª, -
)
ªª- .
.
ºº  
Select
ºº  &
(
ºº& '
vp
ºº' )
=>
ºº* ,
int
ºº- 0
.
ºº0 1
Parse
ºº1 6
(
ºº6 7
Math
ºº7 ;
.
ºº; <
Ceiling
ºº< C
(
ººC D
double
ººD J
.
ººJ K
Parse
ººK P
(
ººP Q
vp
ººQ S
.
ººS T

AmostraDia
ººT ^
.
ºº^ _
ToString
ºº_ g
(
ººg h
)
ººh i
)
ººi j
/
ººk l
double
ººm s
.
ººs t
Parse
ººt y
(
ººy z
vp
ººz |
.
ºº| }
HorasTrabalhoºº} ä
.ººä ã
ToStringººã ì
(ººì î
)ººî ï
)ººï ñ
/ººó ò
doubleººô ü
.ººü †
Parseºº† •
(ºº• ¶"
quantidadeFamiliasºº¶ ∏
.ºº∏ π
ToStringººπ ¡
(ºº¡ ¬
)ºº¬ √
)ºº√ ƒ
)ººƒ ≈
.ºº≈ ∆
ToStringºº∆ Œ
(ººŒ œ
)ººœ –
)ºº– —
)ºº— “
.
ΩΩ  
FirstOrDefault
ΩΩ  .
(
ΩΩ. /
)
ΩΩ/ 0
;
ΩΩ0 1
}
ææ 
else
øø 
{
¿¿ 
retorno
¡¡ #
=
¡¡$ %
db
¡¡& (
.
¡¡( )
VolumeProducao
¡¡) 7
.
¡¡7 8
AsNoTracking
¡¡8 D
(
¡¡D E
)
¡¡E F
.
¬¬  !
Where
¬¬! &
(
¬¬& '
vp
¬¬' )
=>
¬¬* ,
vp
¬¬- /
.
¬¬/ 0
Unidade
¬¬0 7
==
¬¬8 :
	unidadeId
¬¬; D
&&
¬¬E G
vp
√√  "
.
√√" #
Departamento
√√# /
==
√√0 2
departamentoId
√√3 A
&&
√√B D
vp
ƒƒ  "
.
ƒƒ" #
Operacao
ƒƒ# +
==
ƒƒ, .

operacaoId
ƒƒ/ 9
&&
≈≈  "
DbFunctions
≈≈# .
.
≈≈. /
TruncateTime
≈≈/ ;
(
≈≈; <
vp
≈≈< >
.
≈≈> ?
Data
≈≈? C
)
≈≈C D
<=
≈≈E G
DbFunctions
≈≈H S
.
≈≈S T
TruncateTime
≈≈T `
(
≈≈` a
dataConsultar
≈≈a n
)
≈≈n o
)
∆∆  !
.
∆∆! "
OrderByDescending
∆∆" 3
(
∆∆3 4
vp
∆∆4 6
=>
∆∆7 9
vp
∆∆: <
.
∆∆< =
Data
∆∆= A
)
∆∆A B
.
∆∆B C
ThenBy
∆∆C I
(
∆∆I J
vp
∆∆J L
=>
∆∆M O
vp
∆∆P R
.
∆∆R S
DataAlteracao
∆∆S `
)
∆∆` a
.
««  !
Select
««! '
(
««' (
vp
««( *
=>
««+ -
vp
««. 0
.
««0 1 
QtdColabOuEsteiras
««1 C
.
««C D
Value
««D I
*
««J K
vp
««L N
.
««N O
AmostraAvaliacao
««O _
.
««_ `
Value
««` e
)
««e f
.
»»  !
FirstOrDefault
»»! /
(
»»/ 0
)
»»0 1
;
»»1 2
}
   
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
operacao
ŒŒ $
.
ŒŒ$ %
Nome
ŒŒ% )
.
ŒŒ) *
IndexOf
ŒŒ* 1
(
ŒŒ1 2
$str
ŒŒ2 7
)
ŒŒ7 8
>
ŒŒ9 :
$num
ŒŒ; <
)
ŒŒ< =
{
œœ 
retorno
–– #
=
––$ %
db
––& (
.
––( )
VolumeProducao
––) 7
.
––7 8
AsNoTracking
––8 D
(
––D E
)
––E F
.
—— 
Where
—— "
(
——" #
vp
——# %
=>
——& (
vp
——) +
.
——+ ,
Unidade
——, 3
==
——4 6
	unidadeId
——7 @
&&
““  "
vp
““# %
.
““% &
Departamento
““& 2
==
““3 5
departamentoId
““6 D
&&
””  "
vp
””# %
.
””% &
Operacao
””& .
==
””/ 1

operacaoId
””2 <
&&
‘‘  "
DbFunctions
‘‘# .
.
‘‘. /
TruncateTime
‘‘/ ;
(
‘‘; <
vp
‘‘< >
.
‘‘> ?
Data
‘‘? C
)
‘‘C D
==
‘‘E G
DbFunctions
‘‘H S
.
‘‘S T
TruncateTime
‘‘T `
(
‘‘` a
dataConsultar
‘‘a n
)
‘‘n o
)
‘‘o p
.
÷÷ 
Select
÷÷ #
(
÷÷# $
vp
÷÷$ &
=>
÷÷' )
vp
÷÷* ,
.
÷÷, -
Quartos
÷÷- 4
.
÷÷4 5
Value
÷÷5 :
/
÷÷; <
$num
÷÷= >
)
÷÷> ?
.
◊◊ 
FirstOrDefault
◊◊ +
(
◊◊+ ,
)
◊◊, -
;
◊◊- .
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ 
retorno
€€ #
=
€€$ %
db
€€& (
.
€€( )
VolumeProducao
€€) 7
.
€€7 8
AsNoTracking
€€8 D
(
€€D E
)
€€E F
.
‹‹  !
Where
‹‹! &
(
‹‹& '
vp
‹‹' )
=>
‹‹* ,
vp
‹‹- /
.
‹‹/ 0
Unidade
‹‹0 7
==
‹‹8 :
	unidadeId
‹‹; D
&&
‹‹E G
vp
››  "
.
››" #
Departamento
››# /
==
››0 2
departamentoId
››3 A
&&
››B D
vp
ﬁﬁ  "
.
ﬁﬁ" #
Operacao
ﬁﬁ# +
==
ﬁﬁ, .

operacaoId
ﬁﬁ/ 9
&&
ﬂﬂ  "
DbFunctions
ﬂﬂ# .
.
ﬂﬂ. /
TruncateTime
ﬂﬂ/ ;
(
ﬂﬂ; <
vp
ﬂﬂ< >
.
ﬂﬂ> ?
Data
ﬂﬂ? C
)
ﬂﬂC D
<=
ﬂﬂE G
DbFunctions
ﬂﬂH S
.
ﬂﬂS T
TruncateTime
ﬂﬂT `
(
ﬂﬂ` a
dataConsultar
ﬂﬂa n
)
ﬂﬂn o
)
‡‡  !
.
‡‡! "
OrderByDescending
‡‡" 3
(
‡‡3 4
vp
‡‡4 6
=>
‡‡7 9
vp
‡‡: <
.
‡‡< =
Data
‡‡= A
)
‡‡A B
.
‡‡B C
ThenBy
‡‡C I
(
‡‡I J
vp
‡‡J L
=>
‡‡M O
vp
‡‡P R
.
‡‡R S
DataAlteracao
‡‡S `
)
‡‡` a
.
··  !
Select
··! '
(
··' (
vp
··( *
=>
··+ -
vp
··. 0
.
··0 1
Quartos
··1 8
.
··8 9
Value
··9 >
/
··? @
$num
··A B
)
··B C
.
‚‚  !
FirstOrDefault
‚‚! /
(
‚‚/ 0
)
‚‚0 1
;
‚‚1 2
}
„„ 
}
‰‰ 
}
ÂÂ 
return
ÁÁ 
retorno
ÁÁ 
;
ÁÁ 
}
ËË 
}
ÈÈ 	
public
ÛÛ 
static
ÛÛ 
int
ÛÛ &
GetMaximoNumeroAvaliacao
ÛÛ 2
(
ÛÛ2 3
int
ÛÛ3 6
	unidadeId
ÛÛ7 @
,
ÛÛ@ A
int
ÛÛB E
departamentoId
ÛÛF T
,
ÛÛT U
int
ÛÛV Y

operacaoId
ÛÛZ d
,
ÛÛd e
int
ÛÛf i
tarefaId
ÛÛj r
)
ÛÛr s
{
ÙÙ 	
DateTime
ıı 
dataConsultar
ıı "
=
ıı# $!
GetDataSegundoTurno
ıı% 8
(
ıı8 9
	unidadeId
ıı9 B
,
ııB C

operacaoId
ııD N
)
ııN O
;
ııO P
return
˜˜ &
GetMaximoNumeroAvaliacao
˜˜ +
(
˜˜+ ,
	unidadeId
˜˜, 5
,
˜˜5 6
departamentoId
˜˜7 E
,
˜˜E F

operacaoId
˜˜G Q
,
˜˜Q R
tarefaId
˜˜S [
,
˜˜[ \
dataConsultar
˜˜] j
)
˜˜j k
;
˜˜k l
}
¯¯ 	
public
ÉÉ 
static
ÉÉ 
int
ÉÉ &
GetMaximoNumeroAvaliacao
ÉÉ 2
(
ÉÉ2 3
int
ÉÉ3 6
	unidadeId
ÉÉ7 @
,
ÉÉ@ A
int
ÉÉB E
departamentoId
ÉÉF T
,
ÉÉT U
int
ÉÉV Y

operacaoId
ÉÉZ d
,
ÉÉd e
int
ÉÉf i
tarefaId
ÉÉj r
,
ÉÉr s
DateTime
ÉÉt |
dataConsultarÉÉ} ä
)ÉÉä ã
{
ÑÑ 	
using
ÖÖ 
(
ÖÖ 
var
ÖÖ 
db
ÖÖ 
=
ÖÖ 
new
ÖÖ  
SGQ_GlobalEntities
ÖÖ  2
(
ÖÖ2 3
)
ÖÖ3 4
)
ÖÖ4 5
{
ÜÜ 
int
áá 
retorno
áá 
;
áá 
var
ââ 
operacao
ââ 
=
ââ 
db
ââ !
.
ââ! "
	Operacoes
ââ" +
.
ââ+ ,
AsNoTracking
ââ, 8
(
ââ8 9
)
ââ9 :
.
ââ: ;
Single
ââ; A
(
ââA B
o
ââB C
=>
ââD F
o
ââG H
.
ââH I
Id
ââI K
==
ââL N

operacaoId
ââO Y
)
ââY Z
;
ââZ [
if
ãã 
(
ãã 
!
ãã 
operacao
ãã 
.
ãã 

ControleVP
ãã (
.
ãã( )
Value
ãã) .
)
ãã. /
{
åå 
retorno
çç 
=
çç 
db
çç  
.
çç  !
TarefaAvaliacoes
çç! 1
.
çç1 2
AsNoTracking
çç2 >
(
çç> ?
)
çç? @
.
éé 
Where
éé 
(
éé  
ta
éé  "
=>
éé# %
ta
éé& (
.
éé( )
Departamento
éé) 5
==
éé6 8
departamentoId
éé9 G
&&
èè 
ta
èè  "
.
èè" #
Operacao
èè# +
==
èè, .

operacaoId
èè/ 9
&&
êê 
ta
êê  "
.
êê" #
Tarefa
êê# )
==
êê* ,
tarefaId
êê- 5
&&
ëë 
(
ëë  !
!
ëë! "
ta
ëë" $
.
ëë$ %
Unidade
ëë% ,
.
ëë, -
HasValue
ëë- 5
||
ëë6 8
ta
ëë9 ;
.
ëë; <
Unidade
ëë< C
.
ëëC D
Value
ëëD I
==
ëëJ L
	unidadeId
ëëM V
)
ëëV W
)
ëëW X
.
íí 
Max
íí 
(
íí 
ta
íí  
=>
íí! #
ta
íí$ &
.
íí& '
	Avaliacao
íí' 0
)
íí0 1
;
íí1 2
}
ìì 
else
îî 
{
ïï 
if
ññ 
(
ññ 
operacao
ññ  
.
ññ  !
Nome
ññ! %
.
ññ% &
IndexOf
ññ& -
(
ññ- .
$str
ññ. 3
)
ññ3 4
>
ññ5 6
$num
ññ7 8
)
ññ8 9
{
óó 
retorno
òò 
=
òò  !
db
òò" $
.
òò$ %
VolumeProducao
òò% 3
.
òò3 4
AsNoTracking
òò4 @
(
òò@ A
)
òòA B
.
ôô 
Where
ôô "
(
ôô" #
vp
ôô# %
=>
ôô& (
vp
ôô) +
.
ôô+ ,
Unidade
ôô, 3
==
ôô4 6
	unidadeId
ôô7 @
&&
öö  "
vp
öö# %
.
öö% &
Departamento
öö& 2
==
öö3 5
departamentoId
öö6 D
&&
õõ  "
vp
õõ# %
.
õõ% &
Operacao
õõ& .
==
õõ/ 1

operacaoId
õõ2 <
&&
úú  "
DbFunctions
úú# .
.
úú. /
TruncateTime
úú/ ;
(
úú; <
vp
úú< >
.
úú> ?
Data
úú? C
)
úúC D
<=
úúE G
DbFunctions
úúH S
.
úúS T
TruncateTime
úúT `
(
úú` a
dataConsultar
úúa n
)
úún o
)
ùù  !
.
ùù! "
OrderByDescending
ùù" 3
(
ùù3 4
vp
ùù4 6
=>
ùù7 9
vp
ùù: <
.
ùù< =
Data
ùù= A
)
ùùA B
.
ùùB C
ThenBy
ùùC I
(
ùùI J
vp
ùùJ L
=>
ùùM O
vp
ùùP R
.
ùùR S
DataAlteracao
ùùS `
)
ùù` a
.
ûû 
Select
ûû #
(
ûû# $
vp
ûû$ &
=>
ûû' )
vp
ûû* ,
.
ûû, -
HorasTrabalho
ûû- :
.
ûû: ;
Value
ûû; @
)
ûû@ A
.
üü 
FirstOrDefault
üü +
(
üü+ ,
)
üü, -
;
üü- .
}
†† 
else
°° 
{
¢¢ 
if
££ 
(
££ 
operacao
££ $
.
££$ %
Nome
££% )
.
££) *
IndexOf
££* 1
(
££1 2
$str
££2 7
)
££7 8
>
££9 :
$num
££; <
)
££< =
{
§§ 
retorno
•• #
=
••$ %
db
••& (
.
••( )
VolumeProducao
••) 7
.
••7 8
AsNoTracking
••8 D
(
••D E
)
••E F
.
¶¶ 
Where
¶¶ "
(
¶¶" #
vp
¶¶# %
=>
¶¶& (
vp
¶¶) +
.
¶¶+ ,
Unidade
¶¶, 3
==
¶¶4 6
	unidadeId
¶¶7 @
&&
ßß  "
vp
ßß# %
.
ßß% &
Departamento
ßß& 2
==
ßß3 5
departamentoId
ßß6 D
&&
®®  "
vp
®®# %
.
®®% &
Operacao
®®& .
==
®®/ 1

operacaoId
®®2 <
&&
©©  "
DbFunctions
©©# .
.
©©. /
TruncateTime
©©/ ;
(
©©; <
vp
©©< >
.
©©> ?
Data
©©? C
)
©©C D
==
©©E G
DbFunctions
©©H S
.
©©S T
TruncateTime
©©T `
(
©©` a
dataConsultar
©©a n
)
©©n o
)
©©o p
.
´´ 
Select
´´ #
(
´´# $
vp
´´$ &
=>
´´' )
vp
´´* ,
.
´´, -
Quartos
´´- 4
.
´´4 5
Value
´´5 :
/
´´; <
$num
´´= >
)
´´> ?
.
¨¨ 
FirstOrDefault
¨¨ +
(
¨¨+ ,
)
¨¨, -
;
¨¨- .
}
≠≠ 
else
ÆÆ 
{
ØØ 
retorno
∞∞ #
=
∞∞$ %
db
∞∞& (
.
∞∞( )
VolumeProducao
∞∞) 7
.
∞∞7 8
AsNoTracking
∞∞8 D
(
∞∞D E
)
∞∞E F
.
±±  !
Where
±±! &
(
±±& '
vp
±±' )
=>
±±* ,
vp
±±- /
.
±±/ 0
Unidade
±±0 7
==
±±8 :
	unidadeId
±±; D
&&
≤≤$ &
vp
≤≤' )
.
≤≤) *
Departamento
≤≤* 6
==
≤≤7 9
departamentoId
≤≤: H
&&
≥≥$ &
vp
≥≥' )
.
≥≥) *
Operacao
≥≥* 2
==
≥≥3 5

operacaoId
≥≥6 @
&&
¥¥$ &
DbFunctions
¥¥' 2
.
¥¥2 3
TruncateTime
¥¥3 ?
(
¥¥? @
vp
¥¥@ B
.
¥¥B C
Data
¥¥C G
)
¥¥G H
<=
¥¥I K
DbFunctions
¥¥L W
.
¥¥W X
TruncateTime
¥¥X d
(
¥¥d e
dataConsultar
¥¥e r
)
¥¥r s
)
µµ$ %
.
µµ% &
OrderByDescending
µµ& 7
(
µµ7 8
vp
µµ8 :
=>
µµ; =
vp
µµ> @
.
µµ@ A
Data
µµA E
)
µµE F
.
µµF G
ThenBy
µµG M
(
µµM N
vp
µµN P
=>
µµQ S
vp
µµT V
.
µµV W
DataAlteracao
µµW d
)
µµd e
.
∂∂  !
Select
∂∂! '
(
∂∂' (
vp
∂∂( *
=>
∂∂+ -
vp
∂∂. 0
.
∂∂0 1
Quartos
∂∂1 8
.
∂∂8 9
Value
∂∂9 >
/
∂∂? @
$num
∂∂A B
)
∂∂B C
.
∑∑  !
FirstOrDefault
∑∑! /
(
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
}
ππ 
}
∫∫ 
}
ªª 
return
ΩΩ 
retorno
ΩΩ 
;
ΩΩ 
}
ææ 
}
øø 	
public
…… 
static
…… 
int
…… '
GetNumeroAmostraRealizada
…… 3
(
……3 4
int
……4 7
	unidadeId
……8 A
,
……A B
int
……C F
departamentoId
……G U
,
……U V
int
……W Z

operacaoId
……[ e
,
……e f
int
……g j
tarefaId
……k s
,
……s t
bool
……u y
	decrescer……z É
=……Ñ Ö
false……Ü ã
)……ã å
{
   	
DateTime
ÀÀ 
dataConsultar
ÀÀ "
=
ÀÀ# $!
GetDataSegundoTurno
ÀÀ% 8
(
ÀÀ8 9
	unidadeId
ÀÀ9 B
,
ÀÀB C

operacaoId
ÀÀD N
)
ÀÀN O
;
ÀÀO P
return
ÕÕ '
GetNumeroAmostraRealizada
ÕÕ ,
(
ÕÕ, -
	unidadeId
ÕÕ- 6
,
ÕÕ6 7
departamentoId
ÕÕ8 F
,
ÕÕF G

operacaoId
ÕÕH R
,
ÕÕR S
tarefaId
ÕÕT \
,
ÕÕ\ ]
$num
ÕÕ^ _
,
ÕÕ_ `
dataConsultar
ÕÕa n
,
ÕÕn o
	decrescer
ÕÕp y
)
ÕÕy z
;
ÕÕz {
}
ŒŒ 	
public
ŸŸ 
static
ŸŸ 
int
ŸŸ '
GetNumeroAmostraRealizada
ŸŸ 3
(
ŸŸ3 4
int
ŸŸ4 7
	unidadeId
ŸŸ8 A
,
ŸŸA B
int
ŸŸC F
departamentoId
ŸŸG U
,
ŸŸU V
int
ŸŸW Z

operacaoId
ŸŸ[ e
,
ŸŸe f
int
ŸŸg j
tarefaId
ŸŸk s
,
ŸŸs t
int
ŸŸu x
numeroAvaliacaoŸŸy à
,ŸŸà â
boolŸŸä é
	decrescerŸŸè ò
=ŸŸô ö
falseŸŸõ †
)ŸŸ† °
{
⁄⁄ 	
DateTime
€€ 
dataConsultar
€€ "
=
€€# $!
GetDataSegundoTurno
€€% 8
(
€€8 9
	unidadeId
€€9 B
,
€€B C

operacaoId
€€D N
)
€€N O
;
€€O P
return
›› '
GetNumeroAmostraRealizada
›› ,
(
››, -
	unidadeId
››- 6
,
››6 7
departamentoId
››8 F
,
››F G

operacaoId
››H R
,
››R S
tarefaId
››T \
,
››\ ]
numeroAvaliacao
››^ m
,
››m n
dataConsultar
››o |
,
››| }
	decrescer››~ á
)››á à
;››à â
}
ﬁﬁ 	
public
ÍÍ 
static
ÍÍ 
int
ÍÍ '
GetNumeroAmostraRealizada
ÍÍ 3
(
ÍÍ3 4
int
ÍÍ4 7
	unidadeId
ÍÍ8 A
,
ÍÍA B
int
ÍÍC F
departamentoId
ÍÍG U
,
ÍÍU V
int
ÍÍW Z

operacaoId
ÍÍ[ e
,
ÍÍe f
int
ÍÍg j
tarefaId
ÍÍk s
,
ÍÍs t
int
ÍÍu x
numeroAvaliacaoÍÍy à
,ÍÍà â
DateTimeÍÍä í
dataConsultarÍÍì †
,ÍÍ† °
boolÍÍ¢ ¶
	decrescerÍÍß ∞
=ÍÍ± ≤
falseÍÍ≥ ∏
)ÍÍ∏ π
{
ÎÎ 	
using
ÏÏ 
(
ÏÏ 
var
ÏÏ 
db
ÏÏ 
=
ÏÏ 
new
ÏÏ  
SGQ_GlobalEntities
ÏÏ  2
(
ÏÏ2 3
)
ÏÏ3 4
)
ÏÏ4 5
{
ÌÌ 
if
 
(
 

operacaoId
 
==
 !
$num
" $
)
$ %
{
ÒÒ 
var
ÚÚ  
amostrasRealizadas
ÚÚ *
=
ÚÚ+ ,,
GetAmostraRealizadaVerificacao
ÚÚ- K
(
ÚÚK L
	unidadeId
ÚÚL U
,
ÚÚU V
dataConsultar
ÚÚW d
,
ÚÚd e
db
ÚÚf h
)
ÚÚh i
-
ÚÚj k
(
ÚÚl m
	decrescer
ÚÚm v
?
ÚÚw x
$num
ÚÚy z
:
ÚÚ{ |
$num
ÚÚ} ~
)
ÚÚ~ 
;ÚÚ Ä
if
ÙÙ 
(
ÙÙ  
amostrasRealizadas
ÙÙ *
>
ÙÙ+ ,
$num
ÙÙ- .
)
ÙÙ. /
{
ıı 
var
˘˘ 
maximoAmostras
˘˘ *
=
˘˘+ ,$
GetMaximoNumeroAmostra
˘˘- C
(
˘˘C D
	unidadeId
˘˘D M
,
˘˘M N
departamentoId
˘˘O ]
,
˘˘] ^

operacaoId
˘˘_ i
,
˘˘i j
tarefaId
˘˘k s
,
˘˘s t
dataConsultar˘˘u Ç
)˘˘Ç É
;˘˘É Ñ
if
˙˙ 
(
˙˙  
amostrasRealizadas
˙˙ .
>
˙˙/ 0
maximoAmostras
˙˙1 ?
)
˙˙? @
{
˚˚ 
return
¸¸ " 
amostrasRealizadas
¸¸# 5
-
¸¸6 7
(
¸¸8 9 
amostrasRealizadas
¸¸9 K
/
¸¸L M
maximoAmostras
¸¸N \
*
¸¸] ^
maximoAmostras
¸¸_ m
)
¸¸m n
;
¸¸n o
}
˝˝ 
return
ˇˇ  
amostrasRealizadas
ˇˇ 1
;
ˇˇ1 2
}
ÄÄ 
return
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
}
ÉÉ 
var
ÖÖ 
dados
ÖÖ 
=
ÖÖ 
(
ÖÖ 
from
ÖÖ !
t
ÖÖ" #
in
ÖÖ$ &
db
ÖÖ' )
.
ÖÖ) *
Tarefas
ÖÖ* 1
.
ÖÖ1 2
AsNoTracking
ÖÖ2 >
(
ÖÖ> ?
)
ÖÖ? @
where
ÜÜ "
t
ÜÜ# $
.
ÜÜ$ %
Id
ÜÜ% '
==
ÜÜ( *
tarefaId
ÜÜ+ 3
select
áá #
new
áá$ '
{
áá( )
FormaAmostragem
áá* 9
=
áá: ;
t
áá< =
.
áá= >
FormaAmostragem
áá> M
,
ááM N

Frequencia
ááO Y
=
ááZ [
t
áá\ ]
.
áá] ^

Frequencia
áá^ h
}
áái j
)
ááj k
.
áák l
FirstOrDefault
áál z
(
ááz {
)
áá{ |
;
áá| }
if
ââ 
(
ââ 
dados
ââ 
.
ââ 
FormaAmostragem
ââ )
.
ââ) *
Equals
ââ* 0
(
ââ0 1
$str
ââ1 ;
)
ââ; <
)
ââ< =
{
ää 
return
ãã 
db
ãã 
.
ãã 

Resultados
ãã (
.
ãã( )
AsNoTracking
ãã) 5
(
ãã5 6
)
ãã6 7
.
åå  !
Where
åå! &
(
åå& '
r
åå' (
=>
åå) +
r
åå, -
.
åå- .
	EmpresaId
åå. 7
==
åå8 :
$num
åå; <
&&
çç  "
r
çç# $
.
çç$ %
	UnidadeId
çç% .
==
çç/ 1
	unidadeId
çç2 ;
&&
éé  "
r
éé# $
.
éé$ %
DepartamentoId
éé% 3
==
éé4 6
departamentoId
éé7 E
&&
èè  "
r
èè# $
.
èè$ %

OperacaoId
èè% /
==
èè0 2

operacaoId
èè3 =
&&
êê  "
r
êê# $
.
êê$ %
TarefaId
êê% -
==
êê. 0
tarefaId
êê1 9
&&
ëë  "
(
ëë# $
numeroAvaliacao
ëë$ 3
==
ëë4 6
$num
ëë7 8
||
ëë9 ;
(
ëë< =
numeroAvaliacao
ëë= L
!=
ëëM O
$num
ëëP Q
&&
ëëR T
r
ëëU V
.
ëëV W
NumeroAvaliacao
ëëW f
==
ëëg i
numeroAvaliacao
ëëj y
)
ëëy z
)
ëëz {
&&
íí  "
(
íí# $
(
íí$ %
dados
íí% *
.
íí* +

Frequencia
íí+ 5
==
íí6 8
$str
íí9 A
&&
ííB D
DbFunctions
ííE P
.
ííP Q
TruncateTime
ííQ ]
(
íí] ^
r
íí^ _
.
íí_ `
DataHora
íí` h
)
ííh i
==
ííj l
DbFunctions
íím x
.
ííx y
TruncateTimeííy Ö
(ííÖ Ü
dataConsultarííÜ ì
)ííì î
)ííî ï
||
ìì  "
(
ìì# $
dados
ìì$ )
.
ìì) *

Frequencia
ìì* 4
==
ìì5 7
$str
ìì8 A
&&
ììB D
r
ììE F
.
ììF G
DataHora
ììG O
.
ììO P
Year
ììP T
==
ììU W
dataConsultar
ììX e
.
ììe f
Year
ììf j
&&
ììk m
SqlFunctions
ììn z
.
ììz {
DatePartìì{ É
(ììÉ Ñ
$strììÑ à
,ììà â
rììä ã
.ììã å
DataHoraììå î
)ììî ï
==ììñ ò
SqlFunctionsììô •
.ìì• ¶
DatePartìì¶ Æ
(ììÆ Ø
$strììØ ≥
,ìì≥ ¥
dataConsultarììµ ¬
)ìì¬ √
)ìì√ ƒ
||
îî  "
(
îî# $
dados
îî$ )
.
îî) *

Frequencia
îî* 4
==
îî5 7
$str
îî8 C
&&
îîD F
(
îîG H
r
îîH I
.
îîI J
DataHora
îîJ R
.
îîR S
Year
îîS W
==
îîX Z
dataConsultar
îî[ h
.
îîh i
Year
îîi m
&&
îîn p
r
îîq r
.
îîr s
DataHora
îîs {
.
îî{ |
Monthîî| Å
==îîÇ Ñ
dataConsultarîîÖ í
.îîí ì
Monthîîì ò
&&îîô õ
(îîú ù
(îîù û
dataConsultarîîû ´
.îî´ ¨
Dayîî¨ Ø
<îî∞ ±
$numîî≤ ¥
&&îîµ ∑
rîî∏ π
.îîπ ∫
DataHoraîî∫ ¬
.îî¬ √
Dayîî√ ∆
<îî« »
$numîî… À
)îîÀ Ã
||îîÕ œ
(îî– —
dataConsultarîî— ﬁ
.îîﬁ ﬂ
Dayîîﬂ ‚
>=îî„ Â
$numîîÊ Ë
&&îîÈ Î
rîîÏ Ì
.îîÌ Ó
DataHoraîîÓ ˆ
.îîˆ ˜
Dayîî˜ ˙
>=îî˚ ˝
$numîî˛ Ä
)îîÄ Å
)îîÅ Ç
)îîÇ É
)îîÉ Ñ
||
ïï  "
(
ïï# $
dados
ïï$ )
.
ïï) *

Frequencia
ïï* 4
==
ïï5 7
$str
ïï8 @
&&
ïïA C
r
ïïD E
.
ïïE F
DataHora
ïïF N
.
ïïN O
Year
ïïO S
==
ïïT V
dataConsultar
ïïW d
.
ïïd e
Year
ïïe i
&&
ïïj l
r
ïïm n
.
ïïn o
DataHora
ïïo w
.
ïïw x
Month
ïïx }
==ïï~ Ä
dataConsultarïïÅ é
.ïïé è
Monthïïè î
)ïïî ï
)ïïï ñ
)ïïñ ó
.
ññ  !
GroupBy
ññ! (
(
ññ( )
r
ññ) *
=>
ññ+ -
new
ññ. 1
{
ññ2 3
r
ññ4 5
.
ññ5 6
	EmpresaId
ññ6 ?
,
ññ? @
r
ññA B
.
ññB C
	UnidadeId
ññC L
,
ññL M
r
ññN O
.
ññO P
DepartamentoId
ññP ^
,
ññ^ _
r
ññ` a
.
ñña b

OperacaoId
ññb l
,
ññl m
r
ññn o
.
ñño p
TarefaId
ññp x
}
ññy z
)
ññz {
.
óó  !
Select
óó! '
(
óó' (
rg
óó( *
=>
óó+ -
rg
óó. 0
.
óó0 1
Sum
óó1 4
(
óó4 5
r
óó5 6
=>
óó7 9
r
óó: ;
.
óó; <
PecasAvaliadas
óó< J
.
óóJ K
HasValue
óóK S
?
óóT U
r
óóV W
.
óóW X
PecasAvaliadas
óóX f
.
óóf g
Value
óóg l
:
óóm n
$num
óóo p
)
óóp q
)
óóq r
.
òò  !
FirstOrDefault
òò! /
(
òò/ 0
)
òò0 1
;
òò1 2
}
ôô 
else
öö 
{
õõ 
return
úú 
db
úú 
.
úú 

Resultados
úú (
.
úú( )
AsNoTracking
úú) 5
(
úú5 6
)
úú6 7
.
ùù  !
Where
ùù! &
(
ùù& '
r
ùù' (
=>
ùù) +
r
ùù, -
.
ùù- .
	EmpresaId
ùù. 7
==
ùù8 :
$num
ùù; <
&&
ûû  "
r
ûû# $
.
ûû$ %
	UnidadeId
ûû% .
==
ûû/ 1
	unidadeId
ûû2 ;
&&
üü  "
r
üü# $
.
üü$ %
DepartamentoId
üü% 3
==
üü4 6
departamentoId
üü7 E
&&
††  "
r
††# $
.
††$ %

OperacaoId
††% /
==
††0 2

operacaoId
††3 =
&&
°°  "
r
°°# $
.
°°$ %
TarefaId
°°% -
==
°°. 0
tarefaId
°°1 9
&&
¢¢  "
(
¢¢# $
numeroAvaliacao
¢¢$ 3
==
¢¢4 6
$num
¢¢7 8
||
¢¢9 ;
(
¢¢< =
numeroAvaliacao
¢¢= L
!=
¢¢M O
$num
¢¢P Q
&&
¢¢R T
r
¢¢U V
.
¢¢V W
NumeroAvaliacao
¢¢W f
==
¢¢g i
numeroAvaliacao
¢¢j y
)
¢¢y z
)
¢¢z {
&&
££  "
(
££# $
(
££$ %
dados
££% *
.
££* +

Frequencia
££+ 5
==
££6 8
$str
££9 A
&&
££B D
DbFunctions
££E P
.
££P Q
TruncateTime
££Q ]
(
££] ^
r
££^ _
.
££_ `
DataHora
££` h
)
££h i
==
££j l
DbFunctions
££m x
.
££x y
TruncateTime££y Ö
(££Ö Ü
dataConsultar££Ü ì
)££ì î
)££î ï
||
§§  "
(
§§# $
dados
§§$ )
.
§§) *

Frequencia
§§* 4
==
§§5 7
$str
§§8 A
&&
§§B D
r
§§E F
.
§§F G
DataHora
§§G O
.
§§O P
Year
§§P T
==
§§U W
dataConsultar
§§X e
.
§§e f
Year
§§f j
&&
§§k m
SqlFunctions
§§n z
.
§§z {
DatePart§§{ É
(§§É Ñ
$str§§Ñ à
,§§à â
r§§ä ã
.§§ã å
DataHora§§å î
)§§î ï
==§§ñ ò
SqlFunctions§§ô •
.§§• ¶
DatePart§§¶ Æ
(§§Æ Ø
$str§§Ø ≥
,§§≥ ¥
dataConsultar§§µ ¬
)§§¬ √
)§§√ ƒ
||
••  "
(
••# $
dados
••$ )
.
••) *

Frequencia
••* 4
==
••5 7
$str
••8 C
&&
••D F
(
••G H
r
••H I
.
••I J
DataHora
••J R
.
••R S
Year
••S W
==
••X Z
dataConsultar
••[ h
.
••h i
Year
••i m
&&
••n p
r
••q r
.
••r s
DataHora
••s {
.
••{ |
Month••| Å
==••Ç Ñ
dataConsultar••Ö í
.••í ì
Month••ì ò
&&••ô õ
(••ú ù
(••ù û
dataConsultar••û ´
.••´ ¨
Day••¨ Ø
<••∞ ±
$num••≤ ¥
&&••µ ∑
r••∏ π
.••π ∫
DataHora••∫ ¬
.••¬ √
Day••√ ∆
<••« »
$num••… À
)••À Ã
||••Õ œ
(••– —
dataConsultar••— ﬁ
.••ﬁ ﬂ
Day••ﬂ ‚
>=••„ Â
$num••Ê Ë
&&••È Î
r••Ï Ì
.••Ì Ó
DataHora••Ó ˆ
.••ˆ ˜
Day••˜ ˙
>=••˚ ˝
$num••˛ Ä
)••Ä Å
)••Å Ç
)••Ç É
)••É Ñ
||
¶¶  "
(
¶¶# $
dados
¶¶$ )
.
¶¶) *

Frequencia
¶¶* 4
==
¶¶5 7
$str
¶¶8 @
&&
¶¶A C
r
¶¶D E
.
¶¶E F
DataHora
¶¶F N
.
¶¶N O
Year
¶¶O S
==
¶¶T V
dataConsultar
¶¶W d
.
¶¶d e
Year
¶¶e i
&&
¶¶j l
r
¶¶m n
.
¶¶n o
DataHora
¶¶o w
.
¶¶w x
Month
¶¶x }
==¶¶~ Ä
dataConsultar¶¶Å é
.¶¶é è
Month¶¶è î
)¶¶î ï
)¶¶ï ñ
)¶¶ñ ó
.
ßß  !
Select
ßß! '
(
ßß' (
r
ßß( )
=>
ßß* ,
new
ßß- 0
{
ßß1 2
NumeroAvaliacao
ßß3 B
=
ßßC D
r
ßßE F
.
ßßF G
NumeroAvaliacao
ßßG V
,
ßßV W
NumeroAmostra
ßßX e
=
ßßf g
r
ßßh i
.
ßßi j
NumeroAmostra
ßßj w
}
ßßx y
)
ßßy z
.
®®  !
AsEnumerable
®®! -
(
®®- .
)
®®. /
.
©©  !
Select
©©! '
(
©©' (
r
©©( )
=>
©©* ,
string
©©- 3
.
©©3 4
Format
©©4 :
(
©©: ;
$str
©©; D
,
©©D E
r
©©F G
.
©©G H
NumeroAvaliacao
©©H W
,
©©W X
r
©©Y Z
.
©©Z [
NumeroAmostra
©©[ h
)
©©h i
)
©©i j
.
™™  !
Distinct
™™! )
(
™™) *
)
™™* +
.
´´  !
Count
´´! &
(
´´& '
)
´´' (
;
´´( )
}
¨¨ 
}
ØØ 
}
∞∞ 	
public
≥≥ 
static
≥≥ 
int
≥≥ 2
$GetNumeroAmostraRealizadaVerificacao
≥≥ >
(
≥≥> ?
int
≥≥? B
	unidadeId
≥≥C L
,
≥≥L M
int
≥≥N Q
departamentoId
≥≥R `
,
≥≥` a
int
≥≥b e

operacaoId
≥≥f p
,
≥≥p q
int
≥≥r u
tarefaId
≥≥v ~
,
≥≥~ 
int≥≥Ä É
numeroAvaliacao≥≥Ñ ì
,≥≥ì î
DateTime≥≥ï ù
dataConsultar≥≥û ´
,≥≥´ ¨
bool≥≥≠ ±
	decrescer≥≥≤ ª
=≥≥º Ω
false≥≥æ √
)≥≥√ ƒ
{
¥¥ 	
using
µµ 
(
µµ 
var
µµ 
db
µµ 
=
µµ 
new
µµ  
SGQ_GlobalEntities
µµ  2
(
µµ2 3
)
µµ3 4
)
µµ4 5
{
∂∂ 
if
ππ 
(
ππ 

operacaoId
ππ 
==
ππ !
$num
ππ" $
)
ππ$ %
{
∫∫ 
var
ªª  
amostrasRealizadas
ªª *
=
ªª+ ,,
GetAmostraRealizadaVerificacao
ªª- K
(
ªªK L
	unidadeId
ªªL U
,
ªªU V
dataConsultar
ªªW d
,
ªªd e
db
ªªf h
)
ªªh i
-
ªªj k
(
ªªl m
	decrescer
ªªm v
?
ªªw x
$num
ªªy z
:
ªª{ |
$num
ªª} ~
)
ªª~ 
;ªª Ä
if
ΩΩ 
(
ΩΩ  
amostrasRealizadas
ΩΩ *
>
ΩΩ+ ,
$num
ΩΩ- .
)
ΩΩ. /
{
ææ 
return
»»  
amostrasRealizadas
»» 1
;
»»1 2
}
…… 
return
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
}
ÃÃ 
var
ŒŒ 
dados
ŒŒ 
=
ŒŒ 
(
ŒŒ 
from
ŒŒ !
t
ŒŒ" #
in
ŒŒ$ &
db
ŒŒ' )
.
ŒŒ) *
Tarefas
ŒŒ* 1
.
ŒŒ1 2
AsNoTracking
ŒŒ2 >
(
ŒŒ> ?
)
ŒŒ? @
where
œœ "
t
œœ# $
.
œœ$ %
Id
œœ% '
==
œœ( *
tarefaId
œœ+ 3
select
–– #
new
––$ '
{
––( )
FormaAmostragem
––* 9
=
––: ;
t
––< =
.
––= >
FormaAmostragem
––> M
,
––M N

Frequencia
––O Y
=
––Z [
t
––\ ]
.
––] ^

Frequencia
––^ h
}
––i j
)
––j k
.
––k l
FirstOrDefault
––l z
(
––z {
)
––{ |
;
––| }
if
““ 
(
““ 
dados
““ 
.
““ 
FormaAmostragem
““ )
.
““) *
Equals
““* 0
(
““0 1
$str
““1 ;
)
““; <
)
““< =
{
”” 
return
‘‘ 
db
‘‘ 
.
‘‘ 

Resultados
‘‘ (
.
‘‘( )
AsNoTracking
‘‘) 5
(
‘‘5 6
)
‘‘6 7
.
’’  !
Where
’’! &
(
’’& '
r
’’' (
=>
’’) +
r
’’, -
.
’’- .
	EmpresaId
’’. 7
==
’’8 :
$num
’’; <
&&
÷÷  "
r
÷÷# $
.
÷÷$ %
	UnidadeId
÷÷% .
==
÷÷/ 1
	unidadeId
÷÷2 ;
&&
◊◊  "
r
◊◊# $
.
◊◊$ %
DepartamentoId
◊◊% 3
==
◊◊4 6
departamentoId
◊◊7 E
&&
ÿÿ  "
r
ÿÿ# $
.
ÿÿ$ %

OperacaoId
ÿÿ% /
==
ÿÿ0 2

operacaoId
ÿÿ3 =
&&
ŸŸ  "
r
ŸŸ# $
.
ŸŸ$ %
TarefaId
ŸŸ% -
==
ŸŸ. 0
tarefaId
ŸŸ1 9
&&
⁄⁄  "
(
⁄⁄# $
numeroAvaliacao
⁄⁄$ 3
==
⁄⁄4 6
$num
⁄⁄7 8
||
⁄⁄9 ;
(
⁄⁄< =
numeroAvaliacao
⁄⁄= L
!=
⁄⁄M O
$num
⁄⁄P Q
&&
⁄⁄R T
r
⁄⁄U V
.
⁄⁄V W
NumeroAvaliacao
⁄⁄W f
==
⁄⁄g i
numeroAvaliacao
⁄⁄j y
)
⁄⁄y z
)
⁄⁄z {
&&
€€  "
(
€€# $
(
€€$ %
dados
€€% *
.
€€* +

Frequencia
€€+ 5
==
€€6 8
$str
€€9 A
&&
€€B D
DbFunctions
€€E P
.
€€P Q
TruncateTime
€€Q ]
(
€€] ^
r
€€^ _
.
€€_ `
DataHora
€€` h
)
€€h i
==
€€j l
DbFunctions
€€m x
.
€€x y
TruncateTime€€y Ö
(€€Ö Ü
dataConsultar€€Ü ì
)€€ì î
)€€î ï
||
‹‹  "
(
‹‹# $
dados
‹‹$ )
.
‹‹) *

Frequencia
‹‹* 4
==
‹‹5 7
$str
‹‹8 A
&&
‹‹B D
r
‹‹E F
.
‹‹F G
DataHora
‹‹G O
.
‹‹O P
Year
‹‹P T
==
‹‹U W
dataConsultar
‹‹X e
.
‹‹e f
Year
‹‹f j
&&
‹‹k m
SqlFunctions
‹‹n z
.
‹‹z {
DatePart‹‹{ É
(‹‹É Ñ
$str‹‹Ñ à
,‹‹à â
r‹‹ä ã
.‹‹ã å
DataHora‹‹å î
)‹‹î ï
==‹‹ñ ò
SqlFunctions‹‹ô •
.‹‹• ¶
DatePart‹‹¶ Æ
(‹‹Æ Ø
$str‹‹Ø ≥
,‹‹≥ ¥
dataConsultar‹‹µ ¬
)‹‹¬ √
)‹‹√ ƒ
||
››  "
(
››# $
dados
››$ )
.
››) *

Frequencia
››* 4
==
››5 7
$str
››8 C
&&
››D F
(
››G H
r
››H I
.
››I J
DataHora
››J R
.
››R S
Year
››S W
==
››X Z
dataConsultar
››[ h
.
››h i
Year
››i m
&&
››n p
r
››q r
.
››r s
DataHora
››s {
.
››{ |
Month››| Å
==››Ç Ñ
dataConsultar››Ö í
.››í ì
Month››ì ò
&&››ô õ
(››ú ù
(››ù û
dataConsultar››û ´
.››´ ¨
Day››¨ Ø
<››∞ ±
$num››≤ ¥
&&››µ ∑
r››∏ π
.››π ∫
DataHora››∫ ¬
.››¬ √
Day››√ ∆
<››« »
$num››… À
)››À Ã
||››Õ œ
(››– —
dataConsultar››— ﬁ
.››ﬁ ﬂ
Day››ﬂ ‚
>=››„ Â
$num››Ê Ë
&&››È Î
r››Ï Ì
.››Ì Ó
DataHora››Ó ˆ
.››ˆ ˜
Day››˜ ˙
>=››˚ ˝
$num››˛ Ä
)››Ä Å
)››Å Ç
)››Ç É
)››É Ñ
||
ﬁﬁ  "
(
ﬁﬁ# $
dados
ﬁﬁ$ )
.
ﬁﬁ) *

Frequencia
ﬁﬁ* 4
==
ﬁﬁ5 7
$str
ﬁﬁ8 @
&&
ﬁﬁA C
r
ﬁﬁD E
.
ﬁﬁE F
DataHora
ﬁﬁF N
.
ﬁﬁN O
Year
ﬁﬁO S
==
ﬁﬁT V
dataConsultar
ﬁﬁW d
.
ﬁﬁd e
Year
ﬁﬁe i
&&
ﬁﬁj l
r
ﬁﬁm n
.
ﬁﬁn o
DataHora
ﬁﬁo w
.
ﬁﬁw x
Month
ﬁﬁx }
==ﬁﬁ~ Ä
dataConsultarﬁﬁÅ é
.ﬁﬁé è
Monthﬁﬁè î
)ﬁﬁî ï
)ﬁﬁï ñ
)ﬁﬁñ ó
.
ﬂﬂ  !
GroupBy
ﬂﬂ! (
(
ﬂﬂ( )
r
ﬂﬂ) *
=>
ﬂﬂ+ -
new
ﬂﬂ. 1
{
ﬂﬂ2 3
r
ﬂﬂ4 5
.
ﬂﬂ5 6
	EmpresaId
ﬂﬂ6 ?
,
ﬂﬂ? @
r
ﬂﬂA B
.
ﬂﬂB C
	UnidadeId
ﬂﬂC L
,
ﬂﬂL M
r
ﬂﬂN O
.
ﬂﬂO P
DepartamentoId
ﬂﬂP ^
,
ﬂﬂ^ _
r
ﬂﬂ` a
.
ﬂﬂa b

OperacaoId
ﬂﬂb l
,
ﬂﬂl m
r
ﬂﬂn o
.
ﬂﬂo p
TarefaId
ﬂﬂp x
}
ﬂﬂy z
)
ﬂﬂz {
.
‡‡  !
Select
‡‡! '
(
‡‡' (
rg
‡‡( *
=>
‡‡+ -
rg
‡‡. 0
.
‡‡0 1
Sum
‡‡1 4
(
‡‡4 5
r
‡‡5 6
=>
‡‡7 9
r
‡‡: ;
.
‡‡; <
PecasAvaliadas
‡‡< J
.
‡‡J K
HasValue
‡‡K S
?
‡‡T U
r
‡‡V W
.
‡‡W X
PecasAvaliadas
‡‡X f
.
‡‡f g
Value
‡‡g l
:
‡‡m n
$num
‡‡o p
)
‡‡p q
)
‡‡q r
.
··  !
FirstOrDefault
··! /
(
··/ 0
)
··0 1
;
··1 2
}
‚‚ 
else
„„ 
{
‰‰ 
return
ÂÂ 
db
ÂÂ 
.
ÂÂ 

Resultados
ÂÂ (
.
ÂÂ( )
AsNoTracking
ÂÂ) 5
(
ÂÂ5 6
)
ÂÂ6 7
.
ÊÊ  !
Where
ÊÊ! &
(
ÊÊ& '
r
ÊÊ' (
=>
ÊÊ) +
r
ÊÊ, -
.
ÊÊ- .
	EmpresaId
ÊÊ. 7
==
ÊÊ8 :
$num
ÊÊ; <
&&
ÁÁ  "
r
ÁÁ# $
.
ÁÁ$ %
	UnidadeId
ÁÁ% .
==
ÁÁ/ 1
	unidadeId
ÁÁ2 ;
&&
ËË  "
r
ËË# $
.
ËË$ %
DepartamentoId
ËË% 3
==
ËË4 6
departamentoId
ËË7 E
&&
ÈÈ  "
r
ÈÈ# $
.
ÈÈ$ %

OperacaoId
ÈÈ% /
==
ÈÈ0 2

operacaoId
ÈÈ3 =
&&
ÍÍ  "
r
ÍÍ# $
.
ÍÍ$ %
TarefaId
ÍÍ% -
==
ÍÍ. 0
tarefaId
ÍÍ1 9
&&
ÎÎ  "
(
ÎÎ# $
numeroAvaliacao
ÎÎ$ 3
==
ÎÎ4 6
$num
ÎÎ7 8
||
ÎÎ9 ;
(
ÎÎ< =
numeroAvaliacao
ÎÎ= L
!=
ÎÎM O
$num
ÎÎP Q
&&
ÎÎR T
r
ÎÎU V
.
ÎÎV W
NumeroAvaliacao
ÎÎW f
==
ÎÎg i
numeroAvaliacao
ÎÎj y
)
ÎÎy z
)
ÎÎz {
&&
ÏÏ  "
(
ÏÏ# $
(
ÏÏ$ %
dados
ÏÏ% *
.
ÏÏ* +

Frequencia
ÏÏ+ 5
==
ÏÏ6 8
$str
ÏÏ9 A
&&
ÏÏB D
DbFunctions
ÏÏE P
.
ÏÏP Q
TruncateTime
ÏÏQ ]
(
ÏÏ] ^
r
ÏÏ^ _
.
ÏÏ_ `
DataHora
ÏÏ` h
)
ÏÏh i
==
ÏÏj l
DbFunctions
ÏÏm x
.
ÏÏx y
TruncateTimeÏÏy Ö
(ÏÏÖ Ü
dataConsultarÏÏÜ ì
)ÏÏì î
)ÏÏî ï
||
ÌÌ  "
(
ÌÌ# $
dados
ÌÌ$ )
.
ÌÌ) *

Frequencia
ÌÌ* 4
==
ÌÌ5 7
$str
ÌÌ8 A
&&
ÌÌB D
r
ÌÌE F
.
ÌÌF G
DataHora
ÌÌG O
.
ÌÌO P
Year
ÌÌP T
==
ÌÌU W
dataConsultar
ÌÌX e
.
ÌÌe f
Year
ÌÌf j
&&
ÌÌk m
SqlFunctions
ÌÌn z
.
ÌÌz {
DatePartÌÌ{ É
(ÌÌÉ Ñ
$strÌÌÑ à
,ÌÌà â
rÌÌä ã
.ÌÌã å
DataHoraÌÌå î
)ÌÌî ï
==ÌÌñ ò
SqlFunctionsÌÌô •
.ÌÌ• ¶
DatePartÌÌ¶ Æ
(ÌÌÆ Ø
$strÌÌØ ≥
,ÌÌ≥ ¥
dataConsultarÌÌµ ¬
)ÌÌ¬ √
)ÌÌ√ ƒ
||
ÓÓ  "
(
ÓÓ# $
dados
ÓÓ$ )
.
ÓÓ) *

Frequencia
ÓÓ* 4
==
ÓÓ5 7
$str
ÓÓ8 C
&&
ÓÓD F
(
ÓÓG H
r
ÓÓH I
.
ÓÓI J
DataHora
ÓÓJ R
.
ÓÓR S
Year
ÓÓS W
==
ÓÓX Z
dataConsultar
ÓÓ[ h
.
ÓÓh i
Year
ÓÓi m
&&
ÓÓn p
r
ÓÓq r
.
ÓÓr s
DataHora
ÓÓs {
.
ÓÓ{ |
MonthÓÓ| Å
==ÓÓÇ Ñ
dataConsultarÓÓÖ í
.ÓÓí ì
MonthÓÓì ò
&&ÓÓô õ
(ÓÓú ù
(ÓÓù û
dataConsultarÓÓû ´
.ÓÓ´ ¨
DayÓÓ¨ Ø
<ÓÓ∞ ±
$numÓÓ≤ ¥
&&ÓÓµ ∑
rÓÓ∏ π
.ÓÓπ ∫
DataHoraÓÓ∫ ¬
.ÓÓ¬ √
DayÓÓ√ ∆
<ÓÓ« »
$numÓÓ… À
)ÓÓÀ Ã
||ÓÓÕ œ
(ÓÓ– —
dataConsultarÓÓ— ﬁ
.ÓÓﬁ ﬂ
DayÓÓﬂ ‚
>=ÓÓ„ Â
$numÓÓÊ Ë
&&ÓÓÈ Î
rÓÓÏ Ì
.ÓÓÌ Ó
DataHoraÓÓÓ ˆ
.ÓÓˆ ˜
DayÓÓ˜ ˙
>=ÓÓ˚ ˝
$numÓÓ˛ Ä
)ÓÓÄ Å
)ÓÓÅ Ç
)ÓÓÇ É
)ÓÓÉ Ñ
||
ÔÔ  "
(
ÔÔ# $
dados
ÔÔ$ )
.
ÔÔ) *

Frequencia
ÔÔ* 4
==
ÔÔ5 7
$str
ÔÔ8 @
&&
ÔÔA C
r
ÔÔD E
.
ÔÔE F
DataHora
ÔÔF N
.
ÔÔN O
Year
ÔÔO S
==
ÔÔT V
dataConsultar
ÔÔW d
.
ÔÔd e
Year
ÔÔe i
&&
ÔÔj l
r
ÔÔm n
.
ÔÔn o
DataHora
ÔÔo w
.
ÔÔw x
Month
ÔÔx }
==ÔÔ~ Ä
dataConsultarÔÔÅ é
.ÔÔé è
MonthÔÔè î
)ÔÔî ï
)ÔÔï ñ
)ÔÔñ ó
.
  !
Select
! '
(
' (
r
( )
=>
* ,
new
- 0
{
1 2
NumeroAvaliacao
3 B
=
C D
r
E F
.
F G
NumeroAvaliacao
G V
,
V W
NumeroAmostra
X e
=
f g
r
h i
.
i j
NumeroAmostra
j w
}
x y
)
y z
.
ÒÒ  !
AsEnumerable
ÒÒ! -
(
ÒÒ- .
)
ÒÒ. /
.
ÚÚ  !
Select
ÚÚ! '
(
ÚÚ' (
r
ÚÚ( )
=>
ÚÚ* ,
string
ÚÚ- 3
.
ÚÚ3 4
Format
ÚÚ4 :
(
ÚÚ: ;
$str
ÚÚ; D
,
ÚÚD E
r
ÚÚF G
.
ÚÚG H
NumeroAvaliacao
ÚÚH W
,
ÚÚW X
r
ÚÚY Z
.
ÚÚZ [
NumeroAmostra
ÚÚ[ h
)
ÚÚh i
)
ÚÚi j
.
ÛÛ  !
Distinct
ÛÛ! )
(
ÛÛ) *
)
ÛÛ* +
.
ÙÙ  !
Count
ÙÙ! &
(
ÙÙ& '
)
ÙÙ' (
;
ÙÙ( )
}
ıı 
}
¯¯ 
}
˘˘ 	
private
˚˚ 
static
˚˚ 
int
˚˚ ,
GetAmostraRealizadaVerificacao
˚˚ 9
(
˚˚9 :
int
˚˚: =
	unidadeId
˚˚> G
,
˚˚G H
DateTime
˚˚I Q
dataConsultar
˚˚R _
,
˚˚_ ` 
SGQ_GlobalEntities
˚˚a s
db
˚˚t v
)
˚˚v w
{
¸¸ 	
return
˝˝ 
(
˝˝ 
from
˝˝ 
v
˝˝ 
in
˝˝ 
db
˝˝  
.
˝˝  !$
VerificacaoTipificacao
˝˝! 7
.
˝˝7 8
AsNoTracking
˝˝8 D
(
˝˝D E
)
˝˝E F
let
˛˛ 
d
˛˛ 
=
˛˛ 
DbFunctions
˛˛ '
.
˛˛' (
TruncateTime
˛˛( 4
(
˛˛4 5
v
˛˛5 6
.
˛˛6 7
DataHora
˛˛7 ?
)
˛˛? @
where
ˇˇ 
d
ˇˇ 
==
ˇˇ 
DbFunctions
ˇˇ *
.
ˇˇ* +
TruncateTime
ˇˇ+ 7
(
ˇˇ7 8
dataConsultar
ˇˇ8 E
)
ˇˇE F
&&
Ä	Ä	 
v
Ä	Ä	 
.
Ä	Ä	 
	UnidadeId
Ä	Ä	 "
==
Ä	Ä	# %
	unidadeId
Ä	Ä	& /
group
Å	Å	 
d
Å	Å	 
by
Å	Å	 
d
Å	Å	  
)
Å	Å	  !
.
Ç	Ç	 
DefaultIfEmpty
Ç	Ç	 
(
Ç	Ç	  
)
Ç	Ç	  !
.
É	É	 
Select
É	É	 
(
É	É	 
r
É	É	 
=>
É	É	 
r
É	É	 
.
É	É	 
Count
É	É	 $
(
É	É	$ %
)
É	É	% &
)
É	É	& '
.
Ñ	Ñ	 
FirstOrDefault
Ñ	Ñ	 
(
Ñ	Ñ	  
)
Ñ	Ñ	  !
;
Ñ	Ñ	! "
}
Ö	Ö	 	
public
ë	ë	 
static
ë	ë	 
int
ë	ë	 "
GetNumeroAmostraData
ë	ë	 .
(
ë	ë	. /
int
ë	ë	/ 2
	unidadeId
ë	ë	3 <
,
ë	ë	< =
int
ë	ë	> A
departamentoId
ë	ë	B P
,
ë	ë	P Q
int
ë	ë	R U

operacaoId
ë	ë	V `
,
ë	ë	` a
int
ë	ë	b e
tarefaId
ë	ë	f n
,
ë	ë	n o
int
ë	ë	p s
numeroAvaliacaoë	ë	t É
,ë	ë	É Ñ
DateTimeë	ë	Ö ç
dataConsultarë	ë	é õ
)ë	ë	õ ú
{
í	í	 	
using
ì	ì	 
(
ì	ì	 
var
ì	ì	 
db
ì	ì	 
=
ì	ì	 
new
ì	ì	  
SGQ_GlobalEntities
ì	ì	  2
(
ì	ì	2 3
)
ì	ì	3 4
)
ì	ì	4 5
{
î	î	 
int
ï	ï	 
retorno
ï	ï	 
=
ï	ï	 
$num
ï	ï	 
;
ï	ï	  
var
ó	ó	 
dados
ó	ó	 
=
ó	ó	 
(
ó	ó	 
from
ó	ó	 !
t
ó	ó	" #
in
ó	ó	$ &
db
ó	ó	' )
.
ó	ó	) *
Tarefas
ó	ó	* 1
.
ó	ó	1 2
AsNoTracking
ó	ó	2 >
(
ó	ó	> ?
)
ó	ó	? @
where
ò	ò	 "
t
ò	ò	# $
.
ò	ò	$ %
Id
ò	ò	% '
==
ò	ò	( *
tarefaId
ò	ò	+ 3
select
ô	ô	 #
new
ô	ô	$ '
{
ô	ô	( )
FormaAmostragem
ô	ô	* 9
=
ô	ô	: ;
t
ô	ô	< =
.
ô	ô	= >
FormaAmostragem
ô	ô	> M
,
ô	ô	M N

Frequencia
ô	ô	O Y
=
ô	ô	Z [
t
ô	ô	\ ]
.
ô	ô	] ^

Frequencia
ô	ô	^ h
}
ô	ô	i j
)
ô	ô	j k
.
ô	ô	k l
FirstOrDefault
ô	ô	l z
(
ô	ô	z {
)
ô	ô	{ |
;
ô	ô	| }
if
õ	õ	 
(
õ	õ	 
dados
õ	õ	 
.
õ	õ	 
FormaAmostragem
õ	õ	 )
.
õ	õ	) *
Equals
õ	õ	* 0
(
õ	õ	0 1
$str
õ	õ	1 ;
)
õ	õ	; <
)
õ	õ	< =
{
ú	ú	 
retorno
ù	ù	 
=
ù	ù	 
db
ù	ù	  
.
ù	ù	  !

Resultados
ù	ù	! +
.
ù	ù	+ ,
AsNoTracking
ù	ù	, 8
(
ù	ù	8 9
)
ù	ù	9 :
.
û	û	  !
Where
û	û	! &
(
û	û	& '
r
û	û	' (
=>
û	û	) +
r
û	û	, -
.
û	û	- .
	EmpresaId
û	û	. 7
==
û	û	8 :
$num
û	û	; <
&&
ü	ü	  "
r
ü	ü	# $
.
ü	ü	$ %
	UnidadeId
ü	ü	% .
==
ü	ü	/ 1
	unidadeId
ü	ü	2 ;
&&
†	†	  "
r
†	†	# $
.
†	†	$ %
DepartamentoId
†	†	% 3
==
†	†	4 6
departamentoId
†	†	7 E
&&
°	°	  "
r
°	°	# $
.
°	°	$ %

OperacaoId
°	°	% /
==
°	°	0 2

operacaoId
°	°	3 =
&&
¢	¢	  "
r
¢	¢	# $
.
¢	¢	$ %
TarefaId
¢	¢	% -
==
¢	¢	. 0
tarefaId
¢	¢	1 9
&&
£	£	  "
(
£	£	# $
numeroAvaliacao
£	£	$ 3
==
£	£	4 6
$num
£	£	7 8
||
£	£	9 ;
(
£	£	< =
numeroAvaliacao
£	£	= L
!=
£	£	M O
$num
£	£	P Q
&&
£	£	R T
r
£	£	U V
.
£	£	V W
NumeroAvaliacao
£	£	W f
==
£	£	g i
numeroAvaliacao
£	£	j y
)
£	£	y z
)
£	£	z {
&&
§	§	  "
(
§	§	# $
(
§	§	$ %
dados
§	§	% *
.
§	§	* +

Frequencia
§	§	+ 5
==
§	§	6 8
$str
§	§	9 A
&&
§	§	B D
DbFunctions
§	§	E P
.
§	§	P Q
TruncateTime
§	§	Q ]
(
§	§	] ^
r
§	§	^ _
.
§	§	_ `
DataHoraMonitor
§	§	` o
.
§	§	o p
Value
§	§	p u
)
§	§	u v
==
§	§	w y
DbFunctions§	§	z Ö
.§	§	Ö Ü
TruncateTime§	§	Ü í
(§	§	í ì
dataConsultar§	§	ì †
)§	§	† °
)§	§	° ¢
||
•	•	  "
(
•	•	# $
dados
•	•	$ )
.
•	•	) *

Frequencia
•	•	* 4
==
•	•	5 7
$str
•	•	8 A
&&
•	•	B D
r
•	•	E F
.
•	•	F G
DataHora
•	•	G O
.
•	•	O P
Year
•	•	P T
==
•	•	U W
dataConsultar
•	•	X e
.
•	•	e f
Year
•	•	f j
&&
•	•	k m
SqlFunctions
•	•	n z
.
•	•	z {
DatePart•	•	{ É
(•	•	É Ñ
$str•	•	Ñ à
,•	•	à â
r•	•	ä ã
.•	•	ã å
DataHoraMonitor•	•	å õ
.•	•	õ ú
Value•	•	ú °
)•	•	° ¢
==•	•	£ •
SqlFunctions•	•	¶ ≤
.•	•	≤ ≥
DatePart•	•	≥ ª
(•	•	ª º
$str•	•	º ¿
,•	•	¿ ¡
dataConsultar•	•	¬ œ
)•	•	œ –
)•	•	– —
||
¶	¶	  "
(
¶	¶	# $
dados
¶	¶	$ )
.
¶	¶	) *

Frequencia
¶	¶	* 4
==
¶	¶	5 7
$str
¶	¶	8 C
&&
¶	¶	D F
(
¶	¶	G H
r
¶	¶	H I
.
¶	¶	I J
DataHoraMonitor
¶	¶	J Y
.
¶	¶	Y Z
Value
¶	¶	Z _
.
¶	¶	_ `
Year
¶	¶	` d
==
¶	¶	e g
dataConsultar
¶	¶	h u
.
¶	¶	u v
Year
¶	¶	v z
&&
¶	¶	{ }
r
¶	¶	~ 
.¶	¶	 Ä
DataHoraMonitor¶	¶	Ä è
.¶	¶	è ê
Value¶	¶	ê ï
.¶	¶	ï ñ
Month¶	¶	ñ õ
==¶	¶	ú û
dataConsultar¶	¶	ü ¨
.¶	¶	¨ ≠
Month¶	¶	≠ ≤
&&¶	¶	≥ µ
(¶	¶	∂ ∑
(¶	¶	∑ ∏
dataConsultar¶	¶	∏ ≈
.¶	¶	≈ ∆
Day¶	¶	∆ …
<¶	¶	  À
$num¶	¶	Ã Œ
&&¶	¶	œ —
r¶	¶	“ ”
.¶	¶	” ‘
DataHoraMonitor¶	¶	‘ „
.¶	¶	„ ‰
Value¶	¶	‰ È
.¶	¶	È Í
Day¶	¶	Í Ì
<¶	¶	Ó Ô
$num¶	¶	 Ú
)¶	¶	Ú Û
||¶	¶	Ù ˆ
(¶	¶	˜ ¯
dataConsultar¶	¶	¯ Ö
.¶	¶	Ö Ü
Day¶	¶	Ü â
>=¶	¶	ä å
$num¶	¶	ç è
&&¶	¶	ê í
r¶	¶	ì î
.¶	¶	î ï
DataHoraMonitor¶	¶	ï §
.¶	¶	§ •
Value¶	¶	• ™
.¶	¶	™ ´
Day¶	¶	´ Æ
>=¶	¶	Ø ±
$num¶	¶	≤ ¥
)¶	¶	¥ µ
)¶	¶	µ ∂
)¶	¶	∂ ∑
)¶	¶	∑ ∏
||
ß	ß	  "
(
ß	ß	# $
dados
ß	ß	$ )
.
ß	ß	) *

Frequencia
ß	ß	* 4
==
ß	ß	5 7
$str
ß	ß	8 @
&&
ß	ß	A C
r
ß	ß	D E
.
ß	ß	E F
DataHoraMonitor
ß	ß	F U
.
ß	ß	U V
Value
ß	ß	V [
.
ß	ß	[ \
Year
ß	ß	\ `
==
ß	ß	a c
dataConsultar
ß	ß	d q
.
ß	ß	q r
Year
ß	ß	r v
&&
ß	ß	w y
r
ß	ß	z {
.
ß	ß	{ |
DataHoraMonitorß	ß	| ã
.ß	ß	ã å
Valueß	ß	å ë
.ß	ß	ë í
Monthß	ß	í ó
==ß	ß	ò ö
dataConsultarß	ß	õ ®
.ß	ß	® ©
Monthß	ß	© Æ
)ß	ß	Æ Ø
)ß	ß	Ø ∞
)ß	ß	∞ ±
.
®	®	  !
GroupBy
®	®	! (
(
®	®	( )
r
®	®	) *
=>
®	®	+ -
new
®	®	. 1
{
®	®	2 3
r
®	®	4 5
.
®	®	5 6
	EmpresaId
®	®	6 ?
,
®	®	? @
r
®	®	A B
.
®	®	B C
	UnidadeId
®	®	C L
,
®	®	L M
r
®	®	N O
.
®	®	O P
DepartamentoId
®	®	P ^
,
®	®	^ _
r
®	®	` a
.
®	®	a b

OperacaoId
®	®	b l
,
®	®	l m
r
®	®	n o
.
®	®	o p
TarefaId
®	®	p x
}
®	®	y z
)
®	®	z {
.
©	©	  !
Select
©	©	! '
(
©	©	' (
rg
©	©	( *
=>
©	©	+ -
rg
©	©	. 0
.
©	©	0 1
Sum
©	©	1 4
(
©	©	4 5
r
©	©	5 6
=>
©	©	7 9
r
©	©	: ;
.
©	©	; <
PecasAvaliadas
©	©	< J
.
©	©	J K
Value
©	©	K P
)
©	©	P Q
)
©	©	Q R
.
™	™	  !
FirstOrDefault
™	™	! /
(
™	™	/ 0
)
™	™	0 1
;
™	™	1 2
}
´	´	 
else
¨	¨	 
{
≠	≠	 
retorno
Æ	Æ	 
=
Æ	Æ	 
db
Æ	Æ	  
.
Æ	Æ	  !

Resultados
Æ	Æ	! +
.
Æ	Æ	+ ,
AsNoTracking
Æ	Æ	, 8
(
Æ	Æ	8 9
)
Æ	Æ	9 :
.
Ø	Ø	  !
Where
Ø	Ø	! &
(
Ø	Ø	& '
r
Ø	Ø	' (
=>
Ø	Ø	) +
r
Ø	Ø	, -
.
Ø	Ø	- .
	EmpresaId
Ø	Ø	. 7
==
Ø	Ø	8 :
$num
Ø	Ø	; <
&&
∞	∞	  "
r
∞	∞	# $
.
∞	∞	$ %
	UnidadeId
∞	∞	% .
==
∞	∞	/ 1
	unidadeId
∞	∞	2 ;
&&
±	±	  "
r
±	±	# $
.
±	±	$ %
DepartamentoId
±	±	% 3
==
±	±	4 6
departamentoId
±	±	7 E
&&
≤	≤	  "
r
≤	≤	# $
.
≤	≤	$ %

OperacaoId
≤	≤	% /
==
≤	≤	0 2

operacaoId
≤	≤	3 =
&&
≥	≥	  "
r
≥	≥	# $
.
≥	≥	$ %
TarefaId
≥	≥	% -
==
≥	≥	. 0
tarefaId
≥	≥	1 9
&&
¥	¥	  "
(
¥	¥	# $
numeroAvaliacao
¥	¥	$ 3
==
¥	¥	4 6
$num
¥	¥	7 8
||
¥	¥	9 ;
(
¥	¥	< =
numeroAvaliacao
¥	¥	= L
!=
¥	¥	M O
$num
¥	¥	P Q
&&
¥	¥	R T
r
¥	¥	U V
.
¥	¥	V W
NumeroAvaliacao
¥	¥	W f
==
¥	¥	g i
numeroAvaliacao
¥	¥	j y
)
¥	¥	y z
)
¥	¥	z {
&&
µ	µ	  "
(
µ	µ	# $
(
µ	µ	$ %
dados
µ	µ	% *
.
µ	µ	* +

Frequencia
µ	µ	+ 5
==
µ	µ	6 8
$str
µ	µ	9 A
&&
µ	µ	B D
DbFunctions
µ	µ	E P
.
µ	µ	P Q
TruncateTime
µ	µ	Q ]
(
µ	µ	] ^
r
µ	µ	^ _
.
µ	µ	_ `
DataHoraMonitor
µ	µ	` o
.
µ	µ	o p
Value
µ	µ	p u
)
µ	µ	u v
==
µ	µ	w y
DbFunctionsµ	µ	z Ö
.µ	µ	Ö Ü
TruncateTimeµ	µ	Ü í
(µ	µ	í ì
dataConsultarµ	µ	ì †
)µ	µ	† °
)µ	µ	° ¢
||
∂	∂	  "
(
∂	∂	# $
dados
∂	∂	$ )
.
∂	∂	) *

Frequencia
∂	∂	* 4
==
∂	∂	5 7
$str
∂	∂	8 A
&&
∂	∂	B D
r
∂	∂	E F
.
∂	∂	F G
DataHora
∂	∂	G O
.
∂	∂	O P
Year
∂	∂	P T
==
∂	∂	U W
dataConsultar
∂	∂	X e
.
∂	∂	e f
Year
∂	∂	f j
&&
∂	∂	k m
SqlFunctions
∂	∂	n z
.
∂	∂	z {
DatePart∂	∂	{ É
(∂	∂	É Ñ
$str∂	∂	Ñ à
,∂	∂	à â
r∂	∂	ä ã
.∂	∂	ã å
DataHoraMonitor∂	∂	å õ
.∂	∂	õ ú
Value∂	∂	ú °
)∂	∂	° ¢
==∂	∂	£ •
SqlFunctions∂	∂	¶ ≤
.∂	∂	≤ ≥
DatePart∂	∂	≥ ª
(∂	∂	ª º
$str∂	∂	º ¿
,∂	∂	¿ ¡
dataConsultar∂	∂	¬ œ
)∂	∂	œ –
)∂	∂	– —
||
∑	∑	  "
(
∑	∑	# $
dados
∑	∑	$ )
.
∑	∑	) *

Frequencia
∑	∑	* 4
==
∑	∑	5 7
$str
∑	∑	8 C
&&
∑	∑	D F
(
∑	∑	G H
r
∑	∑	H I
.
∑	∑	I J
DataHoraMonitor
∑	∑	J Y
.
∑	∑	Y Z
Value
∑	∑	Z _
.
∑	∑	_ `
Year
∑	∑	` d
==
∑	∑	e g
dataConsultar
∑	∑	h u
.
∑	∑	u v
Year
∑	∑	v z
&&
∑	∑	{ }
r
∑	∑	~ 
.∑	∑	 Ä
DataHoraMonitor∑	∑	Ä è
.∑	∑	è ê
Value∑	∑	ê ï
.∑	∑	ï ñ
Month∑	∑	ñ õ
==∑	∑	ú û
dataConsultar∑	∑	ü ¨
.∑	∑	¨ ≠
Month∑	∑	≠ ≤
&&∑	∑	≥ µ
(∑	∑	∂ ∑
(∑	∑	∑ ∏
dataConsultar∑	∑	∏ ≈
.∑	∑	≈ ∆
Day∑	∑	∆ …
<∑	∑	  À
$num∑	∑	Ã Œ
&&∑	∑	œ —
r∑	∑	“ ”
.∑	∑	” ‘
DataHoraMonitor∑	∑	‘ „
.∑	∑	„ ‰
Value∑	∑	‰ È
.∑	∑	È Í
Day∑	∑	Í Ì
<∑	∑	Ó Ô
$num∑	∑	 Ú
)∑	∑	Ú Û
||∑	∑	Ù ˆ
(∑	∑	˜ ¯
dataConsultar∑	∑	¯ Ö
.∑	∑	Ö Ü
Day∑	∑	Ü â
>=∑	∑	ä å
$num∑	∑	ç è
&&∑	∑	ê í
r∑	∑	ì î
.∑	∑	î ï
DataHoraMonitor∑	∑	ï §
.∑	∑	§ •
Value∑	∑	• ™
.∑	∑	™ ´
Day∑	∑	´ Æ
>=∑	∑	Ø ±
$num∑	∑	≤ ¥
)∑	∑	¥ µ
)∑	∑	µ ∂
)∑	∑	∂ ∑
)∑	∑	∑ ∏
||
∏	∏	  "
(
∏	∏	# $
dados
∏	∏	$ )
.
∏	∏	) *

Frequencia
∏	∏	* 4
==
∏	∏	5 7
$str
∏	∏	8 @
&&
∏	∏	A C
r
∏	∏	D E
.
∏	∏	E F
DataHoraMonitor
∏	∏	F U
.
∏	∏	U V
Value
∏	∏	V [
.
∏	∏	[ \
Year
∏	∏	\ `
==
∏	∏	a c
dataConsultar
∏	∏	d q
.
∏	∏	q r
Year
∏	∏	r v
&&
∏	∏	w y
r
∏	∏	z {
.
∏	∏	{ |
DataHoraMonitor∏	∏	| ã
.∏	∏	ã å
Value∏	∏	å ë
.∏	∏	ë í
Month∏	∏	í ó
==∏	∏	ò ö
dataConsultar∏	∏	õ ®
.∏	∏	® ©
Month∏	∏	© Æ
)∏	∏	Æ Ø
)∏	∏	Ø ∞
)∏	∏	∞ ±
.
π	π	  !
Select
π	π	! '
(
π	π	' (
r
π	π	( )
=>
π	π	* ,
new
π	π	- 0
{
π	π	1 2
NumeroAvaliacao
π	π	3 B
=
π	π	C D
r
π	π	E F
.
π	π	F G
NumeroAvaliacao
π	π	G V
,
π	π	V W
NumeroAmostra
π	π	X e
=
π	π	f g
r
π	π	h i
.
π	π	i j
NumeroAmostra
π	π	j w
}
π	π	x y
)
π	π	y z
.
∫	∫	  !
AsEnumerable
∫	∫	! -
(
∫	∫	- .
)
∫	∫	. /
.
ª	ª	  !
Select
ª	ª	! '
(
ª	ª	' (
r
ª	ª	( )
=>
ª	ª	* ,
string
ª	ª	- 3
.
ª	ª	3 4
Format
ª	ª	4 :
(
ª	ª	: ;
$str
ª	ª	; D
,
ª	ª	D E
r
ª	ª	F G
.
ª	ª	G H
NumeroAvaliacao
ª	ª	H W
,
ª	ª	W X
r
ª	ª	Y Z
.
ª	ª	Z [
NumeroAmostra
ª	ª	[ h
)
ª	ª	h i
)
ª	ª	i j
.
º	º	  !
Distinct
º	º	! )
(
º	º	) *
)
º	º	* +
.
Ω	Ω	  !
Count
Ω	Ω	! &
(
Ω	Ω	& '
)
Ω	Ω	' (
;
Ω	Ω	( )
}
æ	æ	 
return
¿	¿	 
retorno
¿	¿	 
;
¿	¿	 
}
¡	¡	 
}
¬	¬	 	
public
Ã	Ã	 
static
Ã	Ã	 
int
Ã	Ã	 %
GetNumeroAvaliacaoAtual
Ã	Ã	 1
(
Ã	Ã	1 2
int
Ã	Ã	2 5
	unidadeId
Ã	Ã	6 ?
,
Ã	Ã	? @
int
Ã	Ã	A D
departamentoId
Ã	Ã	E S
,
Ã	Ã	S T
int
Ã	Ã	U X

operacaoId
Ã	Ã	Y c
,
Ã	Ã	c d
int
Ã	Ã	e h
tarefaId
Ã	Ã	i q
,
Ã	Ã	q r
bool
Ã	Ã	s w
	decrescerÃ	Ã	x Å
=Ã	Ã	Ç É
falseÃ	Ã	Ñ â
)Ã	Ã	â ä
{
Õ	Õ	 	
DateTime
Œ	Œ	 
dataConsultar
Œ	Œ	 "
=
Œ	Œ	# $!
GetDataSegundoTurno
Œ	Œ	% 8
(
Œ	Œ	8 9
	unidadeId
Œ	Œ	9 B
,
Œ	Œ	B C

operacaoId
Œ	Œ	D N
)
Œ	Œ	N O
;
Œ	Œ	O P
return
–	–	 %
GetNumeroAvaliacaoAtual
–	–	 *
(
–	–	* +
	unidadeId
–	–	+ 4
,
–	–	4 5
departamentoId
–	–	6 D
,
–	–	D E

operacaoId
–	–	F P
,
–	–	P Q
tarefaId
–	–	R Z
,
–	–	Z [
dataConsultar
–	–	\ i
,
–	–	i j
	decrescer
–	–	k t
)
–	–	t u
;
–	–	u v
}
—	—	 	
public
‹	‹	 
static
‹	‹	 
int
‹	‹	 %
GetNumeroAvaliacaoAtual
‹	‹	 1
(
‹	‹	1 2
int
‹	‹	2 5
	unidadeId
‹	‹	6 ?
,
‹	‹	? @
int
‹	‹	A D
departamentoId
‹	‹	E S
,
‹	‹	S T
int
‹	‹	U X

operacaoId
‹	‹	Y c
,
‹	‹	c d
int
‹	‹	e h
tarefaId
‹	‹	i q
,
‹	‹	q r
DateTime
‹	‹	s {
dataConsultar‹	‹	| â
,‹	‹	â ä
bool‹	‹	ã è
	decrescer‹	‹	ê ô
=‹	‹	ö õ
false‹	‹	ú °
)‹	‹	° ¢
{
›	›	 	
using
ﬁ	ﬁ	 
(
ﬁ	ﬁ	 
var
ﬁ	ﬁ	 
db
ﬁ	ﬁ	 
=
ﬁ	ﬁ	 
new
ﬁ	ﬁ	  
SGQ_GlobalEntities
ﬁ	ﬁ	  2
(
ﬁ	ﬁ	2 3
)
ﬁ	ﬁ	3 4
)
ﬁ	ﬁ	4 5
{
ﬂ	ﬂ	 
if
‚	‚	 
(
‚	‚	 

operacaoId
‚	‚	 
==
‚	‚	 !
$num
‚	‚	" $
)
‚	‚	$ %
{
„	„	 
var
‰	‰	  
amostrasRealizadas
‰	‰	 *
=
‰	‰	+ ,,
GetAmostraRealizadaVerificacao
‰	‰	- K
(
‰	‰	K L
	unidadeId
‰	‰	L U
,
‰	‰	U V
dataConsultar
‰	‰	W d
,
‰	‰	d e
db
‰	‰	f h
)
‰	‰	h i
-
‰	‰	j k
(
‰	‰	l m
	decrescer
‰	‰	m v
?
‰	‰	w x
$num
‰	‰	y z
:
‰	‰	{ |
$num
‰	‰	} ~
)
‰	‰	~ 
;‰	‰	 Ä
if
Ê	Ê	 
(
Ê	Ê	  
amostrasRealizadas
Ê	Ê	 *
>
Ê	Ê	+ ,
$num
Ê	Ê	- .
)
Ê	Ê	. /
{
Á	Á	 
var
Ë	Ë	 
maximoAmostras
Ë	Ë	 *
=
Ë	Ë	+ ,$
GetMaximoNumeroAmostra
Ë	Ë	- C
(
Ë	Ë	C D
	unidadeId
Ë	Ë	D M
,
Ë	Ë	M N
departamentoId
Ë	Ë	O ]
,
Ë	Ë	] ^

operacaoId
Ë	Ë	_ i
,
Ë	Ë	i j
tarefaId
Ë	Ë	k s
,
Ë	Ë	s t
dataConsultarË	Ë	u Ç
)Ë	Ë	Ç É
;Ë	Ë	É Ñ
return
Ï	Ï	 
(
Ï	Ï	   
amostrasRealizadas
Ï	Ï	  2
/
Ï	Ï	3 4
maximoAmostras
Ï	Ï	5 C
+
Ï	Ï	D E 
amostrasRealizadas
Ï	Ï	F X
==
Ï	Ï	Y [
maximoAmostras
Ï	Ï	\ j
?
Ï	Ï	k l
$num
Ï	Ï	m n
:
Ï	Ï	o p
(
Ï	Ï	q r
int
Ï	Ï	r u
)
Ï	Ï	u v
Math
Ï	Ï	v z
.
Ï	Ï	z {
CeilingÏ	Ï	{ Ç
(Ï	Ï	Ç É
(Ï	Ï	É Ñ
decimalÏ	Ï	Ñ ã
)Ï	Ï	ã å"
amostrasRealizadasÏ	Ï	å û
/Ï	Ï	ü †
(Ï	Ï	° ¢
decimalÏ	Ï	¢ ©
)Ï	Ï	© ™
maximoAmostrasÏ	Ï	™ ∏
)Ï	Ï	∏ π
)Ï	Ï	¡ ¬
;Ï	Ï	¬ √
}
Ì	Ì	 
return
Ô	Ô	 
$num
Ô	Ô	 
;
Ô	Ô	 
}
		 
var
Ú	Ú	 
dados
Ú	Ú	 
=
Ú	Ú	 
(
Ú	Ú	 
from
Ú	Ú	 !
t
Ú	Ú	" #
in
Ú	Ú	$ &
db
Ú	Ú	' )
.
Ú	Ú	) *
Tarefas
Ú	Ú	* 1
.
Ú	Ú	1 2
AsNoTracking
Ú	Ú	2 >
(
Ú	Ú	> ?
)
Ú	Ú	? @
where
Û	Û	 "
t
Û	Û	# $
.
Û	Û	$ %
Id
Û	Û	% '
==
Û	Û	( *
tarefaId
Û	Û	+ 3
select
Ù	Ù	 #
new
Ù	Ù	$ '
{
Ù	Ù	( )

Frequencia
Ù	Ù	* 4
=
Ù	Ù	5 6
t
Ù	Ù	7 8
.
Ù	Ù	8 9

Frequencia
Ù	Ù	9 C
}
Ù	Ù	D E
)
Ù	Ù	E F
.
Ù	Ù	F G
FirstOrDefault
Ù	Ù	G U
(
Ù	Ù	U V
)
Ù	Ù	V W
;
Ù	Ù	W X
return
ˆ	ˆ	 
db
ˆ	ˆ	 
.
ˆ	ˆ	 

Resultados
ˆ	ˆ	 $
.
ˆ	ˆ	$ %
AsNoTracking
ˆ	ˆ	% 1
(
ˆ	ˆ	1 2
)
ˆ	ˆ	2 3
.
˜	˜	 
Where
˜	˜	 "
(
˜	˜	" #
r
˜	˜	# $
=>
˜	˜	% '
r
˜	˜	( )
.
˜	˜	) *
	EmpresaId
˜	˜	* 3
==
˜	˜	4 6
$num
˜	˜	7 8
&&
¯	¯	 
r
¯	¯	  
.
¯	¯	  !
	UnidadeId
¯	¯	! *
==
¯	¯	+ -
	unidadeId
¯	¯	. 7
&&
˘	˘	 
r
˘	˘	  
.
˘	˘	  !
DepartamentoId
˘	˘	! /
==
˘	˘	0 2
departamentoId
˘	˘	3 A
&&
˙	˙	 
r
˙	˙	  
.
˙	˙	  !

OperacaoId
˙	˙	! +
==
˙	˙	, .

operacaoId
˙	˙	/ 9
&&
˚	˚	 
r
˚	˚	  
.
˚	˚	  !
TarefaId
˚	˚	! )
==
˚	˚	* ,
tarefaId
˚	˚	- 5
&&
¸	¸	 
(
¸	¸	  
(
¸	¸	  !
dados
¸	¸	! &
.
¸	¸	& '

Frequencia
¸	¸	' 1
==
¸	¸	2 4
$str
¸	¸	5 =
&&
¸	¸	> @
DbFunctions
¸	¸	A L
.
¸	¸	L M
TruncateTime
¸	¸	M Y
(
¸	¸	Y Z
r
¸	¸	Z [
.
¸	¸	[ \
DataHora
¸	¸	\ d
)
¸	¸	d e
==
¸	¸	f h
DbFunctions
¸	¸	i t
.
¸	¸	t u
TruncateTime¸	¸	u Å
(¸	¸	Å Ç
dataConsultar¸	¸	Ç è
)¸	¸	è ê
)¸	¸	ê ë
||
˝	˝	 
(
˝	˝	  
dados
˝	˝	  %
.
˝	˝	% &

Frequencia
˝	˝	& 0
==
˝	˝	1 3
$str
˝	˝	4 =
&&
˝	˝	> @
r
˝	˝	A B
.
˝	˝	B C
DataHora
˝	˝	C K
.
˝	˝	K L
Year
˝	˝	L P
==
˝	˝	Q S
dataConsultar
˝	˝	T a
.
˝	˝	a b
Year
˝	˝	b f
&&
˝	˝	g i
SqlFunctions
˝	˝	j v
.
˝	˝	v w
DatePart
˝	˝	w 
(˝	˝	 Ä
$str˝	˝	Ä Ñ
,˝	˝	Ñ Ö
r˝	˝	Ü á
.˝	˝	á à
DataHora˝	˝	à ê
)˝	˝	ê ë
==˝	˝	í î
SqlFunctions˝	˝	ï °
.˝	˝	° ¢
DatePart˝	˝	¢ ™
(˝	˝	™ ´
$str˝	˝	´ Ø
,˝	˝	Ø ∞
dataConsultar˝	˝	± æ
)˝	˝	æ ø
)˝	˝	ø ¿
||
˛	˛	 
(
˛	˛	  
dados
˛	˛	  %
.
˛	˛	% &

Frequencia
˛	˛	& 0
==
˛	˛	1 3
$str
˛	˛	4 ?
&&
˛	˛	@ B
(
˛	˛	C D
r
˛	˛	D E
.
˛	˛	E F
DataHora
˛	˛	F N
.
˛	˛	N O
Year
˛	˛	O S
==
˛	˛	T V
dataConsultar
˛	˛	W d
.
˛	˛	d e
Year
˛	˛	e i
&&
˛	˛	j l
r
˛	˛	m n
.
˛	˛	n o
DataHora
˛	˛	o w
.
˛	˛	w x
Month
˛	˛	x }
==˛	˛	~ Ä
dataConsultar˛	˛	Å é
.˛	˛	é è
Month˛	˛	è î
&&˛	˛	ï ó
(˛	˛	ò ô
(˛	˛	ô ö
dataConsultar˛	˛	ö ß
.˛	˛	ß ®
Day˛	˛	® ´
<˛	˛	¨ ≠
$num˛	˛	Æ ∞
&&˛	˛	± ≥
r˛	˛	¥ µ
.˛	˛	µ ∂
DataHora˛	˛	∂ æ
.˛	˛	æ ø
Day˛	˛	ø ¬
<˛	˛	√ ƒ
$num˛	˛	≈ «
)˛	˛	« »
||˛	˛	… À
(˛	˛	Ã Õ
dataConsultar˛	˛	Õ ⁄
.˛	˛	⁄ €
Day˛	˛	€ ﬁ
>=˛	˛	ﬂ ·
$num˛	˛	‚ ‰
&&˛	˛	Â Á
r˛	˛	Ë È
.˛	˛	È Í
DataHora˛	˛	Í Ú
.˛	˛	Ú Û
Day˛	˛	Û ˆ
>=˛	˛	˜ ˘
$num˛	˛	˙ ¸
)˛	˛	¸ ˝
)˛	˛	˝ ˛
)˛	˛	˛ ˇ
)˛	˛	ˇ Ä
||
ˇ	ˇ	 
(
ˇ	ˇ	  
dados
ˇ	ˇ	  %
.
ˇ	ˇ	% &

Frequencia
ˇ	ˇ	& 0
==
ˇ	ˇ	1 3
$str
ˇ	ˇ	4 <
&&
ˇ	ˇ	= ?
r
ˇ	ˇ	@ A
.
ˇ	ˇ	A B
DataHora
ˇ	ˇ	B J
.
ˇ	ˇ	J K
Year
ˇ	ˇ	K O
==
ˇ	ˇ	P R
dataConsultar
ˇ	ˇ	S `
.
ˇ	ˇ	` a
Year
ˇ	ˇ	a e
&&
ˇ	ˇ	f h
r
ˇ	ˇ	i j
.
ˇ	ˇ	j k
DataHora
ˇ	ˇ	k s
.
ˇ	ˇ	s t
Month
ˇ	ˇ	t y
==
ˇ	ˇ	z |
dataConsultarˇ	ˇ	} ä
.ˇ	ˇ	ä ã
Monthˇ	ˇ	ã ê
)ˇ	ˇ	ê ë
)ˇ	ˇ	ë í
)ˇ	ˇ	í ì
.
Ä
Ä
 
Select
Ä
Ä
 #
(
Ä
Ä
# $
r
Ä
Ä
$ %
=>
Ä
Ä
& (
r
Ä
Ä
) *
.
Ä
Ä
* +
NumeroAvaliacao
Ä
Ä
+ :
)
Ä
Ä
: ;
.
Å
Å
 
DefaultIfEmpty
Å
Å
 +
(
Å
Å
+ ,
)
Å
Å
, -
.
Ç
Ç
 
Max
Ç
Ç
  
(
Ç
Ç
  !
)
Ç
Ç
! "
;
Ç
Ç
" #
}
Ö
Ö
 
}
Ü
Ü
 	
public
ë
ë
 
static
ë
ë
 
int
ë
ë
 $
GetNumeroAvaliacaoData
ë
ë
 0
(
ë
ë
0 1
int
ë
ë
1 4
	unidadeId
ë
ë
5 >
,
ë
ë
> ?
int
ë
ë
@ C
departamentoId
ë
ë
D R
,
ë
ë
R S
int
ë
ë
T W

operacaoId
ë
ë
X b
,
ë
ë
b c
int
ë
ë
d g
tarefaId
ë
ë
h p
,
ë
ë
p q
DateTime
ë
ë
r z
dataConsultarë
ë
{ à
)ë
ë
à â
{
í
í
 	
using
ì
ì
 
(
ì
ì
 
var
ì
ì
 
db
ì
ì
 
=
ì
ì
 
new
ì
ì
  
SGQ_GlobalEntities
ì
ì
  2
(
ì
ì
2 3
)
ì
ì
3 4
)
ì
ì
4 5
{
î
î
 
int
ï
ï
 
retorno
ï
ï
 
=
ï
ï
 
$num
ï
ï
 
;
ï
ï
  
var
ó
ó
 
dados
ó
ó
 
=
ó
ó
 
(
ó
ó
 
from
ó
ó
 !
t
ó
ó
" #
in
ó
ó
$ &
db
ó
ó
' )
.
ó
ó
) *
Tarefas
ó
ó
* 1
.
ó
ó
1 2
AsNoTracking
ó
ó
2 >
(
ó
ó
> ?
)
ó
ó
? @
where
ò
ò
 "
t
ò
ò
# $
.
ò
ò
$ %
Id
ò
ò
% '
==
ò
ò
( *
tarefaId
ò
ò
+ 3
select
ô
ô
 #
new
ô
ô
$ '
{
ô
ô
( )

Frequencia
ô
ô
* 4
=
ô
ô
5 6
t
ô
ô
7 8
.
ô
ô
8 9

Frequencia
ô
ô
9 C
}
ô
ô
D E
)
ô
ô
E F
.
ô
ô
F G
FirstOrDefault
ô
ô
G U
(
ô
ô
U V
)
ô
ô
V W
;
ô
ô
W X
retorno
õ
õ
 
=
õ
õ
 
db
õ
õ
 
.
õ
õ
 

Resultados
õ
õ
 '
.
õ
õ
' (
AsNoTracking
õ
õ
( 4
(
õ
õ
4 5
)
õ
õ
5 6
.
ú
ú
 
Where
ú
ú
 "
(
ú
ú
" #
r
ú
ú
# $
=>
ú
ú
% '
r
ú
ú
( )
.
ú
ú
) *
	EmpresaId
ú
ú
* 3
==
ú
ú
4 6
$num
ú
ú
7 8
&&
ù
ù
 
r
ù
ù
  
.
ù
ù
  !
	UnidadeId
ù
ù
! *
==
ù
ù
+ -
	unidadeId
ù
ù
. 7
&&
û
û
 
r
û
û
  
.
û
û
  !
DepartamentoId
û
û
! /
==
û
û
0 2
departamentoId
û
û
3 A
&&
ü
ü
 
r
ü
ü
  
.
ü
ü
  !

OperacaoId
ü
ü
! +
==
ü
ü
, .

operacaoId
ü
ü
/ 9
&&
†
†
 
r
†
†
  
.
†
†
  !
TarefaId
†
†
! )
==
†
†
* ,
tarefaId
†
†
- 5
&&
°
°
 
(
°
°
  
(
°
°
  !
dados
°
°
! &
.
°
°
& '

Frequencia
°
°
' 1
==
°
°
2 4
$str
°
°
5 =
&&
°
°
> @
DbFunctions
°
°
A L
.
°
°
L M
TruncateTime
°
°
M Y
(
°
°
Y Z
r
°
°
Z [
.
°
°
[ \
DataHoraMonitor
°
°
\ k
.
°
°
k l
Value
°
°
l q
)
°
°
q r
==
°
°
s u
DbFunctions°
°
v Å
.°
°
Å Ç
TruncateTime°
°
Ç é
(°
°
é è
dataConsultar°
°
è ú
)°
°
ú ù
)°
°
ù û
||
¢
¢
 
(
¢
¢
  
dados
¢
¢
  %
.
¢
¢
% &

Frequencia
¢
¢
& 0
==
¢
¢
1 3
$str
¢
¢
4 =
&&
¢
¢
> @
r
¢
¢
A B
.
¢
¢
B C
DataHora
¢
¢
C K
.
¢
¢
K L
Year
¢
¢
L P
==
¢
¢
Q S
dataConsultar
¢
¢
T a
.
¢
¢
a b
Year
¢
¢
b f
&&
¢
¢
g i
SqlFunctions
¢
¢
j v
.
¢
¢
v w
DatePart
¢
¢
w 
(¢
¢
 Ä
$str¢
¢
Ä Ñ
,¢
¢
Ñ Ö
r¢
¢
Ü á
.¢
¢
á à
DataHoraMonitor¢
¢
à ó
.¢
¢
ó ò
Value¢
¢
ò ù
)¢
¢
ù û
==¢
¢
ü °
SqlFunctions¢
¢
¢ Æ
.¢
¢
Æ Ø
DatePart¢
¢
Ø ∑
(¢
¢
∑ ∏
$str¢
¢
∏ º
,¢
¢
º Ω
dataConsultar¢
¢
æ À
)¢
¢
À Ã
)¢
¢
Ã Õ
||
£
£
 
(
£
£
  
dados
£
£
  %
.
£
£
% &

Frequencia
£
£
& 0
==
£
£
1 3
$str
£
£
4 ?
&&
£
£
@ B
(
£
£
C D
r
£
£
D E
.
£
£
E F
DataHoraMonitor
£
£
F U
.
£
£
U V
Value
£
£
V [
.
£
£
[ \
Year
£
£
\ `
==
£
£
a c
dataConsultar
£
£
d q
.
£
£
q r
Year
£
£
r v
&&
£
£
w y
r
£
£
z {
.
£
£
{ |
DataHoraMonitor£
£
| ã
.£
£
ã å
Value£
£
å ë
.£
£
ë í
Month£
£
í ó
==£
£
ò ö
dataConsultar£
£
õ ®
.£
£
® ©
Month£
£
© Æ
&&£
£
Ø ±
(£
£
≤ ≥
(£
£
≥ ¥
dataConsultar£
£
¥ ¡
.£
£
¡ ¬
Day£
£
¬ ≈
<£
£
∆ «
$num£
£
»  
&&£
£
À Õ
r£
£
Œ œ
.£
£
œ –
DataHoraMonitor£
£
– ﬂ
.£
£
ﬂ ‡
Value£
£
‡ Â
.£
£
Â Ê
Day£
£
Ê È
<£
£
Í Î
$num£
£
Ï Ó
)£
£
Ó Ô
||£
£
 Ú
(£
£
Û Ù
dataConsultar£
£
Ù Å
.£
£
Å Ç
Day£
£
Ç Ö
>=£
£
Ü à
$num£
£
â ã
&&£
£
å é
r£
£
è ê
.£
£
ê ë
DataHoraMonitor£
£
ë †
.£
£
† °
Value£
£
° ¶
.£
£
¶ ß
Day£
£
ß ™
>=£
£
´ ≠
$num£
£
Æ ∞
)£
£
∞ ±
)£
£
± ≤
)£
£
≤ ≥
)£
£
≥ ¥
||
§
§
 
(
§
§
  
dados
§
§
  %
.
§
§
% &

Frequencia
§
§
& 0
==
§
§
1 3
$str
§
§
4 <
&&
§
§
= ?
r
§
§
@ A
.
§
§
A B
DataHoraMonitor
§
§
B Q
.
§
§
Q R
Value
§
§
R W
.
§
§
W X
Year
§
§
X \
==
§
§
] _
dataConsultar
§
§
` m
.
§
§
m n
Year
§
§
n r
&&
§
§
s u
r
§
§
v w
.
§
§
w x
DataHoraMonitor§
§
x á
.§
§
á à
Value§
§
à ç
.§
§
ç é
Month§
§
é ì
==§
§
î ñ
dataConsultar§
§
ó §
.§
§
§ •
Month§
§
• ™
)§
§
™ ´
)§
§
´ ¨
)§
§
¨ ≠
.
•
•
 
Select
•
•
 #
(
•
•
# $
r
•
•
$ %
=>
•
•
& (
r
•
•
) *
.
•
•
* +
NumeroAvaliacao
•
•
+ :
)
•
•
: ;
.
¶
¶
 
DefaultIfEmpty
¶
¶
 +
(
¶
¶
+ ,
)
¶
¶
, -
.
ß
ß
 
Max
ß
ß
  
(
ß
ß
  !
)
ß
ß
! "
;
ß
ß
" #
return
©
©
 
retorno
©
©
 
;
©
©
 
}
™
™
 
}
´
´
 	
public
µ
µ
 
static
µ
µ
 
int
µ
µ
 '
GetProximoNumeroAvaliacao
µ
µ
 3
(
µ
µ
3 4
int
µ
µ
4 7
	unidadeId
µ
µ
8 A
,
µ
µ
A B
int
µ
µ
C F
departamentoId
µ
µ
G U
,
µ
µ
U V
int
µ
µ
W Z

operacaoId
µ
µ
[ e
,
µ
µ
e f
int
µ
µ
g j
tarefaId
µ
µ
k s
,
µ
µ
s t
bool
µ
µ
u y
	decrescerµ
µ
z É
=µ
µ
Ñ Ö
falseµ
µ
Ü ã
)µ
µ
ã å
{
∂
∂
 	
using
∑
∑
 
(
∑
∑
 
var
∑
∑
 
db
∑
∑
 
=
∑
∑
 
new
∑
∑
  
SGQ_GlobalEntities
∑
∑
  2
(
∑
∑
2 3
)
∑
∑
3 4
)
∑
∑
4 5
{
∏
∏
 
int
π
π
 
retorno
π
π
 
=
π
π
 
$num
π
π
 
;
π
π
  
bool
ª
ª
 !
controlarAvaliacoes
ª
ª
 (
=
ª
ª
) *
db
ª
ª
+ -
.
ª
ª
- .
	Operacoes
ª
ª
. 7
.
ª
ª
7 8
AsNoTracking
ª
ª
8 D
(
ª
ª
D E
)
ª
ª
E F
.
ª
ª
F G
Single
ª
ª
G M
(
ª
ª
M N
o
ª
ª
N O
=>
ª
ª
P R
o
ª
ª
S T
.
ª
ª
T U
Id
ª
ª
U W
==
ª
ª
X Z

operacaoId
ª
ª
[ e
)
ª
ª
e f
.
ª
ª
f g!
ControlarAvaliacoes
ª
ª
g z
.
ª
ª
z {
Valueª
ª
{ Ä
;ª
ª
Ä Å
int
Ω
Ω
 
avaliacaoAtual
Ω
Ω
 "
=
Ω
Ω
# $%
GetNumeroAvaliacaoAtual
Ω
Ω
% <
(
Ω
Ω
< =
	unidadeId
Ω
Ω
= F
,
Ω
Ω
F G
departamentoId
Ω
Ω
H V
,
Ω
Ω
V W

operacaoId
Ω
Ω
X b
,
Ω
Ω
b c
tarefaId
Ω
Ω
d l
,
Ω
Ω
l m
	decrescer
Ω
Ω
n w
)
Ω
Ω
w x
;
Ω
Ω
x y
avaliacaoAtual
ø
ø
 
++
ø
ø
  
;
ø
ø
  !
int
¡
¡
 
maximoAvaliacoes
¡
¡
 $
=
¡
¡
% &&
GetMaximoNumeroAvaliacao
¡
¡
' ?
(
¡
¡
? @
	unidadeId
¡
¡
@ I
,
¡
¡
I J
departamentoId
¡
¡
K Y
,
¡
¡
Y Z

operacaoId
¡
¡
[ e
,
¡
¡
e f
tarefaId
¡
¡
g o
)
¡
¡
o p
;
¡
¡
p q
if
√
√
 
(
√
√
 !
controlarAvaliacoes
√
√
 '
&&
√
√
( *
maximoAvaliacoes
√
√
+ ;
==
√
√
< >
$num
√
√
? @
)
√
√
@ A
{
ƒ
ƒ
 
retorno
≈
≈
 
=
≈
≈
 
-
≈
≈
 
$num
≈
≈
  
;
≈
≈
  !
}
∆
∆
 
else
«
«
 
{
»
»
 
retorno
…
…
 
=
…
…
 
avaliacaoAtual
…
…
 ,
;
…
…
, -
}
 
 
 
return
Ã
Ã
 
retorno
Ã
Ã
 
;
Ã
Ã
 
}
Õ
Õ
 
}
Œ
Œ
 	
public
Ÿ
Ÿ
 
static
Ÿ
Ÿ
 
int
Ÿ
Ÿ
 '
GetProximoNumeroAvaliacao
Ÿ
Ÿ
 3
(
Ÿ
Ÿ
3 4
int
Ÿ
Ÿ
4 7
	unidadeId
Ÿ
Ÿ
8 A
,
Ÿ
Ÿ
A B
int
Ÿ
Ÿ
C F
departamentoId
Ÿ
Ÿ
G U
,
Ÿ
Ÿ
U V
int
Ÿ
Ÿ
W Z

operacaoId
Ÿ
Ÿ
[ e
,
Ÿ
Ÿ
e f
int
Ÿ
Ÿ
g j
tarefaId
Ÿ
Ÿ
k s
,
Ÿ
Ÿ
s t
DateTime
Ÿ
Ÿ
u }
dataConsultarŸ
Ÿ
~ ã
)Ÿ
Ÿ
ã å
{
⁄
⁄
 	
using
€
€
 
(
€
€
 
var
€
€
 
db
€
€
 
=
€
€
 
new
€
€
  
SGQ_GlobalEntities
€
€
  2
(
€
€
2 3
)
€
€
3 4
)
€
€
4 5
{
‹
‹
 
int
›
›
 
retorno
›
›
 
=
›
›
 
$num
›
›
 
;
›
›
  
bool
ﬂ
ﬂ
 !
controlarAvaliacoes
ﬂ
ﬂ
 (
=
ﬂ
ﬂ
) *
db
ﬂ
ﬂ
+ -
.
ﬂ
ﬂ
- .
	Operacoes
ﬂ
ﬂ
. 7
.
ﬂ
ﬂ
7 8
AsNoTracking
ﬂ
ﬂ
8 D
(
ﬂ
ﬂ
D E
)
ﬂ
ﬂ
E F
.
ﬂ
ﬂ
F G
Single
ﬂ
ﬂ
G M
(
ﬂ
ﬂ
M N
o
ﬂ
ﬂ
N O
=>
ﬂ
ﬂ
P R
o
ﬂ
ﬂ
S T
.
ﬂ
ﬂ
T U
Id
ﬂ
ﬂ
U W
==
ﬂ
ﬂ
X Z

operacaoId
ﬂ
ﬂ
[ e
)
ﬂ
ﬂ
e f
.
ﬂ
ﬂ
f g!
ControlarAvaliacoes
ﬂ
ﬂ
g z
.
ﬂ
ﬂ
z {
Valueﬂ
ﬂ
{ Ä
;ﬂ
ﬂ
Ä Å
int
·
·
 
	avaliacao
·
·
 
=
·
·
 %
GetNumeroAvaliacaoAtual
·
·
  7
(
·
·
7 8
	unidadeId
·
·
8 A
,
·
·
A B
departamentoId
·
·
C Q
,
·
·
Q R

operacaoId
·
·
S ]
,
·
·
] ^
tarefaId
·
·
_ g
,
·
·
g h
dataConsultar
·
·
i v
)
·
·
v w
;
·
·
w x
	avaliacao
„
„
 
++
„
„
 
;
„
„
 
int
Â
Â
 
maximoAvaliacoes
Â
Â
 $
=
Â
Â
% &&
GetMaximoNumeroAvaliacao
Â
Â
' ?
(
Â
Â
? @
	unidadeId
Â
Â
@ I
,
Â
Â
I J
departamentoId
Â
Â
K Y
,
Â
Â
Y Z

operacaoId
Â
Â
[ e
,
Â
Â
e f
tarefaId
Â
Â
g o
,
Â
Â
o p
dataConsultar
Â
Â
q ~
)
Â
Â
~ 
;Â
Â
 Ä
if
Á
Á
 
(
Á
Á
 !
controlarAvaliacoes
Á
Á
 '
&&
Á
Á
( *
maximoAvaliacoes
Á
Á
+ ;
==
Á
Á
< >
$num
Á
Á
? @
)
Á
Á
@ A
{
Ë
Ë
 
retorno
È
È
 
=
È
È
 
-
È
È
 
$num
È
È
  
;
È
È
  !
}
Í
Í
 
else
Î
Î
 
{
Ï
Ï
 
retorno
Ì
Ì
 
=
Ì
Ì
 
	avaliacao
Ì
Ì
 '
;
Ì
Ì
' (
}
Ó
Ó
 
return


 
retorno


 
;


 
}
Ò
Ò
 
}
Ú
Ú
 	
public
˝
˝
 
static
˝
˝
 
bool
˝
˝
 +
GetProximoNumeroAvaliacaoData
˝
˝
 8
(
˝
˝
8 9
int
˝
˝
9 <
	unidadeId
˝
˝
= F
,
˝
˝
F G
int
˝
˝
H K
departamentoId
˝
˝
L Z
,
˝
˝
Z [
int
˝
˝
\ _

operacaoId
˝
˝
` j
,
˝
˝
j k
int
˝
˝
l o
tarefaId
˝
˝
p x
,
˝
˝
x y
DateTime˝
˝
z Ç
dataConsultar˝
˝
É ê
,˝
˝
ê ë
out˝
˝
í ï
int˝
˝
ñ ô
numeroAvaliacao˝
˝
ö ©
)˝
˝
© ™
{
˛
˛
 	
using
ˇ
ˇ
 
(
ˇ
ˇ
 
var
ˇ
ˇ
 
db
ˇ
ˇ
 
=
ˇ
ˇ
 
new
ˇ
ˇ
  
SGQ_GlobalEntities
ˇ
ˇ
  2
(
ˇ
ˇ
2 3
)
ˇ
ˇ
3 4
)
ˇ
ˇ
4 5
{
ÄÄ 
bool
ÅÅ 
retorno
ÅÅ 
=
ÅÅ 
true
ÅÅ #
;
ÅÅ# $
bool
ÉÉ !
controlarAvaliacoes
ÉÉ (
=
ÉÉ) *
db
ÉÉ+ -
.
ÉÉ- .
	Operacoes
ÉÉ. 7
.
ÉÉ7 8
AsNoTracking
ÉÉ8 D
(
ÉÉD E
)
ÉÉE F
.
ÉÉF G
Single
ÉÉG M
(
ÉÉM N
o
ÉÉN O
=>
ÉÉP R
o
ÉÉS T
.
ÉÉT U
Id
ÉÉU W
==
ÉÉX Z

operacaoId
ÉÉ[ e
)
ÉÉe f
.
ÉÉf g!
ControlarAvaliacoes
ÉÉg z
.
ÉÉz {
ValueÉÉ{ Ä
;ÉÉÄ Å
int
ÖÖ 
	avaliacao
ÖÖ 
=
ÖÖ $
GetNumeroAvaliacaoData
ÖÖ  6
(
ÖÖ6 7
	unidadeId
ÖÖ7 @
,
ÖÖ@ A
departamentoId
ÖÖB P
,
ÖÖP Q

operacaoId
ÖÖR \
,
ÖÖ\ ]
tarefaId
ÖÖ^ f
,
ÖÖf g
dataConsultar
ÖÖh u
)
ÖÖu v
;
ÖÖv w
int
ÜÜ 
amostra
ÜÜ 
=
ÜÜ "
GetNumeroAmostraData
ÜÜ 2
(
ÜÜ2 3
	unidadeId
ÜÜ3 <
,
ÜÜ< =
departamentoId
ÜÜ> L
,
ÜÜL M

operacaoId
ÜÜN X
,
ÜÜX Y
tarefaId
ÜÜZ b
,
ÜÜb c
	avaliacao
ÜÜd m
,
ÜÜm n
dataConsultar
ÜÜo |
)
ÜÜ| }
;
ÜÜ} ~
int
àà 
maximoAmostras
àà "
=
àà# $$
GetMaximoNumeroAmostra
àà% ;
(
àà; <
	unidadeId
àà< E
,
ààE F
departamentoId
ààG U
,
ààU V

operacaoId
ààW a
,
ààa b
tarefaId
ààc k
,
ààk l
dataConsultar
ààm z
)
ààz {
;
àà{ |
if
ää 
(
ää 
amostra
ää 
==
ää 
maximoAmostras
ää -
||
ää. 0
(
ää1 2
	avaliacao
ää2 ;
==
ää< >
$num
ää? @
&&
ääA C
amostra
ääD K
==
ääL N
$num
ääO P
)
ääP Q
)
ääQ R
{
ãã 
	avaliacao
åå 
++
åå 
;
åå  
}
çç 
int
èè 
maximoAvaliacoes
èè $
=
èè% &&
GetMaximoNumeroAvaliacao
èè' ?
(
èè? @
	unidadeId
èè@ I
,
èèI J
departamentoId
èèK Y
,
èèY Z

operacaoId
èè[ e
,
èèe f
tarefaId
èèg o
,
èèo p
dataConsultar
èèq ~
)
èè~ 
;èè Ä
if
ëë 
(
ëë 
(
ëë !
controlarAvaliacoes
ëë (
&&
ëë) +
maximoAvaliacoes
ëë, <
==
ëë= ?
$num
ëë@ A
)
ëëA B
||
ëëC E
	avaliacao
ëëF O
>
ëëP Q
maximoAvaliacoes
ëëR b
)
ëëb c
{
íí 
retorno
ìì 
=
ìì 
false
ìì #
;
ìì# $
}
îî 
numeroAvaliacao
ññ 
=
ññ  !
	avaliacao
ññ" +
;
ññ+ ,
return
òò 
retorno
òò 
;
òò 
}
ôô 
}
öö 	
public
•• 
static
•• 
int
•• %
GetProximoNumeroAmostra
•• 1
(
••1 2
int
••2 5
	unidadeId
••6 ?
,
••? @
int
••A D
departamentoId
••E S
,
••S T
int
••U X

operacaoId
••Y c
,
••c d
int
••e h
tarefaId
••i q
,
••q r
int
••s v
numeroAvaliacao••w Ü
,••Ü á
bool••à å
	decrescer••ç ñ
=••ó ò
false••ô û
)••û ü
{
¶¶ 	
using
ßß 
(
ßß 
var
ßß 
db
ßß 
=
ßß 
new
ßß  
SGQ_GlobalEntities
ßß  2
(
ßß2 3
)
ßß3 4
)
ßß4 5
{
®® 
int
©© 
retorno
©© 
=
©© 
$num
©© 
;
©©  
int
´´ 
amostraAtual
´´  
=
´´! "'
GetNumeroAmostraRealizada
´´# <
(
´´< =
	unidadeId
´´= F
,
´´F G
departamentoId
´´H V
,
´´V W

operacaoId
´´X b
,
´´b c
tarefaId
´´d l
,
´´l m
numeroAvaliacao
´´n }
,
´´} ~
	decrescer´´ à
)´´à â
;´´â ä
amostraAtual
≠≠ 
++
≠≠ 
;
≠≠ 
int
ØØ 
maximoAmostras
ØØ "
=
ØØ# $$
GetMaximoNumeroAmostra
ØØ% ;
(
ØØ; <
	unidadeId
ØØ< E
,
ØØE F
departamentoId
ØØG U
,
ØØU V

operacaoId
ØØW a
,
ØØa b
tarefaId
ØØc k
)
ØØk l
;
ØØl m
if
±± 
(
±± 
amostraAtual
±±  
<=
±±! #
maximoAmostras
±±$ 2
)
±±2 3
{
≤≤ 
retorno
≥≥ 
=
≥≥ 
amostraAtual
≥≥ *
;
≥≥* +
}
¥¥ 
return
∂∂ 
retorno
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
ƒƒ 
static
ƒƒ 
int
ƒƒ %
GetProximoNumeroAmostra
ƒƒ 1
(
ƒƒ1 2
int
ƒƒ2 5
	unidadeId
ƒƒ6 ?
,
ƒƒ? @
int
ƒƒA D
departamentoId
ƒƒE S
,
ƒƒS T
int
ƒƒU X

operacaoId
ƒƒY c
,
ƒƒc d
int
ƒƒe h
tarefaId
ƒƒi q
,
ƒƒq r
int
ƒƒs v
numeroAvaliacaoƒƒw Ü
,ƒƒÜ á
DateTimeƒƒà ê
dataConsultarƒƒë û
)ƒƒû ü
{
≈≈ 	
using
∆∆ 
(
∆∆ 
var
∆∆ 
db
∆∆ 
=
∆∆ 
new
∆∆  
SGQ_GlobalEntities
∆∆  2
(
∆∆2 3
)
∆∆3 4
)
∆∆4 5
{
«« 
int
»» 
retorno
»» 
=
»» 
$num
»» 
;
»»  
int
   
amostraAtual
    
=
  ! "'
GetNumeroAmostraRealizada
  # <
(
  < =
	unidadeId
  = F
,
  F G
departamentoId
  H V
,
  V W

operacaoId
  X b
,
  b c
tarefaId
  d l
,
  l m
numeroAvaliacao
  n }
,
  } ~
dataConsultar   å
)  å ç
;  ç é
amostraAtual
ÃÃ 
++
ÃÃ 
;
ÃÃ 
int
ŒŒ 
maximoAmostras
ŒŒ "
=
ŒŒ# $$
GetMaximoNumeroAmostra
ŒŒ% ;
(
ŒŒ; <
	unidadeId
ŒŒ< E
,
ŒŒE F
departamentoId
ŒŒG U
,
ŒŒU V

operacaoId
ŒŒW a
,
ŒŒa b
tarefaId
ŒŒc k
,
ŒŒk l
dataConsultar
ŒŒm z
)
ŒŒz {
;
ŒŒ{ |
if
–– 
(
–– 
amostraAtual
––  
<=
––! #
maximoAmostras
––$ 2
)
––2 3
{
—— 
retorno
““ 
=
““ 
amostraAtual
““ *
;
““* +
}
”” 
return
’’ 
retorno
’’ 
;
’’ 
}
÷÷ 
}
◊◊ 	
public
„„ 
static
„„ 
int
„„ )
GetProximoNumeroAmostraData
„„ 5
(
„„5 6
int
„„6 9
	unidadeId
„„: C
,
„„C D
int
„„E H
departamentoId
„„I W
,
„„W X
int
„„Y \

operacaoId
„„] g
,
„„g h
int
„„i l
tarefaId
„„m u
,
„„u v
int
„„w z
numeroAvaliacao„„{ ä
,„„ä ã
DateTime„„å î
dataConsultar„„ï ¢
)„„¢ £
{
‰‰ 	
using
ÂÂ 
(
ÂÂ 
var
ÂÂ 
db
ÂÂ 
=
ÂÂ 
new
ÂÂ  
SGQ_GlobalEntities
ÂÂ  2
(
ÂÂ2 3
)
ÂÂ3 4
)
ÂÂ4 5
{
ÊÊ 
int
ÁÁ 
retorno
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ  
int
ÈÈ 
amostraAtual
ÈÈ  
=
ÈÈ! ""
GetNumeroAmostraData
ÈÈ# 7
(
ÈÈ7 8
	unidadeId
ÈÈ8 A
,
ÈÈA B
departamentoId
ÈÈC Q
,
ÈÈQ R

operacaoId
ÈÈS ]
,
ÈÈ] ^
tarefaId
ÈÈ_ g
,
ÈÈg h
numeroAvaliacao
ÈÈi x
,
ÈÈx y
dataConsultarÈÈz á
)ÈÈá à
;ÈÈà â
amostraAtual
ÎÎ 
++
ÎÎ 
;
ÎÎ 
int
ÌÌ 
maximoAmostras
ÌÌ "
=
ÌÌ# $$
GetMaximoNumeroAmostra
ÌÌ% ;
(
ÌÌ; <
	unidadeId
ÌÌ< E
,
ÌÌE F
departamentoId
ÌÌG U
,
ÌÌU V

operacaoId
ÌÌW a
,
ÌÌa b
tarefaId
ÌÌc k
,
ÌÌk l
dataConsultar
ÌÌm z
)
ÌÌz {
;
ÌÌ{ |
if
ÔÔ 
(
ÔÔ 
amostraAtual
ÔÔ  
<=
ÔÔ! #
maximoAmostras
ÔÔ$ 2
)
ÔÔ2 3
{
 
retorno
ÒÒ 
=
ÒÒ 
amostraAtual
ÒÒ *
;
ÒÒ* +
}
ÚÚ 
return
ÙÙ 
retorno
ÙÙ 
;
ÙÙ 
}
ıı 
}
ˆˆ 	
public
˛˛ 
static
˛˛ 
DateTime
˛˛ !
GetDataSegundoTurno
˛˛ 2
(
˛˛2 3
int
˛˛3 6
	unidadeId
˛˛7 @
,
˛˛@ A
int
˛˛B E

operacaoId
˛˛F P
)
˛˛P Q
{
ˇˇ 	
using
ÄÄ 
(
ÄÄ 
var
ÄÄ 
db
ÄÄ 
=
ÄÄ 
new
ÄÄ  
SGQ_GlobalEntities
ÄÄ  2
(
ÄÄ2 3
)
ÄÄ3 4
)
ÄÄ4 5
{
ÅÅ 
DateTime
ÇÇ 
dataConsultar
ÇÇ &
;
ÇÇ& '
var
ÑÑ 
horario
ÑÑ 
=
ÑÑ 
db
ÑÑ  
.
ÑÑ  !
Horarios
ÑÑ! )
.
ÑÑ) *
AsNoTracking
ÑÑ* 6
(
ÑÑ6 7
)
ÑÑ7 8
.
ÖÖ 
Where
ÖÖ 
(
ÖÖ 
h
ÖÖ 
=>
ÖÖ 
h
ÖÖ  !
.
ÖÖ! "

OperacaoId
ÖÖ" ,
==
ÖÖ- /

operacaoId
ÖÖ0 :
&&
ÖÖ; =
h
ÖÖ> ?
.
ÖÖ? @
	UnidadeId
ÖÖ@ I
.
ÖÖI J
HasValue
ÖÖJ R
&&
ÖÖS U
h
ÖÖV W
.
ÖÖW X
	UnidadeId
ÖÖX a
.
ÖÖa b
Value
ÖÖb g
==
ÖÖh j
	unidadeId
ÖÖk t
)
ÖÖt u
.
ÜÜ 
Select
ÜÜ 
(
ÜÜ 
h
ÜÜ 
=>
ÜÜ  
h
ÜÜ! "
.
ÜÜ" #
Hora
ÜÜ# '
)
ÜÜ' (
.
ÜÜ( )
FirstOrDefault
ÜÜ) 7
(
ÜÜ7 8
)
ÜÜ8 9
;
ÜÜ9 :
if
àà 
(
àà 
horario
àà 
==
àà 
TimeSpan
àà '
.
àà' (
Zero
àà( ,
)
àà, -
{
ââ 
horario
ää 
=
ää 
db
ää  
.
ää  !
Horarios
ää! )
.
ää) *
AsNoTracking
ää* 6
(
ää6 7
)
ää7 8
.
ãã 
Where
ãã 
(
ãã 
h
ãã  
=>
ãã! #
h
ãã$ %
.
ãã% &

OperacaoId
ãã& 0
==
ãã1 3

operacaoId
ãã4 >
&&
ãã? A
!
ããB C
h
ããC D
.
ããD E
	UnidadeId
ããE N
.
ããN O
HasValue
ããO W
)
ããW X
.
åå 
Select
åå 
(
åå  
h
åå  !
=>
åå" $
h
åå% &
.
åå& '
Hora
åå' +
)
åå+ ,
.
åå, -
FirstOrDefault
åå- ;
(
åå; <
)
åå< =
;
åå= >
}
çç 
if
èè 
(
èè 
DateTime
èè 
.
èè 
Now
èè  
.
èè  !
	TimeOfDay
èè! *
>
èè+ ,
TimeSpan
èè- 5
.
èè5 6
Zero
èè6 :
&&
èè; =
horario
èè> E
>=
èèF H
DateTime
èèI Q
.
èèQ R
Now
èèR U
.
èèU V
	TimeOfDay
èèV _
)
èè_ `
{
êê 
dataConsultar
ëë !
=
ëë" #
DateTime
ëë$ ,
.
ëë, -
Now
ëë- 0
.
ëë0 1
AddDays
ëë1 8
(
ëë8 9
-
ëë9 :
$num
ëë: ;
)
ëë; <
;
ëë< =
}
íí 
else
ìì 
{
îî 
dataConsultar
ïï !
=
ïï" #
DateTime
ïï$ ,
.
ïï, -
Now
ïï- 0
;
ïï0 1
}
ññ 
return
óó 
dataConsultar
óó $
;
óó$ %
}
òò 
}
ôô 	
public
†† 
static
†† 
List
†† 
<
†† 
Tuple
††  
<
††  !
string
††! '
,
††' (
object
††) /
,
††/ 0
string
††1 7
>
††7 8
>
††8 9
GetFlagsOperacao
††: J
(
††J K
int
††K N

operacaoId
††O Y
)
††Y Z
{
°° 	
using
¢¢ 
(
¢¢ 
var
¢¢ 
db
¢¢ 
=
¢¢ 
new
¢¢  
SGQ_GlobalEntities
¢¢  2
(
¢¢2 3
)
¢¢3 4
)
¢¢4 5
{
££ 
var
§§ 
flags
§§ 
=
§§ 
(
§§ 
from
§§ !
o
§§" #
in
§§$ &
db
§§' )
.
§§) *
	Operacoes
§§* 3
.
§§3 4
AsNoTracking
§§4 @
(
§§@ A
)
§§A B
where
•• "
o
••# $
.
••$ %
Id
••% '
==
••( *

operacaoId
••+ 5
select
¶¶ #
new
¶¶$ '
{
ßß 
Nivel
®®! &
=
®®' (
o
®®) *
.
®®* +
Nivel
®®+ 0
,
®®0 1

Frequencia
©©! +
=
©©, -
o
©©. /
.
©©/ 0

Frequencia
©©0 :
,
©©: ;
FrequenciaAlerta
™™! 1
=
™™2 3
o
™™4 5
.
™™5 6
FrequenciaAlerta
™™6 F
,
™™F G
Vigencia
´´! )
=
´´* +
o
´´, -
.
´´- .
Vigencia
´´. 6
,
´´6 7

ControleVP
¨¨! +
=
¨¨, -
o
¨¨. /
.
¨¨/ 0

ControleVP
¨¨0 :
,
¨¨: ;

ControleFP
≠≠! +
=
≠≠, -
o
≠≠. /
.
≠≠/ 0

ControleFP
≠≠0 :
,
≠≠: ;
AdCampoVazio
ÆÆ! -
=
ÆÆ. /
o
ÆÆ0 1
.
ÆÆ1 2
ADCAMPOVAZIO
ÆÆ2 >
,
ÆÆ> ?!
AvaliarEquipamentos
ØØ! 4
=
ØØ5 6
o
ØØ7 8
.
ØØ8 9!
AvaliarEquipamentos
ØØ9 L
,
ØØL M
AvaliarCamaras
∞∞! /
=
∞∞0 1
o
∞∞2 3
.
∞∞3 4
AvaliarCamaras
∞∞4 B
,
∞∞B C

Especifico
±±! +
=
±±, -
o
±±. /
.
±±/ 0

Especifico
±±0 :
,
±±: ;
AlterarAmostra
≤≤! /
=
≤≤0 1
o
≤≤2 3
.
≤≤3 4
AlterarAmostra
≤≤4 B
,
≤≤B C
IncluirTarefa
≥≥! .
=
≥≥/ 0
o
≥≥1 2
.
≥≥2 3
IncluirTarefa
≥≥3 @
,
≥≥@ A
IncluirAvaliacao
¥¥! 1
=
¥¥2 3
o
¥¥4 5
.
¥¥5 6
IncluirAvaliacao
¥¥6 F
,
¥¥F G
ExibirPColeta
µµ! .
=
µµ/ 0
o
µµ1 2
.
µµ2 3
ExibirPColeta
µµ3 @
,
µµ@ A

PadraoPerc
∂∂! +
=
∂∂, -
o
∂∂. /
.
∂∂/ 0

PadraoPerc
∂∂0 :
,
∂∂: ;
AvaliarSequencial
∑∑! 2
=
∑∑3 4
o
∑∑5 6
.
∑∑6 7
AvaliarSequencial
∑∑7 H
,
∑∑H I
Criterio
∏∏! )
=
∏∏* +
o
∏∏, -
.
∏∏- .
Criterio
∏∏. 6
,
∏∏6 7

ExibirData
ππ! +
=
ππ, -
o
ππ. /
.
ππ/ 0

ExibirData
ππ0 :
,
ππ: ;
EmitirAlerta
∫∫! -
=
∫∫. /
o
∫∫0 1
.
∫∫1 2
EmitirAlerta
∫∫2 >
,
∫∫> ?!
ControlarAvaliacoes
ªª! 4
=
ªª5 6
o
ªª7 8
.
ªª8 9!
ControlarAvaliacoes
ªª9 L
}
ºº 
)
ºº 
.
ΩΩ 
First
ΩΩ "
(
ΩΩ" #
)
ΩΩ# $
;
ΩΩ$ %
var
øø 
retorno
øø 
=
øø 
new
øø !
List
øø" &
<
øø& '
Tuple
øø' ,
<
øø, -
string
øø- 3
,
øø3 4
object
øø5 ;
,
øø; <
string
øø= C
>
øøC D
>
øøD E
(
øøE F
)
øøF G
;
øøG H
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
prop
¡¡ !
in
¡¡" $
flags
¡¡% *
.
¡¡* +
GetType
¡¡+ 2
(
¡¡2 3
)
¡¡3 4
.
¡¡4 5
GetProperties
¡¡5 B
(
¡¡B C
)
¡¡C D
)
¡¡D E
{
¬¬ 
retorno
√√ 
.
√√ 
Add
√√ 
(
√√  
Tuple
√√  %
.
√√% &
Create
√√& ,
(
√√, -
prop
√√- 1
.
√√1 2
Name
√√2 6
,
√√6 7
prop
√√8 <
.
√√< =
GetValue
√√= E
(
√√E F
flags
√√F K
,
√√K L
null
√√M Q
)
√√Q R
,
√√R S
(
√√T U
prop
√√U Y
.
√√Y Z
PropertyType
√√Z f
.
√√f g
IsGenericType
√√g t
&&
√√u w
prop
√√x |
.
√√| }
PropertyType√√} â
.√√â ä(
GetGenericTypeDefinition√√ä ¢
(√√¢ £
)√√£ §
==√√• ß
typeof√√® Æ
(√√Æ Ø
Nullable√√Ø ∑
<√√∑ ∏
>√√∏ π
)√√π ∫
)√√∫ ª
?√√º Ω
Nullable√√æ ∆
.√√∆ «!
GetUnderlyingType√√« ÿ
(√√ÿ Ÿ
prop√√Ÿ ›
.√√› ﬁ
PropertyType√√ﬁ Í
)√√Í Î
.√√Î Ï
Name√√Ï 
:√√Ò Ú
prop√√Û ˜
.√√˜ ¯
PropertyType√√¯ Ñ
.√√Ñ Ö
Name√√Ö â
)√√â ä
)√√ä ã
;√√ã å
}
ƒƒ 
return
∆∆ 
retorno
∆∆ 
;
∆∆ 
}
«« 
}
»» 	
public
œœ 
static
œœ 
List
œœ 
<
œœ 
Tuple
œœ  
<
œœ  !
string
œœ! '
,
œœ' (
object
œœ) /
,
œœ/ 0
string
œœ1 7
>
œœ7 8
>
œœ8 9
GetFlagsTarefa
œœ: H
(
œœH I
int
œœI L
tarefaId
œœM U
)
œœU V
{
–– 	
using
—— 
(
—— 
var
—— 
db
—— 
=
—— 
new
——  
SGQ_GlobalEntities
——  2
(
——2 3
)
——3 4
)
——4 5
{
““ 
var
”” 
flags
”” 
=
”” 
(
”” 
from
”” !
t
””" #
in
””$ &
db
””' )
.
””) *
Tarefas
””* 1
.
””1 2
AsNoTracking
””2 >
(
””> ?
)
””? @
where
‘‘ "
t
‘‘# $
.
‘‘$ %
Id
‘‘% '
==
‘‘( *
tarefaId
‘‘+ 3
select
’’ #
new
’’$ '
{
÷÷ 

Amostragem
◊◊! +
=
◊◊, -
t
◊◊. /
.
◊◊/ 0

Amostragem
◊◊0 :
,
◊◊: ;
Departamento
ÿÿ! -
=
ÿÿ. /
t
ÿÿ0 1
.
ÿÿ1 2
Departamento
ÿÿ2 >
.
ÿÿ> ?
HasValue
ÿÿ? G
?
ÿÿH I
t
ÿÿJ K
.
ÿÿK L
Departamentos
ÿÿL Y
.
ÿÿY Z
Nome
ÿÿZ ^
:
ÿÿ_ `
string
ÿÿa g
.
ÿÿg h
Empty
ÿÿh m
,
ÿÿm n

Frequencia
ŸŸ! +
=
ŸŸ, -
t
ŸŸ. /
.
ŸŸ/ 0

Frequencia
ŸŸ0 :
,
ŸŸ: ;
Vigencia
⁄⁄! )
=
⁄⁄* +
t
⁄⁄, -
.
⁄⁄- .
Vigencia
⁄⁄. 6
,
⁄⁄6 7
Produto
€€! (
=
€€) *
t
€€+ ,
.
€€, -
Produto
€€- 4
.
€€4 5
HasValue
€€5 =
?
€€> ?
t
€€@ A
.
€€A B
Produtos
€€B J
.
€€J K
Nome
€€K O
:
€€P Q
string
€€R X
.
€€X Y
Empty
€€Y ^
,
€€^ _
EditarAcesso
‹‹! -
=
‹‹. /
t
‹‹0 1
.
‹‹1 2
EditarAcesso
‹‹2 >
,
‹‹> ?
ExibirAcesso
››! -
=
››. /
t
››0 1
.
››1 2
ExibirAcesso
››2 >
,
››> ?
FormaAmostragem
ﬁﬁ! 0
=
ﬁﬁ1 2
t
ﬁﬁ3 4
.
ﬁﬁ4 5
FormaAmostragem
ﬁﬁ5 D
,
ﬁﬁD E
AvaliarProdutos
ﬂﬂ! 0
=
ﬂﬂ1 2
t
ﬂﬂ3 4
.
ﬂﬂ4 5
AvaliarProdutos
ﬂﬂ5 D
,
ﬂﬂD E
InformarPesagem
‡‡! 0
=
‡‡1 2
t
‡‡3 4
.
‡‡4 5
InformarPesagem
‡‡5 D
,
‡‡D E

Sequencial
··! +
=
··, -
t
··. /
.
··/ 0

Sequencial
··0 :
}
‚‚ 
)
‚‚ 
.
„„ 
First
„„ "
(
„„" #
)
„„# $
;
„„$ %
var
ÂÂ 
retorno
ÂÂ 
=
ÂÂ 
new
ÂÂ !
List
ÂÂ" &
<
ÂÂ& '
Tuple
ÂÂ' ,
<
ÂÂ, -
string
ÂÂ- 3
,
ÂÂ3 4
object
ÂÂ5 ;
,
ÂÂ; <
string
ÂÂ= C
>
ÂÂC D
>
ÂÂD E
(
ÂÂE F
)
ÂÂF G
;
ÂÂG H
foreach
ÁÁ 
(
ÁÁ 
var
ÁÁ 
prop
ÁÁ !
in
ÁÁ" $
flags
ÁÁ% *
.
ÁÁ* +
GetType
ÁÁ+ 2
(
ÁÁ2 3
)
ÁÁ3 4
.
ÁÁ4 5
GetProperties
ÁÁ5 B
(
ÁÁB C
)
ÁÁC D
)
ÁÁD E
{
ËË 
retorno
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ  
Tuple
ÈÈ  %
.
ÈÈ% &
Create
ÈÈ& ,
(
ÈÈ, -
prop
ÈÈ- 1
.
ÈÈ1 2
Name
ÈÈ2 6
,
ÈÈ6 7
prop
ÈÈ8 <
.
ÈÈ< =
GetValue
ÈÈ= E
(
ÈÈE F
flags
ÈÈF K
,
ÈÈK L
null
ÈÈM Q
)
ÈÈQ R
,
ÈÈR S
(
ÈÈT U
prop
ÈÈU Y
.
ÈÈY Z
PropertyType
ÈÈZ f
.
ÈÈf g
IsGenericType
ÈÈg t
&&
ÈÈu w
prop
ÈÈx |
.
ÈÈ| }
PropertyTypeÈÈ} â
.ÈÈâ ä(
GetGenericTypeDefinitionÈÈä ¢
(ÈÈ¢ £
)ÈÈ£ §
==ÈÈ• ß
typeofÈÈ® Æ
(ÈÈÆ Ø
NullableÈÈØ ∑
<ÈÈ∑ ∏
>ÈÈ∏ π
)ÈÈπ ∫
)ÈÈ∫ ª
?ÈÈº Ω
NullableÈÈæ ∆
.ÈÈ∆ «!
GetUnderlyingTypeÈÈ« ÿ
(ÈÈÿ Ÿ
propÈÈŸ ›
.ÈÈ› ﬁ
PropertyTypeÈÈﬁ Í
)ÈÈÍ Î
.ÈÈÎ Ï
NameÈÈÏ 
:ÈÈÒ Ú
propÈÈÛ ˜
.ÈÈ˜ ¯
PropertyTypeÈÈ¯ Ñ
.ÈÈÑ Ö
NameÈÈÖ â
)ÈÈâ ä
)ÈÈä ã
;ÈÈã å
}
ÍÍ 
return
ÏÏ 
retorno
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
public
ıı 
static
ıı 
IEnumerable
ıı !
<
ıı! "
Tuple
ıı" '
<
ıı' (
int
ıı( +
,
ıı+ ,
string
ıı- 3
>
ıı3 4
>
ıı4 5%
GetUnidadesPorUsuarioId
ıı6 M
(
ııM N
int
ııN Q
	usuarioId
ııR [
)
ıı[ \
{
ˆˆ 	
using
˜˜ 
(
˜˜ 
var
˜˜ 
db
˜˜ 
=
˜˜ 
new
˜˜  
SGQ_GlobalEntities
˜˜  2
(
˜˜2 3
)
˜˜3 4
)
˜˜4 5
{
¯¯ 
var
˘˘ 
retorno
˘˘ 
=
˘˘ 
(
˘˘ 
from
˘˘ #
uu
˘˘$ &
in
˘˘' )
db
˘˘* ,
.
˘˘, -
UsuarioUnidades
˘˘- <
.
˘˘< =
AsNoTracking
˘˘= I
(
˘˘I J
)
˘˘J K
join
˙˙ #
u
˙˙$ %
in
˙˙& (
db
˙˙) +
.
˙˙+ ,
Unidades
˙˙, 4
.
˙˙4 5
AsNoTracking
˙˙5 A
(
˙˙A B
)
˙˙B C
on
˙˙D F
uu
˙˙G I
.
˙˙I J
Unidade
˙˙J Q
equals
˙˙R X
u
˙˙Y Z
.
˙˙Z [
Id
˙˙[ ]
where
˚˚ $
uu
˚˚% '
.
˚˚' (
Usuario
˚˚( /
==
˚˚0 2
	usuarioId
˚˚3 <
&&
¸¸ !
u
¸¸" #
.
¸¸# $
Ativa
¸¸$ )
.
¸¸) *
Value
¸¸* /
select
˝˝ %
new
˝˝& )
{
˝˝* +
	UnidadeId
˝˝, 5
=
˝˝6 7
u
˝˝8 9
.
˝˝9 :
Id
˝˝: <
,
˝˝< =
Unidade
˝˝> E
=
˝˝F G
u
˝˝H I
.
˝˝I J
Nome
˝˝J N
}
˝˝O P
)
˝˝P Q
.
˛˛  !
Distinct
˛˛! )
(
˛˛) *
)
˛˛* +
.
ˇˇ  !
AsEnumerable
ˇˇ! -
(
ˇˇ- .
)
ˇˇ. /
.
ÄÄ  !
Select
ÄÄ! '
(
ÄÄ' (
x
ÄÄ( )
=>
ÄÄ* ,
Tuple
ÄÄ- 2
.
ÄÄ2 3
Create
ÄÄ3 9
(
ÄÄ9 :
x
ÄÄ: ;
.
ÄÄ; <
	UnidadeId
ÄÄ< E
,
ÄÄE F
x
ÄÄG H
.
ÄÄH I
Unidade
ÄÄI P
)
ÄÄP Q
)
ÄÄQ R
.
ÅÅ  !
ToList
ÅÅ! '
(
ÅÅ' (
)
ÅÅ( )
;
ÅÅ) *
return
ÉÉ 
retorno
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
áá 
static
áá 
int
áá )
GetUltimoIndiceReincidencia
áá 5
(
áá5 6
int
áá6 9
	unidadeId
áá: C
,
ááC D
int
ááE H
departamentoId
ááI W
,
ááW X
int
ááY \

operacaoId
áá] g
,
áág h
int
áái l
tarefaId
áám u
,
ááu v
int
ááw z
monitoramentoIdáá{ ä
,ááä ã
DateTimeááå î
dataConsultarááï ¢
)áá¢ £
{
àà 	
var
ââ 
dataMesAnterior
ââ 
=
ââ  !
dataConsultar
ââ" /
.
ââ/ 0
	AddMonths
ââ0 9
(
ââ9 :
-
ââ: ;
$num
ââ; <
)
ââ< =
;
ââ= >
using
ãã 
(
ãã 
var
ãã 
db
ãã 
=
ãã 
new
ãã  
SGQ_GlobalEntities
ãã  2
(
ãã2 3
)
ãã3 4
)
ãã4 5
{
åå 
int
çç 
?
çç 
ultimoIndice
çç !
=
çç" #
(
çç$ %
from
çç% )
i
çç* +
in
çç, .
db
çç/ 1
.
çç1 2$
PenalidadeReincidencia
çç2 H
.
ççH I
AsNoTracking
ççI U
(
ççU V
)
ççV W
where
éé% *
i
éé+ ,
.
éé, -
	UnidadeId
éé- 6
==
éé7 9
	unidadeId
éé: C
&&
èè% '
i
èè( )
.
èè) *
DepartamentoId
èè* 8
==
èè9 ;
departamentoId
èè< J
&&
êê% '
i
êê( )
.
êê) *

OperacaoId
êê* 4
==
êê5 7

operacaoId
êê8 B
&&
ëë% '
i
ëë( )
.
ëë) *
TarefaId
ëë* 2
==
ëë3 5
tarefaId
ëë6 >
&&
íí% '
i
íí( )
.
íí) *
MonitoramentoId
íí* 9
==
íí: <
monitoramentoId
íí= L
&&
ìì% '
(
ìì( )
i
ìì) *
.
ìì* +
Data
ìì+ /
.
ìì/ 0
Year
ìì0 4
==
ìì5 7
dataMesAnterior
ìì8 G
.
ììG H
Year
ììH L
&&
ììM O
i
ììP Q
.
ììQ R
Data
ììR V
.
ììV W
Month
ììW \
==
ìì] _
dataMesAnterior
ìì` o
.
ììo p
Month
ììp u
)
ììu v
select
îî% +
i
îî, -
.
îî- .
Indice
îî. 4
)
îî4 5
.
ïï$ %
FirstOrDefault
ïï% 3
(
ïï3 4
)
ïï4 5
;
ïï5 6
return
óó 
!
óó 
ultimoIndice
óó $
.
óó$ %
HasValue
óó% -
?
óó. /
$num
óó0 1
:
óó2 3
ultimoIndice
óó4 @
.
óó@ A
Value
óóA F
;
óóF G
}
òò 
}
ôô 	
public
õõ 
static
õõ 

JsonResult
õõ  '
GetNumeroColetaPorPeriodo
õõ! :
(
õõ: ;
string
õõ; A
dtInicio
õõB J
,
õõJ K
string
õõL R
dtFim
õõS X
)
õõX Y
{
úú 	
try
ûû 
{
üü 
var
†† 
result
†† 
=
†† 
$num
†† 
;
†† 
using
°° 
(
°° 
var
°° 
db
°° 
=
°° 
new
°°  # 
SGQ_GlobalEntities
°°$ 6
(
°°6 7
)
°°7 8
)
°°8 9
{
¢¢ 
var
££ 

dataInicio
££ "
=
££# $
DateTime
££% -
.
££- .

ParseExact
££. 8
(
££8 9
dtInicio
££9 A
,
££A B
$str
££C O
,
££O P
CultureInfo
££Q \
.
££\ ]
InvariantCulture
££] m
)
££m n
;
££n o
var
§§ 

varDatafim
§§ "
=
§§# $
DateTime
§§% -
.
§§- .

ParseExact
§§. 8
(
§§8 9
dtFim
§§9 >
,
§§> ?
$str
§§@ L
,
§§L M
CultureInfo
§§N Y
.
§§Y Z
InvariantCulture
§§Z j
)
§§j k
;
§§k l
result
•• 
=
•• 
db
•• 
.
••  

Resultados
••  *
.
¶¶ 
AsNoTracking
¶¶ %
(
¶¶% &
)
¶¶& '
.
ßß 
Where
ßß 
(
ßß 
r
ßß  
=>
ßß! #
DbFunctions
ßß$ /
.
ßß/ 0
TruncateTime
ßß0 <
(
ßß< =
r
ßß= >
.
ßß> ?
Data
ßß? C
)
ßßC D
>=
ßßE G
DbFunctions
ßßH S
.
ßßS T
TruncateTime
ßßT `
(
ßß` a

dataInicio
ßßa k
)
ßßk l
&&
ßßm o
DbFunctions
ßßp {
.
ßß{ |
TruncateTimeßß| à
(ßßà â
rßßâ ä
.ßßä ã
Dataßßã è
)ßßè ê
<=ßßë ì
DbFunctionsßßî ü
.ßßü †
TruncateTimeßß† ¨
(ßß¨ ≠

varDatafimßß≠ ∑
)ßß∑ ∏
)ßß∏ π
.
®® 
Count
®® 
(
®® 
)
®®  
;
®®  !
}
©© 
if
™™ 
(
™™ 
result
™™ 
>
™™ 
$num
™™ 
)
™™ 
{
´´ 
return
¨¨ 
RetornoPadraoJson
¨¨ ,
(
¨¨, -
result
¨¨- 3
,
¨¨3 4
false
¨¨5 :
)
¨¨: ;
;
¨¨; <
}
≠≠ 
else
ÆÆ 
{
ØØ 
return
∞∞ 
RetornoPadraoJson
∞∞ ,
(
∞∞, -
result
∞∞- 3
,
∞∞3 4
true
∞∞5 9
)
∞∞9 :
;
∞∞: ;
}
±± 
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
ex
≥≥ 
)
≥≥  
{
¥¥ 
return
µµ (
RetornoPadraoJsonException
µµ 1
(
µµ1 2
ex
µµ2 4
)
µµ4 5
;
µµ5 6
}
∂∂ 
}
∏∏ 	
public
∫∫ 
static
∫∫ 
DictionaryEntry
∫∫ %
getResource
∫∫& 1
(
∫∫1 2
string
∫∫2 8
value
∫∫9 >
)
∫∫> ?
{
ªª 	
System
ºº 
.
ºº 
	Resources
ºº 
.
ºº 
ResourceManager
ºº ,
resourceManager
ºº- <
=
ºº= >
	Resources
ºº? H
.
ººH I
Resource
ººI Q
.
ººQ R
ResourceManager
ººR a
;
ººa b
if
ææ 
(
ææ 
GlobalConfig
ææ 
.
ææ 
LanguageBrasil
ææ +
)
ææ+ ,
{
øø 
Thread
¿¿ 
.
¿¿ 
CurrentThread
¿¿ $
.
¿¿$ %
CurrentCulture
¿¿% 3
=
¿¿4 5
new
¿¿6 9
CultureInfo
¿¿: E
(
¿¿E F
Guard
¿¿F K
.
¿¿K L
LANGUAGE_PT_BR
¿¿L Z
)
¿¿Z [
;
¿¿[ \
Thread
¡¡ 
.
¡¡ 
CurrentThread
¡¡ $
.
¡¡$ %
CurrentUICulture
¡¡% 5
=
¡¡6 7
new
¡¡8 ;
CultureInfo
¡¡< G
(
¡¡G H
Guard
¡¡H M
.
¡¡M N
LANGUAGE_PT_BR
¡¡N \
)
¡¡\ ]
;
¡¡] ^
}
¬¬ 
else
√√ 
{
ƒƒ 
Thread
≈≈ 
.
≈≈ 
CurrentThread
≈≈ $
.
≈≈$ %
CurrentCulture
≈≈% 3
=
≈≈4 5
new
≈≈6 9
CultureInfo
≈≈: E
(
≈≈E F
$str
≈≈F H
)
≈≈H I
;
≈≈I J
Thread
∆∆ 
.
∆∆ 
CurrentThread
∆∆ $
.
∆∆$ %
CurrentUICulture
∆∆% 5
=
∆∆6 7
new
∆∆8 ;
CultureInfo
∆∆< G
(
∆∆G H
$str
∆∆H J
)
∆∆J K
;
∆∆K L
}
«« 
var
…… 
list
…… 
=
…… 
resourceManager
…… &
.
……& '
GetResourceSet
……' 5
(
……5 6
Thread
   
.
   
CurrentThread
   $
.
  $ %
CurrentUICulture
  % 5
,
  5 6
true
  7 ;
,
  ; <
false
  = B
)
  B C
;
  C D
var
ÕÕ 
listRes
ÕÕ 
=
ÕÕ 
list
ÕÕ 
.
ÕÕ 
Cast
ÕÕ #
<
ÕÕ# $
DictionaryEntry
ÕÕ$ 3
>
ÕÕ3 4
(
ÕÕ4 5
)
ÕÕ5 6
;
ÕÕ6 7
foreach
œœ 
(
œœ 
var
œœ 
r
œœ 
in
œœ 
listRes
œœ %
)
œœ% &
{
–– 
if
—— 
(
—— 
r
—— 
.
—— 
Key
—— 
.
—— 
ToString
—— "
(
——" #
)
——# $
==
——% '
value
——( -
)
——- .
return
““ 
r
““ 
;
““ 
}
”” 
return
’’ 
new
’’ 
DictionaryEntry
’’ &
(
’’& '
)
’’' (
;
’’( )
}
÷÷ 	
public
ÿÿ 
static
ÿÿ 
MvcHtmlString
ÿÿ #
ParCounterList
ÿÿ$ 2
(
ÿÿ2 3
this
ÿÿ3 7

HtmlHelper
ÿÿ8 B
helper
ÿÿC I
,
ÿÿI J
string
ÿÿK Q
name
ÿÿR V
,
ÿÿV W
IEnumerable
ÿÿX c
<
ÿÿc d
SelectListItem
ÿÿd r
>
ÿÿr s
values
ÿÿt z
,
ÿÿz {
Objectÿÿ| Ç
htmlAttributesÿÿÉ ë
)ÿÿë í
{
ŸŸ 	
List
€€ 
<
€€ 
SelectListItem
€€ 
>
€€  
Textes
€€! '
=
€€( )
new
€€* -
List
€€. 2
<
€€2 3
SelectListItem
€€3 A
>
€€A B
(
€€B C
)
€€C D
;
€€D E
foreach
‹‹ 
(
‹‹ 
SelectListItem
‹‹ #
item
‹‹$ (
in
‹‹) +
values
‹‹, 2
)
‹‹2 3
{
›› 
SelectListItem
ﬁﬁ 
selItem
ﬁﬁ &
=
ﬁﬁ' (
new
ﬁﬁ) ,
SelectListItem
ﬁﬁ- ;
(
ﬁﬁ; <
)
ﬁﬁ< =
;
ﬁﬁ= >
selItem
ﬂﬂ 
.
ﬂﬂ 
Value
ﬂﬂ 
=
ﬂﬂ 
item
ﬂﬂ  $
.
ﬂﬂ$ %
Value
ﬂﬂ% *
.
ﬂﬂ* +
ToString
ﬂﬂ+ 3
(
ﬂﬂ3 4
)
ﬂﬂ4 5
;
ﬂﬂ5 6
if
‡‡ 
(
‡‡ 
getResource
‡‡ 
(
‡‡  
item
‡‡  $
.
‡‡$ %
Text
‡‡% )
.
‡‡) *
ToString
‡‡* 2
(
‡‡2 3
)
‡‡3 4
)
‡‡4 5
.
‡‡5 6
Value
‡‡6 ;
!=
‡‡< >
null
‡‡? C
)
‡‡C D
selItem
·· 
.
·· 
Text
··  
=
··! "
getResource
··# .
(
··. /
item
··/ 3
.
··3 4
Text
··4 8
.
··8 9
ToString
··9 A
(
··A B
)
··B C
)
··C D
.
··D E
Value
··E J
.
··J K
ToString
··K S
(
··S T
)
··T U
;
··U V
else
‚‚ 
selItem
„„ 
.
„„ 
Text
„„  
=
„„! "
item
„„# '
.
„„' (
Text
„„( ,
.
„„, -
ToString
„„- 5
(
„„5 6
)
„„6 7
;
„„7 8
Textes
‰‰ 
.
‰‰ 
Add
‰‰ 
(
‰‰ 
selItem
‰‰ "
)
‰‰" #
;
‰‰# $
}
ÂÂ 
return
ÁÁ 
System
ÁÁ 
.
ÁÁ 
Web
ÁÁ 
.
ÁÁ 
Mvc
ÁÁ !
.
ÁÁ! "
Html
ÁÁ" &
.
ÁÁ& '
SelectExtensions
ÁÁ' 7
.
ÁÁ7 8
DropDownList
ÁÁ8 D
(
ÁÁD E
helper
ÁÁE K
,
ÁÁK L
name
ËËE I
,
ËËI J
Textes
ÈÈE K
,
ÈÈK L
htmlAttributes
ÍÍE S
)
ÍÍS T
;
ÍÍT U
}
ÎÎ 	
public
ÌÌ 
static
ÌÌ 
MvcHtmlString
ÌÌ #
ParLocalList
ÌÌ$ 0
(
ÌÌ0 1
this
ÌÌ1 5

HtmlHelper
ÌÌ6 @
helper
ÌÌA G
,
ÌÌG H
string
ÌÌI O
name
ÌÌP T
,
ÌÌT U
IEnumerable
ÌÌV a
<
ÌÌa b
SelectListItem
ÌÌb p
>
ÌÌp q
values
ÌÌr x
,
ÌÌx y
ObjectÌÌz Ä
htmlAttributesÌÌÅ è
)ÌÌè ê
{
ÓÓ 	
List
 
<
 
SelectListItem
 
>
  
Textes
! '
=
( )
new
* -
List
. 2
<
2 3
SelectListItem
3 A
>
A B
(
B C
)
C D
;
D E
foreach
ÒÒ 
(
ÒÒ 
SelectListItem
ÒÒ #
item
ÒÒ$ (
in
ÒÒ) +
values
ÒÒ, 2
)
ÒÒ2 3
{
ÚÚ 
SelectListItem
ÛÛ 
selItem
ÛÛ &
=
ÛÛ' (
new
ÛÛ) ,
SelectListItem
ÛÛ- ;
(
ÛÛ; <
)
ÛÛ< =
;
ÛÛ= >
selItem
ÙÙ 
.
ÙÙ 
Value
ÙÙ 
=
ÙÙ 
item
ÙÙ  $
.
ÙÙ$ %
Value
ÙÙ% *
.
ÙÙ* +
ToString
ÙÙ+ 3
(
ÙÙ3 4
)
ÙÙ4 5
;
ÙÙ5 6
if
ıı 
(
ıı 
getResource
ıı 
(
ıı  
item
ıı  $
.
ıı$ %
Text
ıı% )
.
ıı) *
ToString
ıı* 2
(
ıı2 3
)
ıı3 4
)
ıı4 5
.
ıı5 6
Value
ıı6 ;
!=
ıı< >
null
ıı? C
)
ııC D
selItem
ˆˆ 
.
ˆˆ 
Text
ˆˆ  
=
ˆˆ! "
getResource
ˆˆ# .
(
ˆˆ. /
item
ˆˆ/ 3
.
ˆˆ3 4
Text
ˆˆ4 8
.
ˆˆ8 9
ToString
ˆˆ9 A
(
ˆˆA B
)
ˆˆB C
)
ˆˆC D
.
ˆˆD E
Value
ˆˆE J
.
ˆˆJ K
ToString
ˆˆK S
(
ˆˆS T
)
ˆˆT U
;
ˆˆU V
else
˜˜ 
selItem
¯¯ 
.
¯¯ 
Text
¯¯  
=
¯¯! "
item
¯¯# '
.
¯¯' (
Text
¯¯( ,
.
¯¯, -
ToString
¯¯- 5
(
¯¯5 6
)
¯¯6 7
;
¯¯7 8
Textes
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
selItem
˘˘ "
)
˘˘" #
;
˘˘# $
}
˙˙ 
return
¸¸ 
System
¸¸ 
.
¸¸ 
Web
¸¸ 
.
¸¸ 
Mvc
¸¸ !
.
¸¸! "
Html
¸¸" &
.
¸¸& '
SelectExtensions
¸¸' 7
.
¸¸7 8
DropDownList
¸¸8 D
(
¸¸D E
helper
¸¸E K
,
¸¸K L
name
˝˝E I
,
˝˝I J
Textes
˛˛E K
,
˛˛K L
htmlAttributes
ˇˇE S
)
ˇˇS T
;
ˇˇT U
}
ÄÄ 	
public
≠≠ 
static
≠≠ 

JsonResult
≠≠  
RetornoPadraoJson
≠≠! 2
<
≠≠2 3
T
≠≠3 4
>
≠≠4 5
(
≠≠5 6
T
≠≠6 7
obj
≠≠8 ;
,
≠≠; <
bool
≠≠= A
semDados
≠≠B J
)
≠≠J K
{
ÆÆ 	
if
∞∞ 
(
∞∞ 
semDados
∞∞ 
)
∞∞ 
{
±± 
return
≤≤ 
new
≤≤ 

JsonResult
≤≤ %
(
≤≤% &
)
≤≤& '
{
≥≥ 
Data
¥¥ 
=
¥¥ 
new
¥¥ 
{
¥¥  
mensagemSemDados
¥¥! 1
=
¥¥2 3
$str
¥¥4 c
}
¥¥d e
,
¥¥e f!
JsonRequestBehavior
µµ '
=
µµ( )!
JsonRequestBehavior
µµ* =
.
µµ= >
AllowGet
µµ> F
}
∂∂ 
;
∂∂ 
}
∑∑ 
else
∏∏ 
{
ππ 
return
∫∫ 
new
∫∫ 

JsonResult
∫∫ %
(
∫∫% &
)
∫∫& '
{
ªª 
Data
ºº 
=
ºº 
new
ºº 
{
ºº  
Data
ºº! %
=
ºº& '
new
ºº( +
{
ºº, -
data
ºº. 2
=
ºº3 4
obj
ºº5 8
}
ºº9 :
}
ºº; <
,
ºº< =!
JsonRequestBehavior
ΩΩ '
=
ΩΩ( )!
JsonRequestBehavior
ΩΩ* =
.
ΩΩ= >
AllowGet
ΩΩ> F
}
ææ 
;
ææ 
}
øø 
}
¡¡ 	
public
√√ 
static
√√ 

JsonResult
√√  (
RetornoPadraoJsonException
√√! ;
(
√√; <
	Exception
√√< E
ex
√√F H
)
√√H I
{
ƒƒ 	
var
≈≈ 
inner
≈≈ 
=
≈≈ 
ex
≈≈ 
.
≈≈ 
InnerException
≈≈ )
.
≈≈) *
	IsNotNull
≈≈* 3
(
≈≈3 4
)
≈≈4 5
?
≈≈6 7
ex
≈≈8 :
.
≈≈: ;
InnerException
≈≈; I
.
≈≈I J
Message
≈≈J Q
:
≈≈R S
$str
≈≈T a
;
≈≈a b
return
∆∆ 
new
∆∆ 

JsonResult
∆∆ !
(
∆∆! "
)
∆∆" #
{
«« 
Data
»» 
=
»» 
new
»» 
{
»» 
mensagemException
»» .
=
»»/ 0
$str
»»1 Z
,
»»Z [(
mensagemParaDebugNavegador
»»\ v
=
»»w x
ex
»»y {
.
»»{ |
Message»»| É
+»»Ñ Ö
$str»»Ü è
+»»ê ë
inner»»í ó
}»»ò ô
,»»ô ö!
JsonRequestBehavior
…… #
=
……$ %!
JsonRequestBehavior
……& 9
.
……9 :
AllowGet
……: B
}
   
;
   
}
ÀÀ 	
public
ÕÕ 
static
ÕÕ 

JsonResult
ÕÕ   
RetornoTratadoJson
ÕÕ! 3
<
ÕÕ3 4
T
ÕÕ4 5
>
ÕÕ5 6
(
ÕÕ6 7
object
ÕÕ7 =
obj
ÕÕ> A
)
ÕÕA B
{
ŒŒ 	
return
—— 
new
—— 

JsonResult
—— !
(
——! "
)
——" #
{
““ 
Data
”” 
=
”” 
new
”” 
{
”” 
errMsg
”” #
=
””$ %
$str
””& ,
}
””- .
,
””. /!
JsonRequestBehavior
‘‘ #
=
‘‘$ %!
JsonRequestBehavior
‘‘& 9
.
‘‘9 :
DenyGet
‘‘: A
}
’’ 
;
’’ 
}
÷÷ 	
}
⁄⁄ 
}€€ åX
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\CommonLog.cs
	namespace

 	
	SgqSystem


 
.

 
Helpers

 
{ 
public 

class 
	CommonLog 
{ 
public 
static 
void 

SaveReport %
(% &,
 FormularioParaRelatorioViewModel& F
formG K
,K L
stringM S

ReportNameT ^
)^ _
{ 	
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
if 
( 
form 
. 
level1Id !
>" #
$num$ %
)% &
form 
. 

level1Name #
=$ %
db& (
.( )
	ParLevel1) 2
.2 3
Where3 8
(8 9
r9 :
=>; =
r> ?
.? @
Id@ B
==C E
formF J
.J K
level1IdK S
)S T
.T U
FirstOrDefaultU c
(c d
)d e
.e f
Namef j
;j k
if 
( 
form 
. 
level2Id !
>" #
$num$ %
)% &
form 
. 

level2Name #
=$ %
db& (
.( )
	ParLevel2) 2
.2 3
Where3 8
(8 9
r9 :
=>; =
r> ?
.? @
Id@ B
==C E
formF J
.J K
level2IdK S
)S T
.T U
FirstOrDefaultU c
(c d
)d e
.e f
Namef j
;j k
if 
( 
form 
. 
level3Id !
>" #
$num$ %
)% &
form 
. 

level3Name #
=$ %
db& (
.( )
	ParLevel3) 2
.2 3
Where3 8
(8 9
r9 :
=>; =
r> ?
.? @
Id@ B
==C E
formF J
.J K
level3IdK S
)S T
.T U
FirstOrDefaultU c
(c d
)d e
.e f
Namef j
;j k
if 
( 
form 
. 
	auditorId "
># $
$num% &
)& '
form 
. 
auditorName $
=% &
db' )
.) *
UserSgq* 1
.1 2
Where2 7
(7 8
r8 9
=>: <
r= >
.> ?
Id? A
==B D
formE I
.I J
	auditorIdJ S
)S T
.T U
FirstOrDefaultU c
(c d
)d e
.e f
Namef j
;j k
if 
( 
form 
. 
unitId 
>  !
$num" #
)# $
form 
. 
unitName !
=" #
db$ &
.& '

ParCompany' 1
.1 2
Where2 7
(7 8
r8 9
=>: <
r= >
.> ?
Id? A
==B D
formE I
.I J
unitIdJ P
)P Q
.Q R
FirstOrDefaultR `
(` a
)a b
.b c
Namec g
;g h
var 
log 
= 
new 
LogJson %
(% &
)& '
;' (
log 
. 
	Device_Id 
= 
$str  %
;% &
log   
.   
callback   
=   

ReportName   )
;  ) *
log!! 
.!! 
AddDate!! 
=!! 
DateTime!! &
.!!& '
Now!!' *
;!!* +
log"" 
."" 
log"" 
="" 
$str## (
+##) *
form##+ /
.##/ 0
unitId##0 6
+##7 8
$str##9 ?
+##@ A
$str$$ +
+$$, -
form$$. 2
.$$2 3
unitName$$3 ;
+$$< =
$str$$> D
+$$E F
$str%% *
+%%+ ,
form%%- 1
.%%1 2
_dataInicio%%2 =
+%%> ?
$str%%@ F
+%%G H
$str&& '
+&&( )
form&&* .
.&&. /
_dataFim&&/ 7
+&&8 9
$str&&: @
+&&A B
$str'' )
+''* +
form'', 0
.''0 1
level1Id''1 9
+'': ;
$str''< B
+''C D
$str(( -
+((. /
form((0 4
.((4 5

level1Name((5 ?
+((@ A
$str((B H
+((I J
$str)) -
+)). /
form))0 4
.))4 5
level2Id))5 =
+))> ?
$str))@ F
+))G H
$str** 1
+**2 3
form**4 8
.**8 9

level2Name**9 C
+**D E
$str**F L
+**M N
$str++ &
+++' (
form++) -
.++- .
level3Id++. 6
+++7 8
$str++9 ?
+++@ A
$str,, *
+,,+ ,
form,,- 1
.,,1 2

level3Name,,2 <
+,,= >
$str,,? E
+,,F G
$str-- '
+--( )
form--* .
.--. /
	auditorId--/ 8
+--9 :
$str--; A
+--B C
$str.. *
+..+ ,
form..- 1
...1 2
auditorName..2 =
+..> ?
$str..@ F
;..F G
log00 
.00 
result00 
=00 
$str11 (
+11) *
form11+ /
.11/ 0
unitId110 6
+117 8
$str119 ?
+11@ A
$str22 +
+22, -
form22. 2
.222 3
unitName223 ;
+22< =
$str22> D
+22E F
$str33 *
+33+ ,
form33- 1
.331 2
_dataInicio332 =
+33> ?
$str33@ F
+33G H
$str44 '
+44( )
form44* .
.44. /
_dataFim44/ 7
+448 9
$str44: @
+44A B
$str55 )
+55* +
form55, 0
.550 1
level1Id551 9
+55: ;
$str55< B
+55C D
$str66 -
+66. /
form660 4
.664 5

level1Name665 ?
+66@ A
$str66B H
+66I J
$str77 -
+77. /
form770 4
.774 5
level2Id775 =
+77> ?
$str77@ F
+77G H
$str88 1
+882 3
form884 8
.888 9

level2Name889 C
+88D E
$str88F L
+88M N
$str99 &
+99' (
form99) -
.99- .
level3Id99. 6
+996 7
$str998 >
+99? @
$str:: *
+::+ ,
form::- 1
.::1 2

level3Name::2 <
+::= >
$str::? E
+::E F
$str;; '
+;;( )
form;;* .
.;;. /
	auditorId;;/ 8
+;;9 :
$str;;; A
+;;B C
$str<< *
+<<+ ,
form<<- 1
.<<1 2
auditorName<<2 =
+<<> ?
$str<<@ F
;<<F G
db>> 
.>> 
LogJson>> 
.>> 
Add>> 
(>> 
log>> "
)>>" #
;>># $
db?? 
.?? 
SaveChanges?? 
(?? 
)??  
;??  !
}@@ 
}AA 	
publicCC 
staticCC 
voidCC 

SaveReportCC %
(CC% &
intCC& )
UnitIdCC* 0
,CC0 1
stringCC2 8

ReportNameCC9 C
)CCC D
{DD 	
usingEE 
(EE 
varEE 
dbEE 
=EE 
newEE 
SgqDbDevEntitiesEE  0
(EE0 1
)EE1 2
)EE2 3
{FF 
varGG 
UnitNameGG 
=GG 
$strGG !
;GG! "
ifHH 
(HH 
UnitIdHH 
>HH 
$numHH 
)HH 
UnitNameII 
=II 
dbII !
.II! "

ParCompanyII" ,
.II, -
WhereII- 2
(II2 3
rII3 4
=>II5 7
rII8 9
.II9 :
IdII: <
==II= ?
UnitIdII@ F
)IIF G
.IIG H
FirstOrDefaultIIH V
(IIV W
)IIW X
.IIX Y
NameIIY ]
;II] ^
varKK 
logKK 
=KK 
newKK 
LogJsonKK %
(KK% &
)KK& '
;KK' (
logLL 
.LL 
	Device_IdLL 
=LL 
$strLL  %
;LL% &
logMM 
.MM 
callbackMM 
=MM 

ReportNameMM )
;MM) *
logNN 
.NN 
AddDateNN 
=NN 
DateTimeNN &
.NN& '
NowNN' *
;NN* +
logOO 
.OO 
logOO 
=OO 
$strOO 
;OO 
logQQ 
.QQ 
resultQQ 
=QQ 
$strRR 
+RR  
UnitIdRR! '
+RR( )
$strRR* -
+RR. /
$strSS "
+SS# $
UnitNameSS% -
+SS. /
$strSS0 3
;SS3 4
dbUU 
.UU 
LogJsonUU 
.UU 
AddUU 
(UU 
logUU "
)UU" #
;UU# $
dbVV 
.VV 
SaveChangesVV 
(VV 
)VV  
;VV  !
}WW 
}XX 	
publicZZ 
staticZZ 
voidZZ 

SaveReportZZ %
(ZZ% &
stringZZ& ,

ReportNameZZ- 7
)ZZ7 8
{[[ 	
using\\ 
(\\ 
var\\ 
db\\ 
=\\ 
new\\ 
SgqDbDevEntities\\  0
(\\0 1
)\\1 2
)\\2 3
{]] 
var__ 
log__ 
=__ 
new__ 
LogJson__ %
(__% &
)__& '
;__' (
log`` 
.`` 
	Device_Id`` 
=`` 
$str``  %
;``% &
logaa 
.aa 
callbackaa 
=aa 

ReportNameaa )
;aa) *
logbb 
.bb 
AddDatebb 
=bb 
DateTimebb &
.bb& '
Nowbb' *
;bb* +
logcc 
.cc 
logcc 
=cc 
$strcc 
;cc 
logdd 
.dd 
resultdd 
=dd 
$strdd 
;dd 
dbff 
.ff 
LogJsonff 
.ff 
Addff 
(ff 
logff "
)ff" #
;ff# $
dbgg 
.gg 
SaveChangesgg 
(gg 
)gg  
;gg  !
}hh 
}ii 	
}jj 
}kk •
NC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\GenericTable.cs
	namespace 	
	SgqSystem
 
. 
Helpers 
{ 
public		 

static		 
class		 
GenericTable		 $
{

 
public 
static 
dynamic 

QueryNinja (
(( )
	DbContext) 2
db3 5
,5 6
string7 =
query> C
)C D
{ 	
db 
. 
Database 
. 

Connection "
." #
Open# '
(' (
)( )
;) *
var 
cmd 
= 
db 
. 
Database !
.! "

Connection" ,
., -
CreateCommand- :
(: ;
); <
;< =
cmd 
. 
CommandText 
= 
query #
;# $
var 
reader 
= 
cmd 
. 
ExecuteReader *
(* +
)+ ,
;, -
List 
< 
JObject 
> 
datas 
=  !
new" %
List& *
<* +
JObject+ 2
>2 3
(3 4
)4 5
;5 6
List 
< 
JObject 
> 
columns !
=" #
new$ '
List( ,
<, -
JObject- 4
>4 5
(5 6
)6 7
;7 8
dynamic 
retorno 
= 
new !
ExpandoObject" /
(/ 0
)0 1
;1 2
while 
( 
reader 
. 
Read 
( 
)  
)  !
{ 
var 
row 
= 
new 
JObject %
(% &
)& '
;' (
for 
( 
int 
i 
= 
$num 
; 
i  !
<" #
reader$ *
.* +

FieldCount+ 5
;5 6
i7 8
++8 :
): ;
row 
[ 
reader 
. 
GetName &
(& '
i' (
)( )
]) *
=+ ,
reader- 3
[3 4
i4 5
]5 6
.6 7
ToString7 ?
(? @
)@ A
;A B
datas 
. 
Add 
( 
row 
) 
; 
} 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
reader  &
.& '

FieldCount' 1
;1 2
i3 4
++4 6
)6 7
{ 
var   
col   
=   
new   
JObject   %
(  % &
)  & '
;  ' (
col!! 
[!! 
$str!! 
]!! 
=!! 
col!! "
[!!" #
$str!!# )
]!!) *
=!!+ ,
reader!!- 3
.!!3 4
GetName!!4 ;
(!!; <
i!!< =
)!!= >
;!!> ?
columns"" 
."" 
Add"" 
("" 
col"" 
)""  
;""  !
}## 
retorno%% 
.%% 
datas%% 
=%% 
datas%% !
;%%! "
retorno&& 
.&& 
columns&& 
=&& 
columns&& %
;&&% &
return(( 
retorno(( 
;(( 
})) 	
}++ 
},, Ú
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\HandleCultureAPI.cs
	namespace 	
	SgqSystem
 
. 
Helpers 
{ 
public 

class 
HandleCultureAPI !
:" #!
ActionFilterAttribute$ 9
{		 
public

 
override

 
void

 
OnActionExecuting

 .
(

. /"
ActionExecutingContext

/ E
filterContext

F S
)

S T
{ 	
if 
( 
GlobalConfig 
. 
Brasil #
)# $
{ 
Thread 
. 
CurrentThread $
.$ %
CurrentCulture% 3
=4 5
new6 9
CultureInfo: E
(E F
$strF M
)M N
;N O
Thread 
. 
CurrentThread $
.$ %
CurrentUICulture% 5
=6 7
new8 ;
CultureInfo< G
(G H
$strH O
)O P
;P Q
} 
else 
{ 
Thread 
. 
CurrentThread $
.$ %
CurrentCulture% 3
=4 5
new6 9
CultureInfo: E
(E F
$strF H
)H I
;I J
Thread 
. 
CurrentThread $
.$ %
CurrentUICulture% 5
=6 7
new8 ;
CultureInfo< G
(G H
$strH J
)J K
;K L
} 
base 
. 
OnActionExecuting "
(" #
filterContext# 0
)0 1
;1 2
} 	
} 
}  ô
GC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\Table.cs
	namespace

 	
	SgqSystem


 
.

 
Helpers

 
{ 
public 

static 
class 
Table 
{ 
public 
enum 
PosicaoLabel  
{ 	
top 
, 
left 
} 	
public 
static 
MvcHtmlString #
td$ &
(& '
this' +

HtmlHelper, 6
html7 ;
,; <
string= C
idLinkD J
,J K
stringL R
	textoLinkS \
=] ^
$str_ g
)g h
{ 	
string 
strLink 
= 
string #
.# $
Format$ *
(* +
$str+ f
,f g
idLinkh n
,n o
	textoLinkp y
)y z
;z {
return 
new 
MvcHtmlString $
($ %
strLink% ,
), -
;- .
} 	
public 
static 
MvcHtmlString #
GerarColuna$ /
(/ 0
MvcHtmlString0 =
input> C
,C D
MvcHtmlString0 =
label> C
,C D
PosicaoLabel0 <
posicaoLabel= I
,I J
MvcHtmlString  0 =
error  > C
=  D E
null  F J
,  J K
string!!0 6
info!!7 ;
=!!< =
null!!> B
,!!B C
int""0 3
colspan""4 ;
=""< =
$num""> ?
)""? @
{## 	
String$$ 
tr$$ 
=$$ 
$str$$ 
;$$ 
String%% 
tagInfo%% 
=%% 
$str%% 
;%%  
String&& 
tagError&& 
=&& 
$str&&  
;&&  !
if(( 
((( 
info(( 
!=(( 
null(( 
)(( 
{)) 
tagInfo** 
=** 
$str	** ß
+
**® ©
info
**™ Æ
+
**Ø ∞
$str
**± Ã
;
**Ã Õ
}++ 
if-- 
(-- 
error-- 
!=-- 
null-- 
)-- 
{.. 
tagError// 
=// 
error//  
.//  !
ToString//! )
(//) *
)//* +
;//+ ,
}00 
if22 
(22 
posicaoLabel22 
==22 
PosicaoLabel22  ,
.22, -
top22- 0
)220 1
{33 
tr44 
=44 
$str44 3
+444 5
colspan446 =
+44> ?
$str44@ D
+44E F
label55 
.55 
ToString55 &
(55& '
)55' (
+55) *
$str55+ .
+55/ 0
tagInfo66 
+66  !
$str77 
+77  
input88 
.88 
ToString88 &
(88& '
)88' (
+88) *
$str99  
+99  !
tagError::  
+::! "
$str;; 
;;; 
}<< 
else== 
if== 
(== 
posicaoLabel==  
====! #
PosicaoLabel==$ 0
.==0 1
left==1 5
)==5 6
{>> 
tr?? 
=?? 
$str@@ 3
+@@4 5
labelAA 
.AA 
ToStringAA &
(AA& '
)AA' (
+AA) *
$strAA* -
+AA- .
tagInfoBB 
+BB  !
$strCC 
+CC 
$strDD )
+DD* +
inputEE 
.EE 
ToStringEE &
(EE& '
)EE' (
+EE) *
tagErrorFF  
+FF  !
$strGG 
;GG 
}HH 
returnII 
newII 
MvcHtmlStringII $
(II$ %
trII% '
)II' (
;II( )
}JJ 	
publicLL 
staticLL 
MvcHtmlStringLL #
GerarColunaLabelLL$ 4
(LL4 5
MvcHtmlStringLL5 B
labelLLC H
,LLH I
stringLLJ P
infoLLQ U
=LLV W
nullLLX \
)LL\ ]
{MM 	
StringNN 
trNN 
=NN 
$strNN 
;NN 
StringOO 
tagInfoOO 
=OO 
$strOO 
;OO  
ifQQ 
(QQ 
infoQQ 
!=QQ 
nullQQ 
)QQ 
{RR 
tagInfoSS 
=SS 
$str	SS ß
+
SS® ©
info
SS™ Æ
+
SSØ ∞
$str
SS± Ã
;
SSÃ Õ
}TT 
trVV 
=VV 
$strVV &
+VV' (
labelWW 
.WW 
ToStringWW &
(WW& '
)WW' (
+WW) *
$strWW+ .
+WW/ 0
tagInfoXX 
+XX  !
$strYY 
;YY 
return[[ 
new[[ 
MvcHtmlString[[ $
([[$ %
tr[[% '
)[[' (
;[[( )
}\\ 	
public^^ 
static^^ 
MvcHtmlString^^ #
GerarColunaButton^^$ 5
(^^5 6
MvcHtmlString^^6 C
input^^D I
,^^I J
MvcHtmlString__0 =
label__> C
,__C D
PosicaoLabel``0 <
posicaoLabel``= I
,``I J
MvcHtmlStringaa0 =
erroraa> C
=aaD E
nullaaF J
,aaJ K
stringbb0 6
infobb7 ;
=bb< =
nullbb> B
,bbB C
Stringcc0 6
buttoncc7 =
=cc> ?
nullcc@ D
)ccD E
{dd 	
Stringee 
tree 
=ee 
$stree 
;ee 
Stringff 
tagInfoff 
=ff 
$strff 
;ff  
Stringgg 
tagErrorgg 
=gg 
$strgg  
;gg  !
ifii 
(ii 
infoii 
!=ii 
nullii 
)ii 
{jj 
tagInfokk 
=kk 
$str	kk ß
+
kk® ©
info
kk™ Æ
+
kkØ ∞
$str
kk± Ã
;
kkÃ Õ
}ll 
ifnn 
(nn 
errornn 
!=nn 
nullnn 
)nn 
{oo 
tagErrorpp 
=pp 
errorpp  
.pp  !
ToStringpp! )
(pp) *
)pp* +
;pp+ ,
}qq 
ifss 
(ss 
posicaoLabelss 
==ss 
PosicaoLabelss  ,
.ss, -
topss- 0
)ss0 1
{tt 
truu 
=uu 
$struu *
+uu+ ,
labelvv 
.vv 
ToStringvv &
(vv& '
)vv' (
+vv) *
$strvv+ .
+vv/ 0
tagInfoww 
+ww  !
$strxx 5
+xx6 7
inputyy 
.yy 
ToStringyy &
(yy& '
)yy' (
+yy) *
$strzz :
+zz: ;
button{{ 
+{{  
$str|| !
+||! "
$str}}  
+}}! "
tagError~~  
+~~! "
$str 
; 
}
ÄÄ 
else
ÅÅ 
if
ÅÅ 
(
ÅÅ 
posicaoLabel
ÅÅ !
==
ÅÅ" $
PosicaoLabel
ÅÅ% 1
.
ÅÅ1 2
left
ÅÅ2 6
)
ÅÅ6 7
{
ÇÇ 
tr
ÉÉ 
=
ÉÉ 
$str
ÑÑ 3
+
ÑÑ4 5
label
ÖÖ 
.
ÖÖ 
ToString
ÖÖ &
(
ÖÖ& '
)
ÖÖ' (
+
ÖÖ) *
$str
ÖÖ+ .
+
ÖÖ/ 0
tagInfo
ÜÜ 
+
ÜÜ  !
$str
áá 
+
áá 
$str
àà )
+
àà* +
input
ââ 
.
ââ 
ToString
ââ &
(
ââ& '
)
ââ' (
+
ââ) *
tagError
ää  
+
ää! "
$str
ãã 
;
ãã 
}
åå 
return
çç 
new
çç 
MvcHtmlString
çç $
(
çç$ %
tr
çç% '
)
çç' (
;
çç( )
}
éé 	
public
êê 
static
êê 
MvcHtmlString
êê ##
GerarColunaLabelTitle
êê$ 9
(
êê9 :
MvcHtmlString
êê: G
label
êêH M
,
êêM N
string
êêO U
info
êêV Z
=
êê[ \
null
êê] a
)
êêa b
{
ëë 	
String
íí 
tr
íí 
=
íí 
$str
íí 
;
íí 
String
ìì 
tagInfo
ìì 
=
ìì 
$str
ìì 
;
ìì  
if
ïï 
(
ïï 
info
ïï 
!=
ïï 
null
ïï 
)
ïï 
{
ññ 
tagInfo
óó 
=
óó 
$stróó ß
+óó® ©
infoóó™ Æ
+óóØ ∞
$stróó± Ã
;óóÃ Õ
}
òò 
tr
öö 
=
öö 
$str
öö )
+
öö* +
label
õõ 
.
õõ 
ToString
õõ &
(
õõ& '
)
õõ' (
+
õõ) *
$str
õõ+ 2
+
õõ3 4
tagInfo
úú 
+
úú  !
$str
ùù 
;
ùù 
return
üü 
new
üü 
MvcHtmlString
üü $
(
üü$ %
tr
üü% '
)
üü' (
;
üü( )
}
†† 	
public
¢¢ 
static
¢¢ 
MvcHtmlString
¢¢ #!
GerarColunaCheckbox
¢¢$ 7
(
¢¢7 8
MvcHtmlString
££, 9
checkbox
££: B
,
££B C
MvcHtmlString
§§, 9
label
§§: ?
,
§§? @
PosicaoLabel
••, 8
posicaoLabel
••9 E
,
••E F
MvcHtmlString
¶¶, 9
error
¶¶: ?
=
¶¶@ A
null
¶¶B F
,
¶¶F G
string
ßß, 2
info
ßß3 7
=
ßß8 9
null
ßß: >
,
ßß> ?
String
®®, 2
button
®®3 9
=
®®: ;
null
®®< @
)
®®@ A
{
©© 	
String
™™ 
tr
™™ 
=
™™ 
$str
™™ 
;
™™ 
String
´´ 
tagInfo
´´ 
=
´´ 
$str
´´ 
;
´´  
String
¨¨ 
tagError
¨¨ 
=
¨¨ 
$str
¨¨  
;
¨¨  !
if
ÆÆ 
(
ÆÆ 
info
ÆÆ 
!=
ÆÆ 
null
ÆÆ 
)
ÆÆ 
{
ØØ 
tagInfo
∞∞ 
=
∞∞ 
$str∞∞ ß
+∞∞® ©
info∞∞™ Æ
+∞∞Ø ∞
$str∞∞± Ã
;∞∞Ã Õ
}
±± 
if
≥≥ 
(
≥≥ 
error
≥≥ 
!=
≥≥ 
null
≥≥ 
)
≥≥ 
{
¥¥ 
tagError
µµ 
=
µµ 
error
µµ  
.
µµ  !
ToString
µµ! )
(
µµ) *
)
µµ* +
;
µµ+ ,
}
∂∂ 
if
∏∏ 
(
∏∏ 
posicaoLabel
∏∏ 
==
∏∏ 
PosicaoLabel
∏∏  ,
.
∏∏, -
top
∏∏- 0
)
∏∏0 1
{
ππ 
tr
∫∫ 
=
∫∫ 
$str
∫∫ *
+
∫∫+ ,
label
ªª 
.
ªª 
ToString
ªª &
(
ªª& '
)
ªª' (
+
ªª) *
tagInfo
ºº 
+
ºº  !
$str
ºº" )
+
ºº* +
checkbox
ΩΩ  
.
ΩΩ  !
ToString
ΩΩ! )
(
ΩΩ) *
)
ΩΩ* +
+
ΩΩ, -
button
ΩΩ. 4
+
ΩΩ5 6
$str
ææ 
;
ææ 
}
øø 
else
¿¿ 
if
¿¿ 
(
¿¿ 
posicaoLabel
¿¿ !
==
¿¿" $
PosicaoLabel
¿¿% 1
.
¿¿1 2
left
¿¿2 6
)
¿¿6 7
{
¡¡ 
tr
¬¬ 
=
¬¬ 
$str
√√ 3
+
√√4 5
label
ƒƒ 
.
ƒƒ 
ToString
ƒƒ &
(
ƒƒ& '
)
ƒƒ' (
+
ƒƒ) *
tagInfo
≈≈ 
+
≈≈  !
$str
∆∆ 
+
∆∆ 
$str
«« )
+
««* +
checkbox
»»  
.
»»  !
ToString
»»! )
(
»») *
)
»»* +
+
»», -
button
»». 4
+
»»5 6
$str
…… 
;
…… 
}
   
return
ÀÀ 
new
ÀÀ 
MvcHtmlString
ÀÀ $
(
ÀÀ$ %
tr
ÀÀ% '
)
ÀÀ' (
;
ÀÀ( )
}
ÃÃ 	
public
ŒŒ 
static
ŒŒ 
MvcHtmlString
ŒŒ #$
GerarColunaRadioButton
ŒŒ$ :
(
ŒŒ: ;
MvcHtmlString
ŒŒ; H
label
ŒŒI N
,
ŒŒN O
MvcHtmlString
ŒŒP ]
radio1
ŒŒ^ d
,
ŒŒd e
MvcHtmlString
ŒŒf s
radio2
ŒŒt z
,
ŒŒz {
StringŒŒ| Ç
radio1LabelŒŒÉ é
,ŒŒé è
StringŒŒê ñ
radio2LabelŒŒó ¢
,ŒŒ¢ £
PosicaoLabelŒŒ§ ∞
posicaoLabelŒŒ± Ω
,ŒŒΩ æ
MvcHtmlStringŒŒø Ã
errorŒŒÕ “
=ŒŒ” ‘
nullŒŒ’ Ÿ
,ŒŒŸ ⁄
stringŒŒ€ ·
infoŒŒ‚ Ê
=ŒŒÁ Ë
nullŒŒÈ Ì
)ŒŒÌ Ó
{
œœ 	
String
–– 
tr
–– 
=
–– 
$str
–– 
;
–– 
String
—— 
tagInfo
—— 
=
—— 
$str
—— 
;
——  
String
““ 
tagError
““ 
=
““ 
$str
““  
;
““  !
if
‘‘ 
(
‘‘ 
info
‘‘ 
!=
‘‘ 
null
‘‘ 
)
‘‘ 
{
’’ 
tagInfo
÷÷ 
=
÷÷ 
$str÷÷ ß
+÷÷® ©
info÷÷™ Æ
+÷÷Ø ∞
$str÷÷± Ã
;÷÷Ã Õ
}
◊◊ 
if
ŸŸ 
(
ŸŸ 
error
ŸŸ 
!=
ŸŸ 
null
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
tagError
€€ 
=
€€ 
error
€€  
.
€€  !
ToString
€€! )
(
€€) *
)
€€* +
;
€€+ ,
}
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
posicaoLabel
ﬁﬁ 
==
ﬁﬁ 
PosicaoLabel
ﬁﬁ  ,
.
ﬁﬁ, -
top
ﬁﬁ- 0
)
ﬁﬁ0 1
{
ﬂﬂ 
tr
‡‡ 
=
‡‡ 
$str
‡‡ C
+
‡‡D E
label
·· 
.
·· 
ToString
·· &
(
··& '
)
··' (
+
··) *
$str
··+ .
+
··/ 0
tagInfo
‚‚ 
+
‚‚  !
$str
„„ #
+
„„$ %
$str
‰‰ 8
+
‰‰9 :
radio1
ÂÂ 
.
ÂÂ 
ToString
ÂÂ '
(
ÂÂ' (
)
ÂÂ( )
+
ÂÂ* +
radio1Label
ÊÊ #
+
ÊÊ$ %
$str
ÁÁ (
+
ÁÁ( )
$str
ËË 8
+
ËË9 :
radio2
ÈÈ 
.
ÈÈ 
ToString
ÈÈ '
(
ÈÈ' (
)
ÈÈ( )
+
ÈÈ* +
radio2Label
ÍÍ #
+
ÍÍ$ %
$str
ÎÎ (
+
ÎÎ) *
$str
ÏÏ "
;
ÏÏ" #
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
posicaoLabel
ÓÓ !
==
ÓÓ" $
PosicaoLabel
ÓÓ% 1
.
ÓÓ1 2
left
ÓÓ2 6
)
ÓÓ6 7
{
ÔÔ 
tr
 
=
 
$str
ÒÒ B
+
ÒÒC D
label
ÚÚ 
.
ÚÚ 
ToString
ÚÚ &
(
ÚÚ& '
)
ÚÚ' (
+
ÚÚ) *
$str
ÚÚ+ .
+
ÚÚ/ 0
tagInfo
ÛÛ 
+
ÛÛ  !
$str
ÛÛ" (
+
ÛÛ) *
$str
ÙÙ #
+
ÙÙ$ %
radio1
ıı 
.
ıı 
ToString
ıı '
(
ıı' (
)
ıı( )
+
ıı* +
radio1Label
ıı, 7
.
ıı7 8
ToString
ıı8 @
(
ıı@ A
)
ııA B
+
ııC D
radio2
ˆˆ 
.
ˆˆ 
ToString
ˆˆ '
(
ˆˆ' (
)
ˆˆ( )
+
ˆˆ* +
radio2Label
ˆˆ, 7
.
ˆˆ7 8
ToString
ˆˆ8 @
(
ˆˆ@ A
)
ˆˆA B
+
ˆˆC D
$str
˜˜ 
+
˜˜  
$str
¯¯ 
;
¯¯ 
}
˘˘ 
return
˙˙ 
new
˙˙ 
MvcHtmlString
˙˙ $
(
˙˙$ %
tr
˙˙% '
)
˙˙' (
;
˙˙( )
}
˚˚ 	
public
ää 
static
ää 
MvcHtmlString
ää #
RazorFor
ää$ ,
<
ää, -
TModel
ää- 3
,
ää3 4
	TProperty
ää5 >
>
ää> ?
(
ää? @
this
ää@ D

HtmlHelper
ääE O
<
ääO P
TModel
ääP V
>
ääV W
helper
ääX ^
,
ää^ _

Expression
ää` j
<
ääj k
Func
ääk o
<
ääo p
TModel
ääp v
,
ääv w
	TPropertyääx Å
>ääÅ Ç
>ääÇ É

expressionääÑ é
,ääé è
objectääê ñ
htmlAttributesääó •
=ää¶ ß
nullää® ¨
)ää¨ ≠
{
ãã 	
var
êê 
valueGetter
êê 
=
êê 

expression
êê (
.
êê( )
Compile
êê) 0
(
êê0 1
)
êê1 2
;
êê2 3
var
ìì 
tagTr
ìì 
=
ìì 
new
ìì 

TagBuilder
ìì &
(
ìì& '
$str
ìì' ,
)
ìì, -
;
ìì- .
var
îî 
tagLabel
îî 
=
îî 
new
îî 

TagBuilder
îî )
(
îî) *
$str
îî* 1
)
îî1 2
;
îî2 3
var
ïï 
tagInput
ïï 
=
ïï 
helper
ïï !
.
ïï! "
	EditorFor
ïï" +
(
ïï+ ,

expression
ïï, 6
)
ïï6 7
.
ïï7 8
ToHtmlString
ïï8 D
(
ïïD E
)
ïïE F
;
ïïF G
ModelMetadata
óó 
metadata
óó "
=
óó# $
ModelMetadata
óó% 2
.
óó2 3"
FromLambdaExpression
óó3 G
(
óóG H

expression
óóH R
,
óóR S
helper
óóT Z
.
óóZ [
ViewData
óó[ c
)
óóc d
;
óód e
Object
òò 
value
òò 
=
òò 
metadata
òò #
.
òò# $
Model
òò$ )
;
òò) *
String
ôô 
name
ôô 
=
ôô 
metadata
ôô "
.
ôô" #
PropertyName
ôô# /
;
ôô/ 0
tagLabel
†† 
.
†† 
SetInnerText
†† !
(
††! "
helper
††" (
.
††( )
DisplayNameFor
††) 7
(
††7 8

expression
††8 B
)
††B C
.
††C D
ToHtmlString
††D P
(
††P Q
)
††Q R
)
††R S
;
††S T
tagTr
¢¢ 
.
¢¢ 
	InnerHtml
¢¢ 
=
¢¢ 
tagLabel
¢¢ &
.
¢¢& '
ToString
¢¢' /
(
¢¢/ 0
)
¢¢0 1
+
¢¢2 3
tagInput
¢¢4 <
.
¢¢< =
ToString
¢¢= E
(
¢¢E F
)
¢¢F G
;
¢¢G H
return
¥¥ 
new
¥¥ 
MvcHtmlString
¥¥ $
(
¥¥$ %
System
¥¥% +
.
¥¥+ ,
Web
¥¥, /
.
¥¥/ 0
HttpUtility
¥¥0 ;
.
¥¥; <

HtmlDecode
¥¥< F
(
¥¥F G
tagTr
¥¥G L
.
¥¥L M
ToString
¥¥M U
(
¥¥U V
)
¥¥V W
)
¥¥W X
)
¥¥X Y
;
¥¥Y Z
}
∂∂ 	
}
ππ 
}∫∫ ”
GC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\Teste.cs
	namespace 	
	SgqSystem
 
. 
Helpers 
{ 
public 

static 
class 
Teste 
{		 
public

 
static

 
MvcHtmlString

 #

LinkVoltar

$ .
(

. /
this

/ 3

HtmlHelper

4 >
html

? C
,

C D
string

E K
idLink

L R
,

R S
string

T Z
	textoLink

[ d
=

e f
$str

g o
)

o p
{ 	
string 
strLink 
= 
string #
.# $
Format$ *
(* +
$str+ f
,f g
idLinkh n
,n o
	textoLinkp y
)y z
;z {
return 
new 
MvcHtmlString $
($ %
strLink% ,
), -
;- .
} 	
public 
static 
IHtmlString !
AssemblyVersion" 1
(1 2
this2 6

HtmlHelper7 A
helperB H
)H I
{ 	
var 
version 
= 
Assembly "
." # 
GetExecutingAssembly# 7
(7 8
)8 9
.9 :
GetName: A
(A B
)B C
.C D
VersionD K
.K L
ToStringL T
(T U
)U V
;V W
var 
versionTime 
= 
File "
." #
GetCreationTime# 2
(2 3
Assembly3 ;
.; < 
GetExecutingAssembly< P
(P Q
)Q R
.R S
LocationS [
)[ \
;\ ]
return 
MvcHtmlString  
.  !
Create! '
(' (
version( /
+0 1
$str2 `
+a b
versionTimec n
+o p
$strp w
)w x
;x y
} 	
} 
} ø	
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Helpers\ValidadorEstiloRazor.cs
	namespace 	
	SgqSystem
 
. 
Helpers 
{ 
public 

static 
class  
ValidadorEstiloRazor ,
{ 
public 
static 
MvcHtmlString #
ErrorManual$ /
(/ 0
this0 4

HtmlHelper5 ?
html@ D
,D E
stringF L
idLinkM S
,S T
stringU [

textoError\ f
=g h
$stri k
)k l
{ 	
string		 
strLink		 
=		 
string		 #
.		# $
Format		$ *
(		* +
$str		+ 8
+		9 :
idLink		; A
+		B C
$str			D —
+
		“ ”

textoError
		‘ ﬁ
+
		ﬂ ‡
$str
		· Ò
,
		Ò Ú
idLink
		Û ˘
,
		˘ ˙

textoError
		˚ Ö
)
		Ö Ü
;
		Ü á
return

 
new

 
MvcHtmlString

 $
(

$ %
strLink

% ,
)

, -
;

- .
} 	
} 
} §Ò
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mail\SimpleAsynchronousUSA.cs
	namespace 	
	SgqSystem
 
. 
Mail 
{ 
public 

static 
class 
IntegerExtensions )
{ 
public 
static 
string 
DisplayWithSuffix .
(. /
this/ 3
int4 7
num8 ;
); <
{ 	
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( ,
), -
)- .
return/ 5
num6 9
.9 :
ToString: B
(B C
)C D
+E F
$strG K
;K L
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( ,
), -
)- .
return/ 5
num6 9
.9 :
ToString: B
(B C
)C D
+E F
$strG K
;K L
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( ,
), -
)- .
return/ 5
num6 9
.9 :
ToString: B
(B C
)C D
+E F
$strG K
;K L
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( +
)+ ,
), -
return. 4
num5 8
.8 9
ToString9 A
(A B
)B C
+D E
$strF J
;J K
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( +
)+ ,
), -
return. 4
num5 8
.8 9
ToString9 A
(A B
)B C
+D E
$strF J
;J K
if 
( 
num 
. 
ToString 
( 
) 
. 
EndsWith '
(' (
$str( +
)+ ,
), -
return. 4
num5 8
.8 9
ToString9 A
(A B
)B C
+D E
$strF J
;J K
return   
num   
.   
ToString   
(    
)    !
+  " #
$str  $ (
;  ( )
}!! 	
}"" 
public'' 

class'' !
SimpleAsynchronousUSA'' &
{(( 
public** 
static** 
List** 
<** 
EmailContent** '
>**' (
ListaDeMail**) 4
;**4 5
private++ 
static++ 
int++ 
tamanhoDoPool++ (
=++) *
$num+++ /
;++/ 0
private,, 
static,, 
bool,, 
running,, #
{,,$ %
get,,& )
;,,) *
set,,+ .
;,,. /
},,0 1
public55 
static55 
void55 
SendMailUSA55 &
(55& '
)55' (
{66 	-
!CreateMailFromCorrectiveActionUSA99 -
(99- .
)99. /
;99/ 0
using:: 
(:: 
var:: 
db:: 
=:: 
new:: 
SgqDbDevEntities::  0
(::0 1
)::1 2
)::2 3
ListaDeMail;; 
=;; 
db;;  
.;;  !
EmailContent;;! -
.;;- .
Where;;. 3
(;;3 4
r;;4 5
=>;;6 8
r;;9 :
.;;: ;

SendStatus;;; E
==;;F H
null;;I M
&&;;N P
r;;Q R
.;;R S
Project;;S Z
==;;[ ]
$str;;^ f
);;f g
.;;g h
ToList;;h n
(;;n o
);;o p
;;;p q
if== 
(== 
ListaDeMail== 
!=== 
null== #
&&==$ &
ListaDeMail==' 2
.==2 3
Count==3 8
(==8 9
)==9 :
>==; <
$num=== >
)==> ?
foreach>> 
(>> 
var>> 
i>> 
in>> !
ListaDeMail>>" -
.>>- .
Take>>. 2
(>>2 3
tamanhoDoPool>>3 @
)>>@ A
.>>A B
ToList>>B H
(>>H I
)>>I J
)>>J K
{?? 
Task@@ 
.@@ 
Run@@ 
(@@ 
(@@ 
)@@ 
=>@@  "

MailSender@@# -
.@@- .
SendMail@@. 6
(@@6 7
Mapper@@7 =
.@@= >
Map@@> A
<@@A B
EmailContentDTO@@B Q
>@@Q R
(@@R S
i@@S T
)@@T U
,@@U V
GlobalConfig@@W c
.@@c d
	emailFrom@@d m
,@@m n
Guard@@o t
.@@t u
DecryptStringAES	@@u Ö
(
@@Ö Ü
GlobalConfig
@@Ü í
.
@@í ì
	emailPass
@@ì ú
)
@@ú ù
,
@@ù û
GlobalConfig
@@ü ´
.
@@´ ¨
	emailSmtp
@@¨ µ
,
@@µ ∂
GlobalConfig
@@∑ √
.
@@√ ƒ
	emailPort
@@ƒ Õ
,
@@Õ Œ
GlobalConfig
@@œ €
.
@@€ ‹
emailSSL
@@‹ ‰
,
@@‰ Â&
SendCompletedCallbackSgq
@@Ê ˛
,
@@˛ ˇ
true
@@Ä Ñ
)
@@Ñ Ö
)
@@Ö Ü
;
@@Ü á
}AA 
}CC 	
publicJJ 
staticJJ 
voidJJ 
SendMailUSAJJ &
(JJ& '
stringJJ' -
destinatarioJJ. :
)JJ: ;
{KK 	-
!CreateMailFromCorrectiveActionUSANN -
(NN- .
)NN. /
;NN/ 0
usingOO 
(OO 
varOO 
dbOO 
=OO 
newOO 
SgqDbDevEntitiesOO  0
(OO0 1
)OO1 2
)OO2 3
ListaDeMailPP 
=PP 
dbPP  
.PP  !
EmailContentPP! -
.PP- .
WherePP. 3
(PP3 4
rPP4 5
=>PP6 8
rPP9 :
.PP: ;

SendStatusPP; E
==PPF H
nullPPI M
&&PPN P
rPPQ R
.PPR S
ProjectPPS Z
==PP[ ]
$strPP^ f
)PPf g
.PPg h
ToListPPh n
(PPn o
)PPo p
;PPp q
ifRR 
(RR 
ListaDeMailRR 
!=RR 
nullRR #
&&RR$ &
ListaDeMailRR' 2
.RR2 3
CountRR3 8
(RR8 9
)RR9 :
>RR; <
$numRR= >
)RR> ?
foreachSS 
(SS 
varSS 
iSS 
inSS !
ListaDeMailSS" -
.SS- .
TakeSS. 2
(SS2 3
tamanhoDoPoolSS3 @
)SS@ A
.SSA B
ToListSSB H
(SSH I
)SSI J
)SSJ K
{TT 
TaskVV 
.VV 
RunVV 
(VV 
(VV 
)VV 
=>VV  "

MailSenderVV# -
.VV- .
SendMailVV. 6
(VV6 7
MapperVV7 =
.VV= >
MapVV> A
<VVA B
EmailContentDTOVVB Q
>VVQ R
(VVR S
iVVS T
)VVT U
,VVU V
GlobalConfigVVW c
.VVc d
	emailFromVVd m
,VVm n
GuardVVo t
.VVt u
DecryptStringAES	VVu Ö
(
VVÖ Ü
GlobalConfig
VVÜ í
.
VVí ì
	emailPass
VVì ú
)
VVú ù
,
VVù û
GlobalConfig
VVü ´
.
VV´ ¨
	emailSmtp
VV¨ µ
,
VVµ ∂
GlobalConfig
VV∑ √
.
VV√ ƒ
	emailPort
VVƒ Õ
,
VVÕ Œ
GlobalConfig
VVœ €
.
VV€ ‹
emailSSL
VV‹ ‰
,
VV‰ Â&
SendCompletedCallbackSgq
VVÊ ˛
,
VV˛ ˇ
true
VVÄ Ñ
)
VVÑ Ö
)
VVÖ Ü
;
VVÜ á
}WW 
}YY 	
publicaa 
staticaa 
voidaa -
!CreateMailFromCorrectiveActionUSAaa <
(aa< =
)aa= >
{bb 	
trycc 
{dd 
usingee 
(ee 
varee 
dbee 
=ee 
newee  #
SgqDbDevEntitiesee$ 4
(ee4 5
)ee5 6
)ee6 7
{ff 
usinggg 
(gg 
vargg 

controllergg )
=gg* +
newgg, /#
CorrectActApiControllergg0 G
(ggG H
)ggH I
)ggI J
{hh 
varii 
sqlii 
=ii  !
$str	ii" ±
+jj 
$str	jj ±
+ll 
$str	ll ±
+mm 
$str	mm ±
+nn 
$str	nn ±
+oo 
$str	oo ±
+pp 
$str	pp ±
+qq 
$str	qq ±
+rr 
$str	rr ±
+ss 
$str	ss ±
+tt 
$str	tt ±
+uu 
$str	uu ±
+vv 
$str	vv ±
+ww 
$str	ww ±
+xx 
$str	xx ±
+yy 
$str	yy ±
+zz 
$str	zz ±
+{{ 
$str	{{ ±
+|| 
$str	|| ±
+}} 
$str	}} ±
+~~ 
$str	~~ ±
+ 
$str	 ±
+ÄÄ 
$strÄÄ ±
+ÅÅ 
$strÅÅ ±
+ÇÇ 
$strÇÇ ±
+ÉÉ 
$strÉÉ ±
+ÑÑ 
$strÑÑ ±
+ÖÖ 
$strÖÖ ±
+ÜÜ 
$strÜÜ ±
+áá 
$stráá ±
+àà 
$stràà ±
+ââ 
$strââ ±
+ää 
$strää ±
+ãã 
$strãã ±
+åå 
$stråå ±
+çç 
$strçç ±
+éé 
$stréé ±
+èè 
$strèè ±
+êê 
$strêê ±
+ëë 
$strëë ±
+íí 
$str
íí 
;
íí 
var
îî %
listaCorrectiveActionDb
îî 3
=
îî4 5
db
îî6 8
.
îî8 9
Database
îî9 A
.
îîA B
SqlQuery
îîB J
<
îîJ K#
CorrectiveActionEmail
îîK `
>
îî` a
(
îîa b
sql
îîb e
)
îîe f
.
îîf g
ToList
îîg m
(
îîm n
)
îîn o
;
îîo p
foreach
ññ 
(
ññ  !
var
ññ! $
ca
ññ% '
in
ññ( *%
listaCorrectiveActionDb
ññ+ B
)
ññB C
{
óó 
var
ôô 
alertNivelQuery
ôô  /
=
ôô0 1
string
ôô2 8
.
ôô8 9
Format
ôô9 ?
(
ôô? @
$str
ôô@ Y
+
öö  
$str
öö! l
+
õõ  
$str
õõ! l
+
úú  
$str
úú! l
+
ùù  
$str
ùù! l
+
ûû  
$str
ûû! l
+
üü  
$str
üü! l
+
††  
$str
††! m
+
°°  
$str
°°! m
+
¢¢  
$str
¢¢! 6
,
¢¢6 7
ca
¢¢8 :
.
¢¢: ;
ParLevel1_Id
¢¢; G
,
¢¢G H
ca
¢¢I K
.
¢¢K L
ParCompany_Id
¢¢L Y
,
¢¢Y Z
ca
¢¢[ ]
.
¢¢] ^
Id
¢¢^ `
)
¢¢` a
;
¢¢a b
ca
§§ 
.
§§ 
AlertNumber
§§ *
=
§§+ ,
db
§§- /
.
§§/ 0
Database
§§0 8
.
§§8 9
SqlQuery
§§9 A
<
§§A B
int
§§B E
>
§§E F
(
§§F G
alertNivelQuery
§§G V
)
§§V W
.
§§W X
FirstOrDefault
§§X f
(
§§f g
)
§§g h
;
§§h i
var
¶¶ 
colectionLevel2
¶¶  /
=
¶¶0 1
db
¶¶2 4
.
¶¶4 5
CollectionLevel2
¶¶5 E
.
¶¶E F
FirstOrDefault
¶¶F T
(
¶¶T U
r
¶¶U V
=>
¶¶W Y
r
¶¶Z [
.
¶¶[ \
Id
¶¶\ ^
==
¶¶_ a
ca
¶¶b d
.
¶¶d e!
CollectionLevel02Id
¶¶e x
)
¶¶x y
;
¶¶y z
var
ßß 
	parLevel1
ßß  )
=
ßß* +
db
ßß, .
.
ßß. /
	ParLevel1
ßß/ 8
.
ßß8 9
FirstOrDefault
ßß9 G
(
ßßG H
r
ßßH I
=>
ßßJ L
r
ßßM N
.
ßßN O
Id
ßßO Q
==
ßßR T
colectionLevel2
ßßU d
.
ßßd e
ParLevel1_Id
ßße q
)
ßßq r
.
ßßr s
Name
ßßs w
;
ßßw x
var
®® 
	parLevel2
®®  )
=
®®* +
db
®®, .
.
®®. /
	ParLevel2
®®/ 8
.
®®8 9
FirstOrDefault
®®9 G
(
®®G H
r
®®H I
=>
®®J L
r
®®M N
.
®®N O
Id
®®O Q
==
®®R T
colectionLevel2
®®U d
.
®®d e
ParLevel2_Id
®®e q
)
®®q r
.
®®r s
Name
®®s w
;
®®w x
string
©© "
company
©©# *
=
©©+ ,
string
©©- 3
.
©©3 4
Empty
©©4 9
;
©©9 :
if
´´ 
(
´´  
colectionLevel2
´´  /
.
´´/ 0
UnitId
´´0 6
>
´´7 8
$num
´´9 :
)
´´: ;
company
¨¨  '
=
¨¨( )
db
¨¨* ,
.
¨¨, -

ParCompany
¨¨- 7
.
¨¨7 8
FirstOrDefault
¨¨8 F
(
¨¨F G
r
¨¨G H
=>
¨¨I K
r
¨¨L M
.
¨¨M N
Id
¨¨N P
==
¨¨Q S
colectionLevel2
¨¨T c
.
¨¨c d
UnitId
¨¨d j
)
¨¨j k
.
¨¨k l
Name
¨¨l p
;
¨¨p q
else
≠≠  
company
ÆÆ  '
=
ÆÆ( )
$str
ÆÆ* /
;
ÆÆ/ 0
var
±± 
subject
±±  '
=
±±( )
string
±±* 0
.
±±0 1
Format
±±1 7
(
±±7 8
$str
±±8 x
,
±±x y
company±±z Å
,±±Å Ç
	parLevel1±±É å
,±±å ç
ca±±é ê
.±±ê ë
AlertNumber±±ë ú
.±±ú ù!
DisplayWithSuffix±±ù Æ
(±±Æ Ø
)±±Ø ∞
)±±∞ ±
;±±± ≤
var
≥≥ 
newMail
≥≥  '
=
≥≥( )
new
≥≥* -
EmailContent
≥≥. :
(
≥≥: ;
)
≥≥; <
{
¥¥ 
AddDate
µµ  '
=
µµ( )
DateTime
µµ* 2
.
µµ2 3
Now
µµ3 6
,
µµ6 7

IsBodyHtml
∂∂  *
=
∂∂+ ,
true
∂∂- 1
,
∂∂1 2
Subject
∑∑  '
=
∑∑( )
subject
∑∑* 1
,
∑∑1 2
Project
∏∏  '
=
∏∏( )
$str
∏∏* 2
}
ππ 
;
ππ 
var
ªª 
model
ªª  %
=
ªª& '

controller
ªª( 2
.
ªª2 3%
GetCorrectiveActionById
ªª3 J
(
ªªJ K
ca
ªªK M
.
ªªM N
Id
ªªN P
)
ªªP Q
;
ªªQ R
newMail
ºº #
.
ºº# $
Body
ºº$ (
=
ºº) *
subject
ºº+ 2
+
ºº3 4
$str
ºº5 ?
+
ºº@ A
model
ººB G
.
ººG H
SendMeByMail
ººH T
;
ººT U
newMail
ΩΩ #
.
ΩΩ# $
To
ΩΩ$ &
=
ΩΩ' ($
DestinatariosSGQJBSUSA
ΩΩ) ?
(
ΩΩ? @
newMail
ΩΩ@ G
,
ΩΩG H
ca
ΩΩI K
)
ΩΩK L
;
ΩΩL M
db
ææ 
.
ææ 
EmailContent
ææ +
.
ææ+ ,
Add
ææ, /
(
ææ/ 0
newMail
ææ0 7
)
ææ7 8
;
ææ8 9
db
øø 
.
øø 
SaveChanges
øø *
(
øø* +
)
øø+ ,
;
øø, -
db
¡¡ 
.
¡¡ 
Database
¡¡ '
.
¡¡' (
ExecuteSqlCommand
¡¡( 9
(
¡¡9 :
$str
¡¡: u
+
¡¡v w
ca
¡¡x z
.
¡¡z {
Id
¡¡{ }
)
¡¡} ~
;
¡¡~ 
db
¬¬ 
.
¬¬ 
SaveChanges
¬¬ *
(
¬¬* +
)
¬¬+ ,
;
¬¬, -
}
√√ 
}
ƒƒ 
}
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
e
«« 
)
«« 
{
»» 
new
…… 
	CreateLog
…… 
(
…… 
new
…… !
	Exception
……" +
(
……+ ,
$str
……, ]
,
……] ^
e
……_ `
)
……` a
)
……a b
;
……b c
}
   
}
ÃÃ 	
private
‘‘ 
static
‘‘ 
string
‘‘ $
DestinatariosSGQJBSUSA
‘‘ 4
(
‘‘4 5
EmailContent
‘‘5 A
m
‘‘B C
,
‘‘C D#
CorrectiveActionEmail
‘‘E Z
d
‘‘[ \
)
‘‘\ ]
{
’’ 	
using
÷÷ 
(
÷÷ 
var
÷÷ 
dbLegado
÷÷ 
=
÷÷  !
new
÷÷" %
SgqDbDevEntities
÷÷& 6
(
÷÷6 7
)
÷÷7 8
)
÷÷8 9
{
◊◊ 
var
ÿÿ 
Roles
ÿÿ 
=
ÿÿ 
new
ÿÿ 
List
ÿÿ  $
<
ÿÿ$ %
string
ÿÿ% +
>
ÿÿ+ ,
(
ÿÿ, -
)
ÿÿ- .
;
ÿÿ. /
var
ŸŸ 
listaEmails
ŸŸ 
=
ŸŸ  !
new
ŸŸ" %
List
ŸŸ& *
<
ŸŸ* +
string
ŸŸ+ 1
>
ŸŸ1 2
(
ŸŸ2 3
)
ŸŸ3 4
;
ŸŸ4 5
var
⁄⁄ 
query
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ P
;
⁄⁄P Q
if
‹‹ 
(
‹‹ 
d
‹‹ 
.
‹‹ 
AlertNumber
‹‹ !
==
‹‹" $
$num
‹‹% &
)
‹‹& '
query
›› 
+=
›› 
$str
›› A
+
››B C
d
››D E
.
››E F
ParCompany_Id
››F S
+
››T U
$str
››V ^
;
››^ _
else
ﬁﬁ 
query
ﬂﬂ 
+=
ﬂﬂ 
$str
ﬂﬂ >
+
ﬂﬂ? @
d
ﬂﬂA B
.
ﬂﬂB C
ParCompany_Id
ﬂﬂC P
+
ﬂﬂQ R
$str
ﬂﬂS u
;
ﬂﬂu v
query
·· 
+=
·· 
$str
·· 3
;
··3 4
query
‚‚ 
+=
‚‚ 
$str
‚‚ -
;
‚‚- .
var
‰‰ 
listaUsuario
‰‰  
=
‰‰! "
dbLegado
‰‰# +
.
‰‰+ ,
Database
‰‰, 4
.
‰‰4 5
SqlQuery
‰‰5 =
<
‰‰= >
UserSgq
‰‰> E
>
‰‰E F
(
‰‰F G
query
‰‰G L
)
‰‰L M
;
‰‰M N
foreach
ÊÊ 
(
ÊÊ 
var
ÊÊ 
usuario
ÊÊ $
in
ÊÊ% '
listaUsuario
ÊÊ( 4
)
ÊÊ4 5
listaEmails
ÁÁ 
.
ÁÁ  
Add
ÁÁ  #
(
ÁÁ# $
usuario
ÁÁ$ +
.
ÁÁ+ ,
Email
ÁÁ, 1
)
ÁÁ1 2
;
ÁÁ2 3
if
ÈÈ 
(
ÈÈ 
listaEmails
ÈÈ 
!=
ÈÈ  "
null
ÈÈ# '
&&
ÈÈ( *
listaEmails
ÈÈ+ 6
.
ÈÈ6 7
Count
ÈÈ7 <
(
ÈÈ< =
)
ÈÈ= >
>
ÈÈ? @
$num
ÈÈA B
)
ÈÈB C
return
ÍÍ 
string
ÍÍ !
.
ÍÍ! "
Join
ÍÍ" &
(
ÍÍ& '
$str
ÍÍ' *
,
ÍÍ* +
listaEmails
ÍÍ, 7
.
ÍÍ7 8
ToArray
ÍÍ8 ?
(
ÍÍ? @
)
ÍÍ@ A
)
ÍÍA B
;
ÍÍB C
else
ÎÎ 
{
ÏÏ 
m
ÔÔ 
.
ÔÔ 

SendStatus
ÔÔ  
=
ÔÔ! "
$str
ÔÔ# O
;
ÔÔO P
return
 
string
 !
.
! "
Empty
" '
;
' (
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ˇˇ 
static
ˇˇ 
void
ˇˇ &
SendCompletedCallbackSgq
ˇˇ 3
(
ˇˇ3 4
object
ˇˇ4 :
sender
ˇˇ; A
,
ˇˇA B%
AsyncCompletedEventArgs
ˇˇC Z
e
ˇˇ[ \
)
ˇˇ\ ]
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 
db
ÉÉ 
=
ÉÉ 
new
ÉÉ  #
SgqDbDevEntities
ÉÉ$ 4
(
ÉÉ4 5
)
ÉÉ5 6
)
ÉÉ6 7
{
ÑÑ 
db
ÜÜ 
.
ÜÜ 
Configuration
ÜÜ $
.
ÜÜ$ %#
ValidateOnSaveEnabled
ÜÜ% :
=
ÜÜ; <
false
ÜÜ= B
;
ÜÜB C
db
áá 
.
áá 
Configuration
áá $
.
áá$ % 
LazyLoadingEnabled
áá% 7
=
áá8 9
false
áá: ?
;
áá? @
String
ää 
token
ää  
=
ää! "
(
ää# $
string
ää$ *
)
ää* +
e
ää+ ,
.
ää, -
	UserState
ää- 6
;
ää6 7
var
ãã 
id
ãã 
=
ãã 
int
ãã  
.
ãã  !
Parse
ãã! &
(
ãã& '
token
ãã' ,
)
ãã, -
;
ãã- .
var
çç 
emailContent
çç $
=
çç% &
db
çç' )
.
çç) *
EmailContent
çç* 6
.
çç6 7
FirstOrDefault
çç7 E
(
ççE F
r
ççF G
=>
ççH J
r
ççK L
.
ççL M
Id
ççM O
==
ççP R
id
ççS U
)
ççU V
;
ççV W
if
èè 
(
èè 
e
èè 
.
èè 
	Cancelled
èè #
)
èè# $
{
êê 
emailContent
íí $
.
íí$ %

SendStatus
íí% /
=
íí0 1
string
íí2 8
.
íí8 9
Format
íí9 ?
(
íí? @
$str
íí@ W
,
ííW X
token
ííY ^
)
íí^ _
;
íí_ `
}
ìì 
if
îî 
(
îî 
e
îî 
.
îî 
Error
îî 
!=
îî  "
null
îî# '
)
îî' (
{
ïï 
emailContent
óó $
.
óó$ %

SendStatus
óó% /
=
óó0 1
string
óó2 8
.
óó8 9
Format
óó9 ?
(
óó? @
$str
óó@ Z
,
óóZ [
token
óó\ a
,
óóa b
e
óóc d
.
óód e
Error
óóe j
.
óój k
ToString
óók s
(
óós t
)
óót u
)
óóu v
;
óóv w
}
òò 
else
ôô 
{
öö 
emailContent
úú $
.
úú$ %

SendStatus
úú% /
=
úú0 1
string
úú2 8
.
úú8 9
Format
úú9 ?
(
úú? @
$str
úú@ O
)
úúO P
;
úúP Q
}
ùù 
emailContent
üü  
.
üü  !
	AlterDate
üü! *
=
üü+ ,
DateTime
üü- 5
.
üü5 6
Now
üü6 9
;
üü9 :
emailContent
††  
.
††  !
SendDate
††! )
=
††* +
DateTime
††, 4
.
††4 5
Now
††5 8
;
††8 9
if
¢¢ 
(
¢¢ 
emailContent
¢¢ $
.
¢¢$ %

SendStatus
¢¢% /
.
¢¢/ 0
Length
¢¢0 6
>
¢¢7 8
$num
¢¢9 <
)
¢¢< =
emailContent
££ $
.
££$ %

SendStatus
££% /
=
££0 1
emailContent
££2 >
.
££> ?

SendStatus
££? I
.
££I J
	Substring
££J S
(
££S T
$num
££T U
,
££U V
$num
££W Z
)
££Z [
;
££[ \
db
¶¶ 
.
¶¶ 
EmailContent
¶¶ #
.
¶¶# $
Attach
¶¶$ *
(
¶¶* +
emailContent
¶¶+ 7
)
¶¶7 8
;
¶¶8 9
var
©© 
entry
©© 
=
©© 
db
©©  "
.
©©" #
Entry
©©# (
(
©©( )
emailContent
©©) 5
)
©©5 6
;
©©6 7
entry
™™ 
.
™™ 
State
™™ 
=
™™  !
System
™™" (
.
™™( )
Data
™™) -
.
™™- .
Entity
™™. 4
.
™™4 5
EntityState
™™5 @
.
™™@ A
Modified
™™A I
;
™™I J
entry
´´ 
.
´´ 
Property
´´ "
(
´´" #
r
´´# $
=>
´´% '
r
´´( )
.
´´) *

SendStatus
´´* 4
)
´´4 5
.
´´5 6

IsModified
´´6 @
=
´´A B
true
´´C G
;
´´G H
entry
¨¨ 
.
¨¨ 
Property
¨¨ "
(
¨¨" #
r
¨¨# $
=>
¨¨% '
r
¨¨( )
.
¨¨) *
	AlterDate
¨¨* 3
)
¨¨3 4
.
¨¨4 5

IsModified
¨¨5 ?
=
¨¨@ A
true
¨¨B F
;
¨¨F G
entry
≠≠ 
.
≠≠ 
Property
≠≠ "
(
≠≠" #
r
≠≠# $
=>
≠≠% '
r
≠≠( )
.
≠≠) *
SendDate
≠≠* 2
)
≠≠2 3
.
≠≠3 4

IsModified
≠≠4 >
=
≠≠? @
true
≠≠A E
;
≠≠E F
db
ØØ 
.
ØØ 
SaveChanges
ØØ "
(
ØØ" #
)
ØØ# $
;
ØØ$ %
}
±± 
}
≤≤ 
catch
≥≥ 
(
≥≥ )
DbEntityValidationException
≥≥ .
ex1
≥≥/ 2
)
≥≥2 3
{
¥¥ 
var
µµ 
aMerdaQueDeu
µµ  
=
µµ! "
string
µµ# )
.
µµ) *
Empty
µµ* /
;
µµ/ 0
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
i
∑∑ 
in
∑∑ !
ex1
∑∑" %
.
∑∑% &$
EntityValidationErrors
∑∑& <
)
∑∑< =
{
∏∏ 
aMerdaQueDeu
ππ  
+=
ππ! #
string
ππ$ *
.
ππ* +
Format
ππ+ 1
(
ππ1 2
$strππ2 Ä
,ππÄ Å
iππÇ É
.ππÉ Ñ
EntryππÑ â
.ππâ ä
Entityππä ê
.ππê ë
GetTypeππë ò
(ππò ô
)ππô ö
.ππö õ
Nameππõ ü
,ππü †
iππ° ¢
.ππ¢ £
Entryππ£ ®
.ππ® ©
Stateππ© Æ
)ππÆ Ø
;ππØ ∞
Console
∫∫ 
.
∫∫ 
	WriteLine
∫∫ %
(
∫∫% &
$str
∫∫& t
,
∫∫t u
i
∫∫v w
.
∫∫w x
Entry
∫∫x }
.
∫∫} ~
Entity∫∫~ Ñ
.∫∫Ñ Ö
GetType∫∫Ö å
(∫∫å ç
)∫∫ç é
.∫∫é è
Name∫∫è ì
,∫∫ì î
i∫∫ï ñ
.∫∫ñ ó
Entry∫∫ó ú
.∫∫ú ù
State∫∫ù ¢
)∫∫¢ £
;∫∫£ §
foreach
ªª 
(
ªª 
var
ªª  
ve
ªª! #
in
ªª$ &
i
ªª' (
.
ªª( )
ValidationErrors
ªª) 9
)
ªª9 :
{
ºº 
aMerdaQueDeu
ΩΩ $
+=
ΩΩ% '
string
ΩΩ( .
.
ΩΩ. /
Format
ΩΩ/ 5
(
ΩΩ5 6
$str
ΩΩ6 [
,
ΩΩ[ \
ve
ΩΩ] _
.
ΩΩ_ `
PropertyName
ΩΩ` l
,
ΩΩl m
ve
ΩΩn p
.
ΩΩp q
ErrorMessage
ΩΩq }
)
ΩΩ} ~
;
ΩΩ~ 
Console
ææ 
.
ææ  
	WriteLine
ææ  )
(
ææ) *
$str
ææ* O
,
ææO P
ve
ææQ S
.
ææS T
PropertyName
ææT `
,
ææ` a
ve
ææb d
.
ææd e
ErrorMessage
ææe q
)
ææq r
;
æær s
}
øø 
}
¿¿ 
new
¡¡ 
	CreateLog
¡¡ 
(
¡¡ 
new
¡¡ !
	Exception
¡¡" +
(
¡¡+ ,
aMerdaQueDeu
¡¡, 8
,
¡¡8 9
ex1
¡¡: =
)
¡¡= >
)
¡¡> ?
;
¡¡? @
throw
¬¬ 
;
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
ex
ƒƒ 
)
ƒƒ  
{
≈≈ 
new
∆∆ 
	CreateLog
∆∆ 
(
∆∆ 
new
∆∆ !
	Exception
∆∆" +
(
∆∆+ ,
$str
∆∆, C
,
∆∆C D
ex
∆∆E G
)
∆∆G H
)
∆∆H I
;
∆∆I J
}
«« 
}
»» 	
private
œœ 
static
œœ 
string
œœ 
RemoveEspacos
œœ +
(
œœ+ ,
string
œœ, 2
deviationMessage
œœ3 C
)
œœC D
{
–– 	
try
—— 
{
““ 
var
”” 
result
”” 
=
”” 
string
”” #
.
””# $
Empty
””$ )
;
””) *
foreach
‘‘ 
(
‘‘ 
var
‘‘ 
i
‘‘ 
in
‘‘ !
deviationMessage
‘‘" 2
.
‘‘2 3
Split
‘‘3 8
(
‘‘8 9
$char
‘‘9 <
)
‘‘< =
)
‘‘= >
result
’’ 
+=
’’ 
i
’’ 
.
’’  
	TrimStart
’’  )
(
’’) *
)
’’* +
.
’’+ ,
TrimEnd
’’, 3
(
’’3 4
)
’’4 5
+
’’6 7
$str
’’8 <
;
’’< =
return
◊◊ 
result
◊◊ 
.
◊◊ 
	Substring
◊◊ '
(
◊◊' (
$num
◊◊( )
,
◊◊) *
result
◊◊+ 1
.
◊◊1 2
IndexOf
◊◊2 9
(
◊◊9 :
$str
◊◊: C
)
◊◊C D
)
◊◊D E
;
◊◊E F
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
e
ŸŸ 
)
ŸŸ 
{
⁄⁄ 
new
€€ 
	CreateLog
€€ 
(
€€ 
e
€€ 
)
€€  
;
€€  !
return
‹‹ 
deviationMessage
‹‹ '
;
‹‹' (
}
›› 
}
ﬁﬁ 	
public
‚‚ 
class
‚‚ #
CorrectiveActionEmail
‚‚ *
:
‚‚+ ,
CorrectiveAction
‚‚- =
{
„„ 	
public
‰‰ 
int
‰‰ 
AlertNumber
‰‰ "
{
‰‰# $
get
‰‰% (
;
‰‰( )
set
‰‰* -
;
‰‰- .
}
‰‰/ 0
public
ÂÂ 
int
ÂÂ 
ParLevel1_Id
ÂÂ #
{
ÂÂ$ %
get
ÂÂ& )
;
ÂÂ) *
set
ÂÂ+ .
;
ÂÂ. /
}
ÂÂ0 1
public
ÊÊ 
int
ÊÊ 
ParCompany_Id
ÊÊ $
{
ÊÊ% &
get
ÊÊ' *
;
ÊÊ* +
set
ÊÊ, /
;
ÊÊ/ 0
}
ÊÊ1 2
public
ÍÍ 
DateTime
ÍÍ 
CollectionDate
ÍÍ *
{
ÍÍ+ ,
get
ÍÍ- 0
;
ÍÍ0 1
set
ÍÍ2 5
;
ÍÍ5 6
}
ÍÍ7 8
}
ÎÎ 	
}
ÔÔ 
}ÒÒ Êú
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mail\SimpleAsynchronous.cs
	namespace 	
	SgqSystem
 
. 
Mail 
{ 
public 

class 
SimpleAsynchronous #
{ 
public 
static 
List 
< 
EmailContent '
>' (
ListaDeMail) 4
;4 5
private 
static 
int 
tamanhoDoPool (
=) *
$num+ /
;/ 0
private 
static 
bool 
running #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public%% 
static%% 
void%% 
Mail%% 
(%%  
)%%  !
{&& 	
try'' 
{(( 
using)) 
()) 
var)) 
client)) !
=))" #
new))$ '

HttpClient))( 2
())2 3
)))3 4
)))4 5
{** 
var++ 
url++ 
=++ 
$str++ D
;++D E
client.. 
... 
Timeout.. "
=..# $
TimeSpan..% -
...- .
FromMinutes... 9
(..9 :
$num..: ;
)..; <
;..< =
client// 
.// 
GetAsync// #
(//# $
url//$ '
)//' (
.//( )
Result//) /
./// 0
Content//0 7
.//7 8
ReadAsStringAsync//8 I
(//I J
)//J K
;//K L
}00 
}11 
catch22 
(22 
	Exception22 
e22 
)22 
{33 
}55 
}66 	
public;; 
static;; 
void;; 
Reconsolidacao;; )
(;;) *
);;* +
{<< 	
try== 
{>> 
using?? 
(?? 
var?? 
client?? !
=??" #
new??$ '

HttpClient??( 2
(??2 3
)??3 4
)??4 5
{@@ 
varAA 
urlAA 
=AA 
$strAA D
;AAD E
clientCC 
.CC 
TimeoutCC "
=CC# $
TimeSpanCC% -
.CC- .
FromMinutesCC. 9
(CC9 :
$numCC: ;
)CC; <
;CC< =
clientDD 
.DD 
GetAsyncDD #
(DD# $
urlDD$ '
)DD' (
.DD( )
ResultDD) /
.DD/ 0
ContentDD0 7
.DD7 8
ReadAsStringAsyncDD8 I
(DDI J
)DDJ K
;DDK L
}EE 
}FF 
catchGG 
(GG 
	ExceptionGG 
eGG 
)GG 
{HH 
}JJ 
}KK 	
publicQQ 
staticQQ 
voidQQ '
SendMailFromDeviationSgqAppQQ 6
(QQ6 7
)QQ7 8
{RR 	
trySS 
{TT %
CreateMailSgqAppDeviationUU )
(UU) *
)UU* +
;UU+ ,,
 CreateMailSgqAppCorrectiveActionVV 0
(VV0 1
)VV1 2
;VV2 3
usingWW 
(WW 
varWW 
dbWW 
=WW 
newWW  #
SgqDbDevEntitiesWW$ 4
(WW4 5
)WW5 6
)WW6 7
ListaDeMailXX 
=XX  !
dbXX" $
.XX$ %
EmailContentXX% 1
.XX1 2
WhereXX2 7
(XX7 8
rXX8 9
=>XX: <
rXX= >
.XX> ?

SendStatusXX? I
==XXJ L
nullXXM Q
&&XXR T
rXXU V
.XXV W
ProjectXXW ^
==XX_ a
$strXXb j
)XXj k
.XXk l
ToListXXl r
(XXr s
)XXs t
;XXt u
ifZZ 
(ZZ 
ListaDeMailZZ 
!=ZZ  "
nullZZ# '
&&ZZ( *
ListaDeMailZZ+ 6
.ZZ6 7
CountZZ7 <
(ZZ< =
)ZZ= >
>ZZ? @
$numZZA B
)ZZB C
foreach[[ 
([[ 
var[[  
i[[! "
in[[# %
ListaDeMail[[& 1
.[[1 2
ToList[[2 8
([[8 9
)[[9 :
)[[: ;
Task\\ 
.\\ 
Run\\  
(\\  !
(\\! "
)\\" #
=>\\$ &

MailSender\\' 1
.\\1 2
SendMail\\2 :
(\\: ;
Mapper\\; A
.\\A B
Map\\B E
<\\E F
EmailContentDTO\\F U
>\\U V
(\\V W
i\\W X
)\\X Y
,\\Y Z
GlobalConfig\\[ g
.\\g h
	emailFrom\\h q
,\\q r
GlobalConfig\\s 
.	\\ Ä
	emailPass
\\Ä â
,
\\â ä
GlobalConfig
\\ã ó
.
\\ó ò
	emailSmtp
\\ò °
,
\\° ¢
GlobalConfig
\\£ Ø
.
\\Ø ∞
	emailPort
\\∞ π
,
\\π ∫
GlobalConfig
\\ª «
.
\\« »
emailSSL
\\» –
,
\\– —&
SendCompletedCallbackSgq
\\“ Í
,
\\Í Î
true
\\Ï 
)
\\ Ò
)
\\Ò Ú
;
\\Ú Û
}]] 
catch^^ 
(^^ 
	Exception^^ 
ex^^ 
)^^  
{__ 
new`` 
	CreateLog`` 
(`` 
new`` !
	Exception``" +
(``+ ,
$str``, Z
,``Z [
ex``\ ^
)``^ _
)``_ `
;``` a
throwaa 
exaa 
;aa 
}bb 
}cc 	
publickk 
statickk 
voidkk $
SendCompletedCallbackSgqkk 3
(kk3 4
objectkk4 :
senderkk; A
,kkA B#
AsyncCompletedEventArgskkC Z
ekk[ \
)kk\ ]
{ll 	
trymm 
{nn 
usingoo 
(oo 
varoo 
dboo 
=oo 
newoo  #
SgqDbDevEntitiesoo$ 4
(oo4 5
)oo5 6
)oo6 7
{pp 
dbrr 
.rr 
Configurationrr $
.rr$ %!
ValidateOnSaveEnabledrr% :
=rr; <
falserr= B
;rrB C
dbss 
.ss 
Configurationss $
.ss$ %
LazyLoadingEnabledss% 7
=ss8 9
falsess: ?
;ss? @
Stringvv 
tokenvv  
=vv! "
(vv# $
stringvv$ *
)vv* +
evv+ ,
.vv, -
	UserStatevv- 6
;vv6 7
varww 
idww 
=ww 
intww  
.ww  !
Parseww! &
(ww& '
tokenww' ,
)ww, -
;ww- .
varyy 
emailContentyy $
=yy% &
dbyy' )
.yy) *
EmailContentyy* 6
.yy6 7
FirstOrDefaultyy7 E
(yyE F
ryyF G
=>yyH J
ryyK L
.yyL M
IdyyM O
==yyP R
idyyS U
)yyU V
;yyV W
if{{ 
({{ 
e{{ 
.{{ 
	Cancelled{{ #
){{# $
{|| 
emailContent~~ $
.~~$ %

SendStatus~~% /
=~~0 1
string~~2 8
.~~8 9
Format~~9 ?
(~~? @
$str~~@ W
,~~W X
token~~Y ^
)~~^ _
;~~_ `
} 
if
ÄÄ 
(
ÄÄ 
e
ÄÄ 
.
ÄÄ 
Error
ÄÄ 
!=
ÄÄ  "
null
ÄÄ# '
)
ÄÄ' (
{
ÅÅ 
emailContent
ÉÉ $
.
ÉÉ$ %

SendStatus
ÉÉ% /
=
ÉÉ0 1
string
ÉÉ2 8
.
ÉÉ8 9
Format
ÉÉ9 ?
(
ÉÉ? @
$str
ÉÉ@ Z
,
ÉÉZ [
token
ÉÉ\ a
,
ÉÉa b
e
ÉÉc d
.
ÉÉd e
Error
ÉÉe j
.
ÉÉj k
ToString
ÉÉk s
(
ÉÉs t
)
ÉÉt u
)
ÉÉu v
;
ÉÉv w
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
emailContent
àà $
.
àà$ %

SendStatus
àà% /
=
àà0 1
string
àà2 8
.
àà8 9
Format
àà9 ?
(
àà? @
$str
àà@ O
)
ààO P
;
ààP Q
}
ââ 
emailContent
ãã  
.
ãã  !
	AlterDate
ãã! *
=
ãã+ ,
DateTime
ãã- 5
.
ãã5 6
Now
ãã6 9
;
ãã9 :
emailContent
åå  
.
åå  !
SendDate
åå! )
=
åå* +
DateTime
åå, 4
.
åå4 5
Now
åå5 8
;
åå8 9
if
éé 
(
éé 
emailContent
éé $
.
éé$ %

SendStatus
éé% /
.
éé/ 0
Length
éé0 6
>
éé7 8
$num
éé9 <
)
éé< =
emailContent
èè $
.
èè$ %

SendStatus
èè% /
=
èè0 1
emailContent
èè2 >
.
èè> ?

SendStatus
èè? I
.
èèI J
	Substring
èèJ S
(
èèS T
$num
èèT U
,
èèU V
$num
èèW Z
)
èèZ [
;
èè[ \
db
íí 
.
íí 
EmailContent
íí #
.
íí# $
Attach
íí$ *
(
íí* +
emailContent
íí+ 7
)
íí7 8
;
íí8 9
var
ïï 
entry
ïï 
=
ïï 
db
ïï  "
.
ïï" #
Entry
ïï# (
(
ïï( )
emailContent
ïï) 5
)
ïï5 6
;
ïï6 7
entry
ññ 
.
ññ 
State
ññ 
=
ññ  !
System
ññ" (
.
ññ( )
Data
ññ) -
.
ññ- .
Entity
ññ. 4
.
ññ4 5
EntityState
ññ5 @
.
ññ@ A
Modified
ññA I
;
ññI J
entry
óó 
.
óó 
Property
óó "
(
óó" #
r
óó# $
=>
óó% '
r
óó( )
.
óó) *

SendStatus
óó* 4
)
óó4 5
.
óó5 6

IsModified
óó6 @
=
óóA B
true
óóC G
;
óóG H
entry
òò 
.
òò 
Property
òò "
(
òò" #
r
òò# $
=>
òò% '
r
òò( )
.
òò) *
	AlterDate
òò* 3
)
òò3 4
.
òò4 5

IsModified
òò5 ?
=
òò@ A
true
òòB F
;
òòF G
entry
ôô 
.
ôô 
Property
ôô "
(
ôô" #
r
ôô# $
=>
ôô% '
r
ôô( )
.
ôô) *
SendDate
ôô* 2
)
ôô2 3
.
ôô3 4

IsModified
ôô4 >
=
ôô? @
true
ôôA E
;
ôôE F
db
õõ 
.
õõ 
SaveChanges
õõ "
(
õõ" #
)
õõ# $
;
õõ$ %
}
ùù 
}
ûû 
catch
üü 
(
üü )
DbEntityValidationException
üü .
ex1
üü/ 2
)
üü2 3
{
†† 
var
°° 
aMerdaQueDeu
°°  
=
°°! "
string
°°# )
.
°°) *
Empty
°°* /
;
°°/ 0
foreach
££ 
(
££ 
var
££ 
i
££ 
in
££ !
ex1
££" %
.
££% &$
EntityValidationErrors
££& <
)
££< =
{
§§ 
aMerdaQueDeu
••  
+=
••! #
string
••$ *
.
••* +
Format
••+ 1
(
••1 2
$str••2 Ä
,••Ä Å
i••Ç É
.••É Ñ
Entry••Ñ â
.••â ä
Entity••ä ê
.••ê ë
GetType••ë ò
(••ò ô
)••ô ö
.••ö õ
Name••õ ü
,••ü †
i••° ¢
.••¢ £
Entry••£ ®
.••® ©
State••© Æ
)••Æ Ø
;••Ø ∞
Console
¶¶ 
.
¶¶ 
	WriteLine
¶¶ %
(
¶¶% &
$str
¶¶& t
,
¶¶t u
i
¶¶v w
.
¶¶w x
Entry
¶¶x }
.
¶¶} ~
Entity¶¶~ Ñ
.¶¶Ñ Ö
GetType¶¶Ö å
(¶¶å ç
)¶¶ç é
.¶¶é è
Name¶¶è ì
,¶¶ì î
i¶¶ï ñ
.¶¶ñ ó
Entry¶¶ó ú
.¶¶ú ù
State¶¶ù ¢
)¶¶¢ £
;¶¶£ §
foreach
ßß 
(
ßß 
var
ßß  
ve
ßß! #
in
ßß$ &
i
ßß' (
.
ßß( )
ValidationErrors
ßß) 9
)
ßß9 :
{
®® 
aMerdaQueDeu
©© $
+=
©©% '
string
©©( .
.
©©. /
Format
©©/ 5
(
©©5 6
$str
©©6 [
,
©©[ \
ve
©©] _
.
©©_ `
PropertyName
©©` l
,
©©l m
ve
©©n p
.
©©p q
ErrorMessage
©©q }
)
©©} ~
;
©©~ 
Console
™™ 
.
™™  
	WriteLine
™™  )
(
™™) *
$str
™™* O
,
™™O P
ve
™™Q S
.
™™S T
PropertyName
™™T `
,
™™` a
ve
™™b d
.
™™d e
ErrorMessage
™™e q
)
™™q r
;
™™r s
}
´´ 
}
¨¨ 
new
≠≠ 
	CreateLog
≠≠ 
(
≠≠ 
new
≠≠ !
	Exception
≠≠" +
(
≠≠+ ,
aMerdaQueDeu
≠≠, 8
,
≠≠8 9
ex1
≠≠: =
)
≠≠= >
)
≠≠> ?
;
≠≠? @
throw
ÆÆ 
;
ÆÆ 
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
ex
∞∞ 
)
∞∞  
{
±± 
new
≤≤ 
	CreateLog
≤≤ 
(
≤≤ 
new
≤≤ !
	Exception
≤≤" +
(
≤≤+ ,
$str
≤≤, C
,
≤≤C D
ex
≤≤E G
)
≤≤G H
)
≤≤H I
;
≤≤I J
}
≥≥ 
}
¥¥ 	
public
ºº 
static
ºº 
void
ºº '
CreateMailSgqAppDeviation
ºº 4
(
ºº4 5
)
ºº5 6
{
ΩΩ 	
using
øø 
(
øø 
var
øø 
db
øø 
=
øø 
new
øø 
SgqDbDevEntities
øø  0
(
øø0 1
)
øø1 2
)
øø2 3
{
¿¿ 
try
¡¡ 
{
¬¬ 
db
√√ 
.
√√ 
Configuration
√√ $
.
√√$ %#
ValidateOnSaveEnabled
√√% :
=
√√; <
false
√√= B
;
√√B C
db
ƒƒ 
.
ƒƒ 
Configuration
ƒƒ $
.
ƒƒ$ % 
LazyLoadingEnabled
ƒƒ% 7
=
ƒƒ8 9
false
ƒƒ: ?
;
ƒƒ? @
var
«« 
Mails
«« 
=
«« 
db
««  "
.
««" #
	Deviation
««# ,
.
««, -
Where
««- 2
(
««2 3
r
««3 4
=>
««5 7
r
««8 9
.
««9 :
AlertNumber
««: E
>
««F G
$num
««H I
&&
««J L
(
««M N
r
««N O
.
««O P
sendMail
««P X
==
««Y [
null
««\ `
||
««a c
r
««d e
.
««e f
sendMail
««f n
==
««o q
false
««r w
)
««w x
&&
««y {
r
««| }
.
««} ~
DeviationMessage««~ é
!=««è ë
null««í ñ
)««ñ ó
.««ó ò
Take««ò ú
(««ú ù
tamanhoDoPool««ù ™
)««™ ´
.««´ ¨
ToList««¨ ≤
(««≤ ≥
)««≥ ¥
;««¥ µ
if
…… 
(
…… 
Mails
…… 
!=
……  
null
……! %
&&
……& (
Mails
……) .
.
……. /
Count
……/ 4
(
……4 5
)
……5 6
>
……7 8
$num
……9 :
)
……: ;
{
   
foreach
ÀÀ 
(
ÀÀ  !
var
ÀÀ! $
m
ÀÀ% &
in
ÀÀ' )
Mails
ÀÀ* /
)
ÀÀ/ 0
{
ÃÃ 
EmailContent
ÕÕ (
newMail
ÕÕ) 0
=
ÕÕ1 2 
GetMailByDeviation
ÕÕ3 E
(
ÕÕE F
db
ÕÕF H
,
ÕÕH I
m
ÕÕJ K
,
ÕÕK L
m
ÕÕM N
.
ÕÕN O
AlertNumber
ÕÕO Z
)
ÕÕZ [
;
ÕÕ[ \
newMail
ŒŒ #
.
ŒŒ# $
To
ŒŒ$ &
=
ŒŒ' (#
DestinatariosSGQJBSBR
ŒŒ) >
(
ŒŒ> ?
newMail
ŒŒ? F
,
ŒŒF G
m
ŒŒH I
.
ŒŒI J
AlertNumber
ŒŒJ U
,
ŒŒU V
m
ŒŒW X
.
ŒŒX Y
ParCompany_Id
ŒŒY f
)
ŒŒf g
;
ŒŒg h
db
œœ 
.
œœ 
EmailContent
œœ +
.
œœ+ ,
Add
œœ, /
(
œœ/ 0
newMail
œœ0 7
)
œœ7 8
;
œœ8 9
db
–– 
.
–– 
Database
–– '
.
––' (
ExecuteSqlCommand
––( 9
(
––9 :
$str
––: i
+
––j k
m
––l m
.
––m n
Id
––n p
)
––p q
;
––q r
}
—— 
db
”” 
.
”” 
SaveChanges
”” &
(
””& '
)
””' (
;
””( )
}
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊  
e
◊◊! "
)
◊◊" #
{
ÿÿ 
new
ŸŸ 
	CreateLog
ŸŸ !
(
ŸŸ! "
new
ŸŸ" %
	Exception
ŸŸ& /
(
ŸŸ/ 0
$str
ŸŸ0 a
,
ŸŸa b
e
ŸŸc d
)
ŸŸd e
)
ŸŸe f
;
ŸŸf g
}
⁄⁄ 
}
›› 
}
ﬂﬂ 	
private
ÏÏ 
static
ÏÏ 
EmailContent
ÏÏ # 
GetMailByDeviation
ÏÏ$ 6
(
ÏÏ6 7
SgqDbDevEntities
ÏÏ7 G
db
ÏÏH J
,
ÏÏJ K
	Deviation
ÏÏL U
m
ÏÏV W
,
ÏÏW X
int
ÏÏY \
alertNumber
ÏÏ] h
)
ÏÏh i
{
ÌÌ 	
var
ÓÓ 
body
ÓÓ 
=
ÓÓ 
Uri
ÓÓ 
.
ÓÓ  
UnescapeDataString
ÓÓ -
(
ÓÓ- .
m
ÓÓ. /
.
ÓÓ/ 0
DeviationMessage
ÓÓ0 @
)
ÓÓ@ A
.
ÓÓA B
ToString
ÓÓB J
(
ÓÓJ K
)
ÓÓK L
.
ÓÓL M
Replace
ÓÓM T
(
ÓÓT U
$str
ÓÓU 
,ÓÓ Ä
$strÓÓÅ É
)ÓÓÉ Ñ
.ÓÓÑ Ö
ReplaceÓÓÖ å
(ÓÓå ç
$strÓÓç –
,ÓÓ– —
$strÓÓ“ ‘
)ÓÓ‘ ’
.ÓÓ’ ÷
ReplaceÓÓ÷ ›
(ÓÓ› ﬁ
$strÓÓﬁ ñ
,ÓÓñ ó
$strÓÓò ö
)ÓÓö õ
.ÓÓõ ú
ReplaceÓÓú £
(ÓÓ£ §
$strÓÓ§ ©
,ÓÓ© ™
$strÓÓ´ ≠
)ÓÓ≠ Æ
;ÓÓÆ Ø
var
ÔÔ 
	parLevel1
ÔÔ 
=
ÔÔ 
db
ÔÔ 
.
ÔÔ 
	ParLevel1
ÔÔ (
.
ÔÔ( )
FirstOrDefault
ÔÔ) 7
(
ÔÔ7 8
r
ÔÔ8 9
=>
ÔÔ: <
r
ÔÔ= >
.
ÔÔ> ?
Id
ÔÔ? A
==
ÔÔB D
m
ÔÔE F
.
ÔÔF G
ParLevel1_Id
ÔÔG S
)
ÔÔS T
.
ÔÔT U
Name
ÔÔU Y
;
ÔÔY Z
var
 
	parLevel2
 
=
 
db
 
.
 
	ParLevel2
 (
.
( )
FirstOrDefault
) 7
(
7 8
r
8 9
=>
: <
r
= >
.
> ?
Id
? A
==
B D
m
E F
.
F G
ParLevel2_Id
G S
)
S T
.
T U
Name
U Y
;
Y Z
string
ÒÒ 
company
ÒÒ 
=
ÒÒ 
string
ÒÒ #
.
ÒÒ# $
Empty
ÒÒ$ )
;
ÒÒ) *
if
ÛÛ 
(
ÛÛ 
m
ÛÛ 
.
ÛÛ 
ParCompany_Id
ÛÛ 
>
ÛÛ  !
$num
ÛÛ" #
)
ÛÛ# $
company
ÙÙ 
=
ÙÙ 
db
ÙÙ 
.
ÙÙ 

ParCompany
ÙÙ '
.
ÙÙ' (
FirstOrDefault
ÙÙ( 6
(
ÙÙ6 7
r
ÙÙ7 8
=>
ÙÙ9 ;
r
ÙÙ< =
.
ÙÙ= >
Id
ÙÙ> @
==
ÙÙA C
m
ÙÙD E
.
ÙÙE F
ParCompany_Id
ÙÙF S
)
ÙÙS T
.
ÙÙT U
Name
ÙÙU Y
;
ÙÙY Z
else
ıı 
company
ˆˆ 
=
ˆˆ 
$str
ˆˆ '
;
ˆˆ' (
var
¯¯ 
subject
¯¯ 
=
¯¯ 
$str
¯¯ =
+
¯¯> ?
	parLevel1
¯¯@ I
+
¯¯J K
$str
¯¯L _
+
¯¯` a
	parLevel2
¯¯b k
+
¯¯l m
$str
¯¯n }
+
¯¯~ 
company¯¯Ä á
;¯¯á à
var
˚˚ 
newMail
˚˚ 
=
˚˚ 
new
˚˚ 
EmailContent
˚˚ *
(
˚˚* +
)
˚˚+ ,
{
¸¸ 
AddDate
˝˝ 
=
˝˝ 
DateTime
˝˝ "
.
˝˝" #
Now
˝˝# &
,
˝˝& '
Body
˛˛ 
=
˛˛ 
m
˛˛ 
.
˛˛ 
DeviationDate
˛˛ &
.
˛˛& '
ToShortDateString
˛˛' 8
(
˛˛8 9
)
˛˛9 :
+
˛˛; <
$str
˛˛= @
+
˛˛A B
m
˛˛C D
.
˛˛D E
DeviationDate
˛˛E R
.
˛˛R S
ToShortTimeString
˛˛S d
(
˛˛d e
)
˛˛e f
+
˛˛g h
$str
˛˛i m
+
˛˛n o
subject
˛˛p w
+
˛˛x y
$str˛˛z Ñ
+˛˛Ö Ü
RemoveEspacos˛˛á î
(˛˛î ï
body˛˛ï ô
)˛˛ô ö
,˛˛ö õ

IsBodyHtml
ˇˇ 
=
ˇˇ 
true
ˇˇ !
,
ˇˇ! "
Subject
ÄÄ 
=
ÄÄ 
subject
ÄÄ !
,
ÄÄ! "
Project
ÅÅ 
=
ÅÅ 
$str
ÅÅ "
}
ÇÇ 
;
ÇÇ 
return
èè 
newMail
èè 
;
èè 
}
êê 	
private
úú 
static
úú 
string
úú #
DestinatariosSGQJBSBR
úú 3
(
úú3 4
EmailContent
úú4 @
m
úúA B
,
úúB C
int
úúD G
nivel
úúH M
,
úúM N
int
úúO R
	companyId
úúS \
)
úú\ ]
{
ùù 	
using
ûû 
(
ûû 
var
ûû 
dbLegado
ûû 
=
ûû  !
new
ûû" %
SgqDbDevEntities
ûû& 6
(
ûû6 7
)
ûû7 8
)
ûû8 9
{
üü 
if
°° 
(
°° 
nivel
°° 
>
°° 
$num
°° 
)
°° 
nivel
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
var
§§ 
query
§§ 
=
§§ 
$str
§§ :
+
§§; <
$str
•• n
+
••o p
	companyId
••q z
+
••{ |
$str••} Ω
+••æ ø
nivel••¿ ≈
+••∆ «
$str••» Ã
+••Õ Œ
$str
¶¶ 7
+
¶¶8 9
$str
ßß 1
;
ßß1 2
var
®® 
listaEmails
®® 
=
®®  !
dbLegado
®®" *
.
®®* +
Database
®®+ 3
.
®®3 4
SqlQuery
®®4 <
<
®®< =
string
®®= C
>
®®C D
(
®®D E
query
®®E J
)
®®J K
;
®®K L
if
©© 
(
©© 
listaEmails
©© 
!=
©©  "
null
©©# '
&&
©©( *
listaEmails
©©+ 6
.
©©6 7
Count
©©7 <
(
©©< =
)
©©= >
>
©©? @
$num
©©A B
)
©©B C
{
™™ 
return
´´ 
string
´´ !
.
´´! "
Join
´´" &
(
´´& '
$str
´´' *
,
´´* +
listaEmails
´´, 7
.
´´7 8
ToArray
´´8 ?
(
´´? @
)
´´@ A
)
´´A B
;
´´B C
}
¨¨ 
else
≠≠ 
{
ÆÆ 
m
±± 
.
±± 

SendStatus
±±  
=
±±! "
$str
±±# O
;
±±O P
return
≤≤ 
string
≤≤ !
.
≤≤! "
Empty
≤≤" '
;
≤≤' (
}
≥≥ 
}
¥¥ 
}
µµ 	
public
ΩΩ 
static
ΩΩ 
void
ΩΩ .
 CreateMailSgqAppCorrectiveAction
ΩΩ ;
(
ΩΩ; <
)
ΩΩ< =
{
ææ 	
try
øø 
{
¿¿ 
using
¡¡ 
(
¡¡ 
var
¡¡ 
db
¡¡ 
=
¡¡ 
new
¡¡  #
SgqDbDevEntities
¡¡$ 4
(
¡¡4 5
)
¡¡5 6
)
¡¡6 7
{
¬¬ 
using
√√ 
(
√√ 
var
√√ 

controller
√√ )
=
√√* +
new
√√, /%
CorrectActApiController
√√0 G
(
√√G H
)
√√H I
)
√√I J
{
ƒƒ 
var
≈≈ %
listaCorrectiveActionDb
≈≈ 3
=
≈≈4 5
db
≈≈6 8
.
≈≈8 9
Database
≈≈9 A
.
≈≈A B
SqlQuery
≈≈B J
<
≈≈J K
CorrectiveAction
≈≈K [
>
≈≈[ \
(
≈≈\ ]
$str≈≈] ï
)≈≈ï ñ
;≈≈ñ ó
foreach
∆∆ 
(
∆∆  !
var
∆∆! $
ca
∆∆% '
in
∆∆( *%
listaCorrectiveActionDb
∆∆+ B
)
∆∆B C
{
«« 
var
»» 
colectionLevel2
»»  /
=
»»0 1
db
»»2 4
.
»»4 5
CollectionLevel2
»»5 E
.
»»E F
FirstOrDefault
»»F T
(
»»T U
r
»»U V
=>
»»W Y
r
»»Z [
.
»»[ \
Id
»»\ ^
==
»»_ a
ca
»»b d
.
»»d e!
CollectionLevel02Id
»»e x
)
»»x y
;
»»y z
var
…… 
	parLevel1
……  )
=
……* +
db
……, .
.
……. /
	ParLevel1
……/ 8
.
……8 9
FirstOrDefault
……9 G
(
……G H
r
……H I
=>
……J L
r
……M N
.
……N O
Id
……O Q
==
……R T
colectionLevel2
……U d
.
……d e
ParLevel1_Id
……e q
)
……q r
.
……r s
Name
……s w
;
……w x
var
   
	parLevel2
    )
=
  * +
db
  , .
.
  . /
	ParLevel2
  / 8
.
  8 9
FirstOrDefault
  9 G
(
  G H
r
  H I
=>
  J L
r
  M N
.
  N O
Id
  O Q
==
  R T
colectionLevel2
  U d
.
  d e
ParLevel2_Id
  e q
)
  q r
.
  r s
Name
  s w
;
  w x
string
ÀÀ "
company
ÀÀ# *
=
ÀÀ+ ,
string
ÀÀ- 3
.
ÀÀ3 4
Empty
ÀÀ4 9
;
ÀÀ9 :
if
ÕÕ 
(
ÕÕ  
colectionLevel2
ÕÕ  /
.
ÕÕ/ 0
UnitId
ÕÕ0 6
>
ÕÕ7 8
$num
ÕÕ9 :
)
ÕÕ: ;
company
ŒŒ  '
=
ŒŒ( )
db
ŒŒ* ,
.
ŒŒ, -

ParCompany
ŒŒ- 7
.
ŒŒ7 8
FirstOrDefault
ŒŒ8 F
(
ŒŒF G
r
ŒŒG H
=>
ŒŒI K
r
ŒŒL M
.
ŒŒM N
Id
ŒŒN P
==
ŒŒQ S
colectionLevel2
ŒŒT c
.
ŒŒc d
UnitId
ŒŒd j
)
ŒŒj k
.
ŒŒk l
Name
ŒŒl p
;
ŒŒp q
else
œœ  
company
––  '
=
––( )
$str
––* 7
;
––7 8
var
““ 
subject
““  '
=
““( )
$str
““* T
+
““U V
	parLevel1
““W `
+
““a b
$str
““c v
+
““w x
	parLevel2““y Ç
+““É Ñ
$str““Ö î
+““ï ñ
company““ó û
;““û ü
var
‘‘ 
newMail
‘‘  '
=
‘‘( )
new
‘‘* -
EmailContent
‘‘. :
(
‘‘: ;
)
‘‘; <
{
’’ 
AddDate
÷÷  '
=
÷÷( )
DateTime
÷÷* 2
.
÷÷2 3
Now
÷÷3 6
,
÷÷6 7

IsBodyHtml
◊◊  *
=
◊◊+ ,
true
◊◊- 1
,
◊◊1 2
Subject
ÿÿ  '
=
ÿÿ( )
subject
ÿÿ* 1
,
ÿÿ1 2
To
ŸŸ  "
=
ŸŸ# $
$str
ŸŸ% 9
,
ŸŸ9 :
Project
⁄⁄  '
=
⁄⁄( )
$str
⁄⁄* 2
}
€€ 
;
€€ 
var
‹‹ 
model
‹‹  %
=
‹‹& '

controller
‹‹( 2
.
‹‹2 3%
GetCorrectiveActionById
‹‹3 J
(
‹‹J K
ca
‹‹K M
.
‹‹M N
Id
‹‹N P
)
‹‹P Q
;
‹‹Q R
newMail
›› #
.
››# $
Body
››$ (
=
››) *
subject
››+ 2
+
››3 4
$str
››5 ?
+
››@ A
model
››B G
.
››G H
SendMeByMail
››H T
;
››T U
db
ﬁﬁ 
.
ﬁﬁ 
EmailContent
ﬁﬁ +
.
ﬁﬁ+ ,
Add
ﬁﬁ, /
(
ﬁﬁ/ 0
newMail
ﬁﬁ0 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9
db
ﬂﬂ 
.
ﬂﬂ 
SaveChanges
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
db
·· 
.
·· 
Database
·· '
.
··' (
ExecuteSqlCommand
··( 9
(
··9 :
$str
··: u
+
··v w
ca
··x z
.
··z {
Id
··{ }
)
··} ~
;
··~ 
db
‚‚ 
.
‚‚ 
SaveChanges
‚‚ *
(
‚‚* +
)
‚‚+ ,
;
‚‚, -
}
„„ 
}
‰‰ 
}
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
e
ÁÁ 
)
ÁÁ 
{
ËË 
new
ÈÈ 
	CreateLog
ÈÈ 
(
ÈÈ 
new
ÈÈ !
	Exception
ÈÈ" +
(
ÈÈ+ ,
$str
ÈÈ, ]
,
ÈÈ] ^
e
ÈÈ_ `
)
ÈÈ` a
)
ÈÈa b
;
ÈÈb c
}
ÍÍ 
}
ÏÏ 	
public
ÛÛ 
static
ÛÛ 
void
ÛÛ 0
"SendMailFromDeviationSgqAppTesteBR
ÛÛ =
(
ÛÛ= >
string
ÛÛ> D
mailTo
ÛÛE K
,
ÛÛK L
bool
ÛÛM Q
	deviation
ÛÛR [
)
ÛÛ[ \
{
ÙÙ 	
var
ıı 
	emailFrom
ıı 
=
ıı 
$str
ıı 2
;
ıı2 3
var
ˆˆ 
	emailPass
ˆˆ 
=
ˆˆ 
$str
ˆˆ 6
;
ˆˆ6 7
var
˜˜ 
	emailSmtp
˜˜ 
=
˜˜ 
$str
˜˜ +
;
˜˜+ ,
var
¯¯ 
	emailPort
¯¯ 
=
¯¯ 
$num
¯¯ 
;
¯¯  
var
˘˘ 
emailSSL
˘˘ 
=
˘˘ 
true
˘˘ 
;
˘˘  '
CreateMailSgqAppDeviation
¸¸ %
(
¸¸% &
)
¸¸& '
;
¸¸' (.
 CreateMailSgqAppCorrectiveAction
˝˝ ,
(
˝˝, -
)
˝˝- .
;
˝˝. /
using
ˇˇ 
(
ˇˇ 
var
ˇˇ 
db
ˇˇ 
=
ˇˇ 
new
ˇˇ 
SgqDbDevEntities
ˇˇ  0
(
ˇˇ0 1
)
ˇˇ1 2
)
ˇˇ2 3
ListaDeMail
ÄÄ 
=
ÄÄ 
db
ÄÄ  
.
ÄÄ  !
EmailContent
ÄÄ! -
.
ÄÄ- .
Where
ÄÄ. 3
(
ÄÄ3 4
r
ÄÄ4 5
=>
ÄÄ6 8
r
ÄÄ9 :
.
ÄÄ: ;

SendStatus
ÄÄ; E
==
ÄÄF H
null
ÄÄI M
&&
ÄÄN P
r
ÄÄQ R
.
ÄÄR S
Project
ÄÄS Z
==
ÄÄ[ ]
$str
ÄÄ^ f
)
ÄÄf g
.
ÄÄg h
ToList
ÄÄh n
(
ÄÄn o
)
ÄÄo p
;
ÄÄp q
if
ÇÇ 
(
ÇÇ 
ListaDeMail
ÇÇ 
!=
ÇÇ 
null
ÇÇ #
&&
ÇÇ$ &
ListaDeMail
ÇÇ' 2
.
ÇÇ2 3
Count
ÇÇ3 8
(
ÇÇ8 9
)
ÇÇ9 :
>
ÇÇ; <
$num
ÇÇ= >
)
ÇÇ> ?
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
i
ÉÉ 
in
ÉÉ !
ListaDeMail
ÉÉ" -
.
ÉÉ- .
Take
ÉÉ. 2
(
ÉÉ2 3
$num
ÉÉ3 4
)
ÉÉ4 5
.
ÉÉ5 6
ToList
ÉÉ6 <
(
ÉÉ< =
)
ÉÉ= >
)
ÉÉ> ?
{
ÑÑ 
i
ÖÖ 
.
ÖÖ 
To
ÖÖ 
=
ÖÖ 
mailTo
ÖÖ !
;
ÖÖ! "
Task
ÜÜ 
.
ÜÜ 
Run
ÜÜ 
(
ÜÜ 
(
ÜÜ 
)
ÜÜ 
=>
ÜÜ  "

MailSender
ÜÜ# -
.
ÜÜ- .
SendMail
ÜÜ. 6
(
ÜÜ6 7
Mapper
ÜÜ7 =
.
ÜÜ= >
Map
ÜÜ> A
<
ÜÜA B
EmailContentDTO
ÜÜB Q
>
ÜÜQ R
(
ÜÜR S
i
ÜÜS T
)
ÜÜT U
,
ÜÜU V
GlobalConfig
ÜÜW c
.
ÜÜc d
	emailFrom
ÜÜd m
,
ÜÜm n
GlobalConfig
ÜÜo {
.
ÜÜ{ |
	emailPassÜÜ| Ö
,ÜÜÖ Ü
GlobalConfigÜÜá ì
.ÜÜì î
	emailSmtpÜÜî ù
,ÜÜù û
GlobalConfigÜÜü ´
.ÜÜ´ ¨
	emailPortÜÜ¨ µ
,ÜÜµ ∂
GlobalConfigÜÜ∑ √
.ÜÜ√ ƒ
emailSSLÜÜƒ Ã
,ÜÜÃ Õ(
SendCompletedCallbackSgqÜÜŒ Ê
,ÜÜÊ Á
trueÜÜË Ï
)ÜÜÏ Ì
)ÜÜÌ Ó
;ÜÜÓ Ô
}
àà 
}
ââ 	
public
íí 
static
íí 
void
íí 
ResendProcessJson
íí ,
(
íí, -
)
íí- .
{
ìì 	
using
îî 
(
îî 
var
îî 
db
îî 
=
îî 
new
îî 
SgqDbDevEntities
îî  0
(
îî0 1
)
îî1 2
)
îî2 3
{
ïï 
var
ññ 
ids
ññ 
=
ññ 
db
ññ 
.
ññ 
CollectionJson
ññ +
.
ññ+ ,
Where
ññ, 1
(
ññ1 2
r
ññ2 3
=>
ññ4 6
!
ññ7 8
r
ññ8 9
.
ññ9 :
IsProcessed
ññ: E
)
ññZ [
.
ññ[ \
Select
ññ\ b
(
ññb c
r
ññc d
=>
ññe g
r
ññh i
.
ññi j
Id
ññj l
)
ññl m
.
ññm n
ToList
ññn t
(
ññt u
)
ññu v
;
ññv w
foreach
óó 
(
óó 
var
óó 
i
óó 
in
óó !
ids
óó" %
)
óó% &
{
òò 
using
ôô 
(
ôô 
var
ôô 
service
ôô &
=
ôô' (
new
ôô) ,
SyncServices
ôô- 9
(
ôô9 :
)
ôô: ;
)
ôô; <
{
öö 
try
õõ 
{
úú 
service
ùù #
.
ùù# $
ProcessJson
ùù$ /
(
ùù/ 0
$str
ùù0 2
,
ùù2 3
i
ùù4 5
,
ùù5 6
false
ùù7 <
)
ùù< =
;
ùù= >
}
ûû 
catch
üü 
(
üü 
	Exception
üü (
e
üü) *
)
üü* +
{
†† 
}
¢¢ 
}
££ 
}
§§ 
}
•• 
}
¶¶ 	
private
±± 
static
±± 
string
±± 
RemoveEspacos
±± +
(
±±+ ,
string
±±, 2
deviationMessage
±±3 C
)
±±C D
{
≤≤ 	
try
≥≥ 
{
¥¥ 
var
µµ 
result
µµ 
=
µµ 
string
µµ #
.
µµ# $
Empty
µµ$ )
;
µµ) *
foreach
∂∂ 
(
∂∂ 
var
∂∂ 
i
∂∂ 
in
∂∂ !
deviationMessage
∂∂" 2
.
∂∂2 3
Split
∂∂3 8
(
∂∂8 9
$char
∂∂9 <
)
∂∂< =
)
∂∂= >
result
∑∑ 
+=
∑∑ 
i
∑∑ 
.
∑∑  
	TrimStart
∑∑  )
(
∑∑) *
)
∑∑* +
.
∑∑+ ,
TrimEnd
∑∑, 3
(
∑∑3 4
)
∑∑4 5
+
∑∑6 7
$str
∑∑8 <
;
∑∑< =
return
ππ 
result
ππ 
.
ππ 
	Substring
ππ '
(
ππ' (
$num
ππ( )
,
ππ) *
result
ππ+ 1
.
ππ1 2
IndexOf
ππ2 9
(
ππ9 :
$str
ππ: C
)
ππC D
)
ππD E
;
ππE F
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
e
ªª 
)
ªª 
{
ºº 
new
ΩΩ 
	CreateLog
ΩΩ 
(
ΩΩ 
e
ΩΩ 
)
ΩΩ  
;
ΩΩ  !
return
ææ 
deviationMessage
ææ '
;
ææ' (
}
øø 
}
¿¿ 	
}
ƒƒ 
}≈≈ ◊Z
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\AutoMapperConfig.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class 
AutoMapperConfig !
{ 
public 
static 
void 
RegisterMappings +
(+ ,
), -
{		 	
Mapper 
. 

Initialize 
( 
x 
=>  "
{ 
x 
. 

AddProfile 
< )
CorrectiveActionMapperProfile :
>: ;
(; <
)< =
;= >
x 
. 

AddProfile 
< 
UserMapperProfile .
>. /
(/ 0
)0 1
;1 2
x 
. 

AddProfile 
< +
ParCompanyXUserSgqMapperProfile <
>< =
(= >
)> ?
;? @
x 
. 

AddProfile 
< -
!ConsolidationLevel01MapperProfile >
>> ?
(? @
)@ A
;A B
x 
. 

AddProfile 
< -
!ConsolidationLevel02MapperProfile >
>> ?
(? @
)@ A
;A B
x 
. 

AddProfile 
< *
CollectionLevel02MapperProfile ;
>; <
(< =
)= >
;> ?
x 
. 

AddProfile 
< *
CollectionLevel03MapperProfile ;
>; <
(< =
)= >
;> ?
x 
. 

AddProfile 
<  
Level03MapperProfile 1
>1 2
(2 3
)3 4
;4 5
x 
. 

AddProfile 
<  
Level01MapperProfile 1
>1 2
(2 3
)3 4
;4 5
x 
. 

AddProfile 
<  
Level02MapperProfile 1
>1 2
(2 3
)3 4
;4 5
x 
. 

AddProfile 
<  
Level03MapperProfile 1
>1 2
(2 3
)3 4
;4 5
x 
. 

AddProfile 
< 
PeriodMapperProfile 0
>0 1
(1 2
)2 3
;3 4
x 
. 

AddProfile 
< 
ShiftMapperProfile /
>/ 0
(0 1
)1 2
;2 3
x 
. 

AddProfile 
< "
DepartmenMapperProfile 3
>3 4
(4 5
)5 6
;6 7
x 
. 

AddProfile 
< 
UnitMapperProfile .
>. /
(/ 0
)0 1
;1 2
x 
. 

AddProfile 
< !
UnitUserMapperProfile 2
>2 3
(3 4
)4 5
;5 6
x 
. 

AddProfile 
< -
!ParCompanyXStructureMapperProfile >
>> ?
(? @
)@ A
;A B
x 
. 

AddProfile 
< %
ParStructureMapperProfile 6
>6 7
(7 8
)8 9
;9 :
x 
. 

AddProfile 
< *
ParStructureGroupMapperProfile ;
>; <
(< =
)= >
;> ?
x   
.   

AddProfile   
<   $
ParCompanyClusterProfile   5
>  5 6
(  6 7
)  7 8
;  8 9
x!! 
.!! 

AddProfile!! 
<!!  
ParGoalMapperProfile!! 1
>!!1 2
(!!2 3
)!!3 4
;!!4 5
x&& 
.&& 

AddProfile&& 
<&& "
ParLevel1MapperProfile&& 3
>&&3 4
(&&4 5
)&&5 6
;&&6 7
x'' 
.'' 

AddProfile'' 
<'' -
!ParConsolidationTypeMapperProfile'' >
>''> ?
(''? @
)''@ A
;''A B
x(( 
.(( 

AddProfile(( 
<(( %
ParFrequencyMapperProfile(( 6
>((6 7
(((7 8
)((8 9
;((9 :
x)) 
.)) 

AddProfile)) 
<)) #
ParClusterMapperProfile)) 4
>))4 5
())5 6
)))6 7
;))7 8
x** 
.** 

AddProfile** 
<** *
ParLevel1XClusterMapperProfile** ;
>**; <
(**< =
)**= >
;**> ?
x++ 
.++ 

AddProfile++ 
<++ '
ParHeaderFieldMapperProfile++ 8
>++8 9
(++9 :
)++: ;
;++; <
x,, 
.,, 

AddProfile,, 
<,, *
ParLevelDefinitonMapperProfile,, ;
>,,; <
(,,< =
),,= >
;,,> ?
x-- 
.-- 

AddProfile-- 
<-- %
ParFieldTypeMapperProfile-- 6
>--6 7
(--7 8
)--8 9
;--9 :
x.. 
... 

AddProfile.. 
<.. &
ParDepartmentMapperProfile.. 7
>..7 8
(..8 9
)..9 :
;..: ;
x// 
.// 

AddProfile// 
<// *
ParLevelDefinitonMapperProfile// ;
>//; <
(//< =
)//= >
;//> ?
x00 
.00 

AddProfile00 
<00 *
ParMultipleValuesMapperProfile00 ;
>00; <
(00< =
)00= >
;00> ?
x11 
.11 

AddProfile11 
<11 .
"ParLevel1XHeaderFieldMapperProfile11 ?
>11? @
(11@ A
)11A B
;11B C
x22 
.22 

AddProfile22 
<22 .
"ParLevel3Level2Level1MapperProfile22 ?
>22? @
(22@ A
)22A B
;22B C
x33 
.33 

AddProfile33 
<33 )
ParCriticalLevelMapperProfile33 :
>33: ;
(33; <
)33< =
;33= >
x44 
.44 

AddProfile44 
<44 (
ParLevel2Level1MapperProfile44 9
>449 :
(44: ;
)44; <
;44< =
x55 
.55 

AddProfile55 
<55 %
ParScoreTypeMapperProfile55 6
>556 7
(557 8
)558 9
;559 :
x:: 
.:: 

AddProfile:: 
<:: "
ParLevel2MapperProfile:: 3
>::3 4
(::4 5
)::5 6
;::6 7
x;; 
.;; 

AddProfile;; 
<;; '
ParLevel3GroupMapperProfile;; 8
>;;8 9
(;;9 :
);;: ;
;;;; <
x<< 
.<< 

AddProfile<< 
<<< !
ParLocalMapperProfile<< 2
><<2 3
(<<3 4
)<<4 5
;<<5 6
x== 
.== 

AddProfile== 
<== #
ParCounterMapperProfile== 4
>==4 5
(==5 6
)==6 7
;==7 8
x>> 
.>> 

AddProfile>> 
<>> (
ParCounterLocalMapperProfile>> 9
>>>9 :
(>>: ;
)>>; <
;>>< =
x?? 
.?? 

AddProfile?? 
<?? #
ParRelapseMapperProfile?? 4
>??4 5
(??5 6
)??6 7
;??7 8
x@@ 
.@@ 

AddProfile@@ 
<@@ -
!ParNotConformityRuleMapperProfile@@ >
>@@> ?
(@@? @
)@@@ A
;@@A B
xAA 
.AA 

AddProfileAA 
<AA 3
'ParNotConformityRuleXLevelMapperProfileAA D
>AAD E
(AAE F
)AAF G
;AAG H
xBB 
.BB 

AddProfileBB 
<BB #
ParCompanyMapperProfileBB 4
>BB4 5
(BB5 6
)BB6 7
;BB7 8
xCC 
.CC 

AddProfileCC 
<CC &
ParEvaluationMapperProfileCC 7
>CC7 8
(CC8 9
)CC9 :
;CC: ;
xDD 
.DD 

AddProfileDD 
<DD "
ParSampleMapperProfileDD 3
>DD3 4
(DD4 5
)DD5 6
;DD6 7
xEE 
.EE 

AddProfileEE 
<EE .
"ParLevel2XHeaderFieldMapperProfileEE ?
>EE? @
(EE@ A
)EEA B
;EEB C
xKK 
.KK 

AddProfileKK 
<KK "
ParLevel3MapperProfileKK 3
>KK3 4
(KK4 5
)KK5 6
;KK6 7
xLL 
.LL 

AddProfileLL 
<LL '
ParLevel3ValueMapperProfileLL 8
>LL8 9
(LL9 :
)LL: ;
;LL; <
xNN 
.NN 

AddProfileNN 
<NN +
ParLevel3inputTypeMapperProfileNN <
>NN< =
(NN= >
)NN> ?
;NN? @
xOO 
.OO 

AddProfileOO 
<OO +
ParMeasurementUnitMapperProfileOO <
>OO< =
(OO= >
)OO> ?
;OO? @
xPP 
.PP 

AddProfilePP 
<PP +
ParLevel3BoolFalseMapperProfilePP <
>PP< =
(PP= >
)PP> ?
;PP? @
xQQ 
.QQ 

AddProfileQQ 
<QQ *
ParLevel3BoolTrueMapperProfileQQ ;
>QQ; <
(QQ< =
)QQ= >
;QQ> ?
xRR 
.RR 

AddProfileRR 
<RR (
ParLevel3Level2MapperProfileRR 9
>RR9 :
(RR: ;
)RR; <
;RR< =
xWW 
.WW 

AddProfileWW 
<WW  
ExampleMapperProfileWW 1
>WW1 2
(WW2 3
)WW3 4
;WW4 5
x\\ 
.\\ 

AddProfile\\ 
<\\ 0
$ParLevel2ControlCompanyMapperProfile\\ A
>\\A B
(\\B C
)\\C D
;\\D E
x]] 
.]] 

AddProfile]] 
<]] %
ResultLevel3MapperProfile]] 6
>]]6 7
(]]7 8
)]]8 9
;]]9 :
x^^ 
.^^ 

AddProfile^^ 
<^^ 
RoleMapperProfile^^ .
>^^. /
(^^/ 0
)^^0 1
;^^1 2
x__ 
.__ 

AddProfile__ 
<__ 
DefectMapperProfile__ 0
>__0 1
(__1 2
)__2 3
;__3 4
x`` 
.`` 

AddProfile`` 
<``  
UserSgqMapperProfile`` 1
>``1 2
(``2 3
)``3 4
;``4 5
xaa 
.aa 

AddProfileaa 
<aa (
ParClusterGroupMapperProfileaa 9
>aa9 :
(aa: ;
)aa; <
;aa< =
xii 
.ii 

AddProfileii 
<ii %
EmailContentMapperProfileii 6
>ii6 7
(ii7 8
)ii8 9
;ii9 :
xkk 
.kk 

AddProfilekk 
<kk $
RoleUserSgqMapperProfilekk 5
>kk5 6
(kk6 7
)kk7 8
;kk8 9
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÉÉ 	
}
ÖÖ 
}ÜÜ ≤
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\CollectionHtmlMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class '
CollectionHtmlMapperProfile ,
:- .
Profile/ 6
{ 
public		 '
CollectionHtmlMapperProfile		 *
(		* +
)		+ ,
{

 	
	CreateMap 
< 
CollectionHtmlDTO '
,' (
CollectionHtml) 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
CollectionHtml $
,$ %
CollectionHtmlDTO& 7
>7 8
(8 9
)9 :
;: ;
} 	
} 
} Ù
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\DefectMapperProfile.cs
	namespace		 	
	SgqSystem		
 
.		 
Mappers		 
{

 
public 

class 
DefectMapperProfile $
:% &
Profile' .
{ 
public 
DefectMapperProfile "
(" #
)# $
{ 	
	CreateMap 
< 
Defect 
, 
	DefectDTO '
>' (
(( )
)) *
;* +
	CreateMap 
< 
	DefectDTO 
,  
Defect! '
>' (
(( )
)) *
;* +
} 	
} 
} û
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\EmailContentMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
EmailContentMapperProfile *
:+ ,
Profile- 4
{ 
public		 %
EmailContentMapperProfile		 (
(		( )
)		) *
{

 	
	CreateMap 
< 
EmailContent "
," #
EmailContentDTO$ 3
>3 4
(4 5
)5 6
;6 7
	CreateMap 
< 
EmailContentDTO %
,% &
EmailContent' 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} °
sC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\ParamsBrasil\ParLevel2ControlCompanyMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
. 
ParamsBrasil (
{ 
public 

class 0
$ParLevel2ControlCompanyMapperProfile 5
:6 7
Profile8 ?
{ 
public		 0
$ParLevel2ControlCompanyMapperProfile		 3
(		3 4
)		4 5
{

 	
	CreateMap 
< #
ParLevel2ControlCompany -
,- .&
ParLevel2ControlCompanyDTO/ I
>I J
(J K
)K L
;L M
	CreateMap 
< &
ParLevel2ControlCompanyDTO 0
,0 1#
ParLevel2ControlCompany2 I
>I J
(J K
)K L
;L M
} 	
} 
} º
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCompanyClusterMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class $
ParCompanyClusterProfile )
:* +
Profile, 3
{ 
public		 $
ParCompanyClusterProfile		 '
(		' (
)		( )
{

 	
	CreateMap 
<  
ParCompanyClusterDTO *
,* +
ParCompanyCluster, =
>= >
(> ?
)? @
;@ A
	CreateMap 
< 
ParCompanyCluster '
,' ( 
ParCompanyClusterDTO) =
>= >
(> ?
)? @
;@ A
} 	
} 
} ‰
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel2XHeaderFieldMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class .
"ParLevel2XHeaderFieldMapperProfile 3
:4 5
Profile6 =
{ 
public		 .
"ParLevel2XHeaderFieldMapperProfile		 1
(		1 2
)		2 3
{

 	
	CreateMap 
< !
ParLevel2XHeaderField +
,+ ,$
ParLevel2XHeaderFieldDTO- E
>E F
(F G
)G H
;H I
	CreateMap 
< $
ParLevel2XHeaderFieldDTO .
,. /!
ParLevel2XHeaderField0 E
>E F
(F G
)G H
;H I
} 	
} 
} ∫
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel2Level1MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class (
ParLevel2Level1MapperProfile -
:. /
Profile0 7
{ 
public		 (
ParLevel2Level1MapperProfile		 +
(		+ ,
)		, -
{

 	
	CreateMap 
< 
ParLevel2Level1DTO (
,( )
ParLevel2Level1* 9
>9 :
(: ;
); <
;< =
	CreateMap 
< 
ParLevel2Level1 %
,% &
ParLevel2Level1DTO' 9
>9 :
(: ;
); <
;< =
} 	
} 
} ›
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCompanyXStructureMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ParCompanyXStructureMapperProfile 2
:3 4
Profile5 <
{ 
public		 -
!ParCompanyXStructureMapperProfile		 0
(		0 1
)		1 2
{

 	
	CreateMap 
< #
ParCompanyXStructureDTO -
,- . 
ParCompanyXStructure/ C
>C D
(D E
)E F
;F G
	CreateMap 
<  
ParCompanyXStructure *
,* +#
ParCompanyXStructureDTO, C
>C D
(D E
)E F
;F G
} 	
} 
} æ
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCounterLocalMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class (
ParCounterLocalMapperProfile -
:. /
Profile0 7
{ 
public		 (
ParCounterLocalMapperProfile		 +
(		+ ,
)		, -
{

 	
	CreateMap 
< 
ParCounterXLocal &
,& '
ParCounterXLocalDTO( ;
>; <
(< =
)= >
;> ?
	CreateMap 
< 
ParCounterXLocalDTO )
,) *
ParCounterXLocal+ ;
>; <
(< =
)= >
;> ?
} 	
} 
} ó
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCounterMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class #
ParCounterMapperProfile (
:) *
Profile+ 2
{ 
public		 #
ParCounterMapperProfile		 &
(		& '
)		' (
{

 	
	CreateMap 
< 

ParCounter  
,  !
ParCounterDTO" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
ParCounterDTO #
,# $

ParCounter% /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} ¡
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCriticalLevelMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class )
ParCriticalLevelMapperProfile .
:/ 0
Profile1 8
{ 
public		 )
ParCriticalLevelMapperProfile		 ,
(		, -
)		- .
{

 	
	CreateMap 
< 
ParCriticalLevel &
,& '
ParCriticalLevelDTO( ;
>; <
(< =
)= >
;> ?
	CreateMap 
< 
ParCriticalLevelDTO )
,) *
ParCriticalLevel+ ;
>; <
(< =
)= >
;> ?
} 	
} 
} ¨
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParDepartmentMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class &
ParDepartmentMapperProfile +
:, -
Profile. 5
{		 
public

 &
ParDepartmentMapperProfile

 )
(

) *
)

* +
{ 	
	CreateMap 
< 
ParDepartment #
,# $
ParDepartmentDTO% 5
>5 6
(6 7
)7 8
;8 9
	CreateMap 
< 
ParDepartmentDTO &
,& '
ParDepartment( 5
>5 6
(6 7
)7 8
;8 9
} 	
} 
} ó
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParCompanyMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class #
ParCompanyMapperProfile (
:) *
Profile+ 2
{ 
public		 #
ParCompanyMapperProfile		 &
(		& '
)		' (
{

 	
	CreateMap 
< 

ParCompany  
,  !
ParCompanyDTO" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
ParCompanyDTO #
,# $

ParCompany% /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} ‰
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3Level2Level1MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class .
"ParLevel3Level2Level1MapperProfile 3
:4 5
Profile6 =
{ 
public		 .
"ParLevel3Level2Level1MapperProfile		 1
(		1 2
)		2 3
{

 	
	CreateMap 
< !
ParLevel3Level2Level1 +
,+ ,$
ParLevel3Level2Level1DTO- E
>E F
(F G
)G H
;H I
	CreateMap 
< $
ParLevel3Level2Level1DTO .
,. /!
ParLevel3Level2Level10 E
>E F
(F G
)G H
;H I
} 	
} 
} ≥
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3ValueMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class '
ParLevel3ValueMapperProfile ,
:- .
Profile/ 6
{ 
public		 '
ParLevel3ValueMapperProfile		 *
(		* +
)		+ ,
{

 	
	CreateMap 
< 
ParLevel3Value $
,$ %
ParLevel3ValueDTO& 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
ParLevel3ValueDTO '
,' (
ParLevel3Value) 7
>7 8
(8 9
)9 :
;: ;
} 	
} 
} »
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel1XClusterMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
ParLevel1XClusterMapperProfile /
:0 1
Profile2 9
{		 
public

 *
ParLevel1XClusterMapperProfile

 -
(

- .
)

. /
{ 	
	CreateMap 
< 
ParLevel1XCluster '
,' ( 
ParLevel1XClusterDTO) =
>= >
(> ?
)? @
;@ A
	CreateMap 
<  
ParLevel1XClusterDTO *
,* +
ParLevel1XCluster, =
>= >
(> ?
)? @
;@ A
} 	
} 
} œ
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3BoolFalseMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class +
ParLevel3BoolFalseMapperProfile 0
:1 2
Profile3 :
{		 
public

 +
ParLevel3BoolFalseMapperProfile

 .
(

. /
)

/ 0
{ 	
	CreateMap 
< 
ParLevel3BoolFalse (
,( )!
ParLevel3BoolFalseDTO* ?
>? @
(@ A
)A B
;B C
	CreateMap 
< !
ParLevel3BoolFalseDTO +
,+ ,
ParLevel3BoolFalse- ?
>? @
(@ A
)A B
;B C
} 	
} 
} »
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3BoolTrueMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
ParLevel3BoolTrueMapperProfile /
:0 1
Profile2 9
{ 
public		 *
ParLevel3BoolTrueMapperProfile		 -
(		- .
)		. /
{

 	
	CreateMap 
< 
ParLevel3BoolTrue '
,' ( 
ParLevel3BoolTrueDTO) =
>= >
(> ?
)? @
;@ A
	CreateMap 
<  
ParLevel3BoolTrueDTO *
,* +
ParLevel3BoolTrue, =
>= >
(> ?
)? @
;@ A
} 	
} 
} œ
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3InputTypeMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class +
ParLevel3inputTypeMapperProfile 0
:1 2
Profile3 :
{ 
public		 +
ParLevel3inputTypeMapperProfile		 .
(		. /
)		/ 0
{

 	
	CreateMap 
< 
ParLevel3InputType (
,( )!
ParLevel3InputTypeDTO* ?
>? @
(@ A
)A B
;B C
	CreateMap 
< !
ParLevel3InputTypeDTO +
,+ ,
ParLevel3InputType- ?
>? @
(@ A
)A B
;B C
} 	
} 
} œ
hC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParMeasurementUnitMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class +
ParMeasurementUnitMapperProfile 0
:1 2
Profile3 :
{ 
public		 +
ParMeasurementUnitMapperProfile		 .
(		. /
)		/ 0
{

 	
	CreateMap 
< 
ParMeasurementUnit (
,( )!
ParMeasurementUnitDTO* ?
>? @
(@ A
)A B
;B C
	CreateMap 
< !
ParMeasurementUnitDTO +
,+ ,
ParMeasurementUnit- ?
>? @
(@ A
)A B
;B C
} 	
} 
} ∫
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3Level2MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class (
ParLevel3Level2MapperProfile -
:. /
Profile0 7
{ 
public		 (
ParLevel3Level2MapperProfile		 +
(		+ ,
)		, -
{

 	
	CreateMap 
< 
ParLevel3Level2 %
,% &
ParLevel3Level2DTO' 9
>9 :
(: ;
); <
;< =
	CreateMap 
< 
ParLevel3Level2DTO (
,( )
ParLevel3Level2* 9
>9 :
(: ;
); <
;< =
} 	
} 
} ê
_C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParSampleMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class "
ParSampleMapperProfile '
:( )
Profile* 1
{ 
public		 "
ParSampleMapperProfile		 %
(		% &
)		& '
{

 	
	CreateMap 
< 
	ParSample 
,  
ParSampleDTO! -
>- .
(. /
)/ 0
;0 1
	CreateMap 
< 
ParSampleDTO "
," #
	ParSample$ -
>- .
(. /
)/ 0
;0 1
} 	
} 
} ¨
cC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParEvaluationMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class &
ParEvaluationMapperProfile +
:, -
Profile. 5
{ 
public		 &
ParEvaluationMapperProfile		 )
(		) *
)		* +
{

 	
	CreateMap 
< 
ParEvaluation #
,# $
ParEvaluationDTO% 5
>5 6
(6 7
)7 8
;8 9
	CreateMap 
< 
ParEvaluationDTO &
,& '
ParEvaluation( 5
>5 6
(6 7
)7 8
;8 9
} 	
} 
} à	
_C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class "
ParLevel3MapperProfile '
:( )
Profile* 1
{ 
public		 "
ParLevel3MapperProfile		 %
(		% &
)		& '
{

 	
	CreateMap 
< 
	ParLevel3 
,  
ParLevel3DTO! -
>- .
(. /
)/ 0
;0 1
	CreateMap 
< 
ParLevel3DTO "
," #
	ParLevel3$ -
>- .
(. /
)/ 0
;0 1
	CreateMap 
<  
ParLevel3Value_Outer *
,* +'
ParLevel3Value_OuterListDTO, G
>G H
(H I
)I J
;J K
	CreateMap 
< '
ParLevel3Value_OuterListDTO 1
,1 2 
ParLevel3Value_Outer3 G
>G H
(H I
)I J
;J K
} 	
} 
} ‰
kC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel1XHeaderFieldMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class .
"ParLevel1XHeaderFieldMapperProfile 3
:4 5
Profile6 =
{ 
public		 .
"ParLevel1XHeaderFieldMapperProfile		 1
(		1 2
)		2 3
{

 	
	CreateMap 
< !
ParLevel1XHeaderField +
,+ ,$
ParLevel1XHeaderFieldDTO- E
>E F
(F G
)G H
;H I
	CreateMap 
< $
ParLevel1XHeaderFieldDTO .
,. /!
ParLevel1XHeaderField0 E
>E F
(F G
)G H
;H I
} 	
} 
} á
pC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParNotConformityRuleXLevelMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class 3
'ParNotConformityRuleXLevelMapperProfile 8
:9 :
Profile; B
{ 
public		 3
'ParNotConformityRuleXLevelMapperProfile		 6
(		6 7
)		7 8
{

 	
	CreateMap 
< &
ParNotConformityRuleXLevel 0
,0 1)
ParNotConformityRuleXLevelDTO2 O
>O P
(P Q
)Q R
;R S
	CreateMap 
< )
ParNotConformityRuleXLevelDTO 3
,3 4&
ParNotConformityRuleXLevel5 O
>O P
(P Q
)Q R
;R S
} 	
} 
} ó
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParRelapseMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class #
ParRelapseMapperProfile (
:) *
Profile+ 2
{		 
public

 #
ParRelapseMapperProfile

 &
(

& '
)

' (
{ 	
	CreateMap 
< 

ParRelapse  
,  !
ParRelapseDTO" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
ParRelapseDTO #
,# $

ParRelapse% /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} Ç
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParGoalMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class  
ParGoalMapperProfile %
:& '
Profile( /
{ 
public		  
ParGoalMapperProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 
ParGoal 
, 

ParGoalDTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

ParGoalDTO  
,  !
ParGoal" )
>) *
(* +
)+ ,
;, -
} 	
} 
} ø	
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParHeaderFieldMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class '
ParHeaderFieldMapperProfile ,
:- .
Profile/ 6
{		 
public

 '
ParHeaderFieldMapperProfile

 *
(

* +
)

+ ,
{ 	
	CreateMap 
< 
ParHeaderField $
,$ %
ParHeaderFieldDTO& 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
ParHeaderFieldDTO '
,' (
ParHeaderField) 7
>7 8
(8 9
)9 :
. 
	ForMember 
( 
dest 
=> 
dest 
. 
ParMultipleValues .
,. /
opt 
=> 
opt 
. 
MapFrom "
(" #
src# &
=>' )
src* -
.- . 
parMultipleValuesDto. B
)B C
) 
; 
} 	
} 
} ë
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel2MapperProfile .cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class "
ParLevel2MapperProfile '
:( )
Profile* 1
{ 
public		 "
ParLevel2MapperProfile		 %
(		% &
)		& '
{

 	
	CreateMap 
< 
	ParLevel2 
,  
ParLevel2DTO! -
>- .
(. /
)/ 0
;0 1
	CreateMap 
< 
ParLevel2DTO "
," #
	ParLevel2$ -
>- .
(. /
)/ 0
;0 1
} 	
} 
} ≥
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel3GroupMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class '
ParLevel3GroupMapperProfile ,
:- .
Profile/ 6
{ 
public		 '
ParLevel3GroupMapperProfile		 *
(		* +
)		+ ,
{

 	
	CreateMap 
< 
ParLevel3Group $
,$ %
ParLevel3GroupDTO& 7
>7 8
(8 9
)9 :
;: ;
	CreateMap 
< 
ParLevel3GroupDTO '
,' (
ParLevel3Group) 7
>7 8
(8 9
)9 :
;: ;
} 	
} 
} ›
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParNotConformityRuleMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ParNotConformityRuleMapperProfile 2
:3 4
Profile5 <
{ 
public		 -
!ParNotConformityRuleMapperProfile		 0
(		0 1
)		1 2
{

 	
	CreateMap 
<  
ParNotConformityRule *
,* +#
ParNotConformityRuleDTO, C
>C D
(D E
)E F
;F G
	CreateMap 
< #
ParNotConformityRuleDTO -
,- . 
ParNotConformityRule/ C
>C D
(D E
)E F
;F G
} 	
} 
} »
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevelDefinitonMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
ParLevelDefinitonMapperProfile /
:0 1
Profile2 9
{ 
public		 *
ParLevelDefinitonMapperProfile		 -
(		- .
)		. /
{

 	
	CreateMap 
< 
ParLevelDefiniton '
,' ( 
ParLevelDefinitonDTO) =
>= >
(> ?
)? @
;@ A
	CreateMap 
<  
ParLevelDefinitonDTO *
,* +
ParLevelDefiniton, =
>= >
(> ?
)? @
;@ A
} 	
} 
} â
^C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLocalMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class !
ParLocalMapperProfile &
:' (
Profile) 0
{ 
public		 !
ParLocalMapperProfile		 $
(		$ %
)		% &
{

 	
	CreateMap 
< 
ParLocal 
, 
ParLocalDTO  +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
ParLocalDTO !
,! "
ParLocal# +
>+ ,
(, -
)- .
;. /
} 	
} 
} »
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParMultipleValuesMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
ParMultipleValuesMapperProfile /
:0 1
Profile2 9
{		 
public

 *
ParMultipleValuesMapperProfile

 -
(

- .
)

. /
{ 	
	CreateMap 
<  
ParMultipleValuesDTO *
,* +
ParMultipleValues, =
>= >
(> ?
)? @
;@ A
	CreateMap 
< 
ParMultipleValues '
,' ( 
ParMultipleValuesDTO) =
>= >
(> ?
)? @
;@ A
} 	
} 
} •
bC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParFieldTypeMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
ParFieldTypeMapperProfile *
:+ ,
Profile- 4
{ 
public		 %
ParFieldTypeMapperProfile		 (
(		( )
)		) *
{

 	
	CreateMap 
< 
ParFieldTypeDTO %
,% &
ParFieldType' 3
>3 4
(4 5
)5 6
;6 7
	CreateMap 
< 
ParFieldType "
," #
ParFieldTypeDTO$ 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} ‘
]C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel1HeaderField.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ParLevel1HeaderFieldMapperProfile 2
:3 4
Profile5 <
{		 
public

 -
!ParLevel1HeaderFieldMapperProfile

 0
(

0 1
)

1 2
{ 	
	CreateMap 
< $
ParLevel1XHeaderFieldDTO .
,. /!
ParLevel1XHeaderField0 E
>E F
(F G
)G H
;H I
	CreateMap 
< !
ParLevel1XHeaderField +
,+ ,$
ParLevel1XHeaderFieldDTO- E
>E F
(F G
)G H
;H I
} 	
} 
} ≈
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel1ClusterMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class )
ParLevel1ClusterMapperProfile .
:/ 0
Profile1 8
{ 
public		 )
ParLevel1ClusterMapperProfile		 ,
(		, -
)		- .
{

 	
	CreateMap 
< 
ParLevel1XCluster '
,' ( 
ParLevel1XClusterDTO) =
>= >
(> ?
)? @
;@ A
	CreateMap 
<  
ParLevel1XClusterDTO *
,* +
ParLevel1XCluster, =
>= >
(> ?
)? @
;@ A
} 	
} 
} ∫
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParClusterGroupMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class (
ParClusterGroupMapperProfile -
:. /
Profile0 7
{ 
public		 (
ParClusterGroupMapperProfile		 +
(		+ ,
)		, -
{

 	
	CreateMap 
< 
ParClusterGroupDTO (
,( )
ParClusterGroup* 9
>9 :
(: ;
); <
;< =
	CreateMap 
< 
ParClusterGroup %
,% &
ParClusterGroupDTO' 9
>9 :
(: ;
); <
;< =
} 	
} 
} ó
`C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParClusterMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class #
ParClusterMapperProfile (
:) *
Profile+ 2
{ 
public		 #
ParClusterMapperProfile		 &
(		& '
)		' (
{

 	
	CreateMap 
< 

ParCluster  
,  !
ParClusterDTO" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
ParClusterDTO #
,# $

ParCluster% /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} •
bC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParFrequencyMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
ParFrequencyMapperProfile *
:+ ,
Profile- 4
{		 
public

 %
ParFrequencyMapperProfile

 (
(

( )
)

) *
{ 	
	CreateMap 
< 
ParFrequency "
," #
ParFrequencyDTO$ 3
>3 4
(4 5
)5 6
;6 7
	CreateMap 
< 
ParFrequencyDTO %
,% &
ParFrequency' 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} ›
jC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParConsolidationTypeMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ParConsolidationTypeMapperProfile 2
:3 4
Profile5 <
{		 
public

 -
!ParConsolidationTypeMapperProfile

 0
(

0 1
)

1 2
{ 	
	CreateMap 
<  
ParConsolidationType *
,* +#
ParConsolidationTypeDTO, C
>C D
(D E
)E F
;F G
	CreateMap 
< #
ParConsolidationTypeDTO -
,- . 
ParConsolidationType/ C
>C D
(D E
)E F
;F G
} 	
} 
} ê
_C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParLevel1MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class "
ParLevel1MapperProfile '
:( )
Profile* 1
{ 
public		 "
ParLevel1MapperProfile		 %
(		% &
)		& '
{

 	
	CreateMap 
< 
	ParLevel1 
,  
ParLevel1DTO! -
>- .
(. /
)/ 0
;0 1
	CreateMap 
< 
ParLevel1DTO "
," #
	ParLevel1$ -
>- .
(. /
)/ 0
;0 1
} 	
} 
} ˚
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\ExampleMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class  
ExampleMapperProfile %
:& '
Profile( /
{ 
public		  
ExampleMapperProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 

ExampleDTO  
,  !
Example" )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 
Example 
, 

ExampleDTO )
>) *
(* +
)+ ,
;, -
} 	
} 
} ¿
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\CorrectiveActionMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class )
CorrectiveActionMapperProfile .
:/ 0
Profile1 8
{ 
public		 )
CorrectiveActionMapperProfile		 ,
(		, -
)		- .
{

 	
	CreateMap 
< 
CorrectiveActionDTO )
,) *
CorrectiveAction+ ;
>; <
(< =
)= >
;> ?
	CreateMap 
< 
CorrectiveAction &
,& '
CorrectiveActionDTO( ;
>; <
(< =
)= >
;> ?
} 	
} 
} «
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\CollectionLevel02MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
CollectionLevel02MapperProfile /
:0 1
Profile2 9
{ 
public		 *
CollectionLevel02MapperProfile		 -
(		- .
)		. /
{

 	
	CreateMap 
<  
CollectionLevel02DTO *
,* +
CollectionLevel02, =
>= >
(> ?
)? @
;@ A
	CreateMap 
< 
CollectionLevel02 '
,' ( 
CollectionLevel02DTO) =
>= >
(> ?
)? @
;@ A
}## 	
}$$ 
}%% «
fC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\CollectionLevel03MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
CollectionLevel03MapperProfile /
:0 1
Profile2 9
{ 
public		 *
CollectionLevel03MapperProfile		 -
(		- .
)		. /
{

 	
	CreateMap 
<  
CollectionLevel03DTO *
,* +
CollectionLevel03, =
>= >
(> ?
)? @
;@ A
	CreateMap 
< 
CollectionLevel03 '
,' ( 
CollectionLevel03DTO) =
>= >
(> ?
)? @
;@ A
} 	
} 
} ‹
iC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\ConsolidationLevel01MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ConsolidationLevel01MapperProfile 2
:3 4
Profile5 <
{ 
public		 -
!ConsolidationLevel01MapperProfile		 0
(		0 1
)		1 2
{

 	
	CreateMap 
< #
ConsolidationLevel01DTO -
,- . 
ConsolidationLevel01/ C
>C D
(D E
)E F
;F G
	CreateMap 
<  
ConsolidationLevel01 *
,* +#
ConsolidationLevel01DTO, C
>C D
(D E
)E F
;F G
} 	
} 
} ‹
iC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\ConsolidationLevel02MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class -
!ConsolidationLevel02MapperProfile 2
:3 4
Profile5 <
{ 
public		 -
!ConsolidationLevel02MapperProfile		 0
(		0 1
)		1 2
{

 	
	CreateMap 
< #
ConsolidationLevel02DTO -
,- . 
ConsolidationLevel02/ C
>C D
(D E
)E F
;F G
	CreateMap 
<  
ConsolidationLevel02 *
,* +#
ConsolidationLevel02DTO, C
>C D
(D E
)E F
;F G
} 	
} 
} Å
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\Level01MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class  
Level01MapperProfile %
:& '
Profile( /
{ 
public		  
Level01MapperProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 
Level01 
, 

Level01DTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

Level01DTO  
,  !
Level01" )
>) *
(* +
)+ ,
;, -
} 	
} 
} Å
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\Level02MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class  
Level02MapperProfile %
:& '
Profile( /
{ 
public		  
Level02MapperProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 
Level02 
, 

Level02DTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

Level02DTO  
,  !
Level02" )
>) *
(* +
)+ ,
;, -
} 	
} 
} •
bC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParScoreTypeMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
ParScoreTypeMapperProfile *
:+ ,
Profile- 4
{ 
public		 %
ParScoreTypeMapperProfile		 (
(		( )
)		) *
{

 	
	CreateMap 
< 
ParScoreType "
," #
ParScoreTypeDTO$ 3
>3 4
(4 5
)5 6
;6 7
	CreateMap 
< 
ParScoreTypeDTO %
,% &
ParScoreType' 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} »
gC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParStructureGroupMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class *
ParStructureGroupMapperProfile /
:0 1
Profile2 9
{ 
public		 *
ParStructureGroupMapperProfile		 -
(		- .
)		. /
{

 	
	CreateMap 
<  
ParStructureGroupDTO *
,* +
ParStructureGroup, =
>= >
(> ?
)? @
;@ A
	CreateMap 
< 
ParStructureGroup '
,' ( 
ParStructureGroupDTO) =
>= >
(> ?
)? @
;@ A
} 	
} 
} •
bC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Params\ParStructureMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
ParStructureMapperProfile *
:+ ,
Profile- 4
{ 
public		 %
ParStructureMapperProfile		 (
(		( )
)		) *
{

 	
	CreateMap 
< 
ParStructureDTO %
,% &
ParStructure' 3
>3 4
(4 5
)5 6
;6 7
	CreateMap 
< 
ParStructure "
," #
ParStructureDTO$ 3
>3 4
(4 5
)5 6
;6 7
} 	
} 
} »
aC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\ParCompanyXUserSgqMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class +
ParCompanyXUserSgqMapperProfile 0
:1 2
Profile3 :
{ 
public

 +
ParCompanyXUserSgqMapperProfile

 .
(

. /
)

/ 0
{ 	
	CreateMap 
< 
ParCompanyXUserSgq (
,( )!
ParCompanyXUserSgqDTO* ?
>? @
(@ A
)A B
;B C
	CreateMap 
< !
ParCompanyXUserSgqDTO +
,+ ,
ParCompanyXUserSgq- ?
>? @
(@ A
)A B
;B C
} 	
} 
} ¢
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\ResultLevel3MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class %
ResultLevel3MapperProfile *
:+ ,
Profile- 4
{ 
public		 %
ResultLevel3MapperProfile		 (
(		( )
)		) *
{

 	
	CreateMap 
< 
Result_Level3 #
,# $
Result_Level3DTO% 5
>5 6
(6 7
)7 8
;8 9
	CreateMap 
< 
Result_Level3DTO &
,& '
Result_Level3( 5
>5 6
(6 7
)7 8
;8 9
} 	
} 
}  
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\RoleMapperProfile.cs
	namespace		 	
	SgqSystem		
 
.		 
Mappers		 
{

 
public 

class 
RoleMapperProfile "
:# $
Profile% ,
{ 
public 
RoleMapperProfile  
(  !
)! "
{ 	
	CreateMap 
< 
RoleType 
, 
RoleTypeDTO  +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
RoleTypeDTO !
,! "
RoleType# +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
ScreenComponent %
,% &
ScreenComponentDTO' 9
>9 :
(: ;
); <
;< =
	CreateMap 
< 
ScreenComponentDTO (
,( )
ScreenComponent* 9
>9 :
(: ;
); <
;< =
	CreateMap 
< 
RoleSGQ 
, 

RoleSGQDTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

RoleSGQDTO  
,  !
RoleSGQ" )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 
RoleJBS 
, 

RoleJBSDTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

RoleJBSDTO  
,  !
RoleJBS" )
>) *
(* +
)+ ,
;, -
} 	
} 
} ó
ZC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\RoleUserSgqMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class $
RoleUserSgqMapperProfile )
:* +
Profile, 3
{ 
public		 $
RoleUserSgqMapperProfile		 '
(		' (
)		( )
{

 	
	CreateMap 
< 
RoleUserSgq !
,! "
RoleUserSgqDTO# 1
>1 2
(2 3
)3 4
;4 5
	CreateMap 
< 
RoleUserSgqDTO $
,$ %
RoleUserSgq& 1
>1 2
(2 3
)3 4
;4 5
} 	
} 
} Û
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\ShiftMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class 
PeriodMapperProfile $
:% &
Profile' .
{ 
public		 
PeriodMapperProfile		 "
(		" #
)		# $
{

 	
	CreateMap 
< 
Period 
, 
	PeriodDTO '
>' (
(( )
)) *
;* +
	CreateMap 
< 
	PeriodDTO 
,  
Period! '
>' (
(( )
)) *
;* +
} 	
} 
} Ó
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\PeriodMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class 
ShiftMapperProfile #
:$ %
Profile& -
{ 
public		 
ShiftMapperProfile		 !
(		! "
)		" #
{

 	
	CreateMap 
< 
Shift 
, 
ShiftDTO %
>% &
(& '
)' (
;( )
	CreateMap 
< 
ShiftDTO 
, 
Shift  %
>% &
(& '
)' (
;( )
} 	
} 
} Ç
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\UnitUserMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class !
UnitUserMapperProfile &
:' (
Profile) 0
{ 
public		 !
UnitUserMapperProfile		 $
(		$ %
)		% &
{

 	
	CreateMap 
< 
UnitUser 
, 
UnitUserDTO  +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
UnitUserDTO !
,! "
UnitUser# +
>+ ,
(, -
)- .
;. /
} 	
} 
} Ê
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\UnitMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class 
UnitMapperProfile "
:# $
Profile% ,
{ 
public		 
UnitMapperProfile		  
(		  !
)		! "
{

 	
	CreateMap 
< 
Unit 
, 
UnitDTO #
># $
($ %
)% &
;& '
	CreateMap 
< 
UnitDTO 
, 
Unit #
># $
($ %
)% &
;& '
} 	
} 
} ç
XC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\DepartmenMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class "
DepartmenMapperProfile '
:( )
Profile* 1
{ 
public		 "
DepartmenMapperProfile		 %
(		% &
)		& '
{

 	
	CreateMap 
< 

Department  
,  !
DepartmentDTO" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
DepartmentDTO #
,# $

Department% /
>/ 0
(0 1
)1 2
;2 3
} 	
} 
} Å
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\Audit\Level03MapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public 

class  
Level03MapperProfile %
:& '
Profile( /
{ 
public		  
Level03MapperProfile		 #
(		# $
)		$ %
{

 	
	CreateMap 
< 
Level03 
, 

Level03DTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

Level03DTO  
,  !
Level03" )
>) *
(* +
)+ ,
;, -
} 	
} 
} ı
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\UserMapperProfile.cs
	namespace 	
	SgqSystem
 
. 
Mappers 
{ 
public		 

class		 
UserMapperProfile		 "
:		# $
Profile		% ,
{

 
public 
UserMapperProfile  
(  !
)! "
{ 	
	CreateMap 
< 
GenericReturn #
<# $
UserSgq$ +
>+ ,
,, -
GenericReturn. ;
<; <
UserViewModel< I
>I J
>J K
(K L
)L M
;M N
	CreateMap 
< 
UserSgq 
, 
UserViewModel ,
>, -
(- .
). /
;/ 0
	CreateMap 
< 
UserSgq 
, 
UserDTO &
>& '
(' (
)( )
;) *
	CreateMap 
< 
GenericReturn #
<# $
UserDTO$ +
>+ ,
,, -
GenericReturn. ;
<; <
UserViewModel< I
>I J
>J K
(K L
)L M
;M N
	CreateMap 
< 
UserDTO 
, 
UserViewModel ,
>, -
(- .
). /
;/ 0
	CreateMap 
< 
UserViewModel #
,# $
UserDTO% ,
>, -
(- .
). /
;/ 0
	CreateMap 
< 
UserDTO 
, 
UserSgq &
>& '
(' (
)( )
;) *
} 	
} 
} ˚
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Mappers\UserSgqMapperProfile.cs
	namespace		 	
	SgqSystem		
 
.		 
Mappers		 
{

 
public 

class  
UserSgqMapperProfile %
:& '
Profile( /
{ 
public  
UserSgqMapperProfile #
(# $
)$ %
{ 	
	CreateMap 
< 
UserSgq 
, 

UserSgqDTO )
>) *
(* +
)+ ,
;, -
	CreateMap 
< 

UserSgqDTO  
,  !
UserSgq" )
>) *
(* +
)+ ,
;, -
} 	
} 
} æ
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\CustomPrincipal.cs
	namespace 	
	SgqSystem
 
. 
Secirity 
{ 
public 

class 
CustomPrincipal  
:! "

IPrincipal# -
{ 
private		 
UserDTO		 
UserVm		 
;		 
public

 
string

 
UserName

 
;

 
public 
CustomPrincipal 
( 
string %
userName& .
). /
{ 	
if 
( 
UserName 
== 
null  
)  !
UserName 
= 
userName #
;# $
Identity 
= 
new 
GenericIdentity *
(* +
userName+ 3
)3 4
;4 5
} 	
public 
	IIdentity 
Identity !
{ 	
get 
; 
set   
;   
}!! 	
public## 
bool## 
IsInRole## 
(## 
string## #
role##$ (
)##( )
{$$ 	
var%% 
roles%% 
=%% 
role%% 
.%% 
Split%% "
(%%" #
new%%# &
char%%' +
[%%+ ,
]%%, -
{%%. /
$char%%0 3
}%%4 5
)%%5 6
;%%6 7
return&& 
roles&& 
.&& 
Any&& 
(&& 
r&& 
=>&& !
this&&" &
.&&& '
UserVm&&' -
.&&- .
Roles&&. 3
.&&3 4
Contains&&4 <
(&&< =
r&&= >
)&&> ?
)&&? @
;&&@ A
}'' 	
}(( 
})) œ8
MC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\FilterUnit.cs
	namespace		 	
	SgqSystem		
 
.		 
Secirity		 
{

 
public 

class 

FilterUnit 
: !
ActionFilterAttribute 3
{ 
public 
bool "
filtraUnidadeDoUsuario *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
override 
void 
OnActionExecuting .
(. /"
ActionExecutingContext/ E
filterContextF S
)S T
{ 	
using 
( 
var 
db 
= 
new 
SgqDbDevEntities  0
(0 1
)1 2
)2 3
{ 
db 
. 
Configuration  
.  !
LazyLoadingEnabled! 3
=4 5
false6 ;
;; <

HttpCookie 
cookie !
=" #
filterContext$ 1
.1 2
HttpContext2 =
.= >
Request> E
.E F
CookiesF M
.M N
GetN Q
(Q R
$strR d
)d e
;e f
if!! 
(!! 
cookie!! 
!=!! 
null!! "
)!!" #
{"" 
var## 
rolesCompany## $
=##% &
$str##' )
;##) *
var$$ 
userId$$ 
=$$  
$num$$! "
;$$" #
if(( 
((( 
!(( 
string(( 
.((  
IsNullOrEmpty((  -
(((- .
cookie((. 4
.((4 5
Values((5 ;
[((; <
$str((< D
]((D E
)((E F
)((F G
int)) 
.)) 
TryParse)) $
())$ %
cookie))% +
.))+ ,
Values)), 2
[))2 3
$str))3 ;
])); <
.))< =
ToString))= E
())E F
)))F G
,))G H
out))I L
userId))M S
)))S T
;))T U
UserSgq++ 

userLogado++ &
=++' (
db++) +
.+++ ,
UserSgq++, 3
.++3 4
FirstOrDefault++4 B
(++B C
r++C D
=>++E G
r++H I
.++I J
Id++J L
==++M O
userId++P V
)++V W
;++W X
filterContext-- !
.--! "

Controller--" ,
.--, -
ViewBag--- 4
.--4 5
UserSgq--5 <
=--= >
db--? A
.--A B
UserSgq--B I
.--I J
ToList--J P
(--P Q
)--Q R
;--R S
if// 
(// 
userId// 
>//  
$num//! "
)//" #
{00 
if22 
(22 "
filtraUnidadeDoUsuario22 2
)222 3
{33 
filterContext44 )
.44) *

Controller44* 4
.444 5
ViewBag445 <
.44< =
UnidadeUsuario44= K
=44L M
Mapper44N T
.44T U
Map44U X
<44X Y
IEnumerable44Y d
<44d e
ParCompanyDTO44e r
>44r s
>44s t
(44t u
db44u w
.44w x

ParCompany	44x Ç
.
44Ç É
Where
44É à
(
44à â
r
44â ä
=>
44ã ç
r
44é è
.
44è ê
Id
44ê í
==
44ì ï

userLogado
44ñ †
.
44† °
ParCompany_Id
44° Æ
)
44Æ Ø
)
44Ø ∞
;
44∞ ±
}55 
else66 
if66 
(66  !
!66! "
string66" (
.66( )
IsNullOrEmpty66) 6
(666 7
cookie667 =
.66= >
Values66> D
[66D E
$str66E S
]66S T
)66T U
)66U V
{77 
rolesCompany88 (
=88) *
cookie88+ 1
.881 2
Values882 8
[888 9
$str889 G
]88G H
.88H I
ToString88I Q
(88Q R
)88R S
;88S T
var<< 
_companyXUserSgq<<  0
=<<1 2
db<<3 5
.<<5 6
ParCompanyXUserSgq<<6 H
.<<H I
Where<<I N
(<<N O
r<<O P
=><<Q S
r<<T U
.<<U V

UserSgq_Id<<V `
==<<a c
userId<<d j
)<<j k
.<<k l
Select<<l r
(<<r s
r<<s t
=><<u w
r<<x y
.<<y z

ParCompany	<<z Ñ
)
<<Ñ Ö
.
<<Ö Ü
ToList
<<Ü å
(
<<å ç
)
<<ç é
.
<<é è
OrderBy
<<è ñ
(
<<ñ ó
r
<<ó ò
=>
<<ô õ
r
<<ú ù
.
<<ù û
Name
<<û ¢
)
<<¢ £
.
<<£ §
GroupBy
<<§ ´
(
<<´ ¨
r
<<¨ ≠
=>
<<Æ ∞
r
<<± ≤
.
<<≤ ≥
Id
<<≥ µ
)
<<µ ∂
.
<<∂ ∑
Select
<<∑ Ω
(
<<Ω æ
group
<<æ √
=>
<<ƒ ∆
group
<<« Ã
.
<<Ã Õ
First
<<Õ “
(
<<“ ”
)
<<” ‘
)
<<‘ ’
.
<<’ ÷
ToList
<<÷ ‹
(
<<‹ ›
)
<<› ﬁ
;
<<ﬁ ﬂ
filterContext>> )
.>>) *

Controller>>* 4
.>>4 5
ViewBag>>5 <
.>>< =
UnidadeUsuario>>= K
=>>L M
Mapper>>N T
.>>T U
Map>>U X
<>>X Y
IEnumerable>>Y d
<>>d e
ParCompanyDTO>>e r
>>>r s
>>>s t
(>>t u
_companyXUserSgq	>>u Ö
)
>>Ö Ü
;
>>Ü á
}AA 
elseBB 
{CC 
varDD 
unidadesDD  (
=DD) *
dbDD+ -
.DD- .

ParCompanyDD. 8
.DD8 9
ToListDD9 ?
(DD? @
)DD@ A
;DDA B
ifFF 
(FF  
unidadesFF  (
==FF) +
nullFF, 0
||FF1 3
unidadesFF4 <
.FF< =
CountFF= B
(FFB C
)FFC D
>FFE F
$numFFG H
)FFH I
unidadesGG  (
=GG) *
dbGG+ -
.GG- .

ParCompanyGG. 8
.GG8 9
WhereGG9 >
(GG> ?
rGG? @
=>GGA C
rGGD E
.GGE F
IdGGF H
==GGI K

userLogadoGGL V
.GGV W
ParCompany_IdGGW d
)GGd e
.GGe f
ToListGGf l
(GGl m
)GGm n
;GGn o
filterContextII )
.II) *

ControllerII* 4
.II4 5
ViewBagII5 <
.II< =
UnidadeUsuarioII= K
=IIL M
MapperIIN T
.IIT U
MapIIU X
<IIX Y
IEnumerableIIY d
<IId e
ParCompanyDTOIIe r
>IIr s
>IIs t
(IIt u
unidadesIIu }
)II} ~
;II~ 
}JJ 
}LL 
}MM 
}OO 
baseRR 
.RR 
OnActionExecutingRR "
(RR" #
filterContextRR# 0
)RR0 1
;RR1 2
}SS 	
}[[ 
}\\ ın
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\FormularioPesquisa.cs
	namespace

 	
	SgqSystem


 
.

 
Secirity

 
{ 
public 

class 
FormularioPesquisa #
:$ %!
ActionFilterAttribute& ;
{ 
public 
bool #
filtraUnidadePorUsuario +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
bool "
filtraUnidadeDoUsuario *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
bool 
parLevel1e2 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
	parLevel3 
{ 
get  #
;# $
set% (
;( )
}* +
public   
override   
void   
OnActionExecuting   .
(  . /"
ActionExecutingContext  / E
filterContext  F S
)  S T
{!! 	
using"" 
("" 
var"" 
db"" 
="" 
new"" 
SgqDbDevEntities""  0
(""0 1
)""1 2
)""2 3
{## 
db%% 
.%% 
Configuration%%  
.%%  !
LazyLoadingEnabled%%! 3
=%%4 5
false%%6 ;
;%%; <
filterContext'' 
.'' 

Controller'' (
.''( )
ViewBag'') 0
.''0 1
Level1''1 7
=''8 9
new'': =
List''> B
<''B C
ParLevel1DTO''C O
>''O P
(''P Q
)''Q R
;''R S
filterContext(( 
.(( 

Controller(( (
.((( )
ViewBag(() 0
.((0 1
Level2((1 7
=((8 9
new((: =
List((> B
<((B C
ParLevel2DTO((C O
>((O P
(((P Q
)((Q R
;((R S
filterContext)) 
.)) 

Controller)) (
.))( )
ViewBag))) 0
.))0 1
Level3))1 7
=))8 9
new)): =
List))> B
<))B C
ParLevel3DTO))C O
>))O P
())P Q
)))Q R
;))R S
if++ 
(++ 
parLevel1e2++ 
)++  
{,, 
filterContext-- !
.--! "

Controller--" ,
.--, -
ViewBag--- 4
.--4 5
Level1--5 ;
=--< =
Mapper--> D
.--D E
Map--E H
<--H I
List--I M
<--M N
ParLevel1DTO--N Z
>--Z [
>--[ \
(--\ ]
db--] _
.--_ `
	ParLevel1--` i
.--i j
ToList--j p
(--p q
)--q r
)--r s
;--s t
filterContext.. !
...! "

Controller.." ,
..., -
ViewBag..- 4
...4 5
Level2..5 ;
=..< =
Mapper..> D
...D E
Map..E H
<..H I
List..I M
<..M N
ParLevel2DTO..N Z
>..Z [
>..[ \
(..\ ]
db..] _
..._ `
	ParLevel2..` i
...i j
ToList..j p
(..p q
)..q r
)..r s
;..s t
}// 
if11 
(11 
	parLevel311 
)11 
filterContext22 !
.22! "

Controller22" ,
.22, -
ViewBag22- 4
.224 5
Level3225 ;
=22< =
Mapper22> D
.22D E
Map22E H
<22H I
List22I M
<22M N
ParLevel3DTO22N Z
>22Z [
>22[ \
(22\ ]
db22] _
.22_ `
	ParLevel322` i
.22i j
ToList22j p
(22p q
)22q r
)22r s
;22s t

HttpCookie44 
cookie44 !
=44" #
filterContext44$ 1
.441 2
HttpContext442 =
.44= >
Request44> E
.44E F
Cookies44F M
.44M N
Get44N Q
(44Q R
$str44R d
)44d e
;44e f
if66 
(66 
cookie66 
!=66 
null66 "
)66" #
{77 
var88 
rolesCompany88 $
=88% &
$str88' )
;88) *
var99 
userId99 
=99  
$num99! "
;99" #
if;; 
(;; 
!;; 
string;; 
.;;  
IsNullOrEmpty;;  -
(;;- .
cookie;;. 4
.;;4 5
Values;;5 ;
[;;; <
$str;;< D
];;D E
);;E F
);;F G
int<< 
.<< 
TryParse<< $
(<<$ %
cookie<<% +
.<<+ ,
Values<<, 2
[<<2 3
$str<<3 ;
]<<; <
.<<< =
ToString<<= E
(<<E F
)<<F G
,<<G H
out<<I L
userId<<M S
)<<S T
;<<T U
UserSgq>> 

userLogado>> &
=>>' (
db>>) +
.>>+ ,
UserSgq>>, 3
.>>3 4
FirstOrDefault>>4 B
(>>B C
r>>C D
=>>>E G
r>>H I
.>>I J
Id>>J L
==>>M O
userId>>P V
)>>V W
;>>W X
filterContext@@ !
.@@! "

Controller@@" ,
.@@, -
ViewBag@@- 4
.@@4 5
UserSgq@@5 <
=@@= >
db@@? A
.@@A B
UserSgq@@B I
.@@I J
ToList@@J P
(@@P Q
)@@Q R
;@@R S
filterContextAA !
.AA! "

ControllerAA" ,
.AA, -
ViewBagAA- 4
.AA4 5
Level01AA5 <
=AA= >
MapperAA? E
.AAE F
MapAAF I
<AAI J
ListAAJ N
<AAN O
ParLevel1DTOAAO [
>AA[ \
>AA\ ]
(AA] ^
dbAA^ `
.AA` a
	ParLevel1AAa j
.AAj k
ToListAAk q
(AAq r
)AAr s
)AAs t
;AAt u
filterContextBB !
.BB! "

ControllerBB" ,
.BB, -
ViewBagBB- 4
.BB4 5
Level02BB5 <
=BB= >
MapperBB? E
.BBE F
MapBBF I
<BBI J
ListBBJ N
<BBN O
ParLevel2DTOBBO [
>BB[ \
>BB\ ]
(BB] ^
dbBB^ `
.BB` a
	ParLevel2BBa j
.BBj k
ToListBBk q
(BBq r
)BBr s
)BBs t
;BBt u
filterContextCC !
.CC! "

ControllerCC" ,
.CC, -
ViewBagCC- 4
.CC4 5
Level03CC5 <
=CC= >
MapperCC? E
.CCE F
MapCCF I
<CCI J
ListCCJ N
<CCN O
ParLevel3DTOCCO [
>CC[ \
>CC\ ]
(CC] ^
dbCC^ `
.CC` a
	ParLevel3CCa j
.CCj k
ToListCCk q
(CCq r
)CCr s
)CCs t
;CCt u
filterContextDD !
.DD! "

ControllerDD" ,
.DD, -
ViewBagDD- 4
.DD4 5
PeriodDD5 ;
=DD< =
MapperDD> D
.DDD E
MapDDE H
<DDH I
ListDDI M
<DDM N
	PeriodDTODDN W
>DDW X
>DDX Y
(DDY Z
dbDDZ \
.DD\ ]
PeriodDD] c
.DDc d
ToListDDd j
(DDj k
)DDk l
)DDl m
;DDm n
filterContextEE !
.EE! "

ControllerEE" ,
.EE, -
ViewBagEE- 4
.EE4 5
ShiftEE5 :
=EE; <
MapperEE= C
.EEC D
MapEED G
<EEG H
ListEEH L
<EEL M
ShiftDTOEEM U
>EEU V
>EEV W
(EEW X
dbEEX Z
.EEZ [
ShiftEE[ `
.EE` a
ToListEEa g
(EEg h
)EEh i
)EEi j
;EEj k
ifGG 
(GG 
!GG #
filtraUnidadePorUsuarioGG 0
)GG0 1
{HH 
varII 
unidadesII $
=II% &
dbII' )
.II) *

ParCompanyII* 4
.II4 5
ToListII5 ;
(II; <
)II< =
;II= >
ifKK 
(KK 
unidadesKK $
==KK% '
nullKK( ,
||KK- /
unidadesKK0 8
.KK8 9
CountKK9 >
(KK> ?
)KK? @
>KKA B
$numKKC D
)KKD E
unidadesLL $
=LL% &
dbLL' )
.LL) *

ParCompanyLL* 4
.LL4 5
WhereLL5 :
(LL: ;
rLL; <
=>LL= ?
rLL@ A
.LLA B
IdLLB D
==LLE G

userLogadoLLH R
.LLR S
ParCompany_IdLLS `
)LL` a
.LLa b
ToListLLb h
(LLh i
)LLi j
;LLj k
filterContextNN %
.NN% &

ControllerNN& 0
.NN0 1
ViewBagNN1 8
.NN8 9
UnidadeUsuarioNN9 G
=NNH I
MapperNNJ P
.NNP Q
MapNNQ T
<NNT U
IEnumerableNNU `
<NN` a
ParCompanyDTONNa n
>NNn o
>NNo p
(NNp q
unidadesNNq y
)NNy z
;NNz {
}OO 
elsePP 
ifPP 
(PP #
filtraUnidadePorUsuarioPP 4
)PP4 5
{QQ 
ifRR 
(RR 
userIdRR "
>RR# $
$numRR% &
)RR& '
ifSS 
(SS  
!SS  !
stringSS! '
.SS' (
IsNullOrEmptySS( 5
(SS5 6
cookieSS6 <
.SS< =
ValuesSS= C
[SSC D
$strSSD R
]SSR S
)SSS T
)SST U
{TT 
rolesCompanyUU  ,
=UU- .
cookieUU/ 5
.UU5 6
ValuesUU6 <
[UU< =
$strUU= K
]UUK L
.UUL M
ToStringUUM U
(UUU V
)UUV W
;UUW X
varYY  #
_companyXUserSgqYY$ 4
=YY5 6
dbYY7 9
.YY9 :
ParCompanyXUserSgqYY: L
.YYL M
WhereYYM R
(YYR S
rYYS T
=>YYU W
rYYX Y
.YYY Z

UserSgq_IdYYZ d
==YYe g
userIdYYh n
)YYn o
.YYo p
SelectYYp v
(YYv w
rYYw x
=>YYy {
rYY| }
.YY} ~

ParCompany	YY~ à
)
YYà â
.
YYâ ä
ToList
YYä ê
(
YYê ë
)
YYë í
.
YYí ì
OrderBy
YYì ö
(
YYö õ
r
YYõ ú
=>
YYù ü
r
YY† °
.
YY° ¢
Name
YY¢ ¶
)
YY¶ ß
.
YYß ®
GroupBy
YY® Ø
(
YYØ ∞
r
YY∞ ±
=>
YY≤ ¥
r
YYµ ∂
.
YY∂ ∑
Id
YY∑ π
)
YYπ ∫
.
YY∫ ª
Select
YYª ¡
(
YY¡ ¬
group
YY¬ «
=>
YY»  
group
YYÀ –
.
YY– —
First
YY— ÷
(
YY÷ ◊
)
YY◊ ÿ
)
YYÿ Ÿ
.
YYŸ ⁄
ToList
YY⁄ ‡
(
YY‡ ·
)
YY· ‚
;
YY‚ „
filterContext[[  -
.[[- .

Controller[[. 8
.[[8 9
ViewBag[[9 @
.[[@ A
UnidadeUsuario[[A O
=[[P Q
Mapper[[R X
.[[X Y
Map[[Y \
<[[\ ]
IEnumerable[[] h
<[[h i
ParCompanyDTO[[i v
>[[v w
>[[w x
([[x y
_companyXUserSgq	[[y â
)
[[â ä
;
[[ä ã
}^^ 
else__  
{`` 
varaa  #
unidadesaa$ ,
=aa- .
dbaa/ 1
.aa1 2

ParCompanyaa2 <
.aa< =
ToListaa= C
(aaC D
)aaD E
;aaE F
ifcc  "
(cc# $
unidadescc$ ,
==cc- /
nullcc0 4
||cc5 7
unidadescc8 @
.cc@ A
CountccA F
(ccF G
)ccG H
>ccI J
$numccK L
)ccL M
unidadesdd$ ,
=dd- .
dbdd/ 1
.dd1 2

ParCompanydd2 <
.dd< =
Wheredd= B
(ddB C
rddC D
=>ddE G
rddH I
.ddI J
IdddJ L
==ddM O

userLogadoddP Z
.ddZ [
ParCompany_Iddd[ h
)ddh i
.ddi j
ToListddj p
(ddp q
)ddq r
;ddr s
filterContextff  -
.ff- .

Controllerff. 8
.ff8 9
ViewBagff9 @
.ff@ A
UnidadeUsuarioffA O
=ffP Q
MapperffR X
.ffX Y
MapffY \
<ff\ ]
IEnumerableff] h
<ffh i
ParCompanyDTOffi v
>ffv w
>ffw x
(ffx y
unidades	ffy Å
)
ffÅ Ç
;
ffÇ É
}gg 
}hh 
ifjj 
(jj "
filtraUnidadeDoUsuariojj .
)jj. /
{kk 
ifll 
(ll 
filterContextll )
.ll) *

Controllerll* 4
.ll4 5
ViewBagll5 <
.ll< =
UnidadeUsuarioll= K
!=llL N
nullllO S
)llS T
filterContextmm )
.mm) *

Controllermm* 4
.mm4 5
ViewBagmm5 <
.mm< =
UnidadeUsuariomm= K
=mmL M
MappermmN T
.mmT U
MapmmU X
<mmX Y
IEnumerablemmY d
<mmd e
ParCompanyDTOmme r
>mmr s
>mms t
(mmt u
dbmmu w
.mmw x

ParCompany	mmx Ç
.
mmÇ É
Where
mmÉ à
(
mmà â
r
mmâ ä
=>
mmã ç
r
mmé è
.
mmè ê
Id
mmê í
==
mmì ï

userLogado
mmñ †
.
mm† °
ParCompany_Id
mm° Æ
)
mmÆ Ø
)
mmØ ∞
;
mm∞ ±
}nn 
}oo 
}rr 
basess 
.ss 
OnActionExecutingss "
(ss" #
filterContextss# 0
)ss0 1
;ss1 2
}tt 	
} 
}ÄÄ Ø
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\RoleAuthorizeAttribute.cs
	namespace 	
	SgqSystem
 
. 
Secirity 
{ 
public 

class "
RoleAuthorizeAttribute '
{		 
}

 
} –
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\RolesPorUnidade.cs
	namespace 	
	SgqSystem
 
. 
Secirity 
{ 
public		 

class		 
RolesPorUnidade		  
:		! "
AuthorizeAttribute		# 5
{

 
} 
} °
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Secirity\SessionPersister.cs
	namespace 	
	SgqSystem
 
. 
Secirity 
{ 
public 

static 
class 
SessionPersister (
{ 
static 
string 
userNameSessionVar (
=) *
$str+ 5
;5 6
public

 
static

 
string

 
Username

 %
{ 	
get 
{ 
if 
( 
HttpContext 
.  
Current  '
==( *
null+ /
)/ 0
return 
string !
.! "
Empty" '
;' (
var 
sessionaVar 
=  !
HttpContext" -
.- .
Current. 5
.5 6
Session6 =
[= >
userNameSessionVar> P
]P Q
;Q R
if 
( 
sessionaVar 
!=  "
null# '
)' (
return 
sessionaVar &
as' )
string* 0
;0 1
return 
null 
; 
} 
set 
{ 
} 
} 	
public 
static 
void 
LogOut !
(! "
)" #
{   	
HttpContext!! 
.!! 
Current!! 
.!!  
Session!!  '
[!!' (
userNameSessionVar!!( :
]!!: ;
=!!< =
null!!> B
;!!B C
}"" 	
}## 
}%% ™ª
GC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\Html.cs
	namespace 	
	SgqSystem
 
. 
Services 
{ 
public 

class 
Html 
{ 
public 
enum 
h 
{ 	
h1 
= 
$num 
, 
h2 
= 
$num 
, 
h3 
= 
$num 
, 
h4 
= 
$num 
, 
h5 
= 
$num 
, 
h6 
= 
$num 
} 	
public 
enum 
type 
{   	
text!! 
,!! 
password"" 
,"" 
submit## 
}$$ 	
public&& 
enum&& 
bootstrapcolor&& "
{'' 	
_default(( 
,(( 
primary)) 
,)) 
success** 
,** 
info++ 
,++ 
warning,, 
,,, 
danger-- 
}.. 	
public:: 
string:: 
div:: 
(:: 
string::  
id::! #
=::$ %
null::& *
,::* +
string::, 2
classe::3 9
=::: ;
null::< @
,::@ A
string::B H
name::I M
=::N O
null::P T
,::T U
string::V \
	outerhtml::] f
=::g h
null::i m
,::m n
string::o u
style::v {
=::| }
null	::~ Ç
,
::Ç É
string
::Ñ ä
tags
::ã è
=
::ê ë
null
::í ñ
,
::ñ ó
string
::ò û
outerAngular
::ü ´
=
::¨ ≠
null
::Æ ≤
)
::≤ ≥
{;; 	
if== 
(== 
!== 
string== 
.== 
IsNullOrEmpty== %
(==% &
tags==& *
)==* +
)==+ ,
{>> 
tags?? 
=?? 
$str?? 
+?? 
tags?? !
;??! "
}@@ 
ifAA 
(AA 
!AA 
stringAA 
.AA 
IsNullOrEmptyAA %
(AA% &
outerAngularAA& 2
)AA2 3
)AA3 4
	outerhtmlBB 
+=BB 
outerAngularBB )
;BB) *
returnDD 
$strDD 
+DD  !
idDD" $
+DD% &
$strDD' 4
+DD5 6
classeDD7 =
+DD> ?
$strDD@ L
+DDM N
nameDDO S
+DDT U
$strDDV c
+DDd e
styleDDf k
+DDl m
$strDDn r
+DDs t
tagsDDu y
+DDz {
$strDD| 
+
DDÄ Å
	outerhtml
DDÇ ã
+
DDå ç
$str
DDé ñ
;
DDñ ó
}EE 	
publicOO 
stringOO 
spanOO 
(OO 
stringOO !
idOO" $
=OO% &
nullOO' +
,OO+ ,
stringOO- 3
classeOO4 :
=OO; <
nullOO= A
,OOA B
stringOOC I
nameOOJ N
=OOO P
nullOOQ U
,OOU V
stringOOW ]
	outerhtmlOO^ g
=OOh i
nullOOj n
,OOn o
stringOOp v
styleOOw |
=OO} ~
null	OO É
,
OOÉ Ñ
string
OOÖ ã
attr
OOå ê
=
OOë í
null
OOì ó
)
OOó ò
{PP 	
returnQQ 
$strQQ  
+QQ! "
idQQ# %
+QQ& '
$strQQ( 5
+QQ6 7
classeQQ8 >
+QQ? @
$strQQA M
+QQN O
nameQQP T
+QQU V
$strQQW d
+QQe f
styleQQg l
+QQm n
$strQQo t
+QQt u
attrQQv z
+QQ{ |
$str	QQ} Ä
+
QQÅ Ç
	outerhtml
QQÉ å
+
QQç é
$str
QQè ò
;
QQò ô
}RR 	
publicWW 
stringWW 
brWW 
(WW 
)WW 
{XX 	
returnYY 
$strYY 
;YY 
}ZZ 	
publicdd 
stringdd 
formdd 
(dd 
stringdd !
iddd" $
=dd% &
nulldd' +
,dd+ ,
stringdd- 3
classedd4 :
=dd; <
nulldd= A
,ddA B
stringddC I
nameddJ N
=ddO P
nullddQ U
,ddU V
stringddW ]
	outerhtmldd^ g
=ddh i
nullddj n
,ddn o
stringddp v
styleddw |
=dd} ~
null	dd É
)
ddÉ Ñ
{ee 	
returnff 
$strff !
+ff" #
idff$ &
+ff' (
$strff) 6
+ff7 8
classeff9 ?
+ff@ A
$strffB N
+ffO P
nameffQ U
+ffV W
$strffX e
+fff g
styleffh m
+ffn o
$strffp u
+ffv w
	outerhtml	ffx Å
+
ffÇ É
$str
ffÑ ç
;
ffç é
}gg 	
publicrr 
stringrr 
headrr 
(rr 
hrr 

headnumberrr '
,rr' (
stringrr) /
idrr0 2
=rr3 4
nullrr5 9
,rr9 :
stringrr; A
classerrB H
=rrI J
nullrrK O
,rrO P
stringrrQ W
namerrX \
=rr] ^
nullrr_ c
,rrc d
stringrre k
	outerhtmlrrl u
=rrv w
nullrrx |
,rr| }
string	rr~ Ñ
style
rrÖ ä
=
rrã å
null
rrç ë
)
rrë í
{ss 	
returntt 
$strtt 
+tt 
(tt 
inttt 
)tt 

headnumbertt )
+tt* +
$strtt, 5
+tt6 7
idtt8 :
+tt; <
$strtt= J
+ttK L
classettM S
+ttT U
$strttV b
+ttc d
namette i
+ttj k
$strttl y
+ttz {
style	tt| Å
+
ttÇ É
$str
ttÑ â
+
ttä ã
	outerhtml
ttå ï
+
ttñ ó
$str
ttò ù
+
ttû ü
(
tt† °
int
tt° §
)
tt§ •

headnumber
tt• Ø
+
tt∞ ±
$str
tt≤ µ
;
ttµ ∂
}uu 	
public~~ 
string~~ 
label~~ 
(~~ 
string~~ "
labelfor~~# +
=~~, -
null~~. 2
,~~2 3
string~~4 :
classe~~; A
=~~B C
null~~D H
,~~H I
string~~J P
style~~Q V
=~~W X
null~~Y ]
,~~] ^
string~~_ e
	outerhtml~~f o
=~~p q
null~~r v
)~~v w
{ 	
return
ÄÄ 
$str
ÄÄ "
+
ÄÄ# $
labelfor
ÄÄ% -
+
ÄÄ. /
$str
ÄÄ0 =
+
ÄÄ> ?
classe
ÄÄ@ F
+
ÄÄG H
$str
ÄÄI V
+
ÄÄW X
style
ÄÄY ^
+
ÄÄ_ `
$str
ÄÄa f
+
ÄÄg h
	outerhtml
ÄÄi r
+
ÄÄs t
$str
ÄÄu 
;ÄÄ Ä
}
ÅÅ 	
public
åå 
string
åå 
input
åå 
(
åå 
type
åå  
type
åå! %
=
åå& '
type
åå( ,
.
åå, -
text
åå- 1
,
åå1 2
string
åå3 9
id
åå: <
=
åå= >
null
åå? C
,
ååC D
string
ååE K
classe
ååL R
=
ååS T
null
ååU Y
,
ååY Z
string
åå[ a
placeholder
ååb m
=
åån o
null
ååp t
,
ååt u
bool
ååv z
requiredåå{ É
=ååÑ Ö
falseååÜ ã
,ååã å
boolååç ë
disabledååí ö
=ååõ ú
falseååù ¢
)åå¢ £
{
çç 	
string
éé 
requiredTag
éé 
=
éé  
null
éé! %
;
éé% &
if
èè 
(
èè 
required
èè 
==
èè 
true
èè  
)
èè  !
{
êê 
requiredTag
ëë 
=
ëë 
$str
ëë )
;
ëë) *
}
íí 
string
ìì 
disabledTag
ìì 
=
ìì  
null
ìì! %
;
ìì% &
if
îî 
(
îî 
disabled
îî 
==
îî 
true
îî  
)
îî  !
{
ïï 
disabledTag
ññ 
=
ññ 
$str
ññ )
;
ññ) *
}
óó 
classe
ôô 
+=
ôô 
$str
ôô %
;
ôô% &
return
öö 
$str
öö #
+
öö$ %
type
öö& *
.
öö* +
ToString
öö+ 3
(
öö3 4
)
öö4 5
+
öö6 7
$str
öö8 B
+
ööC D
id
ööE G
+
ööH I
$str
ööJ W
+
ööX Y
classe
ööZ `
+
ööa b
$str
ööc v
+
ööw x
placeholderööy Ñ
+ööÖ Ü
$strööá ã
+ööå ç
requiredTagööé ô
+ööö õ
disabledTagööú ß
+öö® ©
$ströö™ ≠
;öö≠ Æ
}
õõ 	
public
¶¶ 
string
¶¶ 
button
¶¶ 
(
¶¶ 
string
¶¶ #
label
¶¶$ )
,
¶¶) *
type
¶¶+ /
type
¶¶0 4
=
¶¶5 6
type
¶¶7 ;
.
¶¶; <
submit
¶¶< B
,
¶¶B C
string
¶¶D J
id
¶¶K M
=
¶¶N O
null
¶¶P T
,
¶¶T U
string
¶¶V \
classe
¶¶] c
=
¶¶d e
null
¶¶f j
,
¶¶j k
string
¶¶l r
dataloading
¶¶s ~
=¶¶ Ä
null¶¶Å Ö
,¶¶Ö Ü
bool¶¶á ã
disabled¶¶å î
=¶¶ï ñ
false¶¶ó ú
,¶¶ú ù
string¶¶û §
style¶¶• ™
=¶¶´ ¨
null¶¶≠ ±
)¶¶± ≤
{
ßß 	
if
®® 
(
®® 
!
®® 
string
®® 
.
®® 
IsNullOrEmpty
®® %
(
®®% &
dataloading
®®& 1
)
®®1 2
)
®®2 3
{
©© 
dataloading
™™ 
=
™™ 
$str
™™ 5
+
™™6 7
dataloading
™™8 C
+
™™D E
$str
™™F J
;
™™J K
}
´´ 
classe
≠≠ 
+=
≠≠ 
$str
≠≠ 
;
≠≠ 
string
∞∞ 
disabledTag
∞∞ 
=
∞∞  
null
∞∞! %
;
∞∞% &
if
±± 
(
±± 
disabled
±± 
==
±± 
true
±±  
)
±±  !
{
≤≤ 
disabledTag
≥≥ 
=
≥≥ 
$str
≥≥ )
;
≥≥) *
}
¥¥ 
return
∂∂ 
$str
∂∂ $
+
∂∂% &
type
∂∂' +
.
∂∂+ ,
ToString
∂∂, 4
(
∂∂4 5
)
∂∂5 6
+
∂∂7 8
$str
∂∂9 C
+
∂∂D E
id
∂∂F H
+
∂∂I J
$str
∂∂K X
+
∂∂Y Z
classe
∂∂[ a
.
∂∂a b
Trim
∂∂b f
(
∂∂f g
)
∂∂g h
+
∂∂i j
$str
∂∂k p
+
∂∂q r
dataloading
∂∂s ~
+∂∂ Ä
disabledTag∂∂Å å
+∂∂ç é
$str∂∂è ö
+∂∂ö õ
style∂∂ú °
+∂∂¢ £
$str∂∂§ ©
+∂∂™ ´
label∂∂¨ ±
+∂∂≤ ≥
$str∂∂¥ ø
;∂∂ø ¿
}
∑∑ 	
public
¿¿ 
string
¿¿ 
select
¿¿ 
(
¿¿ 
string
¿¿ #
options
¿¿$ +
,
¿¿+ ,
string
¿¿- 3
id
¿¿4 6
=
¿¿7 8
null
¿¿9 =
,
¿¿= >
string
¿¿? E
classe
¿¿F L
=
¿¿M N
null
¿¿O S
,
¿¿S T
bool
¿¿U Y
disabled
¿¿Z b
=
¿¿c d
false
¿¿e j
,
¿¿j k
string
¿¿l r
style
¿¿s x
=
¿¿y z
null
¿¿{ 
)¿¿ Ä
{
¡¡ 	
string
¬¬ 
disabledTag
¬¬ 
=
¬¬  
null
¬¬! %
;
¬¬% &
if
√√ 
(
√√ 
disabled
√√ 
==
√√ 
true
√√  
)
√√  !
{
ƒƒ 
disabledTag
≈≈ 
=
≈≈ 
$str
≈≈ )
;
≈≈) *
}
∆∆ 
classe
»» 
+=
»» 
$str
»» %
;
»»% &
return
   
$str
   "
+
  # $
id
  % '
+
  ( )
$str
  * 7
+
  8 9
classe
  : @
.
  @ A
Trim
  A E
(
  E F
)
  F G
+
  H I
$str
  J N
+
  O P
disabledTag
  Q \
+
  ] ^
$str
  _ j
+
  k l
style
  m r
+
  s t
$str
  u z
+
  { |
options  } Ñ
+  Ö Ü
$str  á í
;  í ì
}
ÀÀ 	
public
”” 
string
”” 
option
”” 
(
”” 
string
”” #
value
””$ )
,
””) *
string
””+ 1
label
””2 7
,
””7 8
string
””9 ?
tags
””@ D
=
””E F
null
””G K
)
””K L
{
‘‘ 	
if
’’ 
(
’’ 
!
’’ 
string
’’ 
.
’’ 
IsNullOrEmpty
’’ %
(
’’% &
tags
’’& *
)
’’* +
)
’’+ ,
{
÷÷ 
tags
◊◊ 
=
◊◊ 
$str
◊◊ 
+
◊◊ 
tags
◊◊ !
;
◊◊! "
}
ÿÿ 
return
ŸŸ 
$str
ŸŸ %
+
ŸŸ& '
value
ŸŸ( -
+
ŸŸ. /
$str
ŸŸ0 4
+
ŸŸ5 6
tags
ŸŸ7 ;
+
ŸŸ< =
$str
ŸŸ> A
+
ŸŸB C
label
ŸŸD I
+
ŸŸJ K
$str
ŸŸL W
;
ŸŸW X
}
⁄⁄ 	
public
€€ 
string
€€ 
	listgroup
€€ 
(
€€  
string
€€  &
id
€€' )
=
€€* +
null
€€, 0
,
€€0 1
string
€€2 8
classe
€€9 ?
=
€€@ A
null
€€B F
,
€€F G
string
€€H N
	outerhtml
€€O X
=
€€Y Z
null
€€[ _
,
€€_ `
string
€€a g
tags
€€h l
=
€€m n
null
€€o s
)
€€s t
{
‹‹ 	
classe
›› 
+=
›› 
$str
›› #
;
››# $
if
ﬂﬂ 
(
ﬂﬂ 
!
ﬂﬂ 
string
ﬂﬂ 
.
ﬂﬂ 
IsNullOrEmpty
ﬂﬂ %
(
ﬂﬂ% &
tags
ﬂﬂ& *
)
ﬂﬂ* +
)
ﬂﬂ+ ,
{
‡‡ 
tags
·· 
=
·· 
$str
·· 
+
·· 
tags
·· !
;
··! "
}
‚‚ 
return
‰‰ 
$str
‰‰ 
+
‰‰  
id
‰‰! #
+
‰‰$ %
$str
‰‰& 3
+
‰‰4 5
classe
‰‰6 <
.
‰‰< =
Trim
‰‰= A
(
‰‰A B
)
‰‰B C
+
‰‰D E
$str
‰‰F J
+
‰‰K L
tags
‰‰M Q
+
‰‰R S
$str
‰‰T W
+
‰‰X Y
	outerhtml
ÂÂ 
+
ÂÂ 
$str
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
ËË 
string
ËË 
listgroupItem
ËË #
(
ËË# $
string
ËË$ *
id
ËË+ -
=
ËË. /
null
ËË0 4
,
ËË4 5
string
ËË6 <
classe
ËË= C
=
ËËD E
null
ËËF J
,
ËËJ K
string
ËËL R
tags
ËËS W
=
ËËX Y
null
ËËZ ^
,
ËË^ _
string
ËË` f
	outerhtml
ËËg p
=
ËËq r
null
ËËs w
,
ËËx y
stringËËz Ä
totalDefeitosËËÅ é
=ËËè ê
nullËËë ï
)ËËï ñ
{
ÈÈ 	
classe
ÍÍ 
+=
ÍÍ 
$str
ÍÍ (
;
ÍÍ( )
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
string
ÏÏ 
.
ÏÏ 
IsNullOrEmpty
ÏÏ %
(
ÏÏ% &
tags
ÏÏ& *
)
ÏÏ* +
)
ÏÏ+ ,
{
ÌÌ 
tags
ÓÓ 
=
ÓÓ 
$str
ÓÓ 
+
ÓÓ 
tags
ÓÓ !
;
ÓÓ! "
tags
ÔÔ 
=
ÔÔ 
tags
ÔÔ 
.
ÔÔ 
Trim
ÔÔ  
(
ÔÔ  !
)
ÔÔ! "
;
ÔÔ" #
}
 
return
ÚÚ 
$str
ÚÚ 
+
ÚÚ  
id
ÚÚ! #
+
ÚÚ$ %
$str
ÚÚ& 3
+
ÚÚ4 5
classe
ÚÚ6 <
.
ÚÚ< =
Trim
ÚÚ= A
(
ÚÚA B
)
ÚÚB C
+
ÚÚD E
$str
ÚÚF J
+
ÚÚK L
tags
ÚÚM Q
+
ÚÚR S
$str
ÚÚT f
+
ÚÚf g
totalDefeitos
ÚÚh u
+
ÚÚv w
$str
ÚÚx |
+
ÚÚ} ~
	outerhtmlÚÚ à
+ÚÚâ ä
$strÚÚã í
;ÚÚí ì
}
ÛÛ 	
public
ıı 
string
ıı 
	accordeon
ıı 
(
ıı  
string
ıı  &
id
ıı' )
,
ıı) *
string
ıı+ 1
label
ıı2 7
,
ıı7 8
string
ıı9 ?
classe
ıı@ F
=
ııG H
null
ııI M
,
ııM N
string
ııO U
	outerhtml
ııV _
=
ıı` a
null
ııb f
,
ııf g
bool
ııh l
aberto
ıım s
=
ııt u
false
ııv {
,
ıı{ |
bootstrapcolorıı} ã
?ııã å
colorııç í
=ııì î
nullııï ô
,ııô ö
intııõ û
accordeonIdııü ™
=ıı´ ¨
$numıı≠ Æ
,ııÆ Ø
stringıı∞ ∂

othersTagsıı∑ ¡
=ıı¬ √
nullııƒ »
)ıı» …
{
ˆˆ 	
string
˜˜ 

collapseIn
˜˜ 
=
˜˜ 
$str
˜˜  %
;
˜˜% &
if
¯¯ 
(
¯¯ 
aberto
¯¯ 
==
¯¯ 
false
¯¯ 
)
¯¯  
{
˘˘ 

collapseIn
˙˙ 
=
˙˙ 
null
˙˙ !
;
˙˙! "
}
˚˚ 
string
˝˝ 

colorPanel
˝˝ 
=
˝˝ 
$str
˝˝  )
;
˝˝) *
if
˛˛ 
(
˛˛ 
color
˛˛ 
!=
˛˛ 
null
˛˛ 
)
˛˛ 
{
ˇˇ 

colorPanel
ÄÄ 
=
ÄÄ 
color
ÄÄ "
.
ÄÄ" #
ToString
ÄÄ# +
(
ÄÄ+ ,
)
ÄÄ, -
;
ÄÄ- .
}
ÅÅ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
string
ÉÉ 
.
ÉÉ 
IsNullOrEmpty
ÉÉ %
(
ÉÉ% &
classe
ÉÉ& ,
)
ÉÉ, -
)
ÉÉ- .
{
ÑÑ 
classe
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
+
ÖÖ 
classe
ÖÖ %
;
ÖÖ% &
}
ÜÜ 
string
àà 
accordeonIdTag
àà !
=
àà" #
null
àà$ (
;
àà( )
if
ââ 
(
ââ 
accordeonId
ââ 
>
ââ 
$num
ââ 
)
ââ  
{
ää 
accordeonIdTag
ãã 
=
ãã  
$str
ãã! )
+
ãã* +
accordeonId
ãã, 7
+
ãã8 9
$str
ãã: >
;
ãã> ?
}
åå 
return
éé 
$str
éé /
+
éé0 1
classe
éé2 8
+
éé9 :
$str
éé; ?
+
éé@ A
accordeonIdTag
ééB P
+
ééQ R
$str
ééS V
+
ééW X

othersTags
ééY c
+
ééd e
$strééf ”
+éé‘ ’
$str
èè 3
+
èè4 5

colorPanel
èè6 @
+
èèA B
$strèèC ¢
+èè£ §
$str
êê R
+
êêS T
id
êêU W
+
êêX Y
$strêêZ √
+êêƒ ≈
$strëë ù
+ëëû ü
$str
íí \
+
íí] ^
id
íí_ a
+
ííb c
$strííd £
+íí§ •
idíí¶ ®
+íí© ™
$stríí´ ∞
+íí± ≤
labelíí≥ ∏
+ííπ ∫
$strííª —
+íí“ ”
$strìì ù
+ììû ü
$strîî ù
+îîû ü
$str
ïï 1
+
ïï2 3
id
ïï4 6
+
ïï7 8
$str
ïï9 ]
+
ïï^ _

collapseIn
ïï` j
+
ïïk l
$strïïm ù
+ïïû ü
idïï† ¢
+ïï£ §
$strïï• ø
+ïï¿ ¡
$strññ ù
+ññû ü
	outerhtml
óó &
+
óó' (
$stròò ù
+òòû ü
$strôô ù
+ôôû ü
$ströö ù
+ööû ü
$strõõ ù
;õõù û
}
ùù 	
public
üü 
string
üü 
link
üü 
(
üü 
string
üü !
id
üü" $
=
üü% &
null
üü' +
,
üü+ ,
string
üü- 3
classe
üü4 :
=
üü; <
null
üü= A
,
üüA B
string
üüC I
href
üüJ N
=
üüO P
null
üüQ U
,
üüU V
string
üüW ]
tags
üü^ b
=
üüc d
null
üüe i
,
üüi j
string
üük q
	outerhtml
üür {
=
üü| }
nullüü~ Ç
)üüÇ É
{
†† 	
if
°° 
(
°° 
string
°° 
.
°° 
IsNullOrEmpty
°° $
(
°°$ %
href
°°% )
)
°°) *
)
°°* +
{
¢¢ 
href
££ 
=
££ 
$str
££ 
;
££ 
}
§§ 
if
•• 
(
•• 
!
•• 
string
•• 
.
•• 
IsNullOrEmpty
•• %
(
••% &
tags
••& *
)
••* +
)
••+ ,
{
¶¶ 
tags
ßß 
=
ßß 
$str
ßß 
+
ßß 
tags
ßß !
;
ßß! "
}
®® 
if
©© 
(
©© 
href
©© 
!=
©© 
null
©© 
&&
©© 
href
©© #
!=
©©$ &
$str
©©' *
)
©©* +
{
™™ 
href
´´ 
=
´´ 
$str
´´ !
+
´´" #
href
´´$ (
+
´´) *
$str
´´+ /
;
´´/ 0
}
¨¨ 
else
¨¨ 
{
≠≠ 
href
ÆÆ 
=
ÆÆ 
$str
ÆÆ 
;
ÆÆ 
}
ØØ 
return
∞∞ 
$str
∞∞ 
+
∞∞ 
id
∞∞  "
+
∞∞# $
$str
∞∞% *
+
∞∞+ ,
href
∞∞- 1
+
∞∞2 3
$str
∞∞4 ?
+
∞∞@ A
classe
∞∞B H
+
∞∞I J
$str
∞∞K O
+
∞∞P Q
tags
∞∞R V
+
∞∞W X
$str
∞∞Y v
+
∞∞w x
	outerhtml∞∞y Ç
+∞∞É Ñ
$str∞∞Ö ã
;∞∞ã å
}
±± 	
public
≥≥ 
string
≥≥ 
campoBinario
≥≥ "
(
≥≥" #
string
≥≥# )
id
≥≥* ,
,
≥≥, -
string
≥≥. 4
booltrueName
≥≥5 A
,
≥≥A B
string
≥≥C I
boolfalseName
≥≥J W
,
≥≥W X
string
≥≥Y _
classe
≥≥` f
=
≥≥g h
null
≥≥i m
)
≥≥m n
{
¥¥ 	
string
ΩΩ 
binario
ΩΩ 
=
ΩΩ 
$str
ΩΩ l
+
ΩΩm n
booltrueName
ΩΩo {
+
ΩΩ| }
$strΩΩ~ ì
+ΩΩî ï
boolfalseNameΩΩñ £
+ΩΩ§ •
$strΩΩ¶ ´
+ΩΩ¨ ≠
booltrueNameΩΩÆ ∫
+ΩΩª º
$strΩΩΩ ∆
;ΩΩ∆ «
return
øø 
binario
øø 
;
øø 
}
¿¿ 	
public
¡¡ 
string
¡¡ 
campoIntervalo
¡¡ $
(
¡¡$ %
string
¡¡% +
id
¡¡, .
,
¡¡. /
decimal
¡¡0 7
intervalMin
¡¡8 C
,
¡¡C D
decimal
¡¡E L
intervalMax
¡¡M X
,
¡¡X Y
decimal
¡¡Z a
defaultValue
¡¡b n
=
¡¡o p
$num
¡¡q r
,
¡¡r s
string
¡¡t z
unitName¡¡{ É
=¡¡Ñ Ö
null¡¡Ü ä
,¡¡ä ã
string¡¡å í
classe¡¡ì ô
=¡¡ö õ
null¡¡ú †
)¡¡† °
{
√√ 	
if
»» 
(
»» 
!
»» 
string
»» 
.
»» 
IsNullOrEmpty
»» %
(
»»% &
classe
»»& ,
)
»», -
)
»»- .
{
…… 
classe
   
=
   
$str
   
+
   
classe
   %
;
  % &
}
ÀÀ 
string
ÕÕ 
	intervalo
ÕÕ 
=
ÕÕ 
$str
ÕÕ \
+
ÕÕ] ^
classe
ÕÕ_ e
+
ÕÕf g
$strÕÕh Ò
+ÕÕÚ Û
$strŒŒ! œ
+ŒŒ– —
$strœœ! Í
+œœÎ Ï
$str––! œ
+––– —
$str——! ú
+——ù û
$str““! Í
+““Î Ï
$str””! œ
+””– —
$str‘‘! œ
+‘‘– —
$str’’! œ
+’’– —
$str
÷÷! ,
;
÷÷, -
return
›› 
	intervalo
›› 
;
›› 
}
ﬁﬁ 	
public
‡‡ 
string
‡‡ 

campoTexto
‡‡  
(
‡‡  !
string
‡‡! '
id
‡‡( *
,
‡‡* +
string
‡‡, 2
classe
‡‡3 9
=
‡‡: ;
null
‡‡< @
)
‡‡@ A
{
·· 	
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
string
ÊÊ 
.
ÊÊ 
IsNullOrEmpty
ÊÊ %
(
ÊÊ% &
classe
ÊÊ& ,
)
ÊÊ, -
)
ÊÊ- .
{
ÁÁ 
classe
ËË 
=
ËË 
$str
ËË 
+
ËË 
classe
ËË %
;
ËË% &
}
ÈÈ 
string
ÎÎ 
texto
ÎÎ 
=
ÎÎ 
$str
ÎÎ X
+
ÎÎY Z
classe
ÎÎ[ a
+
ÎÎb c
$strÎÎd ß
+ÎÎ® ©
$str
ÏÏ! f
+
ÏÏg h
$strÌÌ! †
+ÌÌ° ¢
$str
ÓÓ! ]
;
ÓÓ] ^
return
ÔÔ 
texto
ÔÔ 
;
ÔÔ 
}
 	
public
ÚÚ 
string
ÚÚ #
campoNumeroDeDefeitos
ÚÚ +
(
ÚÚ+ ,
string
ÚÚ, 2
id
ÚÚ3 5
,
ÚÚ5 6
decimal
ÚÚ7 >
intervalMin
ÚÚ? J
,
ÚÚJ K
decimal
ÚÚL S
intervalMax
ÚÚT _
,
ÚÚ_ `
decimal
ÚÚa h
defaultValue
ÚÚi u
=
ÚÚv w
$num
ÚÚx y
,
ÚÚy z
stringÚÚ{ Å
unitNameÚÚÇ ä
=ÚÚã å
nullÚÚç ë
,ÚÚë í
stringÚÚì ô
classeÚÚö †
=ÚÚ° ¢
nullÚÚ£ ß
)ÚÚß ®
{
ÛÛ 	
if
¯¯ 
(
¯¯ 
!
¯¯ 
string
¯¯ 
.
¯¯ 
IsNullOrEmpty
¯¯ %
(
¯¯% &
classe
¯¯& ,
)
¯¯, -
)
¯¯- .
{
˘˘ 
classe
˙˙ 
=
˙˙ 
$str
˙˙ 
+
˙˙ 
classe
˙˙ %
;
˙˙% &
}
˚˚ 
string
˝˝ 
	intervalo
˝˝ 
=
˝˝ 
$str
˝˝ \
+
˝˝] ^
classe
˝˝_ e
+
˝˝f g
$str˝˝h Ò
+˝˝Ú Û
$str˛˛! œ
+˛˛– —
$strˇˇ! Í
+ˇˇÎ Ï
$strÄÄ! œ
+ÄÄ– —
$strÅÅ! ú
+ÅÅù û
$strÇÇ! Í
+ÇÇÎ Ï
$strÉÉ! œ
+ÉÉ– —
$strÑÑ! œ
+ÑÑ– —
$strÖÖ! œ
+ÖÖ– —
$strÜÜ! œ
;ÜÜœ –
return
áá 
	intervalo
áá 
;
áá 
}
àà 	
public
ää 
string
ää 
campoCalculado
ää $
(
ää$ %
string
ää% +
id
ää, .
,
ää. /
decimal
ää0 7
intervalMin
ää8 C
,
ääC D
decimal
ääE L
intervalMax
ääM X
,
ääX Y
decimal
ääZ a
defaultValue
ääb n
=
ääo p
$num
ääq r
,
äär s
string
äät z
unitNameää{ É
=ääÑ Ö
nullääÜ ä
,äää ã
stringääå í
classeääì ô
=ääö õ
nullääú †
)ää† °
{
ãã 	
if
êê 
(
êê 
!
êê 
string
êê 
.
êê 
IsNullOrEmpty
êê %
(
êê% &
classe
êê& ,
)
êê, -
)
êê- .
{
ëë 
classe
íí 
=
íí 
$str
íí 
+
íí 
classe
íí %
;
íí% &
}
ìì 
string
ïï 
	calculado
ïï 
=
ïï 
$str
ïï \
+
ïï] ^
classe
ïï_ e
+
ïïf g
$strïïh Ò
+ïïÚ Û
$strññ! ú
+ññù û
$str
óó! y
+
óóz {
$stròò! ú
+òòù û
$str
ôô! O
+
ôôP Q
$str
öö! `
+
ööa b
$str
õõ! f
+
õõg h
$str
úú! ,
+
úú- .
$strùù! œ
;ùùœ –
return
ûû 
	calculado
ûû 
;
ûû 
}
üü 	
public
££ 
string
££ 
level2
££ 
(
££ 
string
££ #
id
££$ &
,
££& '
string
££( .
label
££/ 4
,
££4 5
string
§§ #
classe
§§$ *
=
§§+ ,
null
§§- 1
,
§§1 2
decimal
§§3 :
defects
§§; B
=
§§C D
$num
§§E F
,
§§F G
int
§§H K
evaluate
§§L T
=
§§U V
$num
§§W X
,
§§X Y
int
§§Z ]
sample
§§^ d
=
§§e f
$num
§§g h
,
§§h i
bool
•• !
reaudit
••" )
=
••* +
false
••, 1
,
••1 2
bool
••3 7
correctiveaction
••8 H
=
••I J
false
••K P
,
••P Q
bool
••R V
phase
••W \
=
••] ^
false
••_ d
,
••d e
bool
¶¶ !
HasSampleTotal
¶¶" 0
=
¶¶1 2
false
¶¶3 8
,
¶¶8 9
bool
¶¶: >
IsEmptyLevel3
¶¶? L
=
¶¶M N
false
¶¶O T
,
¶¶T U
int
¶¶V Y
level1Group_Id
¶¶Z h
=
¶¶i j
$num
¶¶k l
,
¶¶l m
int
ßß  
RuleId
ßß! '
=
ßß( )
$num
ßß* +
,
ßß+ ,
string
ßß- 3
	RuleValue
ßß4 =
=
ßß> ?
null
ßß@ D
,
ßßD E
decimal
ßßF M

AlertValue
ßßN X
=
ßßY Z
$num
ßß[ \
,
ßß\ ]
int
ßß^ a
ParFrequency_Id
ßßb q
=
ßßr s
$num
ßßt u
)
ßßu v
{
®® 	
string
™™ 
tagLevel1Group
™™ !
=
™™" #
null
™™$ (
;
™™( )
if
´´ 
(
´´ 
level1Group_Id
´´ 
>
´´  
$num
´´! "
)
´´" #
{
¨¨ 
tagLevel1Group
≠≠ 
=
≠≠  
$str
≠≠! 9
+
≠≠: ;
level1Group_Id
≠≠< J
+
≠≠K L
$str
≠≠M Q
;
≠≠Q R
}
ÆÆ 
return
ØØ 
link
ØØ 
(
ØØ 
id
∞∞ 
:
∞∞ 
id
∞∞ !
,
∞∞! "
classe
±± !
:
±±! "
$str
±±# ,
+
±±- .
classe
±±/ 5
,
±±5 6
tags
≥≥ 
:
≥≥  
$str
≥≥! -
+
≥≥. /
defects
≥≥0 7
+
≥≥8 9
$str
¥¥ +
+
¥¥, -
evaluate
¥¥. 6
+
¥¥7 8
$str
µµ )
+
µµ* +
sample
µµ, 2
+
µµ3 4
$str
∂∂ 1
+
∂∂2 3
$str
∑∑ 1
+
∑∑2 3
$str
∏∏ C
+
∏∏D E
$str
ππ 9
+
ππ: ;
$str
∫∫ :
+
∫∫; <
$str
ªª 0
+
ªª1 2
ParFrequency_Id
ªª3 B
+
ªªC D
$str
ªªE I
+
ªªJ K
$str
ºº /
+
ºº0 1
HasSampleTotal
ºº2 @
.
ºº@ A
ToString
ººA I
(
ººI J
)
ººJ K
.
ººK L
ToLower
ººL S
(
ººS T
)
ººT U
+
ººV W
$str
ººX \
+
ºº] ^
$str
ΩΩ .
+
ΩΩ/ 0
IsEmptyLevel3
ΩΩ1 >
.
ΩΩ> ?
ToString
ΩΩ? G
(
ΩΩG H
)
ΩΩH I
.
ΩΩI J
ToLower
ΩΩJ Q
(
ΩΩQ R
)
ΩΩR S
+
ææ 
$str
ææ <
+
ææ= >
RuleId
ææ? E
.
ææE F
ToString
ææF N
(
ææN O
)
ææO P
+
øø 
$str
øø ?
+
øø@ A
	RuleValue
øøB K
+
¿¿ 
$str
¿¿ /
+
¿¿0 1

AlertValue
¿¿2 <
.
¿¿< =
ToString
¿¿= E
(
¿¿E F
)
¿¿F G
+
¡¡ 
$str
¡¡ ,
+
¡¡- .
reaudit
¡¡/ 6
.
¡¡6 7
ToString
¡¡7 ?
(
¡¡? @
)
¡¡@ A
.
¡¡A B
ToLower
¡¡B I
(
¡¡I J
)
¡¡J K
+
¬¬ 
$str
¬¬ !
+
¬¬" #
tagLevel1Group
¬¬$ 2
,
¬¬2 3
	outerhtml
√√ $
:
√√$ %
span
√√& *
(
√√* +
	outerhtml
√√+ 4
:
√√4 5
label
√√6 ;
,
√√; <
classe
√√= C
:
√√C D
$str
√√E P
)
√√P Q
)
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
∆∆ 
string
∆∆ 
level3
∆∆ 
(
∆∆ 
SGQDBContext
∆∆ )
.
∆∆) *
	ParLevel3
∆∆* 3
	parLevel3
∆∆4 =
,
∆∆= >
string
∆∆? E
input
∆∆F K
,
∆∆K L
string
∆∆M S
classe
∆∆T Z
=
∆∆[ \
null
∆∆] a
,
∆∆a b
string
∆∆c i
labelsInputs
∆∆j v
=
∆∆w x
null
∆∆y }
)
∆∆} ~
{
«« 	
string
   
btnNaoAvaliado
   !
=
  " #
button
  $ *
(
  * +
label
ÀÀ' ,
:
ÀÀ, -
span
ÀÀ. 2
(
ÀÀ2 3
classe
ÃÃ4 :
:
ÃÃ: ;
$str
ÃÃ< U
,
ÃÃU V
	outerhtml
ÕÕ4 =
:
ÕÕ= >
$str
ÕÕ? D
)
ŒŒ0 1
,
ŒŒ1 2
classe
œœ' -
:
œœ- .
$str
œœ/ V
)
––# $
;
––$ %
string
”” 
tags
”” 
=
”” 
$str
”” &
+
””' (
	parLevel3
””) 2
.
””2 3
Weight
””3 9
+
””: ;
$str
””< O
+
””P Q
	parLevel3
””R [
.
””[ \
IntervalMin
””\ g
.
””g h
ToString
””h p
(
””p q
)
””q r
.
””r s
Replace
””s z
(
””z {
$str
””{ ~
,
””~ 
$str””Ä É
)””É Ñ
+””Ö Ü
$str””á ö
+””õ ú
	parLevel3””ù ¶
.””¶ ß
IntervalMax””ß ≤
.””≤ ≥
ToString””≥ ª
(””ª º
)””º Ω
.””Ω æ
Replace””æ ≈
(””≈ ∆
$str””∆ …
,””…  
$str””À Œ
)””Œ œ
+””– —
$str””“ ˜
+””¯ ˘
	parLevel3””˙ É
.””É Ñ%
ParLevel3InputType_Id””Ñ ô
+””ö õ
$str””ú †
;””† °
string
◊◊ 
level3
◊◊ 
=
◊◊ 
link
◊◊  
(
◊◊  !
	outerhtml
ÿÿ( 1
:
ÿÿ1 2
span
ÿÿ3 7
(
ÿÿ7 8
	outerhtml
ÿÿ8 A
:
ÿÿA B
	parLevel3
ÿÿC L
.
ÿÿL M
Name
ÿÿM Q
,
ÿÿQ R
classe
ÿÿS Y
:
ÿÿY Z
$str
ÿÿ[ f
)
ÿÿf g
+
ÿÿh i
$str
ÿÿj p
+
ÿÿq r
span
ÿÿs w
(
ÿÿw x
	outerhtmlÿÿx Å
:ÿÿÅ Ç
$strÿÿÉ Ö
,ÿÿÖ Ü
classeÿÿá ç
:ÿÿç é
$strÿÿè ü
)ÿÿü †
,ÿÿ† °
classe
ŸŸ( .
:
ŸŸ. /
$str
ŸŸ0 :
)
⁄⁄( )
;
⁄⁄) *
string
›› 
labels
›› 
=
›› 
$str
›› 
;
›› 
if
ﬁﬁ 
(
ﬁﬁ 
	parLevel3
ﬁﬁ 
.
ﬁﬁ #
ParLevel3InputType_Id
ﬁﬁ /
==
ﬁﬁ0 2
$num
ﬁﬁ3 4
)
ﬁﬁ4 5
{
ﬂﬂ 
labels
‡‡ 
=
‡‡ 
div
‡‡ 
(
‡‡ 
	outerhtml
··$ -
:
··- .
labelsInputs
··/ ;
,
··; <
classe
‚‚$ *
:
‚‚* +
$str
‚‚, 6
)
„„  !
;
„„! "
}
‰‰ 
else
ÂÂ 
{
ÊÊ 
labels
ÁÁ 
=
ÁÁ 
div
ÁÁ 
(
ÁÁ 
	outerhtml
ËË$ -
:
ËË- .
labelsInputs
ËË/ ;
,
ËË; <
classe
ÈÈ$ *
:
ÈÈ* +
$str
ÈÈ, 6
)
ÍÍ  !
;
ÍÍ! "
}
ÎÎ 
string
ÓÓ 
counters
ÓÓ 
=
ÓÓ 
$str
ÓÓ  
;
ÓÓ  !
if
ÔÔ 
(
ÔÔ 
	parLevel3
ÔÔ 
.
ÔÔ #
ParLevel3InputType_Id
ÔÔ /
==
ÔÔ0 2
$num
ÔÔ3 4
)
ÔÔ4 5
{
 
counters
ÒÒ 
=
ÒÒ 
div
ÒÒ 
(
ÒÒ 
	outerhtml
ÚÚ '
:
ÚÚ' (
input
ÚÚ) .
,
ÚÚ. /
classe
ÛÛ $
:
ÛÛ$ %
$str
ÛÛ& 9
)
ÙÙ 
;
ÙÙ  
}
ıı 
else
ˆˆ 
{
˜˜ 
counters
¯¯ 
=
¯¯ 
div
¯¯ 
(
¯¯ 
	outerhtml
˘˘ (
:
˘˘( )
input
˘˘* /
,
˘˘/ 0
classe
˙˙ %
:
˙˙% &
$str
˙˙' :
)
˚˚  
;
˚˚  !
}
¸¸ 
string
ÄÄ 
buttons
ÄÄ 
=
ÄÄ 
div
ÄÄ  
(
ÄÄ  !
	outerhtml
ÅÅ( 1
:
ÅÅ1 2
btnNaoAvaliado
ÅÅ3 A
,
ÅÅA B
classe
ÇÇ( .
:
ÇÇ. /
$str
ÇÇ0 :
,
ÇÇ: ;
style
ÉÉ( -
:
ÉÉ- .
$str
ÉÉ/ A
)
ÑÑ( )
;
ÑÑ) *
return
áá 
listgroupItem
áá  
(
áá  !
id
àà$ &
:
àà& '
	parLevel3
àà( 1
.
àà1 2
Id
àà2 4
.
àà4 5
ToString
àà5 =
(
àà= >
)
àà> ?
,
àà? @
classe
ââ$ *
:
ââ* +
$str
ââ, 8
+
ââ9 :
classe
ââ; A
,
ââA B
tags
ää$ (
:
ää( )
tags
ää* .
,
ää. /
	outerhtml
ãã$ -
:
ãã- .
level3
ãã/ 5
+
ãã6 7
labels
åå0 6
+
åå7 8
counters
çç0 8
+
çç9 :
buttons
éé0 7
)
èè  !
;
èè! "
}
ëë 	
public
íí 
string
íí 
user
íí 
(
íí 
int
íí 

UserSGQ_Id
íí )
,
íí) *
string
íí+ 1
UserSGQ_Name
íí2 >
,
íí> ?
string
íí@ F
UserSGQ_Login
ííG T
,
ííT U
string
ííV \
UserSGQ_Pass
íí] i
,
ííi j
string
íík q
Role
íír v
,
íív w
int
ííx {
ParCompany_Idíí| â
,ííâ ä
stringííã ë
ParCompany_Nameííí °
,íí° ¢
IEnumerableíí£ Æ
<ííÆ Ø
RoleXUserSgqííØ ª
>ííª º
rolesííΩ ¬
)íí¬ √
{
ìì 	
string
îî 
user
îî 
=
îî 
$str
îî 9
+
îî: ;

UserSGQ_Id
îî< F
+
îîG H
$str
îîI Y
+
îîZ [
UserSGQ_Name
îî\ h
+
îîi j
$str
îîk |
+
îî} ~
UserSGQ_Loginîî å
.îîå ç
ToLowerîîç î
(îîî ï
)îîï ñ
+îîó ò
$strîîô ©
+îî™ ´
UserSGQ_Passîî¨ ∏
+îîπ ∫
$strîîª Œ
+îîœ –
Roleîî— ’
+îî÷ ◊
$strîîÿ È
+îîÍ Î
ParCompany_IdîîÏ ˘
+îî˙ ˚
$strîî¸ è
+îîê ë
ParCompany_Nameîîí °
+îî¢ £
$strîî§ ©
;îî© ™
if
ññ 
(
ññ 
roles
ññ 
!=
ññ 
null
ññ 
)
ññ 
{
óó 
foreach
òò 
(
òò 
RoleXUserSgq
òò %
role
òò& *
in
òò+ -
roles
òò. 3
)
òò3 4
{
ôô 
if
öö 
(
öö 
role
öö 
.
öö 
Type
öö !
==
öö" $
$num
öö% &
||
õõ 
(
õõ 
role
õõ  
.
õõ  !
Type
õõ! %
==
õõ& (
$num
õõ) *
&&
õõ+ -
role
õõ. 2
.
õõ2 3
RoleJBS
õõ3 :
!=
õõ; =
null
õõ> B
&&
õõC E
role
õõF J
.
õõJ K
RoleSGQ
õõK R
!=
õõS U
null
õõV Z
)
õõZ [
||
úú 
(
úú 
role
úú  
.
úú  !
Type
úú! %
==
úú& (
$num
úú) *
&&
úú+ -
role
úú. 2
.
úú2 3
RoleSGQ
úú3 :
!=
úú; =
null
úú> B
)
úúB C
||
ùù 
(
ùù 
role
ùù  
.
ùù  !
Type
ùù! %
==
ùù& (
$num
ùù) *
&&
ùù+ -
role
ùù. 2
.
ùù2 3
RoleJBS
ùù3 :
!=
ùù; =
null
ùù> B
)
ùùB C
)
ùùC D
{
ûû 
user
üü 
+=
üü 
$str
üü  4
+
üü5 6
role
üü7 ;
.
üü; <
HashKey
üü< C
+
üüD E
$str
üüF N
;
üüN O
}
†† 
}
°° 
}
¢¢ 
user
ßß 
+=
ßß 
$str
ßß 
;
ßß 
return
©© 
user
©© 
;
©© 
}
™™ 	
public
´´ 
string
´´ 
level1
´´ 
(
´´ 
SGQDBContext
´´ )
.
´´) *
	ParLevel1
´´* 3
	ParLevel1
´´4 =
,
´´= >
string
´´? E
tipoTela
´´F N
,
´´N O
int
´´P S
totalAvaliado
´´T a
,
´´a b
decimal
´´c j
totalDefeitos
´´k x
,
´´x y
decimal´´z Å
alertNivel1´´Ç ç
,´´ç é
decimal´´è ñ
alertNivel2´´ó ¢
,´´¢ £
string
¨¨ #
alertaNivel3
¨¨$ 0
,
¨¨0 1
int
¨¨2 5
alertaAtual
¨¨6 A
,
¨¨A B
int
¨¨C F#
avaliacaoultimoalerta
¨¨G \
,
¨¨\ ]
int
¨¨^ a'
monitoramentoultimoalerta
¨¨b {
,
¨¨{ |
decimal¨¨} Ñ%
volumeAlertaIndicador¨¨Ö ö
,¨¨ö õ
decimal¨¨ú £
metaIndicador¨¨§ ±
,¨¨± ≤
decimal
≠≠ $
numeroAvaliacoes
≠≠% 5
,
≠≠5 6
decimal
≠≠7 >
metaDia
≠≠? F
,
≠≠F G
decimal
≠≠H O
metaTolerancia
≠≠P ^
,
≠≠^ _
decimal
≠≠` g
metaAvaliacao
≠≠h u
,
≠≠u v
bool
ÆÆ !'
IsLimitedEvaluetionNumber
ÆÆ" ;
,
ÆÆ; <
IEnumerable
ÆÆ= H
<
ÆÆH I

ParRelapse
ÆÆI S
>
ÆÆS T
listParRelapse
ÆÆU c
)
ÆÆc d
{
ØØ 	
string
±± 
tags
±± 
=
±± 
$str
±± 6
+
±±7 8
	ParLevel1
±±9 B
.
±±B C%
ParConsolidationType_Id
±±C Z
+
±±[ \
$str
±±] t
+
±±u v
	ParLevel1±±w Ä
.±±Ä Å
ParFrequency_Id±±Å ê
+±±ë í
$str±±ì £
+±±§ •
	ParLevel1±±¶ Ø
.±±Ø ∞
HasAlert±±∞ ∏
.±±∏ π
ToString±±π ¡
(±±¡ ¬
)±±¬ √
.±±√ ƒ
ToLower±±ƒ À
(±±À Ã
)±±Ã Õ
+±±Œ œ
$str±±– ‚
+±±„ ‰
	ParLevel1±±Â Ó
.±±Ó Ô

IsSpecific±±Ô ˘
.±±˘ ˙
ToString±±˙ Ç
(±±Ç É
)±±É Ñ
.±±Ñ Ö
ToLower±±Ö å
(±±å ç
)±±ç é
+±±è ê
$str±±ë ¶
+±±ß ®
totalAvaliado±±© ∂
+±±∑ ∏
$str±±π Œ
+±±œ –
totalDefeitos±±— ﬁ
+±±ﬂ ‡
$str±±· ˛
+±±ˇ Ä%
volumeAlertaIndicador±±Å ñ
+±±ó ò
$str±±ô Æ
+±±Ø ∞
metaIndicador±±± æ
+±±ø ¿
$str±±¡ Ÿ
+±±⁄ € 
numeroAvaliacoes±±‹ Ï
+±±Ì Ó
$str±±Ô ˛
+±±ˇ Ä
metaDia±±Å à
+±±â ä
$str±±ã °
+±±¢ £
metaTolerancia±±§ ≤
+±±≥ ¥
$str±±µ  
+±±À Ã
metaAvaliacao±±Õ ⁄
+±±€ ‹
$str±±› Ò
+±±Ú Û
alertNivel1±±Ù ˇ
+±±Ä Å
$str±±Ç ñ
+±±ó ò
alertNivel2±±ô §
+±±• ¶
$str±±ß ª
+±±º Ω
alertaNivel3±±æ  
+±±À Ã
$str±±Õ ‡
+±±· ‚
alertaAtual±±„ Ó
+±±Ô 
$str±±Ò é
+±±è ê%
avaliacaoultimoalerta±±ë ¶
+±±ß ®
$str±±©  
+±±À Ã)
monitoramentoultimoalerta±±Õ Ê
+±±Á Ë
$str±±È Œ
+±±œ –
	ParLevel1±±— ⁄
.±±⁄ €)
haveRealTimeConsolidation±±€ Ù
.±±Ù ı
ToString±±ı ˝
(±±˝ ˛
)±±˛ ˇ
.±±ˇ Ä
ToLower±±Ä á
(±±á à
)±±à â
+±±ä ã
$str±±å Ø
+±±∞ ±
	ParLevel1±±≤ ª
.±±ª º+
RealTimeConsolitationUpdate±±º ◊
+±±ÿ Ÿ
$str±±⁄ ˚
+±±¸ ˝
	ParLevel1±±˛ á	
.±±á	 à	)
IsLimitedEvaluetionNumber±±à	 °	
.±±°	 ¢	
ToString±±¢	 ™	
(±±™	 ´	
)±±´	 ¨	
.±±¨	 ≠	
ToLower±±≠	 ¥	
(±±¥	 µ	
)±±µ	 ∂	
+±±∑	 ∏	
$str±±π	 »	
+±±…	  	
	ParLevel1±±À	 ‘	
.±±‘	 ’	
hashKey±±’	 ‹	
+±±›	 ﬁ	
$str±±ﬂ	 Ù	
+±±ı	 ˆ	
	ParLevel1±±˜	 Ä

.±±Ä
 Å

IsPartialSave±±Å
 é

.±±é
 è

ToString±±è
 ó

(±±ó
 ò

)±±ò
 ô

.±±ô
 ö

ToLower±±ö
 °

(±±°
 ¢

)±±¢
 £

+±±§
 •

$str±±¶
 √

+±±ƒ
 ≈

	ParLevel1±±∆
 œ

.±±œ
 –
%
HasCompleteEvaluation±±–
 Â

.±±Â
 Ê

ToString±±Ê
 Ó

(±±Ó
 Ô

)±±Ô
 

.±±
 Ò

ToLower±±Ò
 ¯

(±±¯
 ˘

)±±˘
 ˙

+±±˚
 ¸

$str±±˝
 ì
+±±î ï
	ParLevel1±±ñ ü
.±±ü †
HasGroupLevel2±±† Æ
.±±Æ Ø
ToString±±Ø ∑
(±±∑ ∏
)±±∏ π
.±±π ∫
ToLower±±∫ ¡
(±±¡ ¬
)±±¬ √
+±±ƒ ≈
$str±±∆ ’
+±±÷ ◊
	ParLevel1±±ÿ ·
.±±· ‚
	IsReaudit±±‚ Î
.±±Î Ï
ToString±±Ï Ù
(±±Ù ı
)±±ı ˆ
.±±ˆ ˜
ToLower±±˜ ˛
(±±˛ ˇ
)±±ˇ Ä
+±±Å Ç
$str±±É ï
+±±ï ñ
	ParLevel1±±ñ ü
.±±ü †

EditLevel2±±† ™
.±±™ ´
ToString±±´ ≥
(±±≥ ¥
)±±¥ µ
.±±µ ∂
ToLower±±∂ Ω
(±±Ω æ
)±±æ ø
+±±¿ ¡
$str±±¬ ∆
;±±∆ «
string
≥≥ 

btnReaudit
≥≥ 
=
≥≥ 
button
≥≥  &
(
≥≥& '
	Resources
≥≥' 0
.
≥≥0 1
Resource
≥≥1 9
.
≥≥9 :
reaudit
≥≥: A
,
≥≥A B
type
≥≥C G
.
≥≥G H
submit
≥≥H N
,
≥≥N O
$str
≥≥P R
,
≥≥R S
classe
≥≥T Z
:
≥≥Z [
$str≥≥\ ã
,≥≥ã å
style≥≥ç í
:≥≥í ì
$str≥≥î ß
)≥≥ß ®
;≥≥® ©
string
¥¥ 
btnCA
¥¥ 
=
¥¥ 
button
¥¥ !
(
¥¥! "
	Resources
¥¥" +
.
¥¥+ ,
Resource
¥¥, 4
.
¥¥4 5
corrective_action
¥¥5 F
,
¥¥F G
type
¥¥H L
.
¥¥L M
submit
¥¥M S
,
¥¥S T
$str
¥¥U W
,
¥¥W X
classe
¥¥Y _
:
¥¥_ `
$str¥¥a ê
)¥¥ê ë
;¥¥ë í
if
∂∂ 
(
∂∂ 
listParRelapse
∂∂ 
.
∂∂ 
Count
∂∂ #
(
∂∂# $
)
∂∂$ %
>
∂∂& '
$num
∂∂( )
)
∂∂) *
{
∑∑ 
var
∏∏ 
i
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
foreach
ππ 
(
ππ 
var
ππ 

parRelapse
ππ '
in
ππ( *
listParRelapse
ππ+ 9
)
ππ9 :
{
∫∫ 
tags
ªª 
+=
ªª 
$str
ªª $
+
ªª% &
i
ªª' (
+
ªª) *
$str
ªª+ /
+
ªª0 1

parRelapse
ªª2 <
.
ªª< =
ParFrequency_Id
ªª= L
+
ªªM N
$str
ªªO R
+
ªªS T

parRelapse
ªªU _
.
ªª_ `
EffectiveLength
ªª` o
+
ªªp q
$str
ªªr u
+
ªªu v

parRelapseªªw Å
.ªªÅ Ç
NcNumberªªÇ ä
+ªªä ã
$strªªã è
;ªªè ê
i
ºº 
++
ºº 
;
ºº 
}
ΩΩ 
}
ææ 
string
¿¿ 
level01
¿¿ 
=
¿¿ 
link
¿¿ !
(
¿¿! "
id
¡¡  "
:
¡¡" #
	ParLevel1
¡¡$ -
.
¡¡- .
Id
¡¡. 0
.
¡¡0 1
ToString
¡¡1 9
(
¡¡9 :
)
¡¡: ;
,
¡¡; <
classe
¬¬  &
:
¬¬& '
$str
¬¬( :
+
¬¬; <
tipoTela
¬¬= E
,
¬¬E F
tags
ƒƒ  $
:
ƒƒ$ %
tags
ƒƒ& *
,
ƒƒ* +
	outerhtml
≈≈  )
:
≈≈) *
span
≈≈+ /
(
≈≈/ 0
	outerhtml
≈≈0 9
:
≈≈9 :
	ParLevel1
≈≈; D
.
≈≈D E
Name
≈≈E I
,
≈≈I J
classe
≈≈K Q
:
≈≈Q R
$str
≈≈S ^
)
≈≈^ _
)
∆∆  !
;
∆∆! "
level01
»» 
+=
»» 
div
»» 
(
»» 
	outerhtml
   %
:
  % &

btnReaudit
  ' 1
+
  2 3
btnCA
  4 9
,
  9 :
classe
ÀÀ "
:
ÀÀ" #
$str
ÀÀ$ 7
)
ÀÀ7 8
;
ÀÀ8 9
return
ÃÃ 
level01
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
public
œœ 
string
œœ 
painelCounters
œœ $
(
œœ$ %
IEnumerable
œœ% 0
<
œœ0 1
SGQDBContext
œœ1 =
.
œœ= >

ParCounter
œœ> H
>
œœH I
parCounterList
œœJ X
,
œœX Y
string
œœZ `
css
œœa d
=
œœe f
$str
œœg i
)
œœi j
{
–– 	
if
—— 
(
—— 
parCounterList
—— 
.
—— 
Count
—— $
(
——$ %
)
——% &
==
——' )
$num
——* +
)
——+ ,
{
““ 
return
”” 
$str
”” 
;
”” 
}
‘‘ 
else
’’ 
{
÷÷ 
string
◊◊ 
countersArray
◊◊ $
=
◊◊% &
$str
◊◊' )
;
◊◊) *
foreach
ŸŸ 
(
ŸŸ 
SGQDBContext
ŸŸ %
.
ŸŸ% &

ParCounter
ŸŸ& 0

parCounter
ŸŸ1 ;
in
ŸŸ< >
parCounterList
ŸŸ? M
)
ŸŸM N
{
⁄⁄ 
countersArray
€€ !
+=
€€" $
counter
€€% ,
(
€€, -

parCounter
€€- 7
.
€€7 8
Counter
€€8 ?
,
€€? @

parCounter
€€A K
.
€€K L
Level
€€L Q
,
€€Q R

parCounter
€€S ]
.
€€] ^
	indicador
€€^ g
,
€€g h

parCounter
€€i s
.
€€s t
Local
€€t y
)
€€y z
;
€€z {
}
‹‹ 
return
›› 
countersArray
›› $
;
››$ %
}
ﬁﬁ 
}
·· 	
public
‚‚ 
string
‚‚ 
counter
‚‚ 
(
‚‚ 
string
‚‚ $
label
‚‚% *
,
‚‚* +
string
‚‚, 2
level
‚‚3 8
,
‚‚8 9
string
‚‚: @
	indicador
‚‚A J
,
‚‚J K
string
‚‚L R
headerLevel
‚‚S ^
)
‚‚^ _
{
„„ 	
return
ÂÂ 
$str
ÂÂ E
+
ÂÂE F
label
ÂÂF K
+
ÂÂK L
$str
ÂÂL Y
+
ÂÂZ [
level
ÂÂ\ a
+
ÂÂb c
$str
ÂÂd u
+
ÂÂv w
	indicadorÂÂx Å
+ÂÂÇ É
$strÂÂÑ ó
+ÂÂò ô
headerLevelÂÂö •
+ÂÂ¶ ß
$str
ÊÊ 5
+
ÊÊ6 7
label
ÊÊ8 =
+
ÊÊ= >
$str
ÊÊ> y
;
ÊÊy z
}
ÁÁ 	
public
ÈÈ 
DictionaryEntry
ÈÈ 
getResource
ÈÈ *
(
ÈÈ* +
string
ÈÈ+ 1
value
ÈÈ2 7
)
ÈÈ7 8
{
ÍÍ 	
System
ÎÎ 
.
ÎÎ 
	Resources
ÎÎ 
.
ÎÎ 
ResourceManager
ÎÎ ,
resourceManager
ÎÎ- <
=
ÎÎ= >
	Resources
ÎÎ? H
.
ÎÎH I
Resource
ÎÎI Q
.
ÎÎQ R
ResourceManager
ÎÎR a
;
ÎÎa b
if
ÌÌ 
(
ÌÌ 
resourceManager
ÌÌ 
==
ÌÌ  "
null
ÌÌ# '
)
ÌÌ' (
{
ÓÓ 
Thread
ÔÔ 
.
ÔÔ 
CurrentThread
ÔÔ $
.
ÔÔ$ %
CurrentCulture
ÔÔ% 3
=
ÔÔ4 5
new
ÔÔ6 9
CultureInfo
ÔÔ: E
(
ÔÔE F
$str
ÔÔF H
)
ÔÔH I
;
ÔÔI J
Thread
 
.
 
CurrentThread
 $
.
$ %
CurrentUICulture
% 5
=
6 7
new
8 ;
CultureInfo
< G
(
G H
$str
H J
)
J K
;
K L
}
ÒÒ 
var
ÛÛ 
list
ÛÛ 
=
ÛÛ 
resourceManager
ÛÛ &
.
ÛÛ& '
GetResourceSet
ÛÛ' 5
(
ÛÛ5 6
Thread
ÙÙ 
.
ÙÙ 
CurrentThread
ÙÙ $
.
ÙÙ$ %
CurrentUICulture
ÙÙ% 5
,
ÙÙ5 6
true
ÙÙ7 ;
,
ÙÙ; <
false
ÙÙ= B
)
ÙÙB C
.
ÙÙC D
Cast
ÙÙD H
<
ÙÙH I
DictionaryEntry
ÙÙI X
>
ÙÙX Y
(
ÙÙY Z
)
ÙÙZ [
;
ÙÙ[ \
foreach
ˆˆ 
(
ˆˆ 
var
ˆˆ 
r
ˆˆ 
in
ˆˆ 
list
ˆˆ "
)
ˆˆ" #
{
˜˜ 
if
¯¯ 
(
¯¯ 
r
¯¯ 
.
¯¯ 
Key
¯¯ 
.
¯¯ 
ToString
¯¯ "
(
¯¯" #
)
¯¯# $
==
¯¯% '
value
¯¯( -
)
¯¯- .
return
˘˘ 
r
˘˘ 
;
˘˘ 
}
˙˙ 
return
¸¸ 
new
¸¸ 
DictionaryEntry
¸¸ &
(
¸¸& '
)
¸¸' (
;
¸¸( )
}
˝˝ 	
}
˛˛ 
}ÅÅ ©$
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\Level02Result.cs
	namespace 	
	SgqSystem
 
. 
Services 
{ 
public 

class 
Level02Result 
{		 
public

 
string

 
	unidadeId

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
int 
period 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
shift 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
evaluate 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
sample 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
result 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool  
haveCorrectiveAction (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
bool 
haveReaudit 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 

havePhases 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
reaudit 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
reauditNumber  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
	completed 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
defects 
{ 
get  
;  !
set" %
;% &
}' (
public 
Level02Result 
( 
) 
{ 	
} 	
public 
Level02Result 
( 
string #
	unidadeId$ -
,- .
int/ 2
period3 9
,9 :
int; >
shift? D
,D E
intF I
evaluateJ R
,R S
intT W
sampleX ^
,^ _
string` f
resultg m
,m n
boolo s!
haveCorrectiveAction	t à
,
à â
bool
ä é
haveReaudit
è ö
,
ö õ
bool !

havePhases" ,
,, -
bool. 2
reaudit3 :
,: ;
int< ?
reauditNumber@ M
,M N
boolO S
	completedT ]
,] ^
int_ b
defectsc j
)j k
{ 	
this 
. 
	unidadeId 
= 
	unidadeId &
;& '
this   
.   
period   
=   
period    
;    !
this!! 
.!! 
shift!! 
=!! 
shift!! 
;!! 
this"" 
."" 
evaluate"" 
="" 
evaluate"" $
;""$ %
this## 
.## 
sample## 
=## 
sample##  
;##  !
this$$ 
.$$ 
result$$ 
=$$ 
result$$  
;$$  !
this%% 
.%%  
haveCorrectiveAction%% %
=%%& ' 
haveCorrectiveAction%%( <
;%%< =
this&& 
.&& 
haveReaudit&& 
=&& 
haveReaudit&& *
;&&* +
this'' 
.'' 

havePhases'' 
='' 

havePhases'' (
;''( )
this(( 
.(( 
reaudit(( 
=(( 
reaudit(( "
;((" #
this)) 
.)) 
reauditNumber)) 
=))  
reauditNumber))! .
;)). /
this** 
.** 
	completed** 
=** 
	completed** &
;**& '
this++ 
.++ 
defects++ 
=++ 
defects++ "
;++" #
},, 	
}-- 
}.. R
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\ServiceLevel2.csôõ
OC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\SGQDBContext.cs
	namespace 	
SGQDBContext
 
{ 
public 

partial 
class 
	ParLevel1 "
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
hashKey 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
ParCriticalLevel_Id &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string !
ParCriticalLevel_Name +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
bool 
HasSaveLevel2 !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
bool !
HasNoApplicableLevel2 )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
int #
ParConsolidationType_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
int 
ParFrequency_Id "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
HasAlert 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 

IsSpecific 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool %
haveRealTimeConsolidation -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
int '
RealTimeConsolitationUpdate .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
bool %
IsLimitedEvaluetionNumber -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public   
bool   
IsPartialSave   !
{  " #
get  $ '
;  ' (
set  ) ,
;  , -
}  . /
public!! 
decimal!! 

tipoAlerta!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
public"" 
decimal"" 
valorAlerta"" "
{""# $
get""% (
;""( )
set""* -
;""- .
}""/ 0
public## 
bool## !
HasCompleteEvaluation## )
{##* +
get##, /
;##/ 0
set##1 4
;##4 5
}##6 7
public$$ 
bool$$ 
	IsReaudit$$ 
{$$ 
get$$  #
;$$# $
set$$% (
;$$( )
}$$* +
public%% 
bool%% 

EditLevel2%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
public&& 
bool&& &
IsSpecificNumberEvaluetion&& .
{&&/ 0
get&&1 4
;&&4 5
set&&6 9
;&&9 :
}&&; <
public'' 
bool'' #
IsFixedEvaluetionNumber'' +
{'', -
get''. 1
;''1 2
set''3 6
;''6 7
}''8 9
public)) 
bool)) 
HasGroupLevel2)) "
{))# $
get))% (
;))( )
set))* -
;))- .
}))/ 0
public++ 
	ParLevel1++ 
(++ 
)++ 
{,, 	
}.. 	
private00 
SqlConnection00 
db00  
{00! "
get00# &
;00& '
set00( +
;00+ ,
}00- .
public22 
	ParLevel122 
(22 
SqlConnection22 &
_db22' *
)22* +
{33 	
db44 
=44 
_db44 
;44 
}55 	
public77 
	ParLevel177 
getById77  
(77  !
int77! $
Id77% '
)77' (
{88 	
try99 
{:: 
string<< 
sql<< 
=<< 
$str<< K
+<<L M
Id<<N P
+<<Q R
$str<<S V
;<<V W
var== 
parLevel1List== !
===" #
db==$ &
.==& '
Query==' ,
<==, -
	ParLevel1==- 6
>==6 7
(==7 8
sql==8 ;
)==; <
.==< =
FirstOrDefault=== K
(==K L
)==L M
;==M N
return?? 
parLevel1List?? $
;??$ %
}@@ 
catchAA 
(AA 
	ExceptionAA 
exAA 
)AA  
{BB 
throwCC 
exCC 
;CC 
}DD 
}EE 	
publicGG 
IEnumerableGG 
<GG 
	ParLevel1GG $
>GG$ %
getByFamiliaGG& 2
(GG2 3
DateTimeGG3 ;
dateCollectionGG< J
,GGJ K
intGGL O
ParLevel1_IdGGP \
=GG] ^
$numGG_ `
)GG` a
{HH 	
tryII 
{JJ 
stringLL 
sqlLL 
=LL 
$strLL m
+LLn o
$strMM m
+MMn o
$strNN m
+NNn o
$strOO m
+OOn o
$strPP :
+PP; <
dateCollectionPP= K
.PPK L
ToStringPPL T
(PPT U
$strPPU a
)PPa b
+PPc d
$strPPe m
+PPn o
$strQQ m
;QQm n
ifRR 
(RR 
ParLevel1_IdRR  
>RR! "
$numRR# $
)RR$ %
{SS 
sqlTT 
+=TT 
$strTT 1
+TT2 3
ParLevel1_IdTT4 @
;TT@ A
}UU 
sqlVV 
+=VV 
$strVV m
+VVn o
$strWW m
;WWm n
varXX 
parLevel1ListXX !
=XX" #
dbXX$ &
.XX& '
QueryXX' ,
<XX, -
	ParLevel1XX- 6
>XX6 7
(XX7 8
sqlXX8 ;
)XX; <
.XX< =
ToListXX= C
(XXC D
)XXD E
;XXE F
returnZZ 
parLevel1ListZZ $
;ZZ$ %
}[[ 
catch\\ 
(\\ 
	Exception\\ 
ex\\ 
)\\  
{]] 
throw^^ 
ex^^ 
;^^ 
}__ 
}`` 	
publicbb 
IEnumerablebb 
<bb 
	ParLevel1bb $
>bb$ %,
 getParLevel1ParCriticalLevelListbb& F
(bbF G
intbbG J
ParCompany_IdbbK X
,bbX Y
stringbbZ `
Level1ListIdbba m
)bbm n
{cc 	
stringkk 
whereIsChildrenkk "
=kk# $
$strkk% ;
;kk; <
stringnn 
sqlnn 
=nn 
$str	nn ˙
+
nn˚ ¸
$str	oo Â
+
ooÊ Á
$str	pp ®
+
pp© ™
$str	qq ¢
+
qq£ §
$str	rr ô
+
rrö õ
$str	ss ô
+
ssö õ
$str	tt £
+
tt§ •
$str	uu ô
+
uuö õ
$str	vv £
+
vv§ •
$str	ww ô
+
wwö õ
$str	xx £
+
xx§ •
$str	yy ó
+
yyò ô
$str	zz £
+
zz§ •
$str	{{ ô
+
{{ö õ
$str	|| ¢
+
||£ §
$str	}} ≠
+
}}Æ Ø
$str	 ¶
+
ß ®
ParCompany_Id
© ∂
+
∑ ∏
$str
π €
+
‹ ›
$strÄÄ è
+ÄÄê ë
$str
ÇÇ 8
+
ÇÇ9 :
ParCompany_Id
ÇÇ; H
+
ÇÇI J
$strÇÇK ô
+ÇÇö õ
$str
ÉÉ 
+
ÉÉ  
whereIsChildren
ÉÉ! 0
+
ÉÉ1 2
$strÉÉ3 ú
+ÉÉù û
$strÑÑ “
;ÑÑ“ ”
if
ÖÖ 
(
ÖÖ 
Level1ListId
ÖÖ 
!=
ÖÖ 
$str
ÖÖ  "
&&
ÖÖ# %
Level1ListId
ÖÖ& 2
!=
ÖÖ3 5
null
ÖÖ6 :
)
ÖÖ: ;
{
ÜÜ 
sql
áá 
+=
áá 
$str
áá (
+
áá) *
Level1ListId
áá+ 7
.
áá7 8
	Substring
áá8 A
(
ááA B
$num
ááB C
,
ááC D
Level1ListId
ááE Q
.
ááQ R
Length
ááR X
-
ááY Z
$num
áá[ \
)
áá\ ]
+
áá^ _
$str
áá` d
;
áád e
}
àà 
sql
ää 
+=
ää 
$strää ú
;ääú ù
var
èè 
parLevel1List
èè 
=
èè 
db
èè  "
.
èè" #
Query
èè# (
<
èè( )
	ParLevel1
èè) 2
>
èè2 3
(
èè3 4
sql
èè4 7
)
èè7 8
;
èè8 9
return
ëë 
parLevel1List
ëë  
;
ëë  !
}
íí 	
}
ìì 
public
îî 

partial
îî 
class
îî 
ParLevel1Alertas
îî )
{
ïï 
public
óó 
decimal
óó 
Nivel1
óó 
{
óó 
get
óó  #
;
óó# $
set
óó% (
;
óó( )
}
óó* +
public
òò 
decimal
òò 
Nivel2
òò 
{
òò 
get
òò  #
;
òò# $
set
òò% (
;
òò( )
}
òò* +
public
ôô 
string
ôô 
Nivel3
ôô 
{
ôô 
get
ôô "
;
ôô" #
set
ôô$ '
;
ôô' (
}
ôô) *
public
öö 
decimal
öö 
VolumeAlerta
öö #
{
öö$ %
get
öö& )
;
öö) *
set
öö+ .
;
öö. /
}
öö0 1
public
õõ 
decimal
õõ 
Meta
õõ 
{
õõ 
get
õõ !
;
õõ! "
set
õõ# &
;
õõ& '
}
õõ( )
private
££ 
SqlConnection
££ 
db
££  
{
££! "
get
££# &
;
££& '
set
££( +
;
££+ ,
}
££- .
public
§§ 
ParLevel1Alertas
§§ 
(
§§  
)
§§  !
{
§§" #
}
§§$ %
public
•• 
ParLevel1Alertas
•• 
(
••  
SqlConnection
••  -
_db
••. 1
)
••1 2
{
¶¶ 	
db
ßß 
=
ßß 
_db
ßß 
;
ßß 
}
®® 	
public
©© 
ParLevel1Alertas
©© 

getAlertas
©©  *
(
©©* +
int
©©+ .
ParLevel1_Id
©©/ ;
,
©©; <
int
©©= @
ParCompany_Id
©©A N
,
©©N O
DateTime
©©P X
DateCollect
©©Y d
)
©©d e
{
™™ 	
string
≠≠ 
_DataCollect
≠≠ 
=
≠≠  !
DateCollect
≠≠" -
.
≠≠- .
ToString
≠≠. 6
(
≠≠6 7
$str
≠≠7 A
)
≠≠A B
;
≠≠B C
string
ØØ 
sql
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ 
sql
±± 
=
±± 
$str
±± 
+
±±  
$str
≤≤ Y
+
≤≤Z [
$str
≥≥ Q
+
≥≥R S
$str
¥¥ P
+
¥¥Q R
$str
µµ =
+
µµ> ?
$str
∂∂ -
+
∂∂. /
$str
∑∑  
+
∑∑! "
$str
∏∏ 
+
∏∏ 
$str
ππ &
+
ππ' (
$str
∫∫ $
+
∫∫% &
$str
ªª X
+
ªªY Z
$str
ºº z
+
ºº{ |
$str
ΩΩ 4
+
ΩΩ5 6
$str
ææ 4
+
ææ5 6
$str
øø /
+
øø0 1
$str
¿¿ #
+
¿¿$ %
$str
¡¡ $
+
¡¡% &
$str
¬¬ %
+
¬¬& '
$str
√√ 4
+
√√5 6
$str
ƒƒ p
+
ƒƒq r
ParLevel1_Id
ƒƒs 
+ƒƒÄ Å
$strƒƒÇ °
+ƒƒ¢ £
$str
≈≈ s
+
≈≈t u
ParLevel1_Id≈≈v Ç
+≈≈É Ñ
$str≈≈Ö ú
+≈≈ù û
ParCompany_Id≈≈ü ¨
+≈≈≠ Æ
$str≈≈Ø Ú
+≈≈Û Ù
$str
∆∆ -
+
∆∆. /
$str
«« #
+
««$ %
$str»» ‹
+»»› ﬁ
$str
…… 3
+
……4 5
$str
   D
+
  E F
$str
ÀÀ d
+
ÀÀe f
$strÃÃ ¢
+ÃÃ£ §
ParCompany_IdÃÃ• ≤
+ÃÃ≥ ¥
$strÃÃµ ·
+ÃÃ‚ „
_DataCollectÃÃ‰ 
+ÃÃÒ Ú
$strÃÃÛ ˝
+ÃÃ˛ ˇ
$strÕÕ ﬁ
+ÕÕﬂ ‡
$str
ŒŒ 1
+
ŒŒ2 3
$strœœ €
+œœ‹ ›
$str
–– 2
+
––3 4
$str
—— C
+
——D E
$str
““ c
+
““d e
$str”” ∫
+””ª º
ParCompany_Id””Ω  
+””À Ã
$str””Õ ˙
+””˚ ¸
_DataCollect””˝ â
+””ä ã
$str””å ©
+””™ ´
$str‘‘ €
+‘‘‹ ›
$str
’’ .
+
’’/ 0
$str÷÷ €
+÷÷‹ ›
$str
◊◊ 2
+
◊◊3 4
$str
ÿÿ C
+
ÿÿD E
$str
ŸŸ c
+
ŸŸd e
$str⁄⁄ ∫
+⁄⁄ª º
ParCompany_Id⁄⁄Ω  
+⁄⁄À Ã
$str⁄⁄Õ ˙
+⁄⁄˚ ¸
_DataCollect⁄⁄˝ â
+⁄⁄ä ã
$str⁄⁄å ≠
+⁄⁄Æ Ø
$str€€ €
+€€‹ ›
$str
‹‹ .
+
‹‹/ 0
$str›› €
+››‹ ›
$str
ﬁﬁ 1
+
ﬁﬁ2 3
$str
ﬂﬂ C
+
ﬂﬂD E
$str
‡‡ c
+
‡‡d e
$str·· ¶
+··ß ®
ParCompany_Id··© ∂
+··∑ ∏
$str··π Ê
+··Á Ë
_DataCollect··È ı
+··ˆ ˜
$str··¯ ö
+··õ ú
$str‚‚ ‹
+‚‚› ﬁ
$str
„„ /
+
„„0 1
$str‰‰ ‹
+‰‰› ﬁ
$str
ÂÂ ,
+
ÂÂ- .
$str
ÊÊ 7
+
ÊÊ8 9
$str
ÁÁ %
+
ÁÁ& '
$str
ËË 3
+
ËË4 5
$str
ÈÈ -
+
ÈÈ. /
$str
ÍÍ +
+
ÍÍ, -
$str
ÎÎ 3
+
ÎÎ4 5
$str
ÏÏ )
+
ÏÏ* +
$str
ÌÌ &
+
ÌÌ' (
$str
ÓÓ /
+
ÓÓ0 1
$str
ÔÔ 5
+
ÔÔ6 7
$str
 C
+
D E
$str
ÒÒ =
+
ÒÒ> ?
$str
ÚÚ V
+
ÚÚW X
$strÛÛ å
+ÛÛç é
ParCompany_IdÛÛè ú
+ÛÛù û
$strÛÛü Á
+ÛÛË È
$strÙÙ ã
+ÙÙå ç
ParCompany_IdÙÙé õ
+ÙÙú ù
$strÙÙû ‰
+ÙÙÂ Ê
$str
ıı -
+
ıı. /
$str
ˆˆ h
+
ˆˆi j
$str
˜˜ *
+
˜˜+ ,
$str
¯¯ 3
+
¯¯4 5
$str
˘˘ Z
+
˘˘[ \
$str
˙˙ b
+
˙˙c d
$str
˚˚ b
+
˚˚c d
$str
¸¸ j
+
¸¸k l
$str
˝˝ m
+
˝˝n o
$str
˛˛ h
+
˛˛i j
$str
ˇˇ c
+
ˇˇd e
$str
ÄÄ p
+
ÄÄq r
$str
ÅÅ n
+
ÅÅo p
$str
ÇÇ y
+
ÇÇz {
$str
ÉÉ I
+
ÉÉJ K
$str
ÑÑ Z
+
ÑÑ[ \
$str
ÖÖ U
+
ÖÖV W
$str
ÜÜ :
+
ÜÜ; <
ParLevel1_Id
ÜÜ= I
+
ÜÜJ K
$str
ÜÜL O
+
ÜÜP Q
$str
áá 3
+
áá4 5
$str
àà 3
+
àà4 5
$str
ââ h
+
ââi j
$str
ää *
+
ää+ ,
$str
ãã 3
+
ãã4 5
$str
åå -
+
åå. /
ParLevel1_Id
åå0 <
+
åå= >
$str
åå? O
+
ååP Q
$str
çç 0
+
çç1 2
$str
éé 1
+
éé2 3
$str
èè .
+
èè/ 0
$str
êê 7
+
êê8 9
$str
ëë J
+
ëëK L
$str
íí \
+
íí] ^
$str
ìì [
+
ìì\ ]
$str
îî K
+
îîL M
ParLevel1_Id
îîN Z
+
îî[ \
$str
îî] `
+
îîa b
$str
ïï J
+
ïïK L
ParCompany_Id
ïïM Z
+
ïï[ \
$str
ïï] `
+
ïïa b
$str
ññ Q
+
ññR S
$str
óó R
+
óóS T
$str
òò 1
+
òò2 3
$str
ôô 7
+
ôô8 9
$str
öö .
+
öö/ 0
$str
õõ 7
+
õõ8 9
$strúú ˚
+úú¸ ˝
$strùù Ä
+ùùÅ Ç
$str
ûû C
+
ûûD E
$str
üü C
+
üüD E
$str
†† [
+
††\ ]
$str
°° S
+
°°T U
$str
¢¢ S
+
¢¢T U
$str
££ M
+
££N O
$str
§§ E
+
§§F G
$str
•• S
+
••T U
$str
¶¶ M
+
¶¶N O
$str
ßß E
+
ßßF G
$str
®® J
+
®®K L
ParCompany_Id
®®M Z
+
®®[ \
$str
®®] `
+
®®a b
$str
©© N
+
©©O P
$str
™™ 9
+
™™: ;
$str
´´ B
+
´´C D
$str
¨¨ C
+
¨¨D E
$str
≠≠ 1
+
≠≠2 3
$str
ÆÆ M
+
ÆÆN O
$str
ØØ -
+
ØØ. /
$str
∞∞ S
+
∞∞T U
$str
±± K
+
±±L M
$str
≤≤ P
+
≤≤Q R
$str
≥≥ K
+
≥≥L M
$str
¥¥ P
+
¥¥Q R
$str
µµ >
+
µµ? @
$str
∂∂ $
+
∂∂% &
$str∑∑ œ
+∑∑– —
$str
∏∏ #
+
∏∏$ %
$str
ππ 2
+
ππ3 4
ParLevel1_Id
ππ5 A
+
ππB C
$str
ππD G
+
ππH I
$str
∫∫ #
+
∫∫$ %
$str
ªª 
;
ªª  
var
ææ 
parLevel2List
ææ 
=
ææ 
db
ææ  "
.
ææ" #
Query
ææ# (
<
ææ( )
ParLevel1Alertas
ææ) 9
>
ææ9 :
(
ææ: ;
sql
ææ; >
)
ææ> ?
.
ææ? @
FirstOrDefault
ææ@ N
(
ææN O
)
ææO P
;
ææP Q
return
¿¿ 
parLevel2List
¿¿  
;
¿¿  !
}
¡¡ 	
}
¬¬ 
public
ƒƒ 

partial
ƒƒ 
class
ƒƒ 
	ParLevel2
ƒƒ "
{
≈≈ 
public
«« 
int
«« 
Id
«« 
{
«« 
get
«« 
;
«« 
set
««  
;
««  !
}
««" #
public
»» 
string
»» 
Name
»» 
{
»» 
get
»»  
;
»»  !
set
»»" %
;
»»% &
}
»»' (
public
…… 
string
…… 
Description
…… !
{
……" #
get
……$ '
;
……' (
set
……) ,
;
……, -
}
……. /
public
   
bool
   
HasSampleTotal
   "
{
  # $
get
  % (
;
  ( )
set
  * -
;
  - .
}
  / 0
public
ÃÃ 
bool
ÃÃ 
IsEmptyLevel3
ÃÃ !
{
ÃÃ" #
get
ÃÃ$ '
;
ÃÃ' (
set
ÃÃ) ,
;
ÃÃ, -
}
ÃÃ. /
public
ÕÕ 
bool
ÕÕ 
HasShowLevel03
ÕÕ "
{
ÕÕ# $
get
ÕÕ% (
;
ÕÕ( )
set
ÕÕ* -
;
ÕÕ- .
}
ÕÕ/ 0
public
ŒŒ 
bool
ŒŒ 
HasGroupLevel3
ŒŒ "
{
ŒŒ# $
get
ŒŒ% (
;
ŒŒ( )
set
ŒŒ* -
;
ŒŒ- .
}
ŒŒ/ 0
public
–– 
DateTime
–– 
AddDate
–– 
{
––  !
get
––" %
;
––% &
set
––' *
;
––* +
}
––, -
public
—— 
DateTime
—— 
	AlterDate
—— !
{
——" #
get
——$ '
;
——' (
set
——) ,
;
——, -
}
——. /
public
”” 
bool
”” 
IsActive
”” 
{
”” 
get
”” "
;
””" #
set
””$ '
;
””' (
}
””) *
public
÷÷ 
int
÷÷ %
ParNotConformityRule_id
÷÷ *
{
÷÷+ ,
get
÷÷- 0
;
÷÷0 1
set
÷÷2 5
;
÷÷5 6
}
÷÷7 8
public
ÿÿ 
int
ÿÿ 
ParFrequency_Id
ÿÿ "
{
ÿÿ# $
get
ÿÿ% (
;
ÿÿ( )
set
ÿÿ* -
;
ÿÿ- .
}
ÿÿ/ 0
public
ŸŸ 
int
ŸŸ 
ParDepartment_Id
ŸŸ #
{
ŸŸ$ %
get
ŸŸ& )
;
ŸŸ) *
set
ŸŸ+ .
;
ŸŸ. /
}
ŸŸ0 1
public
€€ 
decimal
€€ 
Value
€€ 
{
€€ 
get
€€ "
;
€€" #
set
€€$ '
;
€€' (
}
€€) *
public
›› 
bool
›› 
	IsReaudit
›› 
{
›› 
get
››  #
;
››# $
set
››% (
;
››( )
}
››* +
private
ﬂﬂ 
SqlConnection
ﬂﬂ 
db
ﬂﬂ  
{
ﬂﬂ! "
get
ﬂﬂ# &
;
ﬂﬂ& '
set
ﬂﬂ( +
;
ﬂﬂ+ ,
}
ﬂﬂ- .
public
·· 
	ParLevel2
·· 
(
·· 
SqlConnection
·· &
_db
··' *
)
··* +
{
‚‚ 	
db
„„ 
=
„„ 
_db
„„ 
;
„„ 
}
‰‰ 	
public
ÊÊ 
int
ÊÊ  
getExisteAvaliacao
ÊÊ %
(
ÊÊ% &
int
ÊÊ& )
ParCompany_Id
ÊÊ* 7
,
ÊÊ7 8
int
ÊÊ9 <
ParLevel2_Id
ÊÊ= I
)
ÊÊI J
{
ÁÁ 	
string
ÎÎ 
sql
ÎÎ 
=
ÎÎ 
$str
ÎÎ 
+
ÎÎ 
$str
ÏÏ +
+
ÏÏ, -
$str
ÌÌ 
+
ÌÌ 
$str
ÓÓ P
+
ÓÓQ R
ParLevel2_Id
ÓÓS _
+
ÓÓ` a
$str
ÓÓb y
+
ÓÓz {
ParCompany_IdÓÓ| â
+ÓÓä ã
$strÓÓå †
+ÓÓ° ¢
$str
ÔÔ 
+
ÔÔ  !
$str
 P
+
Q R
ParLevel2_Id
S _
+
` a
$strb ë
+í ì
$str
ÒÒ 
;
ÒÒ 

SqlCommand
ÛÛ 
command
ÛÛ 
=
ÛÛ  
new
ÛÛ! $

SqlCommand
ÛÛ% /
(
ÛÛ/ 0
sql
ÛÛ0 3
,
ÛÛ3 4
db
ÛÛ5 7
)
ÛÛ7 8
;
ÛÛ8 9
return
ÙÙ 
command
ÙÙ 
.
ÙÙ 
ExecuteNonQuery
ÙÙ *
(
ÙÙ* +
)
ÙÙ+ ,
;
ÙÙ, -
}
ˆˆ 	
public
¯¯ 
int
¯¯ 
getExisteAmostra
¯¯ #
(
¯¯# $
int
¯¯$ '
ParCompany_Id
¯¯( 5
,
¯¯5 6
int
¯¯7 :
ParLevel2_Id
¯¯; G
)
¯¯G H
{
˘˘ 	
string
˝˝ 
sql
˝˝ 
=
˝˝ 
$str
˝˝ 
+
˝˝ 
$str
˛˛ +
+
˛˛, -
$str
ˇˇ 
+
ˇˇ 
$str
ÄÄ L
+
ÄÄM N
ParLevel2_Id
ÄÄO [
+
ÄÄ\ ]
$str
ÄÄ^ u
+
ÄÄv w
ParCompany_IdÄÄx Ö
+ÄÄÜ á
$strÄÄà ú
+ÄÄù û
$str
ÅÅ 
+
ÅÅ  !
$str
ÇÇ L
+
ÇÇM N
ParLevel2_Id
ÇÇO [
+
ÇÇ\ ]
$strÇÇ^ ç
+ÇÇé è
$str
ÉÉ 
;
ÉÉ 

SqlCommand
ÖÖ 
command
ÖÖ 
=
ÖÖ  
new
ÖÖ! $

SqlCommand
ÖÖ% /
(
ÖÖ/ 0
sql
ÖÖ0 3
,
ÖÖ3 4
db
ÖÖ5 7
)
ÖÖ7 8
;
ÖÖ8 9
return
ÜÜ 
command
ÜÜ 
.
ÜÜ 
ExecuteNonQuery
ÜÜ *
(
ÜÜ* +
)
ÜÜ+ ,
;
ÜÜ, -
}
áá 	
public
çç 
	ParLevel2
çç 
(
çç 
)
çç 
{
éé 	
}
êê 	
public
ëë 
	ParLevel2
ëë 
getById
ëë  
(
ëë  !
int
ëë! $
Id
ëë% '
)
ëë' (
{
íí 	
try
ìì 
{
îî 
string
ññ 
sql
ññ 
=
ññ 
$str
ññ K
+
ññL M
Id
ññN P
+
ññQ R
$str
ññS V
;
ññV W
var
óó 
parLevel1List
óó !
=
óó" #
db
óó$ &
.
óó& '
Query
óó' ,
<
óó, -
	ParLevel2
óó- 6
>
óó6 7
(
óó7 8
sql
óó8 ;
)
óó; <
.
óó< =
FirstOrDefault
óó= K
(
óóK L
)
óóL M
;
óóM N
return
òò 
parLevel1List
òò $
;
òò$ %
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
ex
öö 
)
öö  
{
õõ 
throw
úú 
ex
úú 
;
úú 
}
ùù 
}
ûû 	
public
üü 
IEnumerable
üü 
<
üü 
	ParLevel2
üü $
>
üü$ %!
getLevel2ByIdLevel1
üü& 9
(
üü9 :
SGQDBContext
üü: F
.
üüF G
	ParLevel1
üüG P
	parLevel1
üüQ Z
,
üüZ [
DateTime
üü\ d
dateCollection
üüe s
,
üüs t
int
üüu x
ParCompany_Idüüy Ü
)üüÜ á
{
†† 	
if
≤≤ 
(
≤≤ 
	parLevel1
≤≤ 
.
≤≤ %
IsFixedEvaluetionNumber
≤≤ 1
==
≤≤2 4
true
≤≤5 9
)
≤≤9 :
{
≥≥ 
string
¥¥ 
sql
¥¥ 
=
¥¥ 
$str¥¥ µ
+¥¥∂ ∑
$strµµ ¬
+µµ√ ƒ
$str∂∂ ¬
+∂∂√ ƒ
$str∑∑ ∏
+∑∑π ∫
$str∏∏ ¬
+∏∏√ ƒ
$strππ ∏
+πππ ∫
$str∫∫ ¬
+∫∫√ ƒ
$strªª ∏
+ªªπ ∫
$strºº ¬
+ºº√ ƒ
$strΩΩ ¬
+ΩΩ√ ƒ
$str
ææ 8
+
ææ9 :
	parLevel1
ææ; D
.
ææD E
Id
ææE G
+
ææH I
$str
ææJ m
+
ææn o
dateCollection
ææp ~
.
ææ~ 
ToStringææ á
(ææá à
$strææà î
)ææî ï
+ææñ ó
$strææò ≥
+ææ¥ µ
ParCompany_Idææ∂ √
+ææƒ ≈
$strææ∆ ˆ
+ææ˜ ¯
$str¿¿ Ï
+¿¿Ì Ó
$str¡¡ ∏
+¡¡π ∫
$str¬¬ ∏
+¬¬π ∫
$str
√√ <
+
√√= >
	parLevel1
√√? H
.
√√H I
Id
√√I K
+
√√L M
$str√√N ∂
+√√∑ ∏
$strƒƒ ∏
+ƒƒπ ∫
$str
≈≈ ?
+
≈≈@ A
ParCompany_Id
≈≈B O
+
≈≈P Q
$str≈≈R ∂
+≈≈∑ ∏
$str∆∆ ∏
;∆∆∏ π
var
»» 
parLevel2List
»» !
=
»»" #
db
»»$ &
.
»»& '
Query
»»' ,
<
»», -
	ParLevel2
»»- 6
>
»»6 7
(
»»7 8
sql
»»8 ;
)
»»; <
;
»»< =
return
   
parLevel2List
   $
;
  $ %
}
ÃÃ 
else
ÕÕ 
{
ŒŒ 
string
‘‘ 
sql
‘‘ 
=
‘‘ 
$str‘‘ ∏
+‘‘π ∫
$str
’’ \
+
’’] ^
$str
÷÷ \
+
÷÷] ^
$str
◊◊ \
+
◊◊] ^
$str
ÿÿ \
+
ÿÿ] ^
$str
ŸŸ \
+
ŸŸ] ^
$str⁄⁄ ò
+⁄⁄ô ö
$str€€ Æ
+€€Ø ∞
$str
‹‹ 8
+
‹‹9 :
	parLevel1
‹‹; D
.
‹‹D E
Id
‹‹E G
+
‹‹H I
$str
‹‹J [
+
‹‹\ ]
$str›› Ñ
+››Ö Ü
$str
ﬂﬂ "
+
ﬂﬂ# $
$str
‡‡ 3
+
‡‡4 5
$str
··  
+
··! "
$str‚‚ ê
+‚‚ë í
ParCompany_Id‚‚ì †
+‚‚° ¢
$str‚‚£ ¶
+‚‚ß ®
$str
„„ (
+
„„) *
$str‰‰ ñ
+‰‰ó ò
$str
ÂÂ +
+
ÂÂ, -
$str
ÁÁ "
+
ÁÁ# $
$str
ËË 3
+
ËË4 5
$str
ÈÈ  
+
ÈÈ! "
$strÍÍ å
+ÍÍç é
ParCompany_IdÍÍè ú
+ÍÍù û
$strÍÍü ¢
+ÍÍ£ §
$str
ÎÎ (
+
ÎÎ) *
$strÏÏ í
+ÏÏì î
$str
ÌÌ +
+
ÌÌ, -
$strÔÔ ∏
+ÔÔπ ∫
$str
 
;
 
var
ÚÚ 
parLevel2List
ÚÚ !
=
ÚÚ" #
db
ÚÚ$ &
.
ÚÚ& '
Query
ÚÚ' ,
<
ÚÚ, -
	ParLevel2
ÚÚ- 6
>
ÚÚ6 7
(
ÚÚ7 8
sql
ÚÚ8 ;
)
ÚÚ; <
;
ÚÚ< =
return
ÙÙ 
parLevel2List
ÙÙ $
;
ÙÙ$ %
}
ıı 
}
ˆˆ 	
}
˜˜ 
public
˘˘ 

partial
˘˘ 
class
˘˘ 
ParLevel2Evaluate
˘˘ *
{
˙˙ 
public
˝˝ 
int
˝˝ 
Id
˝˝ 
{
˝˝ 
get
˝˝ 
;
˝˝ 
set
˝˝  
;
˝˝  !
}
˝˝" #
public
˛˛ 
string
˛˛ 
Name
˛˛ 
{
˛˛ 
get
˛˛  
;
˛˛  !
set
˛˛" %
;
˛˛% &
}
˛˛' (
public
ˇˇ 
int
ˇˇ 
Evaluate
ˇˇ 
{
ˇˇ 
get
ˇˇ !
;
ˇˇ! "
set
ˇˇ# &
;
ˇˇ& '
}
ˇˇ( )
private
ÇÇ 
SqlConnection
ÇÇ 
db
ÇÇ  
{
ÇÇ! "
get
ÇÇ# &
;
ÇÇ& '
set
ÇÇ( +
;
ÇÇ+ ,
}
ÇÇ- .
public
ÉÉ 
ParLevel2Evaluate
ÉÉ  
(
ÉÉ  !
)
ÉÉ! "
{
ÉÉ# $
}
ÉÉ% &
public
ÑÑ 
ParLevel2Evaluate
ÑÑ  
(
ÑÑ  !
SqlConnection
ÑÑ! .
_db
ÑÑ/ 2
)
ÑÑ2 3
{
ÖÖ 	
db
ÜÜ 
=
ÜÜ 
_db
ÜÜ 
;
ÜÜ 
}
áá 	
public
ââ 
IEnumerable
ââ 
<
ââ 
ParLevel2Evaluate
ââ ,
>
ââ, -
getEvaluate
ââ. 9
(
ââ9 :
	ParLevel1
ââ: C
	ParLevel1
ââD M
,
ââM N
int
ââO R
?
ââR S
ParCompany_Id
ââT a
,
ââa b
DateTime
ââc k
DateCollection
ââl z
)
ââz {
{
ää 	
string
çç 
queryCompany
çç 
=
çç  !
null
çç" &
;
çç& '
var
èè 
date
èè 
=
èè 
DateCollection
èè %
.
èè% &
ToString
èè& .
(
èè. /
$str
èè/ ;
)
èè; <
;
èè< =
if
íí 
(
íí 
	ParLevel1
íí 
.
íí 
hashKey
íí !
==
íí" $
$num
íí% &
&&
íí' )
ParCompany_Id
íí* 7
!=
íí8 :
null
íí; ?
)
íí? @
{
ìì 
string
ïï 
sql
ïï 
=
ïï 
$str
ïï S
+
ïïT U
$strññ ≠
+ññÆ Ø
ParCompany_Idññ∞ Ω
+ññæ ø
$strññ¿ ﬁ
+ññﬂ ‡
dateññ· Â
+ññÊ Á
$strññË Å
+ññÇ É
ParCompany_IdññÑ ë
+ññí ì
$strññî µ
+ññ∂ ∑
$str
óó k
+
óól m
$str
òò u
+
òòv w
$str
ôô u
+
ôôv w
$str
öö k
+
ööl m
$str
õõ u
+
õõv w
$str
úú k
+
úúl m
$str
ûû :
+
ûû; <
	ParLevel1
ûû= F
.
ûûF G
Id
ûûG I
+
ûûJ K
$str
ûûL k
+
ûûl m
$str
üü k
;
üük l
var
°° 
parEvaluate
°° 
=
°°  !
db
°°" $
.
°°$ %
Query
°°% *
<
°°* +
ParLevel2Evaluate
°°+ <
>
°°< =
(
°°= >
sql
°°> A
)
°°A B
;
°°B C
return
§§ 
parEvaluate
§§ "
;
§§" #
}
ßß 
else
®® 
if
®® 
(
®® 
	ParLevel1
®® 
.
®® 
hashKey
®® &
==
®®' )
$num
®®* +
&&
®®, .
ParCompany_Id
®®/ <
!=
®®= ?
null
®®@ D
)
®®D E
{
©© 
string
´´ 
sql
´´ 
=
´´ 
$str
´´ S
+
´´T U
$str¨¨ ©
+¨¨™ ´
ParCompany_Id¨¨¨ π
+¨¨∫ ª
$str¨¨º ⁄
+¨¨€ ‹
date¨¨› ·
+¨¨‚ „
$str¨¨‰ ˝
+¨¨˛ ˇ
ParCompany_Id¨¨Ä ç
+¨¨é è
$str¨¨ê ±
+¨¨≤ ≥
$str
≠≠ k
+
≠≠l m
$str
ÆÆ u
+
ÆÆv w
$str
ØØ u
+
ØØv w
$str
∞∞ k
+
∞∞l m
$str
±± u
+
±±v w
$str
≤≤ k
+
≤≤l m
$str
¥¥ :
+
¥¥; <
	ParLevel1
¥¥= F
.
¥¥F G
Id
¥¥G I
+
¥¥J K
$str
¥¥L k
+
¥¥l m
$str
µµ k
;
µµk l
var
∑∑ 
parEvaluate
∑∑ 
=
∑∑  !
db
∑∑" $
.
∑∑$ %
Query
∑∑% *
<
∑∑* +
ParLevel2Evaluate
∑∑+ <
>
∑∑< =
(
∑∑= >
sql
∑∑> A
)
∑∑A B
;
∑∑B C
return
∫∫ 
parEvaluate
∫∫ "
;
∫∫" #
}
ΩΩ 
else
ææ 
if
ææ 
(
ææ 
	ParLevel1
ææ 
.
ææ 
hashKey
ææ &
==
ææ' )
$num
ææ* +
&&
ææ, .
ParCompany_Id
ææ/ <
!=
ææ= ?
null
ææ@ D
)
ææD E
{
øø 
string
¡¡ 
sql
¡¡ 
=
¡¡ 
$str
¡¡ S
+
¡¡T U
$str¬¬ Ø
+¬¬∞ ±
ParCompany_Id¬¬≤ ø
+¬¬¿ ¡
$str¬¬¬ ‡
+¬¬· ‚
date¬¬„ Á
+¬¬Ë È
$str¬¬Í É
+¬¬Ñ Ö
ParCompany_Id¬¬Ü ì
+¬¬î ï
$str¬¬ñ ∑
+¬¬∏ π
$str
√√ k
+
√√l m
$str
ƒƒ u
+
ƒƒv w
$str
≈≈ u
+
≈≈v w
$str
∆∆ k
+
∆∆l m
$str
«« u
+
««v w
$str
»» k
+
»»l m
$str
   :
+
  ; <
	ParLevel1
  = F
.
  F G
Id
  G I
+
  J K
$str
  L k
+
  l m
$str
ÀÀ k
;
ÀÀk l
var
ÕÕ 
parEvaluate
ÕÕ 
=
ÕÕ  !
db
ÕÕ" $
.
ÕÕ$ %
Query
ÕÕ% *
<
ÕÕ* +
ParLevel2Evaluate
ÕÕ+ <
>
ÕÕ< =
(
ÕÕ= >
sql
ÕÕ> A
)
ÕÕA B
;
ÕÕB C
return
–– 
parEvaluate
–– "
;
––" #
}
”” 
else
‘‘ 
if
‘‘ 
(
‘‘ 
	ParLevel1
‘‘ 
.
‘‘ 
hashKey
‘‘ &
==
‘‘' )
$num
‘‘* +
&&
‘‘, .
ParCompany_Id
‘‘/ <
!=
‘‘= ?
null
‘‘@ D
)
‘‘D E
{
’’ 
string
◊◊ 
sql
◊◊ 
=
◊◊ 
$str
◊◊ S
+
◊◊T U
$strÿÿ £
+ÿÿ§ •
ParCompany_Idÿÿ¶ ≥
+ÿÿ¥ µ
$strÿÿ∂ ‘
+ÿÿ’ ÷
dateÿÿ◊ €
+ÿÿ‹ ›
$strÿÿﬁ ˜
+ÿÿ¯ ˘
ParCompany_Idÿÿ˙ á
+ÿÿà â
$strÿÿä ´
+ÿÿ¨ ≠
$str
ŸŸ k
+
ŸŸl m
$str
⁄⁄ u
+
⁄⁄v w
$str
€€ u
+
€€v w
$str
‹‹ k
+
‹‹l m
$str
›› u
+
››v w
$str
ﬁﬁ k
+
ﬁﬁl m
$str
‡‡ :
+
‡‡; <
	ParLevel1
‡‡= F
.
‡‡F G
Id
‡‡G I
+
‡‡J K
$str
‡‡L k
+
‡‡l m
$str
·· k
;
··k l
var
„„ 
parEvaluate
„„ 
=
„„  !
db
„„" $
.
„„$ %
Query
„„% *
<
„„* +
ParLevel2Evaluate
„„+ <
>
„„< =
(
„„= >
sql
„„> A
)
„„A B
;
„„B C
return
ÊÊ 
parEvaluate
ÊÊ "
;
ÊÊ" #
}
ÈÈ 
else
ÍÍ 
{
ÎÎ 
if
ÌÌ 
(
ÌÌ 
ParCompany_Id
ÌÌ !
>
ÌÌ" #
$num
ÌÌ$ %
)
ÌÌ% &
{
ÓÓ 
queryCompany
ÔÔ  
=
ÔÔ! "
$str
ÔÔ# >
+
ÔÔ? @
ParCompany_Id
ÔÔA N
+
ÔÔO P
$str
ÔÔQ T
;
ÔÔT U
}
 
else
ÒÒ 
{
ÚÚ 
queryCompany
ÛÛ  
=
ÛÛ! "
$str
ÛÛ# C
;
ÛÛC D
}
ÙÙ 
string
ˆˆ 
sql
ˆˆ 
=
ˆˆ 
$str
ˆˆ k
+
ˆˆl m
$str
˜˜ k
+
˜˜l m
$str
¯¯ u
+
¯¯v w
$str
˘˘ u
+
˘˘v w
$str
˙˙ k
+
˙˙l m
$str
˚˚ u
+
˚˚v w
$str
¸¸ k
+
¸¸l m
$str
˝˝ u
+
˝˝v w
$str
˛˛ k
+
˛˛l m
$str
ˇˇ :
+
ˇˇ; <
	ParLevel1
ˇˇ= F
.
ˇˇF G
Id
ˇˇG I
+
ˇˇJ K
$str
ˇˇL k
+
ˇˇl m
$str
ÄÄ 4
+
ÄÄ5 6
queryCompany
ÅÅ )
+
ÅÅ* +
$str
ÇÇ }
+
ÇÇ~ 
$strÉÉ É
;ÉÉÉ Ñ
var
áá 
parEvaluate
áá 
=
áá  !
db
áá" $
.
áá$ %
Query
áá% *
<
áá* +
ParLevel2Evaluate
áá+ <
>
áá< =
(
áá= >
sql
áá> A
)
ááA B
;
ááB C
return
àà 
parEvaluate
àà "
;
àà" #
}
ää 
}
éé 	
}
íí 
public
ìì 

partial
ìì 
class
ìì 
ParLevel2Sample
ìì (
{
îî 
public
óó 
int
óó 
Id
óó 
{
óó 
get
óó 
;
óó 
set
óó  
;
óó  !
}
óó" #
public
òò 
string
òò 
Name
òò 
{
òò 
get
òò  
;
òò  !
set
òò" %
;
òò% &
}
òò' (
public
ôô 
int
ôô 
Sample
ôô 
{
ôô 
get
ôô 
;
ôô  
set
ôô! $
;
ôô$ %
}
ôô& '
private
úú 
SqlConnection
úú 
db
úú  
{
úú! "
get
úú# &
;
úú& '
set
úú( +
;
úú+ ,
}
úú- .
public
ùù 
ParLevel2Sample
ùù 
(
ùù 
)
ùù  
{
ùù! "
}
ùù# $
public
ûû 
ParLevel2Sample
ûû 
(
ûû 
SqlConnection
ûû ,
_db
ûû- 0
)
ûû0 1
{
üü 	
db
†† 
=
†† 
_db
†† 
;
†† 
}
°° 	
public
££ 
IEnumerable
££ 
<
££ 
ParLevel2Sample
££ *
>
££* +
	getSample
££, 5
(
££5 6
	ParLevel1
££6 ?
	ParLevel1
££@ I
,
££I J
int
££K N
?
££N O
ParCompany_Id
££P ]
,
££] ^
DateTime
££_ g
DateCollection
££h v
)
££v w
{
§§ 	
var
¶¶ 
date
¶¶ 
=
¶¶ 
DateCollection
¶¶ %
.
¶¶% &
ToString
¶¶& .
(
¶¶. /
$str
¶¶/ ;
)
¶¶; <
;
¶¶< =
string
©© 
queryCompany
©© 
=
©©  !
null
©©" &
;
©©& '
if
´´ 
(
´´ 
	ParLevel1
´´ 
.
´´ 
hashKey
´´ !
==
´´" $
$num
´´% &
&&
´´' )
ParCompany_Id
´´* 7
!=
´´8 :
null
´´; ?
)
´´? @
{
¨¨ 
string
ÆÆ 
sql
ÆÆ 
=
ÆÆ 
$str
ÆÆ T
+
ÆÆU V
$strØØ ´
+ØØ¨ ≠
ParCompany_IdØØÆ ª
+ØØº Ω
$strØØæ ‹
+ØØ› ﬁ
dateØØﬂ „
+ØØ‰ Â
$strØØÊ ˇ
+ØØÄ Å
ParCompany_IdØØÇ è
+ØØê ë
$strØØí ±
+ØØ≤ ≥
$str
∞∞ k
+
∞∞l m
$str
±± u
+
±±v w
$str
≤≤ u
+
≤≤v w
$str
≥≥ k
+
≥≥l m
$str
¥¥ u
+
¥¥v w
$str
µµ k
+
µµl m
$str
∑∑ :
+
∑∑; <
	ParLevel1
∑∑= F
.
∑∑F G
Id
∑∑G I
+
∑∑J K
$str
∑∑L k
+
∑∑l m
$str
∏∏ k
;
∏∏k l
var
∫∫ 
	parSample
∫∫ 
=
∫∫ 
db
∫∫  "
.
∫∫" #
Query
∫∫# (
<
∫∫( )
ParLevel2Sample
∫∫) 8
>
∫∫8 9
(
∫∫9 :
sql
∫∫: =
)
∫∫= >
;
∫∫> ?
return
ΩΩ 
	parSample
ΩΩ  
;
ΩΩ  !
}
¿¿ 
else
¡¡ 
if
¡¡ 
(
¡¡ 
	ParLevel1
¡¡ 
.
¡¡ 
hashKey
¡¡ &
==
¡¡' )
$num
¡¡* +
&&
¡¡, .
ParCompany_Id
¡¡/ <
!=
¡¡= ?
null
¡¡@ D
)
¡¡D E
{
¬¬ 
string
ƒƒ 
sql
ƒƒ 
=
ƒƒ 
$str
ƒƒ S
+
ƒƒT U
$str≈≈ ®
+≈≈© ™
ParCompany_Id≈≈´ ∏
+≈≈π ∫
$str≈≈ª Ÿ
+≈≈⁄ €
date≈≈‹ ‡
+≈≈· ‚
$str≈≈„ ¸
+≈≈˝ ˛
ParCompany_Id≈≈ˇ å
+≈≈ç é
$str≈≈è Æ
+≈≈Ø ∞
$str
∆∆ k
+
∆∆l m
$str
«« u
+
««v w
$str
»» u
+
»»v w
$str
…… k
+
……l m
$str
   u
+
  v w
$str
ÀÀ k
+
ÀÀl m
$str
ÕÕ :
+
ÕÕ; <
	ParLevel1
ÕÕ= F
.
ÕÕF G
Id
ÕÕG I
+
ÕÕJ K
$str
ÕÕL k
+
ÕÕl m
$str
ŒŒ k
;
ŒŒk l
var
–– 
	parSample
–– 
=
–– 
db
––  "
.
––" #
Query
––# (
<
––( )
ParLevel2Sample
––) 8
>
––8 9
(
––9 :
sql
––: =
)
––= >
;
––> ?
return
”” 
	parSample
””  
;
””  !
}
÷÷ 
else
◊◊ 
if
◊◊ 
(
◊◊ 
	ParLevel1
◊◊ 
.
◊◊ 
hashKey
◊◊ &
==
◊◊' )
$num
◊◊* +
&&
◊◊, .
ParCompany_Id
◊◊/ <
!=
◊◊= ?
null
◊◊@ D
)
◊◊D E
{
ÿÿ 
string
⁄⁄ 
sql
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ S
+
⁄⁄T U
$str€€ Æ
+€€Ø ∞
ParCompany_Id€€± æ
+€€ø ¿
$str€€¡ ﬂ
+€€‡ ·
date€€‚ Ê
+€€Á Ë
$str€€È Ç
+€€É Ñ
ParCompany_Id€€Ö í
+€€ì î
$str€€ï ¥
+€€µ ∂
$str
‹‹ k
+
‹‹l m
$str
›› u
+
››v w
$str
ﬁﬁ u
+
ﬁﬁv w
$str
ﬂﬂ k
+
ﬂﬂl m
$str
‡‡ u
+
‡‡v w
$str
·· k
+
··l m
$str
„„ :
+
„„; <
	ParLevel1
„„= F
.
„„F G
Id
„„G I
+
„„J K
$str
„„L k
+
„„l m
$str
‰‰ k
;
‰‰k l
var
ÊÊ 
	parSample
ÊÊ 
=
ÊÊ 
db
ÊÊ  "
.
ÊÊ" #
Query
ÊÊ# (
<
ÊÊ( )
ParLevel2Sample
ÊÊ) 8
>
ÊÊ8 9
(
ÊÊ9 :
sql
ÊÊ: =
)
ÊÊ= >
;
ÊÊ> ?
return
ÈÈ 
	parSample
ÈÈ  
;
ÈÈ  !
}
ÏÏ 
else
ÌÌ 
if
ÌÌ 
(
ÌÌ 
	ParLevel1
ÌÌ 
.
ÌÌ 
hashKey
ÌÌ &
==
ÌÌ' )
$num
ÌÌ* +
&&
ÌÌ, .
ParCompany_Id
ÌÌ/ <
!=
ÌÌ= ?
null
ÌÌ@ D
)
ÌÌD E
{
ÓÓ 
string
 
sql
 
=
 
$str
 S
+
T U
$strÒÒ °
+ÒÒ¢ £
ParCompany_IdÒÒ§ ±
+ÒÒ≤ ≥
$strÒÒ¥ “
+ÒÒ” ‘
dateÒÒ’ Ÿ
+ÒÒ⁄ €
$strÒÒ‹ ı
+ÒÒˆ ˜
ParCompany_IdÒÒ¯ Ö
+ÒÒÜ á
$strÒÒà ß
+ÒÒ® ©
$str
ÚÚ k
+
ÚÚl m
$str
ÛÛ u
+
ÛÛv w
$str
ÙÙ u
+
ÙÙv w
$str
ıı k
+
ııl m
$str
ˆˆ u
+
ˆˆv w
$str
˜˜ k
+
˜˜l m
$str
˘˘ :
+
˘˘; <
	ParLevel1
˘˘= F
.
˘˘F G
Id
˘˘G I
+
˘˘J K
$str
˘˘L k
+
˘˘l m
$str
˙˙ k
;
˙˙k l
var
¸¸ 
	parSample
¸¸ 
=
¸¸ 
db
¸¸  "
.
¸¸" #
Query
¸¸# (
<
¸¸( )
ParLevel2Sample
¸¸) 8
>
¸¸8 9
(
¸¸9 :
sql
¸¸: =
)
¸¸= >
;
¸¸> ?
return
ˇˇ 
	parSample
ˇˇ  
;
ˇˇ  !
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
if
ÜÜ 
(
ÜÜ 
ParCompany_Id
ÜÜ !
>
ÜÜ" #
$num
ÜÜ$ %
)
ÜÜ% &
{
áá 
queryCompany
àà  
=
àà! "
$str
àà# >
+
àà? @
ParCompany_Id
ààA N
+
ààO P
$str
ààQ T
;
ààT U
}
ââ 
else
ää 
{
ãã 
queryCompany
åå  
=
åå! "
$str
åå# D
;
ååD E
}
çç 
string
èè 
sql
èè 
=
èè 
$str
èè `
+
èèa b
$str
êê j
+
êêk l
$str
ëë j
+
ëëk l
$str
íí `
+
íía b
$str
ìì j
+
ììk l
$str
îî `
+
îîa b
$str
ïï j
+
ïïk l
$str
ññ `
+
ñña b
$str
óó :
+
óó; <
	ParLevel1
óó= F
.
óóF G
Id
óóG I
+
óóJ K
$str
óóL `
+
óóa b
$str
òò 4
+
òò5 6
queryCompany
ôô )
+
ôô* +
$ströö å
+ööç é
$strõõ Å
;õõÅ Ç
var
ùù 
	parSample
ùù 
=
ùù 
db
ùù  "
.
ùù" #
Query
ùù# (
<
ùù( )
ParLevel2Sample
ùù) 8
>
ùù8 9
(
ùù9 :
sql
ùù: =
)
ùù= >
;
ùù> ?
return
üü 
	parSample
üü  
;
üü  !
}
†† 
}
°° 	
}
•• 
public
¶¶ 

partial
¶¶ 
class
¶¶ 
	ParLevel3
¶¶ "
{
ßß 
public
™™ 
int
™™ 
Id
™™ 
{
™™ 
get
™™ 
;
™™ 
set
™™  
;
™™  !
}
™™" #
public
´´ 
string
´´ 
Name
´´ 
{
´´ 
get
´´  
;
´´  !
set
´´" %
;
´´% &
}
´´' (
public
¨¨ 
int
¨¨ 
ParLevel3Group_Id
¨¨ $
{
¨¨% &
get
¨¨' *
;
¨¨* +
set
¨¨, /
;
¨¨/ 0
}
¨¨1 2
public
≠≠ 
string
≠≠ !
ParLevel3Group_Name
≠≠ )
{
≠≠* +
get
≠≠, /
;
≠≠/ 0
set
≠≠1 4
;
≠≠4 5
}
≠≠6 7
public
ÆÆ 
int
ÆÆ #
ParLevel3InputType_Id
ÆÆ (
{
ÆÆ) *
get
ÆÆ+ .
;
ÆÆ. /
set
ÆÆ0 3
;
ÆÆ3 4
}
ÆÆ5 6
public
ØØ 
string
ØØ %
ParLevel3InputType_Name
ØØ -
{
ØØ. /
get
ØØ0 3
;
ØØ3 4
set
ØØ5 8
;
ØØ8 9
}
ØØ: ;
public
∞∞ 
int
∞∞ #
ParLevel3BoolFalse_Id
∞∞ (
{
∞∞) *
get
∞∞+ .
;
∞∞. /
set
∞∞0 3
;
∞∞3 4
}
∞∞5 6
public
±± 
string
±± %
ParLevel3BoolFalse_Name
±± -
{
±±. /
get
±±0 3
;
±±3 4
set
±±5 8
;
±±8 9
}
±±: ;
public
≤≤ 
int
≤≤ "
ParLevel3BoolTrue_Id
≤≤ '
{
≤≤( )
get
≤≤* -
;
≤≤- .
set
≤≤/ 2
;
≤≤2 3
}
≤≤4 5
public
≥≥ 
string
≥≥ $
ParLevel3BoolTrue_Name
≥≥ ,
{
≥≥- .
get
≥≥/ 2
;
≥≥2 3
set
≥≥4 7
;
≥≥7 8
}
≥≥9 :
public
¥¥ 
decimal
¥¥ 
IntervalMin
¥¥ "
{
¥¥# $
get
¥¥% (
;
¥¥( )
set
¥¥* -
;
¥¥- .
}
¥¥/ 0
public
µµ 
decimal
µµ 
IntervalMax
µµ "
{
µµ# $
get
µµ% (
;
µµ( )
set
µµ* -
;
µµ- .
}
µµ/ 0
public
∂∂ 
string
∂∂ %
ParMeasurementUnit_Name
∂∂ -
{
∂∂. /
get
∂∂0 3
;
∂∂3 4
set
∂∂5 8
;
∂∂8 9
}
∂∂: ;
public
∑∑ 
decimal
∑∑ 
Weight
∑∑ 
{
∑∑ 
get
∑∑  #
;
∑∑# $
set
∑∑% (
;
∑∑( )
}
∑∑* +
public
∏∏ 
decimal
∏∏ 
PunishmentValue
∏∏ &
{
∏∏' (
get
∏∏) ,
;
∏∏, -
set
∏∏. 1
;
∏∏1 2
}
∏∏3 4
public
ππ 
decimal
ππ 
WeiEvaluation
ππ $
{
ππ% &
get
ππ' *
;
ππ* +
set
ππ, /
;
ππ/ 0
}
ππ1 2
public
∫∫ 
int
∫∫ 
ParCompany_Id
∫∫  
{
∫∫! "
get
∫∫# &
;
∫∫& '
set
∫∫( +
;
∫∫+ ,
}
∫∫- .
private
ºº 
SqlConnection
ºº 
db
ºº  
{
ºº! "
get
ºº# &
;
ºº& '
set
ºº( +
;
ºº+ ,
}
ºº- .
public
ΩΩ 
	ParLevel3
ΩΩ 
(
ΩΩ 
)
ΩΩ 
{
ΩΩ 
}
ΩΩ 
public
ææ 
	ParLevel3
ææ 
(
ææ 
SqlConnection
ææ &
_db
ææ' *
)
ææ* +
{
øø 	
db
¿¿ 
=
¿¿ 
_db
¿¿ 
;
¿¿ 
}
¡¡ 	
public
√√ 
IEnumerable
√√ 
<
√√ 
	ParLevel3
√√ $
>
√√$ %
getList
√√& -
(
√√- .
)
√√. /
{
ƒƒ 	
string
∆∆ 
sql
∆∆ 
=
∆∆ 
$str
∆∆ C
;
∆∆C D
var
«« 
parLevel3List
«« 
=
«« 
db
««  "
.
««" #
Query
««# (
<
««( )
	ParLevel3
««) 2
>
««2 3
(
««3 4
sql
««4 7
)
««7 8
;
««8 9
return
…… 
parLevel3List
……  
;
……  !
}
ÀÀ 	
public
ÕÕ 
IEnumerable
ÕÕ 
<
ÕÕ 
	ParLevel3
ÕÕ $
>
ÕÕ$ % 
getListPerLevel1Id
ÕÕ& 8
(
ÕÕ8 9
int
ÕÕ9 <
ParLevel1_Id
ÕÕ= I
)
ÕÕI J
{
ŒŒ 	
string
–– 
sql
–– 
=
–– 
$str–– Ä
+––Å Ç
ParLevel1_Id––É è
.––è ê
ToString––ê ò
(––ò ô
)––ô ö
;––ö õ
var
—— 
parLevel3List
—— 
=
—— 
db
——  "
.
——" #
Query
——# (
<
——( )
	ParLevel3
——) 2
>
——2 3
(
——3 4
sql
——4 7
)
——7 8
;
——8 9
return
”” 
parLevel3List
””  
;
””  !
}
’’ 	
public
ÿÿ 
IEnumerable
ÿÿ 
<
ÿÿ 
	ParLevel3
ÿÿ $
>
ÿÿ$ %
getLevel3ByLevel2
ÿÿ& 7
(
ÿÿ7 8
SGQDBContext
ÿÿ8 D
.
ÿÿD E
	ParLevel1
ÿÿE N
	ParLevel1
ÿÿO X
,
ÿÿX Y
SGQDBContext
ÿÿZ f
.
ÿÿf g
	ParLevel2
ÿÿg p
	ParLevel2
ÿÿq z
,
ÿÿz {
int
ÿÿ| 
ParCompany_IdÿÿÄ ç
,ÿÿç é
DateTimeÿÿè ó
DateCollectÿÿò £
)ÿÿ£ §
{
ŸŸ 	
string
ﬂﬂ 

dataInicio
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ  $
;
ﬂﬂ$ %
string
‡‡ 
dataFim
‡‡ 
=
‡‡ 
null
‡‡ !
;
‡‡! "
SyncServices
„„ 
.
„„ 
getFrequencyDate
„„ )
(
„„) *
	ParLevel2
„„* 3
.
„„3 4
ParFrequency_Id
„„4 C
,
„„C D
DateCollect
„„E P
,
„„P Q
ref
„„R U

dataInicio
„„V `
,
„„` a
ref
„„b e
dataFim
„„f m
)
„„m n
;
„„n o
string
ââ 
sql
ââ 
=
ââ 
$strââ ˙
+ââ˚ ¸
$strää §
+ää• ¶
$strãã Ñ
+ããÖ Ü
$stråå Ñ
+ååÖ Ü
$strçç ¢
+çç£ §
ParCompany_Idçç• ≤
+çç≥ ¥
$strççµ •
+çç¶ ß
$stréé Ñ
+ééÖ Ü
$strèè ˙
+èè˚ ¸
$strêê Ñ
+êêÖ Ü
$strëë ˙
+ëë˚ ¸
$stríí Ñ
+ííÖ Ü
$strìì ˙
+ìì˚ ¸
$strîî Ñ
+îîÖ Ü
$strïï ˙
+ïï˚ ¸
$strññ Ñ
+ññÖ Ü
$stróó ˙
+óó˚ ¸
$stròò Ñ
+òòÖ Ü
$strôô ˙
+ôô˚ ¸
$ströö Ñ
+ööÖ Ü
$strõõ ˙
+õõ˚ ¸
$strúú Ö
+úúÜ á
$strùù ˙
+ùù˚ ¸
$str
ûû ,
+
ûû- .
	ParLevel2
ûû/ 8
.
ûû8 9
Id
ûû9 ;
+
ûû< =
$str
ûû> B
+
ûûC D
$str
üü 8
+
üü9 :
ParCompany_Id
üü; H
+
üüI J
$str
üüK m
+
üün o
$str
†† 8
+
††9 :
ParCompany_Id
††; H
+
††I J
$str
††K m
+
††n o
$str
°° 6
+
°°7 8
	ParLevel1
°°9 B
.
°°B C
Id
°°C E
+
°°F G
$str°°H ≥
+°°¥ µ
$str
ßß (
+
ßß) *
$str
®® 6
+
®®7 8
$str
©© *
+
©©+ ,
$str
™™ *
+
™™+ ,
$str
´´ ,
+
´´- .
$str
¨¨ +
+
¨¨, -
$str
≠≠ -
+
≠≠. /
$str
ÆÆ ,
+
ÆÆ- .
$str
ØØ .
+
ØØ/ 0
$str
∞∞ >
+
∞∞? @
$str
±± .
+
±±/ 0
$str
≤≤ =
+
≤≤> ?
$str
≥≥ .
+
≥≥/ 0
$str
¥¥ 4
+
¥¥5 6
$str
µµ 4
+
µµ5 6
$str
∂∂ ,
+
∂∂- .
$str
∑∑ /
+
∑∑0 1
$str
∏∏ 6
+
∏∏7 8
$str
ππ 6
;
ππ6 7
string
¡¡ "
possuiIndicadorFilho
¡¡ '
=
¡¡( )
$str¡¡* ã
+¡¡å ç
	ParLevel1¡¡é ó
.¡¡ó ò
Id¡¡ò ö
.¡¡ö õ
ToString¡¡õ £
(¡¡£ §
)¡¡§ •
;¡¡• ¶
string
¬¬  
ParLevel1Origin_Id
¬¬ %
=
¬¬& '
$str
¬¬( *
;
¬¬* +
using
ƒƒ 
(
ƒƒ 
var
ƒƒ 
db
ƒƒ 
=
ƒƒ 
new
ƒƒ 
Dominio
ƒƒ  '
.
ƒƒ' (
SgqDbDevEntities
ƒƒ( 8
(
ƒƒ8 9
)
ƒƒ9 :
)
ƒƒ: ;
{
≈≈ 
var
∆∆ 
list
∆∆ 
=
∆∆ 
db
∆∆ 
.
∆∆ 
Database
∆∆ &
.
∆∆& '
SqlQuery
∆∆' /
<
∆∆/ 0 
ResultadoUmaColuna
∆∆0 B
>
∆∆B C
(
∆∆C D"
possuiIndicadorFilho
∆∆D X
)
∆∆X Y
.
∆∆Y Z
ToList
∆∆Z `
(
∆∆` a
)
∆∆a b
;
∆∆b c
for
»» 
(
»» 
var
»» 
i
»» 
=
»» 
$num
»» 
;
»» 
i
»»  !
<
»»" #
list
»»$ (
.
»»( )
Count
»») .
(
»». /
)
»»/ 0
;
»»0 1
i
»»2 3
++
»»3 5
)
»»5 6
{
……  
ParLevel1Origin_Id
   &
+=
  ' )
list
  * .
[
  . /
i
  / 0
]
  0 1
.
  1 2
retorno
  2 9
.
  9 :
ToString
  : B
(
  B C
)
  C D
+
  E F
$str
  G K
;
  K L
}
ÀÀ 
}
ÃÃ  
ParLevel1Origin_Id
–– 
+=
–– !
$str
––" (
;
––( )
string
““ 
sqlFilho
““ 
=
““ 
$str
““  
;
““  !
string
‘‘ 
sqlPeso
‘‘ 
=
‘‘ 
$str
‘‘ )
;
‘‘) *
if
◊◊ 
(
◊◊  
ParLevel1Origin_Id
◊◊ "
!=
◊◊# %
$str
◊◊& ,
)
◊◊, -
{
ÿÿ 
string
ŸŸ  
IndicadorFilhoPeso
ŸŸ )
=
ŸŸ* +
$strŸŸ, ñ
+ŸŸó ò
	ParLevel1ŸŸô ¢
.ŸŸ¢ £
IdŸŸ£ •
.ŸŸ• ¶
ToStringŸŸ¶ Æ
(ŸŸÆ Ø
)ŸŸØ ∞
;ŸŸ∞ ±
using
€€ 
(
€€ 
var
€€ 
db
€€ 
=
€€ 
new
€€  #
Dominio
€€$ +
.
€€+ ,
SgqDbDevEntities
€€, <
(
€€< =
)
€€= >
)
€€> ?
{
‹‹ 
var
›› 
list
›› 
=
›› 
db
›› !
.
››! "
Database
››" *
.
››* +
SqlQuery
››+ 3
<
››3 4 
ResultadoUmaColuna
››4 F
>
››F G
(
››G H 
IndicadorFilhoPeso
››H Z
)
››Z [
.
››[ \
ToList
››\ b
(
››b c
)
››c d
;
››d e
for
ﬂﬂ 
(
ﬂﬂ 
var
ﬂﬂ 
i
ﬂﬂ 
=
ﬂﬂ  
$num
ﬂﬂ! "
;
ﬂﬂ" #
i
ﬂﬂ$ %
<
ﬂﬂ& '
list
ﬂﬂ( ,
.
ﬂﬂ, -
Count
ﬂﬂ- 2
(
ﬂﬂ2 3
)
ﬂﬂ3 4
;
ﬂﬂ4 5
i
ﬂﬂ6 7
++
ﬂﬂ7 9
)
ﬂﬂ9 :
{
‡‡  
IndicadorFilhoPeso
·· *
=
··+ ,
list
··- 1
[
··1 2
i
··2 3
]
··3 4
.
··4 5
retorno
··5 <
.
··< =
ToString
··= E
(
··E F
)
··F G
;
··G H
}
‚‚ 
}
„„ 
if
ÂÂ 
(
ÂÂ  
IndicadorFilhoPeso
ÂÂ &
==
ÂÂ' )
$str
ÂÂ* -
)
ÂÂ- .
{
ÊÊ 
sqlPeso
ÁÁ 
=
ÁÁ 
$str
ÁÁ !
;
ÁÁ! "
}
ËË 
string
ÍÍ 
ParLevel1_IdFilho
ÍÍ (
=
ÍÍ) *
$str
ÍÍ+ H
+
ÍÍI J 
ParLevel1Origin_Id
ÍÍK ]
+
ÍÍ^ _
$str
ÍÍ` c
;
ÍÍc d
sqlFilho
ÏÏ 
=
ÏÏ 
$strÏÏ É
+ÏÏÑ Ö
$str
ÌÌ ~
+ÌÌ Ä
sqlPesoÌÌÅ à
+ÌÌâ ä
$strÌÌã °
+ÌÌ¢ £
$strÓÓ Ä
+ÓÓÅ Ç
$strÔÔ Ä
+ÔÔÅ Ç
$str û
+ü †
ParCompany_Id° Æ
+Ø ∞
$str± °
+¢ £
$strÒÒ Ä
+ÒÒÅ Ç
$strÚÚ ˆ
+ÚÚ˜ ¯
$strÛÛ Ä
+ÛÛÅ Ç
$strÙÙ ˆ
+ÙÙ˜ ¯
$strıı Ä
+ııÅ Ç
$strˆˆ ˆ
+ˆˆ˜ ¯
$str˜˜ Ä
+˜˜Å Ç
$str¯¯ ˆ
+¯¯˜ ¯
$str˘˘ Ä
+˘˘Å Ç
$str˙˙ ˆ
+˙˙˜ ¯
$str˚˚ Ä
+˚˚Å Ç
$str¸¸ ˆ
+¸¸˜ ¯
$str˝˝ Ä
+˝˝Å Ç
$str˛˛ ˆ
+˛˛˜ ¯
$strˇˇ Å
+ˇˇÇ É
$strÄÄ ˆ
+ÄÄ˜ ¯
$str
ÇÇ 4
+
ÇÇ5 6
ParCompany_Id
ÇÇ7 D
+
ÇÇE F
$str
ÇÇG i
+
ÇÇj k
$str
ÉÉ 4
+
ÉÉ5 6
ParCompany_Id
ÉÉ7 D
+
ÉÉE F
$str
ÉÉG i
+
ÉÉj k
ParLevel1_IdFilho
ÑÑ )
+
ÑÑ* +
$str
ää $
+
ää% &
$str
ãã "
+
ãã# $
$str
åå 
+
åå 
$str
çç 
+
çç 
$str
éé 
+
éé 
$str
èè 
+
èè 
$str
êê 
+
êê 
$str
ëë 
+
ëë 
$str
íí 
+
íí 
$str
ìì *
+
ìì+ ,
$str
îî 
+
îî 
$str
ïï )
+
ïï* +
$str
ññ 
+
ññ 
$str
óó  
+
óó! "
$str
òò  
+
òò! "
$str
ôô 
+
ôô 
$str
öö 
+
öö 
$str
õõ %
+
õõ& '
$str
úú "
;
úú" #
}
†† 
sql
¢¢ 
+=
¢¢ 
sqlFilho
¢¢ 
;
¢¢ 
sql
§§ 
+=
§§ 
$str
§§ J
;
§§J K
var
¶¶ 
parLevel3List
¶¶ 
=
¶¶ 
db
¶¶  "
.
¶¶" #
Query
¶¶# (
<
¶¶( )
	ParLevel3
¶¶) 2
>
¶¶2 3
(
¶¶3 4
sql
¶¶4 7
)
¶¶7 8
;
¶¶8 9
return
®® 
parLevel3List
®®  
;
®®  !
}
©© 	
public
≤≤ 
IEnumerable
≤≤ 
<
≤≤ 
	ParLevel3
≤≤ $
>
≤≤$ %
getLevel3InLevel2
≤≤& 7
(
≤≤7 8
SGQDBContext
≤≤8 D
.
≤≤D E
	ParLevel1
≤≤E N
	ParLevel1
≤≤O X
,
≤≤X Y
SGQDBContext
≤≤Z f
.
≤≤f g
	ParLevel2
≤≤g p
	ParLevel2
≤≤q z
,
≤≤z {
int
≤≤| 
ParCompany_Id≤≤Ä ç
,≤≤ç é
DateTime≤≤è ó
DateCollect≤≤ò £
)≤≤£ §
{
≥≥ 	
try
¥¥ 
{
µµ 
string
ππ 

dataInicio
ππ !
=
ππ" #
null
ππ$ (
;
ππ( )
string
∫∫ 
dataFim
∫∫ 
=
∫∫  
null
∫∫! %
;
∫∫% &
SyncServices
ΩΩ 
.
ΩΩ 
getFrequencyDate
ΩΩ -
(
ΩΩ- .
	ParLevel2
ΩΩ. 7
.
ΩΩ7 8
ParFrequency_Id
ΩΩ8 G
,
ΩΩG H
DateCollect
ΩΩI T
,
ΩΩT U
ref
ΩΩV Y

dataInicio
ΩΩZ d
,
ΩΩd e
ref
ΩΩf i
dataFim
ΩΩj q
)
ΩΩq r
;
ΩΩr s
string
√√ 
sql
√√ 
=
√√ 
$str
√√ &
+
√√' (
$str
ƒƒ 5
+
ƒƒ6 7
$str
≈≈ B
+
≈≈C D
$str
∆∆ A
+
∆∆B C
$str
«« S
+
««T U
$str
»» E
+
»»F G
$str
…… A
+
……B C
$str
   2
+
  3 4
ParCompany_Id
  5 B
+
  C D
$str
  E T
+
  U V
	ParLevel1
  W `
.
  ` a
Id
  a c
+
  d e
$str
  f 
+  Ä Å
	ParLevel2  Ç ã
.  ã å
Id  å é
+  è ê
$str  ë ¥
+  µ ∂

dataInicio  ∑ ¡
+  ¬ √
$str  ƒ ÷
+  ◊ ÿ
dataFim  Ÿ ‡
+  · ‚
$str  „ 
;   Ò
var
ÂÂ 
parLevel3List
ÂÂ !
=
ÂÂ" #
db
ÂÂ$ &
.
ÂÂ& '
Query
ÂÂ' ,
<
ÂÂ, -
	ParLevel3
ÂÂ- 6
>
ÂÂ6 7
(
ÂÂ7 8
sql
ÂÂ8 ;
)
ÂÂ; <
;
ÂÂ< =
return
ÁÁ 
parLevel3List
ÁÁ $
;
ÁÁ$ %
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
ex
ÍÍ 
)
ÍÍ  
{
ÎÎ 
throw
ÏÏ 
ex
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
}
ÔÔ 
public
ÒÒ 

partial
ÒÒ 
class
ÒÒ 
Level2Result
ÒÒ %
{
ÚÚ 
public
ıı 
int
ıı 
Id
ıı 
{
ıı 
get
ıı 
;
ıı 
set
ıı  
;
ıı  !
}
ıı" #
public
ˆˆ 
string
ˆˆ 
Key
ˆˆ 
{
ˆˆ 
get
ˆˆ 
;
ˆˆ  
set
ˆˆ! $
;
ˆˆ$ %
}
ˆˆ& '
public
˜˜ 
int
˜˜ 
ParLevel1_Id
˜˜ 
{
˜˜  !
get
˜˜" %
;
˜˜% &
set
˜˜' *
;
˜˜* +
}
˜˜, -
public
¯¯ 
int
¯¯ 
ParLevel2_Id
¯¯ 
{
¯¯  !
get
¯¯" %
;
¯¯% &
set
¯¯' *
;
¯¯* +
}
¯¯, -
public
˘˘ 
int
˘˘ 
Unit_Id
˘˘ 
{
˘˘ 
get
˘˘  
;
˘˘  !
set
˘˘" %
;
˘˘% &
}
˘˘' (
public
˙˙ 
int
˙˙ 
Shift
˙˙ 
{
˙˙ 
get
˙˙ 
;
˙˙ 
set
˙˙  #
;
˙˙# $
}
˙˙% &
public
˚˚ 
int
˚˚ 
Period
˚˚ 
{
˚˚ 
get
˚˚ 
;
˚˚  
set
˚˚! $
;
˚˚$ %
}
˚˚& '
public
¸¸ 
DateTime
¸¸ 
CollectionDate
¸¸ &
{
¸¸' (
get
¸¸) ,
;
¸¸, -
set
¸¸. 1
;
¸¸1 2
}
¸¸3 4
public
˝˝ 
int
˝˝ 
EvaluateLast
˝˝ 
{
˝˝  !
get
˝˝" %
;
˝˝% &
set
˝˝' *
;
˝˝* +
}
˝˝, -
public
˛˛ 
int
˛˛ 

SampleLast
˛˛ 
{
˛˛ 
get
˛˛  #
;
˛˛# $
set
˛˛% (
;
˛˛( )
}
˛˛* +
public
ˇˇ 
int
ˇˇ $
ConsolidationLevel2_Id
ˇˇ )
{
ˇˇ* +
get
ˇˇ, /
;
ˇˇ/ 0
set
ˇˇ1 4
;
ˇˇ4 5
}
ˇˇ6 7
private
É	É	 
SqlConnection
É	É	 
db
É	É	  
{
É	É	! "
get
É	É	# &
;
É	É	& '
set
É	É	( +
;
É	É	+ ,
}
É	É	- .
public
Ñ	Ñ	 
Level2Result
Ñ	Ñ	 
(
Ñ	Ñ	 
)
Ñ	Ñ	 
{
Ñ	Ñ	 
}
Ñ	Ñ	  !
public
Ö	Ö	 
Level2Result
Ö	Ö	 
(
Ö	Ö	 
SqlConnection
Ö	Ö	 )
_db
Ö	Ö	* -
)
Ö	Ö	- .
{
Ü	Ü	 	
db
á	á	 
=
á	á	 
_db
á	á	 
;
á	á	 
}
à	à	 	
public
ä	ä	 
IEnumerable
ä	ä	 
<
ä	ä	 
Level2Result
ä	ä	 '
>
ä	ä	' (
getList
ä	ä	) 0
(
ä	ä	0 1
int
ä	ä	1 4
ParLevel1_Id
ä	ä	5 A
,
ä	ä	A B
int
ä	ä	C F
ParCompany_Id
ä	ä	G T
,
ä	ä	T U
string
ä	ä	V \

dataInicio
ä	ä	] g
,
ä	ä	g h
string
ä	ä	i o
dataFim
ä	ä	p w
)
ä	ä	w x
{
ã	ã	 	
string
ê	ê	 
sql
ê	ê	 
=
ê	ê	 
$strê	ê	 Ë
+ê	ê	È Í
$strë	ë	 ˆ
+ë	ë	˜ ¯
$str
í	í	 ?
+
í	í	@ A
$str
ì	ì	 q
+
ì	ì	r s
$str
î	î	 r
+
î	î	s t
$str
ï	ï	 6
+
ï	ï	7 8
ParLevel1_Id
ï	ï	9 E
+
ï	ï	F G
$str
ï	ï	H _
+
ï	ï	` a
ParCompany_Id
ï	ï	b o
+
ï	ï	p q
$strï	ï	r ö
+ï	ï	õ ú

dataInicioï	ï	ù ß
+ï	ï	® ©
$strï	ï	™ º
+ï	ï	Ω æ
dataFimï	ï	ø ∆
+ï	ï	« »
$strï	ï	… ◊
+ï	ï	ÿ Ÿ
$strñ	ñ	 ¿
+ñ	ñ	¡ ¬
$str
ó	ó	 ~
;
ó	ó	~ 
var
ö	ö	 
Level2ResultList
ö	ö	  
=
ö	ö	! "
db
ö	ö	# %
.
ö	ö	% &
Query
ö	ö	& +
<
ö	ö	+ ,
Level2Result
ö	ö	, 8
>
ö	ö	8 9
(
ö	ö	9 :
sql
ö	ö	: =
)
ö	ö	= >
;
ö	ö	> ?
return
ú	ú	 
Level2ResultList
ú	ú	 #
;
ú	ú	# $
}
û	û	 	
public
ü	ü	 
int
ü	ü	 
getMaxSampe
ü	ü	 
(
ü	ü	 
int
ü	ü	 "$
ConsolidationLevel2_Id
ü	ü	# 9
,
ü	ü	9 :
int
ü	ü	; >
EvaluationNumber
ü	ü	? O
)
ü	ü	O P
{
†	†	 	
try
°	°	 
{
¢	¢	 
string
¶	¶	 
sql
¶	¶	 
=
¶	¶	 
$str
¶	¶	 q
+
¶	¶	r s%
ConsolidationLevel2_Id¶	¶	t ä
+¶	¶	ã å
$str¶	¶	ç ß
+¶	¶	® © 
EvaluationNumber¶	¶	™ ∫
;¶	¶	∫ ª
var
ß	ß	 

LastSample
ß	ß	 
=
ß	ß	  
db
ß	ß	! #
.
ß	ß	# $
Query
ß	ß	$ )
<
ß	ß	) *
int
ß	ß	* -
>
ß	ß	- .
(
ß	ß	. /
sql
ß	ß	/ 2
)
ß	ß	2 3
.
ß	ß	3 4
FirstOrDefault
ß	ß	4 B
(
ß	ß	B C
)
ß	ß	C D
;
ß	ß	D E
return
®	®	 

LastSample
®	®	 !
;
®	®	! "
}
©	©	 
catch
™	™	 
(
™	™	 
	Exception
™	™	 
ex
™	™	 
)
™	™	  
{
´	´	 
return
¨	¨	 
$num
¨	¨	 
;
¨	¨	 
throw
≠	≠	 
ex
≠	≠	 
;
≠	≠	 
}
Æ	Æ	 
}
Ø	Ø	 	
public
∞	∞	 
IEnumerable
∞	∞	 
<
∞	∞	 
Level2Result
∞	∞	 '
>
∞	∞	' (
getKeys
∞	∞	) 0
(
∞	∞	0 1
int
∞	∞	1 4
ParLevel1_Id
∞	∞	5 A
,
∞	∞	A B
int
∞	∞	C F
ParCompany_Id
∞	∞	G T
,
∞	∞	T U
string
∞	∞	V \

dataInicio
∞	∞	] g
,
∞	∞	g h
string
∞	∞	i o
dataFim
∞	∞	p w
)
∞	∞	w x
{
±	±	 	
string
µ	µ	 
sql
µ	µ	 
=
µ	µ	 
$strµ	µ	 π
+µ	µ	∫ ª
$str
∂	∂	 ?
+
∂	∂	@ A
$str
∑	∑	 5
+
∑	∑	6 7
ParLevel1_Id
∑	∑	8 D
+
∑	∑	E F
$str
∑	∑	G ]
+
∑	∑	^ _
ParCompany_Id
∑	∑	` m
+
∑	∑	n o
$str∑	∑	p î
+∑	∑	ï ñ

dataInicio∑	∑	ó °
+∑	∑	¢ £
$str∑	∑	§ ∂
+∑	∑	∑ ∏
dataFim∑	∑	π ¿
+∑	∑	¡ ¬
$str∑	∑	√ –
;∑	∑	– —
var
∏	∏	 
Level2ResultList
∏	∏	  
=
∏	∏	! "
db
∏	∏	# %
.
∏	∏	% &
Query
∏	∏	& +
<
∏	∏	+ ,
Level2Result
∏	∏	, 8
>
∏	∏	8 9
(
∏	∏	9 :
sql
∏	∏	: =
)
∏	∏	= >
;
∏	∏	> ?
return
π	π	 
Level2ResultList
π	π	 #
;
π	π	# $
}
∫	∫	 	
}
º	º	 
public
ø	ø	 

partial
ø	ø	 
class
ø	ø	 1
#ParLevel1ConsolidationXParFrequency
ø	ø	 <
{
¿	¿	 
public
√	√	 
int
√	√	 
ParLevel1_Id
√	√	 
{
√	√	  !
get
√	√	" %
;
√	√	% &
set
√	√	' *
;
√	√	* +
}
√	√	, -
public
ƒ	ƒ	 
int
ƒ	ƒ	 
ParFrequency_Id
ƒ	ƒ	 "
{
ƒ	ƒ	# $
get
ƒ	ƒ	% (
;
ƒ	ƒ	( )
set
ƒ	ƒ	* -
;
ƒ	ƒ	- .
}
ƒ	ƒ	/ 0
public
≈	≈	 
bool
≈	≈	 
IsPartialSave
≈	≈	 !
{
≈	≈	" #
get
≈	≈	$ '
;
≈	≈	' (
set
≈	≈	) ,
;
≈	≈	, -
}
≈	≈	. /
public
∆	∆	 
int
∆	∆	 
Id
∆	∆	 
{
∆	∆	 
get
∆	∆	 
;
∆	∆	 
set
∆	∆	  
;
∆	∆	  !
}
∆	∆	" #
private
»	»	 
SqlConnection
»	»	 
db
»	»	  
{
»	»	! "
get
»	»	# &
;
»	»	& '
set
»	»	( +
;
»	»	+ ,
}
»	»	- .
public
…	…	 1
#ParLevel1ConsolidationXParFrequency
…	…	 2
(
…	…	2 3
)
…	…	3 4
{
…	…	5 6
}
…	…	7 8
public
 	 	 1
#ParLevel1ConsolidationXParFrequency
 	 	 2
(
 	 	2 3
SqlConnection
 	 	3 @
_db
 	 	A D
)
 	 	D E
{
À	À	 	
db
Ã	Ã	 
=
Ã	Ã	 
_db
Ã	Ã	 
;
Ã	Ã	 
}
Õ	Õ	 	
public
œ	œ	 
IEnumerable
œ	œ	 
<
œ	œ	 1
#ParLevel1ConsolidationXParFrequency
œ	œ	 >
>
œ	œ	> ?
getList
œ	œ	@ G
(
œ	œ	G H
int
œ	œ	H K
ParCompany_Id
œ	œ	L Y
,
œ	œ	Y Z
DateTime
œ	œ	[ c
data
œ	œ	d h
)
œ	œ	h i
{
–	–	 	
try
—	—	 
{
“	“	 
DateTime
’	’	 
data_ini
’	’	 !
=
’	’	" #
new
’	’	$ '
DateTime
’	’	( 0
(
’	’	0 1
data
’	’	1 5
.
’	’	5 6
Year
’	’	6 :
,
’	’	: ;
data
’	’	< @
.
’	’	@ A
Month
’	’	A F
,
’	’	F G
$num
’	’	H I
)
’	’	I J
;
’	’	J K
DateTime
÷	÷	 
data_fim
÷	÷	 !
=
÷	÷	" #
new
÷	÷	$ '
DateTime
÷	÷	( 0
(
÷	÷	0 1
data
÷	÷	1 5
.
÷	÷	5 6
Year
÷	÷	6 :
,
÷	÷	: ;
data
÷	÷	< @
.
÷	÷	@ A
Month
÷	÷	A F
,
÷	÷	F G
DateTime
÷	÷	H P
.
÷	÷	P Q
DaysInMonth
÷	÷	Q \
(
÷	÷	\ ]
data
÷	÷	] a
.
÷	÷	a b
Year
÷	÷	b f
,
÷	÷	f g
data
÷	÷	h l
.
÷	÷	l m
Month
÷	÷	m r
)
÷	÷	r s
)
÷	÷	s t
;
÷	÷	t u
string
Ÿ	Ÿ	 
sql
Ÿ	Ÿ	 
=
Ÿ	Ÿ	 
$strŸ	Ÿ	 ë
+Ÿ	Ÿ	í ì
$str
⁄	⁄	 u
+
⁄	⁄	v w
ParCompany_Id⁄	⁄	x Ö
+⁄	⁄	Ü á
$str⁄	⁄	à ã
+⁄	⁄	å ç
$str
€	€	 D
+
€	€	E F
data_ini
€	€	G O
.
€	€	O P
ToString
€	€	P X
(
€	€	X Y
$str
€	€	Y c
)
€	€	c d
+
€	€	e f
$str
€	€	g v
+
€	€	w x
data_fim€	€	y Å
.€	€	Å Ç
ToString€	€	Ç ä
(€	€	ä ã
$str€	€	ã ï
)€	€	ï ñ
+€	€	ó ò
$str€	€	ô ¢
+€	€	£ §
$str
‹	‹	 4
+
‹	‹	5 6
$str
›	›	 l
;
›	›	l m
var
ﬂ	ﬂ	 
consolidation
ﬂ	ﬂ	 !
=
ﬂ	ﬂ	" #
db
ﬂ	ﬂ	$ &
.
ﬂ	ﬂ	& '
Query
ﬂ	ﬂ	' ,
<
ﬂ	ﬂ	, -1
#ParLevel1ConsolidationXParFrequency
ﬂ	ﬂ	- P
>
ﬂ	ﬂ	P Q
(
ﬂ	ﬂ	Q R
sql
ﬂ	ﬂ	R U
)
ﬂ	ﬂ	U V
;
ﬂ	ﬂ	V W
return
·	·	 
consolidation
·	·	 $
;
·	·	$ %
}
‚	‚	 
catch
„	„	 
(
„	„	 
	Exception
„	„	 
ex
„	„	 
)
„	„	  
{
‰	‰	 
throw
Ê	Ê	 
ex
Ê	Ê	 
;
Ê	Ê	 
}
Á	Á	 
}
Ë	Ë	 	
}
Í	Í	 
public
Î	Î	 

partial
Î	Î	 
class
Î	Î	 %
ConsolidationResultL1L2
Î	Î	 0
{
Ï	Ï	 
public
Ô	Ô	 
int
Ô	Ô	 
AlertLevelL1
Ô	Ô	 
{
Ô	Ô	  !
get
Ô	Ô	" %
;
Ô	Ô	% &
set
Ô	Ô	' *
;
Ô	Ô	* +
}
Ô	Ô	, -
public
		 
decimal
		 
WeiEvaluationL1
		 &
{
		' (
get
		) ,
;
		, -
set
		. 1
;
		1 2
}
		3 4
public
Ò	Ò	 
decimal
Ò	Ò	 
EvaluateTotalL1
Ò	Ò	 &
{
Ò	Ò	' (
get
Ò	Ò	) ,
;
Ò	Ò	, -
set
Ò	Ò	. 1
;
Ò	Ò	1 2
}
Ò	Ò	3 4
public
Ú	Ú	 
decimal
Ú	Ú	 
DefectsTotalL1
Ú	Ú	 %
{
Ú	Ú	& '
get
Ú	Ú	( +
;
Ú	Ú	+ ,
set
Ú	Ú	- 0
;
Ú	Ú	0 1
}
Ú	Ú	2 3
public
Û	Û	 
decimal
Û	Û	 
WeiDefectsL1
Û	Û	 #
{
Û	Û	$ %
get
Û	Û	& )
;
Û	Û	) *
set
Û	Û	+ .
;
Û	Û	. /
}
Û	Û	0 1
public
Ù	Ù	 
decimal
Ù	Ù	 %
TotalLevel3EvaluationL1
Ù	Ù	 .
{
Ù	Ù	/ 0
get
Ù	Ù	1 4
;
Ù	Ù	4 5
set
Ù	Ù	6 9
;
Ù	Ù	9 :
}
Ù	Ù	; <
public
ı	ı	 
decimal
ı	ı	 &
TotalLevel3WithDefectsL1
ı	ı	 /
{
ı	ı	0 1
get
ı	ı	2 5
;
ı	ı	5 6
set
ı	ı	7 :
;
ı	ı	: ;
}
ı	ı	< =
public
ˆ	ˆ	 
int
ˆ	ˆ	 #
LastEvaluationAlertL1
ˆ	ˆ	 (
{
ˆ	ˆ	) *
get
ˆ	ˆ	+ .
;
ˆ	ˆ	. /
set
ˆ	ˆ	0 3
;
ˆ	ˆ	3 4
}
ˆ	ˆ	5 6
public
˜	˜	 
int
˜	˜	 
LastLevel2AlertL1
˜	˜	 $
{
˜	˜	% &
get
˜	˜	' *
;
˜	˜	* +
set
˜	˜	, /
;
˜	˜	/ 0
}
˜	˜	1 2
public
˙	˙	 
int
˙	˙	 
AlertLevelL2
˙	˙	 
{
˙	˙	  !
get
˙	˙	" %
;
˙	˙	% &
set
˙	˙	' *
;
˙	˙	* +
}
˙	˙	, -
public
¸	¸	 
decimal
¸	¸	 
WeiEvaluationL2
¸	¸	 &
{
¸	¸	' (
get
¸	¸	) ,
;
¸	¸	, -
set
¸	¸	. 1
;
¸	¸	1 2
}
¸	¸	3 4
public
˝	˝	 
decimal
˝	˝	 
	DefectsL2
˝	˝	  
{
˝	˝	! "
get
˝	˝	# &
;
˝	˝	& '
set
˝	˝	( +
;
˝	˝	+ ,
}
˝	˝	- .
public
˛	˛	 
decimal
˛	˛	 
WeiDefectsL2
˛	˛	 #
{
˛	˛	$ %
get
˛	˛	& )
;
˛	˛	) *
set
˛	˛	+ .
;
˛	˛	. /
}
˛	˛	0 1
public
ˇ	ˇ	 
int
ˇ	ˇ	 &
TotalLevel3WithDefectsL2
ˇ	ˇ	 +
{
ˇ	ˇ	, -
get
ˇ	ˇ	. 1
;
ˇ	ˇ	1 2
set
ˇ	ˇ	3 6
;
ˇ	ˇ	6 7
}
ˇ	ˇ	8 9
public
Ä
Ä
 
int
Ä
Ä
 %
TotalLevel3EvaluationL2
Ä
Ä
 *
{
Ä
Ä
+ ,
get
Ä
Ä
- 0
;
Ä
Ä
0 1
set
Ä
Ä
2 5
;
Ä
Ä
5 6
}
Ä
Ä
7 8
public
Ç
Ç
 
int
Ç
Ç
 
EvaluatedResultL1
Ç
Ç
 $
{
Ç
Ç
% &
get
Ç
Ç
' *
;
Ç
Ç
* +
set
Ç
Ç
, /
;
Ç
Ç
/ 0
}
Ç
Ç
1 2
public
É
É
 
int
É
É
 
DefectsResultL1
É
É
 "
{
É
É
# $
get
É
É
% (
;
É
É
( )
set
É
É
* -
;
É
É
- .
}
É
É
/ 0
public
Ö
Ö
 
int
Ö
Ö
 
EvaluateTotalL2
Ö
Ö
 "
{
Ö
Ö
# $
get
Ö
Ö
% (
;
Ö
Ö
( )
set
Ö
Ö
* -
;
Ö
Ö
- .
}
Ö
Ö
/ 0
public
Ü
Ü
 
int
Ü
Ü
 
DefectsTotalL2
Ü
Ü
 !
{
Ü
Ü
" #
get
Ü
Ü
$ '
;
Ü
Ü
' (
set
Ü
Ü
) ,
;
Ü
Ü
, -
}
Ü
Ü
. /
public
à
à
 
int
à
à
 
EvaluatedResultL2
à
à
 $
{
à
à
% &
get
à
à
' *
;
à
à
* +
set
à
à
, /
;
à
à
/ 0
}
à
à
1 2
public
â
â
 
int
â
â
 
DefectsResultL2
â
â
 "
{
â
â
# $
get
â
â
% (
;
â
â
( )
set
â
â
* -
;
â
â
- .
}
â
â
/ 0
public
ä
ä
 
bool
ä
ä
 "
haveCorrectiveAction
ä
ä
 (
{
ä
ä
) *
get
ä
ä
+ .
;
ä
ä
. /
set
ä
ä
0 3
;
ä
ä
3 4
}
ä
ä
5 6
public
ã
ã
 
bool
ã
ã
 
haveReaudit
ã
ã
 
{
ã
ã
  !
get
ã
ã
" %
;
ã
ã
% &
set
ã
ã
' *
;
ã
ã
* +
}
ã
ã
, -
public
å
å
 
int
å
å
 
ReauditLevel
å
å
 
{
å
å
  !
get
å
å
" %
;
å
å
% &
set
å
å
' *
;
å
å
* +
}
å
å
, -
public
ç
ç
 
int
ç
ç
 
ReauditNumber
ç
ç
  
{
ç
ç
! "
get
ç
ç
# &
;
ç
ç
& '
set
ç
ç
( +
;
ç
ç
+ ,
}
ç
ç
- .
public
é
é
 
bool
é
é
 
	IsReaudit
é
é
 
{
é
é
 
get
é
é
  #
;
é
é
# $
set
é
é
% (
;
é
é
( )
}
é
é
* +
public
è
è
 
int
è
è
 2
$CollectionLevel2_ID_CorrectiveAction
è
è
 7
{
è
è
8 9
get
è
è
: =
;
è
è
= >
set
è
è
? B
;
è
è
B C
}
è
è
D E
public
ê
ê
 
int
ê
ê
 6
(CollectionLevel2_Period_CorrectiveAction
ê
ê
 ;
{
ê
ê
< =
get
ê
ê
> A
;
ê
ê
A B
set
ê
ê
C F
;
ê
ê
F G
}
ê
ê
H I
public
ë
ë
 
int
ë
ë
 "
More3DefectsEvaluate
ë
ë
 '
{
ë
ë
( )
get
ë
ë
* -
;
ë
ë
- .
set
ë
ë
/ 2
;
ë
ë
2 3
}
ë
ë
4 5
public
í
í
 
int
í
í
 
Phase
í
í
 
{
í
í
 
get
í
í
 
;
í
í
 
set
í
í
  #
;
í
í
# $
}
í
í
% &
public
ì
ì
 
DateTime
ì
ì
 
StartPhaseDate
ì
ì
 &
{
ì
ì
' (
get
ì
ì
) ,
;
ì
ì
, -
set
ì
ì
. 1
;
ì
ì
1 2
}
ì
ì
3 4
public
î
î
 
int
î
î
 "
StartPhaseEvaluation
î
î
 '
{
î
î
( )
get
î
î
* -
;
î
î
- .
set
î
î
/ 2
;
î
î
2 3
}
î
î
4 5
private
ï
ï
 
SqlConnection
ï
ï
 
db
ï
ï
  
{
ï
ï
! "
get
ï
ï
# &
;
ï
ï
& '
set
ï
ï
( +
;
ï
ï
+ ,
}
ï
ï
- .
public
ñ
ñ
 %
ConsolidationResultL1L2
ñ
ñ
 &
(
ñ
ñ
& '
)
ñ
ñ
' (
{
ñ
ñ
) *
}
ñ
ñ
+ ,
public
ó
ó
 %
ConsolidationResultL1L2
ó
ó
 &
(
ó
ó
& '
SqlConnection
ó
ó
' 4
_db
ó
ó
5 8
)
ó
ó
8 9
{
ò
ò
 	
db
ô
ô
 
=
ô
ô
 
_db
ô
ô
 
;
ô
ô
 
}
ö
ö
 	
public
ú
ú
 %
ConsolidationResultL1L2
ú
ú
 &
getConsolidation
ú
ú
' 7
(
ú
ú
7 8
int
ú
ú
8 ;
ParLevel2_Id
ú
ú
< H
,
ú
ú
H I
int
ú
ú
J M
ParCompany_Id
ú
ú
N [
,
ú
ú
[ \
int
ú
ú
] `
?
ú
ú
` a
Id
ú
ú
b d
)
ú
ú
d e
{
ù
ù
 	
var
†
†
 
sql2
†
†
 
=
†
†
 
$str
†
†
 
;
†
†
 
if
¢
¢
 
(
¢
¢
 
Id
¢
¢
 
!=
¢
¢
 
null
¢
¢
 
)
¢
¢
 
{
£
£
 
sql2
§
§
 
=
§
§
 
$str
§
§
 (
+
§
§
) *
Id
§
§
+ -
;
§
§
- .
}
•
•
 
string
ß
ß
 
sql
ß
ß
 
=
ß
ß
 
$str
ß
ß
 "
+
ß
ß
# $
$str®
®
 
+®
®
Ò Ú
$str©
©
 √
+©
©
ƒ ≈
$str
™
™
 F
+
™
™
G H
$str
´
´
 &
+
´
´
' (
$str
¨
¨
 j
+
¨
¨
k l
$str
≠
≠
 %
+
≠
≠
& '
$strÆ
Æ
 ¨
+Æ
Æ
≠ Æ
$str
Ø
Ø
 5
+
Ø
Ø
6 7
ParLevel2_Id
Ø
Ø
8 D
+
Ø
Ø
E F
$str
Ø
Ø
G ^
+
Ø
Ø
_ `
ParCompany_Id
Ø
Ø
a n
+
Ø
Ø
o p
$str
Ø
Ø
q u
+
Ø
Ø
v w
sql2
±
±
 
+
±
±
 
$str≥
≥
 Ï
;≥
≥
Ï Ì
var
µ
µ
 
consolidation
µ
µ
 
=
µ
µ
 
db
µ
µ
  "
.
µ
µ
" #
Query
µ
µ
# (
<
µ
µ
( )%
ConsolidationResultL1L2
µ
µ
) @
>
µ
µ
@ A
(
µ
µ
A B
sql
µ
µ
B E
)
µ
µ
E F
.
µ
µ
F G
FirstOrDefault
µ
µ
G U
(
µ
µ
U V
)
µ
µ
V W
;
µ
µ
W X
return
∑
∑
 
consolidation
∑
∑
  
;
∑
∑
  !
}
∏
∏
 	
}
π
π
 
public
ª
ª
 

partial
ª
ª
 
class
ª
ª
 
ParLevelHeader
ª
ª
 '
{
º
º
 
public
ø
ø
 
int
ø
ø
 
ParHeaderField_Id
ø
ø
 $
{
ø
ø
% &
get
ø
ø
' *
;
ø
ø
* +
set
ø
ø
, /
;
ø
ø
/ 0
}
ø
ø
1 2
public
¿
¿
 
string
¿
¿
 !
ParHeaderField_Name
¿
¿
 )
{
¿
¿
* +
get
¿
¿
, /
;
¿
¿
/ 0
set
¿
¿
1 4
;
¿
¿
4 5
}
¿
¿
6 7
public
¡
¡
 
string
¡
¡
 (
ParHeaderField_Description
¡
¡
 0
{
¡
¡
1 2
get
¡
¡
3 6
;
¡
¡
6 7
set
¡
¡
8 ;
;
¡
¡
; <
}
¡
¡
= >
public
¬
¬
 
int
¬
¬
 
ParFieldType_Id
¬
¬
 "
{
¬
¬
# $
get
¬
¬
% (
;
¬
¬
( )
set
¬
¬
* -
;
¬
¬
- .
}
¬
¬
/ 0
public
√
√
 
int
√
√
 

IsRequired
√
√
 
{
√
√
 
get
√
√
  #
;
√
√
# $
set
√
√
% (
;
√
√
( )
}
√
√
* +
private
≈
≈
 
SqlConnection
≈
≈
 
db
≈
≈
  
{
≈
≈
! "
get
≈
≈
# &
;
≈
≈
& '
set
≈
≈
( +
;
≈
≈
+ ,
}
≈
≈
- .
public
∆
∆
 
ParLevelHeader
∆
∆
 
(
∆
∆
 
)
∆
∆
 
{
∆
∆
  !
}
∆
∆
" #
public
«
«
 
ParLevelHeader
«
«
 
(
«
«
 
SqlConnection
«
«
 +
_db
«
«
, /
)
«
«
/ 0
{
»
»
 	
db
…
…
 
=
…
…
 
_db
…
…
 
;
…
…
 
}
 
 
 	
public
Ã
Ã
 
IEnumerable
Ã
Ã
 
<
Ã
Ã
 
ParLevelHeader
Ã
Ã
 )
>
Ã
Ã
) *
getHeaderByLevel1
Ã
Ã
+ <
(
Ã
Ã
< =
int
Ã
Ã
= @
ParLevel1_Id
Ã
Ã
A M
)
Ã
Ã
M N
{
Õ
Õ
 	
string
–
–
 
sql
–
–
 
=
–
–
 
$str–
–
 Î
+–
–
Ï Ì
$str—
—
 ‰
+—
—
Â Ê
$str“
“
 ‰
+“
“
Â Ê
$str”
”
 ‰
+”
”
Â Ê
$str‘
‘
 ⁄
+‘
‘
€ ‹
$str’
’
 ⁄
+’
’
€ ‹
$str
÷
÷
 -
+
÷
÷
. /
ParLevel1_Id
÷
÷
0 <
+
÷
÷
= >
$str÷
÷
? ⁄
+÷
÷
€ ‹
$str◊
◊
 ⁄
+◊
◊
€ ‹
$strÿ
ÿ
 ’
;ÿ
ÿ
’ ÷
var
‹
‹
 
parLevel3List
‹
‹
 
=
‹
‹
 
db
‹
‹
  "
.
‹
‹
" #
Query
‹
‹
# (
<
‹
‹
( )
ParLevelHeader
‹
‹
) 7
>
‹
‹
7 8
(
‹
‹
8 9
sql
‹
‹
9 <
)
‹
‹
< =
;
‹
‹
= >
return
ﬁ
ﬁ
 
parLevel3List
ﬁ
ﬁ
  
;
ﬁ
ﬁ
  !
}
ﬂ
ﬂ
 	
public
·
·
 
IEnumerable
·
·
 
<
·
·
 
ParLevelHeader
·
·
 )
>
·
·
) *%
getHeaderByLevel1Level2
·
·
+ B
(
·
·
B C
int
·
·
C F
ParLevel1_Id
·
·
G S
,
·
·
S T
int
·
·
U X
ParLevel2_Id
·
·
Y e
)
·
·
e f
{
‚
‚
 	
string
Â
Â
 
sql
Â
Â
 
=
Â
Â
 
$strÂ
Â
 Î
+Â
Â
Ï Ì
$strÊ
Ê
 ‰
+Ê
Ê
Â Ê
$strÁ
Á
 ‰
+Á
Á
Â Ê
$strË
Ë
 ‰
+Ë
Ë
Â Ê
$strÈ
È
 ⁄
+È
È
€ ‹
$strÍ
Í
 ⁄
+Í
Í
€ ‹
$str
Î
Î
 -
+
Î
Î
. /
ParLevel1_Id
Î
Î
0 <
+
Î
Î
= >
$strÎ
Î
? ⁄
+Î
Î
€ ‹
$strÏ
Ï
 ⁄
+Ï
Ï
€ ‹
$strÌ
Ì
 ÷
;Ì
Ì
÷ ◊
var
Ô
Ô
 
parLevel3List
Ô
Ô
 
=
Ô
Ô
 
db
Ô
Ô
  "
.
Ô
Ô
" #
Query
Ô
Ô
# (
<
Ô
Ô
( )
ParLevelHeader
Ô
Ô
) 7
>
Ô
Ô
7 8
(
Ô
Ô
8 9
sql
Ô
Ô
9 <
)
Ô
Ô
< =
;
Ô
Ô
= >
return
Ò
Ò
 
parLevel3List
Ò
Ò
  
;
Ò
Ò
  !
}
Ú
Ú
 	
public
Ù
Ù
 
bool
Ù
Ù
 $
isHeaderLeve2Exception
Ù
Ù
 *
(
Ù
Ù
* +
int
Ù
Ù
+ .
ParLevel1_Id
Ù
Ù
/ ;
,
Ù
Ù
; <
int
Ù
Ù
= @
ParLevel2_Id
Ù
Ù
A M
,
Ù
Ù
M N
int
Ù
Ù
O R
HeaderField_Id
Ù
Ù
S a
)
Ù
Ù
a b
{
ı
ı
 	
string
¯
¯
 
sql
¯
¯
 
=
¯
¯
 
$str¯
¯
 Å
+¯
¯
Ç É
$str
˘
˘
 E
+
˘
˘
F G
$str
˙
˙
 S
+
˙
˙
T U
$str
˚
˚
 7
+
˚
˚
8 9
ParLevel1_Id
˚
˚
: F
+
˚
˚
G H
$str
˚
˚
I {
+
˚
˚
| }
$str
¸
¸
 5
+
¸
¸
6 7
ParLevel2_Id
¸
¸
8 D
+
¸
¸
E F
$str
¸
¸
G z
+
¸
¸
{ |
$str
˝
˝
 :
+
˝
˝
; <
HeaderField_Id
˝
˝
= K
+
˝
˝
L M
$str
˝
˝
N {
+
˝
˝
| }
$str
˛
˛
 y
;
˛
˛
y z
var
ÄÄ 
parLevel3List
ÄÄ 
=
ÄÄ 
db
ÄÄ  "
.
ÄÄ" #
Query
ÄÄ# (
<
ÄÄ( )
ParLevelHeader
ÄÄ) 7
>
ÄÄ7 8
(
ÄÄ8 9
sql
ÄÄ9 <
)
ÄÄ< =
;
ÄÄ= >
if
ÇÇ 
(
ÇÇ 
parLevel3List
ÇÇ 
.
ÇÇ 
Count
ÇÇ #
(
ÇÇ# $
)
ÇÇ$ %
>
ÇÇ& '
$num
ÇÇ( )
)
ÇÇ) *
return
ÉÉ 
true
ÉÉ 
;
ÉÉ 
else
ÑÑ 
return
ÖÖ 
false
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
}
áá 
public
àà 

partial
àà 
class
àà 
ParFieldType
àà %
{
ââ 
public
åå 
int
åå 
Id
åå 
{
åå 
get
åå 
;
åå 
set
åå  
;
åå  !
}
åå" #
public
çç 
string
çç 
Name
çç 
{
çç 
get
çç  
;
çç  !
set
çç" %
;
çç% &
}
çç' (
public
éé 
decimal
éé 
PunishmentValue
éé &
{
éé' (
get
éé) ,
;
éé, -
set
éé. 1
;
éé1 2
}
éé3 4
public
èè 
int
èè 
IsDefaultOption
èè "
{
èè# $
get
èè% (
;
èè( )
set
èè* -
;
èè- .
}
èè/ 0
private
ëë 
SqlConnection
ëë 
db
ëë  
{
ëë! "
get
ëë# &
;
ëë& '
set
ëë( +
;
ëë+ ,
}
ëë- .
public
íí 
ParFieldType
íí 
(
íí 
)
íí 
{
íí 
}
íí  !
public
ìì 
ParFieldType
ìì 
(
ìì 
SqlConnection
ìì )
_db
ìì* -
)
ìì- .
{
îî 	
db
ïï 
=
ïï 
_db
ïï 
;
ïï 
}
ññ 	
public
òò 
IEnumerable
òò 
<
òò 
ParFieldType
òò '
>
òò' (
getMultipleValues
òò) :
(
òò: ;
int
òò; >
ParHeaderField_Id
òò? P
)
òòP Q
{
ôô 	
string
ùù 
sql
ùù 
=
ùù 
$str
ùù t
+
ùùu v
$str
ûû 6
+
ûû7 8
ParHeaderField_Id
ûû9 J
+
ûûK L
$str
ûûM j
;
ûûj k
var
†† 
multipleValues
†† 
=
††  
db
††! #
.
††# $
Query
††$ )
<
††) *
ParFieldType
††* 6
>
††6 7
(
††7 8
sql
††8 ;
)
††; <
;
††< =
return
¢¢ 
multipleValues
¢¢ !
;
¢¢! "
}
££ 	
public
•• 
IEnumerable
•• 
<
•• 
ParFieldType
•• '
>
••' ("
getIntegrationValues
••) =
(
••= >
int
••> A
ParHeaderField_Id
••B S
,
••S T
string
••U [

integracao
••\ f
,
••f g
int
••h k
ParCompany_Id
••l y
)
••y z
{
¶¶ 	
string
ßß 
	conexaoBR
ßß 
=
ßß 
System
ßß %
.
ßß% &
Configuration
ßß& 3
.
ßß3 4"
ConfigurationManager
ßß4 H
.
ßßH I
ConnectionStrings
ßßI Z
[
ßßZ [
$str
ßß[ j
]
ßßj k
.
ßßk l
ConnectionString
ßßl |
;
ßß| }
db
®® 
=
®® 
new
®® 
SqlConnection
®® "
(
®®" #
	conexaoBR
®®# ,
)
®®, -
;
®®- .
var
™™ 
sql
™™ 
=
™™ 
$str
™™ `
;
™™` a
var
¨¨ 
valores
¨¨ 
=
¨¨ 

integracao
¨¨ $
.
¨¨$ %
Split
¨¨% *
(
¨¨* +
$char
¨¨+ .
)
¨¨. /
;
¨¨/ 0
if
ÆÆ 
(
ÆÆ 
valores
ÆÆ 
[
ÆÆ 
$num
ÆÆ 
]
ÆÆ 
==
ÆÆ 
$str
ÆÆ +
||
ÆÆ, .
valores
ÆÆ/ 6
[
ÆÆ6 7
$num
ÆÆ7 8
]
ÆÆ8 9
==
ÆÆ: <
$str
ÆÆ= E
||
ÆÆF H
valores
ÆÆI P
[
ÆÆP Q
$num
ÆÆQ R
]
ÆÆR S
==
ÆÆT V
$str
ÆÆW h
)
ÆÆh i
{
ØØ 
var
∞∞ 
subtipo
∞∞ 
=
∞∞ 
$str
∞∞  
;
∞∞  !
if
≤≤ 
(
≤≤ 
string
≤≤ 
.
≤≤ 
IsNullOrEmpty
≤≤ (
(
≤≤( )
valores
≤≤) 0
[
≤≤0 1
$num
≤≤1 2
]
≤≤2 3
)
≤≤3 4
)
≤≤4 5
{
≥≥ 
subtipo
¥¥ 
=
¥¥ 
$str
¥¥ /
;
¥¥/ 0
}
µµ 
else
∂∂ 
{
∑∑ 
subtipo
∏∏ 
=
∏∏ 
$str
∏∏ +
+
∏∏, -
valores
∏∏. 5
[
∏∏5 6
$num
∏∏6 7
]
∏∏7 8
+
∏∏9 :
$str
∏∏; >
;
∏∏> ?
}
ππ 
sql
ªª 
=
ªª 
$str
ªª _
+
ªª` a
$str
ºº >
+
ºº? @
$str
ΩΩ 1
+
ΩΩ2 3
valores
ΩΩ4 ;
[
ΩΩ; <
$num
ΩΩ< =
]
ΩΩ= >
+
ΩΩ? @
$str
ΩΩA I
+
ΩΩJ K
subtipo
ΩΩL S
+
ΩΩT U
$str
ΩΩV Z
+
ΩΩ[ \
$str
ææ 6
+
ææ7 8
ParCompany_Id
ææ9 F
;
ææF G
}
¿¿ 
else
¡¡ 
if
¡¡ 
(
¡¡ 
valores
¡¡ 
[
¡¡ 
$num
¡¡ 
]
¡¡ 
==
¡¡  "
$str
¡¡# ,
)
¡¡, -
{
¬¬ 
sql
√√ 
=
√√ 
$str√√ ó
+√√ò ô
$str
ƒƒ 2
;
ƒƒ2 3
}
≈≈ 
var
«« 
multipleValues
«« 
=
««  
db
««! #
.
««# $
Query
««$ )
<
««) *
ParFieldType
««* 6
>
««6 7
(
««7 8
sql
««8 ;
)
««; <
;
««< =
return
…… 
multipleValues
…… !
;
……! "
}
   	
}
ÀÀ 
public
ÕÕ 

partial
ÕÕ 
class
ÕÕ 

ParRelapse
ÕÕ #
{
ŒŒ 
public
—— 
int
—— 
Id
—— 
{
—— 
get
—— 
;
—— 
set
——  
;
——  !
}
——" #
public
““ 
int
““ 
ParFrequency_Id
““ "
{
““# $
get
““% (
;
““( )
set
““* -
;
““- .
}
““/ 0
public
”” 
int
”” 
NcNumber
”” 
{
”” 
get
”” !
;
””! "
set
””# &
;
””& '
}
””( )
public
‘‘ 
int
‘‘ 
EffectiveLength
‘‘ "
{
‘‘# $
get
‘‘% (
;
‘‘( )
set
‘‘* -
;
‘‘- .
}
‘‘/ 0
private
÷÷ 
SqlConnection
÷÷ 
db
÷÷  
{
÷÷! "
get
÷÷# &
;
÷÷& '
set
÷÷( +
;
÷÷+ ,
}
÷÷- .
public
◊◊ 

ParRelapse
◊◊ 
(
◊◊ 
)
◊◊ 
{
◊◊ 
}
◊◊ 
public
ÿÿ 

ParRelapse
ÿÿ 
(
ÿÿ 
SqlConnection
ÿÿ '
_db
ÿÿ( +
)
ÿÿ+ ,
{
ŸŸ 	
db
⁄⁄ 
=
⁄⁄ 
_db
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
›› 
IEnumerable
›› 
<
›› 

ParRelapse
›› %
>
››% &
getRelapses
››' 2
(
››2 3
int
››3 6
ParLevel1_Id
››7 C
)
››C D
{
ﬁﬁ 	
string
‚‚ 
sql
‚‚ 
=
‚‚ 
$str
‚‚ {
+
‚‚| }
$str
„„ 1
+
„„2 3
ParLevel1_Id
„„4 @
+
„„A B
$str
„„C q
;
„„q r
var
ÂÂ 
parRelapses
ÂÂ 
=
ÂÂ 
db
ÂÂ  
.
ÂÂ  !
Query
ÂÂ! &
<
ÂÂ& '

ParRelapse
ÂÂ' 1
>
ÂÂ1 2
(
ÂÂ2 3
sql
ÂÂ3 6
)
ÂÂ6 7
;
ÂÂ7 8
return
ÁÁ 
parRelapses
ÁÁ 
;
ÁÁ 
}
ËË 	
}
ÈÈ 
public
ÍÍ 

partial
ÍÍ 
class
ÍÍ 
Result_Level3
ÍÍ &
{
ÎÎ 
public
ÓÓ 
int
ÓÓ 
Id
ÓÓ 
{
ÓÓ 
get
ÓÓ 
;
ÓÓ 
set
ÓÓ  
;
ÓÓ  !
}
ÓÓ" #
private
ÔÔ 
SqlConnection
ÔÔ 
db
ÔÔ  
{
ÔÔ! "
get
ÔÔ# &
;
ÔÔ& '
set
ÔÔ( +
;
ÔÔ+ ,
}
ÔÔ- .
public
 
Result_Level3
 
(
 
)
 
{
  
}
! "
public
ÒÒ 
Result_Level3
ÒÒ 
(
ÒÒ 
SqlConnection
ÒÒ *
_db
ÒÒ+ .
)
ÒÒ. /
{
ÚÚ 	
db
ÛÛ 
=
ÛÛ 
_db
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
public
ˆˆ 
Result_Level3
ˆˆ 
get
ˆˆ  
(
ˆˆ  !
int
ˆˆ! $!
CollectionLevel2_Id
ˆˆ% 8
,
ˆˆ8 9
int
ˆˆ: =
ParLevel3_Id
ˆˆ> J
)
ˆˆJ K
{
˜˜ 	
string
˚˚ 
sql
˚˚ 
=
˚˚ 
$str
˚˚ K
+
˚˚L M
$str
¸¸ 1
+
¸¸2 3
ParLevel3_Id
¸¸4 @
+
¸¸A B
$str
¸¸C K
+
¸¸L M
$str
˝˝ 1
+
˝˝2 3!
CollectionLevel2_Id
˝˝4 G
+
˝˝H I
$str
˝˝J M
;
˝˝M N
var
ˇˇ 
parResultLevel3
ˇˇ 
=
ˇˇ  !
db
ˇˇ" $
.
ˇˇ$ %
Query
ˇˇ% *
<
ˇˇ* +
Result_Level3
ˇˇ+ 8
>
ˇˇ8 9
(
ˇˇ9 :
sql
ˇˇ: =
)
ˇˇ= >
.
ˇˇ> ?
FirstOrDefault
ˇˇ? M
(
ˇˇM N
)
ˇˇN O
;
ˇˇO P
return
ÅÅ 
parResultLevel3
ÅÅ "
;
ÅÅ" #
}
ÇÇ 	
}
ÉÉ 
public
ÖÖ 

partial
ÖÖ 
class
ÖÖ )
ParLevel1VariableProduction
ÖÖ 4
{
ÜÜ 
public
ââ 
int
ââ 
Id
ââ 
{
ââ 
get
ââ 
;
ââ 
set
ââ  
;
ââ  !
}
ââ" #
public
ää 
string
ää 
Name
ää 
{
ää 
get
ää  
;
ää  !
set
ää" %
;
ää% &
}
ää' (
private
åå 
SqlConnection
åå 
db
åå  
{
åå! "
get
åå# &
;
åå& '
set
åå( +
;
åå+ ,
}
åå- .
public
çç )
ParLevel1VariableProduction
çç *
(
çç* +
)
çç+ ,
{
çç- .
}
çç/ 0
public
éé )
ParLevel1VariableProduction
éé *
(
éé* +
SqlConnection
éé+ 8
_db
éé9 <
)
éé< =
{
èè 	
db
êê 
=
êê 
_db
êê 
;
êê 
}
ëë 	
public
íí 
IEnumerable
íí 
<
íí )
ParLevel1VariableProduction
íí 6
>
íí6 7
getVariable
íí8 C
(
ííC D
int
ííD G
ParLevel1_Id
ííH T
)
ííT U
{
ìì 	
string
ññ 
sql
ññ 
=
ññ 
$str
ññ n
+
ñño p
$str
óó o
+
óóp q
$str
òò 4
+
òò5 6
ParLevel1_Id
òò7 C
+
òòD E
$str
òòF J
;
òòJ K
var
öö 
list
öö 
=
öö 
db
öö 
.
öö 
Query
öö 
<
öö  )
ParLevel1VariableProduction
öö  ;
>
öö; <
(
öö< =
sql
öö= @
)
öö@ A
;
ööA B
return
úú 
list
úú 
;
úú 
}
ùù 	
}
ûû 
public
†† 

partial
†† 
class
†† 
ParConfSGQContext
†† *
{
°° 
public
§§ 
int
§§ 
Id
§§ 
{
§§ 
get
§§ 
;
§§ 
set
§§  
;
§§  !
}
§§" #
public
•• 
bool
•• 
HaveUnitLogin
•• !
{
••" #
get
••$ '
;
••' (
set
••) ,
;
••, -
}
••. /
public
¶¶ 
bool
¶¶ 
HaveShitLogin
¶¶ !
{
¶¶" #
get
¶¶$ '
;
¶¶' (
set
¶¶) ,
;
¶¶, -
}
¶¶. /
private
ßß 
SqlConnection
ßß 
db
ßß  
{
ßß! "
get
ßß# &
;
ßß& '
set
ßß( +
;
ßß+ ,
}
ßß- .
public
®® 
ParConfSGQContext
®®  
(
®®  !
)
®®! "
{
®®# $
}
®®% &
public
©© 
ParConfSGQContext
©©  
(
©©  !
SqlConnection
©©! .
_db
©©/ 2
)
©©2 3
{
™™ 	
db
´´ 
=
´´ 
_db
´´ 
;
´´ 
}
¨¨ 	
public
ÆÆ 
ParConfSGQContext
ÆÆ  
get
ÆÆ! $
(
ÆÆ$ %
)
ÆÆ% &
{
ØØ 	
string
≤≤ 
sql
≤≤ 
=
≤≤ 
$str
≤≤ \
;
≤≤\ ]
var
¥¥ 
conf
¥¥ 
=
¥¥ 
db
¥¥ 
.
¥¥ 
Query
¥¥ 
<
¥¥  
ParConfSGQContext
¥¥  1
>
¥¥1 2
(
¥¥2 3
sql
¥¥3 6
)
¥¥6 7
.
¥¥7 8
FirstOrDefault
¥¥8 F
(
¥¥F G
)
¥¥G H
;
¥¥H I
return
∂∂ 
conf
∂∂ 
;
∂∂ 
}
∏∏ 	
}
ππ 
public
ªª 

partial
ªª 
class
ªª 
UserSGQ
ªª  
{
ºº 
public
ΩΩ 
int
ΩΩ 
Id
ΩΩ 
{
ΩΩ 
get
ΩΩ 
;
ΩΩ 
set
ΩΩ  
;
ΩΩ  !
}
ΩΩ" #
public
ææ 
string
ææ 
Name
ææ 
{
ææ 
get
ææ  
;
ææ  !
set
ææ" %
;
ææ% &
}
ææ' (
public
øø 
string
øø 
Password
øø 
{
øø  
get
øø! $
;
øø$ %
set
øø& )
;
øø) *
}
øø+ ,
public
¿¿ 
string
¿¿ 
Login
¿¿ 
{
¿¿ 
get
¿¿ !
;
¿¿! "
set
¿¿# &
;
¿¿& '
}
¿¿( )
public
¡¡ 
int
¡¡ 
ParCompany_Id
¡¡  
{
¡¡! "
get
¡¡# &
;
¡¡& '
set
¡¡( +
;
¡¡+ ,
}
¡¡- .
public
¬¬ 
string
¬¬ 
ParCompany_Name
¬¬ %
{
¬¬& '
get
¬¬( +
;
¬¬+ ,
set
¬¬- 0
;
¬¬0 1
}
¬¬2 3
public
√√ 
string
√√ 
Role
√√ 
{
√√ 
get
√√  
;
√√  !
set
√√" %
;
√√% &
}
√√' (
private
ƒƒ 
SqlConnection
ƒƒ 
db
ƒƒ  
{
ƒƒ! "
get
ƒƒ# &
;
ƒƒ& '
set
ƒƒ( +
;
ƒƒ+ ,
}
ƒƒ- .
public
∆∆ 
UserSGQ
∆∆ 
(
∆∆ 
)
∆∆ 
{
«« 	
}
»» 	
public
   
UserSGQ
   
(
   
SqlConnection
   $
_db
  % (
)
  ( )
{
ÀÀ 	
db
ÃÃ 
=
ÃÃ 
_db
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
public
œœ 
UserSGQ
œœ  
getUserByLoginOrId
œœ )
(
œœ) *
string
œœ* 0
	userLogin
œœ1 :
=
œœ; <
null
œœ= A
,
œœA B
int
œœC F
id
œœG I
=
œœJ K
$num
œœL M
)
œœM N
{
–– 	
string
‹‹ 
where
‹‹ 
=
‹‹ 
$str
‹‹ -
+
‹‹. /
	userLogin
‹‹0 9
+
‹‹: ;
$str
‹‹< ?
;
‹‹? @
if
›› 
(
›› 
id
›› 
>
›› 
$num
›› 
)
›› 
{
ﬁﬁ 
where
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ (
+
ﬂﬂ) *
id
ﬂﬂ+ -
+
ﬂﬂ. /
$str
ﬂﬂ0 3
;
ﬂﬂ3 4
}
‡‡ 
string
‚‚ 
sql
‚‚ 
=
‚‚ 
$str‚‚ ©
+‚‚™ ´
$str
„„ Z
+
„„[ \
$str‰‰ á
+‰‰à â
where
ÂÂ 
;
ÂÂ 
var
ÁÁ 
user
ÁÁ 
=
ÁÁ 
db
ÁÁ 
.
ÁÁ 
Query
ÁÁ 
<
ÁÁ  
UserSGQ
ÁÁ  '
>
ÁÁ' (
(
ÁÁ( )
sql
ÁÁ) ,
)
ÁÁ, -
.
ÁÁ- .
FirstOrDefault
ÁÁ. <
(
ÁÁ< =
)
ÁÁ= >
;
ÁÁ> ?
return
ÈÈ 
user
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
}
ÎÎ 
public
ÏÏ 

partial
ÏÏ 
class
ÏÏ  
ParCompanyXUserSgq
ÏÏ +
{
ÌÌ 
public
ÓÓ 
int
ÓÓ 

UserSGQ_Id
ÓÓ 
{
ÓÓ 
get
ÓÓ  #
;
ÓÓ# $
set
ÓÓ% (
;
ÓÓ( )
}
ÓÓ* +
public
ÔÔ 
string
ÔÔ 
UserSGQ_Name
ÔÔ "
{
ÔÔ# $
get
ÔÔ% (
;
ÔÔ( )
set
ÔÔ* -
;
ÔÔ- .
}
ÔÔ/ 0
public
 
string
 
UserSGQ_Login
 #
{
$ %
get
& )
;
) *
set
+ .
;
. /
}
0 1
public
ÒÒ 
string
ÒÒ 
UserSGQ_Pass
ÒÒ "
{
ÒÒ# $
get
ÒÒ% (
;
ÒÒ( )
set
ÒÒ* -
;
ÒÒ- .
}
ÒÒ/ 0
public
ÛÛ 
string
ÛÛ 
Role
ÛÛ 
{
ÛÛ 
get
ÛÛ  
;
ÛÛ  !
set
ÛÛ" %
;
ÛÛ% &
}
ÛÛ' (
public
ÙÙ 
int
ÙÙ 
ParCompany_Id
ÙÙ  
{
ÙÙ! "
get
ÙÙ# &
;
ÙÙ& '
set
ÙÙ( +
;
ÙÙ+ ,
}
ÙÙ- .
public
ˆˆ 
string
ˆˆ 
ParCompany_Name
ˆˆ %
{
ˆˆ& '
get
ˆˆ( +
;
ˆˆ+ ,
set
ˆˆ- 0
;
ˆˆ0 1
}
ˆˆ2 3
private
˛˛ 
SqlConnection
˛˛ 
db
˛˛  
{
˛˛! "
get
˛˛# &
;
˛˛& '
set
˛˛( +
;
˛˛+ ,
}
˛˛- .
public
ˇˇ  
ParCompanyXUserSgq
ˇˇ !
(
ˇˇ! "
)
ˇˇ" #
{
ˇˇ$ %
}
ˇˇ& '
public
ÄÄ  
ParCompanyXUserSgq
ÄÄ !
(
ÄÄ! "
SqlConnection
ÄÄ" /
_db
ÄÄ0 3
)
ÄÄ3 4
{
ÅÅ 	
db
ÇÇ 
=
ÇÇ 
_db
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ÑÑ 
IEnumerable
ÑÑ 
<
ÑÑ  
ParCompanyXUserSgq
ÑÑ -
>
ÑÑ- .
getCompanyUsers
ÑÑ/ >
(
ÑÑ> ?
int
ÑÑ? B
ParCompany_Id
ÑÑC P
)
ÑÑP Q
{
ÖÖ 	
string
ää 
sql
ää 
=
ää 
$strää Ú
+ääÛ Ù
$strãã Ú
+ããÛ Ù
$stråå Ú
+ååÛ Ù
$str
çç 4
+
çç5 6
ParCompany_Id
çç7 D
+
ççE F
$strççG Ë
+ççÈ Í
$stréé Ë
;ééË È
var
êê 
users
êê 
=
êê 
db
êê 
.
êê 
Query
êê  
<
êê  ! 
ParCompanyXUserSgq
êê! 3
>
êê3 4
(
êê4 5
sql
êê5 8
)
êê8 9
;
êê9 :
return
íí 
users
íí 
;
íí 
}
ìì 	
public
ôô 
IEnumerable
ôô 
<
ôô  
ParCompanyXUserSgq
ôô -
>
ôô- .
getUserCompany
ôô/ =
(
ôô= >
int
ôô> A

UserSgq_Id
ôôB L
)
ôôL M
{
öö 	
string
üü 
sql
üü 
=
üü 
$strüü Ú
+üüÛ Ù
$str†† Ú
+††Û Ù
$str°° Ú
+°°Û Ù
$str
¢¢ 1
+
¢¢2 3

UserSgq_Id
¢¢4 >
+
¢¢? @
$str¢¢A ‚
+¢¢„ ‰
$str££ Ë
;££Ë È
var
¶¶ 
companys
¶¶ 
=
¶¶ 
db
¶¶ 
.
¶¶ 
Query
¶¶ #
<
¶¶# $ 
ParCompanyXUserSgq
¶¶$ 6
>
¶¶6 7
(
¶¶7 8
sql
¶¶8 ;
)
¶¶; <
;
¶¶< =
return
®® 
companys
®® 
;
®® 
}
©© 	
}
™™ 
public
´´ 

partial
´´ 
class
´´ 
RoleXUserSgq
´´ %
{
¨¨ 
public
≠≠ 
string
≠≠ 
HashKey
≠≠ 
{
≠≠ 
get
≠≠  #
;
≠≠# $
set
≠≠% (
;
≠≠( )
}
≠≠* +
public
ÆÆ 
int
ÆÆ 
Type
ÆÆ 
{
ÆÆ 
get
ÆÆ 
;
ÆÆ 
set
ÆÆ "
;
ÆÆ" #
}
ÆÆ$ %
public
ØØ 
string
ØØ 
RoleJBS
ØØ 
{
ØØ 
get
ØØ  #
;
ØØ# $
set
ØØ% (
;
ØØ( )
}
ØØ* +
public
∞∞ 
string
∞∞ 
RoleSGQ
∞∞ 
{
∞∞ 
get
∞∞  #
;
∞∞# $
set
∞∞% (
;
∞∞( )
}
∞∞* +
private
≤≤ 
SqlConnection
≤≤ 
db
≤≤  
{
≤≤! "
get
≤≤# &
;
≤≤& '
set
≤≤( +
;
≤≤+ ,
}
≤≤- .
public
≥≥ 
RoleXUserSgq
≥≥ 
(
≥≥ 
)
≥≥ 
{
≥≥ 
}
≥≥  !
public
¥¥ 
RoleXUserSgq
¥¥ 
(
¥¥ 
SqlConnection
¥¥ )
_db
¥¥* -
)
¥¥- .
{
µµ 	
db
∂∂ 
=
∂∂ 
_db
∂∂ 
;
∂∂ 
}
∑∑ 	
public
ææ 
IEnumerable
ææ 
<
ææ 
RoleXUserSgq
ææ '
>
ææ' (
getRoles
ææ) 1
(
ææ1 2
int
ææ2 5

UserSGQ_Id
ææ6 @
,
ææ@ A
int
ææB E
ParCompany_id
ææF S
)
ææS T
{
øø 	
string
ƒƒ 
sql
ƒƒ 
=
ƒƒ 
$strƒƒ û
+ƒƒü †
$str≈≈ ó
+≈≈ò ô
$str∆∆ ó
+∆∆ò ô
$str«« ó
+««ò ô
$str»» ô
+»»ö õ
$str…… ô
+……ö õ
$str   ì
+  î ï
$str
ÀÀ .
+
ÀÀ/ 0
ParCompany_id
ÀÀ1 >
+
ÀÀ? @
$strÀÀA é
+ÀÀè ê
$str
ÃÃ "
+
ÃÃ# $

UserSGQ_Id
ÃÃ% /
+
ÃÃ0 1
$strÃÃ2 é
;ÃÃé è
var
ŒŒ 
users
ŒŒ 
=
ŒŒ 
db
ŒŒ 
.
ŒŒ 
Query
ŒŒ  
<
ŒŒ  !
RoleXUserSgq
ŒŒ! -
>
ŒŒ- .
(
ŒŒ. /
sql
ŒŒ/ 2
)
ŒŒ2 3
;
ŒŒ3 4
return
–– 
users
–– 
;
–– 
}
—— 	
}
““ 
public
”” 

partial
”” 
class
”” 
VolumePcc1b
”” $
{
‘‘ 
public
◊◊ 
int
◊◊ 
Id
◊◊ 
{
◊◊ 
get
◊◊ 
;
◊◊ 
set
◊◊  
;
◊◊  !
}
◊◊" #
public
ÿÿ 
int
ÿÿ 
VolumeAnimais
ÿÿ  
{
ÿÿ! "
get
ÿÿ# &
;
ÿÿ& '
set
ÿÿ( +
;
ÿÿ+ ,
}
ÿÿ- .
public
ŸŸ 
int
ŸŸ 
Quartos
ŸŸ 
{
ŸŸ 
get
ŸŸ  
;
ŸŸ  !
set
ŸŸ" %
;
ŸŸ% &
}
ŸŸ' (
public
⁄⁄ 
int
⁄⁄ 

Avaliacoes
⁄⁄ 
{
⁄⁄ 
get
⁄⁄  #
;
⁄⁄# $
set
⁄⁄% (
;
⁄⁄( )
}
⁄⁄* +
public
€€ 
int
€€ 
Amostras
€€ 
{
€€ 
get
€€ !
;
€€! "
set
€€# &
;
€€& '
}
€€( )
private
›› 
SqlConnection
›› 
db
››  
{
››! "
get
››# &
;
››& '
set
››( +
;
››+ ,
}
››- .
public
ﬁﬁ 
VolumePcc1b
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
{
ﬁﬁ 
}
ﬁﬁ  
public
ﬂﬂ 
VolumePcc1b
ﬂﬂ 
(
ﬂﬂ 
SqlConnection
ﬂﬂ (
_db
ﬂﬂ) ,
)
ﬂﬂ, -
{
‡‡ 	
db
·· 
=
·· 
_db
·· 
;
·· 
}
‚‚ 	
public
„„ 
IEnumerable
„„ 
<
„„ 
VolumePcc1b
„„ &
>
„„& '
getVolumePcc1b
„„( 6
(
„„6 7
int
„„7 :
	Indicador
„„; D
,
„„D E
int
„„F I
Unidade
„„J Q
)
„„Q R
{
‰‰ 	
string
ÁÁ 
sql
ÁÁ 
=
ÁÁ 
$strÁÁ î
+ÁÁï ñ
	IndicadorÁÁó †
+ÁÁ° ¢
$strÁÁ£ ∑
+ÁÁ∏ π
UnidadeÁÁ∫ ¡
+ÁÁ¬ √
$strÁÁƒ »
;ÁÁ» …
var
ÈÈ 
list
ÈÈ 
=
ÈÈ 
db
ÈÈ 
.
ÈÈ 
Query
ÈÈ 
<
ÈÈ  
VolumePcc1b
ÈÈ  +
>
ÈÈ+ ,
(
ÈÈ, -
sql
ÈÈ- 0
)
ÈÈ0 1
;
ÈÈ1 2
return
ÎÎ 
list
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
}
ÌÌ 
public
ÓÓ 

partial
ÓÓ 
class
ÓÓ '
CaracteristicaTipificacao
ÓÓ 2
{
ÔÔ 
public
ÚÚ 
String
ÚÚ 
nCdCaracteristica
ÚÚ '
{
ÚÚ( )
get
ÚÚ* -
;
ÚÚ- .
set
ÚÚ/ 2
;
ÚÚ2 3
}
ÚÚ4 5
public
ÛÛ 
String
ÛÛ 
cNmCaracteristica
ÛÛ '
{
ÛÛ( )
get
ÛÛ* -
;
ÛÛ- .
set
ÛÛ/ 2
;
ÛÛ2 3
}
ÛÛ4 5
public
ÙÙ 
String
ÙÙ 
cNrCaracteristica
ÙÙ '
{
ÙÙ( )
get
ÙÙ* -
;
ÙÙ- .
set
ÙÙ/ 2
;
ÙÙ2 3
}
ÙÙ4 5
public
ıı 
String
ıı 
cSgCaracteristica
ıı '
{
ıı( )
get
ıı* -
;
ıı- .
set
ıı/ 2
;
ıı2 3
}
ıı4 5
public
ˆˆ 
String
ˆˆ 
cIdentificador
ˆˆ $
{
ˆˆ% &
get
ˆˆ' *
;
ˆˆ* +
set
ˆˆ, /
;
ˆˆ/ 0
}
ˆˆ1 2
private
¯¯ 
SqlConnection
¯¯ 
db
¯¯  
{
¯¯! "
get
¯¯# &
;
¯¯& '
set
¯¯( +
;
¯¯+ ,
}
¯¯- .
public
˘˘ '
CaracteristicaTipificacao
˘˘ (
(
˘˘( )
)
˘˘) *
{
˘˘+ ,
}
˘˘- .
public
˙˙ '
CaracteristicaTipificacao
˙˙ (
(
˙˙( )
SqlConnection
˙˙) 6
_db
˙˙7 :
)
˙˙: ;
{
˚˚ 	
db
¸¸ 
=
¸¸ 
_db
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ˇˇ 
IEnumerable
ˇˇ 
<
ˇˇ '
CaracteristicaTipificacao
ˇˇ 4
>
ˇˇ4 5+
getCaracteristicasTipificacao
ˇˇ6 S
(
ˇˇS T
int
ˇˇT W
id
ˇˇX Z
)
ˇˇZ [
{
ÄÄ 	
string
ÉÉ 
sql
ÉÉ 
=
ÉÉ 
$strÉÉ ñ
;ÉÉñ ó
if
ÑÑ 
(
ÑÑ 
GlobalConfig
ÑÑ 
.
ÑÑ 
Brasil
ÑÑ #
)
ÑÑ# $
{
ÖÖ 
sql
ÜÜ 
=
ÜÜ 
$strÜÜ à
+ÜÜâ ä
$stráá ó
+ááò ô
idááö ú
+ááù û
$strááü £
;áá£ §
}
àà 
var
ää 
list
ää 
=
ää 
db
ää 
.
ää 
Query
ää 
<
ää  '
CaracteristicaTipificacao
ää  9
>
ää9 :
(
ää: ;
sql
ää; >
)
ää> ?
;
ää? @
return
åå 
list
åå 
;
åå 
}
çç 	
public
èè 
IEnumerable
èè 
<
èè '
CaracteristicaTipificacao
èè 4
>
èè4 5#
getAreasParticipantes
èè6 K
(
èèK L
)
èèL M
{
êê 	
string
ìì 
sql
ìì 
=
ìì 
$strìì ã
+ììå ç
$str
îî c
;
îîc d
var
ññ 
list
ññ 
=
ññ 
db
ññ 
.
ññ 
Query
ññ 
<
ññ  '
CaracteristicaTipificacao
ññ  9
>
ññ9 :
(
ññ: ;
sql
ññ; >
)
ññ> ?
;
ññ? @
return
òò 
list
òò 
;
òò 
}
ôô 	
public
õõ 
IEnumerable
õõ 
<
õõ '
CaracteristicaTipificacao
õõ 4
>
õõ4 50
"getCaracteristicasTipificacaoUnico
õõ6 X
(
õõX Y
int
õõY \
ncdcaracteristica
õõ] n
)
õõn o
{
úú 	
string
üü 
sql
üü 
=
üü 
$strüü ã
+üüå ç
$str
†† b
+
††c d
ncdcaracteristica
††e v
;
††v w
var
¢¢ 
list
¢¢ 
=
¢¢ 
db
¢¢ 
.
¢¢ 
Query
¢¢ 
<
¢¢  '
CaracteristicaTipificacao
¢¢  9
>
¢¢9 :
(
¢¢: ;
sql
¢¢; >
)
¢¢> ?
;
¢¢? @
return
§§ 
list
§§ 
;
§§ 
}
•• 	
public
ßß 
IEnumerable
ßß 
<
ßß '
CaracteristicaTipificacao
ßß 4
>
ßß4 5(
getAreasParticipantesUnico
ßß6 P
(
ßßP Q
)
ßßQ R
{
®® 	
string
´´ 
sql
´´ 
=
´´ 
$str´´ ã
+´´å ç
$str
¨¨ `
;
¨¨` a
var
ÆÆ 
list
ÆÆ 
=
ÆÆ 
db
ÆÆ 
.
ÆÆ 
Query
ÆÆ 
<
ÆÆ  '
CaracteristicaTipificacao
ÆÆ  9
>
ÆÆ9 :
(
ÆÆ: ;
sql
ÆÆ; >
)
ÆÆ> ?
;
ÆÆ? @
return
∞∞ 
list
∞∞ 
;
∞∞ 
}
±± 	
}
¥¥ 
public
µµ 

partial
µµ 
class
µµ 4
&VerificacaoTipificacaoTarefaIntegracao
µµ ?
{
∂∂ 
public
ππ 
int
ππ 
Id
ππ 
{
ππ 
get
ππ 
;
ππ 
set
ππ  
;
ππ  !
}
ππ" #
public
∫∫ 
int
∫∫ 
TarefaId
∫∫ 
{
∫∫ 
get
∫∫ !
;
∫∫! "
set
∫∫# &
;
∫∫& '
}
∫∫( )
public
ªª 
int
ªª )
CaracteristicaTipificacaoId
ªª .
{
ªª/ 0
get
ªª1 4
;
ªª4 5
set
ªª6 9
;
ªª9 :
}
ªª; <
private
ΩΩ 
SqlConnection
ΩΩ 
db
ΩΩ  
{
ΩΩ! "
get
ΩΩ# &
;
ΩΩ& '
set
ΩΩ( +
;
ΩΩ+ ,
}
ΩΩ- .
public
ææ 4
&VerificacaoTipificacaoTarefaIntegracao
ææ 5
(
ææ5 6
)
ææ6 7
{
ææ8 9
}
ææ: ;
public
øø 4
&VerificacaoTipificacaoTarefaIntegracao
øø 5
(
øø5 6
SqlConnection
øø6 C
_db
øøD G
)
øøG H
{
¿¿ 	
db
¡¡ 
=
¡¡ 
_db
¡¡ 
;
¡¡ 
}
¬¬ 	
public
ƒƒ 
IEnumerable
ƒƒ 
<
ƒƒ 4
&VerificacaoTipificacaoTarefaIntegracao
ƒƒ A
>
ƒƒA B
	getTarefa
ƒƒC L
(
ƒƒL M
int
ƒƒM P)
caracteristicatipificacaoid
ƒƒQ l
)
ƒƒl m
{
≈≈ 	
string
»» 
sql
»» 
=
»» 
$str»» ¶
+»»ß ®+
caracteristicatipificacaoid»»© ƒ
;»»ƒ ≈
var
   
list
   
=
   
db
   
.
   
Query
   
<
    4
&VerificacaoTipificacaoTarefaIntegracao
    F
>
  F G
(
  G H
sql
  H K
)
  K L
;
  L M
return
ÃÃ 
list
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
}
ŒŒ 
public
–– 

partial
–– 
class
–– +
CollectionLevel2Consolidation
–– 6
{
—— 
public
““ 
int
““ $
ConsolidationLevel2_Id
““ )
{
““* +
get
““, /
;
““/ 0
set
““1 4
;
““4 5
}
““6 7
public
‘‘ 
int
‘‘ 
ParLevel2_Id
‘‘ 
{
‘‘  !
get
‘‘" %
;
‘‘% &
set
‘‘' *
;
‘‘* +
}
‘‘, -
public
÷÷ 
decimal
÷÷  
WeiEvaluationTotal
÷÷ )
{
÷÷* +
get
÷÷, /
;
÷÷/ 0
set
÷÷1 4
;
÷÷4 5
}
÷÷6 7
public
ÿÿ 
decimal
ÿÿ 
DefectsTotal
ÿÿ #
{
ÿÿ$ %
get
ÿÿ& )
;
ÿÿ) *
set
ÿÿ+ .
;
ÿÿ. /
}
ÿÿ0 1
public
ŸŸ 
decimal
ŸŸ 
WeiDefectsTotal
ŸŸ &
{
ŸŸ' (
get
ŸŸ) ,
;
ŸŸ, -
set
ŸŸ. 1
;
ŸŸ1 2
}
ŸŸ3 4
public
⁄⁄ 
int
⁄⁄ #
TotalLevel3Evaluation
⁄⁄ (
{
⁄⁄) *
get
⁄⁄+ .
;
⁄⁄. /
set
⁄⁄0 3
;
⁄⁄3 4
}
⁄⁄5 6
public
€€ 
int
€€ $
TotalLevel3WithDefects
€€ )
{
€€* +
get
€€, /
;
€€/ 0
set
€€1 4
;
€€4 5
}
€€6 7
public
‹‹ 
int
‹‹ !
LastEvaluationAlert
‹‹ &
{
‹‹' (
get
‹‹) ,
;
‹‹, -
set
‹‹. 1
;
‹‹1 2
}
‹‹3 4
public
›› 
int
›› 
LastLevel2Alert
›› "
{
››# $
get
››% (
;
››( )
set
››* -
;
››- .
}
››/ 0
public
ﬁﬁ 
int
ﬁﬁ 
EvaluatedResult
ﬁﬁ "
{
ﬁﬁ# $
get
ﬁﬁ% (
;
ﬁﬁ( )
set
ﬁﬁ* -
;
ﬁﬁ- .
}
ﬁﬁ/ 0
public
ﬂﬂ 
int
ﬂﬂ 
DefectsResult
ﬂﬂ  
{
ﬂﬂ! "
get
ﬂﬂ# &
;
ﬂﬂ& '
set
ﬂﬂ( +
;
ﬂﬂ+ ,
}
ﬂﬂ- .
private
„„ 
SqlConnection
„„ 
db
„„  
{
„„! "
get
„„# &
;
„„& '
set
„„( +
;
„„+ ,
}
„„- .
public
‰‰ +
CollectionLevel2Consolidation
‰‰ ,
(
‰‰, -
)
‰‰- .
{
‰‰/ 0
}
‰‰1 2
public
ÂÂ +
CollectionLevel2Consolidation
ÂÂ ,
(
ÂÂ, -
SqlConnection
ÂÂ- :
_db
ÂÂ; >
)
ÂÂ> ?
{
ÊÊ 	
db
ÁÁ 
=
ÁÁ 
_db
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÍÍ +
CollectionLevel2Consolidation
ÍÍ ,
getConsolidation
ÍÍ- =
(
ÍÍ= >
int
ÍÍ> A$
ConsolidationLevel2_Id
ÍÍB X
,
ÍÍX Y
int
ÍÍZ ]
ParLevel2_Id
ÍÍ^ j
)
ÍÍj k
{
ÎÎ 	
try
ÏÏ 
{
ÌÌ 
string
 
sql
 
=
 
$str ä
+ã å
$str
ÒÒ a
+
ÒÒb c$
ConsolidationLevel2_Id
ÒÒd z
+
ÒÒ{ |
$strÒÒ} ì
+ÒÒî ï
ParLevel2_IdÒÒñ ¢
+ÒÒ£ §
$strÒÒ• º
+ÒÒΩ æ
$str
ÚÚ L
;
ÚÚL M
var
ÙÙ !
consolidationLevel2
ÙÙ '
=
ÙÙ( )
db
ÙÙ* ,
.
ÙÙ, -
Query
ÙÙ- 2
<
ÙÙ2 3+
CollectionLevel2Consolidation
ÙÙ3 P
>
ÙÙP Q
(
ÙÙQ R
sql
ÙÙR U
)
ÙÙU V
.
ÙÙV W
FirstOrDefault
ÙÙW e
(
ÙÙe f
)
ÙÙf g
;
ÙÙg h
return
ˆˆ !
consolidationLevel2
ˆˆ *
;
ˆˆ* +
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
ex
¯¯ 
)
¯¯  
{
˘˘ 
throw
˚˚ 
ex
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
}
ˇˇ 
public
ÄÄ 

partial
ÄÄ 
class
ÄÄ 5
'ConsolidationLevel1XConsolidationLevel2
ÄÄ @
{
ÅÅ 
public
ÖÖ 
decimal
ÖÖ 
WeiEvaluation
ÖÖ $
{
ÖÖ% &
get
ÖÖ' *
;
ÖÖ* +
set
ÖÖ, /
;
ÖÖ/ 0
}
ÖÖ1 2
public
ÜÜ 
decimal
ÜÜ 
EvaluateTotal
ÜÜ $
{
ÜÜ% &
get
ÜÜ' *
;
ÜÜ* +
set
ÜÜ, /
;
ÜÜ/ 0
}
ÜÜ1 2
public
áá 
decimal
áá 
DefectsTotal
áá #
{
áá$ %
get
áá& )
;
áá) *
set
áá+ .
;
áá. /
}
áá0 1
public
àà 
decimal
àà 

WeiDefects
àà !
{
àà" #
get
àà$ '
;
àà' (
set
àà) ,
;
àà, -
}
àà. /
public
ââ 
decimal
ââ #
TotalLevel3Evaluation
ââ ,
{
ââ- .
get
ââ/ 2
;
ââ2 3
set
ââ4 7
;
ââ7 8
}
ââ9 :
public
ää 
decimal
ää $
TotalLevel3WithDefects
ää -
{
ää. /
get
ää0 3
;
ää3 4
set
ää5 8
;
ää8 9
}
ää: ;
public
ãã 
int
ãã !
LastEvaluationAlert
ãã &
{
ãã' (
get
ãã) ,
;
ãã, -
set
ãã. 1
;
ãã1 2
}
ãã3 4
public
åå 
int
åå 
LastLevel2Alert
åå "
{
åå# $
get
åå% (
;
åå( )
set
åå* -
;
åå- .
}
åå/ 0
public
éé 
int
éé 
EvaluatedResult
éé "
{
éé# $
get
éé% (
;
éé( )
set
éé* -
;
éé- .
}
éé/ 0
public
èè 
int
èè 
DefectsResult
èè  
{
èè! "
get
èè# &
;
èè& '
set
èè( +
;
èè+ ,
}
èè- .
private
ëë 
SqlConnection
ëë 
db
ëë  
{
ëë! "
get
ëë# &
;
ëë& '
set
ëë( +
;
ëë+ ,
}
ëë- .
public
íí 5
'ConsolidationLevel1XConsolidationLevel2
íí 6
(
íí6 7
)
íí7 8
{
íí9 :
}
íí; <
public
ìì 5
'ConsolidationLevel1XConsolidationLevel2
ìì 6
(
ìì6 7
SqlConnection
ìì7 D
_db
ììE H
)
ììH I
{
îî 	
db
ïï 
=
ïï 
_db
ïï 
;
ïï 
}
ññ 	
public
öö 5
'ConsolidationLevel1XConsolidationLevel2
öö 6
getConsolidation
öö7 G
(
ööG H
int
ööH K$
ConsolidationLevel1_Id
ööL b
)
ööb c
{
õõ 	
try
úú 
{
ùù 
string
†† 
sql
†† 
=
†† 
$str††  
+††À Ã&
ConsolidationLevel1_Id††Õ „
+††‰ Â
$str††Ê Ë
;††Ë È
var
¢¢ !
consolidationLevel1
¢¢ '
=
¢¢( )
db
¢¢* ,
.
¢¢, -
Query
¢¢- 2
<
¢¢2 35
'ConsolidationLevel1XConsolidationLevel2
¢¢3 Z
>
¢¢Z [
(
¢¢[ \
sql
¢¢\ _
)
¢¢_ `
.
¢¢` a
FirstOrDefault
¢¢a o
(
¢¢o p
)
¢¢p q
;
¢¢q r
return
§§ !
consolidationLevel1
§§ *
;
§§* +
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
ex
¶¶ 
)
¶¶  
{
ßß 
throw
©© 
ex
©© 
;
©© 
}
™™ 
}
´´ 	
}
ÆÆ 
public
ØØ 

partial
ØØ 
class
ØØ !
ConsolidationLevel1
ØØ ,
{
∞∞ 
public
±± 
int
±± 
Id
±± 
{
±± 
get
±± 
;
±± 
set
±±  
;
±±  !
}
±±" #
public
≤≤ 
int
≤≤ 
UnitId
≤≤ 
{
≤≤ 
get
≤≤ 
;
≤≤  
set
≤≤! $
;
≤≤$ %
}
≤≤& '
public
≥≥ 
int
≥≥ 
DepartmentId
≥≥ 
{
≥≥  !
get
≥≥" %
;
≥≥% &
set
≥≥' *
;
≥≥* +
}
≥≥, -
public
¥¥ 
int
¥¥ 
ParLevel1_Id
¥¥ 
{
¥¥  !
get
¥¥" %
;
¥¥% &
set
¥¥' *
;
¥¥* +
}
¥¥, -
public
µµ 
DateTime
µµ 
AddDate
µµ 
{
µµ  !
get
µµ" %
;
µµ% &
set
µµ' *
;
µµ* +
}
µµ, -
public
∂∂ 
DateTime
∂∂ 
?
∂∂ 
	AlterDate
∂∂ "
{
∂∂# $
get
∂∂% (
;
∂∂( )
set
∂∂* -
;
∂∂- .
}
∂∂/ 0
public
∑∑ 
DateTime
∑∑ 
ConsolidationDate
∑∑ )
{
∑∑* +
get
∑∑, /
;
∑∑/ 0
set
∑∑1 4
;
∑∑4 5
}
∑∑6 7
public
∏∏ 
int
∏∏ 

Evaluation
∏∏ 
{
∏∏ 
get
∏∏  #
;
∏∏# $
set
∏∏% (
;
∏∏( )
}
∏∏* +
public
ππ 
int
ππ 

AtualAlert
ππ 
{
ππ 
get
ππ  #
;
ππ# $
set
ππ% (
;
ππ( )
}
ππ* +
public
∫∫ 
decimal
∫∫ 
WeiEvaluation
∫∫ $
{
∫∫% &
get
∫∫' *
;
∫∫* +
set
∫∫, /
;
∫∫/ 0
}
∫∫1 2
public
ªª 
decimal
ªª 
EvaluateTotal
ªª $
{
ªª% &
get
ªª' *
;
ªª* +
set
ªª, /
;
ªª/ 0
}
ªª1 2
public
ºº 
decimal
ºº 
DefectsTotal
ºº #
{
ºº$ %
get
ºº& )
;
ºº) *
set
ºº+ .
;
ºº. /
}
ºº0 1
public
ΩΩ 
decimal
ΩΩ 

WeiDefects
ΩΩ !
{
ΩΩ" #
get
ΩΩ$ '
;
ΩΩ' (
set
ΩΩ) ,
;
ΩΩ, -
}
ΩΩ. /
public
ææ 
int
ææ #
TotalLevel3Evaluation
ææ (
{
ææ) *
get
ææ+ .
;
ææ. /
set
ææ0 3
;
ææ3 4
}
ææ5 6
public
øø 
int
øø $
TotalLevel3WithDefects
øø )
{
øø* +
get
øø, /
;
øø/ 0
set
øø1 4
;
øø4 5
}
øø6 7
public
¿¿ 
int
¿¿ !
LastEvaluationAlert
¿¿ &
{
¿¿' (
get
¿¿) ,
;
¿¿, -
set
¿¿. 1
;
¿¿1 2
}
¿¿3 4
public
¡¡ 
int
¡¡ 
LastLevel2Alert
¡¡ "
{
¡¡# $
get
¡¡% (
;
¡¡( )
set
¡¡* -
;
¡¡- .
}
¡¡/ 0
public
¬¬ 
int
¬¬ 
EvaluatedResult
¬¬ "
{
¬¬# $
get
¬¬% (
;
¬¬( )
set
¬¬* -
;
¬¬- .
}
¬¬/ 0
public
√√ 
int
√√ 
DefectsResult
√√  
{
√√! "
get
√√# &
;
√√& '
set
√√( +
;
√√+ ,
}
√√- .
private
∆∆ 
SqlConnection
∆∆ 
db
∆∆  
{
∆∆! "
get
∆∆# &
;
∆∆& '
set
∆∆( +
;
∆∆+ ,
}
∆∆- .
public
«« !
ConsolidationLevel1
«« "
(
««" #
)
««# $
{
««% &
}
««' (
public
»» !
ConsolidationLevel1
»» "
(
»»" #
SqlConnection
»»# 0
_db
»»1 4
)
»»4 5
{
…… 	
db
   
=
   
_db
   
;
   
}
ÀÀ 	
public
ÃÃ !
ConsolidationLevel1
ÃÃ "
getConsolidation
ÃÃ# 3
(
ÃÃ3 4
int
ÃÃ4 7
ParCompany_Id
ÃÃ8 E
,
ÃÃE F
int
ÃÃG J
ParLevel1_Id
ÃÃK W
,
ÃÃW X
DateTime
ÃÃY a
collectionDate
ÃÃb p
,
ÃÃp q
int
ÃÃr u
Shift
ÃÃv {
,
ÃÃ{ |
intÃÃ} Ä
PeriodÃÃÅ á
)ÃÃá à
{
ÕÕ 	
try
ŒŒ 
{
œœ 
string
–– 
sql
–– 
=
–– 
$str
–– Z
+
––[ \
ParCompany_Id
––] j
+
––k l
$str––m Ñ
+––Ö Ü
ParLevel1_Id––á ì
+––î ï
$str––ñ ¶
+––ß ®
Shift––© Æ
+––Ø ∞
$str––± ¡
+
—— 
Period
—— 
+
—— 
$str
—— F
+
——G H
collectionDate
——I W
.
——W X
ToString
——X `
(
——` a
$str
——a m
)
——m n
+
——o p
$str
——q t
;
——t u
var
‘‘ 
obj
‘‘ 
=
‘‘ 
db
‘‘ 
.
‘‘ 
Query
‘‘ "
<
‘‘" #!
ConsolidationLevel1
‘‘# 6
>
‘‘6 7
(
‘‘7 8
sql
‘‘8 ;
)
‘‘; <
.
‘‘< =
FirstOrDefault
‘‘= K
(
‘‘K L
)
‘‘L M
;
‘‘M N
return
’’ 
obj
’’ 
;
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
ex
◊◊ 
)
◊◊  
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
	Exception
ŸŸ #
(
ŸŸ# $
$str
ŸŸ$ 2
,
ŸŸ2 3
ex
ŸŸ4 6
)
ŸŸ6 7
;
ŸŸ7 8
}
⁄⁄ 
}
€€ 	
}
‹‹ 
public
›› 

partial
›› 
class
›› !
ConsolidationLevel2
›› ,
{
ﬁﬁ 
public
ﬂﬂ 
int
ﬂﬂ 
Id
ﬂﬂ 
{
ﬂﬂ 
get
ﬂﬂ 
;
ﬂﬂ 
set
ﬂﬂ  
;
ﬂﬂ  !
}
ﬂﬂ" #
public
‡‡ 
int
‡‡ $
ConsolidationLevel1_Id
‡‡ )
{
‡‡* +
get
‡‡, /
;
‡‡/ 0
set
‡‡1 4
;
‡‡4 5
}
‡‡6 7
public
·· 
int
·· 
ParLevel2_Id
·· 
{
··  !
get
··" %
;
··% &
set
··' *
;
··* +
}
··, -
public
‚‚ 
int
‚‚ 
UnitId
‚‚ 
{
‚‚ 
get
‚‚ 
;
‚‚  
set
‚‚! $
;
‚‚$ %
}
‚‚& '
public
„„ 
DateTime
„„ 
AddDate
„„ 
{
„„  !
get
„„" %
;
„„% &
set
„„' *
;
„„* +
}
„„, -
public
‰‰ 
DateTime
‰‰ 
?
‰‰ 
	AlterDate
‰‰ "
{
‰‰# $
get
‰‰% (
;
‰‰( )
set
‰‰* -
;
‰‰- .
}
‰‰/ 0
public
ÂÂ 
int
ÂÂ 

AlertLevel
ÂÂ 
{
ÂÂ 
get
ÂÂ  #
;
ÂÂ# $
set
ÂÂ% (
;
ÂÂ( )
}
ÂÂ* +
public
ÊÊ 
DateTime
ÊÊ 
ConsolidationDate
ÊÊ )
{
ÊÊ* +
get
ÊÊ, /
;
ÊÊ/ 0
set
ÊÊ1 4
;
ÊÊ4 5
}
ÊÊ6 7
public
ÁÁ 
decimal
ÁÁ 
WeiEvaluation
ÁÁ $
{
ÁÁ% &
get
ÁÁ' *
;
ÁÁ* +
set
ÁÁ, /
;
ÁÁ/ 0
}
ÁÁ1 2
public
ËË 
decimal
ËË 
EvaluateTotal
ËË $
{
ËË% &
get
ËË' *
;
ËË* +
set
ËË, /
;
ËË/ 0
}
ËË1 2
public
ÈÈ 
decimal
ÈÈ 
DefectsTotal
ÈÈ #
{
ÈÈ$ %
get
ÈÈ& )
;
ÈÈ) *
set
ÈÈ+ .
;
ÈÈ. /
}
ÈÈ0 1
public
ÍÍ 
decimal
ÍÍ 

WeiDefects
ÍÍ !
{
ÍÍ" #
get
ÍÍ$ '
;
ÍÍ' (
set
ÍÍ) ,
;
ÍÍ, -
}
ÍÍ. /
public
ÎÎ 
int
ÎÎ #
TotalLevel3Evaluation
ÎÎ (
{
ÎÎ) *
get
ÎÎ+ .
;
ÎÎ. /
set
ÎÎ0 3
;
ÎÎ3 4
}
ÎÎ5 6
public
ÏÏ 
int
ÏÏ $
TotalLevel3WithDefects
ÏÏ )
{
ÏÏ* +
get
ÏÏ, /
;
ÏÏ/ 0
set
ÏÏ1 4
;
ÏÏ4 5
}
ÏÏ6 7
public
ÌÌ 
int
ÌÌ !
LastEvaluationAlert
ÌÌ &
{
ÌÌ' (
get
ÌÌ) ,
;
ÌÌ, -
set
ÌÌ. 1
;
ÌÌ1 2
}
ÌÌ3 4
public
ÓÓ 
int
ÓÓ 
LastLevel2Alert
ÓÓ "
{
ÓÓ# $
get
ÓÓ% (
;
ÓÓ( )
set
ÓÓ* -
;
ÓÓ- .
}
ÓÓ/ 0
public
ÔÔ 
int
ÔÔ 
EvaluatedResult
ÔÔ "
{
ÔÔ# $
get
ÔÔ% (
;
ÔÔ( )
set
ÔÔ* -
;
ÔÔ- .
}
ÔÔ/ 0
public
 
int
 
DefectsResult
  
{
! "
get
# &
;
& '
set
( +
;
+ ,
}
- .
private
ÙÙ 
SqlConnection
ÙÙ 
db
ÙÙ  
{
ÙÙ! "
get
ÙÙ# &
;
ÙÙ& '
set
ÙÙ( +
;
ÙÙ+ ,
}
ÙÙ- .
public
ıı !
ConsolidationLevel2
ıı "
(
ıı" #
)
ıı# $
{
ıı% &
}
ıı' (
public
ˆˆ !
ConsolidationLevel2
ˆˆ "
(
ˆˆ" #
SqlConnection
ˆˆ# 0
_db
ˆˆ1 4
)
ˆˆ4 5
{
˜˜ 	
db
¯¯ 
=
¯¯ 
_db
¯¯ 
;
¯¯ 
}
˘˘ 	
public
˙˙ !
ConsolidationLevel2
˙˙ "
getConsolidation
˙˙# 3
(
˙˙3 4
int
˙˙4 7
ParCompany_Id
˙˙8 E
,
˙˙E F
int
˙˙G J
ParLevel1_Id
˙˙K W
,
˙˙W X
DateTime
˙˙Y a
collectionDate
˙˙b p
)
˙˙p q
{
˚˚ 	
try
¸¸ 
{
˝˝ 
string
˛˛ 
sql
˛˛ 
=
˛˛ 
$str
˛˛ Z
+
˛˛[ \
ParCompany_Id
˛˛] j
+
˛˛k l
$str˛˛m Ç
+˛˛É Ñ
ParLevel1_Id˛˛Ö ë
+˛˛í ì
$str˛˛î ∂
+˛˛∑ ∏
collectionDate˛˛π «
.˛˛« »
ToString˛˛» –
(˛˛– —
$str˛˛— ›
)˛˛› ﬁ
+˛˛ﬂ ‡
$str˛˛· 
+˛˛Ò Ú
collectionDate˛˛Û Å
.˛˛Å Ç
ToString˛˛Ç ä
(˛˛ä ã
$str˛˛ã ó
)˛˛ó ò
+˛˛ô ö
$str˛˛õ ¨
;˛˛¨ ≠
var
àà 
obj
àà 
=
àà 
db
àà 
.
àà 
Query
àà "
<
àà" #!
ConsolidationLevel2
àà# 6
>
àà6 7
(
àà7 8
sql
àà8 ;
)
àà; <
.
àà< =
FirstOrDefault
àà= K
(
ààK L
)
ààL M
;
ààM N
return
ââ 
obj
ââ 
;
ââ 
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
)
ãã 
{
åå 
throw
çç 
;
çç 
}
éé 
}
èè 	
public
ëë !
ConsolidationLevel2
ëë "&
getByConsolidationLevel1
ëë# ;
(
ëë; <
int
ëë< ?
ParCompany_Id
ëë@ M
,
ëëM N
int
ëëO R$
ConsolidationLevel1_Id
ëëS i
,
ëëi j
int
ëëk n
ParLevel2_Id
ëëo {
)
ëë{ |
{
íí 	
try
ìì 
{
îî 
string
ïï 
sql
ïï 
=
ïï 
$strïï •
+ïï¶ ß&
ConsolidationLevel1_Idïï® æ
+ïïø ¿
$strïï¡ ÿ
+ïïŸ ⁄
ParLevel2_Idïï€ Á
+ïïË È
$strïïÍ ˙
+ïï˚ ¸
ParCompany_Idïï˝ ä
+ïïã å
$strïïç ê
;ïïê ë
var
óó 
obj
óó 
=
óó 
db
óó 
.
óó 
Query
óó "
<
óó" #!
ConsolidationLevel2
óó# 6
>
óó6 7
(
óó7 8
sql
óó8 ;
)
óó; <
.
óó< =
FirstOrDefault
óó= K
(
óóK L
)
óóL M
;
óóM N
return
òò 
obj
òò 
;
òò 
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
)
õõ 
{
úú 
throw
ùù 
;
ùù 
}
ûû 
}
üü 	
public
†† !
ConsolidationLevel2
†† "&
getByConsolidationLevel1
††# ;
(
††; <
int
††< ?
ParCompany_Id
††@ M
,
††M N
int
††O R$
ConsolidationLevel1_Id
††S i
,
††i j
int
††k n
ParLevel2_Id
††o {
,
††{ |
int††} Ä
reaudit††Å à
,††à â
string††ä ê
reauditNumber††ë û
)††û ü
{
°° 	
try
¢¢ 
{
££ 
string
§§ 
sql
§§ 
=
§§ 
$str§§ ø
+§§¿ ¡$
ConsolidationLevel1_Id
•• *
+
••+ ,
$str
••- D
+
••E F
ParLevel2_Id
••G S
+
••T U
$str
••V f
+
••g h
ParCompany_Id
••i v
+
••w x
$str••y ã
+••å ç
reaudit••é ï
+••ñ ó
$str••ò ≠
+••Æ Ø
reauditNumber••∞ Ω
+••æ ø
$str••¿ √
;••√ ƒ
var
ßß 
obj
ßß 
=
ßß 
db
ßß 
.
ßß 
Query
ßß "
<
ßß" #!
ConsolidationLevel2
ßß# 6
>
ßß6 7
(
ßß7 8
sql
ßß8 ;
)
ßß; <
.
ßß< =
FirstOrDefault
ßß= K
(
ßßK L
)
ßßL M
;
ßßM N
return
®® 
obj
®® 
;
®® 
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
)
´´ 
{
¨¨ 
throw
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 	
}
±± 
public
≥≥ 

partial
≥≥ 
class
≥≥ 
CollectionJson
≥≥ '
{
¥¥ 
public
µµ 
int
µµ 
Id
µµ 
{
µµ 
get
µµ 
;
µµ 
set
µµ  
;
µµ  !
}
µµ" #
public
∂∂ 
int
∂∂ 
Unit_Id
∂∂ 
{
∂∂ 
get
∂∂  
;
∂∂  !
}
∂∂" #
public
∑∑ 
int
∑∑ 
Shift
∑∑ 
{
∑∑ 
get
∑∑ 
;
∑∑ 
set
∑∑  #
;
∑∑# $
}
∑∑% &
public
∏∏ 
int
∏∏ 
Period
∏∏ 
{
∏∏ 
get
∏∏ 
;
∏∏  
set
∏∏! $
;
∏∏$ %
}
∏∏& '
public
ππ 
int
ππ 

level01_Id
ππ 
{
ππ 
get
ππ  #
;
ππ# $
set
ππ% (
;
ππ( )
}
ππ* +
public
∫∫ 
DateTime
∫∫ #
Level01CollectionDate
∫∫ -
{
∫∫. /
get
∫∫0 3
;
∫∫3 4
set
∫∫5 8
;
∫∫8 9
}
∫∫: ;
public
ªª 
int
ªª 

level02_Id
ªª 
{
ªª 
get
ªª  #
;
ªª# $
set
ªª% (
;
ªª( )
}
ªª* +
public
ºº 
int
ºº 
Evaluate
ºº 
{
ºº 
get
ºº !
;
ºº! "
set
ºº# &
;
ºº& '
}
ºº( )
public
ΩΩ 
int
ΩΩ 
Sample
ΩΩ 
{
ΩΩ 
get
ΩΩ 
;
ΩΩ  
set
ΩΩ! $
;
ΩΩ$ %
}
ΩΩ& '
public
øø 
int
øø 
	AuditorId
øø 
{
øø 
get
øø "
;
øø" #
set
øø$ '
;
øø' (
}
øø) *
public
¿¿ 
DateTime
¿¿ #
Level02CollectionDate
¿¿ -
{
¿¿. /
get
¿¿0 3
;
¿¿3 4
set
¿¿5 8
;
¿¿8 9
}
¿¿: ;
public
¡¡ 
string
¡¡ 
Level02HeaderJson
¡¡ '
{
¡¡( )
get
¡¡* -
;
¡¡- .
set
¡¡/ 2
;
¡¡2 3
}
¡¡4 5
public
¬¬ 
string
¬¬ 
Level03ResultJSon
¬¬ '
{
¬¬( )
get
¬¬* -
;
¬¬- .
set
¬¬/ 2
;
¬¬2 3
}
¬¬4 5
public
√√ 
string
√√ "
CorrectiveActionJson
√√ *
{
√√+ ,
get
√√- 0
;
√√0 1
set
√√2 5
;
√√5 6
}
√√7 8
public
ƒƒ 
bool
ƒƒ 
Reaudit
ƒƒ 
{
ƒƒ 
get
ƒƒ !
;
ƒƒ! "
set
ƒƒ# &
;
ƒƒ& '
}
ƒƒ( )
public
≈≈ 
int
≈≈ 
ReauditNumber
≈≈  
{
≈≈! "
get
≈≈# &
;
≈≈& '
set
≈≈( +
;
≈≈+ ,
}
≈≈- .
public
∆∆ 
int
∆∆ 
ReauditLevel
∆∆ 
{
∆∆  !
get
∆∆" %
;
∆∆% &
set
∆∆' *
;
∆∆* +
}
∆∆, -
public
«« 
bool
«« 
haveReaudit
«« 
{
««  !
get
««" %
;
««% &
set
««' *
;
««* +
}
««, -
public
»» 
bool
»» "
haveCorrectiveAction
»» (
{
»») *
get
»»+ .
;
»». /
set
»»0 3
;
»»3 4
}
»»5 6
public
…… 
string
…… 
	Device_Id
…… 
{
……  !
get
……" %
;
……% &
set
……' *
;
……* +
}
……, -
public
   
string
   

AppVersion
    
{
  ! "
get
  # &
;
  & '
set
  ( +
;
  + ,
}
  - .
public
ÀÀ 
string
ÀÀ 
Ambient
ÀÀ 
{
ÀÀ 
get
ÀÀ  #
;
ÀÀ# $
set
ÀÀ% (
;
ÀÀ( )
}
ÀÀ* +
public
ÃÃ 
bool
ÃÃ 
IsProcessed
ÃÃ 
{
ÃÃ  !
get
ÃÃ" %
;
ÃÃ% &
set
ÃÃ' *
;
ÃÃ* +
}
ÃÃ, -
public
ÕÕ 
string
ÕÕ 

Device_Mac
ÕÕ  
{
ÕÕ! "
get
ÕÕ# &
;
ÕÕ& '
set
ÕÕ( +
;
ÕÕ+ ,
}
ÕÕ- .
public
ŒŒ 
DateTime
ŒŒ 
AddDate
ŒŒ 
{
ŒŒ  !
get
ŒŒ" %
;
ŒŒ% &
set
ŒŒ' *
;
ŒŒ* +
}
ŒŒ, -
public
œœ 
DateTime
œœ 
?
œœ 
	AlterDate
œœ "
{
œœ# $
get
œœ% (
;
œœ( )
set
œœ* -
;
œœ- .
}
œœ/ 0
public
–– 
string
–– 
Key
–– 
{
–– 
get
–– 
;
––  
set
––! $
;
––$ %
}
––& '
public
—— 
string
—— 
TTP
—— 
{
—— 
get
—— 
;
——  
set
——! $
;
——$ %
}
——& '
private
‘‘ 
SqlConnection
‘‘ 
db
‘‘  
{
‘‘! "
get
‘‘# &
;
‘‘& '
set
‘‘( +
;
‘‘+ ,
}
‘‘- .
public
’’ 
CollectionJson
’’ 
(
’’ 
)
’’ 
{
’’  !
}
’’" #
public
÷÷ 
CollectionJson
÷÷ 
(
÷÷ 
SqlConnection
÷÷ +
_db
÷÷, /
)
÷÷/ 0
{
◊◊ 	
db
ÿÿ 
=
ÿÿ 
_db
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
€€ 
IEnumerable
€€ 
<
€€ 
CollectionJson
€€ )
>
€€) *
getJson
€€+ 2
(
€€2 3
string
€€3 9
sql
€€: =
)
€€= >
{
‹‹ 	
try
›› 
{
ﬁﬁ 
var
‡‡ 
list
‡‡ 
=
‡‡ 
db
‡‡ 
.
‡‡ 
Query
‡‡ #
<
‡‡# $
CollectionJson
‡‡$ 2
>
‡‡2 3
(
‡‡3 4
sql
‡‡4 7
)
‡‡7 8
;
‡‡8 9
return
·· 
list
·· 
;
·· 
}
‚‚ 
catch
„„ 
(
„„ 
	Exception
„„ 
)
„„ 
{
‰‰ 
throw
ÂÂ 
;
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
}
ËË 
public
ÍÍ 

partial
ÍÍ 
class
ÍÍ 

ParCounter
ÍÍ #
{
ÎÎ 
public
ÏÏ 
string
ÏÏ 
Counter
ÏÏ 
{
ÏÏ 
get
ÏÏ  #
;
ÏÏ# $
set
ÏÏ% (
;
ÏÏ( )
}
ÏÏ* +
public
ÌÌ 
string
ÌÌ 
Local
ÌÌ 
{
ÌÌ 
get
ÌÌ !
;
ÌÌ! "
set
ÌÌ# &
;
ÌÌ& '
}
ÌÌ( )
public
ÓÓ 
string
ÓÓ 
Level
ÓÓ 
{
ÓÓ 
get
ÓÓ !
;
ÓÓ! "
set
ÓÓ# &
;
ÓÓ& '
}
ÓÓ( )
public
ÔÔ 
string
ÔÔ 
	indicador
ÔÔ 
{
ÔÔ  !
get
ÔÔ" %
;
ÔÔ% &
set
ÔÔ' *
;
ÔÔ* +
}
ÔÔ, -
private
ÛÛ 
SqlConnection
ÛÛ 
db
ÛÛ  
{
ÛÛ! "
get
ÛÛ# &
;
ÛÛ& '
set
ÛÛ( +
;
ÛÛ+ ,
}
ÛÛ- .
public
ÙÙ 

ParCounter
ÙÙ 
(
ÙÙ 
)
ÙÙ 
{
ÙÙ 
}
ÙÙ 
public
ıı 

ParCounter
ıı 
(
ıı 
SqlConnection
ıı '
_db
ıı( +
)
ıı+ ,
{
ˆˆ 	
db
˜˜ 
=
˜˜ 
_db
˜˜ 
;
˜˜ 
}
¯¯ 	
public
˙˙ 
IEnumerable
˙˙ 
<
˙˙ 

ParCounter
˙˙ %
>
˙˙% &(
GetParLevelXParCounterList
˙˙' A
(
˙˙A B
int
˙˙B E
ParLevel1_Id
˙˙F R
,
˙˙R S
int
˙˙T W
ParLevel2_Id
˙˙X d
,
˙˙d e
int
˙˙f i
Level
˙˙j o
)
˙˙o p
{
˚˚ 	
try
¸¸ 
{
˝˝ 
if
˛˛ 
(
˛˛ 
ParLevel1_Id
˛˛  
>
˛˛! "
$num
˛˛# $
||
˛˛% '
ParLevel2_Id
˛˛( 4
>
˛˛5 6
$num
˛˛7 8
)
˛˛8 9
{
ˇˇ 
string
ÄÄ 
sql
ÄÄ 
=
ÄÄ  
$str
ÄÄ! #
;
ÄÄ# $
if
ÅÅ 
(
ÅÅ 
ParLevel1_Id
ÅÅ $
>
ÅÅ% &
$num
ÅÅ' (
)
ÅÅ( )
{
ÇÇ 
sql
çç 
=
çç 
$strçç †
+çç° ¢
$str
éé ^
+
éé_ `
$str
èè Z
+
èè[ \
$str
êê 8
+
êê9 :
ParLevel1_Id
êê; G
+
êêH I
$str
êêJ M
+
êêN O
$str
ëë <
+
ëë= >
$str
íí /
+
íí0 1
Level
íí2 7
+
íí8 9
$str
ìì 3
;
ìì3 4
}
ïï 
else
ññ 
if
ññ 
(
ññ 
ParLevel2_Id
ññ )
>
ññ* +
$num
ññ, -
)
ññ- .
{
óó 
sql
¢¢ 
=
¢¢ 
$str¢¢ †
+¢¢° ¢
$str
££ ^
+
££_ `
$str
§§ Z
+
§§[ \
$str
•• >
+
••? @
$str
¶¶ 5
+
¶¶6 7
ParLevel2_Id
¶¶8 D
+
¶¶E F
$str
¶¶G J
+
¶¶K L
$str
ßß /
+
ßß0 1
Level
ßß2 7
+
ßß8 9
$str
®® 3
;
®®3 4
}
´´ 
var
ÆÆ 
list
ÆÆ 
=
ÆÆ 
db
ÆÆ !
.
ÆÆ! "
Query
ÆÆ" '
<
ÆÆ' (

ParCounter
ÆÆ( 2
>
ÆÆ2 3
(
ÆÆ3 4
sql
ÆÆ4 7
)
ÆÆ7 8
;
ÆÆ8 9
return
ØØ 
list
ØØ 
;
ØØ  
}
∞∞ 
else
±± 
{
≤≤ 
return
≥≥ 
null
≥≥ 
;
≥≥  
}
¥¥ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
)
∑∑ 
{
∏∏ 
throw
ππ 
;
ππ 
}
∫∫ 
}
ªª 	
}
ΩΩ 
public
øø 

partial
øø 
class
øø 
NotConformityRule
øø *
{
¿¿ 
public
¡¡ 
int
¡¡ 
Id
¡¡ 
{
¡¡ 
get
¡¡ 
;
¡¡ 
set
¡¡  
;
¡¡  !
}
¡¡" #
public
¬¬ 
decimal
¬¬ 
Value
¬¬ 
{
¬¬ 
get
¬¬ "
;
¬¬" #
set
¬¬$ '
;
¬¬' (
}
¬¬) *
private
≈≈ 
SqlConnection
≈≈ 
db
≈≈  
{
≈≈! "
get
≈≈# &
;
≈≈& '
set
≈≈( +
;
≈≈+ ,
}
≈≈- .
public
∆∆ 
NotConformityRule
∆∆  
(
∆∆  !
)
∆∆! "
{
∆∆# $
}
∆∆% &
public
«« 
NotConformityRule
««  
(
««  !
SqlConnection
««! .
_db
««/ 2
)
««2 3
{
»» 	
db
…… 
=
…… 
_db
…… 
;
…… 
}
   	
public
ÀÀ 
NotConformityRule
ÀÀ  
getParNCRule
ÀÀ! -
(
ÀÀ- .
int
ÀÀ. 1
NCR_Id
ÀÀ2 8
,
ÀÀ8 9
int
ÀÀ: =
P2_Id
ÀÀ> C
)
ÀÀC D
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ 
string
œœ 
sql
œœ 
=
œœ 
$str
œœ 
+œœÄ Å
$str
–– 
+––Ä Å
$str
—— 
+——Ä Å
$str
““ 1
+
““2 3
NCR_Id
““4 :
+
““; <
$str
““= L
+
““M N
P2_Id
““O T
+
““U V
$str““W î
;““î ï
var
’’ 
obj
’’ 
=
’’ 
db
’’ 
.
’’ 
Query
’’ "
<
’’" #
NotConformityRule
’’# 4
>
’’4 5
(
’’5 6
sql
’’6 9
)
’’9 :
.
’’: ;
FirstOrDefault
’’; I
(
’’I J
)
’’J K
;
’’K L
return
÷÷ 
obj
÷÷ 
;
÷÷ 
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
)
ÿÿ 
{
ŸŸ 
throw
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
}
ﬁﬁ 
public
ﬂﬂ 

partial
ﬂﬂ 
class
ﬂﬂ 
CollectionLevel2
ﬂﬂ )
{
‡‡ 
public
·· 
int
·· 
Id
·· 
{
·· 
get
·· 
;
·· 
set
··  
;
··  !
}
··" #
public
‚‚ 
string
‚‚ 
Key
‚‚ 
{
‚‚ 
get
‚‚ 
;
‚‚  
set
‚‚! $
;
‚‚$ %
}
‚‚& '
public
„„ 
int
„„ $
ConsolidationLevel2_Id
„„ )
{
„„* +
get
„„, /
;
„„/ 0
set
„„1 4
;
„„4 5
}
„„6 7
public
‰‰ 
int
‰‰ 
ParLevel1_Id
‰‰ 
{
‰‰  !
get
‰‰" %
;
‰‰% &
set
‰‰' *
;
‰‰* +
}
‰‰, -
public
ÂÂ 
int
ÂÂ 
ParLevel2_Id
ÂÂ 
{
ÂÂ  !
get
ÂÂ" %
;
ÂÂ% &
set
ÂÂ' *
;
ÂÂ* +
}
ÂÂ, -
public
ÊÊ 
int
ÊÊ 
UnitId
ÊÊ 
{
ÊÊ 
get
ÊÊ 
;
ÊÊ  
set
ÊÊ! $
;
ÊÊ$ %
}
ÊÊ& '
public
ÁÁ 
int
ÁÁ 
	AuditorId
ÁÁ 
{
ÁÁ 
get
ÁÁ "
;
ÁÁ" #
set
ÁÁ$ '
;
ÁÁ' (
}
ÁÁ) *
public
ËË 
int
ËË 
Shift
ËË 
{
ËË 
get
ËË 
;
ËË 
set
ËË  #
;
ËË# $
}
ËË% &
public
ÈÈ 
int
ÈÈ 
Period
ÈÈ 
{
ÈÈ 
get
ÈÈ 
;
ÈÈ  
set
ÈÈ! $
;
ÈÈ$ %
}
ÈÈ& '
public
ÍÍ 
int
ÍÍ 
Phase
ÍÍ 
{
ÍÍ 
get
ÍÍ 
;
ÍÍ 
set
ÍÍ  #
;
ÍÍ# $
}
ÍÍ% &
public
ÎÎ 
bool
ÎÎ 
	ReauditIs
ÎÎ 
{
ÎÎ 
get
ÎÎ  #
;
ÎÎ# $
set
ÎÎ% (
;
ÎÎ( )
}
ÎÎ* +
public
ÏÏ 
int
ÏÏ 
ReauditNumber
ÏÏ  
{
ÏÏ! "
get
ÏÏ# &
;
ÏÏ& '
set
ÏÏ( +
;
ÏÏ+ ,
}
ÏÏ- .
public
ÌÌ 
int
ÌÌ 
ReauditLevel
ÌÌ 
{
ÌÌ  !
get
ÌÌ" %
;
ÌÌ% &
set
ÌÌ' *
;
ÌÌ* +
}
ÌÌ, -
public
ÓÓ 
DateTime
ÓÓ 
CollectionDate
ÓÓ &
{
ÓÓ' (
get
ÓÓ) ,
;
ÓÓ, -
set
ÓÓ. 1
;
ÓÓ1 2
}
ÓÓ3 4
public
ÔÔ 
DateTime
ÔÔ 
?
ÔÔ 
StartPhaseDate
ÔÔ '
{
ÔÔ( )
get
ÔÔ* -
;
ÔÔ- .
set
ÔÔ/ 2
;
ÔÔ2 3
}
ÔÔ4 5
public
 
int
 
EvaluationNumber
 #
{
$ %
get
& )
;
) *
set
+ .
;
. /
}
0 1
public
ÒÒ 
int
ÒÒ 
Sample
ÒÒ 
{
ÒÒ 
get
ÒÒ 
;
ÒÒ  
set
ÒÒ! $
;
ÒÒ$ %
}
ÒÒ& '
public
ÚÚ 
DateTime
ÚÚ 
AddDate
ÚÚ 
{
ÚÚ  !
get
ÚÚ" %
;
ÚÚ% &
set
ÚÚ' *
;
ÚÚ* +
}
ÚÚ, -
public
ÛÛ 
DateTime
ÛÛ 
?
ÛÛ 
	AlterDate
ÛÛ "
{
ÛÛ# $
get
ÛÛ% (
;
ÛÛ( )
set
ÛÛ* -
;
ÛÛ- .
}
ÛÛ/ 0
public
ÙÙ 
bool
ÙÙ "
ConsecutiveFailureIs
ÙÙ (
{
ÙÙ) *
get
ÙÙ+ .
;
ÙÙ. /
set
ÙÙ0 3
;
ÙÙ3 4
}
ÙÙ5 6
public
ıı 
int
ıı %
ConsecutiveFailureTotal
ıı *
{
ıı+ ,
get
ıı- 0
;
ıı0 1
set
ıı2 5
;
ıı5 6
}
ıı7 8
public
ˆˆ 
bool
ˆˆ 
NotEvaluatedIs
ˆˆ "
{
ˆˆ# $
get
ˆˆ% (
;
ˆˆ( )
set
ˆˆ* -
;
ˆˆ- .
}
ˆˆ/ 0
public
˜˜ 
bool
˜˜ 

Duplicated
˜˜ 
{
˜˜  
get
˜˜! $
;
˜˜$ %
set
˜˜& )
;
˜˜) *
}
˜˜+ ,
public
¯¯ 
bool
¯¯ "
HaveCorrectiveAction
¯¯ (
{
¯¯) *
get
¯¯+ .
;
¯¯. /
set
¯¯0 3
;
¯¯3 4
}
¯¯5 6
public
˘˘ 
bool
˘˘ 
HaveReaudit
˘˘ 
{
˘˘  !
get
˘˘" %
;
˘˘% &
set
˘˘' *
;
˘˘* +
}
˘˘, -
public
˙˙ 
bool
˙˙ 
	HavePhase
˙˙ 
{
˙˙ 
get
˙˙  #
;
˙˙# $
set
˙˙% (
;
˙˙( )
}
˙˙* +
public
˚˚ 
bool
˚˚ 
	Completed
˚˚ 
{
˚˚ 
get
˚˚  #
;
˚˚# $
set
˚˚% (
;
˚˚( )
}
˚˚* +
public
¸¸ 
int
¸¸ 
ParFrequency_Id
¸¸ "
{
¸¸# $
get
¸¸% (
;
¸¸( )
set
¸¸* -
;
¸¸- .
}
¸¸/ 0
public
˝˝ 
int
˝˝ 

AlertLevel
˝˝ 
{
˝˝ 
get
˝˝  #
;
˝˝# $
set
˝˝% (
;
˝˝( )
}
˝˝* +
public
˛˛ 
int
˛˛ 

Sequential
˛˛ 
{
˛˛ 
get
˛˛  #
;
˛˛# $
set
˛˛% (
;
˛˛( )
}
˛˛* +
public
ˇˇ 
int
ˇˇ 
Side
ˇˇ 
{
ˇˇ 
get
ˇˇ 
;
ˇˇ 
set
ˇˇ "
;
ˇˇ" #
}
ˇˇ$ %
public
ÄÄ 
decimal
ÄÄ 
WeiEvaluation
ÄÄ $
{
ÄÄ% &
get
ÄÄ' *
;
ÄÄ* +
set
ÄÄ, /
;
ÄÄ/ 0
}
ÄÄ1 2
public
ÅÅ 
decimal
ÅÅ 
Defects
ÅÅ 
{
ÅÅ  
get
ÅÅ! $
;
ÅÅ$ %
set
ÅÅ& )
;
ÅÅ) *
}
ÅÅ+ ,
public
ÇÇ 
decimal
ÇÇ 

WeiDefects
ÇÇ !
{
ÇÇ" #
get
ÇÇ$ '
;
ÇÇ' (
set
ÇÇ) ,
;
ÇÇ, -
}
ÇÇ. /
public
ÉÉ 
int
ÉÉ $
TotalLevel3WithDefects
ÉÉ )
{
ÉÉ* +
get
ÉÉ, /
;
ÉÉ/ 0
set
ÉÉ1 4
;
ÉÉ4 5
}
ÉÉ6 7
public
ÑÑ 
int
ÑÑ #
TotalLevel3Evaluation
ÑÑ (
{
ÑÑ) *
get
ÑÑ+ .
;
ÑÑ. /
set
ÑÑ0 3
;
ÑÑ3 4
}
ÑÑ5 6
public
ÖÖ 
int
ÖÖ !
LastEvaluationAlert
ÖÖ &
{
ÖÖ' (
get
ÖÖ) ,
;
ÖÖ, -
set
ÖÖ. 1
;
ÖÖ1 2
}
ÖÖ3 4
public
ÜÜ 
int
ÜÜ 
LastLevel2Alert
ÜÜ "
{
ÜÜ# $
get
ÜÜ% (
;
ÜÜ( )
set
ÜÜ* -
;
ÜÜ- .
}
ÜÜ/ 0
public
áá 
int
áá 
EvaluatedResult
áá "
{
áá# $
get
áá% (
;
áá( )
set
áá* -
;
áá- .
}
áá/ 0
public
àà 
int
àà 
DefectsResult
àà  
{
àà! "
get
àà# &
;
àà& '
set
àà( +
;
àà+ ,
}
àà- .
public
ââ 
bool
ââ 
IsEmptyLevel3
ââ !
{
ââ" #
get
ââ$ '
;
ââ' (
set
ââ) ,
;
ââ, -
}
ââ. /
private
çç 
SqlConnection
çç 
db
çç  
{
çç! "
get
çç# &
;
çç& '
set
çç( +
;
çç+ ,
}
çç- .
public
éé 
CollectionLevel2
éé 
(
éé  
)
éé  !
{
éé" #
}
éé$ %
public
èè 
CollectionLevel2
èè 
(
èè  
SqlConnection
èè  -
_db
èè. 1
)
èè1 2
{
êê 	
db
ëë 
=
ëë 
_db
ëë 
;
ëë 
}
íí 	
public
ìì 
CollectionLevel2
ìì 
GetByKey
ìì  (
(
ìì( )
string
ìì) /
key
ìì0 3
)
ìì3 4
{
îî 	
try
ïï 
{
ññ 
string
óó 
sql
óó 
=
óó 
$str
óó W
+
óóX Y
key
óóZ ]
+
óó^ _
$str
óó` c
;
óóc d
var
öö 
obj
öö 
=
öö 
db
öö 
.
öö 
Query
öö "
<
öö" #
CollectionLevel2
öö# 3
>
öö3 4
(
öö4 5
sql
öö5 8
)
öö8 9
.
öö9 :
FirstOrDefault
öö: H
(
ööH I
)
ööI J
;
ööJ K
return
õõ 
obj
õõ 
;
õõ 
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
)
ùù 
{
ûû 
throw
üü 
;
üü 
}
†† 
}
°° 	
}
§§ 
public
¶¶ 

partial
¶¶ 
class
¶¶ $
UpdateCollectionLevel2
¶¶ /
{
ßß 
private
©© 
SqlConnection
©© 
db
©©  
{
©©! "
get
©©# &
;
©©& '
set
©©( +
;
©©+ ,
}
©©- .
public
™™ $
UpdateCollectionLevel2
™™ %
(
™™% &
)
™™& '
{
™™( )
}
™™* +
public
´´ $
UpdateCollectionLevel2
´´ %
(
´´% &
SqlConnection
´´& 3
_db
´´4 7
)
´´7 8
{
¨¨ 	
db
≠≠ 
=
≠≠ 
_db
≠≠ 
;
≠≠ 
}
ÆÆ 	
public
ØØ 
void
ØØ "
UpdateIsReauditByKey
ØØ (
(
ØØ( )
string
ØØ) /
Key
ØØ0 3
,
ØØ3 4
bool
ØØ5 9
	IsReaudit
ØØ: C
,
ØØC D
int
ØØE H
HaveReaudit
ØØI T
,
ØØT U
int
ØØV Y
ReauditNumber
ØØZ g
,
ØØg h
int
ØØi l
ReauditLevel
ØØm y
)
ØØy z
{
∞∞ 	
try
±± 
{
≤≤ 
string
≥≥ 
sql
≥≥ 
=
≥≥ 
$str
≥≥ 
;
≥≥  
if
µµ 
(
µµ 
	IsReaudit
µµ 
==
µµ  
true
µµ! %
&&
µµ& (
HaveReaudit
µµ) 4
==
µµ5 7
$num
µµ8 9
)
µµ9 :
{
∂∂ 
sql
∑∑ 
=
∑∑ 
$str
∑∑ H
+
∑∑I J
ReauditLevel
∑∑K W
+
∑∑X Y
$str
∑∑Z n
+
∑∑o p
HaveReaudit
∑∑q |
+
∑∑} ~
$str∑∑ ï
+∑∑ñ ó
ReauditNumber∑∑ò •
+∑∑¶ ß
$str∑∑® ª
+∑∑º Ω
Key∑∑æ ¡
+∑∑¬ √
$str∑∑ƒ «
;∑∑« »
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
	IsReaudit
ππ "
==
ππ# %
true
ππ& *
&&
ππ+ -
HaveReaudit
ππ. 9
==
ππ: <
$num
ππ= >
)
ππ> ?
{
∫∫ 
sql
ªª 
=
ªª 
$str
ªª Y
+
ªªZ [
ReauditNumber
ªª\ i
+
ªªj k
$str
ªªl ~
+ªª Ä
KeyªªÅ Ñ
+ªªÖ Ü
$strªªá ä
;ªªä ã
}
ºº 
db
øø 
.
øø 
Execute
øø 
(
øø 
sql
øø 
)
øø 
;
øø  
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
)
¡¡ 
{
¬¬ 
throw
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 	
public
«« 
void
«« 0
"UpdateIsReauditConsolidationLevel1
«« 6
(
««6 7
bool
««7 ;
	IsReaudit
««< E
,
««E F
int
««G J
HaveReaudit
««K V
,
««V W
int
««X [
ReauditNumber
««\ i
,
««i j
int
««k n%
ConsolidationLevel1_Id««o Ö
)««Ö Ü
{
»» 	
try
…… 
{
   
string
ÀÀ 
sql
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
;
ÀÀ  
if
ÕÕ 
(
ÕÕ 
HaveReaudit
ÕÕ 
==
ÕÕ  "
$num
ÕÕ# $
)
ÕÕ$ %
{
ŒŒ 
sql
œœ 
=
œœ 
$str
œœ 4
+
œœ5 6
$str
–– C
+
––D E
HaveReaudit
––F Q
+
––R S
$str
––T j
+
––k l
ReauditNumber
––m z
+
––{ |
$str––} Å
+––Ç É
$str
—— >
+
——? @
$str
““ ;
+
““< =
$str
”” _
+
””` a$
ConsolidationLevel1_Id
””b x
+
””y z
$str””{ ê
;””ê ë
}
‘‘ 
else
’’ 
if
’’ 
(
’’ 
HaveReaudit
’’ $
==
’’% '
$num
’’( )
)
’’) *
{
÷÷ 
sql
◊◊ 
=
◊◊ 
$str
◊◊ 4
+
◊◊5 6
$str
ÿÿ W
+
ÿÿX Y
$str
ŸŸ >
+
ŸŸ? @
$str
⁄⁄ ;
+
⁄⁄< =
$str
€€ i
+
€€j k%
ConsolidationLevel1_Id€€l Ç
+€€É Ñ
$str€€Ö ú
+€€ù û
$str
‹‹ 
+
‹‹  
$str
›› +
+
››, -
$str
ﬁﬁ >
+
ﬁﬁ? @
$str
ﬂﬂ G
+
ﬂﬂH I
ReauditNumber
ﬂﬂJ W
+
ﬂﬂX Y
$str
ﬂﬂZ ^
+
ﬂﬂ_ `
$str‡‡ à
+‡‡â ä&
ConsolidationLevel1_Id‡‡ã °
+‡‡¢ £
$str‡‡§ ®
+‡‡© ™
$str
·· 
+
·· 
$str
‚‚ +
+
‚‚, -
$str
„„ >
+
„„? @
$str
‰‰ 2
+
‰‰3 4
$strÂÂ Ñ
+ÂÂÖ Ü&
ConsolidationLevel1_IdÂÂá ù
+ÂÂû ü
$strÂÂ† §
;ÂÂ§ •
}
ÁÁ 
db
ÍÍ 
.
ÍÍ 
Execute
ÍÍ 
(
ÍÍ 
sql
ÍÍ 
)
ÍÍ 
;
ÍÍ  
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
)
ÏÏ 
{
ÌÌ 
throw
ÓÓ 
;
ÓÓ 
}
ÔÔ 
}
 	
}
ÒÒ 
public
ÛÛ 

partial
ÛÛ 
class
ÛÛ 
ResultPhase
ÛÛ $
{
ÙÙ 
public
ıı 
int
ıı 
Id
ıı 
{
ıı 
get
ıı 
;
ıı 
set
ıı  
;
ıı  !
}
ıı" #
public
ˆˆ 
int
ˆˆ 
ParLevel1_Id
ˆˆ 
{
ˆˆ  !
get
ˆˆ" %
;
ˆˆ% &
set
ˆˆ' *
;
ˆˆ* +
}
ˆˆ, -
public
˜˜ 
int
˜˜ 
ParLevel2_Id
˜˜ 
{
˜˜  !
get
˜˜" %
;
˜˜% &
set
˜˜' *
;
˜˜* +
}
˜˜, -
public
¯¯ 
string
¯¯ 
CollectionDate
¯¯ $
{
¯¯% &
get
¯¯' *
;
¯¯* +
set
¯¯, /
;
¯¯/ 0
}
¯¯1 2
public
˘˘ 
int
˘˘ 
Period
˘˘ 
{
˘˘ 
get
˘˘ 
;
˘˘  
set
˘˘! $
;
˘˘$ %
}
˘˘& '
public
˙˙ 
int
˙˙ 
Shift
˙˙ 
{
˙˙ 
get
˙˙ 
;
˙˙ 
set
˙˙  #
;
˙˙# $
}
˙˙% &
public
˚˚ 
int
˚˚ 
EvaluationNumber
˚˚ #
{
˚˚$ %
get
˚˚& )
;
˚˚) *
set
˚˚+ .
;
˚˚. /
}
˚˚0 1
public
¸¸ 
int
¸¸ 
Phase
¸¸ 
{
¸¸ 
get
¸¸ 
;
¸¸ 
set
¸¸  #
;
¸¸# $
}
¸¸% &
public
˝˝ 
int
˝˝ 
CountPeriod
˝˝ 
{
˝˝  
get
˝˝! $
;
˝˝$ %
set
˝˝& )
;
˝˝) *
}
˝˝+ ,
public
˛˛ 
int
˛˛ 

CountShift
˛˛ 
{
˛˛ 
get
˛˛  #
;
˛˛# $
set
˛˛% (
;
˛˛( )
}
˛˛* +
private
ÅÅ 
SqlConnection
ÅÅ 
db
ÅÅ  
{
ÅÅ! "
get
ÅÅ# &
;
ÅÅ& '
set
ÅÅ( +
;
ÅÅ+ ,
}
ÅÅ- .
public
ÇÇ 
ResultPhase
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÇÇ 
}
ÇÇ  
public
ÉÉ 
ResultPhase
ÉÉ 
(
ÉÉ 
SqlConnection
ÉÉ (
_db
ÉÉ) ,
)
ÉÉ, -
{
ÑÑ 	
db
ÖÖ 
=
ÖÖ 
_db
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
áá 
List
áá 
<
áá 
ResultPhase
áá 
>
áá  

GetByMonth
áá! +
(
áá+ ,
int
áá, /
ParCompany_Id
áá0 =
,
áá= >
DateTime
áá? G
	StartDate
ááH Q
,
ááQ R
DateTime
ááS [
EndDate
áá\ c
)
áác d
{
àà 	
try
ââ 
{
ää 
string
ãã 
sql
ãã 
=
ãã 
$str
ãã (
+
ãã) *
$str
åå "
+
åå# $
$str
çç ,
+
çç- .
$str
éé ,
+
éé- .
$str
èè T
+
èèU V
$str
êê &
+
êê' (
$str
ëë %
+
ëë& '
$str
íí %
+
íí& '
$str
ìì /
+
ìì0 1
$strîî ç
+îîé è
$strïï ç
+ïïé è
$str
ññ '
+
ññ( )
	StartDate
ññ* 3
.
ññ3 4
ToString
ññ4 <
(
ññ< =
$str
ññ= G
)
ññG H
+
ññI J
$str
ññK [
+
ññ\ ]
EndDate
ññ^ e
.
ññe f
ToString
ññf n
(
ññn o
$str
ñño y
)
ññy z
+
ññ{ |
$strññ} ç
+ññé è
$str
óó 6
+
óó7 8
ParCompany_Id
óó9 F
+
óóG H
$stróóI é
+óóè ê
$stròò ç
+òòé è
$strôô ç
+ôôé è
$ströö ç
+ööé è
$strõõ ó
+õõò ô
$strúú ç
+úúé è
$strùù ç
+ùùé è
$strûû ç
+ûûé è
$str
üü H
+
üüI J
	StartDate
üüK T
.
üüT U
ToString
üüU ]
(
üü] ^
$str
üü^ h
)
üüh i
+
üüj k
$str
üül {
+
üü| }
EndDateüü~ Ö
.üüÖ Ü
ToStringüüÜ é
(üüé è
$strüüè ô
)üüô ö
+üüõ ú
$strüüù À
+üüÃ Õ
$str
†† 9
+
††: ;
ParCompany_Id
††< I
+
††J K
$str††L ï
+††ñ ó
$str°° ç
+°°é è
$str¢¢ ç
;¢¢ç é
var
¶¶ 
list
¶¶ 
=
¶¶ 
db
¶¶ 
.
¶¶ 
Query
¶¶ #
<
¶¶# $
ResultPhase
¶¶$ /
>
¶¶/ 0
(
¶¶0 1
sql
¶¶1 4
)
¶¶4 5
.
¶¶5 6
ToList
¶¶6 <
(
¶¶< =
)
¶¶= >
;
¶¶> ?
return
ßß 
list
ßß 
;
ßß 
}
®® 
catch
©© 
(
©© 
	Exception
©© 
)
©© 
{
™™ 
throw
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
}
ÆÆ 
public
∞∞ 

partial
∞∞ 
class
∞∞ "
ResultPhaseFrequency
∞∞ -
{
±± 
public
≤≤ 
int
≤≤ 
ParFrequency_Id
≤≤ "
{
≤≤# $
get
≤≤% (
;
≤≤( )
set
≤≤* -
;
≤≤- .
}
≤≤/ 0
private
¥¥ 
SqlConnection
¥¥ 
db
¥¥  
{
¥¥! "
get
¥¥# &
;
¥¥& '
set
¥¥( +
;
¥¥+ ,
}
¥¥- .
public
µµ "
ResultPhaseFrequency
µµ #
(
µµ# $
)
µµ$ %
{
µµ& '
}
µµ( )
public
∂∂ "
ResultPhaseFrequency
∂∂ #
(
∂∂# $
SqlConnection
∂∂$ 1
_db
∂∂2 5
)
∂∂5 6
{
∑∑ 	
db
∏∏ 
=
∏∏ 
_db
∏∏ 
;
∏∏ 
}
ππ 	
public
∫∫ "
ResultPhaseFrequency
∫∫ #
GetPhaseFrequency
∫∫$ 5
(
∫∫5 6
int
∫∫6 9
ParLevel1_Id
∫∫: F
,
∫∫F G
int
∫∫H K
Phase
∫∫L Q
)
∫∫Q R
{
ªª 	
try
ºº 
{
ΩΩ 
string
ææ 
sql
ææ 
=
ææ 
$str
ææ }
+
ææ~ 
$str
øø }
+
øø~ 
$str
¿¿ S
+
¿¿T U
ParLevel1_Id
¿¿V b
+
¿¿c d
$str¿¿e à
+¿¿â ä
$str
¡¡ }
+
¡¡~ 
$str
¬¬ 2
+
¬¬3 4
Phase
¬¬5 :
+
¬¬; <
$str
¬¬= ~
+¬¬ Ä
$str
√√ }
;
√√} ~
var
«« 
obj
«« 
=
«« 
db
«« 
.
«« 
Query
«« "
<
««" #"
ResultPhaseFrequency
««# 7
>
««7 8
(
««8 9
sql
««9 <
)
««< =
.
««= >
FirstOrDefault
««> L
(
««L M
)
««M N
;
««N O
return
»» 
obj
»» 
;
»» 
}
…… 
catch
   
(
   
	Exception
   
)
   
{
ÀÀ 
throw
ÃÃ 
;
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
}
œœ 
public
—— 

partial
—— 
class
——  
ResultLevel2Period
—— +
{
““ 
public
”” 
DateTime
”” 
CollectionDate
”” &
{
””' (
get
””) ,
;
””, -
set
””. 1
;
””1 2
}
””3 4
public
‘‘ 
int
‘‘ 
Period
‘‘ 
{
‘‘ 
get
‘‘ 
;
‘‘  
set
‘‘! $
;
‘‘$ %
}
‘‘& '
private
÷÷ 
SqlConnection
÷÷ 
db
÷÷  
{
÷÷! "
get
÷÷# &
;
÷÷& '
set
÷÷( +
;
÷÷+ ,
}
÷÷- .
public
◊◊  
ResultLevel2Period
◊◊ !
(
◊◊! "
)
◊◊" #
{
◊◊$ %
}
◊◊& '
public
ÿÿ  
ResultLevel2Period
ÿÿ !
(
ÿÿ! "
SqlConnection
ÿÿ" /
_db
ÿÿ0 3
)
ÿÿ3 4
{
ŸŸ 	
db
⁄⁄ 
=
⁄⁄ 
_db
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
‹‹ 
List
‹‹ 
<
‹‹  
ResultLevel2Period
‹‹ &
>
‹‹& '#
GetResultLevel2Period
‹‹( =
(
‹‹= >
int
‹‹> A
Id
‹‹B D
,
‹‹D E
int
‹‹F I
ParCompany_Id
‹‹J W
,
‹‹W X
int
‹‹Y \
ParLevel1_Id
‹‹] i
,
‹‹i j
int
‹‹k n
ParLevel2_Id
‹‹o {
,
‹‹{ |
DateTime‹‹} Ö
	StartDate‹‹Ü è
,‹‹è ê
DateTime‹‹ë ô
EndDate‹‹ö °
,‹‹° ¢
int‹‹£ ¶
Shift‹‹ß ¨
)‹‹¨ ≠
{
›› 	
try
ﬁﬁ 
{
ﬂﬂ 
string
‡‡ 
sql
‡‡ 
=
‡‡ 
$str‡‡ ô
+‡‡ö õ
$str
·· L
+
··M N
Id
··O Q
+
··R S
$str
··T d
+
··e f
ParCompany_Id
··g t
+
··u v
$str··w à
+··â ä
Shift··ã ê
+··ë í
$str··ì §
+··• ¶
$str
‚‚ 7
+
‚‚8 9
	StartDate
‚‚: C
.
‚‚C D
ToString
‚‚D L
(
‚‚L M
$str
‚‚M W
)
‚‚W X
+
‚‚Y Z
$str
‚‚[ j
+
‚‚k l
EndDate
‚‚m t
.
‚‚t u
ToString
‚‚u }
(
‚‚} ~
$str‚‚~ à
)‚‚à â
+‚‚ä ã
$str‚‚å ô
+‚‚ö õ
$str
„„ ^
;
„„^ _
var
ÂÂ 
obj
ÂÂ 
=
ÂÂ 
db
ÂÂ 
.
ÂÂ 
Query
ÂÂ "
<
ÂÂ" # 
ResultLevel2Period
ÂÂ# 5
>
ÂÂ5 6
(
ÂÂ6 7
sql
ÂÂ7 :
)
ÂÂ: ;
.
ÂÂ; <
ToList
ÂÂ< B
(
ÂÂB C
)
ÂÂC D
;
ÂÂD E
return
ÊÊ 
obj
ÊÊ 
;
ÊÊ 
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
)
ËË 
{
ÈÈ 
throw
ÍÍ 
;
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
}
ÌÌ 
public
ÔÔ 

partial
ÔÔ 
class
ÔÔ %
ResultEvaluationDefects
ÔÔ 0
{
 
public
ÒÒ 
int
ÒÒ 
Defects
ÒÒ 
{
ÒÒ 
get
ÒÒ  
;
ÒÒ  !
set
ÒÒ" %
;
ÒÒ% &
}
ÒÒ' (
public
ÚÚ 
int
ÚÚ 
EvaluationNumber
ÚÚ #
{
ÚÚ$ %
get
ÚÚ& )
;
ÚÚ) *
set
ÚÚ+ .
;
ÚÚ. /
}
ÚÚ0 1
public
ÛÛ 
int
ÛÛ 
Sample
ÛÛ 
{
ÛÛ 
get
ÛÛ 
;
ÛÛ  
set
ÛÛ! $
;
ÛÛ$ %
}
ÛÛ& '
public
ÙÙ 
int
ÙÙ 
Period
ÙÙ 
{
ÙÙ 
get
ÙÙ 
;
ÙÙ  
set
ÙÙ! $
;
ÙÙ$ %
}
ÙÙ& '
public
ıı 
int
ıı 
Shift
ıı 
{
ıı 
get
ıı 
;
ıı 
set
ıı  #
;
ıı# $
}
ıı% &
private
¯¯ 
SqlConnection
¯¯ 
db
¯¯  
{
¯¯! "
get
¯¯# &
;
¯¯& '
set
¯¯( +
;
¯¯+ ,
}
¯¯- .
public
˘˘ %
ResultEvaluationDefects
˘˘ &
(
˘˘& '
)
˘˘' (
{
˘˘) *
}
˘˘+ ,
public
˙˙ %
ResultEvaluationDefects
˙˙ &
(
˙˙& '
SqlConnection
˙˙' 4
_db
˙˙5 8
)
˙˙8 9
{
˚˚ 	
db
¸¸ 
=
¸¸ 
_db
¸¸ 
;
¸¸ 
}
˝˝ 	
public
˛˛ 
List
˛˛ 
<
˛˛ %
ResultEvaluationDefects
˛˛ +
>
˛˛+ ,
GetByDay
˛˛- 5
(
˛˛5 6
int
˛˛6 9
ParCompany_Id
˛˛: G
,
˛˛G H
DateTime
˛˛I Q
Date
˛˛R V
,
˛˛V W
int
˛˛X [
ParLevel1_Id
˛˛\ h
)
˛˛h i
{
ˇˇ 	
try
ÄÄ 
{
ÅÅ 
string
ÇÇ 
sql
ÇÇ 
=
ÇÇ 
$strÇÇ •
+ÇÇ¶ ß
$str
ÉÉ  y
+
ÉÉz {
$str
ÑÑ  1
+
ÑÑ2 3
ParLevel1_Id
ÑÑ4 @
+
ÑÑA B
$str
ÑÑC z
+
ÑÑ{ |
$str
ÖÖ  G
+
ÖÖH I
Date
ÖÖJ N
.
ÖÖN O
ToString
ÖÖO W
(
ÖÖW X
$str
ÖÖX b
)
ÖÖb c
+
ÖÖd e
$str
ÖÖf z
+
ÖÖ{ |
$str
ÜÜ  T
;
ÜÜT U
var
ââ 
list
ââ 
=
ââ 
db
ââ 
.
ââ 
Query
ââ #
<
ââ# $%
ResultEvaluationDefects
ââ$ ;
>
ââ; <
(
ââ< =
sql
ââ= @
)
ââ@ A
.
ââA B
ToList
ââB H
(
ââH I
)
ââI J
;
ââJ K
return
ää 
list
ää 
;
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
)
åå 
{
çç 
throw
éé 
;
éé 
}
èè 
}
êê 	
}
ëë 
public
òò 

partial
òò 
class
òò  
ResultadoUmaColuna
òò +
{
ôô 
public
úú 
string
úú 
retorno
úú 
{
úú 
get
úú  #
;
úú# $
set
úú% (
;
úú( )
}
úú* +
}
ûû 
}†† êX
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\SGQDBContext_YTOARA.cs
	namespace 	
SGQDBContextYTOARA
 
{ 
public 

class 
SGQDBContext_YTOARA $
{ 
string 
conexao 
; 
SqlConnection 
db 
; 
string 
sql 
; 
public 
string 
label 
; 
public 
	Estrutura 
	estrutura "
;" #
public 
Elemento 
elemento  
;  !
public 
SGQDBContext_YTOARA "
(" #
)# $
{ 	
conexao 
= 
System 
. 
Configuration *
.* + 
ConfigurationManager+ ?
.? @
ConnectionStrings@ Q
[Q R
$strR c
]c d
.d e
ConnectionStringe u
;u v
db 
= 
new 
SqlConnection "
(" #
conexao# *
)* +
;+ ,
	estrutura 
= 
new 
	Estrutura %
(% &
)& '
;' (
elemento   
=   
new   
Elemento   #
(  # $
)  $ %
;  % &
}!! 	
public'' 
List'' 
<'' 
	Estrutura'' 
>'' 
getAllEstrutura'' .
(''. /
)''/ 0
{(( 	
sql)) 
=)) 
$str)) -
;))- .
return++ 
db++ 
.++ 
Query++ 
<++ 
	Estrutura++ %
>++% &
(++& '
sql++' *
)++* +
.+++ ,
ToList++, 2
(++2 3
)++3 4
;++4 5
},, 	
public44 
List44 
<44 
	Estrutura44 
>44 
getEstruturaByParam44 2
(442 3
string443 9
	parametro44: C
,44C D
string44E K
valor44L Q
)44Q R
{55 	
sql66 
=66 
$str66 2
+663 4
	parametro665 >
+66? @
$str66A D
+66E F
valor66G L
;66L M
return88 
db88 
.88 
Query88 
<88 
	Estrutura88 %
>88% &
(88& '
sql88' *
)88* +
.88+ ,
ToList88, 2
(882 3
)883 4
;884 5
}99 	
public?? 
List?? 
<?? 
Elemento?? 
>?? 
getALLElemento?? ,
(??, -
)??- .
{@@ 	
sqlAA 
=AA 
$strAA /
+AA0 1
$strBB M
;BBM N
returnDD 
dbDD 
.DD 
QueryDD 
<DD 
ElementoDD $
>DD$ %
(DD% &
sqlDD& )
)DD) *
.DD* +
ToListDD+ 1
(DD1 2
)DD2 3
;DD3 4
}EE 	
publicMM 
ListMM 
<MM 
ElementoMM 
>MM 
getElementoByParamMM 0
(MM0 1
stringMM1 7
	parametroMM8 A
,MMA B
stringMMC I
valorMMJ O
)MMO P
{NN 	
sqlOO 
=OO 
$strOO /
+OO0 1
$strPP L
+PPM N
$strQQ 
+QQ 
	parametroQQ &
+QQ' (
$strQQ) ,
+QQ- .
valorQQ/ 4
;QQ4 5
returnSS 
dbSS 
.SS 
QuerySS 
<SS 
ElementoSS $
>SS$ %
(SS% &
sqlSS& )
)SS) *
.SS* +
ToListSS+ 1
(SS1 2
)SS2 3
;SS3 4
}TT 	
publicZZ 
ListZZ 
<ZZ 
EstruturaVinculadaZZ &
>ZZ& '"
getElementoEstruturadoZZ( >
(ZZ> ?
)ZZ? @
{[[ 	
sql\\ 
=\\ 
$str\\ .
+\\/ 0
$str]] M
;]]M N
return__ 
db__ 
.__ 
Query__ 
<__ 
EstruturaVinculada__ .
>__. /
(__/ 0
sql__0 3
)__3 4
.__4 5
ToList__5 ;
(__; <
)__< =
;__= >
}`` 	
publicgg 
stringgg 
criarHeadergg !
(gg! "
Listgg" &
<gg& '
EstruturaVinculadagg' 9
>gg9 :
Itensgg: ?
)gg? @
{hh 	
stringii 
abredropdowlistii "
=ii# $
$strii% F
;iiF G
stringjj 
fechadropdowlistjj #
=jj$ %
$strjj& 1
;jj1 2
stringll 
labelll 
=ll 
$strll I
;llI J
stringnn 
telann 
=nn 
$strnn /
+nn/ 0
labelnn0 5
;nn5 6
forpp 
(pp 
intpp 
ipp 
=pp 
$numpp 
;pp 
ipp 
<pp 
Itenspp #
.pp# $
Countpp$ )
;pp) *
ipp+ ,
++pp, .
)pp. /
{qq 
ifrr 
(rr 
Itensrr 
[rr 
irr 
]rr 
.rr 
idpairr !
.rr! "
ToStringrr" *
(rr* +
)rr+ ,
==rr- /
nullrr0 4
)rr4 5
{ss 
telatt 
+=tt 
$strtt I
+uu 
abredropdowlistuu -
+vv 
$strvv F
+vvG H
ItensvvI N
[vvN O
ivvO P
]vvP Q
.vvQ R

idestruruavvR \
+vv] ^
$strvv_ q
+vvr s
Itensvvt y
[vvy z
ivvz {
]vv{ |
.vv| }
idpai	vv} Ç
+
vvÉ Ñ
$str
vvÖ ä
+
vvã å
Itens
vvç í
[
vví ì
i
vvì î
]
vvî ï
.
vvï ñ
elemento
vvñ û
+
vvü †
$str
vv° ¨
+ww 
fechadropdowlistww .
+xx 
$strxx %
;xx% &
}yy 
elsezz 
ifzz 
(zz 
Itenszz 
[zz 
izz  
]zz  !
.zz! "
idpaizz" '
==zz( *
$numzz+ ,
)zz, -
{{{ 
tela|| 
+=|| 
$str|| J
+}} 
abredropdowlist}} -
+~~ 
$str~~ F
+~~G H
Itens~~I N
[~~N O
i~~O P
]~~P Q
.~~Q R

idestrurua~~R \
+~~] ^
$str~~_ q
+~~r s
Itens~~t y
[~~y z
i~~z {
]~~{ |
.~~| }
idpai	~~} Ç
+
~~É Ñ
$str
~~Ö ä
+
~~ã å
Itens
~~ç í
[
~~í ì
i
~~ì î
]
~~î ï
.
~~ï ñ
elemento
~~ñ û
+
~~ü †
$str
~~° ¨
+ 
fechadropdowlist .
+
ÄÄ 
$str
ÄÄ %
;
ÄÄ% &
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
Itens
ÇÇ 
[
ÇÇ 
i
ÇÇ  
]
ÇÇ  !
.
ÇÇ! "
idpai
ÇÇ" '
==
ÇÇ( *
$num
ÇÇ+ ,
)
ÇÇ, -
{
ÉÉ 
tela
ÑÑ 
+=
ÑÑ 
$str
ÑÑ J
+
ÖÖ 
abredropdowlist
ÖÖ -
+
ÜÜ 
$str
ÜÜ F
+
ÜÜG H
Itens
ÜÜI N
[
ÜÜN O
i
ÜÜO P
]
ÜÜP Q
.
ÜÜQ R

idestrurua
ÜÜR \
+
ÜÜ] ^
$str
ÜÜ_ q
+
ÜÜr s
Itens
ÜÜt y
[
ÜÜy z
i
ÜÜz {
]
ÜÜ{ |
.
ÜÜ| }
idpaiÜÜ} Ç
+ÜÜÉ Ñ
$strÜÜÖ ä
+ÜÜã å
ItensÜÜç í
[ÜÜí ì
iÜÜì î
]ÜÜî ï
.ÜÜï ñ
elementoÜÜñ û
+ÜÜü †
$strÜÜ° ¨
+
áá 
fechadropdowlist
áá .
+
àà 
$str
àà %
;
àà% &
}
ââ 
else
ää 
if
ää 
(
ää 
(
ää 
Itens
ää 
[
ää  
i
ää  !
]
ää! "
.
ää" #
idpai
ää# (
==
ää) +
$num
ää, -
)
ää- .
&&
ää. 0
(
ää1 2
Itens
ää2 7
[
ää7 8
i
ää8 9
]
ää9 :
.
ää: ;
idpai
ää; @
==
ääA C
$num
ääD E
)
ääE F
&&
ääF H
(
ääI J
Itens
ääJ O
[
ääO P
i
ääP Q
]
ääQ R
.
ääR S
idpai
ääS X
==
ääY [
$num
ää\ ]
)
ää] ^
)
ää^ _
{
ãã 
tela
åå 
+=
åå 
$str
åå J
+
çç 
abredropdowlist
çç -
+
éé 
$str
éé F
+
ééG H
Itens
ééI N
[
ééN O
i
ééO P
]
ééP Q
.
ééQ R

idestrurua
ééR \
+
éé] ^
$str
éé_ q
+
éér s
Itens
éét y
[
ééy z
i
ééz {
]
éé{ |
.
éé| }
idpaiéé} Ç
+ééÉ Ñ
$strééÖ ä
+ééã å
Itensééç í
[ééí ì
iééì î
]ééî ï
.ééï ñ
elementoééñ û
+ééü †
$stréé° ¨
+
èè 
fechadropdowlist
èè .
+
êê 
$str
êê %
;
êê% &
}
ëë 
else
íí 
if
íí 
(
íí 
(
íí 
Itens
íí 
[
íí  
i
íí  !
]
íí! "
.
íí" #
idpai
íí# (
==
íí) +
$num
íí, -
)
íí- .
&&
íí/ 1
(
íí2 3
Itens
íí3 8
[
íí8 9
i
íí9 :
]
íí: ;
.
íí; <
idpai
íí< A
==
ííB D
$num
ííE F
)
ííF G
)
ííG H
{
ìì 
tela
îî 
+=
îî 
$str
îî J
+
ïï 
abredropdowlist
ïï -
+
ññ 
$str
ññ F
+
ññG H
Itens
ññI N
[
ññN O
i
ññO P
]
ññP Q
.
ññQ R

idestrurua
ññR \
+
ññ] ^
$str
ññ_ q
+
ññr s
Itens
ññt y
[
ññy z
i
ññz {
]
ññ{ |
.
ññ| }
idpaiññ} Ç
+ññÉ Ñ
$strññÖ ä
+ññã å
Itensññç í
[ññí ì
iññì î
]ññî ï
.ññï ñ
elementoñññ û
+ññü †
$strññ° ¨
+
óó 
fechadropdowlist
óó .
+
òò 
$str
òò %
;
òò% &
}
ôô 
else
öö 
{
õõ 
break
úú 
;
úú 
}
ùù 
}
ûû 
tela
†† 
+=
†† 
$str
†† 
;
†† 
return
¢¢ 
tela
¢¢ 
;
¢¢ 
}
££ 	
}
•• 
}¶¶ Ç«$
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Services\SyncServices.asmx.cs
	namespace 	
	SgqSystem
 
. 
Services 
{ 
[ 

WebService 
( 
	Namespace 
= 
$str 1
)1 2
]2 3
[ 
WebServiceBinding 
( 

ConformsTo !
=" #
WsiProfiles$ /
./ 0
BasicProfile1_10 ?
)? @
]@ A
[ 

EnableCors 
( 
origins 
: 
$str 
, 
headers %
:% &
$str' *
,* +
methods, 3
:3 4
$str5 8
)8 9
]9 :
[ 
System 
. 
ComponentModel 
. 
ToolboxItem &
(& '
false' ,
), -
]- .
[ 
System 
. 
Web 
. 
Script 
. 
Services 
.  
ScriptService  -
]- .
public   

class   
SyncServices   
:   
System    &
.  & '
Web  ' *
.  * +
Services  + 3
.  3 4

WebService  4 >
{!! 
string$$ 
conexao$$ 
;$$ 
string%%  
conexaoSGQ_GlobalADO%% #
;%%# $
public'' 
SqlConnection'' 
db'' 
;''  
public(( 
SqlConnection(( 
SGQ_GlobalADO(( *
;((* +
private++ 
SGQDBContext_YTOARA++ #

ytoaraUtil++$ .
;++. /
Dominio-- 
.-- 
SgqDbDevEntities--  
dbEf--! %
;--% &
public// 
SyncServices// 
(// 
)// 
{00 	
conexao22 
=22 
System22 
.22 
Configuration22 *
.22* + 
ConfigurationManager22+ ?
.22? @
ConnectionStrings22@ Q
[22Q R
$str22R c
]22c d
.22d e
ConnectionString22e u
;22u v

ytoaraUtil44 
=44 
new44 
SGQDBContext_YTOARA44 0
(440 1
)441 2
;442 3
if66 
(66 
GlobalConfig66 
.66 
Brasil66 #
)66# $
{77  
conexaoSGQ_GlobalADO88 $
=88% &
System88' -
.88- .
Configuration88. ;
.88; < 
ConfigurationManager88< P
.88P Q
ConnectionStrings88Q b
[88b c
$str88c r
]88r s
.88s t
ConnectionString	88t Ñ
;
88Ñ Ö
}99 
db;; 
=;; 
new;; 
SqlConnection;; "
(;;" #
conexao;;# *
);;* +
;;;+ ,
SGQ_GlobalADO<< 
=<< 
new<< 
SqlConnection<<  -
(<<- . 
conexaoSGQ_GlobalADO<<. B
)<<B C
;<<C D
dbEf?? 
=?? 
new?? 
Dominio?? 
.?? 
SgqDbDevEntities?? /
(??/ 0
)??0 1
;??1 2
}AA 	
	protectedCC 
overrideCC 
voidCC 
DisposeCC  '
(CC' (
boolCC( ,
	disposingCC- 6
)CC6 7
{DD 	
ifEE 
(EE 
	disposingEE 
)EE 
{FF 
SGQ_GlobalADOHH 
.HH 
DisposeHH %
(HH% &
)HH& '
;HH' (
dbJJ 
.JJ 
DisposeJJ 
(JJ 
)JJ 
;JJ 
}KK 
baseLL 
.LL 
DisposeLL 
(LL 
	disposingLL "
)LL" #
;LL# $
}MM 	
boolYY 
naoAvaliadoYY 
=YY 
trueYY 
;YY  
privatebb 
DateTimebb 
DateCollectConvertbb +
(bb+ ,
stringbb, 2
collectionDatebb3 A
)bbA B
{cc 	
ifee 
(ee 
collectionDateee 
.ee 
Containsee '
(ee' (
$stree( +
)ee+ ,
)ee, -
{ff 
collectionDategg 
=gg  
collectionDategg! /
.gg/ 0
	Substringgg0 9
(gg9 :
$numgg: ;
,gg; <
$numgg= >
)gg> ?
+gg@ A
$strggB E
+ggF G
collectionDateggH V
.ggV W
	SubstringggW `
(gg` a
$numgga b
,ggb c
$numggd e
)gge f
+ggg h
$strggi l
+ggm n
collectionDateggo }
.gg} ~
	Substring	gg~ á
(
ggá à
$num
ggà â
,
ggâ ä
$num
ggã å
)
ggå ç
+
ggé è
$str
ggê õ
;
ggõ ú
}hh 
elseii 
ifkk 
(kk 
!kk 
collectionDatekk 
.kk  
Containskk  (
(kk( )
$strkk) ,
)kk, -
)kk- .
{ll 
collectionDatemm 
=mm  
collectionDatemm! /
.mm/ 0
	Substringmm0 9
(mm9 :
$nummm: ;
,mm; <
$nummm= >
)mm> ?
+mm@ A
$strmmB E
+mmF G
collectionDatemmH V
.mmV W
	SubstringmmW `
(mm` a
$nummma b
,mmb c
$nummmd e
)mme f
+mmg h
$strmmi l
+mmm n
collectionDatemmo }
.mm} ~
	Substring	mm~ á
(
mmá à
$num
mmà â
,
mmâ ä
$num
mmã å
)
mmå ç
+
mmé è
$str
mmê õ
;
mmõ ú
}nn 
stringoo 
[oo 
]oo 
dataoo 
=oo 
collectionDateoo *
.oo* +
Splitoo+ 0
(oo0 1
$charoo1 4
)oo4 5
;oo5 6
stringqq 
anoqq 
=qq 
dataqq 
[qq 
$numqq 
]qq  
.qq  !
	Substringqq! *
(qq* +
$numqq+ ,
,qq, -
$numqq. /
)qq/ 0
;qq0 1
stringrr 
mesrr 
=rr 
datarr 
[rr 
$numrr 
]rr  
;rr  !
stringss 
diass 
=ss 
datass 
[ss 
$numss 
]ss  
;ss  !
stringuu 
horauu 
=uu 
datauu 
[uu 
$numuu  
]uu  !
.uu! "
	Substringuu" +
(uu+ ,
$numuu, -
,uu- .
(uu/ 0
datauu0 4
[uu4 5
$numuu5 6
]uu6 7
.uu7 8
Lengthuu8 >
-uu? @
$numuuA B
)uuB C
)uuC D
;uuD E
horavv 
=vv 
horavv 
.vv 
Trimvv 
(vv 
)vv 
;vv 
ifww 
(ww 
horaww 
.ww 
Lengthww 
==ww 
$numww  
)ww  !
{xx 
horayy 
+=yy 
$stryy 
;yy 
}zz 
string{{ 
[{{ 
]{{ 
	horaArray{{ 
={{  
hora{{! %
.{{% &
Split{{& +
({{+ ,
$char{{, /
){{/ 0
;{{0 1
DateTime~~ 
newData~~ 
=~~ 
new~~ "
DateTime~~# +
(~~+ ,
year, 0
:0 1
Convert2 9
.9 :
ToInt32: A
(A B
anoB E
)E F
,F G
month
ÄÄ, 1
:
ÄÄ1 2
Convert
ÄÄ3 :
.
ÄÄ: ;
ToInt32
ÄÄ; B
(
ÄÄB C
mes
ÄÄC F
)
ÄÄF G
,
ÄÄG H
day
ÅÅ, /
:
ÅÅ/ 0
Convert
ÅÅ1 8
.
ÅÅ8 9
ToInt32
ÅÅ9 @
(
ÅÅ@ A
dia
ÅÅA D
)
ÅÅD E
,
ÅÅE F
hour
ÇÇ, 0
:
ÇÇ0 1
Convert
ÇÇ2 9
.
ÇÇ9 :
ToInt32
ÇÇ: A
(
ÇÇA B
	horaArray
ÇÇB K
[
ÇÇK L
$num
ÇÇL M
]
ÇÇM N
)
ÇÇN O
,
ÇÇO P
minute
ÉÉ, 2
:
ÉÉ2 3
Convert
ÉÉ4 ;
.
ÉÉ; <
ToInt32
ÉÉ< C
(
ÉÉC D
	horaArray
ÉÉD M
[
ÉÉM N
$num
ÉÉN O
]
ÉÉO P
)
ÉÉP Q
,
ÉÉQ R
second
ÑÑ, 2
:
ÑÑ2 3
Convert
ÑÑ4 ;
.
ÑÑ; <
ToInt32
ÑÑ< C
(
ÑÑC D
	horaArray
ÑÑD M
[
ÑÑM N
$num
ÑÑN O
]
ÑÑO P
)
ÑÑP Q
)
ÑÑQ R
;
ÑÑR S
return
ÜÜ 
newData
ÜÜ 
;
ÜÜ 
}
áá 	
public
éé 
string
éé  
DefaultValueReturn
éé (
(
éé( )
string
éé) /
valor
éé0 5
,
éé5 6
string
éé7 =
valorDefault
éé> J
)
ééJ K
{
èè 	
if
êê 
(
êê 
string
êê 
.
êê 
IsNullOrEmpty
êê $
(
êê$ %
valor
êê% *
)
êê* +
||
êê, .
valor
êê/ 4
==
êê5 7
$str
êê8 C
||
êêD F
valor
êêG L
==
êêM O
$str
êêP V
)
êêV W
{
ëë 
return
íí 
valorDefault
íí #
;
íí# $
}
ìì 
return
îî 
valor
îî 
;
îî 
}
ïï 	
public
õõ 
string
õõ 
BoolConverter
õõ #
(
õõ# $
string
õõ$ *
valor
õõ+ 0
)
õõ0 1
{
úú 	
valor
ùù 
=
ùù 
valor
ùù 
.
ùù 
ToLower
ùù !
(
ùù! "
)
ùù" #
;
ùù# $
if
ûû 
(
ûû 
valor
ûû 
==
ûû 
$str
ûû 
)
ûû  
{
üü 
return
†† 
$str
†† 
;
†† 
}
°° 
else
¢¢ 
{
££ 
return
§§ 
$str
§§ 
;
§§ 
}
•• 
}
¶¶ 	
public
ßß 
string
ßß $
BoolCompletedConverter
ßß ,
(
ßß, -
string
ßß- 3
valor
ßß4 9
)
ßß9 :
{
®® 	
valor
©© 
=
©© 
valor
©© 
.
©© 
ToLower
©© !
(
©©! "
)
©©" #
;
©©# $
if
™™ 
(
™™ 
valor
™™ 
==
™™ 
$str
™™ $
)
™™$ %
{
´´ 
return
¨¨ 
$str
¨¨ 
;
¨¨ 
}
≠≠ 
else
ÆÆ 
{
ØØ 
return
∞∞ 
$str
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
≥≥ 
int
≥≥ 
insertLogJson
≥≥  
(
≥≥  !
string
≥≥! '
result
≥≥( .
,
≥≥. /
string
≥≥0 6
log
≥≥7 :
,
≥≥: ;
string
≥≥< B
deviceId
≥≥C K
,
≥≥K L
string
≥≥M S

AppVersion
≥≥T ^
,
≥≥^ _
string
≥≥` f
callback
≥≥g o
)
≥≥o p
{
¥¥ 	
string
µµ 
sql
µµ 
=
µµ 
$str
µµ o
+
µµp q
$str
∂∂ "
+
∂∂# $
$str
∑∑ 
+
∑∑ 
result
∑∑  &
.
∑∑& '
Replace
∑∑' .
(
∑∑. /
$str
∑∑/ 2
,
∑∑2 3
$str
∑∑4 6
)
∑∑6 7
+
∑∑8 9
$str
∑∑: @
+
∑∑A B
log
∑∑C F
.
∑∑F G
Replace
∑∑G N
(
∑∑N O
$str
∑∑O R
,
∑∑R S
$str
∑∑T V
)
∑∑V W
+
∑∑X Y
$str
∑∑Z k
+
∑∑l m
deviceId
∑∑n v
+
∑∑w x
$str
∑∑y 
+∑∑Ä Å

AppVersion∑∑Ç å
+∑∑ç é
$str∑∑è ï
+∑∑ñ ó
callback∑∑ò †
+∑∑° ¢
$str∑∑£ ß
;∑∑ß ®
string
∏∏ 
conexao
∏∏ 
=
∏∏ 
System
∏∏ #
.
∏∏# $
Configuration
∏∏$ 1
.
∏∏1 2"
ConfigurationManager
∏∏2 F
.
∏∏F G
ConnectionStrings
∏∏G X
[
∏∏X Y
$str
∏∏Y j
]
∏∏j k
.
∏∏k l
ConnectionString
∏∏l |
;
∏∏| }
try
ππ 
{
∫∫ 
using
ªª 
(
ªª 
SqlConnection
ªª $

connection
ªª% /
=
ªª0 1
new
ªª2 5
SqlConnection
ªª6 C
(
ªªC D
conexao
ªªD K
)
ªªK L
)
ªªL M
{
ºº 
using
ΩΩ 
(
ΩΩ 

SqlCommand
ΩΩ %
command
ΩΩ& -
=
ΩΩ. /
new
ΩΩ0 3

SqlCommand
ΩΩ4 >
(
ΩΩ> ?
sql
ΩΩ? B
,
ΩΩB C

connection
ΩΩD N
)
ΩΩN O
)
ΩΩO P
{
ææ 

connection
øø "
.
øø" #
Open
øø# '
(
øø' (
)
øø( )
;
øø) *
var
√√ 
i
√√ 
=
√√ 
Convert
√√  '
.
√√' (
ToInt32
√√( /
(
√√/ 0
command
√√0 7
.
√√7 8
ExecuteNonQuery
√√8 G
(
√√G H
)
√√H I
)
√√I J
;
√√J K
if
ƒƒ 
(
ƒƒ 
i
ƒƒ 
>
ƒƒ 
$num
ƒƒ  !
)
ƒƒ! "
{
≈≈ 
return
∆∆ "
i
∆∆# $
;
∆∆$ %
}
«« 
else
»» 
{
…… 
return
   "
$num
  # $
;
  $ %
}
ÀÀ 
}
ŒŒ 
if
œœ 
(
œœ 

connection
œœ "
.
œœ" #
State
œœ# (
==
œœ) +
System
œœ, 2
.
œœ2 3
Data
œœ3 7
.
œœ7 8
ConnectionState
œœ8 G
.
œœG H
Open
œœH L
)
œœL M

connection
œœN X
.
œœX Y
Close
œœY ^
(
œœ^ _
)
œœ_ `
;
œœ` a
}
–– 
}
—— 
catch
““ 
(
““ 
SqlException
““ 
ex
““  "
)
““" #
{
”” 
throw
‘‘ 
;
‘‘ 
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
ex
÷÷ 
)
÷÷  
{
◊◊ 
throw
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
[
ÌÌ 	
	WebMethod
ÌÌ	 
]
ÌÌ 
public
ÓÓ 
string
ÓÓ 

InsertJson
ÓÓ  
(
ÓÓ  !
string
ÓÓ! '
ObjResultJSon
ÓÓ( 5
,
ÓÓ5 6
string
ÓÓ7 =
deviceId
ÓÓ> F
,
ÓÓF G
string
ÓÓH N
	deviceMac
ÓÓO X
,
ÓÓX Y
bool
ÓÓZ ^
autoSend
ÓÓ_ g
)
ÓÓg h
{
ÔÔ 	
SqlConnection
ÒÒ 
.
ÒÒ 
ClearAllPools
ÒÒ '
(
ÒÒ' (
)
ÒÒ( )
;
ÒÒ) *
ObjResultJSon
¯¯ 
=
¯¯ 
ObjResultJSon
¯¯ )
.
¯¯) *
Replace
¯¯* 1
(
¯¯1 2
$str
¯¯2 7
,
¯¯7 8
$str
¯¯9 ;
)
¯¯; <
;
¯¯< =
var
˙˙ "
objObjResultJSonPuro
˙˙ $
=
˙˙% &
ObjResultJSon
˙˙' 4
;
˙˙4 5
string
¸¸ 
	versaoApp
¸¸ 
=
¸¸ 
null
¸¸ #
;
¸¸# $
try
˛˛ 
{
ˇˇ 
if
ÅÅ 
(
ÅÅ 
string
ÅÅ 
.
ÅÅ 
IsNullOrEmpty
ÅÅ (
(
ÅÅ( )
ObjResultJSon
ÅÅ) 6
)
ÅÅ6 7
)
ÅÅ7 8
{
ÇÇ 
return
ÉÉ 
null
ÉÉ 
;
ÉÉ  
}
ÑÑ 
string
ÜÜ 
key
ÜÜ 
=
ÜÜ 
$str
ÜÜ %
;
ÜÜ% &
ObjResultJSon
ââ 
=
ââ 
ObjResultJSon
ââ  -
.
ââ- .
Replace
ââ. 5
(
ââ5 6
$str
ââ6 K
,
ââK L
$str
ââM P
)
ââP Q
.
ââQ R
Replace
ââR Y
(
ââY Z
$str
ââZ e
,
ââe f
$str
ââg i
)
ââi j
.
ââj k
Replace
ââk r
(
ââr s
$str
ââs 
,ââ Ä
$strââÅ É
)ââÉ Ñ
;ââÑ Ö
string
åå 
[
åå 
]
åå 
arrayObj
åå !
=
åå" #
ObjResultJSon
åå$ 1
.
åå1 2
Split
åå2 7
(
åå7 8
$char
åå8 ;
)
åå; <
;
åå< =
string
êê 
conexao
êê 
=
êê  
System
êê! '
.
êê' (
Configuration
êê( 5
.
êê5 6"
ConfigurationManager
êê6 J
.
êêJ K
ConnectionStrings
êêK \
[
êê\ ]
$str
êê] n
]
êên o
.
êêo p
ConnectionStringêêp Ä
;êêÄ Å
using
ëë 
(
ëë 
SqlConnection
ëë $

connection
ëë% /
=
ëë0 1
new
ëë2 5
SqlConnection
ëë6 C
(
ëëC D
conexao
ëëD K
)
ëëK L
)
ëëL M
{
íí 

connection
ìì 
.
ìì 
Open
ìì #
(
ìì# $
)
ìì$ %
;
ìì% &

SqlCommand
ïï 
command
ïï &
;
ïï& '
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ  
$num
ññ! "
;
ññ" #
i
ññ$ %
<
ññ& '
arrayObj
ññ( 0
.
ññ0 1
Length
ññ1 7
;
ññ7 8
i
ññ9 :
++
ññ: <
)
ññ< =
{
óó 
string
ôô 
[
ôô 
]
ôô  
result
ôô! '
=
ôô( )
arrayObj
ôô* 2
[
ôô2 3
i
ôô3 4
]
ôô4 5
.
ôô5 6
Split
ôô6 ;
(
ôô; <
$char
ôô< ?
)
ôô? @
;
ôô@ A
string
õõ 
[
õõ 
]
õõ  

resultCopy
õõ! +
=
õõ, -
result
õõ. 4
;
õõ4 5
while
úú 
(
úú 
!
úú 

resultCopy
úú )
[
úú) *
$num
úú* ,
]
úú, -
.
úú- .
Contains
úú. 6
(
úú6 7
$str
úú7 B
)
úúB C
&&
úúD F

resultCopy
úúG Q
.
úúQ R
Count
úúR W
(
úúW X
)
úúX Y
>
úúZ [
$num
úú\ ^
)
úú^ _
{
ùù 

resultCopy
ûû &
=
ûû' (

RemoveFrom
ûû) 3
(
ûû3 4

resultCopy
ûû4 >
,
ûû> ?
$num
ûû@ B
)
ûûB C
;
ûûC D
}
üü 
if
°° 
(
°° 

resultCopy
°° &
.
°°& '
Count
°°' ,
(
°°, -
)
°°- .
>
°°/ 0
$num
°°1 3
)
°°3 4
{
¢¢ 
if
££ 
(
££  

resultCopy
££  *
[
££* +
$num
££+ -
]
££- .
.
££. /
Contains
££/ 7
(
££7 8
$str
££8 C
)
££C D
)
££D E
{
§§ 
result
••  &
=
••' (

resultCopy
••) 3
;
••3 4
}
¶¶ 
}
ßß 
var
±±  
ParLevel1Origin_Id
±± .
=
±±/ 0 
DefaultValueReturn
±±1 C
(
±±C D
result
±±D J
[
±±J K
$num
±±K L
]
±±L M
,
±±M N
$str
±±O R
)
±±R S
;
±±S T
string
≥≥ 
indicadorPai
≥≥ +
=
≥≥, -
$str≥≥. ã
+≥≥å ç
$str
¥¥. h
+
¥¥i j
$str
µµ. Q
+
µµR S
$str
∂∂. a
+
∂∂b c
$str
∑∑. X
+
∑∑Y Z
$str
∏∏. O
+
∏∏P Q 
ParLevel1Origin_Id
∏∏R d
+
∏∏e f
$str
ππ. H
+
ππI J
$str
∫∫. H
+
∫∫I J
$str
ªª. H
;
ªªH I
List
ææ 
<
ææ  
ResultadoUmaColuna
ææ /
>
ææ/ 0
list
ææ1 5
;
ææ5 6
using
¿¿ 
(
¿¿ 
var
¿¿ "
db
¿¿# %
=
¿¿& '
new
¿¿( +
Dominio
¿¿, 3
.
¿¿3 4
SgqDbDevEntities
¿¿4 D
(
¿¿D E
)
¿¿E F
)
¿¿F G
{
¡¡ 
list
¬¬  
=
¬¬! "
db
¬¬# %
.
¬¬% &
Database
¬¬& .
.
¬¬. /
SqlQuery
¬¬/ 7
<
¬¬7 8 
ResultadoUmaColuna
¬¬8 J
>
¬¬J K
(
¬¬K L
indicadorPai
¬¬L X
)
¬¬X Y
.
¬¬Y Z
ToList
¬¬Z `
(
¬¬` a
)
¬¬a b
;
¬¬b c
}
√√ 
string
∆∆ 
level3split
∆∆ *
=
∆∆+ ,
result
∆∆- 3
[
∆∆3 4
$num
∆∆4 6
]
∆∆6 7
.
∆∆7 8
Replace
∆∆8 ?
(
∆∆? @
$str
∆∆@ U
,
∆∆U V
$str
∆∆W Z
)
∆∆Z [
.
∆∆[ \
Replace
∆∆\ c
(
∆∆c d
$str
∆∆d o
,
∆∆o p
$str
∆∆q s
)
∆∆s t
.
∆∆t u
Replace
∆∆u |
(
∆∆| }
$str∆∆} â
,∆∆â ä
$str∆∆ã ç
)∆∆ç é
;∆∆é è
string
«« 
[
«« 
]
««  
leveis3
««! (
=
««) *
level3split
««+ 6
.
««6 7
Split
««7 <
(
««< =
$char
««= @
)
««@ A
;
««A B
string
ÀÀ 
retorno
ÀÀ &
=
ÀÀ' (
$str
ÀÀ) +
;
ÀÀ+ ,
string
ÕÕ 
retornoFilho
ÕÕ +
=
ÕÕ, -
$str
ÕÕ. 0
;
ÕÕ0 1
for
–– 
(
–– 
int
––  
j
––! "
=
––# $
$num
––% &
;
––& '
j
––( )
<
––* +
leveis3
––, 3
.
––3 4
Length
––4 :
;
––: ;
j
––< =
++
––= ?
)
––? @
{
—— 
string
““ "
[
““" #
]
““# $

esteLevel3
““% /
=
““0 1
leveis3
““2 9
[
““9 :
j
““: ;
]
““; <
.
““< =
Split
““= B
(
““B C
$char
““C F
)
““F G
;
““G H
for
‘‘ 
(
‘‘  !
var
‘‘! $
k
‘‘% &
=
‘‘' (
$num
‘‘) *
;
‘‘* +
k
‘‘, -
<
‘‘. /
list
‘‘0 4
.
‘‘4 5
Count
‘‘5 :
(
‘‘: ;
)
‘‘; <
;
‘‘< =
k
‘‘> ?
++
‘‘? A
)
‘‘A B
{
’’ 
if
÷÷  "
(
÷÷# $
list
÷÷$ (
[
÷÷( )
k
÷÷) *
]
÷÷* +
.
÷÷+ ,
retorno
÷÷, 3
.
÷÷3 4
ToString
÷÷4 <
(
÷÷< =
)
÷÷= >
==
÷÷? A

esteLevel3
÷÷B L
[
÷÷L M
$num
÷÷M N
]
÷÷N O
)
÷÷O P
{
◊◊  !
retornoFilho
ÿÿ$ 0
+=
ÿÿ1 3
$str
ÿÿ4 ?
;
ÿÿ? @
retornoFilho
ŸŸ$ 0
+=
ŸŸ1 3
leveis3
ŸŸ4 ;
[
ŸŸ; <
j
ŸŸ< =
]
ŸŸ= >
;
ŸŸ> ?
retornoFilho
⁄⁄$ 0
+=
⁄⁄1 3
$str
⁄⁄4 @
;
⁄⁄@ A
leveis3
€€$ +
[
€€+ ,
j
€€, -
]
€€- .
=
€€/ 0
$str
€€1 3
;
€€3 4
}
‹‹  !
}
›› 
}
ﬁﬁ 
for
‚‚ 
(
‚‚ 
int
‚‚  
j
‚‚! "
=
‚‚# $
$num
‚‚% &
;
‚‚& '
j
‚‚( )
<
‚‚* +
leveis3
‚‚, 3
.
‚‚3 4
Length
‚‚4 :
;
‚‚: ;
j
‚‚< =
++
‚‚= ?
)
‚‚? @
{
„„ 
if
‰‰ 
(
‰‰  
leveis3
‰‰  '
[
‰‰' (
j
‰‰( )
]
‰‰) *
!=
‰‰+ -
$str
‰‰. 0
)
‰‰0 1
{
ÂÂ 
retorno
ÊÊ  '
+=
ÊÊ( *
$str
ÊÊ+ 6
;
ÊÊ6 7
retorno
ÁÁ  '
+=
ÁÁ( *
leveis3
ÁÁ+ 2
[
ÁÁ2 3
j
ÁÁ3 4
]
ÁÁ4 5
;
ÁÁ5 6
retorno
ËË  '
+=
ËË( *
$str
ËË+ 7
;
ËË7 8
}
ÈÈ 
}
ÎÎ 
result
ÌÌ 
[
ÌÌ 
$num
ÌÌ !
]
ÌÌ! "
=
ÌÌ# $
retorno
ÌÌ% ,
;
ÌÌ, -
string
ÚÚ 
	level01Id
ÚÚ (
=
ÚÚ) * 
DefaultValueReturn
ÚÚ+ =
(
ÚÚ= >
result
ÚÚ> D
[
ÚÚD E
$num
ÚÚE F
]
ÚÚF G
,
ÚÚG H
$str
ÚÚI L
)
ÚÚL M
;
ÚÚM N
if
ÙÙ 
(
ÙÙ 
	level01Id
ÙÙ $
==
ÙÙ% '
$str
ÙÙ( +
)
ÙÙ+ ,
{
ıı 
string
ˆˆ "
p1Undefined
ˆˆ# .
=
ˆˆ/ 0
$strˆˆ1 è
+ˆˆê ë
$str
˜˜1 k
+
˜˜l m
$str
¯¯1 T
+
¯¯U V
$str
˘˘1 d
+
˘˘e f
$str
˙˙1 [
+
˙˙\ ]
$str
˚˚1 P
+
˚˚Q R
result
˚˚S Y
[
˚˚Y Z
$num
˚˚Z [
]
˚˚[ \
+
˚˚] ^
$str
¸¸1 K
+
¸¸L M
$str
˝˝1 K
+
˝˝L M
$str
˛˛1 K
;
˛˛K L
using
ˇˇ !
(
ˇˇ" #
var
ˇˇ# &
db
ˇˇ' )
=
ˇˇ* +
new
ˇˇ, /
Dominio
ˇˇ0 7
.
ˇˇ7 8
SgqDbDevEntities
ˇˇ8 H
(
ˇˇH I
)
ˇˇI J
)
ˇˇJ K
{
ÄÄ 
	level01Id
ÇÇ  )
=
ÇÇ* +
db
ÇÇ, .
.
ÇÇ. /
Database
ÇÇ/ 7
.
ÇÇ7 8
SqlQuery
ÇÇ8 @
<
ÇÇ@ A 
ResultadoUmaColuna
ÇÇA S
>
ÇÇS T
(
ÇÇT U
p1Undefined
ÇÇU `
)
ÇÇ` a
.
ÇÇa b
FirstOrDefault
ÇÇb p
(
ÇÇp q
)
ÇÇq r
.
ÇÇr s
retorno
ÇÇs z
;
ÇÇz {
}
ÉÉ 
}
ÑÑ 
string
áá  
level01DataCollect
áá 1
=
áá2 3
result
áá4 :
[
áá: ;
$num
áá; <
]
áá< =
;
áá= >
DateTime
ãã   
level01CollectData
ãã! 3
=
ãã4 5 
DateCollectConvert
ãã6 H
(
ããH I 
level01DataCollect
ããI [
)
ãã[ \
;
ãã\ ] 
level01DataCollect
çç *
=
çç+ , 
level01CollectData
çç- ?
.
çç? @
ToString
çç@ H
(
ççH I
$str
ççI ^
)
çç^ _
;
çç_ `
string
êê 
	level02Id
êê (
=
êê) *
result
êê+ 1
[
êê1 2
$num
êê2 3
]
êê3 4
;
êê4 5
string
íí  
level02DataCollect
íí 1
=
íí2 3
result
íí4 :
[
íí: ;
$num
íí; <
]
íí< =
;
íí= >
DateTime
ïï   
level02CollectData
ïï! 3
=
ïï4 5 
DateCollectConvert
ïï6 H
(
ïïH I 
level02DataCollect
ïïI [
)
ïï[ \
;
ïï\ ] 
level02DataCollect
óó *
=
óó+ , 
level02CollectData
óó- ?
.
óó? @
ToString
óó@ H
(
óóH I
$str
óóI ^
)
óó^ _
;
óó_ `
string
öö 
	unidadeId
öö (
=
öö) *
result
öö+ 1
[
öö1 2
$num
öö2 3
]
öö3 4
;
öö4 5
string
°° 
period
°° %
=
°°& '
result
°°( .
[
°°. /
$num
°°/ 0
]
°°0 1
;
°°1 2
period
¢¢ 
=
¢¢   
DefaultValueReturn
¢¢! 3
(
¢¢3 4
period
¢¢4 :
,
¢¢: ;
$str
¢¢< ?
)
¢¢? @
;
¢¢@ A
string
•• 
shift
•• $
=
••% &
result
••' -
[
••- .
$num
••. /
]
••/ 0
;
••0 1
shift
¶¶ 
=
¶¶  
DefaultValueReturn
¶¶  2
(
¶¶2 3
shift
¶¶3 8
,
¶¶8 9
$str
¶¶: =
)
¶¶= >
;
¶¶> ?
string
©© 
	auditorId
©© (
=
©©) *
result
©©+ 1
[
©©1 2
$num
©©2 3
]
©©3 4
;
©©4 5
string
ØØ 
reaudit
ØØ &
=
ØØ' (
result
ØØ) /
[
ØØ/ 0
$num
ØØ0 1
]
ØØ1 2
;
ØØ2 3
reaudit
≥≥ 
=
≥≥  !
BoolConverter
≥≥" /
(
≥≥/ 0
reaudit
≥≥0 7
)
≥≥7 8
;
≥≥8 9
string
∂∂ 
evaluate
∂∂ '
=
∂∂( )
result
∂∂* 0
[
∂∂0 1
$num
∂∂1 3
]
∂∂3 4
;
∂∂4 5
string
∏∏ 
sample
∏∏ %
=
∏∏& '
result
∏∏( .
[
∏∏. /
$num
∏∏/ 1
]
∏∏1 2
;
∏∏2 3
	versaoApp
∫∫ !
=
∫∫" #
result
∫∫$ *
[
∫∫* +
$num
∫∫+ -
]
∫∫- .
;
∫∫. /
string
ºº 
ambiente
ºº '
=
ºº( )
result
ºº* 0
[
ºº0 1
$num
ºº1 3
]
ºº3 4
;
ºº4 5
string
ææ 
phase
ææ $
=
ææ% &
result
ææ' -
[
ææ- .
$num
ææ. /
]
ææ/ 0
;
ææ0 1
string
¿¿ 
startphasedate
¿¿ -
=
¿¿. /
result
¿¿0 6
[
¿¿6 7
$num
¿¿7 9
]
¿¿9 :
;
¿¿: ;
string
√√ 
isemptylevel3
√√ ,
=
√√- .
result
√√/ 5
[
√√5 6
$num
√√6 8
]
√√8 9
;
√√9 :
string
≈≈ 
hassampletotal
≈≈ -
=
≈≈. /
result
≈≈0 6
[
≈≈6 7
$num
≈≈7 9
]
≈≈9 :
;
≈≈: ;
string
«« 
mudscore
«« '
=
««( )
result
««* 0
[
««0 1
$num
««1 3
]
««3 4
;
««4 5
string
…… %
consecutivefailurelevel
…… 6
=
……7 8
result
……9 ?
[
……? @
$num
……@ B
]
……B C
;
……C D
string
   %
consecutivefailuretotal
   6
=
  7 8
result
  9 ?
[
  ? @
$num
  @ B
]
  B C
;
  C D
string
ÕÕ 
notavaliable
ÕÕ +
=
ÕÕ, -
result
ÕÕ. 4
[
ÕÕ4 5
$num
ÕÕ5 7
]
ÕÕ7 8
;
ÕÕ8 9
string
–– 
baisedUnbaised
–– -
=
––. /
result
––0 6
[
––6 7
$num
––7 9
]
––9 :
;
––: ;
baisedUnbaised
—— &
=
——' ( 
DefaultValueReturn
——) ;
(
——; <
baisedUnbaised
——< J
,
——J K
$str
——L O
)
——O P
;
——P Q
string
÷÷ 

AlertLevel
÷÷ )
=
÷÷* +
result
÷÷, 2
[
÷÷2 3
$num
÷÷3 5
]
÷÷5 6
;
÷÷6 7
string
◊◊ 
	completed
◊◊ (
=
◊◊) *
result
◊◊+ 1
[
◊◊1 2
$num
◊◊2 4
]
◊◊4 5
;
◊◊5 6
string
ÿÿ 

havePhases
ÿÿ )
=
ÿÿ* +
result
ÿÿ, 2
[
ÿÿ2 3
$num
ÿÿ3 5
]
ÿÿ5 6
;
ÿÿ6 7
string
ŸŸ !
CollectionLevel02Id
ŸŸ 2
=
ŸŸ3 4
result
ŸŸ5 ;
[
ŸŸ; <
$num
ŸŸ< >
]
ŸŸ> ?
;
ŸŸ? @
string
⁄⁄ '
correctiveActionCompleted
⁄⁄ 8
=
⁄⁄9 :
result
⁄⁄; A
[
⁄⁄A B
$num
⁄⁄B D
]
⁄⁄D E
;
⁄⁄E F
string
€€ 
completeReaudit
€€ .
=
€€/ 0
result
€€1 7
[
€€7 8
$num
€€8 :
]
€€: ;
;
€€; <
string
‹‹ 
hashKey
‹‹ &
=
‹‹' (
result
‹‹) /
[
‹‹/ 0
$num
‹‹0 2
]
‹‹2 3
;
‹‹3 4
string
›› 
weievaluation
›› ,
=
››- .
result
››/ 5
[
››5 6
$num
››6 8
]
››8 9
;
››9 :
string
ﬁﬁ 

weidefects
ﬁﬁ )
=
ﬁﬁ* +
result
ﬁﬁ, 2
[
ﬁﬁ2 3
$num
ﬁﬁ3 5
]
ﬁﬁ5 6
;
ﬁﬁ6 7
string
ﬂﬂ 
defects
ﬂﬂ &
=
ﬂﬂ' (
result
ﬂﬂ) /
[
ﬂﬂ/ 0
$num
ﬂﬂ0 2
]
ﬂﬂ2 3
;
ﬂﬂ3 4
string
‡‡ $
totallevel3withdefects
‡‡ 5
=
‡‡6 7
result
‡‡8 >
[
‡‡> ?
$num
‡‡? A
]
‡‡A B
;
‡‡B C
string
·· #
totalLevel2Evaluation
·· 4
=
··5 6
result
··7 =
[
··= >
$num
··> @
]
··@ A
;
··A B
string
‚‚ #
avaliacaoultimoalerta
‚‚ 4
=
‚‚5 6
result
‚‚7 =
[
‚‚= >
$num
‚‚> @
]
‚‚@ A
;
‚‚A B
string
„„ 
evaluatedresult
„„ .
=
„„/ 0
result
„„1 7
[
„„7 8
$num
„„8 :
]
„„: ;
;
„„; <
string
‰‰ 
defectsresult
‰‰ ,
=
‰‰- .
result
‰‰/ 5
[
‰‰5 6
$num
‰‰6 8
]
‰‰8 9
;
‰‰9 :
string
ÂÂ 

sequential
ÂÂ )
=
ÂÂ* +
result
ÂÂ, 2
[
ÂÂ2 3
$num
ÂÂ3 5
]
ÂÂ5 6
;
ÂÂ6 7
string
ÊÊ 
side
ÊÊ #
=
ÊÊ$ %
result
ÊÊ& ,
[
ÊÊ, -
$num
ÊÊ- /
]
ÊÊ/ 0
;
ÊÊ0 1
string
ÁÁ '
monitoramentoultimoalerta
ÁÁ 8
=
ÁÁ9 :
result
ÁÁ; A
[
ÁÁA B
$num
ÁÁB D
]
ÁÁD E
;
ÁÁE F
string
ËË "
startphaseevaluation
ËË 3
=
ËË4 5
$str
ËË6 9
;
ËË9 :
string
ÈÈ  
endphaseevaluation
ÈÈ 1
=
ÈÈ2 3
$str
ÈÈ4 7
;
ÈÈ7 8
if
ÍÍ 
(
ÍÍ 
result
ÍÍ "
.
ÍÍ" #
Length
ÍÍ# )
>
ÍÍ* +
$num
ÍÍ, .
)
ÍÍ. /
{
ÎÎ "
startphaseevaluation
ÏÏ 0
=
ÏÏ1 2
result
ÏÏ3 9
[
ÏÏ9 :
$num
ÏÏ: <
]
ÏÏ< =
;
ÏÏ= >
}
ÌÌ 
if
ÓÓ 
(
ÓÓ 
result
ÓÓ "
.
ÓÓ" #
Length
ÓÓ# )
>
ÓÓ* +
$num
ÓÓ, .
)
ÓÓ. /
{
ÔÔ  
endphaseevaluation
 .
=
/ 0
result
1 7
[
7 8
$num
8 :
]
: ;
;
; <
}
ÒÒ 
string
ÙÙ 
level02HeaderJSon
ÙÙ 0
=
ÙÙ1 2
result
ÙÙ3 9
[
ÙÙ9 :
$num
ÙÙ: <
]
ÙÙ< =
;
ÙÙ= >
level02HeaderJSon
ıı )
+=
ıı* ,
$str
ıı- 0
+
ıı1 2
phase
ıı3 8
;
ıı8 9
level02HeaderJSon
ˆˆ )
+=
ˆˆ* ,
$str
ˆˆ- 0
+
ˆˆ1 2
startphasedate
ˆˆ3 A
;
ˆˆA B
level02HeaderJSon
˜˜ )
+=
˜˜* ,
$str
˜˜- 0
+
˜˜1 2%
consecutivefailurelevel
˜˜3 J
;
˜˜J K
level02HeaderJSon
¯¯ )
+=
¯¯* ,
$str
¯¯- 0
+
¯¯1 2%
consecutivefailuretotal
¯¯3 J
;
¯¯J K
level02HeaderJSon
˘˘ )
+=
˘˘* ,
$str
˘˘- 0
+
˘˘1 2
notavaliable
˘˘3 ?
;
˘˘? @
level02HeaderJSon
˙˙ )
+=
˙˙* ,
$str
˙˙- 0
+
˙˙1 2
	completed
˙˙3 <
;
˙˙< =
level02HeaderJSon
˚˚ )
+=
˚˚* ,
$str
˚˚- 0
+
˚˚1 2

havePhases
˚˚3 =
;
˚˚= >
level02HeaderJSon
¸¸ )
+=
¸¸* ,
$str
¸¸- 0
+
¸¸1 2!
CollectionLevel02Id
¸¸3 F
;
¸¸F G
level02HeaderJSon
˝˝ )
+=
˝˝* ,
$str
˝˝- 0
+
˝˝1 2'
correctiveActionCompleted
˝˝3 L
;
˝˝L M
level02HeaderJSon
˛˛ )
+=
˛˛* ,
$str
˛˛- 0
+
˛˛1 2
completeReaudit
˛˛3 B
;
˛˛B C
level02HeaderJSon
ˇˇ )
+=
ˇˇ* ,
$str
ˇˇ- 0
+
ˇˇ1 2

AlertLevel
ˇˇ3 =
;
ˇˇ= >
level02HeaderJSon
ÄÄ )
+=
ÄÄ* ,
$str
ÄÄ- 0
+
ÄÄ1 2

sequential
ÄÄ3 =
;
ÄÄ= >
level02HeaderJSon
ÅÅ )
+=
ÅÅ* ,
$str
ÅÅ- 0
+
ÅÅ1 2
side
ÅÅ3 7
;
ÅÅ7 8
level02HeaderJSon
ÇÇ )
+=
ÇÇ* ,
$str
ÇÇ- 0
+
ÇÇ1 2
weievaluation
ÇÇ3 @
;
ÇÇ@ A
level02HeaderJSon
ÉÉ )
+=
ÉÉ* ,
$str
ÉÉ- 0
+
ÉÉ1 2

weidefects
ÉÉ3 =
;
ÉÉ= >
level02HeaderJSon
ÑÑ )
+=
ÑÑ* ,
$str
ÑÑ- 0
+
ÑÑ1 2
defects
ÑÑ3 :
;
ÑÑ: ;
level02HeaderJSon
ÖÖ )
+=
ÖÖ* ,
$str
ÖÖ- 0
+
ÖÖ1 2$
totallevel3withdefects
ÖÖ3 I
;
ÖÖI J
level02HeaderJSon
ÜÜ )
+=
ÜÜ* ,
$str
ÜÜ- 0
+
ÜÜ1 2#
totalLevel2Evaluation
ÜÜ3 H
;
ÜÜH I
level02HeaderJSon
áá )
+=
áá* ,
$str
áá- 0
+
áá1 2#
avaliacaoultimoalerta
áá3 H
;
ááH I
level02HeaderJSon
àà )
+=
àà* ,
$str
àà- 0
+
àà1 2
evaluatedresult
àà3 B
;
ààB C
level02HeaderJSon
ââ )
+=
ââ* ,
$str
ââ- 0
+
ââ1 2
defectsresult
ââ3 @
;
ââ@ A
level02HeaderJSon
ää )
+=
ää* ,
$str
ää- 0
+
ää1 2

sequential
ää3 =
;
ää= >
level02HeaderJSon
ãã )
+=
ãã* ,
$str
ãã- 0
+
ãã1 2
side
ãã3 7
;
ãã7 8
level02HeaderJSon
åå )
+=
åå* ,
$str
åå- 0
+
åå1 2
isemptylevel3
åå3 @
;
åå@ A
level02HeaderJSon
çç )
+=
çç* ,
$str
çç- 0
+
çç1 2
hassampletotal
çç3 A
;
ççA B
level02HeaderJSon
éé )
+=
éé* ,
$str
éé- 0
+
éé1 2
hashKey
éé3 :
;
éé: ;
level02HeaderJSon
èè )
+=
èè* ,
$str
èè- 0
+
èè1 2'
monitoramentoultimoalerta
èè3 L
;
èèL M
level02HeaderJSon
êê )
+=
êê* ,
$str
êê- 0
+
êê1 2"
startphaseevaluation
êê3 G
;
êêG H
level02HeaderJSon
ëë )
+=
ëë* ,
$str
ëë- 0
+
ëë1 2 
endphaseevaluation
ëë3 E
;
ëëE F
string
ññ 
level03ResultJson
ññ 0
=
ññ1 2
result
ññ3 9
[
ññ9 :
$num
ññ: <
]
ññ< =
;
ññ= >
level03ResultJson
òò )
=
òò* +
HttpUtility
òò, 7
.
òò7 8
	UrlDecode
òò8 A
(
òòA B
level03ResultJson
òòB S
,
òòS T
System
òòU [
.
òò[ \
Text
òò\ `
.
òò` a
Encoding
òòa i
.
òòi j
Default
òòj q
)
òòq r
;
òòr s
string
öö "
correctiveActionJson
öö 3
=
öö4 5
result
öö6 <
[
öö< =
$num
öö= ?
]
öö? @
;
öö@ A
string
úú 
haveReaudit
úú *
=
úú+ ,
result
úú- 3
[
úú3 4
$num
úú4 6
]
úú6 7
;
úú7 8
haveReaudit
ûû #
=
ûû$ % 
DefaultValueReturn
ûû& 8
(
ûû8 9
haveReaudit
ûû9 D
,
ûûD E
$str
ûûF I
)
ûûI J
;
ûûJ K
if
üü 
(
üü 
haveReaudit
üü '
!=
üü( *
$str
üü+ .
)
üü. /
{
†† 
haveReaudit
°° '
=
°°( )
$str
°°* -
;
°°- .
}
¢¢ 
string
££ 
reauditlevel
££ +
=
££, -
result
££. 4
[
££4 5
$num
££5 7
]
££7 8
;
££8 9
reauditlevel
•• $
=
••% & 
DefaultValueReturn
••' 9
(
••9 :
reauditlevel
••: F
,
••F G
$str
••H K
)
••K L
;
••L M
string
®® "
haveCorrectiveAction
®® 3
=
®®4 5
result
®®6 <
[
®®< =
$num
®®= ?
]
®®? @
;
®®@ A"
haveCorrectiveAction
™™ ,
=
™™- . 
DefaultValueReturn
™™/ A
(
™™A B"
haveCorrectiveAction
™™B V
,
™™V W
$str
™™X [
)
™™[ \
;
™™\ ]
if
´´ 
(
´´ "
haveCorrectiveAction
´´ 0
==
´´1 3
$str
´´4 J
)
´´J K
{
¨¨ "
haveCorrectiveAction
≠≠ 0
=
≠≠1 2
$str
≠≠3 6
;
≠≠6 7
}
ÆÆ 
string
∞∞ 
reauditNumber
∞∞ ,
=
∞∞- .
result
∞∞/ 5
[
∞∞5 6
$num
∞∞6 8
]
∞∞8 9
;
∞∞9 :
reauditNumber
±± %
=
±±& ' 
DefaultValueReturn
±±( :
(
±±: ;
reauditNumber
±±; H
,
±±H I
$str
±±J M
)
±±M N
;
±±N O
string
∂∂ 
sql
∂∂ "
=
∂∂# $
$str
∂∂% J
+
∂∂K L
$str∑∑ ï
+∑∑ñ ó
$str
∏∏ (
+
∏∏) *
$str
ππ #
+
ππ$ %
	unidadeId
ππ& /
+
ππ0 1
$str
ππ2 7
+
ππ8 9
shift
ππ: ?
+
ππ@ A
$str
ππB G
+
ππH I
period
ππJ P
+
ππQ R
$str
ππS X
+
ππY Z
	level01Id
ππ[ d
+
ππe f
$str
ππg r
+
ππs t!
level01DataCollectππu á
+ππà â
$strππä ú
+ππù û
	level02Idππü ®
+ππ© ™
$strππ´ ∞
+ππ± ≤
evaluateππ≥ ª
+ππº Ω
$strππæ √
+ππƒ ≈
sampleππ∆ Ã
+ππÕ Œ
$strππœ ’
+ππ÷ ◊
	auditorIdππÿ ·
+ππ‚ „
$strππ‰ Ô
+ππ Ò"
level02DataCollectππÚ Ñ
+ππÖ Ü
$strππá ô
+ππö õ!
level02HeaderJSonππú ≠
+ππÆ Ø
$strππ∞ µ
+ππ∂ ∑!
level03ResultJsonππ∏ …
+ππ  À
$strππÃ “
+ππ” ‘$
correctiveActionJsonππ’ È
+ππÍ Î
$strππÏ Ú
+ππÛ Ù
reauditππı ¸
+ππ˝ ˛
$strππˇ Ö
+ππÜ á
reauditNumberππà ï
+ππñ ó
$strππò û
+ππü †
haveReauditππ° ¨
+ππ≠ Æ
$strππØ µ
+ππ∂ ∑
reauditlevelππ∏ ƒ
+ππ≈ ∆
$strππ« Ã
+ππÕ Œ$
haveCorrectiveActionππœ „
+ππ‰ Â
$strππÊ Ï
+ππÌ Ó
deviceIdππÔ ˜
+ππ¯ ˘
$strππ˙ ˇ
+ππÄ Å
	versaoAppππÇ ã
+ππå ç
$strππé ì
+ππî ï
ambienteππñ û
+ππü †
$strππ° ®
+ππ© ™
	deviceMacππ´ ¥
+ππµ ∂
$strππ∑ À
+ππÃ Õ
keyππŒ —
+ππ“ ”
$strππ‘ ﬁ
;ππﬁ ﬂ
sql
ªª 
+=
ªª 
$str
ªª @
;
ªª@ A
command
ΩΩ 
=
ΩΩ  !
new
ΩΩ" %

SqlCommand
ΩΩ& 0
(
ΩΩ0 1
sql
ΩΩ1 4
,
ΩΩ4 5

connection
ΩΩ6 @
)
ΩΩ@ A
;
ΩΩA B
var
ææ 
iSql
ææ  
=
ææ! "
Convert
ææ# *
.
ææ* +
ToInt32
ææ+ 2
(
ææ2 3
command
ææ3 :
.
ææ: ;
ExecuteScalar
ææ; H
(
ææH I
)
ææI J
)
ææJ K
;
ææK L
if
¿¿ 
(
¿¿ 
iSql
¿¿  
>
¿¿! "
$num
¿¿# $
)
¿¿$ %
{
¡¡ 
ProcessJson
ƒƒ '
(
ƒƒ' (
null
ƒƒ( ,
,
ƒƒ, -
iSql
ƒƒ. 2
,
ƒƒ2 3
false
ƒƒ4 9
)
ƒƒ9 :
;
ƒƒ: ;
}
«« 
else
…… 
{
   
throw
ÃÃ !
new
ÃÃ" %
	Exception
ÃÃ& /
(
ÃÃ/ 0
$str
ÃÃ0 ;
)
ÃÃ; <
;
ÃÃ< =
}
ŒŒ 
if
–– 
(
–– 
retornoFilho
–– (
!=
––) +
$str
––, .
)
––. /
{
—— 
List
‘‘  
<
‘‘  ! 
ResultadoUmaColuna
‘‘! 3
>
‘‘3 4
list2
‘‘5 :
;
‘‘: ;
var
÷÷ 
indicadorFilho_id
÷÷  1
=
÷÷2 3
$str
÷÷4 6
;
÷÷6 7
var
◊◊ #
monitoramentoFilho_id
◊◊  5
=
◊◊6 7
$str
◊◊8 :
;
◊◊: ;
using
ŸŸ !
(
ŸŸ" #
var
ŸŸ# &
db
ŸŸ' )
=
ŸŸ* +
new
ŸŸ, /
Dominio
ŸŸ0 7
.
ŸŸ7 8
SgqDbDevEntities
ŸŸ8 H
(
ŸŸH I
)
ŸŸI J
)
ŸŸJ K
{
⁄⁄ 
string
››  &
indicadorFilho
››' 5
=
››6 7
$str››8 ã
+››å ç
$str
ﬁﬁ6 q
+
ﬁﬁr s
$str
ﬂﬂ6 Y
+
ﬂﬂZ [
$str
‡‡6 j
+
‡‡k l
$str
··6 `
+
··a b
$str
‚‚6 W
+
‚‚X Y
result
‚‚Z `
[
‚‚` a
$num
‚‚a b
]
‚‚b c
+
‚‚d e
$str
„„6 P
+
„„Q R
$str
‰‰6 P
+
‰‰Q R
$str
ÂÂ6 P
;
ÂÂP Q
list2
ÁÁ  %
=
ÁÁ& '
db
ÁÁ( *
.
ÁÁ* +
Database
ÁÁ+ 3
.
ÁÁ3 4
SqlQuery
ÁÁ4 <
<
ÁÁ< = 
ResultadoUmaColuna
ÁÁ= O
>
ÁÁO P
(
ÁÁP Q
indicadorFilho
ÁÁQ _
)
ÁÁ_ `
.
ÁÁ` a
ToList
ÁÁa g
(
ÁÁg h
)
ÁÁh i
;
ÁÁi j
for
ÎÎ  #
(
ÎÎ$ %
var
ÎÎ% (
l
ÎÎ) *
=
ÎÎ+ ,
$num
ÎÎ- .
;
ÎÎ. /
l
ÎÎ0 1
<
ÎÎ2 3
list2
ÎÎ4 9
.
ÎÎ9 :
Count
ÎÎ: ?
(
ÎÎ? @
)
ÎÎ@ A
;
ÎÎA B
l
ÎÎC D
++
ÎÎD F
)
ÎÎF G
{
ÏÏ  !
indicadorFilho_id
ÌÌ$ 5
=
ÌÌ6 7
list2
ÌÌ8 =
[
ÌÌ= >
l
ÌÌ> ?
]
ÌÌ? @
.
ÌÌ@ A
retorno
ÌÌA H
.
ÌÌH I
ToString
ÌÌI Q
(
ÌÌQ R
)
ÌÌR S
;
ÌÌS T
}
ÓÓ  !
string
ÒÒ  & 
monitoramentoFilho
ÒÒ' 9
=
ÒÒ: ;
$str
ÒÒ< u
+
ÒÒv w
$str
ÚÚ< o
+
ÚÚp q
$str
ÛÛ< n
+
ÛÛo p
$str
ÙÙ< e
+
ÙÙf g
$str
ıı< [
+
ıı\ ]
indicadorFilho_id
ıı^ o
;
ııo p
list2
˜˜  %
=
˜˜& '
db
˜˜( *
.
˜˜* +
Database
˜˜+ 3
.
˜˜3 4
SqlQuery
˜˜4 <
<
˜˜< = 
ResultadoUmaColuna
˜˜= O
>
˜˜O P
(
˜˜P Q 
monitoramentoFilho
˜˜Q c
)
˜˜c d
.
˜˜d e
ToList
˜˜e k
(
˜˜k l
)
˜˜l m
;
˜˜m n
for
˘˘  #
(
˘˘$ %
var
˘˘% (
l
˘˘) *
=
˘˘+ ,
$num
˘˘- .
;
˘˘. /
l
˘˘0 1
<
˘˘2 3
list2
˘˘4 9
.
˘˘9 :
Count
˘˘: ?
(
˘˘? @
)
˘˘@ A
;
˘˘A B
l
˘˘C D
++
˘˘D F
)
˘˘F G
{
˙˙  !#
monitoramentoFilho_id
˚˚$ 9
=
˚˚: ;
list2
˚˚< A
[
˚˚A B
l
˚˚B C
]
˚˚C D
.
˚˚D E
retorno
˚˚E L
.
˚˚L M
ToString
˚˚M U
(
˚˚U V
)
˚˚V W
;
˚˚W X
}
¸¸  !
}
ˇˇ 
string
ÄÄ "
sql2
ÄÄ# '
=
ÄÄ( )
$str
ÄÄ* O
+
ÄÄP Q
$strÅÅ ï
+ÅÅñ ó
$str
ÇÇ (
+
ÇÇ) *
$str
ÉÉ #
+
ÉÉ$ %
	unidadeId
ÉÉ& /
+
ÉÉ0 1
$str
ÉÉ2 7
+
ÉÉ8 9
shift
ÉÉ: ?
+
ÉÉ@ A
$str
ÉÉB G
+
ÉÉH I
period
ÉÉJ P
+
ÉÉQ R
$str
ÉÉS X
+
ÉÉY Z
indicadorFilho_id
ÉÉ[ l
+
ÉÉm n
$str
ÉÉo z
+
ÉÉ{ |!
level01DataCollectÉÉ} è
+ÉÉê ë
$strÉÉí §
+ÉÉ• ¶
	level02IdÉÉß ∞
+ÉÉ± ≤
$strÉÉ≥ ∏
+ÉÉπ ∫
evaluateÉÉª √
+ÉÉƒ ≈
$strÉÉ∆ À
+ÉÉÃ Õ
sampleÉÉŒ ‘
+ÉÉ’ ÷
$strÉÉ◊ ›
+ÉÉﬁ ﬂ
	auditorIdÉÉ‡ È
+ÉÉÍ Î
$strÉÉÏ ˜
+ÉÉ¯ ˘"
level02DataCollectÉÉ˙ å
+ÉÉç é
$strÉÉè °
+ÉÉ¢ £!
level02HeaderJSonÉÉ§ µ
+ÉÉ∂ ∑
$strÉÉ∏ Ω
+ÉÉæ ø
retornoFilhoÉÉ¿ Ã
+ÉÉÕ Œ
$strÉÉœ ’
+ÉÉ÷ ◊$
correctiveActionJsonÉÉÿ Ï
+ÉÉÌ Ó
$strÉÉÔ ı
+ÉÉˆ ˜
reauditÉÉ¯ ˇ
+ÉÉÄ Å
$strÉÉÇ à
+ÉÉâ ä
reauditNumberÉÉã ò
+ÉÉô ö
$strÉÉõ °
+ÉÉ¢ £
haveReauditÉÉ§ Ø
+ÉÉ∞ ±
$strÉÉ≤ ∏
+ÉÉπ ∫
reauditlevelÉÉª «
+ÉÉ» …
$strÉÉ  œ
+ÉÉ– —$
haveCorrectiveActionÉÉ“ Ê
+ÉÉÁ Ë
$strÉÉÈ Ô
+ÉÉ Ò
deviceIdÉÉÚ ˙
+ÉÉ˚ ¸
$strÉÉ˝ Ç
+ÉÉÉ Ñ
	versaoAppÉÉÖ é
+ÉÉè ê
$strÉÉë ñ
+ÉÉó ò
ambienteÉÉô °
+ÉÉ¢ £
$strÉÉ§ ´
+ÉÉ¨ ≠
	deviceMacÉÉÆ ∑
+ÉÉ∏ π
$strÉÉ∫ Œ
+ÉÉœ –
keyÉÉ— ‘
+ÉÉ’ ÷
$strÉÉ◊ ·
;ÉÉ· ‚
sql2
ÖÖ  
+=
ÖÖ! #
$str
ÖÖ$ E
;
ÖÖE F
command
áá #
=
áá$ %
new
áá& )

SqlCommand
áá* 4
(
áá4 5
sql2
áá5 9
,
áá9 :

connection
áá; E
)
ááE F
;
ááF G
var
àà 
iSql2
àà  %
=
àà& '
Convert
àà( /
.
àà/ 0
ToInt32
àà0 7
(
àà7 8
command
àà8 ?
.
àà? @
ExecuteScalar
àà@ M
(
ààM N
)
ààN O
)
ààO P
;
ààP Q
if
ää 
(
ää  
iSql2
ää  %
>
ää& '
$num
ää( )
)
ää) *
{
ãã 
ProcessJson
éé  +
(
éé+ ,
null
éé, 0
,
éé0 1
iSql2
éé2 7
,
éé7 8
true
éé9 =
)
éé= >
;
éé> ?
}
ëë 
else
ìì  
{
îî 
throw
ññ  %
new
ññ& )
	Exception
ññ* 3
(
ññ3 4
$str
ññ4 ?
)
ññ? @
;
ññ@ A
}
òò 
}
öö 
}
úú 
if
ûû 
(
ûû 

connection
ûû "
.
ûû" #
State
ûû# (
==
ûû) +
System
ûû, 2
.
ûû2 3
Data
ûû3 7
.
ûû7 8
ConnectionState
ûû8 G
.
ûûG H
Open
ûûH L
)
ûûL M

connection
ûûN X
.
ûûX Y
Close
ûûY ^
(
ûû^ _
)
ûû_ `
;
ûû` a
}
üü 
return
†† 
null
†† 
;
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
SqlException
¢¢ 
ex
¢¢  "
)
¢¢" #
{
££ 
int
§§ 
	insertLog
§§ 
=
§§ 
insertLogJson
§§  -
(
§§- ."
objObjResultJSonPuro
§§. B
,
§§B C
ex
§§D F
.
§§F G
Message
§§G N
,
§§N O
deviceId
§§P X
,
§§X Y
	versaoApp
§§Z c
,
§§c d
$str
§§e q
)
§§q r
;
§§r s
return
•• 
$str
•• 
;
•• 
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
ex
®® 
)
®®  
{
©© 
int
™™ 
	insertLog
™™ 
=
™™ 
insertLogJson
™™  -
(
™™- ."
objObjResultJSonPuro
™™. B
,
™™B C
ex
™™D F
.
™™F G
Message
™™G N
,
™™N O
deviceId
™™P X
,
™™X Y
	versaoApp
™™Z c
,
™™c d
$str
™™e q
)
™™q r
;
™™r s
return
´´ 
$str
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
private
ØØ 
T
ØØ 
[
ØØ 
]
ØØ 

RemoveFrom
ØØ 
<
ØØ 
T
ØØ  
>
ØØ  !
(
ØØ! "
T
ØØ" #
[
ØØ# $
]
ØØ$ %
source
ØØ& ,
,
ØØ, -
int
ØØ. 1
index
ØØ2 7
)
ØØ7 8
{
∞∞ 	
T
±± 
[
±± 
]
±± 
dest
±± 
=
±± 
new
±± 
T
±± 
[
±± 
source
±± #
.
±±# $
Length
±±$ *
-
±±+ ,
$num
±±- .
]
±±. /
;
±±/ 0
if
≤≤ 
(
≤≤ 
index
≤≤ 
>
≤≤ 
$num
≤≤ 
)
≤≤ 
Array
≥≥ 
.
≥≥ 
Copy
≥≥ 
(
≥≥ 
source
≥≥ !
,
≥≥! "
$num
≥≥# $
,
≥≥$ %
dest
≥≥& *
,
≥≥* +
$num
≥≥, -
,
≥≥- .
index
≥≥/ 4
)
≥≥4 5
;
≥≥5 6
if
µµ 
(
µµ 
index
µµ 
<
µµ 
source
µµ 
.
µµ 
Length
µµ %
-
µµ& '
$num
µµ( )
)
µµ) *
Array
∂∂ 
.
∂∂ 
Copy
∂∂ 
(
∂∂ 
source
∂∂ !
,
∂∂! "
index
∂∂# (
+
∂∂) *
$num
∂∂+ ,
,
∂∂, -
dest
∂∂. 2
,
∂∂2 3
index
∂∂4 9
,
∂∂9 :
source
∂∂; A
.
∂∂A B
Length
∂∂B H
-
∂∂I J
index
∂∂K P
-
∂∂Q R
$num
∂∂S T
)
∂∂T U
;
∂∂U V
return
∏∏ 
dest
∏∏ 
;
∏∏ 
}
ππ 	
[
¡¡ 	
	WebMethod
¡¡	 
]
¡¡ 
public
¬¬ 
string
¬¬ 
ProcessJson
¬¬ !
(
¬¬! "
string
¬¬" (
device
¬¬) /
,
¬¬/ 0
int
¬¬1 4
id
¬¬5 7
,
¬¬7 8
bool
¬¬9 =
filho
¬¬> C
)
¬¬C D
{
√√ 	
try
≈≈ 
{
∆∆ 
if
«« 
(
«« 
string
«« 
.
«« 
IsNullOrEmpty
«« (
(
««( )
device
««) /
)
««/ 0
&&
««1 3
id
««4 6
==
««7 9
$num
««: ;
)
««; <
{
»» 
return
…… 
$str
…… -
;
……- .
}
   
string
ÀÀ 
query
ÀÀ 
=
ÀÀ 
null
ÀÀ #
;
ÀÀ# $
if
ÕÕ 
(
ÕÕ 
device
ÕÕ 
==
ÕÕ 
$str
ÕÕ #
)
ÕÕ# $
{
ŒŒ 
query
œœ 
=
œœ 
null
œœ  
;
œœ  !
}
–– 
else
—— 
{
““ 
query
”” 
=
”” 
$str
”” -
+
””. /
device
””0 6
+
””7 8
$str
””9 @
;
””@ A
}
‘‘ 
if
÷÷ 
(
÷÷ 
id
÷÷ 
>
÷÷ 
$num
÷÷ 
)
÷÷ 
{
◊◊ 
query
ÿÿ 
=
ÿÿ 
$str
ÿÿ &
+
ÿÿ' (
id
ÿÿ) +
+
ÿÿ, -
$str
ÿÿ. 5
;
ÿÿ5 6
}
ŸŸ 
string
€€ 
sql
€€ 
=
€€ 
$str€€ ©
+€€™ ´
query€€¨ ±
+€€≤ ≥
$str€€¥ »
;€€» …
var
ﬁﬁ 
CollectionJsonDB
ﬁﬁ $
=
ﬁﬁ% &
new
ﬁﬁ' *
SGQDBContext
ﬁﬁ+ 7
.
ﬁﬁ7 8
CollectionJson
ﬁﬁ8 F
(
ﬁﬁF G
db
ﬁﬁG I
)
ﬁﬁI J
;
ﬁﬁJ K
var
ﬂﬂ #
ConsolidationLevel1DB
ﬂﬂ )
=
ﬂﬂ* +
new
ﬂﬂ, /
SGQDBContext
ﬂﬂ0 <
.
ﬂﬂ< =!
ConsolidationLevel1
ﬂﬂ= P
(
ﬂﬂP Q
db
ﬂﬂQ S
)
ﬂﬂS T
;
ﬂﬂT U
var
‡‡ #
ConsolidationLevel2DB
‡‡ )
=
‡‡* +
new
‡‡, /
SGQDBContext
‡‡0 <
.
‡‡< =!
ConsolidationLevel2
‡‡= P
(
‡‡P Q
db
‡‡Q S
)
‡‡S T
;
‡‡T U
var
‚‚ 
collectionJson
‚‚ "
=
‚‚# $
CollectionJsonDB
‚‚% 5
.
‚‚5 6
getJson
‚‚6 =
(
‚‚= >
sql
‚‚> A
)
‚‚A B
;
‚‚B C
foreach
ËË 
(
ËË 
var
ËË 
c
ËË 
in
ËË !
collectionJson
ËË" 0
)
ËË0 1
{
ÈÈ 
var
¯¯ 
l3Temp
¯¯ 
=
¯¯  
c
¯¯! "
.
¯¯" #
Level03ResultJSon
¯¯# 4
.
¯¯4 5
Replace
¯¯5 <
(
¯¯< =
$str
¯¯= R
,
¯¯R S
$str
¯¯T W
)
¯¯W X
.
¯¯X Y
Replace
¯¯Y `
(
¯¯` a
$str
¯¯a l
,
¯¯l m
$str
¯¯n p
)
¯¯p q
.
¯¯q r
Replace
¯¯r y
(
¯¯y z
$str¯¯z Ü
,¯¯Ü á
$str¯¯à ä
)¯¯ä ã
;¯¯ã å
if
˙˙ 
(
˙˙ 
l3Temp
˙˙ 
.
˙˙ 
Count
˙˙ #
(
˙˙# $
)
˙˙$ %
<
˙˙& '
$num
˙˙( *
)
˙˙* +
{
˚˚ 
c
¸¸ 
.
¸¸ 
Level03ResultJSon
¸¸ +
=
¸¸, -
null
¸¸. 2
;
¸¸2 3
}
˝˝ 
int
ÄÄ $
ConsolidationLevel1_Id
ÄÄ .
=
ÄÄ/ 0
$num
ÄÄ1 2
;
ÄÄ2 3
int
ÅÅ $
ConsolidationLevel2_Id
ÅÅ .
=
ÅÅ/ 0
$num
ÅÅ1 2
;
ÅÅ2 3
string
ÇÇ 

AlertLevel
ÇÇ %
=
ÇÇ& '
$str
ÇÇ( +
;
ÇÇ+ ,
string
ÉÉ #
avaliacaoultimoalerta
ÉÉ 0
=
ÉÉ1 2
$str
ÉÉ3 6
;
ÉÉ6 7
string
ÑÑ '
monitoramentoultimoalerta
ÑÑ 4
=
ÑÑ5 6
$str
ÑÑ7 :
;
ÑÑ: ;
string
ââ 
[
ââ 
]
ââ 
arrayHeader
ââ (
=
ââ) *
c
ââ+ ,
.
ââ, -
Level02HeaderJson
ââ- >
.
ââ> ?
Split
ââ? D
(
ââD E
$char
ââE H
)
ââH I
;
ââI J
string
ãã 
headersContadores
ãã ,
=
ãã- .
arrayHeader
ãã/ :
[
ãã: ;
$num
ãã; <
]
ãã< =
;
ãã= >
string
åå 
Phase
åå  
=
åå! "
arrayHeader
åå# .
[
åå. /
$num
åå/ 0
]
åå0 1
;
åå1 2
string
éé 
Reaudit
éé "
=
éé# $
BoolConverter
éé% 2
(
éé2 3
c
éé3 4
.
éé4 5
Reaudit
éé5 <
.
éé< =
ToString
éé= E
(
ééE F
)
ééF G
)
ééG H
;
ééH I
string
êê 

StartPhase
êê %
=
êê& '
arrayHeader
êê( 3
[
êê3 4
$num
êê4 5
]
êê5 6
;
êê6 7
if
ëë 
(
ëë ,
VerificaStringNulaUndefinedNaN
ëë 6
(
ëë6 7

StartPhase
ëë7 A
)
ëëA B
)
ëëB C
{
íí 

StartPhase
ìì "
=
ìì# $
$str
ìì% <
;
ìì< =
}
îî 
else
ïï 
{
ññ 
try
óó 
{
òò 
DateTime
ôô $
	dataPhase
ôô% .
=
ôô/ 0 
DateCollectConvert
ôô1 C
(
ôôC D

StartPhase
ôôD N
)
ôôN O
;
ôôO P

StartPhase
öö &
=
öö' (
$str
öö) 2
+
öö3 4
	dataPhase
öö5 >
.
öö> ?
ToString
öö? G
(
ööG H
$str
ööH ]
)
öö] ^
+
öö_ `
$str
ööa q
;
ööq r
}
õõ 
catch
õõ 
(
õõ 
	Exception
õõ (
e
õõ) *
)
õõ* +
{
úú 

StartPhase
ùù &
=
ùù' (
$str
ùù) 2
+
ùù3 4
DateTime
ùù5 =
.
ùù= >
Now
ùù> A
.
ùùA B
ToString
ùùB J
(
ùùJ K
$str
ùùK `
)
ùù` a
+
ùùb c
$str
ùùd t
;
ùùt u
}
ûû 
}
†† 
string
££ !
ConsecuticeFalireIs
££ .
=
££/ 0
arrayHeader
££1 <
[
££< =
$num
££= >
]
££> ?
;
££? @!
ConsecuticeFalireIs
§§ '
=
§§( ) 
DefaultValueReturn
§§* <
(
§§< =
arrayHeader
§§= H
[
§§H I
$num
§§I J
]
§§J K
,
§§K L
$str
§§M P
)
§§P Q
;
§§Q R
if
•• 
(
•• !
ConsecuticeFalireIs
•• +
!=
••, .
$str
••/ 2
)
••2 3
{
¶¶ !
ConsecuticeFalireIs
ßß +
=
ßß, -
$str
ßß. 1
;
ßß1 2
}
®® 
string
™™ %
ConsecutiveFailureTotal
™™ 2
=
™™3 4
arrayHeader
™™5 @
[
™™@ A
$num
™™A B
]
™™B C
;
™™C D%
ConsecutiveFailureTotal
´´ +
=
´´, - 
DefaultValueReturn
´´. @
(
´´@ A%
ConsecutiveFailureTotal
´´A X
,
´´X Y
$str
´´Z ]
)
´´] ^
;
´´^ _
string
¨¨ 
NotEvaluateIs
¨¨ (
=
¨¨) *
arrayHeader
¨¨+ 6
[
¨¨6 7
$num
¨¨7 8
]
¨¨8 9
;
¨¨9 :
NotEvaluateIs
≠≠ !
=
≠≠" #
BoolConverter
≠≠$ 1
(
≠≠1 2
NotEvaluateIs
≠≠2 ?
)
≠≠? @
;
≠≠@ A
string
ØØ 

Duplicated
ØØ %
=
ØØ& '
$str
ØØ( +
;
ØØ+ ,
string
±± 
	completed
±± $
=
±±% &
arrayHeader
±±' 2
[
±±2 3
$num
±±3 4
]
±±4 5
;
±±5 6
	completed
≤≤ 
=
≤≤ $
BoolCompletedConverter
≤≤  6
(
≤≤6 7
	completed
≤≤7 @
)
≤≤@ A
;
≤≤A B
bool
¥¥ 
update
¥¥ 
=
¥¥  !
false
¥¥" '
;
¥¥' (
string
µµ  
idCollectionLevel2
µµ -
=
µµ. /
arrayHeader
µµ0 ;
[
µµ; <
$num
µµ< =
]
µµ= >
;
µµ> ? 
idCollectionLevel2
∂∂ &
=
∂∂' ( 
DefaultValueReturn
∂∂) ;
(
∂∂; < 
idCollectionLevel2
∂∂< N
,
∂∂N O
$str
∂∂P S
)
∂∂S T
;
∂∂T U
if
∑∑ 
(
∑∑  
idCollectionLevel2
∑∑ *
!=
∑∑+ -
$str
∑∑. 1
)
∑∑1 2
{
∏∏ 
update
ππ 
=
ππ  
true
ππ! %
;
ππ% &
}
∫∫ 
string
ªª 

havePhases
ªª %
=
ªª& '
arrayHeader
ªª( 3
[
ªª3 4
$num
ªª4 5
]
ªª5 6
;
ªª6 7

havePhases
ºº 
=
ºº  
BoolConverter
ºº! .
(
ºº. /

havePhases
ºº/ 9
)
ºº9 :
;
ºº: ;

AlertLevel
ææ 
=
ææ  
arrayHeader
ææ! ,
[
ææ, -
$num
ææ- /
]
ææ/ 0
;
ææ0 1

AlertLevel
øø 
=
øø  

AlertLevel
øø! +
==
øø, .
$str
øø/ 4
?
øø5 6
$str
øø7 :
:
øø; <

AlertLevel
øø= G
;
øøG H

AlertLevel
¿¿ 
=
¿¿   
DefaultValueReturn
¿¿! 3
(
¿¿3 4

AlertLevel
¿¿4 >
,
¿¿> ?
$str
¿¿@ C
)
¿¿C D
;
¿¿D E
string
¬¬ 
weievaluation
¬¬ (
=
¬¬) *
arrayHeader
¬¬+ 6
[
¬¬6 7
$num
¬¬7 9
]
¬¬9 :
;
¬¬: ;
string
√√ 

weidefects
√√ %
=
√√& '
arrayHeader
√√( 3
[
√√3 4
$num
√√4 6
]
√√6 7
;
√√7 8
string
ƒƒ 
defects
ƒƒ "
=
ƒƒ# $
arrayHeader
ƒƒ% 0
[
ƒƒ0 1
$num
ƒƒ1 3
]
ƒƒ3 4
;
ƒƒ4 5
string
≈≈ $
totallevel3withdefects
≈≈ 1
=
≈≈2 3
arrayHeader
≈≈4 ?
[
≈≈? @
$num
≈≈@ B
]
≈≈B C
;
≈≈C D
string
∆∆ #
totalLevel3evaluation
∆∆ 0
=
∆∆1 2
arrayHeader
∆∆3 >
[
∆∆> ?
$num
∆∆? A
]
∆∆A B
;
∆∆B C#
avaliacaoultimoalerta
»» )
=
»»* +
arrayHeader
»», 7
[
»»7 8
$num
»»8 :
]
»»: ;
;
»»; <#
avaliacaoultimoalerta
…… )
=
……* + 
DefaultValueReturn
……, >
(
……> ?#
avaliacaoultimoalerta
……? T
,
……T U
$str
……V Y
)
……Y Z
;
……Z [
string
ÕÕ 
evaluatedresult
ÕÕ *
=
ÕÕ+ ,
arrayHeader
ÕÕ- 8
[
ÕÕ8 9
$num
ÕÕ9 ;
]
ÕÕ; <
;
ÕÕ< =
string
ŒŒ 
defectsresult
ŒŒ (
=
ŒŒ) *
arrayHeader
ŒŒ+ 6
[
ŒŒ6 7
$num
ŒŒ7 9
]
ŒŒ9 :
;
ŒŒ: ;
string
œœ 

sequential
œœ %
=
œœ& '
arrayHeader
œœ( 3
[
œœ3 4
$num
œœ4 6
]
œœ6 7
;
œœ7 8

sequential
–– 
=
––   
DefaultValueReturn
––! 3
(
––3 4

sequential
––4 >
,
––> ?
$str
––@ C
)
––C D
;
––D E
string
—— 
side
—— 
=
——  !
arrayHeader
——" -
[
——- .
$num
——. 0
]
——0 1
;
——1 2
side
““ 
=
““  
DefaultValueReturn
““ -
(
““- .
side
““. 2
,
““2 3
$str
““4 7
)
““7 8
;
““8 9
string
‘‘ 
isemptylevel3
‘‘ (
=
‘‘) *
arrayHeader
‘‘+ 6
[
‘‘6 7
$num
‘‘7 9
]
‘‘9 :
;
‘‘: ;
isemptylevel3
’’ !
=
’’" # 
DefaultValueReturn
’’$ 6
(
’’6 7
isemptylevel3
’’7 D
,
’’D E
$str
’’F I
)
’’I J
;
’’J K
isemptylevel3
÷÷ !
=
÷÷" #
BoolConverter
÷÷$ 1
(
÷÷1 2
isemptylevel3
÷÷2 ?
)
÷÷? @
;
÷÷@ A
string
⁄⁄ 
haveReaudit
⁄⁄ &
=
⁄⁄' (
BoolConverter
⁄⁄) 6
(
⁄⁄6 7
c
⁄⁄7 8
.
⁄⁄8 9
haveReaudit
⁄⁄9 D
.
⁄⁄D E
ToString
⁄⁄E M
(
⁄⁄M N
)
⁄⁄N O
)
⁄⁄O P
;
⁄⁄P Q
int
‹‹ 
reauditLevel
‹‹ $
=
‹‹% &
c
‹‹' (
.
‹‹( )
ReauditLevel
‹‹) 5
;
‹‹5 6
string
ﬁﬁ "
haveCorrectiveAction
ﬁﬁ /
=
ﬁﬁ0 1
BoolConverter
ﬁﬁ2 ?
(
ﬁﬁ? @
c
ﬁﬁ@ A
.
ﬁﬁA B"
haveCorrectiveAction
ﬁﬁB V
.
ﬁﬁV W
ToString
ﬁﬁW _
(
ﬁﬁ_ `
)
ﬁﬁ` a
)
ﬁﬁa b
;
ﬁﬁb c
string
‡‡ 
reauditNumber
‡‡ (
=
‡‡) * 
DefaultValueReturn
‡‡+ =
(
‡‡= >
c
‡‡> ?
.
‡‡? @
ReauditNumber
‡‡@ M
.
‡‡M N
ToString
‡‡N V
(
‡‡V W
)
‡‡W X
,
‡‡X Y
$str
‡‡Z ]
)
‡‡] ^
;
‡‡^ _
var
‚‚ !
consolidationLevel1
‚‚ +
=
‚‚, -#
ConsolidationLevel1DB
‚‚. C
.
‚‚C D
getConsolidation
‚‚D T
(
‚‚T U
c
‚‚U V
.
‚‚V W
Unit_Id
‚‚W ^
,
‚‚^ _
c
‚‚` a
.
‚‚a b

level01_Id
‚‚b l
,
‚‚l m
c
‚‚n o
.
‚‚o p$
Level01CollectionDate‚‚p Ö
,‚‚Ö Ü
c‚‚á à
.‚‚à â
Shift‚‚â é
,‚‚é è
c‚‚ê ë
.‚‚ë í
Period‚‚í ò
)‚‚ò ô
;‚‚ô ö
if
‰‰ 
(
‰‰ 
c
‰‰ 
.
‰‰ 
Reaudit
‰‰ !
)
‰‰! "!
consolidationLevel1
ÂÂ +
=
ÂÂ, -#
ConsolidationLevel1DB
ÂÂ. C
.
ÂÂC D
getConsolidation
ÂÂD T
(
ÂÂT U
c
ÂÂU V
.
ÂÂV W
Unit_Id
ÂÂW ^
,
ÂÂ^ _
c
ÂÂ` a
.
ÂÂa b

level01_Id
ÂÂb l
,
ÂÂl m
c
ÂÂn o
.
ÂÂo p$
Level01CollectionDateÂÂp Ö
,ÂÂÖ Ü
cÂÂá à
.ÂÂà â
ShiftÂÂâ é
,ÂÂé è
cÂÂê ë
.ÂÂë í
PeriodÂÂí ò
)ÂÂò ô
;ÂÂô ö
if
ÊÊ 
(
ÊÊ !
consolidationLevel1
ÊÊ +
==
ÊÊ, .
null
ÊÊ/ 3
)
ÊÊ3 4
{
ÁÁ !
consolidationLevel1
ËË +
=
ËË, -'
InsertConsolidationLevel1
ËË. G
(
ËËG H
c
ËËH I
.
ËËI J
Unit_Id
ËËJ Q
,
ËËQ R
c
ËËS T
.
ËËT U

level01_Id
ËËU _
,
ËË_ `
c
ËËa b
.
ËËb c#
Level01CollectionDate
ËËc x
,
ËËx y
c
ËËz {
.
ËË{ |
ShiftËË| Å
,ËËÅ Ç
cËËÉ Ñ
.ËËÑ Ö
PeriodËËÖ ã
)ËËã å
;ËËå ç
if
ÈÈ 
(
ÈÈ !
consolidationLevel1
ÈÈ /
==
ÈÈ0 2
null
ÈÈ3 7
)
ÈÈ7 8
{
ÍÍ 
throw
ÎÎ !
new
ÎÎ" %
	Exception
ÎÎ& /
(
ÎÎ/ 0
)
ÎÎ0 1
;
ÎÎ1 2
}
ÏÏ 
}
ÌÌ 
var
ÔÔ !
consolidationLevel2
ÔÔ +
=
ÔÔ, -#
ConsolidationLevel2DB
ÔÔ. C
.
ÔÔC D&
getByConsolidationLevel1
ÔÔD \
(
ÔÔ\ ]
c
ÔÔ] ^
.
ÔÔ^ _
Unit_Id
ÔÔ_ f
,
ÔÔf g!
consolidationLevel1
ÔÔh {
.
ÔÔ{ |
Id
ÔÔ| ~
,
ÔÔ~ 
cÔÔÄ Å
.ÔÔÅ Ç

level02_IdÔÔÇ å
)ÔÔå ç
;ÔÔç é
if
ÒÒ 
(
ÒÒ 
c
ÒÒ 
.
ÒÒ 
Reaudit
ÒÒ !
)
ÒÒ! "!
consolidationLevel2
ÚÚ +
=
ÚÚ, -#
ConsolidationLevel2DB
ÚÚ. C
.
ÚÚC D&
getByConsolidationLevel1
ÚÚD \
(
ÚÚ\ ]
c
ÚÚ] ^
.
ÚÚ^ _
Unit_Id
ÚÚ_ f
,
ÚÚf g!
consolidationLevel1
ÚÚh {
.
ÚÚ{ |
Id
ÚÚ| ~
,
ÚÚ~ 
cÚÚÄ Å
.ÚÚÅ Ç

level02_IdÚÚÇ å
,ÚÚå ç
$numÚÚé è
,ÚÚè ê
reauditNumberÚÚë û
)ÚÚû ü
;ÚÚü †
if
ÙÙ 
(
ÙÙ !
consolidationLevel2
ÙÙ +
==
ÙÙ, .
null
ÙÙ/ 3
)
ÙÙ3 4
{
ıı !
consolidationLevel2
ˆˆ +
=
ˆˆ, -'
InsertConsolidationLevel2
ˆˆ. G
(
ˆˆG H!
consolidationLevel1
ˆˆH [
.
ˆˆ[ \
Id
ˆˆ\ ^
,
ˆˆ^ _
c
ˆˆ` a
.
ˆˆa b

level02_Id
ˆˆb l
,
ˆˆl m
c
ˆˆn o
.
ˆˆo p
Unit_Id
ˆˆp w
,
ˆˆw x
c
ˆˆy z
.
ˆˆz {$
Level02CollectionDateˆˆ{ ê
,ˆˆê ë
cˆˆí ì
.ˆˆì î
Reauditˆˆî õ
,ˆˆõ ú
cˆˆù û
.ˆˆû ü
ReauditNumberˆˆü ¨
)ˆˆ¨ ≠
;ˆˆ≠ Æ
if
˜˜ 
(
˜˜ !
consolidationLevel2
˜˜ /
==
˜˜0 2
null
˜˜3 7
)
˜˜7 8
{
¯¯ 
throw
˘˘ !
new
˘˘" %
	Exception
˘˘& /
(
˘˘/ 0
)
˘˘0 1
;
˘˘1 2
}
˙˙ 
}
˚˚ $
ConsolidationLevel1_Id
¸¸ *
=
¸¸+ ,!
consolidationLevel1
¸¸- @
.
¸¸@ A
Id
¸¸A C
;
¸¸C D$
ConsolidationLevel2_Id
˝˝ *
=
˝˝+ ,!
consolidationLevel2
˝˝- @
.
˝˝@ A
Id
˝˝A C
;
˝˝C D
int
ÄÄ 
sampleCollect
ÄÄ %
=
ÄÄ& '
c
ÄÄ( )
.
ÄÄ) *
Sample
ÄÄ* 0
;
ÄÄ0 1
int
ÅÅ 
sampleTotal
ÅÅ #
=
ÅÅ$ %!
consolidationLevel2
ÅÅ& 9
.
ÅÅ9 :
EvaluatedResult
ÅÅ: I
;
ÅÅI J
bool
ÑÑ 
hasSampleTotal
ÑÑ '
=
ÑÑ( )
Convert
ÑÑ* 1
.
ÑÑ1 2
	ToBoolean
ÑÑ2 ;
(
ÑÑ; < 
DefaultValueReturn
ÑÑ< N
(
ÑÑN O
arrayHeader
ÑÑO Z
[
ÑÑZ [
$num
ÑÑ[ ]
]
ÑÑ] ^
,
ÑÑ^ _
$str
ÑÑ` g
)
ÑÑg h
)
ÑÑh i
;
ÑÑi j
if
ÖÖ 
(
ÖÖ 
hasSampleTotal
ÖÖ &
==
ÖÖ' )
true
ÖÖ* .
)
ÖÖ. /
{
ÜÜ 
sampleCollect
áá %
=
áá& '
sampleTotal
áá( 3
++
áá3 5
;
áá5 6
}
àà 
string
ää 
hashKey
ää "
=
ää# $
arrayHeader
ää% 0
[
ää0 1
$num
ää1 3
]
ää3 4
;
ää4 5
hashKey
ãã 
=
ãã  
DefaultValueReturn
ãã 0
(
ãã0 1
hashKey
ãã1 8
,
ãã8 9
$str
ãã: =
)
ãã= >
;
ãã> ?'
monitoramentoultimoalerta
çç -
=
çç. /
arrayHeader
çç0 ;
[
çç; <
$num
çç< >
]
çç> ?
;
çç? @'
monitoramentoultimoalerta
éé -
=
éé. / 
DefaultValueReturn
éé0 B
(
ééB C'
monitoramentoultimoalerta
ééC \
,
éé\ ]
$str
éé^ a
)
ééa b
;
ééb c
string
êê "
startphaseevaluation
êê /
=
êê0 1 
DefaultValueReturn
êê2 D
(
êêD E
arrayHeader
êêE P
[
êêP Q
$num
êêQ S
]
êêS T
,
êêT U
$str
êêV Y
)
êêY Z
;
êêZ [
string
ëë  
endphaseevaluation
ëë -
=
ëë. /
$str
ëë0 3
;
ëë3 4
if
íí 
(
íí 
arrayHeader
íí #
.
íí# $
Length
íí$ *
>
íí+ ,
$num
íí- /
)
íí/ 0
{
ìì  
endphaseevaluation
îî *
=
îî+ , 
DefaultValueReturn
îî- ?
(
îî? @
arrayHeader
îî@ K
[
îîK L
$num
îîL N
]
îîN O
,
îîO P
$str
îîQ T
)
îîT U
;
îîU V
}
ïï 
int
óó  
CollectionLevel2Id
óó *
=
óó+ ,$
InsertCollectionLevel2
óó- C
(
óóC D!
consolidationLevel1
óóD W
,
óóW X!
consolidationLevel2
óóY l
,
óól m
c
óón o
.
óóo p
	AuditorId
óóp y
,
óóy z
c
óó{ |
.
óó| }
Shiftóó} Ç
,óóÇ É
cóóÑ Ö
.óóÖ Ü
PeriodóóÜ å
,óóå ç
Phaseóóé ì
,óóì î
cóóï ñ
.óóñ ó
Reauditóóó û
,óóû ü
cóó† °
.óó° ¢
ReauditNumberóó¢ Ø
,óóØ ∞
cóó± ≤
.óó≤ ≥%
Level02CollectionDateóó≥ »
,óó» …

StartPhase
òò0 :
,
òò: ;
c
òò< =
.
òò= >
Evaluate
òò> F
,
òòF G
sampleCollect
òòH U
,
òòU V!
ConsecuticeFalireIs
òòW j
,
òòj k&
ConsecutiveFailureTotalòòl É
,òòÉ Ñ
NotEvaluateIsòòÖ í
,òòí ì

Duplicatedòòî û
,òòû ü
haveReauditòò† ´
,òò´ ¨
reauditLevelòò≠ π
,òòπ ∫"
haveCorrectiveAction
ôô0 D
,
ôôD E

havePhases
ôôF P
,
ôôP Q
	completed
ôôR [
,
ôô[ \ 
idCollectionLevel2
ôô] o
,
ôôo p

AlertLevel
ôôq {
,
ôô{ |

sequentialôô} á
,ôôá à
sideôôâ ç
,ôôç é
weievaluation
öö0 =
,
öö= >

weidefects
öö? I
,
ööI J
defects
ööK R
,
ööR S$
totallevel3withdefects
ööT j
,
ööj k$
totalLevel3evaluationööl Å
,ööÅ Ç%
avaliacaoultimoalertaööÉ ò
,ööò ô)
monitoramentoultimoalertaööö ≥
,öö≥ ¥
evaluatedresultööµ ƒ
,ööƒ ≈
defectsresultöö∆ ”
,öö” ‘
isemptylevel3öö’ ‚
,öö‚ „$
startphaseevaluationöö‰ ¯
,öö¯ ˘"
endphaseevaluationöö˙ å
,ööå ç
hashKeyööé ï
)ööï ñ
;ööñ ó
if
úú 
(
úú  
CollectionLevel2Id
úú *
==
úú+ -
$num
úú. 2
)
úú2 3
{
ùù 
int
ûû 

jsonUpdate
ûû &
=
ûû' ("
updateJsonDuplicated
ûû) =
(
ûû= >
c
ûû> ?
.
ûû? @
Id
ûû@ B
)
ûûB C
;
ûûC D
}
üü 
else
†† 
if
†† 
(
††  
CollectionLevel2Id
†† /
>
††0 1
$num
††2 3
&&
††4 6
!
††7 8
string
††8 >
.
††> ?
IsNullOrEmpty
††? L
(
††L M
c
††M N
.
††N O
Level03ResultJSon
††O `
)
††` a
)
††a b
{
°° 
int
££  
CollectionLevel3Id
££ .
=
££/ 0$
InsertCollectionLevel3
££1 G
(
££G H 
CollectionLevel2Id
££H Z
.
££Z [
ToString
££[ c
(
££c d
)
££d e
,
££e f
c
££g h
.
££h i

level02_Id
££i s
,
££s t
c
££u v
.
££v w 
Level03ResultJSon££w à
,££à â
c££ä ã
.££ã å
	AuditorId££å ï
,££ï ñ

Duplicated££ó °
,££° ¢
filho£££ ®
)££® ©
;££© ™
int
•• 
IsBEA
•• !
=
••" #
$num
••$ %
;
••% &
using
ßß 
(
ßß 
var
ßß "
db
ßß# %
=
ßß& '
new
ßß( +
Dominio
ßß, 3
.
ßß3 4
SgqDbDevEntities
ßß4 D
(
ßßD E
)
ßßE F
)
ßßF G
{
®® 
var
™™ 
BEA
™™  #
=
™™$ %
db
™™& (
.
™™( )0
"ParLevel1VariableProductionXLevel1
™™) K
.
™™K L
FirstOrDefault
™™L Z
(
™™Z [
r
™™[ \
=>
™™] _
r
™™` a
.
™™a b
ParLevel1_Id
™™b n
==
™™o q
c
™™r s
.
™™s t

level01_Id
™™t ~
)
™™~ 
;™™ Ä
if
´´ 
(
´´ 
BEA
´´ "
!=
´´# %
null
´´& *
)
´´* +
IsBEA
¨¨  %
=
¨¨& '
BEA
¨¨( +
.
¨¨+ ,,
ParLevel1VariableProduction_Id
¨¨, J
;
¨¨J K
}
ÆÆ 
if
±± 
(
±± 
IsBEA
±± !
==
±±" $
$num
±±% &
||
±±' )
IsBEA
±±* /
==
±±0 2
$num
±±3 4
||
±±5 7
c
±±8 9
.
±±9 :

level01_Id
±±: D
==
±±E G
$num
±±H J
||
±±K M
c
±±N O
.
±±O P

level01_Id
±±P Z
==
±±[ ]
$num
±±^ `
)
±±` a%
ReconsolidationToLevel3
≤≤  7
(
≤≤7 8 
CollectionLevel2Id
≤≤8 J
.
≤≤J K
ToString
≤≤K S
(
≤≤S T
)
≤≤T U
)
≤≤U V
;
≤≤V W
headersContadores
¥¥ )
=
¥¥* +
headersContadores
¥¥, =
.
¥¥= >
Replace
¥¥> E
(
¥¥E F
$str
¥¥F Y
,
¥¥Y Z
$str
¥¥[ ^
)
¥¥^ _
.
¥¥_ `
Replace
¥¥` g
(
¥¥g h
$str
¥¥h r
,
¥¥r s
$str
¥¥t v
)
¥¥v w
.
¥¥w x
Replace
¥¥x 
(¥¥ Ä
$str¥¥Ä ã
,¥¥ã å
$str¥¥ç è
)¥¥è ê
;¥¥ê ë
if
µµ 
(
µµ 
!
µµ 
string
µµ #
.
µµ# $
IsNullOrEmpty
µµ$ 1
(
µµ1 2
headersContadores
µµ2 C
)
µµC D
)
µµD E
{
∂∂ 
int
∑∑ 
headerFieldId
∑∑  -
=
∑∑. //
!InsertCollectionLevel2HeaderField
∑∑0 Q
(
∑∑Q R 
CollectionLevel2Id
∑∑R d
,
∑∑d e
headersContadores
∑∑f w
)
∑∑w x
;
∑∑x y
}
∏∏ 
string
∫∫ '
correctiveActionCompleted
∫∫ 8
=
∫∫9 :
arrayHeader
∫∫; F
[
∫∫F G
$num
∫∫G H
]
∫∫H I
;
∫∫I J
if
ªª 
(
ªª "
haveCorrectiveAction
ªª 0
==
ªª1 3
$str
ªª4 7
)
ªª7 8
{
ºº '
correctiveActionCompleted
ΩΩ 5
=
ΩΩ6 7 
DefaultValueReturn
ΩΩ8 J
(
ΩΩJ K'
correctiveActionCompleted
ΩΩK d
,
ΩΩd e
$str
ΩΩf i
)
ΩΩi j
;
ΩΩj k
if
ææ 
(
ææ  '
correctiveActionCompleted
ææ  9
==
ææ: <
$str
ææ= W
)
ææW X
{
øø '
correctiveActionCompleted
¿¿  9
=
¿¿: ;
$str
¿¿< ?
;
¿¿? @
}
¡¡ 
}
¬¬ 
else
√√ 
{
ƒƒ '
correctiveActionCompleted
≈≈ 5
=
≈≈6 7"
haveCorrectiveAction
≈≈8 L
;
≈≈L M
}
∆∆ 
string
»» 
reauditCompleted
»» /
=
»»0 1
arrayHeader
»»2 =
[
»»= >
$num
»»> @
]
»»@ A
;
»»A B
if
…… 
(
…… 
haveReaudit
…… '
==
……( *
$str
……+ .
)
……. /
{
   
reauditCompleted
ÀÀ ,
=
ÀÀ- . 
DefaultValueReturn
ÀÀ/ A
(
ÀÀA B
reauditCompleted
ÀÀB R
,
ÀÀR S
$str
ÀÀT W
)
ÀÀW X
;
ÀÀX Y
if
ÃÃ 
(
ÃÃ  
reauditCompleted
ÃÃ  0
==
ÃÃ1 3
$str
ÃÃ4 E
)
ÃÃE F
{
ÕÕ 
reauditCompleted
ŒŒ  0
=
ŒŒ1 2
$str
ŒŒ3 6
;
ŒŒ6 7
}
œœ 
}
–– 
else
—— 
{
““ 
reauditCompleted
”” ,
=
””- .
haveReaudit
””/ :
;
””: ;
}
‘‘ 
if
◊◊ 
(
◊◊ 
update
◊◊ "
==
◊◊# %
true
◊◊& *
&&
◊◊+ -
(
◊◊. /'
correctiveActionCompleted
◊◊/ H
==
◊◊I K
$str
◊◊L O
||
◊◊P R
reauditCompleted
◊◊S c
==
◊◊d f
$str
◊◊g j
)
◊◊j k
)
◊◊k l
{
ÿÿ 
int
ŸŸ $
updateCorrectiveAction
ŸŸ  6
=
ŸŸ7 82
$updateLevel02CorrectiveActionReaudit
ŸŸ9 ]
(
ŸŸ] ^ 
CollectionLevel2Id
ŸŸ^ p
.
ŸŸp q
ToString
ŸŸq y
(
ŸŸy z
)
ŸŸz {
,
ŸŸ{ |(
correctiveActionCompletedŸŸ} ñ
,ŸŸñ ó 
reauditCompletedŸŸò ®
)ŸŸ® ©
;ŸŸ© ™
if
⁄⁄ 
(
⁄⁄  $
updateCorrectiveAction
⁄⁄  6
==
⁄⁄7 9
$num
⁄⁄: ;
)
⁄⁄; <
{
€€ 
return
››  &
$str
››' .
;
››. /
}
ﬁﬁ 
}
ﬂﬂ 
if
·· 
(
·· 
!
·· 
string
·· #
.
··# $
IsNullOrEmpty
··$ 1
(
··1 2
c
··2 3
.
··3 4"
CorrectiveActionJson
··4 H
)
··H I
)
··I J
{
‚‚ 
c
„„ 
.
„„ "
CorrectiveActionJson
„„ 2
=
„„3 4
c
„„5 6
.
„„6 7"
CorrectiveActionJson
„„7 K
.
„„K L
Replace
„„L S
(
„„S T
$str
„„T h
,
„„h i
$str
„„j l
)
„„l m
.
„„m n
Replace
„„n u
(
„„u v
$str„„v ã
,„„ã å
$str„„ç è
)„„è ê
;„„ê ë
string
ÂÂ "
[
ÂÂ" #
]
ÂÂ# $#
arrayCorrectiveAction
ÂÂ% :
=
ÂÂ; <
c
ÂÂ= >
.
ÂÂ> ?"
CorrectiveActionJson
ÂÂ? S
.
ÂÂS T
Split
ÂÂT Y
(
ÂÂY Z
$char
ÂÂZ ]
)
ÂÂ] ^
;
ÂÂ^ _
string
ÁÁ " 
slaugthersignature
ÁÁ# 5
=
ÁÁ6 7#
arrayCorrectiveAction
ÁÁ8 M
[
ÁÁM N
$num
ÁÁN O
]
ÁÁO P
;
ÁÁP Q
string
ËË "!
techinicalsignature
ËË# 6
=
ËË7 8#
arrayCorrectiveAction
ËË9 N
[
ËËN O
$num
ËËO P
]
ËËP Q
;
ËËQ R
string
ÈÈ "
datetimeslaughter
ÈÈ# 4
=
ÈÈ5 6#
arrayCorrectiveAction
ÈÈ7 L
[
ÈÈL M
$num
ÈÈM N
]
ÈÈN O
;
ÈÈO P
string
ÍÍ " 
datetimetechinical
ÍÍ# 5
=
ÍÍ6 7#
arrayCorrectiveAction
ÍÍ8 M
[
ÍÍM N
$num
ÍÍN O
]
ÍÍO P
;
ÍÍP Q
string
ÎÎ "
auditstarttime
ÎÎ# 1
=
ÎÎ2 3#
arrayCorrectiveAction
ÎÎ4 I
[
ÎÎI J
$num
ÎÎJ K
]
ÎÎK L
;
ÎÎL M
string
ÏÏ ""
datecorrectiveaction
ÏÏ# 7
=
ÏÏ8 9#
arrayCorrectiveAction
ÏÏ: O
[
ÏÏO P
$num
ÏÏP Q
]
ÏÏQ R
;
ÏÏR S
string
ÓÓ " 
descriptionFailure
ÓÓ# 5
=
ÓÓ6 7#
arrayCorrectiveAction
ÓÓ8 M
[
ÓÓM N
$num
ÓÓN O
]
ÓÓO P
;
ÓÓP Q 
descriptionFailure
ÔÔ .
=
ÔÔ/ 0
HttpUtility
ÔÔ1 <
.
ÔÔ< =
	UrlDecode
ÔÔ= F
(
ÔÔF G 
descriptionFailure
ÔÔG Y
,
ÔÔY Z
System
ÔÔ[ a
.
ÔÔa b
Text
ÔÔb f
.
ÔÔf g
Encoding
ÔÔg o
.
ÔÔo p
Default
ÔÔp w
)
ÔÔw x
;
ÔÔx y
string
ÒÒ "'
immediateCorrectiveAction
ÒÒ# <
=
ÒÒ= >#
arrayCorrectiveAction
ÒÒ? T
[
ÒÒT U
$num
ÒÒU V
]
ÒÒV W
;
ÒÒW X'
immediateCorrectiveAction
ÚÚ 5
=
ÚÚ6 7
HttpUtility
ÚÚ8 C
.
ÚÚC D
	UrlDecode
ÚÚD M
(
ÚÚM N'
immediateCorrectiveAction
ÚÚN g
,
ÚÚg h
System
ÚÚi o
.
ÚÚo p
Text
ÚÚp t
.
ÚÚt u
Encoding
ÚÚu }
.
ÚÚ} ~
DefaultÚÚ~ Ö
)ÚÚÖ Ü
;ÚÚÜ á
string
ÙÙ " 
productDisposition
ÙÙ# 5
=
ÙÙ6 7#
arrayCorrectiveAction
ÙÙ8 M
[
ÙÙM N
$num
ÙÙN O
]
ÙÙO P
;
ÙÙP Q 
productDisposition
ıı .
=
ıı/ 0
HttpUtility
ıı1 <
.
ıı< =
	UrlDecode
ıı= F
(
ııF G 
productDisposition
ııG Y
,
ııY Z
System
ıı[ a
.
ııa b
Text
ııb f
.
ııf g
Encoding
ııg o
.
ııo p
Default
ııp w
)
ııw x
;
ııx y
string
˜˜ "!
preventativeMeasure
˜˜# 6
=
˜˜7 8#
arrayCorrectiveAction
˜˜9 N
[
˜˜N O
$num
˜˜O P
]
˜˜P Q
;
˜˜Q R!
preventativeMeasure
¯¯ /
=
¯¯0 1
HttpUtility
¯¯2 =
.
¯¯= >
	UrlDecode
¯¯> G
(
¯¯G H!
preventativeMeasure
¯¯H [
,
¯¯[ \
System
¯¯] c
.
¯¯c d
Text
¯¯d h
.
¯¯h i
Encoding
¯¯i q
.
¯¯q r
Default
¯¯r y
)
¯¯y z
;
¯¯z {
int
˙˙  
CorrectiveActionId
˙˙  2
=
˙˙3 4$
correctiveActionInsert
˙˙5 K
(
˙˙K L
c
˙˙L M
.
˙˙M N
	AuditorId
˙˙N W
.
˙˙W X
ToString
˙˙X `
(
˙˙` a
)
˙˙a b
,
˙˙b c 
CollectionLevel2Id
˙˙d v
.
˙˙v w
ToString
˙˙w 
(˙˙ Ä
)˙˙Ä Å
,˙˙Å Ç"
slaugthersignature˙˙É ï
,˙˙ï ñ#
techinicalsignature˙˙ó ™
,˙˙™ ´!
datetimeslaughter˙˙¨ Ω
,˙˙Ω æ 
datetimetechinical
˚˚K ]
,
˚˚] ^"
datecorrectiveaction
˚˚_ s
,
˚˚s t
auditstarttime˚˚u É
,˚˚É Ñ"
descriptionFailure˚˚Ö ó
,˚˚ó ò)
immediateCorrectiveAction˚˚ô ≤
,˚˚≤ ≥ 
productDisposition
¸¸K ]
,
¸¸] ^!
preventativeMeasure
¸¸_ r
)
¸¸r s
;
¸¸s t
if
˛˛ 
(
˛˛   
CorrectiveActionId
˛˛  2
==
˛˛3 5
$num
˛˛6 7
)
˛˛7 8
{
ˇˇ 
return
ÅÅ  &
$str
ÅÅ' .
;
ÅÅ. /
}
ÇÇ 
}
ÑÑ 
int
ÜÜ 

jsonUpdate
ÜÜ &
=
ÜÜ' (

updateJson
ÜÜ) 3
(
ÜÜ3 4
c
ÜÜ4 5
.
ÜÜ5 6
Id
ÜÜ6 8
)
ÜÜ8 9
;
ÜÜ9 :
var
åå -
CollectionLevel2ConsolidationDB
åå ;
=
åå< =
new
åå> A
SGQDBContext
ååB N
.
ååN O+
CollectionLevel2Consolidation
ååO l
(
åål m
db
ååm o
)
ååo p
;
ååp q
var
çç +
collectionLevel2Consolidation
çç 9
=
çç: ;-
CollectionLevel2ConsolidationDB
çç< [
.
çç[ \
getConsolidation
çç\ l
(
ççl m%
ConsolidationLevel2_Idççm É
,ççÉ Ñ
cççÖ Ü
.ççÜ á

level02_Idççá ë
)ççë í
;ççí ì
var
èè )
updateConsolidationLevel2Id
èè 7
=
èè8 9'
updateConsolidationLevel2
èè: S
(
èèS T$
ConsolidationLevel2_Id
èèT j
,
èèj k

AlertLevel
èèl v
,
èèv w$
avaliacaoultimoalertaèèx ç
,èèç é)
monitoramentoultimoalertaèèè ®
,èè® ©-
collectionLevel2Consolidationèè™ «
)èè« »
;èè» …
var
ëë 7
)ConsolidationLevel1XConsolidationLevel2DB
ëë E
=
ëëF G
new
ëëH K5
'ConsolidationLevel1XConsolidationLevel2
ëëL s
(
ëës t
db
ëët v
)
ëëv w
;
ëëw x
var
íí 5
'consolidationLevel1XConsolidationLevel2
íí C
=
ííD E7
)ConsolidationLevel1XConsolidationLevel2DB
ííF o
.
íío p
getConsolidationííp Ä
(ííÄ Å&
ConsolidationLevel1_IdííÅ ó
)ííó ò
;ííò ô
var
îî )
updateConsolidationLevel1Id
îî 7
=
îî8 9'
updateConsolidationLevel1
îî: S
(
îîS T$
ConsolidationLevel1_Id
îîT j
,
îîj k

AlertLevel
îîl v
,
îîv w$
avaliacaoultimoalertaîîx ç
,îîç é)
monitoramentoultimoalertaîîè ®
,îî® ©7
'consolidationLevel1XConsolidationLevel2îî™ —
)îî— “
;îî“ ”
if
ññ 
(
ññ 
filho
ññ !
)
ññ! "
{
óó %
ReconsolidationToLevel3
òò 3
(
òò3 4 
CollectionLevel2Id
òò4 F
.
òòF G
ToString
òòG O
(
òòO P
)
òòP Q
)
òòQ R
;
òòR S
}
ôô 
}
õõ 
else
úú 
if
úú 
(
úú 
string
úú #
.
úú# $
IsNullOrEmpty
úú$ 1
(
úú1 2
c
úú2 3
.
úú3 4
Level03ResultJSon
úú4 E
)
úúE F
)
úúF G
{
ùù 
var
ûû 
ids
ûû 
=
ûû  !
$str
ûû" -
+
ûû. / 
CollectionLevel2Id
ûû0 B
+
ûûC D
$str
ûûE Z
+
ûû[ \
c
ûû] ^
.
ûû^ _
Id
ûû_ a
;
ûûa b
int
üü 
	insertLog
üü %
=
üü& '
insertLogJson
üü( 5
(
üü5 6
$str
üü6 8
,
üü8 9
$str
üü: J
+
üüK L
ids
üüM P
,
üüP Q
$str
üüR W
,
üüW X
$str
üüY ^
,
üü^ _
$str
üü` x
)
üüx y
;
üüy z
}
†† 
}
¢¢ 
return
§§ 
null
§§ 
;
§§ 
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
ex
¶¶ 
)
¶¶  
{
ßß 
int
®® 
	insertLog
®® 
=
®® 
insertLogJson
®®  -
(
®®- .
$str
®®. 0
,
®®0 1
ex
®®2 4
.
®®4 5
Message
®®5 <
,
®®< =
$str
®®> C
,
®®C D
$str
®®E J
,
®®J K
$str
®®L c
+
®®d e
ex
®®f h
.
®®h i
ToString
®®i q
(
®®q r
)
®®r s
)
®®s t
;
®®t u
throw
©© 
ex
©© 
;
©© 
}
™™ 
}
´´ 	
private
≠≠ 
static
≠≠ 
bool
≠≠ ,
VerificaStringNulaUndefinedNaN
≠≠ :
(
≠≠: ;
string
≠≠; A
value
≠≠B G
)
≠≠G H
{
ÆÆ 	
return
ØØ 
(
ØØ 
string
ØØ 
.
ØØ 
IsNullOrEmpty
ØØ (
(
ØØ( )
value
ØØ) .
)
ØØ. /
||
ØØ0 2
value
ØØ3 8
.
ØØ8 9
ToLowerInvariant
ØØ9 I
(
ØØI J
)
ØØJ K
==
ØØL N
$str
ØØO U
.
ØØU V
ToLowerInvariant
ØØV f
(
ØØf g
)
ØØg h
||
ØØi k
value
ØØl q
.
ØØq r
ToLowerInvariantØØr Ç
(ØØÇ É
)ØØÉ Ñ
==ØØÖ á
$strØØà ì
.ØØì î 
ToLowerInvariantØØî §
(ØØ§ •
)ØØ• ¶
||ØØß ©
valueØØ™ Ø
.ØØØ ∞ 
ToLowerInvariantØØ∞ ¿
(ØØ¿ ¡
)ØØ¡ ¬
==ØØ√ ≈
$strØØ∆ À
.ØØÀ Ã 
ToLowerInvariantØØÃ ‹
(ØØ‹ ›
)ØØ› ﬁ
)ØØﬁ ﬂ
;ØØﬂ ‡
}
∞∞ 	
public
≤≤ 
int
≤≤ 

updateJson
≤≤ 
(
≤≤ 
int
≤≤ !
CollectionJson_Id
≤≤" 3
)
≤≤3 4
{
≥≥ 	
string
¥¥ 
sql
¥¥ 
=
¥¥ 
$str
¥¥ M
+
¥¥N O
CollectionJson_Id
¥¥P a
+
¥¥b c
$str
¥¥d g
;
¥¥g h
string
µµ 
conexao
µµ 
=
µµ 
System
µµ #
.
µµ# $
Configuration
µµ$ 1
.
µµ1 2"
ConfigurationManager
µµ2 F
.
µµF G
ConnectionStrings
µµG X
[
µµX Y
$str
µµY j
]
µµj k
.
µµk l
ConnectionString
µµl |
;
µµ| }
try
∂∂ 
{
∑∑ 
using
∏∏ 
(
∏∏ 
SqlConnection
∏∏ $

connection
∏∏% /
=
∏∏0 1
new
∏∏2 5
SqlConnection
∏∏6 C
(
∏∏C D
conexao
∏∏D K
)
∏∏K L
)
∏∏L M
{
ππ 
using
∫∫ 
(
∫∫ 

SqlCommand
∫∫ %
command
∫∫& -
=
∫∫. /
new
∫∫0 3

SqlCommand
∫∫4 >
(
∫∫> ?
sql
∫∫? B
,
∫∫B C

connection
∫∫D N
)
∫∫N O
)
∫∫O P
{
ªª 

connection
ºº "
.
ºº" #
Open
ºº# '
(
ºº' (
)
ºº( )
;
ºº) *
var
ΩΩ 
i
ΩΩ 
=
ΩΩ 
Convert
ΩΩ  '
.
ΩΩ' (
ToInt32
ΩΩ( /
(
ΩΩ/ 0
command
ΩΩ0 7
.
ΩΩ7 8
ExecuteNonQuery
ΩΩ8 G
(
ΩΩG H
)
ΩΩH I
)
ΩΩI J
;
ΩΩJ K
if
ææ 
(
ææ 
i
ææ 
>
ææ 
$num
ææ  !
)
ææ! "
{
øø 
return
¿¿ "
i
¿¿# $
;
¿¿$ %
}
¡¡ 
else
¬¬ 
{
√√ 
return
ƒƒ "
$num
ƒƒ# $
;
ƒƒ$ %
}
≈≈ 
}
∆∆ 
if
«« 
(
«« 

connection
«« "
.
««" #
State
««# (
==
««) +
System
««, 2
.
««2 3
Data
««3 7
.
««7 8
ConnectionState
««8 G
.
««G H
Open
««H L
)
««L M

connection
««N X
.
««X Y
Close
««Y ^
(
««^ _
)
««_ `
;
««` a
}
»» 
}
…… 
catch
   
(
   
SqlException
   
ex
    "
)
  " #
{
ÀÀ 
int
ÃÃ 
	insertLog
ÃÃ 
=
ÃÃ 
insertLogJson
ÃÃ  -
(
ÃÃ- .
sql
ÃÃ. 1
,
ÃÃ1 2
ex
ÃÃ3 5
.
ÃÃ5 6
Message
ÃÃ6 =
,
ÃÃ= >
$str
ÃÃ? D
,
ÃÃD E
$str
ÃÃF K
,
ÃÃK L
$str
ÃÃM Y
)
ÃÃY Z
;
ÃÃZ [
throw
ÕÕ 
ex
ÕÕ 
;
ÕÕ 
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
ex
œœ 
)
œœ  
{
–– 
int
—— 
	insertLog
—— 
=
—— 
insertLogJson
——  -
(
——- .
sql
——. 1
,
——1 2
ex
——3 5
.
——5 6
Message
——6 =
,
——= >
$str
——? D
,
——D E
$str
——F K
,
——K L
$str
——M Y
)
——Y Z
;
——Z [
throw
““ 
ex
““ 
;
““ 
}
”” 
}
‘‘ 	
public
÷÷ 
int
÷÷ "
updateJsonDuplicated
÷÷ '
(
÷÷' (
int
÷÷( +
CollectionJson_Id
÷÷, =
)
÷÷= >
{
◊◊ 	
string
ÿÿ 
sql
ÿÿ 
=
ÿÿ 
$str
ÿÿ [
+
ÿÿ\ ]
CollectionJson_Id
ÿÿ^ o
+
ÿÿp q
$str
ÿÿr u
;
ÿÿu v
string
ŸŸ 
conexao
ŸŸ 
=
ŸŸ 
System
ŸŸ #
.
ŸŸ# $
Configuration
ŸŸ$ 1
.
ŸŸ1 2"
ConfigurationManager
ŸŸ2 F
.
ŸŸF G
ConnectionStrings
ŸŸG X
[
ŸŸX Y
$str
ŸŸY j
]
ŸŸj k
.
ŸŸk l
ConnectionString
ŸŸl |
;
ŸŸ| }
try
⁄⁄ 
{
€€ 
using
‹‹ 
(
‹‹ 
SqlConnection
‹‹ $

connection
‹‹% /
=
‹‹0 1
new
‹‹2 5
SqlConnection
‹‹6 C
(
‹‹C D
conexao
‹‹D K
)
‹‹K L
)
‹‹L M
{
›› 
using
ﬁﬁ 
(
ﬁﬁ 

SqlCommand
ﬁﬁ %
command
ﬁﬁ& -
=
ﬁﬁ. /
new
ﬁﬁ0 3

SqlCommand
ﬁﬁ4 >
(
ﬁﬁ> ?
sql
ﬁﬁ? B
,
ﬁﬁB C

connection
ﬁﬁD N
)
ﬁﬁN O
)
ﬁﬁO P
{
ﬂﬂ 

connection
‡‡ "
.
‡‡" #
Open
‡‡# '
(
‡‡' (
)
‡‡( )
;
‡‡) *
var
·· 
i
·· 
=
·· 
Convert
··  '
.
··' (
ToInt32
··( /
(
··/ 0
command
··0 7
.
··7 8
ExecuteNonQuery
··8 G
(
··G H
)
··H I
)
··I J
;
··J K
if
‚‚ 
(
‚‚ 
i
‚‚ 
>
‚‚ 
$num
‚‚  !
)
‚‚! "
{
„„ 
return
‰‰ "
i
‰‰# $
;
‰‰$ %
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
return
ËË "
$num
ËË# $
;
ËË$ %
}
ÈÈ 
}
ÍÍ 
if
ÎÎ 
(
ÎÎ 

connection
ÎÎ "
.
ÎÎ" #
State
ÎÎ# (
==
ÎÎ) +
System
ÎÎ, 2
.
ÎÎ2 3
Data
ÎÎ3 7
.
ÎÎ7 8
ConnectionState
ÎÎ8 G
.
ÎÎG H
Open
ÎÎH L
)
ÎÎL M

connection
ÎÎN X
.
ÎÎX Y
Close
ÎÎY ^
(
ÎÎ^ _
)
ÎÎ_ `
;
ÎÎ` a
}
ÏÏ 
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
SqlException
ÓÓ 
ex
ÓÓ  "
)
ÓÓ" #
{
ÔÔ 
int
 
	insertLog
 
=
 
insertLogJson
  -
(
- .
sql
. 1
,
1 2
ex
3 5
.
5 6
Message
6 =
,
= >
$str
? D
,
D E
$str
F K
,
K L
$str
M Y
)
Y Z
;
Z [
throw
ÒÒ 
ex
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
ex
ÛÛ 
)
ÛÛ  
{
ÙÙ 
int
ıı 
	insertLog
ıı 
=
ıı 
insertLogJson
ıı  -
(
ıı- .
sql
ıı. 1
,
ıı1 2
ex
ıı3 5
.
ıı5 6
Message
ıı6 =
,
ıı= >
$str
ıı? D
,
ııD E
$str
ııF K
,
ııK L
$str
ııM Y
)
ııY Z
;
ııZ [
throw
ˆˆ 
ex
ˆˆ 
;
ˆˆ 
}
˜˜ 
}
¯¯ 	
public
˙˙ 
int
˙˙ '
updateConsolidationLevel2
˙˙ ,
(
˙˙, -
int
˙˙- 0$
ConsolidationLevel2_Id
˙˙1 G
,
˙˙G H
string
˙˙I O

AlertLevel
˙˙P Z
,
˙˙Z [
string
˙˙\ b!
LastEvaluationAlert
˙˙c v
,
˙˙v w
string
˙˙x ~
LastLevel2Alert˙˙ é
,˙˙é è
SGQDBContext˙˙ê ú
.˙˙ú ù-
CollectionLevel2Consolidation˙˙ù ∫-
CollectionLevel2Consolidation˙˙ª ÿ
)˙˙ÿ Ÿ
{
˚˚ 	
if
˛˛ 
(
˛˛ !
LastEvaluationAlert
˛˛ #
==
˛˛$ &
$str
˛˛' -
)
˛˛- .
{
ˇˇ !
LastEvaluationAlert
Ä	Ä	 #
=
Ä	Ä	$ %
$str
Ä	Ä	& )
;
Ä	Ä	) *
}
Å	Å	 
if
É	É	 
(
É	É	 
LastLevel2Alert
É	É	 
==
É	É	  "
$str
É	É	# )
)
É	É	) *
{
Ñ	Ñ	 
LastLevel2Alert
Ö	Ö	 
=
Ö	Ö	  !
$str
Ö	Ö	" (
;
Ö	Ö	( )
}
Ü	Ü	 
int
à	à	 &
LastEvaluationAlertCheck
à	à	 (
=
à	à	) *
$num
à	à	+ ,
;
à	à	, -
if
ä	ä	 
(
ä	ä	 !
LastEvaluationAlert
ä	ä	 #
==
ä	ä	$ &
$str
ä	ä	' -
)
ä	ä	- .
{
ã	ã	 &
LastEvaluationAlertCheck
å	å	 (
=
å	å	) *
Convert
å	å	+ 2
.
å	å	2 3
ToInt32
å	å	3 :
(
å	å	: ;
$num
å	å	; <
)
å	å	< =
;
å	å	= >
}
ç	ç	 
else
é	é	 
{
è	è	 &
LastEvaluationAlertCheck
ê	ê	 (
=
ê	ê	) *
Convert
ê	ê	+ 2
.
ê	ê	2 3
ToInt32
ê	ê	3 :
(
ê	ê	: ;!
LastEvaluationAlert
ê	ê	; N
)
ê	ê	N O
;
ê	ê	O P
}
ë	ë	 
if
î	î	 
(
î	î	 +
CollectionLevel2Consolidation
î	î	 -
.
î	î	- .!
LastEvaluationAlert
î	î	. A
>
î	î	B C&
LastEvaluationAlertCheck
î	î	D \
)
î	î	\ ]
{
ï	ï	 !
LastEvaluationAlert
ñ	ñ	 #
=
ñ	ñ	$ %+
CollectionLevel2Consolidation
ñ	ñ	& C
.
ñ	ñ	C D!
LastEvaluationAlert
ñ	ñ	D W
.
ñ	ñ	W X
ToString
ñ	ñ	X `
(
ñ	ñ	` a
)
ñ	ñ	a b
;
ñ	ñ	b c
}
ó	ó	 
string
ô	ô	 
sql
ô	ô	 
=
ô	ô	 
$str
ô	ô	 E
+
ô	ô	F G

AlertLevel
ô	ô	H R
.
ô	ô	R S
ToString
ô	ô	S [
(
ô	ô	[ \
)
ô	ô	\ ]
.
ô	ô	] ^
Replace
ô	ô	^ e
(
ô	ô	e f
$str
ô	ô	f i
,
ô	ô	i j
$str
ô	ô	k n
)
ô	ô	n o
+
ô	ô	p q
$strô	ô	r Ñ
+ô	ô	Ö Ü-
CollectionLevel2Consolidationô	ô	á §
.ô	ô	§ •"
WeiEvaluationTotalô	ô	• ∑
.ô	ô	∑ ∏
ToStringô	ô	∏ ¿
(ô	ô	¿ ¡
)ô	ô	¡ ¬
.ô	ô	¬ √
Replaceô	ô	√  
(ô	ô	  À
$strô	ô	À Œ
,ô	ô	Œ œ
$strô	ô	– ”
)ô	ô	” ‘
+ô	ô	’ ÷
$strô	ô	◊ È
+ô	ô	Í Î-
CollectionLevel2Consolidationô	ô	Ï â
.ô	ô	â ä%
TotalLevel3Evaluationô	ô	ä ü
.ô	ô	ü †
ToStringô	ô	† ®
(ô	ô	® ©
)ô	ô	© ™
.ô	ô	™ ´
Replaceô	ô	´ ≤
(ô	ô	≤ ≥
$strô	ô	≥ ∂
,ô	ô	∂ ∑
$strô	ô	∏ ª
)ô	ô	ª º
+ô	ô	Ω æ
$strô	ô	ø –
+ô	ô	— “-
CollectionLevel2Consolidationô	ô	” 
.ô	ô	 Ò
DefectsTotalô	ô	Ò ˝
.ô	ô	˝ ˛
ToStringô	ô	˛ Ü
(ô	ô	Ü á
)ô	ô	á à
.ô	ô	à â
Replaceô	ô	â ê
(ô	ô	ê ë
$strô	ô	ë î
,ô	ô	î ï
$strô	ô	ñ ô
)ô	ô	ô ö
+ô	ô	õ ú
$strô	ô	ù ¨
+ô	ô	≠ Æ-
CollectionLevel2Consolidationô	ô	Ø Ã
.ô	ô	Ã Õ
WeiDefectsTotalô	ô	Õ ‹
.ô	ô	‹ ›
ToStringô	ô	› Â
(ô	ô	Â Ê
)ô	ô	Ê Á
.ô	ô	Á Ë
Replaceô	ô	Ë Ô
(ô	ô	Ô 
$strô	ô	 Û
,ô	ô	Û Ù
$strô	ô	ı ¯
)ô	ô	¯ ˘
+ô	ô	˙ ˚
$strô	ô	¸ ñ
+ô	ô	ó ò-
CollectionLevel2Consolidationô	ô	ô ∂
.ô	ô	∂ ∑%
TotalLevel3Evaluationô	ô	∑ Ã
.ô	ô	Ã Õ
ToStringô	ô	Õ ’
(ô	ô	’ ÷
)ô	ô	÷ ◊
.ô	ô	◊ ÿ
Replaceô	ô	ÿ ﬂ
(ô	ô	ﬂ ‡
$strô	ô	‡ „
,ô	ô	„ ‰
$strô	ô	Â Ë
)ô	ô	Ë È
+ô	ô	Í Î
$strô	ô	Ï á
+ô	ô	à â-
CollectionLevel2Consolidationô	ô	ä ß
.ô	ô	ß ®&
TotalLevel3WithDefectsô	ô	® æ
.ô	ô	æ ø
ToStringô	ô	ø «
(ô	ô	« »
)ô	ô	» …
.ô	ô	…  
Replaceô	ô	  —
(ô	ô	— “
$strô	ô	“ ’
,ô	ô	’ ÷
$strô	ô	◊ ⁄
)ô	ô	⁄ €
+ô	ô	‹ ›
$strô	ô	ﬁ ˜
+ô	ô	¯ ˘#
LastEvaluationAlertô	ô	˙ ç
.ô	ô	ç é
ToStringô	ô	é ñ
(ô	ô	ñ ó
)ô	ô	ó ò
.ô	ô	ò ô
Replaceô	ô	ô †
(ô	ô	† °
$strô	ô	° §
,ô	ô	§ •
$strô	ô	¶ ©
)ô	ô	© ™
+ô	ô	´ ¨
$strô	ô	≠ ¬
+ô	ô	√ ƒ
LastLevel2Alertô	ô	≈ ‘
.ô	ô	‘ ’
ToStringô	ô	’ ›
(ô	ô	› ﬁ
)ô	ô	ﬁ ﬂ
.ô	ô	ﬂ ‡
Replaceô	ô	‡ Á
(ô	ô	Á Ë
$strô	ô	Ë Î
,ô	ô	Î Ï
$strô	ô	Ì 
)ô	ô	 Ò
+ô	ô	Ú Û
$strô	ô	Ù â
+ô	ô	ä ã-
CollectionLevel2Consolidationô	ô	å ©
.ô	ô	© ™
EvaluatedResultô	ô	™ π
+ô	ô	∫ ª
$strô	ô	º –
+ô	ô	— “-
CollectionLevel2Consolidationô	ô	” 
.ô	ô	 Ò
DefectsResultô	ô	Ò ˛
+ô	ô	ˇ Ä
$strô	ô	Å è
+ô	ô	ê ë&
ConsolidationLevel2_Idô	ô	í ®
.ô	ô	® ©
ToStringô	ô	© ±
(ô	ô	± ≤
)ô	ô	≤ ≥
.ô	ô	≥ ¥
Replaceô	ô	¥ ª
(ô	ô	ª º
$strô	ô	º ø
,ô	ô	ø ¿
$strô	ô	¡ ƒ
)ô	ô	ƒ ≈
+ô	ô	∆ «
$strô	ô	» À
;ô	ô	À Ã
string
ö	ö	 
conexao
ö	ö	 
=
ö	ö	 
System
ö	ö	 #
.
ö	ö	# $
Configuration
ö	ö	$ 1
.
ö	ö	1 2"
ConfigurationManager
ö	ö	2 F
.
ö	ö	F G
ConnectionStrings
ö	ö	G X
[
ö	ö	X Y
$str
ö	ö	Y j
]
ö	ö	j k
.
ö	ö	k l
ConnectionString
ö	ö	l |
;
ö	ö	| }
try
õ	õ	 
{
ú	ú	 
using
ù	ù	 
(
ù	ù	 
SqlConnection
ù	ù	 $

connection
ù	ù	% /
=
ù	ù	0 1
new
ù	ù	2 5
SqlConnection
ù	ù	6 C
(
ù	ù	C D
conexao
ù	ù	D K
)
ù	ù	K L
)
ù	ù	L M
{
û	û	 
using
ü	ü	 
(
ü	ü	 

SqlCommand
ü	ü	 %
command
ü	ü	& -
=
ü	ü	. /
new
ü	ü	0 3

SqlCommand
ü	ü	4 >
(
ü	ü	> ?
sql
ü	ü	? B
,
ü	ü	B C

connection
ü	ü	D N
)
ü	ü	N O
)
ü	ü	O P
{
†	†	 

connection
°	°	 "
.
°	°	" #
Open
°	°	# '
(
°	°	' (
)
°	°	( )
;
°	°	) *
var
¢	¢	 
i
¢	¢	 
=
¢	¢	 
Convert
¢	¢	  '
.
¢	¢	' (
ToInt32
¢	¢	( /
(
¢	¢	/ 0
command
¢	¢	0 7
.
¢	¢	7 8
ExecuteNonQuery
¢	¢	8 G
(
¢	¢	G H
)
¢	¢	H I
)
¢	¢	I J
;
¢	¢	J K
if
£	£	 
(
£	£	 
i
£	£	 
>
£	£	 
$num
£	£	  !
)
£	£	! "
{
§	§	 
return
•	•	 "
i
•	•	# $
;
•	•	$ %
}
¶	¶	 
else
ß	ß	 
{
®	®	 
return
©	©	 "
$num
©	©	# $
;
©	©	$ %
}
™	™	 
}
´	´	 
if
¨	¨	 
(
¨	¨	 

connection
¨	¨	 "
.
¨	¨	" #
State
¨	¨	# (
==
¨	¨	) +
System
¨	¨	, 2
.
¨	¨	2 3
Data
¨	¨	3 7
.
¨	¨	7 8
ConnectionState
¨	¨	8 G
.
¨	¨	G H
Open
¨	¨	H L
)
¨	¨	L M

connection
¨	¨	N X
.
¨	¨	X Y
Close
¨	¨	Y ^
(
¨	¨	^ _
)
¨	¨	_ `
;
¨	¨	` a
}
≠	≠	 
}
Æ	Æ	 
catch
Ø	Ø	 
(
Ø	Ø	 
SqlException
Ø	Ø	 
ex
Ø	Ø	  "
)
Ø	Ø	" #
{
∞	∞	 
int
±	±	 
	insertLog
±	±	 
=
±	±	 
insertLogJson
±	±	  -
(
±	±	- .
sql
±	±	. 1
,
±	±	1 2
ex
±	±	3 5
.
±	±	5 6
Message
±	±	6 =
,
±	±	= >
$str
±	±	? D
,
±	±	D E
$str
±	±	F K
,
±	±	K L
$str
±	±	M h
)
±	±	h i
;
±	±	i j
return
≤	≤	 
$num
≤	≤	 
;
≤	≤	 
}
≥	≥	 
catch
¥	¥	 
(
¥	¥	 
	Exception
¥	¥	 
ex
¥	¥	 
)
¥	¥	  
{
µ	µ	 
int
∂	∂	 
	insertLog
∂	∂	 
=
∂	∂	 
insertLogJson
∂	∂	  -
(
∂	∂	- .
sql
∂	∂	. 1
,
∂	∂	1 2
ex
∂	∂	3 5
.
∂	∂	5 6
Message
∂	∂	6 =
,
∂	∂	= >
$str
∂	∂	? D
,
∂	∂	D E
$str
∂	∂	F K
,
∂	∂	K L
$str
∂	∂	M h
)
∂	∂	h i
;
∂	∂	i j
return
∑	∑	 
$num
∑	∑	 
;
∑	∑	 
}
∏	∏	 
}
π	π	 	
public
ª	ª	 
int
ª	ª	 '
updateConsolidationLevel1
ª	ª	 ,
(
ª	ª	, -
int
ª	ª	- 0$
ConsolidationLevel1_Id
ª	ª	1 G
,
ª	ª	G H
string
ª	ª	I O

AlertLevel
ª	ª	P Z
,
ª	ª	Z [
string
ª	ª	\ b!
LastEvaluationAlert
ª	ª	c v
,
ª	ª	v w
string
ª	ª	x ~
LastLevel2Alertª	ª	 é
,ª	ª	é è
SGQDBContextª	ª	ê ú
.ª	ª	ú ù7
'ConsolidationLevel1XConsolidationLevel2ª	ª	ù ƒ
CL1XCL2ª	ª	≈ Ã
)ª	ª	Ã Õ
{
º	º	 	
if
æ	æ	 
(
æ	æ	 !
LastEvaluationAlert
æ	æ	 #
==
æ	æ	$ &
$str
æ	æ	' -
)
æ	æ	- .
{
ø	ø	 !
LastEvaluationAlert
¿	¿	 #
=
¿	¿	$ %
$str
¿	¿	& )
;
¿	¿	) *
}
¡	¡	 
if
√	√	 
(
√	√	 
LastLevel2Alert
√	√	 
==
√	√	  "
$str
√	√	# )
)
√	√	) *
{
ƒ	ƒ	 
LastLevel2Alert
≈	≈	 
=
≈	≈	  !
$str
≈	≈	" (
;
≈	≈	( )
}
∆	∆	 
int
»	»	 &
LastEvaluationAlertCheck
»	»	 (
=
»	»	) *
Convert
»	»	+ 2
.
»	»	2 3
ToInt32
»	»	3 :
(
»	»	: ;!
LastEvaluationAlert
»	»	; N
)
»	»	N O
;
»	»	O P
if
…	…	 
(
…	…	 
CL1XCL2
…	…	 
.
…	…	 !
LastEvaluationAlert
…	…	 +
>
…	…	, -&
LastEvaluationAlertCheck
…	…	. F
)
…	…	F G
{
 	 	 !
LastEvaluationAlert
À	À	 #
=
À	À	$ %
CL1XCL2
À	À	& -
.
À	À	- .!
LastEvaluationAlert
À	À	. A
.
À	À	A B
ToString
À	À	B J
(
À	À	J K
)
À	À	K L
;
À	À	L M
}
Ã	Ã	 
string
Œ	Œ	 
sql
Œ	Œ	 
=
Œ	Œ	 
$str
Œ	Œ	 E
+
Œ	Œ	F G

AlertLevel
Œ	Œ	H R
.
Œ	Œ	R S
ToString
Œ	Œ	S [
(
Œ	Œ	[ \
)
Œ	Œ	\ ]
.
Œ	Œ	] ^
Replace
Œ	Œ	^ e
(
Œ	Œ	e f
$str
Œ	Œ	f i
,
Œ	Œ	i j
$str
Œ	Œ	k n
)
Œ	Œ	n o
+
Œ	Œ	p q
$strŒ	Œ	r Å
+Œ	Œ	Ç É
CL1XCL2Œ	Œ	Ñ ã
.Œ	Œ	ã å
EvaluateTotalŒ	Œ	å ô
.Œ	Œ	ô ö
ToStringŒ	Œ	ö ¢
(Œ	Œ	¢ £
)Œ	Œ	£ §
.Œ	Œ	§ •
ReplaceŒ	Œ	• ¨
(Œ	Œ	¨ ≠
$strŒ	Œ	≠ ∞
,Œ	Œ	∞ ±
$strŒ	Œ	≤ µ
)Œ	Œ	µ ∂
+Œ	Œ	∑ ∏
$strŒ	Œ	π À
+Œ	Œ	Ã Õ
CL1XCL2Œ	Œ	Œ ’
.Œ	Œ	’ ÷
WeiEvaluationŒ	Œ	÷ „
.Œ	Œ	„ ‰
ToStringŒ	Œ	‰ Ï
(Œ	Œ	Ï Ì
)Œ	Œ	Ì Ó
.Œ	Œ	Ó Ô
ReplaceŒ	Œ	Ô ˆ
(Œ	Œ	ˆ ˜
$strŒ	Œ	˜ ˙
,Œ	Œ	˙ ˚
$strŒ	Œ	¸ ˇ
)Œ	Œ	ˇ Ä
+Œ	Œ	Å Ç
$strŒ	Œ	É ï
+Œ	Œ	ñ ó
CL1XCL2Œ	Œ	ò ü
.Œ	Œ	ü †
EvaluateTotalŒ	Œ	† ≠
.Œ	Œ	≠ Æ
ToStringŒ	Œ	Æ ∂
(Œ	Œ	∂ ∑
)Œ	Œ	∑ ∏
.Œ	Œ	∏ π
ReplaceŒ	Œ	π ¿
(Œ	Œ	¿ ¡
$strŒ	Œ	¡ ƒ
,Œ	Œ	ƒ ≈
$strŒ	Œ	∆ …
)Œ	Œ	…  
+Œ	Œ	À Ã
$strŒ	Œ	Õ ﬁ
+Œ	Œ	ﬂ ‡
CL1XCL2Œ	Œ	· Ë
.Œ	Œ	Ë È
DefectsTotalŒ	Œ	È ı
.Œ	Œ	ı ˆ
ToStringŒ	Œ	ˆ ˛
(Œ	Œ	˛ ˇ
)Œ	Œ	ˇ Ä
.Œ	Œ	Ä Å
ReplaceŒ	Œ	Å à
(Œ	Œ	à â
$strŒ	Œ	â å
,Œ	Œ	å ç
$strŒ	Œ	é ë
)Œ	Œ	ë í
+Œ	Œ	ì î
$strŒ	Œ	ï §
+Œ	Œ	• ¶
CL1XCL2Œ	Œ	ß Æ
.Œ	Œ	Æ Ø

WeiDefectsŒ	Œ	Ø π
.Œ	Œ	π ∫
ToStringŒ	Œ	∫ ¬
(Œ	Œ	¬ √
)Œ	Œ	√ ƒ
.Œ	Œ	ƒ ≈
ReplaceŒ	Œ	≈ Ã
(Œ	Œ	Ã Õ
$strŒ	Œ	Õ –
,Œ	Œ	– —
$strŒ	Œ	“ ’
)Œ	Œ	’ ÷
+Œ	Œ	◊ ÿ
$strŒ	Œ	Ÿ Û
+Œ	Œ	Ù ı
CL1XCL2Œ	Œ	ˆ ˝
.Œ	Œ	˝ ˛%
TotalLevel3EvaluationŒ	Œ	˛ ì
.Œ	Œ	ì î
ToStringŒ	Œ	î ú
(Œ	Œ	ú ù
)Œ	Œ	ù û
.Œ	Œ	û ü
ReplaceŒ	Œ	ü ¶
(Œ	Œ	¶ ß
$strŒ	Œ	ß ™
,Œ	Œ	™ ´
$strŒ	Œ	¨ Ø
)Œ	Œ	Ø ∞
+Œ	Œ	± ≤
$strŒ	Œ	≥ Œ
+Œ	Œ	œ –
CL1XCL2Œ	Œ	— ÿ
.Œ	Œ	ÿ Ÿ&
TotalLevel3WithDefectsŒ	Œ	Ÿ Ô
.Œ	Œ	Ô 
ToStringŒ	Œ	 ¯
(Œ	Œ	¯ ˘
)Œ	Œ	˘ ˙
.Œ	Œ	˙ ˚
ReplaceŒ	Œ	˚ Ç
(Œ	Œ	Ç É
$strŒ	Œ	É Ü
,Œ	Œ	Ü á
$strŒ	Œ	à ã
)Œ	Œ	ã å
+Œ	Œ	ç é
$strŒ	Œ	è ®
+Œ	Œ	© ™#
LastEvaluationAlertŒ	Œ	´ æ
.Œ	Œ	æ ø
ToStringŒ	Œ	ø «
(Œ	Œ	« »
)Œ	Œ	» …
.Œ	Œ	…  
ReplaceŒ	Œ	  —
(Œ	Œ	— “
$strŒ	Œ	“ ’
,Œ	Œ	’ ÷
$strŒ	Œ	◊ ⁄
)Œ	Œ	⁄ €
+Œ	Œ	‹ ›
$strŒ	Œ	ﬁ Û
+Œ	Œ	Ù ı
LastLevel2AlertŒ	Œ	ˆ Ö
.Œ	Œ	Ö Ü
ToStringŒ	Œ	Ü é
(Œ	Œ	é è
)Œ	Œ	è ê
.Œ	Œ	ê ë
ReplaceŒ	Œ	ë ò
(Œ	Œ	ò ô
$strŒ	Œ	ô ú
,Œ	Œ	ú ù
$strŒ	Œ	û °
)Œ	Œ	° ¢
+Œ	Œ	£ §
$strŒ	Œ	• ∫
+Œ	Œ	ª º
CL1XCL2Œ	Œ	Ω ƒ
.Œ	Œ	ƒ ≈
EvaluatedResultŒ	Œ	≈ ‘
.Œ	Œ	‘ ’
ToStringŒ	Œ	’ ›
(Œ	Œ	› ﬁ
)Œ	Œ	ﬁ ﬂ
.Œ	Œ	ﬂ ‡
ReplaceŒ	Œ	‡ Á
(Œ	Œ	Á Ë
$strŒ	Œ	Ë Î
,Œ	Œ	Î Ï
$strŒ	Œ	Ì 
)Œ	Œ	 Ò
+Œ	Œ	Ú Û
$strŒ	Œ	Ù à
+Œ	Œ	â ä
CL1XCL2Œ	Œ	ã í
.Œ	Œ	í ì
DefectsResultŒ	Œ	ì †
.Œ	Œ	† °
ToStringŒ	Œ	° ©
(Œ	Œ	© ™
)Œ	Œ	™ ´
.Œ	Œ	´ ¨
ReplaceŒ	Œ	¨ ≥
(Œ	Œ	≥ ¥
$strŒ	Œ	¥ ∑
,Œ	Œ	∑ ∏
$strŒ	Œ	π º
)Œ	Œ	º Ω
+Œ	Œ	æ ø
$strŒ	Œ	¿ Œ
+Œ	Œ	œ –&
ConsolidationLevel1_IdŒ	Œ	— Á
.Œ	Œ	Á Ë
ToStringŒ	Œ	Ë 
(Œ	Œ	 Ò
)Œ	Œ	Ò Ú
.Œ	Œ	Ú Û
ReplaceŒ	Œ	Û ˙
(Œ	Œ	˙ ˚
$strŒ	Œ	˚ ˛
,Œ	Œ	˛ ˇ
$strŒ	Œ	Ä É
)Œ	Œ	É Ñ
+Œ	Œ	Ö Ü
$strŒ	Œ	á ä
;Œ	Œ	ä ã
string
œ	œ	 
conexao
œ	œ	 
=
œ	œ	 
System
œ	œ	 #
.
œ	œ	# $
Configuration
œ	œ	$ 1
.
œ	œ	1 2"
ConfigurationManager
œ	œ	2 F
.
œ	œ	F G
ConnectionStrings
œ	œ	G X
[
œ	œ	X Y
$str
œ	œ	Y j
]
œ	œ	j k
.
œ	œ	k l
ConnectionString
œ	œ	l |
;
œ	œ	| }
try
–	–	 
{
—	—	 
using
“	“	 
(
“	“	 
SqlConnection
“	“	 $

connection
“	“	% /
=
“	“	0 1
new
“	“	2 5
SqlConnection
“	“	6 C
(
“	“	C D
conexao
“	“	D K
)
“	“	K L
)
“	“	L M
{
”	”	 
using
‘	‘	 
(
‘	‘	 

SqlCommand
‘	‘	 %
command
‘	‘	& -
=
‘	‘	. /
new
‘	‘	0 3

SqlCommand
‘	‘	4 >
(
‘	‘	> ?
sql
‘	‘	? B
,
‘	‘	B C

connection
‘	‘	D N
)
‘	‘	N O
)
‘	‘	O P
{
’	’	 

connection
÷	÷	 "
.
÷	÷	" #
Open
÷	÷	# '
(
÷	÷	' (
)
÷	÷	( )
;
÷	÷	) *
var
◊	◊	 
i
◊	◊	 
=
◊	◊	 
Convert
◊	◊	  '
.
◊	◊	' (
ToInt32
◊	◊	( /
(
◊	◊	/ 0
command
◊	◊	0 7
.
◊	◊	7 8
ExecuteNonQuery
◊	◊	8 G
(
◊	◊	G H
)
◊	◊	H I
)
◊	◊	I J
;
◊	◊	J K
if
ÿ	ÿ	 
(
ÿ	ÿ	 
i
ÿ	ÿ	 
>
ÿ	ÿ	 
$num
ÿ	ÿ	  !
)
ÿ	ÿ	! "
{
Ÿ	Ÿ	 
return
⁄	⁄	 "
i
⁄	⁄	# $
;
⁄	⁄	$ %
}
€	€	 
else
‹	‹	 
{
›	›	 
return
ﬁ	ﬁ	 "
$num
ﬁ	ﬁ	# $
;
ﬁ	ﬁ	$ %
}
ﬂ	ﬂ	 
}
‡	‡	 
if
·	·	 
(
·	·	 

connection
·	·	 "
.
·	·	" #
State
·	·	# (
==
·	·	) +
System
·	·	, 2
.
·	·	2 3
Data
·	·	3 7
.
·	·	7 8
ConnectionState
·	·	8 G
.
·	·	G H
Open
·	·	H L
)
·	·	L M

connection
·	·	N X
.
·	·	X Y
Close
·	·	Y ^
(
·	·	^ _
)
·	·	_ `
;
·	·	` a
}
‚	‚	 
}
„	„	 
catch
‰	‰	 
(
‰	‰	 
SqlException
‰	‰	 
ex
‰	‰	  "
)
‰	‰	" #
{
Â	Â	 
int
Ê	Ê	 
	insertLog
Ê	Ê	 
=
Ê	Ê	 
insertLogJson
Ê	Ê	  -
(
Ê	Ê	- .
sql
Ê	Ê	. 1
,
Ê	Ê	1 2
ex
Ê	Ê	3 5
.
Ê	Ê	5 6
Message
Ê	Ê	6 =
,
Ê	Ê	= >
$str
Ê	Ê	? D
,
Ê	Ê	D E
$str
Ê	Ê	F K
,
Ê	Ê	K L
$str
Ê	Ê	M h
)
Ê	Ê	h i
;
Ê	Ê	i j
throw
Á	Á	 
ex
Á	Á	 
;
Á	Á	 
}
Ë	Ë	 
catch
È	È	 
(
È	È	 
	Exception
È	È	 
ex
È	È	 
)
È	È	  
{
Í	Í	 
int
Î	Î	 
	insertLog
Î	Î	 
=
Î	Î	 
insertLogJson
Î	Î	  -
(
Î	Î	- .
sql
Î	Î	. 1
,
Î	Î	1 2
ex
Î	Î	3 5
.
Î	Î	5 6
Message
Î	Î	6 =
,
Î	Î	= >
$str
Î	Î	? D
,
Î	Î	D E
$str
Î	Î	F K
,
Î	Î	K L
$str
Î	Î	M h
)
Î	Î	h i
;
Î	Î	i j
throw
Ï	Ï	 
ex
Ï	Ï	 
;
Ï	Ï	 
}
Ì	Ì	 
}
Ó	Ó	 	
public
Ô	Ô	 
int
Ô	Ô	 B
4updateCorrectiveAction_CollectionLevel2_By_ParLevel1
Ô	Ô	 G
(
Ô	Ô	G H
string
Ô	Ô	H N
ParLevel1_Id
Ô	Ô	O [
,
Ô	Ô	[ \
string
Ô	Ô	] c
ParCompany_Id
Ô	Ô	d q
,
Ô	Ô	q r
string
Ô	Ô	s y

dataInicioÔ	Ô	z Ñ
,Ô	Ô	Ñ Ö
stringÔ	Ô	Ü å
dataFimÔ	Ô	ç î
,Ô	Ô	î ï
stringÔ	Ô	ñ ú
reauditnumberÔ	Ô	ù ™
)Ô	Ô	™ ´
{
		 	
string
Ú	Ú	 
sql
Ú	Ú	 
=
Ú	Ú	 
$str
Ú	Ú	 b
+
Ú	Ú	c d
ParLevel1_Id
Ú	Ú	e q
+
Ú	Ú	r s
$strÚ	Ú	t Ñ
+Ú	Ú	Ö Ü
ParCompany_IdÚ	Ú	á î
+Ú	Ú	ï ñ
$str
Û	Û	 3
+
Û	Û	4 5

dataInicio
Û	Û	6 @
+
Û	Û	A B
$str
Û	Û	C U
+
Û	Û	V W
dataFim
Û	Û	X _
+
Û	Û	` a
$strÛ	Û	b ù
+Û	Û	û ü
reauditnumberÛ	Û	† ≠
+Û	Û	Æ Ø
$strÛ	Û	∞ ≥
;Û	Û	≥ ¥
string
Ù	Ù	 
conexao
Ù	Ù	 
=
Ù	Ù	 
System
Ù	Ù	 #
.
Ù	Ù	# $
Configuration
Ù	Ù	$ 1
.
Ù	Ù	1 2"
ConfigurationManager
Ù	Ù	2 F
.
Ù	Ù	F G
ConnectionStrings
Ù	Ù	G X
[
Ù	Ù	X Y
$str
Ù	Ù	Y j
]
Ù	Ù	j k
.
Ù	Ù	k l
ConnectionString
Ù	Ù	l |
;
Ù	Ù	| }
try
ı	ı	 
{
ˆ	ˆ	 
using
˜	˜	 
(
˜	˜	 
SqlConnection
˜	˜	 $

connection
˜	˜	% /
=
˜	˜	0 1
new
˜	˜	2 5
SqlConnection
˜	˜	6 C
(
˜	˜	C D
conexao
˜	˜	D K
)
˜	˜	K L
)
˜	˜	L M
{
¯	¯	 
using
˘	˘	 
(
˘	˘	 

SqlCommand
˘	˘	 %
command
˘	˘	& -
=
˘	˘	. /
new
˘	˘	0 3

SqlCommand
˘	˘	4 >
(
˘	˘	> ?
sql
˘	˘	? B
,
˘	˘	B C

connection
˘	˘	D N
)
˘	˘	N O
)
˘	˘	O P
{
˙	˙	 

connection
˚	˚	 "
.
˚	˚	" #
Open
˚	˚	# '
(
˚	˚	' (
)
˚	˚	( )
;
˚	˚	) *
var
¸	¸	 
i
¸	¸	 
=
¸	¸	 
Convert
¸	¸	  '
.
¸	¸	' (
ToInt32
¸	¸	( /
(
¸	¸	/ 0
command
¸	¸	0 7
.
¸	¸	7 8
ExecuteNonQuery
¸	¸	8 G
(
¸	¸	G H
)
¸	¸	H I
)
¸	¸	I J
;
¸	¸	J K
if
˝	˝	 
(
˝	˝	 
i
˝	˝	 
>
˝	˝	 
$num
˝	˝	  !
)
˝	˝	! "
{
˛	˛	 
return
ˇ	ˇ	 "
i
ˇ	ˇ	# $
;
ˇ	ˇ	$ %
}
Ä
Ä
 
else
Å
Å
 
{
Ç
Ç
 
return
É
É
 "
$num
É
É
# $
;
É
É
$ %
}
Ñ
Ñ
 
}
Ö
Ö
 
if
Ü
Ü
 
(
Ü
Ü
 

connection
Ü
Ü
 "
.
Ü
Ü
" #
State
Ü
Ü
# (
==
Ü
Ü
) +
System
Ü
Ü
, 2
.
Ü
Ü
2 3
Data
Ü
Ü
3 7
.
Ü
Ü
7 8
ConnectionState
Ü
Ü
8 G
.
Ü
Ü
G H
Open
Ü
Ü
H L
)
Ü
Ü
L M

connection
Ü
Ü
N X
.
Ü
Ü
X Y
Close
Ü
Ü
Y ^
(
Ü
Ü
^ _
)
Ü
Ü
_ `
;
Ü
Ü
` a
}
á
á
 
}
à
à
 
catch
â
â
 
(
â
â
 
SqlException
â
â
 
ex
â
â
  "
)
â
â
" #
{
ä
ä
 
int
ã
ã
 
	insertLog
ã
ã
 
=
ã
ã
 
insertLogJson
ã
ã
  -
(
ã
ã
- .
sql
ã
ã
. 1
,
ã
ã
1 2
ex
ã
ã
3 5
.
ã
ã
5 6
Message
ã
ã
6 =
,
ã
ã
= >
$str
ã
ã
? D
,
ã
ã
D E
$str
ã
ã
F K
,
ã
ã
K L
$strã
ã
M É
)ã
ã
É Ñ
;ã
ã
Ñ Ö
return
å
å
 
$num
å
å
 
;
å
å
 
}
ç
ç
 
catch
é
é
 
(
é
é
 
	Exception
é
é
 
ex
é
é
 
)
é
é
  
{
è
è
 
int
ê
ê
 
	insertLog
ê
ê
 
=
ê
ê
 
insertLogJson
ê
ê
  -
(
ê
ê
- .
sql
ê
ê
. 1
,
ê
ê
1 2
ex
ê
ê
3 5
.
ê
ê
5 6
Message
ê
ê
6 =
,
ê
ê
= >
$str
ê
ê
? D
,
ê
ê
D E
$str
ê
ê
F K
,
ê
ê
K L
$strê
ê
M É
)ê
ê
É Ñ
;ê
ê
Ñ Ö
return
ë
ë
 
$num
ë
ë
 
;
ë
ë
 
}
í
í
 
}
ì
ì
 	
public
ï
ï
 
int
ï
ï
 2
$updateLevel02CorrectiveActionReaudit
ï
ï
 7
(
ï
ï
7 8
string
ï
ï
8 >
id
ï
ï
? A
,
ï
ï
A B
string
ï
ï
C I
correctiveAction
ï
ï
J Z
,
ï
ï
Z [
string
ï
ï
\ b
reaudit
ï
ï
c j
)
ï
ï
j k
{
ñ
ñ
 	
string
ó
ó
 
sql
ó
ó
 
=
ó
ó
 
$str
ó
ó
 N
+
ó
ó
O P
correctiveAction
ó
ó
Q a
+
ó
ó
b c
$str
ó
ó
d v
+
ó
ó
w x
reauditó
ó
y Ä
+ó
ó
Å Ç
$stró
ó
É ë
+ó
ó
í ì
idó
ó
î ñ
+ó
ó
ó ò
$stró
ó
ô ú
;ó
ó
ú ù
string
ò
ò
 
conexao
ò
ò
 
=
ò
ò
 
System
ò
ò
 #
.
ò
ò
# $
Configuration
ò
ò
$ 1
.
ò
ò
1 2"
ConfigurationManager
ò
ò
2 F
.
ò
ò
F G
ConnectionStrings
ò
ò
G X
[
ò
ò
X Y
$str
ò
ò
Y j
]
ò
ò
j k
.
ò
ò
k l
ConnectionString
ò
ò
l |
;
ò
ò
| }
try
ô
ô
 
{
ö
ö
 
using
õ
õ
 
(
õ
õ
 
SqlConnection
õ
õ
 $

connection
õ
õ
% /
=
õ
õ
0 1
new
õ
õ
2 5
SqlConnection
õ
õ
6 C
(
õ
õ
C D
conexao
õ
õ
D K
)
õ
õ
K L
)
õ
õ
L M
{
ú
ú
 
using
ù
ù
 
(
ù
ù
 

SqlCommand
ù
ù
 %
command
ù
ù
& -
=
ù
ù
. /
new
ù
ù
0 3

SqlCommand
ù
ù
4 >
(
ù
ù
> ?
sql
ù
ù
? B
,
ù
ù
B C

connection
ù
ù
D N
)
ù
ù
N O
)
ù
ù
O P
{
û
û
 

connection
ü
ü
 "
.
ü
ü
" #
Open
ü
ü
# '
(
ü
ü
' (
)
ü
ü
( )
;
ü
ü
) *
var
†
†
 
i
†
†
 
=
†
†
 
Convert
†
†
  '
.
†
†
' (
ToInt32
†
†
( /
(
†
†
/ 0
command
†
†
0 7
.
†
†
7 8
ExecuteNonQuery
†
†
8 G
(
†
†
G H
)
†
†
H I
)
†
†
I J
;
†
†
J K
if
°
°
 
(
°
°
 
i
°
°
 
>
°
°
 
$num
°
°
  !
)
°
°
! "
{
¢
¢
 
return
£
£
 "
i
£
£
# $
;
£
£
$ %
}
§
§
 
else
•
•
 
{
¶
¶
 
return
ß
ß
 "
$num
ß
ß
# $
;
ß
ß
$ %
}
®
®
 
}
©
©
 
if
™
™
 
(
™
™
 

connection
™
™
 "
.
™
™
" #
State
™
™
# (
==
™
™
) +
System
™
™
, 2
.
™
™
2 3
Data
™
™
3 7
.
™
™
7 8
ConnectionState
™
™
8 G
.
™
™
G H
Open
™
™
H L
)
™
™
L M

connection
™
™
N X
.
™
™
X Y
Close
™
™
Y ^
(
™
™
^ _
)
™
™
_ `
;
™
™
` a
}
´
´
 
}
¨
¨
 
catch
≠
≠
 
(
≠
≠
 
SqlException
≠
≠
 
ex
≠
≠
  "
)
≠
≠
" #
{
Æ
Æ
 
int
Ø
Ø
 
	insertLog
Ø
Ø
 
=
Ø
Ø
 
insertLogJson
Ø
Ø
  -
(
Ø
Ø
- .
correctiveAction
Ø
Ø
. >
,
Ø
Ø
> ?
ex
Ø
Ø
@ B
.
Ø
Ø
B C
Message
Ø
Ø
C J
,
Ø
Ø
J K
$str
Ø
Ø
L Q
,
Ø
Ø
Q R
$str
Ø
Ø
S X
,
Ø
Ø
X Y
$strØ
Ø
Z Ä
)Ø
Ø
Ä Å
;Ø
Ø
Å Ç
return
∞
∞
 
$num
∞
∞
 
;
∞
∞
 
}
±
±
 
catch
≤
≤
 
(
≤
≤
 
	Exception
≤
≤
 
ex
≤
≤
 
)
≤
≤
  
{
≥
≥
 
int
¥
¥
 
	insertLog
¥
¥
 
=
¥
¥
 
insertLogJson
¥
¥
  -
(
¥
¥
- .
correctiveAction
¥
¥
. >
,
¥
¥
> ?
ex
¥
¥
@ B
.
¥
¥
B C
Message
¥
¥
C J
,
¥
¥
J K
$str
¥
¥
L Q
,
¥
¥
Q R
$str
¥
¥
S X
,
¥
¥
X Y
$str¥
¥
Z Ä
)¥
¥
Ä Å
;¥
¥
Å Ç
return
µ
µ
 
$num
µ
µ
 
;
µ
µ
 
}
∂
∂
 
}
∑
∑
 	
public
ƒ
ƒ
 
SGQDBContext
ƒ
ƒ
 
.
ƒ
ƒ
 !
ConsolidationLevel1
ƒ
ƒ
 /'
InsertConsolidationLevel1
ƒ
ƒ
0 I
(
ƒ
ƒ
I J
int
ƒ
ƒ
J M
ParCompany_Id
ƒ
ƒ
N [
,
ƒ
ƒ
[ \
int
ƒ
ƒ
] `
ParLevel1_Id
ƒ
ƒ
a m
,
ƒ
ƒ
m n
DateTime
ƒ
ƒ
o w
collectionDateƒ
ƒ
x Ü
,ƒ
ƒ
Ü á
intƒ
ƒ
à ã
Shiftƒ
ƒ
å ë
,ƒ
ƒ
ë í
intƒ
ƒ
ì ñ
Periodƒ
ƒ
ó ù
,ƒ
ƒ
ù û
stringƒ
ƒ
ü •
departmentIdƒ
ƒ
¶ ≤
=ƒ
ƒ
≥ ¥
$strƒ
ƒ
µ ∏
)ƒ
ƒ
∏ π
{
≈
≈
 	
var
∆
∆
 #
ConsolidationLevel1DB
∆
∆
 %
=
∆
∆
& '
new
∆
∆
( +
SGQDBContext
∆
∆
, 8
.
∆
∆
8 9!
ConsolidationLevel1
∆
∆
9 L
(
∆
∆
L M
db
∆
∆
M O
)
∆
∆
O P
;
∆
∆
P Q
string
œ
œ
 
sql
œ
œ
 
=
œ
œ
 
$strœ
œ
 ö
+œ
œ
õ ú
$str
–
–
 "
+
–
–
# $
$str
—
—
 
+
—
—
 
ParCompany_Id
—
—
  -
+
—
—
. /
$str
—
—
0 5
+
—
—
6 7
departmentId
—
—
8 D
+
—
—
E F
$str
—
—
G L
+
—
—
M N
ParLevel1_Id
—
—
O [
+
—
—
\ ]
$str—
—
^ Ç
+—
—
É Ñ
collectionDate—
—
Ö ì
.—
—
ì î
ToString—
—
î ú
(—
—
ú ù
$str—
—
ù ©
)—
—
© ™
+—
—
´ ¨
$str—
—
≠ ±
+—
—
≤ ≥
$str
“
“
 
+
“
“
 
Shift
“
“
  %
+
“
“
& '
$str
“
“
( +
+
“
“
, -
Period
“
“
. 4
+
“
“
5 6
$str
“
“
7 :
+
“
“
; <
$str
”
”
 :
;
”
”
: ;
string
’
’
 
conexao
’
’
 
=
’
’
 
System
’
’
 #
.
’
’
# $
Configuration
’
’
$ 1
.
’
’
1 2"
ConfigurationManager
’
’
2 F
.
’
’
F G
ConnectionStrings
’
’
G X
[
’
’
X Y
$str
’
’
Y j
]
’
’
j k
.
’
’
k l
ConnectionString
’
’
l |
;
’
’
| }
try
÷
÷
 
{
◊
◊
 
using
ÿ
ÿ
 
(
ÿ
ÿ
 
SqlConnection
ÿ
ÿ
 $

connection
ÿ
ÿ
% /
=
ÿ
ÿ
0 1
new
ÿ
ÿ
2 5
SqlConnection
ÿ
ÿ
6 C
(
ÿ
ÿ
C D
conexao
ÿ
ÿ
D K
)
ÿ
ÿ
K L
)
ÿ
ÿ
L M
{
Ÿ
Ÿ
 

connection
⁄
⁄
 
.
⁄
⁄
 
Open
⁄
⁄
 #
(
⁄
⁄
# $
)
⁄
⁄
$ %
;
⁄
⁄
% &
using
€
€
 
(
€
€
 

SqlCommand
€
€
 %
command
€
€
& -
=
€
€
. /
new
€
€
0 3

SqlCommand
€
€
4 >
(
€
€
> ?
sql
€
€
? B
,
€
€
B C

connection
€
€
D N
)
€
€
N O
)
€
€
O P
{
‹
‹
 
var
›
›
 
i
›
›
 
=
›
›
 
Convert
›
›
  '
.
›
›
' (
ToInt32
›
›
( /
(
›
›
/ 0
command
›
›
0 7
.
›
›
7 8
ExecuteScalar
›
›
8 E
(
›
›
E F
)
›
›
F G
)
›
›
G H
;
›
›
H I
if
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 
i
ﬂ
ﬂ
 
>
ﬂ
ﬂ
 
$num
ﬂ
ﬂ
  !
)
ﬂ
ﬂ
! "
{
‡
‡
 
return
·
·
 "#
ConsolidationLevel1DB
·
·
# 8
.
·
·
8 9
getConsolidation
·
·
9 I
(
·
·
I J
ParCompany_Id
·
·
J W
,
·
·
W X
ParLevel1_Id
·
·
Y e
,
·
·
e f
collectionDate
·
·
g u
,
·
·
u v
Shift
·
·
w |
,
·
·
| }
Period·
·
~ Ñ
)·
·
Ñ Ö
;·
·
Ö Ü
}
‚
‚
 
else
„
„
 
{
‰
‰
 
return
Ê
Ê
 "
null
Ê
Ê
# '
;
Ê
Ê
' (
}
Á
Á
 
}
Ë
Ë
 
if
È
È
 
(
È
È
 

connection
È
È
 "
.
È
È
" #
State
È
È
# (
==
È
È
) +
System
È
È
, 2
.
È
È
2 3
Data
È
È
3 7
.
È
È
7 8
ConnectionState
È
È
8 G
.
È
È
G H
Open
È
È
H L
)
È
È
L M

connection
È
È
N X
.
È
È
X Y
Close
È
È
Y ^
(
È
È
^ _
)
È
È
_ `
;
È
È
` a
}
Í
Í
 
}
Î
Î
 
catch
Ì
Ì
 
(
Ì
Ì
 
SqlException
Ì
Ì
 
ex
Ì
Ì
  "
)
Ì
Ì
" #
{
Ó
Ó
 
int
Ô
Ô
 
	insertLog
Ô
Ô
 
=
Ô
Ô
 
insertLogJson
Ô
Ô
  -
(
Ô
Ô
- .
sql
Ô
Ô
. 1
,
Ô
Ô
1 2
ex
Ô
Ô
3 5
.
Ô
Ô
5 6
Message
Ô
Ô
6 =
,
Ô
Ô
= >
$str
Ô
Ô
? D
,
Ô
Ô
D E
$str
Ô
Ô
F K
,
Ô
Ô
K L
$str
Ô
Ô
M h
)
Ô
Ô
h i
;
Ô
Ô
i j
throw


 
ex


 
;


 
}
Ò
Ò
 
catch
Ú
Ú
 
(
Ú
Ú
 
	Exception
Ú
Ú
 
ex
Ú
Ú
 
)
Ú
Ú
  
{
Û
Û
 
int
Ù
Ù
 
	insertLog
Ù
Ù
 
=
Ù
Ù
 
insertLogJson
Ù
Ù
  -
(
Ù
Ù
- .
sql
Ù
Ù
. 1
,
Ù
Ù
1 2
ex
Ù
Ù
3 5
.
Ù
Ù
5 6
Message
Ù
Ù
6 =
,
Ù
Ù
= >
$str
Ù
Ù
? D
,
Ù
Ù
D E
$str
Ù
Ù
F K
,
Ù
Ù
K L
$str
Ù
Ù
M h
)
Ù
Ù
h i
;
Ù
Ù
i j
throw
ı
ı
 
ex
ı
ı
 
;
ı
ı
 
}
ˆ
ˆ
 
}
˜
˜
 	
public
ÄÄ 
int
ÄÄ $
GetLevel1Consolidation
ÄÄ )
(
ÄÄ) *
string
ÄÄ* 0
unitId
ÄÄ1 7
,
ÄÄ7 8
string
ÄÄ9 ?
	level01Id
ÄÄ@ I
,
ÄÄI J
string
ÄÄK Q
collectionDate
ÄÄR `
)
ÄÄ` a
{
ÅÅ 	
collectionDate
ÉÉ 
=
ÉÉ 
Convert
ÉÉ $
.
ÉÉ$ %

ToDateTime
ÉÉ% /
(
ÉÉ/ 0
collectionDate
ÉÉ0 >
)
ÉÉ> ?
.
ÉÉ? @
ToString
ÉÉ@ H
(
ÉÉH I
$str
ÉÉI U
)
ÉÉU V
;
ÉÉV W
string
ÖÖ 
sql
ÖÖ 
=
ÖÖ 
$str
ÖÖ X
+
ÖÖY Z
unitId
ÖÖ[ a
+
ÖÖb c
$str
ÖÖd {
+
ÖÖ| }
	level01IdÖÖ~ á
+ÖÖà â
$strÖÖä ∂
+ÖÖ∑ ∏
collectionDateÖÖπ «
+ÖÖ» …
$strÖÖ  Õ
;ÖÖÕ Œ
string
áá 
conexao
áá 
=
áá 
System
áá #
.
áá# $
Configuration
áá$ 1
.
áá1 2"
ConfigurationManager
áá2 F
.
ááF G
ConnectionStrings
ááG X
[
ááX Y
$str
ááY j
]
ááj k
.
áák l
ConnectionString
áál |
;
áá| }
try
àà 
{
ââ 
using
ää 
(
ää 
SqlConnection
ää $

connection
ää% /
=
ää0 1
new
ää2 5
SqlConnection
ää6 C
(
ääC D
conexao
ääD K
)
ääK L
)
ääL M
{
ãã 
using
çç 
(
çç 

SqlCommand
çç %
command
çç& -
=
çç. /
new
çç0 3

SqlCommand
çç4 >
(
çç> ?
sql
çç? B
,
ççB C

connection
ççD N
)
ççN O
)
ççO P
{
éé 
using
èè 
(
èè 
SqlDataReader
èè ,
r
èè- .
=
èè/ 0
command
èè1 8
.
èè8 9
ExecuteReader
èè9 F
(
èèF G
)
èèG H
)
èèH I
{
êê 
if
íí 
(
íí  
r
íí  !
.
íí! "
Read
íí" &
(
íí& '
)
íí' (
)
íí( )
{
ìì 
return
îî  &
Convert
îî' .
.
îî. /
ToInt32
îî/ 6
(
îî6 7
r
îî7 8
[
îî8 9
$num
îî9 :
]
îî: ;
)
îî; <
;
îî< =
}
ïï 
return
óó "
$num
óó# $
;
óó$ %
}
òò 
}
ôô 
}
öö 
}
õõ 
catch
ùù 
(
ùù 
SqlException
ùù 
ex
ùù  "
)
ùù" #
{
ûû 
int
üü 
	insertLog
üü 
=
üü 
insertLogJson
üü  -
(
üü- .
sql
üü. 1
,
üü1 2
ex
üü3 5
.
üü5 6
Message
üü6 =
,
üü= >
$str
üü? D
,
üüD E
$str
üüF K
,
üüK L
$str
üüM e
)
üüe f
;
üüf g
return
†† 
$num
†† 
;
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
ex
¢¢ 
)
¢¢  
{
££ 
int
§§ 
	insertLog
§§ 
=
§§ 
insertLogJson
§§  -
(
§§- .
sql
§§. 1
,
§§1 2
ex
§§3 5
.
§§5 6
Message
§§6 =
,
§§= >
$str
§§? D
,
§§D E
$str
§§F K
,
§§K L
$str
§§M e
)
§§e f
;
§§f g
return
•• 
$num
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
≥≥ 
SGQDBContext
≥≥ 
.
≥≥ !
ConsolidationLevel2
≥≥ /'
InsertConsolidationLevel2
≥≥0 I
(
≥≥I J
int
≥≥J M$
ConsolidationLevel1_Id
≥≥N d
,
≥≥d e
int
≥≥f i
ParLevel2_Id
≥≥j v
,
≥≥v w
int
≥≥x {
ParCompany_Id≥≥| â
,≥≥â ä
DateTime≥≥ã ì
collectionDate≥≥î ¢
,≥≥¢ £
bool≥≥§ ®
reaudit≥≥© ∞
,≥≥∞ ±
int≥≥≤ µ
reauditNumber≥≥∂ √
)≥≥√ ƒ
{
¥¥ 	
var
∂∂ #
ConsolidationLevel2DB
∂∂ %
=
∂∂& '
new
∂∂( +
SGQDBContext
∂∂, 8
.
∂∂8 9!
ConsolidationLevel2
∂∂9 L
(
∂∂L M
db
∂∂M O
)
∂∂O P
;
∂∂P Q
int
ææ 
reaud
ææ 
=
ææ 
$num
ææ 
;
ææ 
if
øø 
(
øø 
reaudit
øø 
)
øø 
reaud
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
string
ŒŒ 
sql
ŒŒ 
=
ŒŒ 
$strŒŒ µ
+ŒŒ∂ ∑
$str
œœ "
+
œœ# $
$str
–– 
+
–– $
ConsolidationLevel1_Id
–– 5
+
––6 7
$str
––8 >
+
––? @
ParLevel2_Id
––A M
+
––N O
$str
––P V
+
––W X
ParCompany_Id
––Y f
+
––g h
$str––i Ü
+––á à
collectionDate––â ó
.––ó ò
ToString––ò †
(––† °
$str––° ≠
)––≠ Æ
+––Ø ∞
$str––± ¬
+––√ ƒ
reaud
—— 
+
—— 
$str
——  #
+
——$ %
reauditNumber
——& 3
+
——4 5
$str
——6 ;
+
——< =
$str
““ 9
;
““9 :
string
‘‘ 
conexao
‘‘ 
=
‘‘ 
System
‘‘ #
.
‘‘# $
Configuration
‘‘$ 1
.
‘‘1 2"
ConfigurationManager
‘‘2 F
.
‘‘F G
ConnectionStrings
‘‘G X
[
‘‘X Y
$str
‘‘Y j
]
‘‘j k
.
‘‘k l
ConnectionString
‘‘l |
;
‘‘| }
try
’’ 
{
÷÷ 
using
◊◊ 
(
◊◊ 
SqlConnection
◊◊ $

connection
◊◊% /
=
◊◊0 1
new
◊◊2 5
SqlConnection
◊◊6 C
(
◊◊C D
conexao
◊◊D K
)
◊◊K L
)
◊◊L M
{
ÿÿ 
using
ŸŸ 
(
ŸŸ 

SqlCommand
ŸŸ %
command
ŸŸ& -
=
ŸŸ. /
new
ŸŸ0 3

SqlCommand
ŸŸ4 >
(
ŸŸ> ?
sql
ŸŸ? B
,
ŸŸB C

connection
ŸŸD N
)
ŸŸN O
)
ŸŸO P
{
⁄⁄ 

connection
€€ "
.
€€" #
Open
€€# '
(
€€' (
)
€€( )
;
€€) *
var
‹‹ 
i
‹‹ 
=
‹‹ 
Convert
‹‹  '
.
‹‹' (
ToInt32
‹‹( /
(
‹‹/ 0
command
‹‹0 7
.
‹‹7 8
ExecuteScalar
‹‹8 E
(
‹‹E F
)
‹‹F G
)
‹‹G H
;
‹‹H I
if
ﬁﬁ 
(
ﬁﬁ 
i
ﬁﬁ 
>
ﬁﬁ 
$num
ﬁﬁ  !
)
ﬁﬁ! "
{
ﬂﬂ 
if
‡‡ 
(
‡‡  
reaudit
‡‡  '
)
‡‡' (
return
··  &#
ConsolidationLevel2DB
··' <
.
··< =&
getByConsolidationLevel1
··= U
(
··U V
ParCompany_Id
··V c
,
··c d$
ConsolidationLevel1_Id
··e {
,
··{ |
ParLevel2_Id··} â
,··â ä
$num··ã å
,··å ç
reauditNumber··é õ
.··õ ú
ToString··ú §
(··§ •
)··• ¶
)··¶ ß
;··ß ®
else
‚‚  
return
„„  &#
ConsolidationLevel2DB
„„' <
.
„„< =&
getByConsolidationLevel1
„„= U
(
„„U V
ParCompany_Id
„„V c
,
„„c d$
ConsolidationLevel1_Id
„„e {
,
„„{ |
ParLevel2_Id„„} â
)„„â ä
;„„ä ã
}
‰‰ 
else
ÂÂ 
{
ÊÊ 
return
ËË "
null
ËË# '
;
ËË' (
}
ÈÈ 
}
ÍÍ 
if
ÎÎ 
(
ÎÎ 

connection
ÎÎ "
.
ÎÎ" #
State
ÎÎ# (
==
ÎÎ) +
System
ÎÎ, 2
.
ÎÎ2 3
Data
ÎÎ3 7
.
ÎÎ7 8
ConnectionState
ÎÎ8 G
.
ÎÎG H
Open
ÎÎH L
)
ÎÎL M

connection
ÎÎN X
.
ÎÎX Y
Close
ÎÎY ^
(
ÎÎ^ _
)
ÎÎ_ `
;
ÎÎ` a
}
ÏÏ 
}
ÌÌ 
catch
ÔÔ 
(
ÔÔ 
SqlException
ÔÔ 
ex
ÔÔ  "
)
ÔÔ" #
{
 
int
ÒÒ 
	insertLog
ÒÒ 
=
ÒÒ 
insertLogJson
ÒÒ  -
(
ÒÒ- .
sql
ÒÒ. 1
,
ÒÒ1 2
ex
ÒÒ3 5
.
ÒÒ5 6
Message
ÒÒ6 =
,
ÒÒ= >
$str
ÒÒ? D
,
ÒÒD E
$str
ÒÒF K
,
ÒÒK L
$str
ÒÒM h
)
ÒÒh i
;
ÒÒi j
throw
ÚÚ 
ex
ÚÚ 
;
ÚÚ 
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
ex
ÙÙ 
)
ÙÙ  
{
ıı 
int
ˆˆ 
	insertLog
ˆˆ 
=
ˆˆ 
insertLogJson
ˆˆ  -
(
ˆˆ- .
sql
ˆˆ. 1
,
ˆˆ1 2
ex
ˆˆ3 5
.
ˆˆ5 6
Message
ˆˆ6 =
,
ˆˆ= >
$str
ˆˆ? D
,
ˆˆD E
$str
ˆˆF K
,
ˆˆK L
$str
ˆˆM h
)
ˆˆh i
;
ˆˆi j
throw
˜˜ 
ex
˜˜ 
;
˜˜ 
}
¯¯ 
}
˘˘ 	
public
ææ 
int
ææ $
InsertCollectionLevel2
ææ )
(
ææ) *
SGQDBContext
ææ* 6
.
ææ6 7!
ConsolidationLevel1
ææ7 J!
ConsolidationLevel1
ææK ^
,
ææ^ _
SGQDBContext
ææ` l
.
ææl m"
ConsolidationLevel2ææm Ä#
ConsolidationLevel2ææÅ î
,ææî ï
intææñ ô
	AuditorIdææö £
,ææ£ §
intææ• ®
Shiftææ© Æ
,ææÆ Ø
int
øø* -
Period
øø. 4
,
øø4 5
string
øø6 <
Phase
øø= B
,
øøB C
bool
øøD H
Reaudit
øøI P
,
øøP Q
int
øøR U
ReauditNumber
øøV c
,
øøc d
DateTime
øøe m
CollectionDate
øøn |
,
øø| }
string
¿¿+ 1

StartPhase
¿¿2 <
,
¿¿< =
int
¿¿> A

Evaluation
¿¿B L
,
¿¿L M
int
¿¿N Q
Sample
¿¿R X
,
¿¿X Y
string
¿¿Z `!
ConsecuticeFalireIs
¿¿a t
,
¿¿t u
string
¿¿v |&
ConsecutiveFailureTotal¿¿} î
,¿¿î ï
string¿¿ñ ú
NotEvaluateIs¿¿ù ™
,¿¿™ ´
string
¡¡+ 1

Duplicated
¡¡2 <
,
¡¡< =
string
¡¡> D
haveReaudit
¡¡E P
,
¡¡P Q
int
¡¡R U
reauditLevel
¡¡V b
,
¡¡b c
string
¡¡d j"
haveCorrectiveAction
¡¡k 
,¡¡ Ä
string¡¡Å á
	HavePhase¡¡à ë
,¡¡ë í
string¡¡ì ô
	Completed¡¡ö £
,¡¡£ §
string¡¡• ´
id¡¡¨ Æ
,¡¡Æ Ø
string¡¡∞ ∂

AlertLevel¡¡∑ ¡
,¡¡¡ ¬
string
¬¬+ 1

sequential
¬¬2 <
,
¬¬< =
string
¬¬> D
side
¬¬E I
,
¬¬I J
string
¬¬K Q
WeiEvaluation
¬¬R _
,
¬¬_ `
string
¬¬a g
Defects
¬¬h o
,
¬¬o p
string
¬¬q w

WeiDefects¬¬x Ç
,¬¬Ç É
string¬¬Ñ ä&
TotalLevel3WithDefects¬¬ã °
,¬¬° ¢
string¬¬£ ©%
totalLevel3evaluation¬¬™ ø
,¬¬ø ¿
string
√√+ 1#
avaliacaoultimoalerta
√√2 G
,
√√G H
string
√√I O'
monitoramentoultimoalerta
√√P i
,
√√i j
string
√√k q
evaluatedresult√√r Å
,√√Å Ç
string√√É â
defectsresult√√ä ó
,√√ó ò
string√√ô ü
isemptylevel3√√† ≠
,√√≠ Æ
string√√Ø µ$
startphaseevaluation√√∂  
,√√  À
string√√Ã “"
endphaseevaluation√√” Â
,√√Â Ê
string√√Á Ì
hashKey√√Ó ı
=√√ˆ ˜
null√√¯ ¸
)√√¸ ˝
{
ƒƒ 	
string
∆∆ 
sql
∆∆ 
=
∆∆ 
null
∆∆ 
;
∆∆ 
string
…… 
key
…… 
=
…… !
ConsolidationLevel2
…… ,
.
……, -
UnitId
……- 3
.
……3 4
ToString
……4 <
(
……< =
)
……= >
;
……> ?
key
ÀÀ 
+=
ÀÀ 
$str
ÀÀ 
+
ÀÀ 
Shift
ÀÀ 
;
ÀÀ 
key
ÃÃ 
+=
ÃÃ 
$str
ÃÃ 
+
ÃÃ 
Period
ÃÃ 
;
ÃÃ  
key
ŒŒ 
+=
ŒŒ 
$str
ŒŒ 
+
ŒŒ !
ConsolidationLevel1
ŒŒ ,
.
ŒŒ, -
ParLevel1_Id
ŒŒ- 9
.
ŒŒ9 :
ToString
ŒŒ: B
(
ŒŒB C
)
ŒŒC D
;
ŒŒD E
key
œœ 
+=
œœ 
$str
œœ 
+
œœ !
ConsolidationLevel2
œœ ,
.
œœ, -
ParLevel2_Id
œœ- 9
.
œœ9 :
ToString
œœ: B
(
œœB C
)
œœC D
;
œœD E
if
–– 
(
–– 
hashKey
–– 
==
–– 
$str
–– 
||
–– !
hashKey
––" )
==
––* ,
$str
––- 0
)
––0 1
{
—— 
key
““ 
+=
““ 
$str
““ 
+
““ 

sequential
““ '
;
““' (
key
”” 
+=
”” 
$str
”” 
+
”” 
side
”” !
;
””! "
}
‘‘ 
else
’’ 
{
÷÷ 
key
◊◊ 
+=
◊◊ 
$str
◊◊ 
+
◊◊ 

Evaluation
◊◊ '
;
◊◊' (
key
ÿÿ 
+=
ÿÿ 
$str
ÿÿ 
+
ÿÿ 
Sample
ÿÿ #
;
ÿÿ# $
}
ŸŸ 
key
⁄⁄ 
+=
⁄⁄ 
$str
⁄⁄ 
+
⁄⁄ 
CollectionDate
⁄⁄ '
.
⁄⁄' (
ToString
⁄⁄( 0
(
⁄⁄0 1
$str
⁄⁄1 ;
)
⁄⁄; <
;
⁄⁄< =
if
‹‹ 
(
‹‹ 
Reaudit
‹‹ 
)
‹‹ 
{
›› 
key
ﬁﬁ 
+=
ﬁﬁ 
$str
ﬁﬁ 
+
ﬁﬁ 
ReauditNumber
ﬁﬁ +
;
ﬁﬁ+ ,
}
ﬂﬂ 
var
·· 
keySolid
·· 
=
·· 
key
·· 
;
·· 
var
ÂÂ  
CollectionLevel2DB
ÂÂ "
=
ÂÂ# $
new
ÂÂ% (
SGQDBContext
ÂÂ) 5
.
ÂÂ5 6
CollectionLevel2
ÂÂ6 F
(
ÂÂF G
db
ÂÂG I
)
ÂÂI J
;
ÂÂJ K
var
ÊÊ 
	colLevel2
ÊÊ 
=
ÊÊ  
CollectionLevel2DB
ÊÊ .
.
ÊÊ. /
GetByKey
ÊÊ/ 7
(
ÊÊ7 8
key
ÊÊ8 ;
)
ÊÊ; <
;
ÊÊ< =
if
ÁÁ 
(
ÁÁ 
	colLevel2
ÁÁ 
!=
ÁÁ 
null
ÁÁ !
)
ÁÁ! "
id
ËË 
=
ËË 
Convert
ËË 
.
ËË 
ToString
ËË %
(
ËË% &
	colLevel2
ËË& /
.
ËË/ 0
Id
ËË0 2
)
ËË2 3
;
ËË3 4
if
ÍÍ 
(
ÍÍ 
evaluatedresult
ÍÍ 
==
ÍÍ  "
null
ÍÍ# '
||
ÍÍ( *
evaluatedresult
ÍÍ+ :
==
ÍÍ; =
$str
ÍÍ> I
)
ÍÍI J
evaluatedresult
ÎÎ 
=
ÎÎ  !
$str
ÎÎ" %
;
ÎÎ% &
if
ÏÏ 
(
ÏÏ 
defectsresult
ÏÏ 
==
ÏÏ  
null
ÏÏ! %
||
ÏÏ& (
defectsresult
ÏÏ) 6
==
ÏÏ7 9
$str
ÏÏ: E
)
ÏÏE F
defectsresult
ÌÌ 
=
ÌÌ 
$str
ÌÌ  #
;
ÌÌ# $
if
ÓÓ 
(
ÓÓ $
TotalLevel3WithDefects
ÓÓ &
==
ÓÓ' )
null
ÓÓ* .
||
ÓÓ/ 1$
TotalLevel3WithDefects
ÓÓ2 H
==
ÓÓI K
$str
ÓÓL W
)
ÓÓW X$
TotalLevel3WithDefects
ÔÔ &
=
ÔÔ' (
$str
ÔÔ) ,
;
ÔÔ, -
if
 
(
 

WeiDefects
 
==
 
null
 "
||
# %

WeiDefects
& 0
==
1 3
$str
4 ?
)
? @

WeiDefects
ÒÒ 
=
ÒÒ 
$str
ÒÒ  
;
ÒÒ  !
if
ÚÚ 
(
ÚÚ 
Defects
ÚÚ 
==
ÚÚ 
null
ÚÚ 
||
ÚÚ  "
Defects
ÚÚ# *
==
ÚÚ+ -
$str
ÚÚ. 9
)
ÚÚ9 :
Defects
ÛÛ 
=
ÛÛ 
$str
ÛÛ 
;
ÛÛ 
if
ÙÙ 
(
ÙÙ 
WeiEvaluation
ÙÙ 
==
ÙÙ  
null
ÙÙ! %
||
ÙÙ& (
WeiEvaluation
ÙÙ) 6
==
ÙÙ7 9
$str
ÙÙ: E
)
ÙÙE F
WeiEvaluation
ıı 
=
ıı 
$str
ıı  #
;
ıı# $
if
¯¯ 
(
¯¯ 
id
¯¯ 
==
¯¯ 
$str
¯¯ 
)
¯¯ 
{
˘˘ 
sql
ˇˇ 
=
ˇˇ 
$strˇˇ ±
+ˇˇ≤ ≥
$str
ÄÄ 
+
ÄÄ 
$str
ÅÅ 
+
ÅÅ 
key
ÅÅ 
+
ÅÅ 
$str
ÅÅ  
+
ÅÅ! "!
ConsolidationLevel2
ÅÅ# 6
.
ÅÅ6 7
Id
ÅÅ7 9
+
ÅÅ: ;
$str
ÅÅ< A
+
ÅÅB C!
ConsolidationLevel1
ÅÅD W
.
ÅÅW X
ParLevel1_Id
ÅÅX d
+
ÅÅe f
$str
ÅÅg l
+
ÅÅm n"
ConsolidationLevel2ÅÅo Ç
.ÅÅÇ É
ParLevel2_IdÅÅÉ è
+ÅÅê ë
$strÅÅí ó
+ÅÅò ô#
ConsolidationLevel1ÅÅö ≠
.ÅÅ≠ Æ
UnitIdÅÅÆ ¥
+ÅÅµ ∂
$strÅÅ∑ º
+ÅÅΩ æ
	AuditorIdÅÅø »
+ÅÅ…  
$strÅÅÀ –
+ÅÅ— “
ShiftÅÅ” ÿ
+ÅÅŸ ⁄
$strÅÅ€ ‡
+ÅÅ· ‚
PeriodÅÅ„ È
+ÅÅÍ Î
$strÅÅÏ Ò
+ÅÅÚ Û
PhaseÅÅÙ ˘
+ÅÅ˙ ˚
$strÅÅ¸ Å
+ÅÅÇ É
BoolConverterÅÅÑ ë
(ÅÅë í
ReauditÅÅí ô
.ÅÅô ö
ToStringÅÅö ¢
(ÅÅ¢ £
)ÅÅ£ §
)ÅÅ§ •
+ÅÅ¶ ß
$strÅÅ® ≠
+ÅÅÆ Ø
ReauditNumberÅÅ∞ Ω
+ÅÅæ ø
$strÅÅ¿ Ã
+ÅÅÕ Œ
CollectionDateÅÅœ ›
.ÅÅ› ﬁ
ToStringÅÅﬁ Ê
(ÅÅÊ Á
$strÅÅÁ ¸
)ÅÅ¸ ˝
+ÅÅ˛ ˇ
$strÅÅÄ ù
+ÅÅû ü

EvaluationÅÅ† ™
+ÅÅ´ ¨
$strÅÅ≠ ≤
+ÅÅ≥ ¥
SampleÅÅµ ª
+ÅÅº Ω
$strÅÅæ “
+ÅÅ” ‘#
ConsecuticeFalireIsÅÅ’ Ë
+ÅÅÈ Í
$strÅÅÎ 
+ÅÅÒ Ú'
ConsecutiveFailureTotalÅÅÛ ä
+ÅÅã å
$strÅÅç í
+ÅÅì î
NotEvaluateIsÅÅï ¢
+ÅÅ£ §
$strÅÅ• ™
+ÅÅ´ ¨

DuplicatedÅÅ≠ ∑
+ÅÅ∏ π
$strÅÅ∫ ¿
+ÅÅ¡ ¬
haveReauditÅÅ√ Œ
+ÅÅœ –
$strÅÅ— ÷
+ÅÅ◊ ÿ
reauditLevelÅÅŸ Â
+ÅÅÊ Á
$strÅÅË Ì
+ÅÅÓ Ô$
haveCorrectiveActionÅÅ Ñ
+ÅÅÖ Ü
$strÅÅá ç
+ÅÅé è
	HavePhaseÅÅê ô
+ÅÅö õ
$strÅÅú ¢
+ÅÅ£ §
	CompletedÅÅ• Æ
+ÅÅØ ∞
$strÅÅ± ∑
+ÅÅ∏ π

AlertLevelÅÅ∫ ƒ
+ÅÅ≈ ∆
$strÅÅ« Õ
+ÅÅŒ œ

sequentialÅÅ– ⁄
+ÅÅ€ ‹
$strÅÅ› „
+ÅÅ‰ Â
sideÅÅÊ Í
+ÅÅÎ Ï
$strÅÅÌ Ú
+ÅÅÛ Ù
WeiEvaluationÅÅı Ç
+ÅÅÉ Ñ
$strÅÅÖ ä
+ÅÅã å
DefectsÅÅç î
+ÅÅï ñ
$strÅÅó ú
+ÅÅù û

WeiDefectsÅÅü ©
+ÅÅ™ ´
$strÅÅ¨ ±
+ÅÅ≤ ≥&
TotalLevel3WithDefectsÅÅ¥  
+ÅÅÀ Ã
$strÅÅÕ ”
+ÅÅ‘ ’%
totalLevel3evaluationÅÅ÷ Î
+ÅÅÏ Ì
$strÅÅÓ Ù
+ÅÅı ˆ%
avaliacaoultimoalertaÅÅ˜ å
+ÅÅç é
$strÅÅè ï
+ÅÅñ ó)
monitoramentoultimoalertaÅÅò ±
+ÅÅ≤ ≥
$strÅÅ¥ ∫
+ÅÅª º
evaluatedresultÅÅΩ Ã
+ÅÅÕ Œ
$strÅÅœ ’
+ÅÅ÷ ◊
defectsresultÅÅÿ Â
+ÅÅÊ Á
$strÅÅË Ó
+ÅÅÔ 
isemptylevel3ÅÅÒ ˛
+ÅÅˇ Ä
$strÅÅÅ á
+ÅÅá à$
startphaseevaluationÅÅà ú
+ÅÅú ù
$strÅÅù £
+ÅÅ£ §"
endphaseevaluationÅÅ§ ∂
+ÅÅ∂ ∑
$strÅÅ∑ º
;ÅÅº Ω
sql
ÉÉ 
+=
ÉÉ 
$str
ÉÉ :
;
ÉÉ: ;
sql
ÖÖ 
=
ÖÖ 
sql
ÖÖ 
.
ÖÖ 
Replace
ÖÖ !
(
ÖÖ! "
$str
ÖÖ" *
,
ÖÖ* +
$str
ÖÖ, 2
)
ÖÖ2 3
;
ÖÖ3 4
}
ÜÜ 
else
áá 
{
àà 
sql
ãã 
=
ãã 
$str
ãã D
+
ããE F
NotEvaluateIs
ããG T
+
ããU V
$str
ããW g
+
ããh i
DateTime
ããj r
.
ããr s
Now
ããs v
.
ããv w
ToString
ããw 
(ãã Ä
$strããÄ ï
)ããï ñ
+ããó ò
$strããô ´
+ãã¨ ≠
haveReauditããÆ π
+ãã∫ ª
$strããº Œ
+ããœ –
reauditLevelãã— ›
+ããﬁ ﬂ
$strãã‡ ˙
+ãã˚ ¸$
haveCorrectiveActionãã˝ ë
+ããí ì
$strããî ß
+ãã® ©
WeiEvaluationãã™ ∑
+ãã∏ π
$strãã∫ ∆
+ãã« »
defectsresultãã… ÷
+ãã◊ ÿ
$strããŸ Ë
+ããÈ Í

WeiDefectsããÎ ı
+ããˆ ˜
$strãã¯ ì
+ããî ï&
TotalLevel3WithDefectsããñ ¨
+ãã≠ Æ
$strããØ …
+ãã  À%
totalLevel3evaluationããÃ ·
+ãã‚ „
$strãã‰ ¸
+ãã˝ ˛%
avaliacaoultimoalertaããˇ î
+ããï ñ
$strããó ´
+ãã¨ ≠
evaluatedresultããÆ Ω
+ããæ ø
$strãã¿ “
+ãã” ‘
defectsresultãã’ ‚
+ãã„ ‰
$strããÂ ˜
+ãã¯ ˘
isemptylevel3ãã˙ á
+ããà â
$strããä £
+ãã£ §$
startphaseevaluationãã§ ∏
+ãã∏ π
$strãã∫ —
+ãã— “"
endphaseevaluationãã“ ‰
+ãã‰ Â
$strããÂ Ú
+ããÛ Ù
idããı ˜
+ãã¯ ˘
$strãã˙ ˝
;ãã˝ ˛
sql
çç 
+=
çç 
$str
çç "
+
çç# $
id
çç% '
+
çç( )
$str
çç* ;
;
çç; <
}
éé 
string
êê 
conexao
êê 
=
êê 
System
êê #
.
êê# $
Configuration
êê$ 1
.
êê1 2"
ConfigurationManager
êê2 F
.
êêF G
ConnectionStrings
êêG X
[
êêX Y
$str
êêY j
]
êêj k
.
êêk l
ConnectionString
êêl |
;
êê| }
try
ëë 
{
íí 
using
ìì 
(
ìì 
SqlConnection
ìì $

connection
ìì% /
=
ìì0 1
new
ìì2 5
SqlConnection
ìì6 C
(
ììC D
conexao
ììD K
)
ììK L
)
ììL M
{
îî 
using
ïï 
(
ïï 

SqlCommand
ïï %
command
ïï& -
=
ïï. /
new
ïï0 3

SqlCommand
ïï4 >
(
ïï> ?
sql
ïï? B
,
ïïB C

connection
ïïD N
)
ïïN O
)
ïïO P
{
ññ 

connection
óó "
.
óó" #
Open
óó# '
(
óó' (
)
óó( )
;
óó) *
var
õõ 
i
õõ 
=
õõ 
Convert
õõ  '
.
õõ' (
ToInt32
õõ( /
(
õõ/ 0
command
õõ0 7
.
õõ7 8
ExecuteScalar
õõ8 E
(
õõE F
)
õõF G
)
õõG H
;
õõH I
if
üü 
(
üü 
Reaudit
üü #
)
üü# $
{
†† 
var
°° &
UpdateCollectionLevel2DB
°°  8
=
°°9 :
new
°°; >
SGQDBContext
°°? K
.
°°K L$
UpdateCollectionLevel2
°°L b
(
°°b c
db
°°c e
)
°°e f
;
°°f g&
UpdateCollectionLevel2DB
¢¢ 4
.
¢¢4 5"
UpdateIsReauditByKey
¢¢5 I
(
¢¢I J
keySolid
¢¢J R
,
¢¢R S
Reaudit
¢¢T [
,
¢¢[ \
Int16
¢¢] b
.
¢¢b c
Parse
¢¢c h
(
¢¢h i
haveReaudit
¢¢i t
)
¢¢t u
,
¢¢u v
ReauditNumber¢¢w Ñ
,¢¢Ñ Ö
reauditLevel¢¢Ü í
)¢¢í ì
;¢¢ì î
}
££ 
if
•• 
(
•• 
i
•• 
>
•• 
$num
••  !
)
••! "
{
¶¶ 
return
ßß "
i
ßß# $
;
ßß$ %
}
®® 
else
©© 
{
™™ 
return
¨¨ "
$num
¨¨# $
;
¨¨$ %
}
≠≠ 
}
ÆÆ 
if
ØØ 
(
ØØ 

connection
ØØ "
.
ØØ" #
State
ØØ# (
==
ØØ) +
System
ØØ, 2
.
ØØ2 3
Data
ØØ3 7
.
ØØ7 8
ConnectionState
ØØ8 G
.
ØØG H
Open
ØØH L
)
ØØL M

connection
ØØN X
.
ØØX Y
Close
ØØY ^
(
ØØ^ _
)
ØØ_ `
;
ØØ` a
}
∞∞ 
}
±± 
catch
≥≥ 
(
≥≥ 
SqlException
≥≥ 
ex
≥≥  "
)
≥≥" #
{
¥¥ 
if
µµ 
(
µµ 
ex
µµ 
.
µµ 
Number
µµ 
==
µµ  
$num
µµ! %
)
µµ% &
{
∂∂ 
if
∑∑ 
(
∑∑ 
hashKey
∑∑ 
==
∑∑  "
$str
∑∑# &
)
∑∑& '
{
∏∏ 
var
ππ 
collectionLevel2
ππ ,
=
ππ- . 
CollectionLevel2DB
ππ/ A
.
ππA B
GetByKey
ππB J
(
ππJ K
key
ππK N
)
ππN O
;
ππO P
var
ªª 
updateLevel2Id
ªª *
=
ªª+ ,$
InsertCollectionLevel2
ªª- C
(
ªªC D!
ConsolidationLevel1
ªªD W
,
ªªW X!
ConsolidationLevel2
ªªY l
,
ªªl m
	AuditorId
ªªn w
,
ªªw x
Shift
ªªy ~
,
ªª~ 
PeriodªªÄ Ü
,ªªÜ á
Phaseªªà ç
,ªªç é
Reauditªªè ñ
,ªªñ ó
ReauditNumberªªò •
,ªª• ¶
CollectionDateªªß µ
,ªªµ ∂

StartPhaseªª∑ ¡
,ªª¡ ¬

Evaluationªª√ Õ
,ªªÕ Œ
Sampleªªœ ’
,ªª’ ÷#
ConsecuticeFalireIsªª◊ Í
,ªªÍ Î'
ConsecutiveFailureTotalªªÏ É
,ªªÉ Ñ
NotEvaluateIsªªÖ í
,ªªí ì

Duplicatedªªî û
,ªªû ü
haveReauditªª† ´
,ªª´ ¨
reauditLevelªª≠ π
,ªªπ ∫$
haveCorrectiveActionªªª œ
,ªªœ –
	HavePhaseªª— ⁄
,ªª⁄ €
	Completedªª‹ Â
,ªªÂ Ê 
collectionLevel2ªªÁ ˜
.ªª˜ ¯
Idªª¯ ˙
.ªª˙ ˚
ToStringªª˚ É
(ªªÉ Ñ
)ªªÑ Ö
,ªªÖ Ü

AlertLevelªªá ë
,ªªë í

sequentialªªì ù
,ªªù û
sideªªü £
,ªª£ §
WeiEvaluationªª• ≤
,ªª≤ ≥
Defectsªª¥ ª
,ªªª º

WeiDefectsªªΩ «
,ªª« »&
TotalLevel3WithDefectsªª… ﬂ
,ªªﬂ ‡%
totalLevel3evaluationªª· ˆ
,ªªˆ ˜%
avaliacaoultimoalertaªª¯ ç
,ªªç é)
monitoramentoultimoalertaªªè ®
,ªª® ©
evaluatedresultªª™ π
,ªªπ ∫
defectsresultªªª »
,ªª» …
isemptylevel3ªª  ◊
,ªª◊ ÿ$
startphaseevaluationªªŸ Ì
,ªªÌ Ó"
endphaseevaluationªªÔ Å
,ªªÅ Ç
hashKeyªªÉ ä
)ªªä ã
;ªªã å
if
ºº 
(
ºº 
updateLevel2Id
ºº *
>
ºº+ ,
$num
ºº- .
)
ºº. /
{
ΩΩ 
int
ææ 
removeLevel3
ææ  ,
=
ææ- . 
ResultLevel3Delete
ææ/ A
(
ææA B
collectionLevel2
ææB R
.
ææR S
Id
ææS U
)
ææU V
;
ææV W
return
øø "
updateLevel2Id
øø# 1
;
øø1 2
}
¿¿ 
else
¡¡ 
{
¬¬ 
return
√√ "
$num
√√# $
;
√√$ %
}
ƒƒ 
}
≈≈ 
else
∆∆ 
{
«« 
int
»» 
	insertLog
»» %
=
»»& '
insertLogJson
»»( 5
(
»»5 6
sql
»»6 9
,
»»9 :
ex
»»; =
.
»»= >
Message
»»> E
,
»»E F
$str
»»G L
,
»»L M
$str
»»N S
,
»»S T
$str
»»U m
)
»»m n
;
»»n o
if
   
(
   
ex
   
.
   
Number
   %
==
  & (
$num
  ) -
)
  - .
{
ÀÀ 
return
ÃÃ "
ex
ÃÃ# %
.
ÃÃ% &
Number
ÃÃ& ,
;
ÃÃ, -
}
ÕÕ 
return
œœ 
$num
œœ  
;
œœ  !
}
–– 
}
—— 
throw
““ 
ex
““ 
;
““ 
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
ex
‘‘ 
)
‘‘  
{
’’ 
int
÷÷ 
	insertLog
÷÷ 
=
÷÷ 
insertLogJson
÷÷  -
(
÷÷- .
sql
÷÷. 1
,
÷÷1 2
ex
÷÷3 5
.
÷÷5 6
Message
÷÷6 =
,
÷÷= >
$str
÷÷? D
,
÷÷D E
$str
÷÷F K
,
÷÷K L
$str
÷÷M e
)
÷÷e f
;
÷÷f g
throw
◊◊ 
ex
◊◊ 
;
◊◊ 
}
ÿÿ 
if
€€ 
(
€€ 
Reaudit
€€ 
)
€€ 
{
‹‹ 
}
ﬁﬁ 
}
„„ 	
public
‰‰ 
int
‰‰  
ResultLevel3Delete
‰‰ %
(
‰‰% &
int
‰‰& )!
CollectionLevel2_Id
‰‰* =
)
‰‰= >
{
ÂÂ 	
string
ÁÁ 
sql
ÁÁ 
=
ÁÁ 
$str
ÁÁ Y
+
ÁÁZ [!
CollectionLevel2_Id
ÁÁ\ o
;
ÁÁo p
string
ËË 
conexao
ËË 
=
ËË 
System
ËË #
.
ËË# $
Configuration
ËË$ 1
.
ËË1 2"
ConfigurationManager
ËË2 F
.
ËËF G
ConnectionStrings
ËËG X
[
ËËX Y
$str
ËËY j
]
ËËj k
.
ËËk l
ConnectionString
ËËl |
;
ËË| }
try
ÈÈ 
{
ÍÍ 
using
ÎÎ 
(
ÎÎ 
SqlConnection
ÎÎ $

connection
ÎÎ% /
=
ÎÎ0 1
new
ÎÎ2 5
SqlConnection
ÎÎ6 C
(
ÎÎC D
conexao
ÎÎD K
)
ÎÎK L
)
ÎÎL M
{
ÏÏ 
using
ÌÌ 
(
ÌÌ 

SqlCommand
ÌÌ %
command
ÌÌ& -
=
ÌÌ. /
new
ÌÌ0 3

SqlCommand
ÌÌ4 >
(
ÌÌ> ?
sql
ÌÌ? B
,
ÌÌB C

connection
ÌÌD N
)
ÌÌN O
)
ÌÌO P
{
ÓÓ 

connection
ÔÔ "
.
ÔÔ" #
Open
ÔÔ# '
(
ÔÔ' (
)
ÔÔ( )
;
ÔÔ) *
var
 
i
 
=
 
Convert
  '
.
' (
ToInt32
( /
(
/ 0
command
0 7
.
7 8
ExecuteNonQuery
8 G
(
G H
)
H I
)
I J
;
J K
if
ÒÒ 
(
ÒÒ 
i
ÒÒ 
>
ÒÒ 
$num
ÒÒ  !
)
ÒÒ! "
{
ÚÚ 
return
ÛÛ "
i
ÛÛ# $
;
ÛÛ$ %
}
ÙÙ 
else
ıı 
{
ˆˆ 
return
˜˜ "
$num
˜˜# $
;
˜˜$ %
}
¯¯ 
}
˙˙ 
if
˚˚ 
(
˚˚ 

connection
˚˚ "
.
˚˚" #
State
˚˚# (
==
˚˚) +
System
˚˚, 2
.
˚˚2 3
Data
˚˚3 7
.
˚˚7 8
ConnectionState
˚˚8 G
.
˚˚G H
Open
˚˚H L
)
˚˚L M

connection
˚˚N X
.
˚˚X Y
Close
˚˚Y ^
(
˚˚^ _
)
˚˚_ `
;
˚˚` a
}
¸¸ 
}
˝˝ 
catch
˛˛ 
(
˛˛ 
SqlException
˛˛ 
ex
˛˛  "
)
˛˛" #
{
ˇˇ 
throw
ÄÄ 
;
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
ex
ÇÇ 
)
ÇÇ  
{
ÉÉ 
throw
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
áá 
int
áá /
!InsertCollectionLevel2HeaderField
áá 4
(
áá4 5
int
áá5 8 
CollectionLevel2Id
áá9 K
,
ááK L
string
ááM S

headerList
ááT ^
)
áá^ _
{
àà 	
string
ää 
sql
ää 
=
ää 
null
ää 
;
ää 
string
ãã 
[
ãã 
]
ãã 
arrayHeaderList
ãã $
=
ãã% &

headerList
ãã' 1
.
ãã1 2
Split
ãã2 7
(
ãã7 8
$char
ãã8 ;
)
ãã; <
;
ãã< =
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå 
<
åå 
arrayHeaderList
åå  /
.
åå/ 0
Length
åå0 6
;
åå6 7
i
åå8 9
++
åå9 ;
)
åå; <
{
çç 
var
éé 
header
éé 
=
éé 
arrayHeaderList
éé ,
[
éé, -
i
éé- .
]
éé. /
.
éé/ 0
Split
éé0 5
(
éé5 6
$char
éé6 9
)
éé9 :
;
éé: ;
string
êê 
ParHeaderField_Id
êê (
=
êê) *
header
êê+ 1
[
êê1 2
$num
êê2 3
]
êê3 4
;
êê4 5
string
ëë 
ParFieldType_Id
ëë &
=
ëë' (
header
ëë) /
[
ëë/ 0
$num
ëë0 1
]
ëë1 2
;
ëë2 3
string
íí 
Value
íí 
=
íí 
header
íí %
[
íí% &
$num
íí& '
]
íí' (
;
íí( )
if
ïï 
(
ïï 
ParHeaderField_Id
ïï %
!=
ïï& (
$str
ïï) 4
&&
ïï5 7
ParFieldType_Id
ïï8 G
!=
ïïH J
$str
ïïK V
)
ïïV W
{
ññ 
sql
òò 
+=
òò 
$str
òò ^
+
òò_ `
$str
ôô \
+
ôô] ^
$str
öö \
+
öö] ^
$str
õõ \
+
õõ] ^
$str
úú \
+
úú] ^
$str
ùù \
+
ùù] ^
$str
ûû \
+
ûû] ^
$str
üü #
+
üü$ % 
CollectionLevel2Id
üü& 8
+
üü9 :
$str
üü; \
+
üü] ^
$str
†† "
+
††# $
ParHeaderField_Id
††% 6
+
††7 8
$str
††9 `
+
††a b
$str
°° W
+
°°X Y
ParHeaderField_Id
°°Z k
+
°°l m
$str
°°n u
+
°°v w
$str
¢¢ #
+
¢¢$ %
ParFieldType_Id
¢¢& 5
+
¢¢6 7
$str
¢¢8 ]
+
¢¢^ _
$str
££ #
+
££$ %
Value
££& +
+
££, -
$str
££. ]
;
££] ^
}
•• 
}
ßß 
if
™™ 
(
™™ 
sql
™™ 
!=
™™ 
null
™™ 
)
™™ 
{
´´ 
string
≠≠ 
conexao
≠≠ 
=
≠≠  
System
≠≠! '
.
≠≠' (
Configuration
≠≠( 5
.
≠≠5 6"
ConfigurationManager
≠≠6 J
.
≠≠J K
ConnectionStrings
≠≠K \
[
≠≠\ ]
$str
≠≠] n
]
≠≠n o
.
≠≠o p
ConnectionString≠≠p Ä
;≠≠Ä Å
try
ÆÆ 
{
ØØ 
using
∞∞ 
(
∞∞ 
SqlConnection
∞∞ (

connection
∞∞) 3
=
∞∞4 5
new
∞∞6 9
SqlConnection
∞∞: G
(
∞∞G H
conexao
∞∞H O
)
∞∞O P
)
∞∞P Q
{
±± 
using
≤≤ 
(
≤≤ 

SqlCommand
≤≤ )
command
≤≤* 1
=
≤≤2 3
new
≤≤4 7

SqlCommand
≤≤8 B
(
≤≤B C
sql
≤≤C F
,
≤≤F G

connection
≤≤H R
)
≤≤R S
)
≤≤S T
{
≥≥ 

connection
¥¥ &
.
¥¥& '
Open
¥¥' +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
var
µµ 
i
µµ  !
=
µµ" #
Convert
µµ$ +
.
µµ+ ,
ToInt32
µµ, 3
(
µµ3 4
command
µµ4 ;
.
µµ; <
ExecuteNonQuery
µµ< K
(
µµK L
)
µµL M
)
µµM N
;
µµN O
if
∑∑ 
(
∑∑  
i
∑∑  !
>
∑∑" #
$num
∑∑$ %
)
∑∑% &
{
∏∏ 
return
ππ  &
i
ππ' (
;
ππ( )
}
∫∫ 
else
ªª  
{
ºº 
return
ææ  &
$num
ææ' (
;
ææ( )
}
øø 
}
¡¡ 
if
¬¬ 
(
¬¬ 

connection
¬¬ &
.
¬¬& '
State
¬¬' ,
==
¬¬- /
System
¬¬0 6
.
¬¬6 7
Data
¬¬7 ;
.
¬¬; <
ConnectionState
¬¬< K
.
¬¬K L
Open
¬¬L P
)
¬¬P Q

connection
¬¬R \
.
¬¬\ ]
Close
¬¬] b
(
¬¬b c
)
¬¬c d
;
¬¬d e
}
√√ 
}
ƒƒ 
catch
∆∆ 
(
∆∆ 
SqlException
∆∆ #
ex
∆∆$ &
)
∆∆& '
{
«« 
int
»» 
	insertLog
»» !
=
»»" #
insertLogJson
»»$ 1
(
»»1 2
sql
»»2 5
,
»»5 6
ex
»»7 9
.
»»9 :
Message
»»: A
,
»»A B
$str
»»C H
,
»»H I
$str
»»J O
,
»»O P
$str
»»Q t
)
»»t u
;
»»u v
if
…… 
(
…… 
ex
…… 
.
…… 
Number
…… !
==
……" $
$num
……% )
)
……) *
{
   
return
ÀÀ 
$num
ÀÀ  
;
ÀÀ  !
}
ÃÃ 
throw
ÕÕ 
ex
ÕÕ 
;
ÕÕ 
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ  
ex
œœ! #
)
œœ# $
{
–– 
int
—— 
	insertLog
—— !
=
——" #
insertLogJson
——$ 1
(
——1 2
sql
——2 5
,
——5 6
ex
——7 9
.
——9 :
Message
——: A
,
——A B
$str
——C H
,
——H I
$str
——J O
,
——O P
$str
——Q t
)
——t u
;
——u v
throw
““ 
ex
““ 
;
““ 
}
”” 
}
‘‘ 
else
’’ 
{
÷÷ 
return
◊◊ 
$num
◊◊ 
;
◊◊ 
}
ÿÿ 
}
ŸŸ 	
public
ÊÊ 
int
ÊÊ $
InsertCollectionLevel3
ÊÊ )
(
ÊÊ) *
string
ÊÊ* 0!
CollectionLevel02Id
ÊÊ1 D
,
ÊÊD E
int
ÊÊF I
level02
ÊÊJ Q
,
ÊÊQ R
string
ÊÊS Y
level03Results
ÊÊZ h
,
ÊÊh i
int
ÊÊj m
	auditorId
ÊÊn w
,
ÊÊw x
string
ÊÊy 

duplicatedÊÊÄ ä
,ÊÊä ã
boolÊÊå ê
filhoÊÊë ñ
)ÊÊñ ó
{
ÁÁ 	
IEnumerable
ÎÎ 
<
ÎÎ 
	ParLevel3
ÎÎ !
>
ÎÎ! "*
parLevel3List_IndicadorFilho
ÎÎ# ?
=
ÎÎ@ A
null
ÎÎB F
;
ÎÎF G
level03Results
˙˙ 
=
˙˙ 
level03Results
˙˙ +
.
˙˙+ ,
Replace
˙˙, 3
(
˙˙3 4
$str
˙˙4 M
,
˙˙M N
$str
˙˙O f
)
˙˙f g
;
˙˙g h
level03Results
˚˚ 
=
˚˚ 
level03Results
˚˚ +
.
˚˚+ ,
Replace
˚˚, 3
(
˚˚3 4
$str
˚˚4 I
,
˚˚I J
$str
˚˚K N
)
˚˚N O
.
˚˚O P
Replace
˚˚P W
(
˚˚W X
$str
˚˚X c
,
˚˚c d
$str
˚˚e g
)
˚˚g h
.
˚˚h i
Replace
˚˚i p
(
˚˚p q
$str
˚˚q }
,
˚˚} ~
$str˚˚ Å
)˚˚Å Ç
;˚˚Ç É
string
˝˝ 
[
˝˝ 
]
˝˝ 
arrayResults
˝˝ !
=
˝˝" #
level03Results
˝˝$ 2
.
˝˝2 3
Split
˝˝3 8
(
˝˝8 9
$char
˝˝9 <
)
˝˝< =
;
˝˝= >
string
ÄÄ 
sql
ÄÄ 
=
ÄÄ 
null
ÄÄ 
;
ÄÄ 
var
ÑÑ 
ParLevel3DB
ÑÑ 
=
ÑÑ 
new
ÑÑ !
SGQDBContext
ÑÑ" .
.
ÑÑ. /
	ParLevel3
ÑÑ/ 8
(
ÑÑ8 9
db
ÑÑ9 ;
)
ÑÑ; <
;
ÑÑ< =
var
ÖÖ 
Result_Level3DB
ÖÖ 
=
ÖÖ  !
new
ÖÖ" %
SGQDBContext
ÖÖ& 2
.
ÖÖ2 3
Result_Level3
ÖÖ3 @
(
ÖÖ@ A
db
ÖÖA C
)
ÖÖC D
;
ÖÖD E
var
ÜÜ 
parLevel3List
ÜÜ 
=
ÜÜ 
ParLevel3DB
ÜÜ  +
.
ÜÜ+ ,
getList
ÜÜ, 3
(
ÜÜ3 4
)
ÜÜ4 5
;
ÜÜ5 6
for
ââ 
(
ââ 
int
ââ 
i
ââ 
=
ââ 
$num
ââ 
;
ââ 
i
ââ 
<
ââ 
arrayResults
ââ  ,
.
ââ, -
Length
ââ- 3
;
ââ3 4
i
ââ5 6
++
ââ6 8
)
ââ8 9
{
ää 
arrayResults
åå 
[
åå 
i
åå 
]
åå 
=
åå  !
arrayResults
åå" .
[
åå. /
i
åå/ 0
]
åå0 1
.
åå1 2
Replace
åå2 9
(
åå9 :
$str
åå: K
,
ååK L
$str
ååM ]
)
åå] ^
;
åå^ _
arrayResults
çç 
[
çç 
i
çç 
]
çç 
=
çç  !
arrayResults
çç" .
[
çç. /
i
çç/ 0
]
çç0 1
.
çç1 2
Replace
çç2 9
(
çç9 :
$str
çç: S
,
ççS T
$str
ççU l
)
ççl m
;
ççm n
var
êê 
result
êê "
=
êê# $
arrayResults
êê% 1
[
êê1 2
i
êê2 3
]
êê3 4
.
êê4 5
Split
êê5 :
(
êê: ;
$char
êê; >
)
êê> ?
;
êê? @
string
ìì 
	Level03Id
ìì  
=
ìì! "
result
ìì# )
[
ìì) *
$num
ìì* +
]
ìì+ ,
;
ìì, -
Dominio
ïï 
.
ïï 
ParLevel3Level2
ïï '
tarefaFilha
ïï( 3
=
ïï4 5
new
ïï6 9
Dominio
ïï: A
.
ïïA B
ParLevel3Level2
ïïB Q
(
ïïQ R
)
ïïR S
;
ïïS T
Dominio
ññ 
.
ññ #
ParLevel3Level2Level1
ññ -
indicadorFilha
ññ. <
=
ññ= >
new
ññ? B
Dominio
ññC J
.
ññJ K#
ParLevel3Level2Level1
ññK `
(
ññ` a
)
ñña b
;
ññb c
Dominio
óó 
.
óó 
CollectionLevel2
óó (#
collectionLevel2Filha
óó) >
=
óó? @
new
óóA D
Dominio
óóE L
.
óóL M
CollectionLevel2
óóM ]
(
óó] ^
)
óó^ _
;
óó_ `
int
ôô !
collectionLevel2_id
ôô '
=
ôô( )
Int32
ôô* /
.
ôô/ 0
Parse
ôô0 5
(
ôô5 6!
CollectionLevel02Id
ôô6 I
)
ôôI J
;
ôôJ K
if
õõ 
(
õõ 
filho
õõ 
)
õõ 
{
úú 
using
ùù 
(
ùù 
var
ùù 
db
ùù !
=
ùù" #
new
ùù$ '
Dominio
ùù( /
.
ùù/ 0
SgqDbDevEntities
ùù0 @
(
ùù@ A
)
ùùA B
)
ùùB C
{
ûû 
int
üü 
idl3
üü  
=
üü! "
Int32
üü# (
.
üü( )
Parse
üü) .
(
üü. /
	Level03Id
üü/ 8
)
üü8 9
;
üü9 :#
collectionLevel2Filha
°° -
=
°°. /
db
°°0 2
.
°°2 3
CollectionLevel2
°°3 C
.
°°C D
FirstOrDefault
°°D R
(
°°R S
r
°°S T
=>
°°U W
r
°°X Y
.
°°Y Z
Id
°°Z \
==
°°] _!
collectionLevel2_id
°°` s
)
°°s t
;
°°t u
var
§§ !
ListaindicadorFilha
§§ /
=
§§0 1
db
§§2 4
.
§§4 5#
ParLevel3Level2Level1
§§5 J
.
§§J K
Where
§§K P
(
§§P Q
r
§§Q R
=>
§§S U
r
§§V W
.
§§W X
ParLevel1_Id
§§X d
==
§§e g#
collectionLevel2Filha
§§h }
.
§§} ~
ParLevel1_Id§§~ ä
)§§ä ã
;§§ã å
tarefaFilha
ßß #
=
ßß$ %
db
ßß& (
.
ßß( )
ParLevel3Level2
ßß) 8
.
ßß8 9
FirstOrDefault
ßß9 G
(
ßßG H
r
ßßH I
=>
ßßJ L
r
ßßM N
.
ßßN O
ParLevel3_Id
ßßO [
==
ßß\ ^
idl3
ßß_ c
&&
ßße g
r
ßßh i
.
ßßi j
IsActive
ßßj r
&&
ßßs u"
ListaindicadorFilhaßßv â
.ßßâ ä
Anyßßä ç
(ßßç é
zßßé è
=>ßßê í
zßßì î
.ßßî ï"
ParLevel3Level2_Idßßï ß
==ßß® ™
rßß´ ¨
.ßß¨ ≠
Idßß≠ Ø
)ßßØ ∞
)ßß± ≤
;ßß≤ ≥
}
®® 
}
©© 
bool
¨¨ 
skip
¨¨ 
=
¨¨ 
false
¨¨ !
;
¨¨! "
if
≈≈ 
(
≈≈ 
skip
≈≈ 
)
≈≈ 
{
∆∆ 
continue
«« 
;
«« 
}
»» 
string
   
value
   
=
   
result
   %
[
  % &
$num
  & '
]
  ' (
;
  ( )
value
ÀÀ 
=
ÀÀ  
DefaultValueReturn
ÀÀ *
(
ÀÀ* +
value
ÀÀ+ 0
,
ÀÀ0 1
$str
ÀÀ2 5
)
ÀÀ5 6
;
ÀÀ6 7
string
ÕÕ 
conform
ÕÕ 
=
ÕÕ  
result
ÕÕ! '
[
ÕÕ' (
$num
ÕÕ( )
]
ÕÕ) *
;
ÕÕ* +
conform
ŒŒ 
=
ŒŒ 
BoolConverter
ŒŒ '
(
ŒŒ' (
conform
ŒŒ( /
)
ŒŒ/ 0
;
ŒŒ0 1
string
–– 
	valueText
––  
=
––! "
result
––# )
[
––) *
$num
––* +
]
––+ ,
;
––, -
if
—— 
(
—— 
string
—— 
.
—— 
IsNullOrEmpty
—— (
(
——( )
	valueText
——) 2
)
——2 3
)
——3 4
{
““ 
	valueText
”” 
=
”” 
$str
””  +
;
””+ ,
}
‘‘ 
string
’’ 
id
’’ 
=
’’ 
result
’’ "
[
’’" #
$num
’’# $
]
’’$ %
;
’’% &
string
◊◊ 
weight
◊◊ 
=
◊◊ 
result
◊◊  &
[
◊◊& '
$num
◊◊' (
]
◊◊( )
;
◊◊) *
if
ÿÿ 
(
ÿÿ 
filho
ÿÿ 
)
ÿÿ 
weight
ŸŸ 
=
ŸŸ 
tarefaFilha
ŸŸ (
.
ŸŸ( )
Weight
ŸŸ) /
.
ŸŸ/ 0
ToString
ŸŸ0 8
(
ŸŸ8 9
)
ŸŸ9 :
.
ŸŸ: ;
Replace
ŸŸ; B
(
ŸŸB C
$str
ŸŸC F
,
ŸŸF G
$str
ŸŸH K
)
ŸŸK L
;
ŸŸL M
weight
€€ 
=
€€  
DefaultValueReturn
€€ +
(
€€+ ,
weight
€€, 2
,
€€2 3
$str
€€4 7
)
€€7 8
;
€€8 9
string
›› 
name
›› 
=
›› 
result
›› $
[
››$ %
$num
››% &
]
››& '
;
››' (
string
ﬂﬂ 
intervalMin
ﬂﬂ "
=
ﬂﬂ# $
result
ﬂﬂ% +
[
ﬂﬂ+ ,
$num
ﬂﬂ, .
]
ﬂﬂ. /
;
ﬂﬂ/ 0
intervalMin
‡‡ 
=
‡‡  
DefaultValueReturn
‡‡ 0
(
‡‡0 1
intervalMin
‡‡1 <
,
‡‡< =
$str
‡‡> A
)
‡‡A B
;
‡‡B C
string
‚‚ 
intervalMax
‚‚ "
=
‚‚# $
result
‚‚% +
[
‚‚+ ,
$num
‚‚, .
]
‚‚. /
;
‚‚/ 0
intervalMax
„„ 
=
„„  
DefaultValueReturn
„„ 0
(
„„0 1
intervalMax
„„1 <
,
„„< =
$str
„„> A
)
„„A B
;
„„B C
string
ÂÂ 
isnotEvaluate
ÂÂ $
=
ÂÂ% &
result
ÂÂ' -
[
ÂÂ- .
$num
ÂÂ. 0
]
ÂÂ0 1
;
ÂÂ1 2
isnotEvaluate
ÊÊ 
=
ÊÊ  
DefaultValueReturn
ÊÊ  2
(
ÊÊ2 3
isnotEvaluate
ÊÊ3 @
,
ÊÊ@ A
$str
ÊÊB E
)
ÊÊE F
;
ÊÊF G
isnotEvaluate
ËË 
=
ËË 
BoolConverter
ËË  -
(
ËË- .
isnotEvaluate
ËË. ;
)
ËË; <
;
ËË< =
string
ÍÍ 
punishimentValue
ÍÍ '
=
ÍÍ( )
result
ÍÍ* 0
[
ÍÍ0 1
$num
ÍÍ1 3
]
ÍÍ3 4
;
ÍÍ4 5
punishimentValue
ÎÎ  
=
ÎÎ! " 
DefaultValueReturn
ÎÎ# 5
(
ÎÎ5 6
punishimentValue
ÎÎ6 F
,
ÎÎF G
$str
ÎÎH K
)
ÎÎK L
;
ÎÎL M
string
ÌÌ 
defects
ÌÌ 
=
ÌÌ  
result
ÌÌ! '
[
ÌÌ' (
$num
ÌÌ( *
]
ÌÌ* +
;
ÌÌ+ ,
string
 

evaluation
 !
=
" #
$str
$ '
;
' (
string
ÚÚ 
WeiEvaluation
ÚÚ $
=
ÚÚ% &
$str
ÚÚ' *
;
ÚÚ* +
if
ÛÛ 
(
ÛÛ 
result
ÛÛ 
.
ÛÛ 
Count
ÛÛ 
(
ÛÛ  
)
ÛÛ  !
>
ÛÛ" #
$num
ÛÛ$ &
)
ÛÛ& '
WeiEvaluation
ÙÙ !
=
ÙÙ" #
result
ÙÙ$ *
[
ÙÙ* +
$num
ÙÙ+ -
]
ÙÙ- .
.
ÙÙ. /
Replace
ÙÙ/ 6
(
ÙÙ6 7
$str
ÙÙ7 :
,
ÙÙ: ;
$str
ÙÙ< ?
)
ÙÙ? @
;
ÙÙ@ A
if
ˆˆ 
(
ˆˆ 
filho
ˆˆ 
)
ˆˆ 
WeiEvaluation
˜˜ !
=
˜˜" #
tarefaFilha
˜˜$ /
.
˜˜/ 0
Weight
˜˜0 6
.
˜˜6 7
ToString
˜˜7 ?
(
˜˜? @
)
˜˜@ A
.
˜˜A B
Replace
˜˜B I
(
˜˜I J
$str
˜˜J M
,
˜˜M N
$str
˜˜O R
)
˜˜R S
;
˜˜S T
string
˘˘ 

WeiDefects
˘˘ !
=
˘˘" #
$str
˘˘$ '
;
˘˘' (
if
˙˙ 
(
˙˙ 
result
˙˙ 
.
˙˙ 
Count
˙˙  
(
˙˙  !
)
˙˙! "
>
˙˙# $
$num
˙˙% '
)
˙˙' (

WeiDefects
˚˚ 
=
˚˚  
result
˚˚! '
[
˚˚' (
$num
˚˚( *
]
˚˚* +
.
˚˚+ ,
Replace
˚˚, 3
(
˚˚3 4
$str
˚˚4 7
,
˚˚7 8
$str
˚˚9 <
)
˚˚< =
;
˚˚= >
if
˝˝ 
(
˝˝ 
filho
˝˝ 
)
˝˝ 

WeiDefects
˛˛ 
=
˛˛  
(
˛˛! "
tarefaFilha
˛˛" -
.
˛˛- .
Weight
˛˛. 4
*
˛˛5 6
Decimal
˛˛7 >
.
˛˛> ?
Parse
˛˛? D
(
˛˛D E
defects
˛˛E L
)
˛˛L M
)
˛˛M N
.
˛˛N O
ToString
˛˛O W
(
˛˛W X
)
˛˛X Y
.
˛˛Y Z
Replace
˛˛Z a
(
˛˛a b
$str
˛˛b e
,
˛˛e f
$str
˛˛g j
)
˛˛j k
;
˛˛k l
id
ÜÜ 
=
ÜÜ  
DefaultValueReturn
ÜÜ '
(
ÜÜ' (
id
ÜÜ( *
,
ÜÜ* +
$str
ÜÜ, /
)
ÜÜ/ 0
;
ÜÜ0 1
if
àà 
(
àà 
Int64
àà 
.
àà 
Parse
àà 
(
àà  
id
àà  "
)
àà" #
==
àà$ &
$num
àà' (
)
àà( )
{
ââ 
var
ää 
r
ää 
=
ää 
Result_Level3DB
ää +
.
ää+ ,
get
ää, /
(
ää/ 0
Int32
ää0 5
.
ää5 6
Parse
ää6 ;
(
ää; <!
CollectionLevel02Id
ää< O
)
ääO P
,
ääP Q
Int32
ääR W
.
ääW X
Parse
ääX ]
(
ää] ^
	Level03Id
ää^ g
)
ääg h
)
ääh i
;
ääi j
if
ãã 
(
ãã 
r
ãã 
!=
ãã 
null
ãã !
)
ãã! "
{
åå 
id
çç 
=
çç 
r
çç 
.
çç 
Id
çç !
.
çç! "
ToString
çç" *
(
çç* +
)
çç+ ,
;
çç, -
}
éé 
}
èè 
naoAvaliado
ëë 
=
ëë 
true
ëë "
;
ëë" #
var
îî 
_WeiEvaluation
îî "
=
îî# $
GetWeiEvaluation
îî% 5
(
îî5 6
WeiEvaluation
îî6 C
,
îîC D!
CollectionLevel02Id
îîE X
)
îîX Y
;
îîY Z
if
ññ 
(
ññ 
id
ññ 
==
ññ 
$str
ññ 
)
ññ 
{
óó 
sql
òò 
+=
òò 
$stròò ä
+òòã å
$str
ôô $
+
ôô% &
$str
öö 
+
öö  !!
CollectionLevel02Id
öö" 5
+
öö6 7
$str
öö8 =
+
öö> ?
	Level03Id
öö@ I
+
ööJ K
$str
ööL R
+
ööS T
parLevel3List
ööU b
.
ööb c
FirstOrDefault
ööc q
(
ööq r
p
öör s
=>
ööt v
p
ööw x
.
ööx y
Id
ööy {
==
öö| ~
Convertöö Ü
.ööÜ á
ToInt32ööá é
(ööé è
	Level03Idööè ò
)ööò ô
)ööô ö
.ööö õ
Nameööõ ü
.ööü †
Replaceöö† ß
(ööß ®
$ströö® ´
,öö´ ¨
$ströö≠ ±
)öö± ≤
+öö≥ ¥
$strööµ π
+öö∫ ª
weightööº ¬
+öö√ ƒ
$ströö≈ »
+öö…  
intervalMinööÀ ÷
+öö◊ ÿ
$strööŸ ‹
+öö› ﬁ
intervalMaxööﬂ Í
+ööÎ Ï
$strööÌ Ò
+ööÚ Û
valueööÙ ˘
+öö˙ ˚
$ströö¸ Ä
+ööÅ Ç
	valueTextööÉ å
+ööç é
$strööè î
+ööï ñ
conformööó û
+ööü †
$ströö° ¶
+ööß ®
isnotEvaluateöö© ∂
+öö∑ ∏
$strööπ æ
+ööø ¿ 
punishimentValueöö¡ —
+öö“ ”
$ströö‘ ÿ
+ööŸ ⁄
defectsöö€ ‚
+öö„ ‰
$strööÂ È
+ööÍ Î

evaluationööÏ ˆ
+öö˜ ¯
$ströö˘ ˝
+öö˛ ˇ
_WeiEvaluationööÄ é
+ööè ê
$strööë ï
+ööñ ó

WeiDefectsööò ¢
+öö£ §
$ströö• ©
;öö© ™
sql
úú 
+=
úú 
$str
úú =
;
úú= >
}
ûû 
else
üü 
{
†† 
sql
°° 
+=
°° 
$str
°° ]
+
°°^ _
$str
¢¢ )
+
¢¢* +
conform
¢¢, 3
+
¢¢4 5
$str
¢¢6 ]
+
¢¢^ _
$str
££ -
+
££. /
isnotEvaluate
££0 =
+
££> ?
$str
££@ ]
+
££^ _
$str
§§ %
+
§§& '
value
§§( -
+
§§. /
$str
§§0 ]
+
§§^ _
$str
•• &
+
••' (
weight
••) /
+
••0 1
$str
••2 ]
+
••^ _
$str
¶¶ '
+
¶¶( )
defects
¶¶* 1
+
¶¶2 3
$str
¶¶4 ]
+
¶¶^ _
$str
ßß -
+
ßß. /
_WeiEvaluation
ßß0 >
+
ßß? @
$str
ßßA ^
+
ßß_ `
$str
®® *
+
®®+ ,

WeiDefects
®®- 7
+
®®8 9
$str
®®: ]
+
®®^ _
$str
©© )
+
©©* +
	valueText
©©, 5
+
©©6 7
$str
©©8 ]
+
©©^ _
$str
™™ (
+
™™) *
id
™™+ -
+
™™. /
$str
™™0 ]
;
™™] ^
sql
´´ 
+=
´´ 
$str
´´ &
+
´´' (
id
´´) +
+
´´, -
$str
´´. ?
;
´´? @
}
≠≠ 
if
ØØ 
(
ØØ 
isnotEvaluate
ØØ !
==
ØØ" $
$str
ØØ% (
)
ØØ( )
{
∞∞ 
naoAvaliado
±± 
=
±±  !
false
±±" '
;
±±' (
}
≤≤ 
}
¥¥ 
string
∂∂ 
conexao
∂∂ 
=
∂∂ 
System
∂∂ #
.
∂∂# $
Configuration
∂∂$ 1
.
∂∂1 2"
ConfigurationManager
∂∂2 F
.
∂∂F G
ConnectionStrings
∂∂G X
[
∂∂X Y
$str
∂∂Y j
]
∂∂j k
.
∂∂k l
ConnectionString
∂∂l |
;
∂∂| }
try
∑∑ 
{
∏∏ 
using
ππ 
(
ππ 
SqlConnection
ππ $

connection
ππ% /
=
ππ0 1
new
ππ2 5
SqlConnection
ππ6 C
(
ππC D
conexao
ππD K
)
ππK L
)
ππL M
{
∫∫ 
using
ªª 
(
ªª 

SqlCommand
ªª %
command
ªª& -
=
ªª. /
new
ªª0 3

SqlCommand
ªª4 >
(
ªª> ?
sql
ªª? B
,
ªªB C

connection
ªªD N
)
ªªN O
)
ªªO P
{
ºº 

connection
ΩΩ "
.
ΩΩ" #
Open
ΩΩ# '
(
ΩΩ' (
)
ΩΩ( )
;
ΩΩ) *
var
ææ 
i
ææ 
=
ææ 
Convert
ææ  '
.
ææ' (
ToInt32
ææ( /
(
ææ/ 0
command
ææ0 7
.
ææ7 8
ExecuteScalar
ææ8 E
(
ææE F
)
ææF G
)
ææG H
;
ææH I
if
¿¿ 
(
¿¿ 
i
¿¿ 
>
¿¿ 
$num
¿¿  !
)
¿¿! "
{
¡¡ 
return
ƒƒ "
i
ƒƒ# $
;
ƒƒ$ %
}
∆∆ 
else
«« 
{
»» 
return
   "
$num
  # $
;
  $ %
}
ÀÀ 
}
ÕÕ 
if
ŒŒ 
(
ŒŒ 

connection
ŒŒ "
.
ŒŒ" #
State
ŒŒ# (
==
ŒŒ) +
System
ŒŒ, 2
.
ŒŒ2 3
Data
ŒŒ3 7
.
ŒŒ7 8
ConnectionState
ŒŒ8 G
.
ŒŒG H
Open
ŒŒH L
)
ŒŒL M

connection
ŒŒN X
.
ŒŒX Y
Close
ŒŒY ^
(
ŒŒ^ _
)
ŒŒ_ `
;
ŒŒ` a
}
œœ 
}
–– 
catch
““ 
(
““ 
SqlException
““ 
ex
““  "
)
““" #
{
”” 
int
‘‘ 
	insertLog
‘‘ 
=
‘‘ 
insertLogJson
‘‘  -
(
‘‘- .
sql
‘‘. 1
,
‘‘1 2
ex
‘‘3 5
.
‘‘5 6
Message
‘‘6 =
,
‘‘= >
$str
‘‘? D
,
‘‘D E
$str
‘‘F K
,
‘‘K L
$str
‘‘M f
)
‘‘f g
;
‘‘g h
return
’’ 
$num
’’ 
;
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
ex
◊◊ 
)
◊◊  
{
ÿÿ 
int
ŸŸ 
	insertLog
ŸŸ 
=
ŸŸ 
insertLogJson
ŸŸ  -
(
ŸŸ- .
sql
ŸŸ. 1
,
ŸŸ1 2
ex
ŸŸ3 5
.
ŸŸ5 6
Message
ŸŸ6 =
,
ŸŸ= >
$str
ŸŸ? D
,
ŸŸD E
$str
ŸŸF K
,
ŸŸK L
$str
ŸŸM f
)
ŸŸf g
;
ŸŸg h
return
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
private
·· 
string
·· 
GetWeiEvaluation
·· '
(
··' (
string
··( .
WeiEvaluation
··/ <
,
··< =
string
··> D 
CollectionLevel2Id
··E W
)
··W X
{
‚‚ 	
string
„„ 
_WeiEvaluation2
„„ "
=
„„# $
WeiEvaluation
„„% 2
;
„„2 3
int
ÂÂ $
CollectionLevel2Id_int
ÂÂ &
=
ÂÂ' (
Int32
ÂÂ) .
.
ÂÂ. /
Parse
ÂÂ/ 4
(
ÂÂ4 5 
CollectionLevel2Id
ÂÂ5 G
)
ÂÂG H
;
ÂÂH I
decimal
ÁÁ #
WeiEvaluation_decimal
ÁÁ )
=
ÁÁ* +
decimal
ÁÁ, 3
.
ÁÁ3 4
Parse
ÁÁ4 9
(
ÁÁ9 :
WeiEvaluation
ÁÁ: G
)
ÁÁG H
;
ÁÁH I
using
ÈÈ 
(
ÈÈ 
var
ÈÈ 
databaseSgq
ÈÈ "
=
ÈÈ# $
new
ÈÈ% (
Dominio
ÈÈ) 0
.
ÈÈ0 1
SgqDbDevEntities
ÈÈ1 A
(
ÈÈA B
)
ÈÈB C
)
ÈÈC D
{
ÍÍ 
var
ÏÏ "
collectionLevel2_obj
ÏÏ (
=
ÏÏ) *
databaseSgq
ÏÏ+ 6
.
ÏÏ6 7
CollectionLevel2
ÏÏ7 G
.
ÏÏG H
FirstOrDefault
ÏÏH V
(
ÏÏV W
r
ÏÏW X
=>
ÏÏY [
r
ÏÏ\ ]
.
ÏÏ] ^
Id
ÏÏ^ `
==
ÏÏa c$
CollectionLevel2Id_int
ÏÏd z
)
ÏÏz {
;
ÏÏ{ |
var
ÓÓ 
parLeve1BEA
ÓÓ 
=
ÓÓ  !
databaseSgq
ÓÓ" -
.
ÓÓ- .0
"ParLevel1VariableProductionXLevel1
ÓÓ. P
.
ÓÓP Q
FirstOrDefault
ÓÓQ _
(
ÓÓ_ `
r
ÓÓ` a
=>
ÓÓb d
r
ÓÓe f
.
ÓÓf g
ParLevel1_Id
ÓÓg s
==
ÓÓt v#
collectionLevel2_objÓÓw ã
.ÓÓã å
ParLevel1_IdÓÓå ò
)ÓÓò ô
;ÓÓô ö
if
ÒÒ 
(
ÒÒ 
parLeve1BEA
ÒÒ 
!=
ÒÒ  "
null
ÒÒ# '
)
ÒÒ' (
if
ÚÚ 
(
ÚÚ 
parLeve1BEA
ÚÚ #
.
ÚÚ# $,
ParLevel1VariableProduction_Id
ÚÚ$ B
==
ÚÚC E
$num
ÚÚF G
)
ÚÚG H
{
ÛÛ 
var
ÙÙ #
collectionLevel2_obj2
ÙÙ 1
=
ÙÙ2 3
databaseSgq
ÙÙ4 ?
.
ÙÙ? @
CollectionLevel2
ÙÙ@ P
.
ÙÙP Q
Where
ÙÙQ V
(
ÙÙV W
r
ıı 
=>
ıı 
System
ıı #
.
ıı# $
Data
ıı$ (
.
ıı( )
Entity
ıı) /
.
ıı/ 0
DbFunctions
ıı0 ;
.
ıı; <
TruncateTime
ıı< H
(
ııH I
r
ııI J
.
ııJ K
CollectionDate
ııK Y
)
ııY Z
==
ıı[ ]
System
ıı^ d
.
ııd e
Data
ııe i
.
ııi j
Entity
ııj p
.
ııp q
DbFunctions
ııq |
.
ıı| }
TruncateTimeıı} â
(ııâ ä$
collectionLevel2_objııä û
.ııû ü
CollectionDateııü ≠
)ıı≠ Æ
&&ııØ ±
r
ˆˆ 
.
ˆˆ 
ParLevel1_Id
ˆˆ &
==
ˆˆ' )"
collectionLevel2_obj
ˆˆ* >
.
ˆˆ> ?
ParLevel1_Id
ˆˆ? K
&&
ˆˆL N
r
˜˜ 
.
˜˜ 
Shift
˜˜ 
==
˜˜  ""
collectionLevel2_obj
˜˜# 7
.
˜˜7 8
Shift
˜˜8 =
&&
˜˜> @
r
¯¯ 
.
¯¯ 
Period
¯¯  
==
¯¯! #"
collectionLevel2_obj
¯¯$ 8
.
¯¯8 9
Period
¯¯9 ?
&&
¯¯@ B
r
˘˘ 
.
˘˘ 
UnitId
˘˘  
==
˘˘! #"
collectionLevel2_obj
˘˘$ 8
.
˘˘8 9
UnitId
˘˘9 ?
&&
˘˘@ B
r
˙˙ 
.
˙˙ 
Sample
˙˙  
<
˙˙! ""
collectionLevel2_obj
˙˙# 7
.
˙˙7 8
Sample
˙˙8 >
)
˚˚ 
.
˚˚ 
OrderByDescending
˚˚ +
(
˚˚+ ,
r
˚˚, -
=>
˚˚. 0
r
˚˚1 2
.
˚˚2 3
Sample
˚˚3 9
)
˚˚9 :
.
˚˚: ;
FirstOrDefault
˚˚; I
(
˚˚I J
)
˚˚J K
;
˚˚K L
if
˛˛ 
(
˛˛ #
collectionLevel2_obj2
˛˛ 1
!=
˛˛2 4
null
˛˛5 9
)
˛˛9 :
_WeiEvaluation2
ÄÄ +
=
ÄÄ, -
(
ÄÄ. /"
collectionLevel2_obj
ÄÄ/ C
.
ÄÄC D
Sample
ÄÄD J
-
ÄÄK L#
collectionLevel2_obj2
ÄÄM b
.
ÄÄb c
Sample
ÄÄc i
)
ÄÄi j
.
ÄÄj k
ToString
ÄÄk s
(
ÄÄs t
)
ÄÄt u
;
ÄÄu v
else
ÇÇ 
_WeiEvaluation2
ÉÉ +
=
ÉÉ, -
(
ÉÉ. /"
collectionLevel2_obj
ÉÉ/ C
.
ÉÉC D
Sample
ÉÉD J
)
ÉÉJ K
.
ÉÉK L
ToString
ÉÉL T
(
ÉÉT U
)
ÉÉU V
;
ÉÉV W
}
ÖÖ 
return
áá 
_WeiEvaluation2
áá &
;
áá& '
}
àà 
}
ââ 	
public
ùù 
int
ùù $
correctiveActionInsert
ùù )
(
ùù) *
string
ùù* 0
	AuditorId
ùù1 :
,
ùù: ;
string
ùù< B!
CollectionLevel02Id
ùùC V
,
ùùV W
string
ùùX ^
SlaughterId
ùù_ j
,
ùùj k
string
ùùl r
TechinicalId
ùùs 
,ùù Ä
stringùùÅ á!
DateTimeSlaughterùùà ô
,ùùô ö
stringùùõ °"
DateTimeTechinicalùù¢ ¥
,ùù¥ µ
stringùù∂ º$
DateCorrectiveActionùùΩ —
,ùù— “
stringùù” Ÿ
AuditStartTimeùù⁄ Ë
,ùùË È
stringùùÍ "
DescriptionFailureùùÒ É
,ùùÉ Ñ
stringùùÖ ã)
ImmediateCorrectiveActionùùå •
,ùù• ¶
stringùùß ≠"
ProductDispositionùùÆ ¿
,ùù¿ ¡
stringùù¬ »#
PreventativeMeasureùù… ‹
)ùù‹ ›
{
ûû 	
DateTime
†† 
SlaughterDateTime
†† &
=
††' ( 
DateCollectConvert
††) ;
(
††; <
DateTimeSlaughter
††< M
)
††M N
;
††N O
DateTimeSlaughter
°° 
=
°° 
SlaughterDateTime
°°  1
.
°°1 2
ToString
°°2 :
(
°°: ;
$str
°°; P
)
°°P Q
;
°°Q R
DateTime
££  
TechinicalDateTime
££ '
=
££( ) 
DateCollectConvert
££* <
(
££< = 
DateTimeTechinical
££= O
)
££O P
;
££P Q 
DateTimeTechinical
§§ 
=
§§   
TechinicalDateTime
§§! 3
.
§§3 4
ToString
§§4 <
(
§§< =
$str
§§= R
)
§§R S
;
§§S T
DateTime
¶¶ "
CorrectiveActionDate
¶¶ )
=
¶¶* + 
DateCollectConvert
¶¶, >
(
¶¶> ?"
DateCorrectiveAction
¶¶? S
)
¶¶S T
;
¶¶T U"
DateCorrectiveAction
ßß  
=
ßß! ""
CorrectiveActionDate
ßß# 7
.
ßß7 8
ToString
ßß8 @
(
ßß@ A
$str
ßßA V
)
ßßV W
;
ßßW X
DateTime
©© 
StartTimeAudit
©© #
=
©©$ % 
DateCollectConvert
©©& 8
(
©©8 9
AuditStartTime
©©9 G
)
©©G H
;
©©H I
AuditStartTime
™™ 
=
™™ 
StartTimeAudit
™™ +
.
™™+ ,
ToString
™™, 4
(
™™4 5
$str
™™5 J
)
™™J K
;
™™K L
string
≠≠ 
sql
≠≠ 
=
≠≠ 
$str≠≠ º
+≠≠Ω æ
$str
ÆÆ "
+
ÆÆ# $
$str
ØØ 
+
ØØ 
	AuditorId
ØØ  )
+
ØØ* +
$str
ØØ, 1
+
ØØ2 3!
CollectionLevel02Id
ØØ4 G
+
ØØH I
$str
ØØJ O
+
ØØP Q
SlaughterId
ØØR ]
+
ØØ^ _
$str
ØØ` e
+
ØØf g
TechinicalId
ØØh t
+
ØØu v
$strØØw Ç
+ØØÉ Ñ!
DateTimeSlaughterØØÖ ñ
+ØØó ò
$strØØô ±
+ØØ≤ ≥"
DateTimeTechinicalØØ¥ ∆
+ØØ« »
$strØØ… 
+ØØÒ Ú$
DateCorrectiveActionØØÛ á
+ØØà â
$strØØä ¢
+ØØ£ §
AuditStartTimeØØ• ≥
+ØØ¥ µ
$strØØ∂ »
+ØØ…  "
DescriptionFailureØØÀ ›
+ØØﬁ ﬂ
$strØØ‡ Â
+ØØÊ Á)
ImmediateCorrectiveActionØØË Å
+ØØÇ É
$strØØÑ â
+ØØä ã"
ProductDispositionØØå û
+ØØü †
$strØØ° ¶
+ØØß ®#
PreventativeMeasureØØ© º
+ØØΩ æ
$strØØø √
;ØØ√ ƒ
string
∞∞ 
conexao
∞∞ 
=
∞∞ 
System
∞∞ #
.
∞∞# $
Configuration
∞∞$ 1
.
∞∞1 2"
ConfigurationManager
∞∞2 F
.
∞∞F G
ConnectionStrings
∞∞G X
[
∞∞X Y
$str
∞∞Y j
]
∞∞j k
.
∞∞k l
ConnectionString
∞∞l |
;
∞∞| }
try
±± 
{
≤≤ 
using
≥≥ 
(
≥≥ 
SqlConnection
≥≥ $

connection
≥≥% /
=
≥≥0 1
new
≥≥2 5
SqlConnection
≥≥6 C
(
≥≥C D
conexao
≥≥D K
)
≥≥K L
)
≥≥L M
{
¥¥ 
using
µµ 
(
µµ 

SqlCommand
µµ %
command
µµ& -
=
µµ. /
new
µµ0 3

SqlCommand
µµ4 >
(
µµ> ?
sql
µµ? B
,
µµB C

connection
µµD N
)
µµN O
)
µµO P
{
∂∂ 

connection
∑∑ "
.
∑∑" #
Open
∑∑# '
(
∑∑' (
)
∑∑( )
;
∑∑) *
var
∏∏ 
i
∏∏ 
=
∏∏ 
Convert
∏∏  '
.
∏∏' (
ToInt32
∏∏( /
(
∏∏/ 0
command
∏∏0 7
.
∏∏7 8
ExecuteNonQuery
∏∏8 G
(
∏∏G H
)
∏∏H I
)
∏∏I J
;
∏∏J K
if
∫∫ 
(
∫∫ 
i
∫∫ 
>
∫∫ 
$num
∫∫  !
)
∫∫! "
{
ªª 
return
ºº "
i
ºº# $
;
ºº$ %
}
ΩΩ 
else
ææ 
{
øø 
return
¡¡ "
$num
¡¡# $
;
¡¡$ %
}
¬¬ 
}
√√ 
if
ƒƒ 
(
ƒƒ 

connection
ƒƒ "
.
ƒƒ" #
State
ƒƒ# (
==
ƒƒ) +
System
ƒƒ, 2
.
ƒƒ2 3
Data
ƒƒ3 7
.
ƒƒ7 8
ConnectionState
ƒƒ8 G
.
ƒƒG H
Open
ƒƒH L
)
ƒƒL M

connection
ƒƒN X
.
ƒƒX Y
Close
ƒƒY ^
(
ƒƒ^ _
)
ƒƒ_ `
;
ƒƒ` a
}
≈≈ 
}
∆∆ 
catch
»» 
(
»» 
SqlException
»» 
ex
»»  "
)
»»" #
{
…… 
int
   
	insertLog
   
=
   
insertLogJson
    -
(
  - .
sql
  . 1
,
  1 2
ex
  3 5
.
  5 6
Message
  6 =
,
  = >
$str
  ? D
,
  D E
$str
  F K
,
  K L
$str
  M e
)
  e f
;
  f g
throw
ÀÀ 
ex
ÀÀ 
;
ÀÀ 
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
ex
ÕÕ 
)
ÕÕ  
{
ŒŒ 
int
œœ 
	insertLog
œœ 
=
œœ 
insertLogJson
œœ  -
(
œœ- .
sql
œœ. 1
,
œœ1 2
ex
œœ3 5
.
œœ5 6
Message
œœ6 =
,
œœ= >
$str
œœ? D
,
œœD E
$str
œœF K
,
œœK L
$str
œœM e
)
œœe f
;
œœf g
throw
–– 
ex
–– 
;
–– 
}
—— 
}
““ 	
public
ŸŸ 
string
ŸŸ "
GetMaxDateCollection
ŸŸ *
(
ŸŸ* +
DateTime
ŸŸ+ 3
date
ŸŸ4 8
)
ŸŸ8 9
{
⁄⁄ 	
string
€€ 
sql
€€ 
=
€€ 
$str
€€ y
+
€€z {
date€€| Ä
.€€Ä Å
ToString€€Å â
(€€â ä
$str€€ä î
)€€î ï
+€€ñ ó
$str€€ò ª
;€€ª º
string
›› 
conexao
›› 
=
›› 
System
›› #
.
››# $
Configuration
››$ 1
.
››1 2"
ConfigurationManager
››2 F
.
››F G
ConnectionStrings
››G X
[
››X Y
$str
››Y j
]
››j k
.
››k l
ConnectionString
››l |
;
››| }
try
ﬁﬁ 
{
ﬂﬂ 
using
‡‡ 
(
‡‡ 
SqlConnection
‡‡ $

connection
‡‡% /
=
‡‡0 1
new
‡‡2 5
SqlConnection
‡‡6 C
(
‡‡C D
conexao
‡‡D K
)
‡‡K L
)
‡‡L M
{
·· 
using
‚‚ 
(
‚‚ 

SqlCommand
‚‚ %
command
‚‚& -
=
‚‚. /
new
‚‚0 3

SqlCommand
‚‚4 >
(
‚‚> ?
sql
‚‚? B
,
‚‚B C

connection
‚‚D N
)
‚‚N O
)
‚‚O P
{
„„ 

connection
‰‰ "
.
‰‰" #
Open
‰‰# '
(
‰‰' (
)
‰‰( )
;
‰‰) *
using
ÂÂ 
(
ÂÂ 
SqlDataReader
ÂÂ ,
r
ÂÂ- .
=
ÂÂ/ 0
command
ÂÂ1 8
.
ÂÂ8 9
ExecuteReader
ÂÂ9 F
(
ÂÂF G
)
ÂÂG H
)
ÂÂH I
{
ÊÊ 
DateTime
ÁÁ $
UltimaDataColeta
ÁÁ% 5
=
ÁÁ6 7
date
ÁÁ8 <
;
ÁÁ< =
if
ËË 
(
ËË  
r
ËË  !
.
ËË! "
Read
ËË" &
(
ËË& '
)
ËË' (
)
ËË( )
{
ÈÈ 
UltimaDataColeta
ÍÍ  0
=
ÍÍ1 2
Convert
ÍÍ3 :
.
ÍÍ: ;

ToDateTime
ÍÍ; E
(
ÍÍE F
r
ÍÍF G
[
ÍÍG H
$num
ÍÍH I
]
ÍÍI J
)
ÍÍJ K
;
ÍÍK L
}
ÎÎ 
return
ÏÏ "
UltimaDataColeta
ÏÏ# 3
.
ÏÏ3 4
ToString
ÏÏ4 <
(
ÏÏ< =
$str
ÏÏ= G
)
ÏÏG H
;
ÏÏH I
}
ÌÌ 
}
ÓÓ 
if
ÔÔ 
(
ÔÔ 

connection
ÔÔ "
.
ÔÔ" #
State
ÔÔ# (
==
ÔÔ) +
System
ÔÔ, 2
.
ÔÔ2 3
Data
ÔÔ3 7
.
ÔÔ7 8
ConnectionState
ÔÔ8 G
.
ÔÔG H
Open
ÔÔH L
)
ÔÔL M

connection
ÔÔN X
.
ÔÔX Y
Close
ÔÔY ^
(
ÔÔ^ _
)
ÔÔ_ `
;
ÔÔ` a
}
 
}
ÒÒ 
catch
ÛÛ 
(
ÛÛ 
SqlException
ÛÛ 
ex
ÛÛ  "
)
ÛÛ" #
{
ÙÙ 
int
ıı 
	insertLog
ıı 
=
ıı 
insertLogJson
ıı  -
(
ıı- .
sql
ıı. 1
,
ıı1 2
ex
ıı3 5
.
ıı5 6
Message
ıı6 =
,
ıı= >
$str
ıı? D
,
ııD E
$str
ııF K
,
ııK L
$str
ııM c
)
ııc d
;
ııd e
return
ˆˆ 
null
ˆˆ 
;
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
ex
¯¯ 
)
¯¯  
{
˘˘ 
int
˙˙ 
	insertLog
˙˙ 
=
˙˙ 
insertLogJson
˙˙  -
(
˙˙- .
sql
˙˙. 1
,
˙˙1 2
ex
˙˙3 5
.
˙˙5 6
Message
˙˙6 =
,
˙˙= >
$str
˙˙? D
,
˙˙D E
$str
˙˙F K
,
˙˙K L
$str
˙˙M c
)
˙˙c d
;
˙˙d e
return
˚˚ 
null
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
[
ÑÑ 	
	WebMethod
ÑÑ	 
]
ÑÑ 
public
ÖÖ 
string
ÖÖ 

reciveData
ÖÖ  
(
ÖÖ  !
string
ÖÖ! '
	unidadeId
ÖÖ( 1
,
ÖÖ1 2
string
ÖÖ3 9
data
ÖÖ: >
)
ÖÖ> ?
{
ÜÜ 	
DateTime
áá 
dataConsolidation
áá &
=
áá' ( 
DateCollectConvert
áá) ;
(
áá; <
data
áá< @
)
áá@ A
;
ááA B
string
àà 
consolidation
àà  
=
àà! "
getConsolidation
àà# 3
(
àà3 4
	unidadeId
àà4 =
,
àà= >
dataConsolidation
àà? P
,
ààP Q
$num
ààR S
)
ààS T
;
ààT U
return
ââ 
consolidation
ââ  
;
ââ  !
}
ää 	
[
ãã 	
	WebMethod
ãã	 
]
ãã 
public
åå 
string
åå  
reciveDataByLevel1
åå (
(
åå( )
string
åå) /
ParCompany_Id
åå0 =
,
åå= >
string
åå? E
data
ååF J
,
ååJ K
string
ååL R
ParLevel1_Id
ååS _
)
åå_ `
{
çç 	
DateTime
éé 
dataConsolidation
éé &
=
éé' ( 
DateCollectConvert
éé) ;
(
éé; <
data
éé< @
)
éé@ A
;
ééA B
string
èè 
consolidation
èè  
=
èè! "
getConsolidation
èè# 3
(
èè3 4
ParCompany_Id
èè4 A
,
èèA B
dataConsolidation
èèC T
,
èèT U
Convert
èèV ]
.
èè] ^
ToInt32
èè^ e
(
èèe f
ParLevel1_Id
èèf r
)
èèr s
)
èès t
;
èèt u
return
êê 
consolidation
êê  
;
êê  !
}
ëë 	
public
   
static
   
void
   
getFrequencyDate
   +
(
  + ,
int
  , /
ParFrequency_Id
  0 ?
,
  ? @
DateTime
  A I
data
  J N
,
  N O
ref
  P S
string
  T Z

dataInicio
  [ e
,
  e f
ref
  g j
string
  k q
dataFim
  r y
)
  y z
{
ÀÀ 	
DateTime
ÕÕ 
periodoInicio
ÕÕ "
=
ÕÕ# $
data
ÕÕ% )
;
ÕÕ) *
DateTime
ŒŒ 

periodoFim
ŒŒ 
=
ŒŒ  !
data
ŒŒ" &
;
ŒŒ& '
switch
–– 
(
–– 
ParFrequency_Id
–– #
)
––# $
{
—— 
case
““ 
$num
““ 
:
““ 
break
”” 
;
”” 
case
‘‘ 
$num
‘‘ 
:
‘‘ 
break
’’ 
;
’’ 
case
÷÷ 
$num
÷÷ 
:
÷÷ 
periodoInicio
◊◊ !
=
◊◊" #
data
◊◊$ (
;
◊◊( )

periodoFim
ÿÿ 
=
ÿÿ  
periodoInicio
ÿÿ! .
;
ÿÿ. /
break
ŸŸ 
;
ŸŸ 
case
⁄⁄ 
$num
⁄⁄ 
:
⁄⁄ 
int
‹‹ 
numeroMenor
‹‹ #
=
‹‹$ %
$num
‹‹& '
,
‹‹' (
numeroMaior
‹‹) 4
=
‹‹5 6
$num
‹‹7 8
;
‹‹8 9
periodoInicio
›› !
=
››" #
data
››$ (
.
››( )
AddDays
››) 0
(
››0 1
numeroMenor
››1 <
-
››= >
data
››? C
.
››C D
	DayOfWeek
››D M
.
››M N
GetHashCode
››N Y
(
››Y Z
)
››Z [
)
››[ \
;
››\ ]

periodoFim
ﬁﬁ 
=
ﬁﬁ  
data
ﬁﬁ! %
.
ﬁﬁ% &
AddDays
ﬁﬁ& -
(
ﬁﬁ- .
numeroMaior
ﬁﬁ. 9
-
ﬁﬁ: ;
data
ﬁﬁ< @
.
ﬁﬁ@ A
	DayOfWeek
ﬁﬁA J
.
ﬁﬁJ K
GetHashCode
ﬁﬁK V
(
ﬁﬁV W
)
ﬁﬁW X
)
ﬁﬁX Y
;
ﬁﬁY Z
break
ﬂﬂ 
;
ﬂﬂ 
case
‡‡ 
$num
‡‡ 
:
‡‡ 
periodoInicio
·· !
=
··" #
new
··$ '
DateTime
··( 0
(
··0 1
data
··1 5
.
··5 6
Year
··6 :
,
··: ;
data
··< @
.
··@ A
Month
··A F
,
··F G
$num
··H I
)
··I J
;
··J K

periodoFim
‚‚ 
=
‚‚  
new
‚‚! $
DateTime
‚‚% -
(
‚‚- .
data
‚‚. 2
.
‚‚2 3
Year
‚‚3 7
,
‚‚7 8
data
‚‚9 =
.
‚‚= >
Month
‚‚> C
,
‚‚C D
$num
‚‚E G
)
‚‚G H
;
‚‚H I
if
ÈÈ 
(
ÈÈ 
data
ÈÈ 
.
ÈÈ 
Day
ÈÈ  
>
ÈÈ! "
$num
ÈÈ# %
)
ÈÈ% &
{
ÍÍ 

periodoFim
ÎÎ "
=
ÎÎ# $
periodoInicio
ÎÎ% 2
.
ÎÎ2 3
	AddMonths
ÎÎ3 <
(
ÎÎ< =
$num
ÎÎ= >
)
ÎÎ> ?
.
ÎÎ? @
AddDays
ÎÎ@ G
(
ÎÎG H
-
ÎÎH I
$num
ÎÎI J
)
ÎÎJ K
;
ÎÎK L
periodoInicio
ÏÏ %
=
ÏÏ& '
new
ÏÏ( +
DateTime
ÏÏ, 4
(
ÏÏ4 5
data
ÏÏ5 9
.
ÏÏ9 :
Year
ÏÏ: >
,
ÏÏ> ?
data
ÏÏ@ D
.
ÏÏD E
Month
ÏÏE J
,
ÏÏJ K
$num
ÏÏL N
)
ÏÏN O
;
ÏÏO P
}
ÌÌ 
break
ÓÓ 
;
ÓÓ 
case
ÔÔ 
$num
ÔÔ 
:
ÔÔ 
periodoInicio
 !
=
" #
new
$ '
DateTime
( 0
(
0 1
data
1 5
.
5 6
Year
6 :
,
: ;
data
< @
.
@ A
Month
A F
,
F G
$num
H I
)
I J
;
J K

periodoFim
ÒÒ 
=
ÒÒ  
periodoInicio
ÒÒ! .
.
ÒÒ. /
	AddMonths
ÒÒ/ 8
(
ÒÒ8 9
$num
ÒÒ9 :
)
ÒÒ: ;
.
ÒÒ; <
AddDays
ÒÒ< C
(
ÒÒC D
-
ÒÒD E
$num
ÒÒE F
)
ÒÒF G
;
ÒÒG H
break
ÛÛ 
;
ÛÛ 
default
ÙÙ 
:
ÙÙ 
break
ıı 
;
ıı 
}
ˆˆ 

dataInicio
¯¯ 
=
¯¯ 
periodoInicio
¯¯ &
.
¯¯& '
ToString
¯¯' /
(
¯¯/ 0
$str
¯¯0 :
)
¯¯: ;
;
¯¯; <
dataFim
˘˘ 
=
˘˘ 

periodoFim
˘˘  
.
˘˘  !
ToString
˘˘! )
(
˘˘) *
$str
˘˘* 4
)
˘˘4 5
;
˘˘5 6
}
˚˚ 	
public
¸¸ 
string
¸¸ 
_getConsolidation
¸¸ '
(
¸¸' (
string
¸¸( .
ParCompany_Id
¸¸/ <
,
¸¸< =
DateTime
¸¸> F
data
¸¸G K
,
¸¸K L
int
¸¸M P
ParLevel1_Id
¸¸Q ]
)
¸¸] ^
{
˛˛ 	
string
ÄÄ 
clusterDaUnidade
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& )
;
ÄÄ) *
string
ÇÇ 
sql
ÇÇ 
=
ÇÇ 
$str
ÇÇ D
+
ÇÇE F
$str
ÉÉ G
+
ÉÉH I
$str
ÑÑ 8
+
ÑÑ9 :
$str
ÖÖ @
+
ÖÖA B
$str
ÜÜ 9
+
ÜÜ: ;
$str
áá *
+
áá+ ,
ParCompany_Id
áá- :
+
áá; <
$str
àà 0
+
àà1 2
$str
ââ .
;
ââ. /
string
ãã 
conexao
ãã 
=
ãã 
System
ãã #
.
ãã# $
Configuration
ãã$ 1
.
ãã1 2"
ConfigurationManager
ãã2 F
.
ããF G
ConnectionStrings
ããG X
[
ããX Y
$str
ããY j
]
ããj k
.
ããk l
ConnectionString
ããl |
;
ãã| }
try
åå 
{
çç 
using
éé 
(
éé 
SqlConnection
éé $

connection
éé% /
=
éé0 1
new
éé2 5
SqlConnection
éé6 C
(
ééC D
conexao
ééD K
)
ééK L
)
ééL M
{
èè 
using
êê 
(
êê 

SqlCommand
êê %
command
êê& -
=
êê. /
new
êê0 3

SqlCommand
êê4 >
(
êê> ?
sql
êê? B
,
êêB C

connection
êêD N
)
êêN O
)
êêO P
{
ëë 

connection
íí "
.
íí" #
Open
íí# '
(
íí' (
)
íí( )
;
íí) *
using
ìì 
(
ìì 
SqlDataReader
ìì ,
r
ìì- .
=
ìì/ 0
command
ìì1 8
.
ìì8 9
ExecuteReader
ìì9 F
(
ììF G
)
ììG H
)
ììH I
{
îî 
if
ññ 
(
ññ  
r
ññ  !
.
ññ! "
Read
ññ" &
(
ññ& '
)
ññ' (
)
ññ( )
{
óó 
clusterDaUnidade
òò  0
=
òò1 2
r
òò3 4
[
òò4 5
$num
òò5 6
]
òò6 7
.
òò7 8
ToString
òò8 @
(
òò@ A
)
òòA B
;
òòB C
}
ôô 
}
õõ 
}
úú 
if
ùù 
(
ùù 

connection
ùù "
.
ùù" #
State
ùù# (
==
ùù) +
System
ùù, 2
.
ùù2 3
Data
ùù3 7
.
ùù7 8
ConnectionState
ùù8 G
.
ùùG H
Open
ùùH L
)
ùùL M

connection
ùùN X
.
ùùX Y
Close
ùùY ^
(
ùù^ _
)
ùù_ `
;
ùù` a
}
ûû 
}
üü 
catch
°° 
(
°° 
	Exception
°° 
ex
°° 
)
°°  
{
¢¢ 
int
££ 
	insertLog
££ 
=
££ 
insertLogJson
££  -
(
££- .
sql
££. 1
,
££1 2
ex
££3 5
.
££5 6
Message
££6 =
,
££= >
$str
££? D
,
££D E
$str
££F K
,
££K L
$str
££M \
)
££\ ]
;
££] ^
}
§§ 
var
ßß 3
%ParLevel1ConsolidationXParFrequencyDB
ßß 5
=
ßß6 7
new
ßß8 ;
SGQDBContext
ßß< H
.
ßßH I1
#ParLevel1ConsolidationXParFrequency
ßßI l
(
ßßl m
db
ßßm o
)
ßßo p
;
ßßp q
var
©© 1
#parLevel1ConsolidationXParFrequency
©© 3
=
©©4 53
%ParLevel1ConsolidationXParFrequencyDB
©©6 [
.
©©[ \
getList
©©\ c
(
©©c d
Convert
©©d k
.
©©k l
ToInt32
©©l s
(
©©s t
ParCompany_Id©©t Å
)©©Å Ç
,©©Ç É
data©©Ñ à
)©©à â
;©©â ä
string
´´ 
Results
´´ 
=
´´ 
null
´´ !
;
´´! "
if
≠≠ 
(
≠≠ 
ParLevel1_Id
≠≠ 
>
≠≠ 
$num
≠≠  
)
≠≠  !
{
ÆÆ 1
#parLevel1ConsolidationXParFrequency
ØØ 3
=
ØØ4 51
#parLevel1ConsolidationXParFrequency
ØØ6 Y
.
ØØY Z
Where
ØØZ _
(
ØØ_ `
p
ØØ` a
=>
ØØb d
p
ØØe f
.
ØØf g
ParLevel1_Id
ØØg s
==
ØØt v
ParLevel1_IdØØw É
)ØØÉ Ñ
;ØØÑ Ö
}
∞∞ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
c
¥¥ 
in
¥¥ 1
#parLevel1ConsolidationXParFrequency
¥¥ A
)
¥¥A B
{
µµ 
string
∏∏ 

dataInicio
∏∏ !
=
∏∏" #
null
∏∏$ (
;
∏∏( )
string
ππ 
dataFim
ππ 
=
ππ  
null
ππ! %
;
ππ% &
getFrequencyDate
ææ  
(
ææ  !
c
ææ! "
.
ææ" #
ParFrequency_Id
ææ# 2
,
ææ2 3
data
ææ4 8
,
ææ8 9
ref
ææ: =

dataInicio
ææ> H
,
ææH I
ref
ææJ M
dataFim
ææN U
)
ææU V
;
ææV W
var
¡¡ 
Level2ResultDB
¡¡ "
=
¡¡# $
new
¡¡% (
SGQDBContext
¡¡) 5
.
¡¡5 6
Level2Result
¡¡6 B
(
¡¡B C
db
¡¡C E
)
¡¡E F
;
¡¡F G
var
¬¬ 
Level2ResultList
¬¬ $
=
¬¬% &
Level2ResultDB
¬¬' 5
.
¬¬5 6
getList
¬¬6 =
(
¬¬= >
c
¬¬> ?
.
¬¬? @
ParLevel1_Id
¬¬@ L
,
¬¬L M
Convert
¬¬N U
.
¬¬U V
ToInt32
¬¬V ]
(
¬¬] ^
ParCompany_Id
¬¬^ k
)
¬¬k l
,
¬¬l m

dataInicio
¬¬n x
,
¬¬x y
dataFim¬¬z Å
)¬¬Å Ç
;¬¬Ç É
string
≈≈ 
dataInicio_Level2
≈≈ (
=
≈≈) *
null
≈≈+ /
;
≈≈/ 0
string
∆∆ 
dataFim_Level2
∆∆ %
=
∆∆& '
null
∆∆( ,
;
∆∆, -
foreach
   
(
   
var
   
Level2Result
   )
in
  * ,
Level2ResultList
  - =
)
  = >
{
ÀÀ 
var
ŒŒ 
_level2
ŒŒ 
=
ŒŒ  !
new
ŒŒ" %
Dominio
ŒŒ& -
.
ŒŒ- .
	ParLevel2
ŒŒ. 7
(
ŒŒ7 8
)
ŒŒ8 9
;
ŒŒ9 :
using
œœ 
(
œœ 
var
œœ 
db
œœ !
=
œœ" #
new
œœ$ '
Dominio
œœ( /
.
œœ/ 0
SgqDbDevEntities
œœ0 @
(
œœ@ A
)
œœA B
)
œœB C
{
–– 
_level2
—— 
=
——  !
db
——" $
.
——$ %
	ParLevel2
——% .
.
——. /
FirstOrDefault
——/ =
(
——= >
r
——> ?
=>
——@ B
Level2Result
——C O
.
——O P
ParLevel2_Id
——P \
==
——] _
r
——` a
.
——a b
Id
——b d
)
——d e
;
——e f
}
““ 
var
‘‘  
frequenciaDoLevel2
‘‘ *
=
‘‘+ ,
_level2
‘‘- 4
.
‘‘4 5
ParFrequency_Id
‘‘5 D
;
‘‘D E
if
ﬂﬂ 
(
ﬂﬂ 
GlobalConfig
ﬂﬂ $
.
ﬂﬂ$ %
Brasil
ﬂﬂ% +
)
ﬂﬂ+ ,
{
‡‡ 
if
·· 
(
·· 
c
·· 
.
·· 
ParLevel1_Id
·· *
==
··+ -
$num
··. 0
)
··0 1
{
‚‚  
frequenciaDoLevel2
„„ .
=
„„/ 0
clusterDaUnidade
„„1 A
==
„„B D
$str
„„E H
?
„„I J
$num
„„K L
:
„„M N
$num
„„O P
;
„„P Q
}
‰‰ 
}
ÂÂ 
getFrequencyDate
ËË $
(
ËË$ % 
frequenciaDoLevel2
ËË% 7
,
ËË7 8
Level2Result
ËË9 E
.
ËËE F
CollectionDate
ËËF T
,
ËËT U
ref
ËËV Y
dataInicio_Level2
ËËZ k
,
ËËk l
ref
ËËm p
dataFim_Level2
ËËq 
)ËË Ä
;ËËÄ Å
if
ÔÔ 
(
ÔÔ 
int
 
.
 
Parse
  
(
  !
data
! %
.
% &
ToString
& .
(
. /
$str
/ 9
)
9 :
)
: ;
>=
< >
int
? B
.
B C
Parse
C H
(
H I
dataInicio_Level2
I Z
)
Z [
&&
ÒÒ 
int
ÚÚ 
.
ÚÚ 
Parse
ÚÚ  
(
ÚÚ  !
data
ÚÚ! %
.
ÚÚ% &
ToString
ÚÚ& .
(
ÚÚ. /
$str
ÚÚ/ 9
)
ÚÚ9 :
)
ÚÚ: ;
<=
ÚÚ< >
int
ÚÚ? B
.
ÚÚB C
Parse
ÚÚC H
(
ÚÚH I
dataFim_Level2
ÚÚI W
)
ÚÚW X
)
ÛÛ 
{
ÙÙ 
var
˜˜ '
ConsolidationResultL1L2DB
˜˜ 5
=
˜˜6 7
new
˜˜8 ;
SGQDBContext
˜˜< H
.
˜˜H I%
ConsolidationResultL1L2
˜˜I `
(
˜˜` a
db
˜˜a c
)
˜˜c d
;
˜˜d e
var
¯¯ %
consolidationResultL1L2
¯¯ 3
=
¯¯4 5'
ConsolidationResultL1L2DB
¯¯6 O
.
¯¯O P
getConsolidation
¯¯P `
(
¯¯` a
Level2Result
¯¯a m
.
¯¯m n
ParLevel2_Id
¯¯n z
,
¯¯z {
Level2Result¯¯| à
.¯¯à â
Unit_Id¯¯â ê
,¯¯ê ë
c¯¯í ì
.¯¯ì î
Id¯¯î ñ
)¯¯ñ ó
;¯¯ó ò
var
¸¸ %
lastSampleConsolidation
¸¸ 3
=
¸¸4 5
Level2ResultDB
¸¸6 D
.
¸¸D E
getMaxSampe
¸¸E P
(
¸¸P Q
Level2Result
¸¸Q ]
.
¸¸] ^$
ConsolidationLevel2_Id
¸¸^ t
,
¸¸t u
Level2Result¸¸v Ç
.¸¸Ç É
EvaluateLast¸¸É è
)¸¸è ê
;¸¸ê ë
Level2Result
˛˛ $
.
˛˛$ %

SampleLast
˛˛% /
=
˛˛0 1%
lastSampleConsolidation
˛˛2 I
;
˛˛I J
string
ÄÄ 
partialResults
ÄÄ -
=
ÄÄ. /
null
ÄÄ0 4
;
ÄÄ4 5
if
ÅÅ 
(
ÅÅ 
c
ÅÅ 
.
ÅÅ 
IsPartialSave
ÅÅ +
==
ÅÅ, .
true
ÅÅ/ 3
)
ÅÅ3 4
{
ÇÇ 
var
ÑÑ 
ParLevel1DB
ÑÑ  +
=
ÑÑ, -
new
ÑÑ. 1
SGQDBContext
ÑÑ2 >
.
ÑÑ> ?
	ParLevel1
ÑÑ? H
(
ÑÑH I
db
ÑÑI K
)
ÑÑK L
;
ÑÑL M
var
ÖÖ 
	parLevel1
ÖÖ  )
=
ÖÖ* +
ParLevel1DB
ÖÖ, 7
.
ÖÖ7 8
getById
ÖÖ8 ?
(
ÖÖ? @
Level2Result
ÖÖ@ L
.
ÖÖL M
ParLevel1_Id
ÖÖM Y
)
ÖÖY Z
;
ÖÖZ [
var
áá 
ParLevel2DB
áá  +
=
áá, -
new
áá. 1
SGQDBContext
áá2 >
.
áá> ?
	ParLevel2
áá? H
(
ááH I
db
ááI K
)
ááK L
;
ááL M
var
àà 
	parLevel2
àà  )
=
àà* +
ParLevel2DB
àà, 7
.
àà7 8
getById
àà8 ?
(
àà? @
Level2Result
àà@ L
.
ààL M
ParLevel2_Id
ààM Y
)
ààY Z
;
ààZ [
var
ää 
ParLevel3DB
ää  +
=
ää, -
new
ää. 1
SGQDBContext
ää2 >
.
ää> ?
	ParLevel3
ää? H
(
ääH I
db
ääI K
)
ääK L
;
ääL M
var
ãã #
parLevel3InLevel2List
ãã  5
=
ãã6 7
ParLevel3DB
ãã8 C
.
ããC D
getLevel3InLevel2
ããD U
(
ããU V
	parLevel1
ããV _
,
ãã_ `
	parLevel2
ããa j
,
ããj k
Convert
ããl s
.
ããs t
ToInt32
ããt {
(
ãã{ |
ParCompany_Idãã| â
)ããâ ä
,ããä ã
dataããå ê
)ããê ë
;ããë í
foreach
çç #
(
çç$ %
var
çç% (
l3
çç) +
in
çç, .#
parLevel3InLevel2List
çç/ D
)
ççD E
{
éé 
partialResults
èè  .
+=
èè/ 1
$str
èè2 >
+
èè? @
l3
èèA C
.
èèC D
Id
èèD F
+
èèG H
$str
èèI c
;
èèc d
}
êê 
}
íí 
if
îî 
(
îî %
consolidationResultL1L2
îî 3
!=
îî4 6
null
îî7 ;
)
îî; <
{
ïï 
Results
òò #
+=
òò$ &
$str
òò' E
+
òòF G
$str
ôô  1
+
ôô2 3%
consolidationResultL1L2
ôô4 K
.
ôôK L
AlertLevelL1
ôôL X
+
ôôY Z
$str
öö  7
+
öö8 9%
consolidationResultL1L2
öö: Q
.
ööQ R
WeiEvaluationL1
ööR a
+
ööb c
$str
õõ  7
+
õõ8 9%
consolidationResultL1L2
õõ: Q
.
õõQ R
EvaluateTotalL1
õõR a
+
õõb c
$str
úú  6
+
úú7 8%
consolidationResultL1L2
úú9 P
.
úúP Q
DefectsTotalL1
úúQ _
+
úú` a
$str
ùù  4
+
ùù5 6%
consolidationResultL1L2
ùù7 N
.
ùùN O
WeiDefectsL1
ùùO [
+
ùù\ ]
$str
ûû  ?
+
ûû@ A%
consolidationResultL1L2
ûûB Y
.
ûûY Z%
TotalLevel3EvaluationL1
ûûZ q
+
ûûr s
$str
üü  @
+
üüA B%
consolidationResultL1L2
üüC Z
.
üüZ [&
TotalLevel3WithDefectsL1
üü[ s
+
üüt u
$str
††  =
+
††> ?%
consolidationResultL1L2
††@ W
.
††W X#
LastEvaluationAlertL1
††X m
+
††n o
$str
°°  9
+
°°: ;%
consolidationResultL1L2
°°< S
.
°°S T
LastLevel2AlertL1
°°T e
+
°°f g
$str
¢¢  9
+
¢¢: ;%
consolidationResultL1L2
¢¢< S
.
¢¢S T
EvaluatedResultL1
¢¢T e
+
¢¢f g
$str
££  7
+
££8 9%
consolidationResultL1L2
££: Q
.
££Q R
DefectsResultL1
££R a
+
££b c
$str
§§  7
+
§§8 9%
consolidationResultL1L2
§§: Q
.
§§Q R
EvaluateTotalL2
§§R a
+
§§b c
$str
••  6
+
••7 8%
consolidationResultL1L2
••9 P
.
••P Q
DefectsTotalL2
••Q _
+
••` a
$str
¶¶  7
+
¶¶8 9%
consolidationResultL1L2
¶¶: Q
.
¶¶Q R
WeiEvaluationL2
¶¶R a
+
¶¶b c
$str
ßß  1
+
ßß2 3%
consolidationResultL1L2
ßß4 K
.
ßßK L
	DefectsL2
ßßL U
+
ßßV W
$str
®®  4
+
®®5 6%
consolidationResultL1L2
®®7 N
.
®®N O
WeiDefectsL2
®®O [
+
®®\ ]
$str
©©  @
+
©©A B%
consolidationResultL1L2
©©C Z
.
©©Z [&
TotalLevel3WithDefectsL2
©©[ s
+
©©t u
$str
™™  ?
+
™™@ A%
consolidationResultL1L2
™™B Y
.
™™Y Z%
TotalLevel3EvaluationL2
™™Z q
+
™™r s
$str
´´  9
+
´´: ;%
consolidationResultL1L2
´´< S
.
´´S T
EvaluateTotalL2
´´T c
+
´´d e
$str
¨¨  7
+
¨¨8 9%
consolidationResultL1L2
¨¨: Q
.
¨¨Q R
DefectsResultL2
¨¨R a
+
¨¨b c
$str
≠≠  0
+
≠≠1 2
Level2Result
≠≠3 ?
.
≠≠? @
ParLevel1_Id
≠≠@ L
+
≠≠M N
$str
ÆÆ  0
+
ÆÆ1 2
Level2Result
ÆÆ3 ?
.
ÆÆ? @
ParLevel2_Id
ÆÆ@ L
+
ÆÆM N
$str
ØØ  .
+
ØØ/ 0
Level2Result
ØØ1 =
.
ØØ= >
Unit_Id
ØØ> E
+
ØØF G
$str
∞∞  -
+
∞∞. /
Level2Result
∞∞0 <
.
∞∞< =
Shift
∞∞= B
+
∞∞C D
$str
±±  .
+
±±/ 0
Level2Result
±±1 =
.
±±= >
Period
±±> D
+
±±E F
$str
≤≤  6
+
≤≤7 8
Level2Result
≤≤9 E
.
≤≤E F
CollectionDate
≤≤F T
.
≤≤T U
ToString
≤≤U ]
(
≤≤] ^
$str
≤≤^ h
)
≤≤h i
+
≤≤j k
$str
≥≥  2
+
≥≥3 4
Level2Result
≥≥5 A
.
≥≥A B
EvaluateLast
≥≥B N
+
≥≥O P
$str
¥¥  .
+
¥¥/ 0
Level2Result
¥¥1 =
.
¥¥= >

SampleLast
¥¥> H
+
¥¥I J
$str
µµ  -
+
µµ. /%
consolidationResultL1L2
µµ0 G
.
µµG H
Phase
µµH M
+
µµN O
$str
∂∂  6
+
∂∂7 8%
consolidationResultL1L2
∂∂9 P
.
∂∂P Q
StartPhaseDate
∂∂Q _
.
∂∂_ `
ToString
∂∂` h
(
∂∂h i
$str
∂∂i s
)
∂∂s t
+
∂∂u v
$str
∑∑  <
+
∑∑= >%
consolidationResultL1L2
∑∑? V
.
∑∑V W"
StartPhaseEvaluation
∑∑W k
+
∑∑l m
$str
∏∏  <
+
∏∏= >%
consolidationResultL1L2
∏∏? V
.
∏∏V W"
haveCorrectiveAction
∏∏W k
.
∏∏k l
ToString
∏∏l t
(
∏∏t u
)
∏∏u v
.
∏∏v w
ToLower
∏∏w ~
(
∏∏~ 
)∏∏ Ä
+∏∏Å Ç
$str
ππ  3
+
ππ4 5%
consolidationResultL1L2
ππ6 M
.
ππM N
haveReaudit
ππN Y
.
ππY Z
ToString
ππZ b
(
ππb c
)
ππc d
.
ππd e
ToLower
ππe l
(
ππl m
)
ππm n
+
ππo p
$str
∫∫  4
+
∫∫5 6%
consolidationResultL1L2
∫∫7 N
.
∫∫N O
ReauditLevel
∫∫O [
.
∫∫[ \
ToString
∫∫\ d
(
∫∫d e
)
∫∫e f
.
∫∫f g
ToLower
∫∫g n
(
∫∫n o
)
∫∫o p
+
∫∫q r
$str
ªª  5
+
ªª6 7%
consolidationResultL1L2
ªª8 O
.
ªªO P
ReauditNumber
ªªP ]
.
ªª] ^
ToString
ªª^ f
(
ªªf g
)
ªªg h
.
ªªh i
ToLower
ªªi p
(
ªªp q
)
ªªq r
+
ªªs t
$str
ºº  1
+
ºº2 3%
consolidationResultL1L2
ºº4 K
.
ººK L
	IsReaudit
ººL U
.
ººU V
ToString
ººV ^
(
ºº^ _
)
ºº_ `
.
ºº` a
ToLower
ººa h
(
ººh i
)
ººi j
+
ººk l
$str
ΩΩ  <
+
ΩΩ= >%
consolidationResultL1L2
ΩΩ? V
.
ΩΩV W"
More3DefectsEvaluate
ΩΩW k
+
ΩΩl m
$str
ææ  L
+
ææM N%
consolidationResultL1L2
ææO f
.
ææf g3
$CollectionLevel2_ID_CorrectiveActionææg ã
+ææå ç
$str
øø  P
+
øøQ R%
consolidationResultL1L2
øøS j
.
øøj k7
(CollectionLevel2_Period_CorrectiveActionøøk ì
+øøî ï
$strøøñ õ
+øøú ù
partialResults
¿¿# 1
+
¿¿2 3
$str
¡¡  (
;
¡¡( )
}
¬¬ 
}
√√ 
}
ƒƒ 
}
≈≈ 
return
∆∆ 
Results
∆∆ 
;
∆∆ 
}
«« 	
public
ÀÀ 
string
ÀÀ 
getConsolidation
ÀÀ &
(
ÀÀ& '
string
ÀÀ' -
ParCompany_Id
ÀÀ. ;
,
ÀÀ; <
DateTime
ÀÀ= E
data
ÀÀF J
,
ÀÀJ K
int
ÀÀL O
ParLevel1_Id
ÀÀP \
)
ÀÀ\ ]
{
ÃÃ 	
string
ŒŒ 
dataIni
ŒŒ 
=
ŒŒ 
data
ŒŒ !
.
ŒŒ! "
ToString
ŒŒ" *
(
ŒŒ* +
$str
ŒŒ+ 5
)
ŒŒ5 6
;
ŒŒ6 7
string
–– 
retorno
–– 
=
–– 
$str
–– 
;
––  
using
““ 
(
““ 
var
““ 
db
““ 
=
““ 
new
““ 
Dominio
““  '
.
““' (
SgqDbDevEntities
““( 8
(
““8 9
)
““9 :
)
““: ;
{
”” 
string
‘‘ 
sql
‘‘ 
=
‘‘ 
$str
‘‘ <
+
‘‘= >
dataIni
‘‘? F
+
‘‘G H
$str
‘‘I N
+
‘‘O P
ParCompany_Id
‘‘Q ^
;
‘‘^ _
var
÷÷ 
list
÷÷ 
=
÷÷ 
db
÷÷ 
.
÷÷ 
Database
÷÷ &
.
÷÷& '
SqlQuery
÷÷' /
<
÷÷/ 0 
ResultadoUmaColuna
÷÷0 B
>
÷÷B C
(
÷÷C D
sql
÷÷D G
)
÷÷G H
.
÷÷H I
ToList
÷÷I O
(
÷÷O P
)
÷÷P Q
;
÷÷Q R
for
ÿÿ 
(
ÿÿ 
var
ÿÿ 
i
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
i
ÿÿ  !
<
ÿÿ" #
list
ÿÿ$ (
.
ÿÿ( )
Count
ÿÿ) .
(
ÿÿ. /
)
ÿÿ/ 0
;
ÿÿ0 1
i
ÿÿ2 3
++
ÿÿ3 5
)
ÿÿ5 6
{
ŸŸ 
retorno
⁄⁄ 
+=
⁄⁄ 
list
⁄⁄ #
[
⁄⁄# $
i
⁄⁄$ %
]
⁄⁄% &
.
⁄⁄& '
retorno
⁄⁄' .
.
⁄⁄. /
ToString
⁄⁄/ 7
(
⁄⁄7 8
)
⁄⁄8 9
;
⁄⁄9 :
}
€€ 
}
‹‹ 
return
ﬁﬁ 
retorno
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
ÉÉ 
string
ÉÉ 
getMaxEvaluate
ÉÉ $
(
ÉÉ$ %
string
ÉÉ% +"
CollectionLevel02Ids
ÉÉ, @
,
ÉÉ@ A
string
ÉÉB H

Level02Ids
ÉÉI S
)
ÉÉS T
{
ÑÑ 	
string
ÖÖ 
sql
ÖÖ 
=
ÖÖ 
$str
ÖÖ |
+
ÖÖ} ~#
CollectionLevel02IdsÖÖ ì
+ÖÖî ï
$strÖÖñ ¨
+ÖÖ≠ Æ

Level02IdsÖÖØ π
+ÖÖ∫ ª
$strÖÖº ø
;ÖÖø ¿
string
áá 
conexao
áá 
=
áá 
System
áá #
.
áá# $
Configuration
áá$ 1
.
áá1 2"
ConfigurationManager
áá2 F
.
ááF G
ConnectionStrings
ááG X
[
ááX Y
$str
ááY j
]
ááj k
.
áák l
ConnectionString
áál |
;
áá| }
try
àà 
{
ââ 
using
ää 
(
ää 
SqlConnection
ää $

connection
ää% /
=
ää0 1
new
ää2 5
SqlConnection
ää6 C
(
ääC D
conexao
ääD K
)
ääK L
)
ääL M
{
ãã 
using
åå 
(
åå 

SqlCommand
åå %
command
åå& -
=
åå. /
new
åå0 3

SqlCommand
åå4 >
(
åå> ?
sql
åå? B
,
ååB C

connection
ååD N
)
ååN O
)
ååO P
{
çç 

connection
éé "
.
éé" #
Open
éé# '
(
éé' (
)
éé( )
;
éé) *
using
èè 
(
èè 
SqlDataReader
èè ,
r
èè- .
=
èè/ 0
command
èè1 8
.
èè8 9
ExecuteReader
èè9 F
(
èèF G
)
èèG H
)
èèH I
{
êê 
string
ëë "
maxEvaluate
ëë# .
=
ëë/ 0
$str
ëë1 4
;
ëë4 5
if
íí 
(
íí  
r
íí  !
.
íí! "
Read
íí" &
(
íí& '
)
íí' (
)
íí( )
{
ìì 
maxEvaluate
îî  +
=
îî, -
r
îî. /
[
îî/ 0
$num
îî0 1
]
îî1 2
.
îî2 3
ToString
îî3 ;
(
îî; <
)
îî< =
;
îî= >
}
ïï 
return
ññ "
maxEvaluate
ññ# .
;
ññ. /
}
óó 
}
òò 
if
ôô 
(
ôô 

connection
ôô "
.
ôô" #
State
ôô# (
==
ôô) +
System
ôô, 2
.
ôô2 3
Data
ôô3 7
.
ôô7 8
ConnectionState
ôô8 G
.
ôôG H
Open
ôôH L
)
ôôL M

connection
ôôN X
.
ôôX Y
Close
ôôY ^
(
ôô^ _
)
ôô_ `
;
ôô` a
}
öö 
}
õõ 
catch
úú 
(
úú 
SqlException
úú 
ex
úú  "
)
úú" #
{
ùù 
int
ûû 
	insertLog
ûû 
=
ûû 
insertLogJson
ûû  -
(
ûû- .
sql
ûû. 1
,
ûû1 2
ex
ûû3 5
.
ûû5 6
Message
ûû6 =
,
ûû= >
$str
ûû? D
,
ûûD E
$str
ûûF K
,
ûûK L
$str
ûûM ]
)
ûû] ^
;
ûû^ _
return
üü 
null
üü 
;
üü 
}
†† 
catch
°° 
(
°° 
	Exception
°° 
ex
°° 
)
°°  
{
¢¢ 
int
££ 
	insertLog
££ 
=
££ 
insertLogJson
££  -
(
££- .
sql
££. 1
,
££1 2
ex
££3 5
.
££5 6
Message
££6 =
,
££= >
$str
££? D
,
££D E
$str
££F K
,
££K L
$str
££M ]
)
££] ^
;
££^ _
return
§§ 
null
§§ 
;
§§ 
}
•• 
}
¶¶ 	
public
∏∏ 
string
∏∏ "
GetCollectionLevel03
∏∏ *
(
∏∏* +
string
∏∏+ 1!
CollectionLevel02Id
∏∏2 E
,
∏∏E F
string
∏∏G M
date
∏∏N R
,
∏∏R S
string
∏∏T Z
	auditorId
∏∏[ d
,
∏∏d e
ref
∏∏f i
int
∏∏j m
defects
∏∏n u
)
∏∏u v
{
ππ 	
string
∫∫ 
sql
∫∫ 
=
∫∫ 
$str∫∫ ó
+∫∫ò ô#
CollectionLevel02Id∫∫ö ≠
+∫∫Æ Ø
$str∫∫∞ ≥
;∫∫≥ ¥
string
ºº 
conexao
ºº 
=
ºº 
System
ºº #
.
ºº# $
Configuration
ºº$ 1
.
ºº1 2"
ConfigurationManager
ºº2 F
.
ººF G
ConnectionStrings
ººG X
[
ººX Y
$str
ººY j
]
ººj k
.
ººk l
ConnectionString
ººl |
;
ºº| }
try
ΩΩ 
{
ææ 
using
øø 
(
øø 
SqlConnection
øø $

connection
øø% /
=
øø0 1
new
øø2 5
SqlConnection
øø6 C
(
øøC D
conexao
øøD K
)
øøK L
)
øøL M
{
¿¿ 
using
¡¡ 
(
¡¡ 

SqlCommand
¡¡ %
command
¡¡& -
=
¡¡. /
new
¡¡0 3

SqlCommand
¡¡4 >
(
¡¡> ?
sql
¡¡? B
,
¡¡B C

connection
¡¡D N
)
¡¡N O
)
¡¡O P
{
¬¬ 

connection
√√ "
.
√√" #
Open
√√# '
(
√√' (
)
√√( )
;
√√) *
using
ƒƒ 
(
ƒƒ 
SqlDataReader
ƒƒ ,
r
ƒƒ- .
=
ƒƒ/ 0
command
ƒƒ1 8
.
ƒƒ8 9
ExecuteReader
ƒƒ9 F
(
ƒƒF G
)
ƒƒG H
)
ƒƒH I
{
≈≈ 
string
∆∆ "
Level03Results
∆∆# 1
=
∆∆2 3
null
∆∆4 8
;
∆∆8 9
while
«« !
(
««" #
r
««# $
.
««$ %
Read
««% )
(
««) *
)
««* +
)
««+ ,
{
»» 
string
……  &
id
……' )
=
……* +
r
……, -
[
……- .
$num
……. /
]
……/ 0
.
……0 1
ToString
……1 9
(
……9 :
)
……: ;
;
……; <
string
    &
	level03id
  ' 0
=
  1 2
r
  3 4
[
  4 5
$num
  5 6
]
  6 7
.
  7 8
ToString
  8 @
(
  @ A
)
  A B
;
  B C
bool
ÀÀ  $
conformedIs
ÀÀ% 0
=
ÀÀ1 2
Convert
ÀÀ3 :
.
ÀÀ: ;
	ToBoolean
ÀÀ; D
(
ÀÀD E
r
ÀÀE F
[
ÀÀF G
$num
ÀÀG H
]
ÀÀH I
)
ÀÀI J
;
ÀÀJ K
int
ÃÃ  #
value
ÃÃ$ )
=
ÃÃ* +
Convert
ÃÃ, 3
.
ÃÃ3 4
ToInt32
ÃÃ4 ;
(
ÃÃ; <
r
ÃÃ< =
[
ÃÃ= >
$num
ÃÃ> ?
]
ÃÃ? @
)
ÃÃ@ A
;
ÃÃA B
if
ÕÕ  "
(
ÕÕ# $
conformedIs
ÕÕ$ /
==
ÕÕ0 2
false
ÕÕ3 8
&&
ÕÕ9 ;
value
ÕÕ< A
==
ÕÕB D
$num
ÕÕE F
)
ÕÕF G
{
ŒŒ  !
value
œœ$ )
=
œœ* +
$num
œœ, -
;
œœ- .
}
––  !
defects
““  '
+=
““( *
value
““+ 0
;
““0 1
string
‘‘  &
	valueText
‘‘' 0
=
‘‘1 2
r
‘‘3 4
[
‘‘4 5
$num
‘‘5 6
]
‘‘6 7
.
‘‘7 8
ToString
‘‘8 @
(
‘‘@ A
)
‘‘A B
;
‘‘B C
if
’’  "
(
’’# $
	valueText
’’$ -
==
’’. 0
$str
’’1 <
)
’’< =
{
÷÷  !
	valueText
◊◊$ -
=
◊◊. /
$str
◊◊0 <
;
◊◊< =
}
ÿÿ  !
else
ŸŸ  $
{
⁄⁄  !
	valueText
€€$ -
=
€€. /
$str
€€0 ?
+
€€@ A
	valueText
€€B K
+
€€L M
$str
€€N R
;
€€R S
defects
‹‹$ +
+=
‹‹, .
$num
‹‹/ 0
;
‹‹0 1
}
››  !
Level03Results
ﬁﬁ  .
+=
ﬁﬁ/ 1
$str
ﬁﬁ2 >
+
ﬁﬁ? @
id
ﬁﬁA C
+
ﬁﬁD E
$str
ﬁﬁF o
+
ﬁﬁp q
	level03id
ﬁﬁr {
+
ﬁﬁ| }
$strﬁﬁ~ ä
+ﬁﬁã å
dateﬁﬁç ë
+ﬁﬁí ì
$strﬁﬁî °
+ﬁﬁ¢ £
valueﬁﬁ§ ©
+ﬁﬁ™ ´
$strﬁﬁ¨ ª
+ﬁﬁº Ω
conformedIsﬁﬁæ …
.ﬁﬁ…  
ToStringﬁﬁ  “
(ﬁﬁ“ ”
)ﬁﬁ” ‘
.ﬁﬁ‘ ’
ToLowerﬁﬁ’ ‹
(ﬁﬁ‹ ›
)ﬁﬁ› ﬁ
+ﬁﬁﬂ ‡
$strﬁﬁ· Ú
+ﬁﬁÛ Ù
	auditorIdﬁﬁı ˛
+ﬁﬁˇ Ä
$strﬁﬁÅ ô
+ﬁﬁö õ
	valueTextﬁﬁú •
+ﬁﬁ¶ ß
$strﬁﬁ® ´
+ﬁﬁ¨ ≠
$str
ﬂﬂ2 :
;
ﬂﬂ: ;
}
‡‡ 
return
·· "
Level03Results
··# 1
;
··1 2
}
‚‚ 
}
„„ 
if
‰‰ 
(
‰‰ 

connection
‰‰ "
.
‰‰" #
State
‰‰# (
==
‰‰) +
System
‰‰, 2
.
‰‰2 3
Data
‰‰3 7
.
‰‰7 8
ConnectionState
‰‰8 G
.
‰‰G H
Open
‰‰H L
)
‰‰L M

connection
‰‰N X
.
‰‰X Y
Close
‰‰Y ^
(
‰‰^ _
)
‰‰_ `
;
‰‰` a
}
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
SqlException
ÁÁ 
ex
ÁÁ  "
)
ÁÁ" #
{
ËË 
int
ÈÈ 
	insertLog
ÈÈ 
=
ÈÈ 
insertLogJson
ÈÈ  -
(
ÈÈ- .
sql
ÈÈ. 1
,
ÈÈ1 2
ex
ÈÈ3 5
.
ÈÈ5 6
Message
ÈÈ6 =
,
ÈÈ= >
$str
ÈÈ? D
,
ÈÈD E
$str
ÈÈF K
,
ÈÈK L
$str
ÈÈM c
)
ÈÈc d
;
ÈÈd e
return
ÍÍ 
null
ÍÍ 
;
ÍÍ 
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
ex
ÏÏ 
)
ÏÏ  
{
ÌÌ 
int
ÓÓ 
	insertLog
ÓÓ 
=
ÓÓ 
insertLogJson
ÓÓ  -
(
ÓÓ- .
sql
ÓÓ. 1
,
ÓÓ1 2
ex
ÓÓ3 5
.
ÓÓ5 6
Message
ÓÓ6 =
,
ÓÓ= >
$str
ÓÓ? D
,
ÓÓD E
$str
ÓÓF K
,
ÓÓK L
$str
ÓÓM c
)
ÓÓc d
;
ÓÓd e
return
ÔÔ 
null
ÔÔ 
;
ÔÔ 
}
 
}
ÒÒ 	
[
ıı 	
	WebMethod
ıı	 
]
ıı 
public
ˆˆ 
string
ˆˆ 
getAPP
ˆˆ 
(
ˆˆ 
)
ˆˆ 
{
˜˜ 	
var
˘˘ 
html
˘˘ 
=
˘˘ 
new
˘˘ 
Html
˘˘ 
(
˘˘  
)
˘˘  !
;
˘˘! "
string
˚˚ 
login
˚˚ 
=
˚˚ 
GetLoginAPP
˚˚ &
(
˚˚& '
)
˚˚' (
;
˚˚( )
string
˝˝ 
resource
˝˝ 
=
˝˝ 
GetResource
˝˝ )
(
˝˝) *
)
˝˝* +
;
˝˝+ ,
return
ˇˇ 
login
ˇˇ 
+
ˇˇ 
resource
ˇˇ #
;
ˇˇ# $
}
ÄÄ 	
[
ÇÇ 	
	WebMethod
ÇÇ	 
]
ÇÇ 
public
ÉÉ 
string
ÉÉ 
getAPPLevels
ÉÉ "
(
ÉÉ" #
int
ÉÉ# &

UserSgq_Id
ÉÉ' 1
,
ÉÉ1 2
int
ÉÉ3 6
ParCompany_Id
ÉÉ7 D
,
ÉÉD E
DateTime
ÉÉF N
Date
ÉÉO S
)
ÉÉS T
{
ÑÑ 	
string
ÜÜ 
APPMain
ÜÜ 
=
ÜÜ 
string
ÜÜ #
.
ÜÜ# $
Empty
ÜÜ$ )
;
ÜÜ) *
APPMain
ââ 
=
ââ 

getAPPMain
ââ  
(
ââ  !

UserSgq_Id
ââ! +
,
ââ+ ,
ParCompany_Id
ââ- :
,
ââ: ;
Date
ââ< @
,
ââ@ A
null
ââB F
)
ââF G
;
ââG H
string
åå 
supports
åå 
=
åå 
$str
åå B
+
ååC D
$str
çç O
+
ççP Q
$str
éé G
+
ééH I
$str
èè H
+
èèI J
$str
êê T
+
êêU V
$str
ëë E
+
ëëF G
$str
íí @
+
ííA B
$str
ìì Q
+
ììR S
$str
îî [
;
îî[ \
return
òò 
APPMain
òò 
+
òò 
supports
òò %
;
òò% &
}
ôô 	
[
õõ 	
	WebMethod
õõ	 
]
õõ 
public
úú 
string
úú "
getAPPLevelsModulado
úú *
(
úú* +
int
úú+ .

UserSgq_Id
úú/ 9
,
úú9 :
int
úú; >
ParCompany_Id
úú? L
,
úúL M
DateTime
úúN V
Date
úúW [
,
úú[ \
string
úú] c
Level1ListId
úúd p
)
úúp q
{
ùù 	
string
üü 
APPMain
üü 
=
üü 
string
üü #
.
üü# $
Empty
üü$ )
;
üü) *
APPMain
¢¢ 
=
¢¢ 

getAPPMain
¢¢  
(
¢¢  !

UserSgq_Id
¢¢! +
,
¢¢+ ,
ParCompany_Id
¢¢- :
,
¢¢: ;
Date
¢¢< @
,
¢¢@ A
Level1ListId
¢¢B N
)
¢¢N O
;
¢¢O P
string
•• 
supports
•• 
=
•• 
$str
•• B
+
••C D
$str
¶¶ O
+
¶¶P Q
$str
ßß G
+
ßßH I
$str
®® H
+
®®I J
$str
©© T
+
©©U V
$str
™™ E
+
™™F G
$str
´´ @
+
´´A B
$str
¨¨ Q
+
¨¨R S
$str
≠≠ [
;
≠≠[ \
return
±± 
APPMain
±± 
+
±± 
supports
±± %
;
±±% &
}
≤≤ 	
[
¥¥ 	
	WebMethod
¥¥	 
]
¥¥ 
public
µµ 
string
µµ  
getAPPLevelsVolume
µµ (
(
µµ( )
int
µµ) ,

UserSgq_Id
µµ- 7
,
µµ7 8
int
µµ9 <
ParCompany_Id
µµ= J
,
µµJ K
DateTime
µµL T
Date
µµU Y
,
µµY Z
string
µµ[ a
Level1ListId
µµb n
)
µµn o
{
∂∂ 	
string
∑∑ 
APPMain
∑∑ 
=
∑∑ 
string
∑∑ #
.
∑∑# $
Empty
∑∑$ )
;
∑∑) *
APPMain
ππ 
=
ππ 

getAPPMain
ππ  
(
ππ  !

UserSgq_Id
ππ! +
,
ππ+ ,
ParCompany_Id
ππ- :
,
ππ: ;
Date
ππ< @
,
ππ@ A
Level1ListId
ππB N
,
ππN O
true
ππP T
)
ππT U
;
ππU V
return
ªª 
APPMain
ªª 
;
ªª 
}
ºº 	
public
øø 
string
øø 
GetResource
øø !
(
øø! "
)
øø" #
{
¿¿ 	
if
¡¡ 
(
¡¡ 
GlobalConfig
¡¡ 
.
¡¡ 
LanguageBrasil
¡¡ +
)
¡¡+ ,
{
¬¬ 
Thread
√√ 
.
√√ 
CurrentThread
√√ $
.
√√$ %
CurrentCulture
√√% 3
=
√√4 5
new
√√6 9
CultureInfo
√√: E
(
√√E F
Guard
√√F K
.
√√K L
LANGUAGE_PT_BR
√√L Z
)
√√Z [
;
√√[ \
Thread
ƒƒ 
.
ƒƒ 
CurrentThread
ƒƒ $
.
ƒƒ$ %
CurrentUICulture
ƒƒ% 5
=
ƒƒ6 7
new
ƒƒ8 ;
CultureInfo
ƒƒ< G
(
ƒƒG H
Guard
ƒƒH M
.
ƒƒM N
LANGUAGE_PT_BR
ƒƒN \
)
ƒƒ\ ]
;
ƒƒ] ^
}
≈≈ 
else
∆∆ 
{
«« 
Thread
»» 
.
»» 
CurrentThread
»» $
.
»»$ %
CurrentCulture
»»% 3
=
»»4 5
new
»»6 9
CultureInfo
»»: E
(
»»E F
$str
»»F H
)
»»H I
;
»»I J
Thread
…… 
.
…… 
CurrentThread
…… $
.
……$ %
CurrentUICulture
……% 5
=
……6 7
new
……8 ;
CultureInfo
……< G
(
……G H
$str
……H J
)
……J K
;
……K L
}
   
System
ÕÕ 
.
ÕÕ 

Reflection
ÕÕ 
.
ÕÕ 
Assembly
ÕÕ &
assembly
ÕÕ' /
=
ÕÕ0 1
this
ÕÕ2 6
.
ÕÕ6 7
GetType
ÕÕ7 >
(
ÕÕ> ?
)
ÕÕ? @
.
ÕÕ@ A
Assembly
ÕÕA I
;
ÕÕI J
System
œœ 
.
œœ 
	Resources
œœ 
.
œœ 
ResourceManager
œœ ,
resourceManager
œœ- <
=
œœ= >
	Resources
œœ? H
.
œœH I
Resource
œœI Q
.
œœQ R
ResourceManager
œœR a
;
œœa b
var
—— 
resourceSet
—— 
=
—— 
resourceManager
—— -
.
——- .
GetResourceSet
——. <
(
——< =
Thread
““ 
.
““ 
CurrentThread
““ $
.
““$ %
CurrentUICulture
““% 5
,
““5 6
true
““7 ;
,
““; <
false
““= B
)
““B C
;
““C D
string
‘‘ 
items
‘‘ 
=
‘‘ 
$str
‘‘ 
;
‘‘ 
foreach
÷÷ 
(
÷÷ 
var
÷÷ 
entry
÷÷ 
in
÷÷ !
resourceSet
÷÷" -
.
÷÷- .
Cast
÷÷. 2
<
÷÷2 3
DictionaryEntry
÷÷3 B
>
÷÷B C
(
÷÷C D
)
÷÷D E
)
÷÷E F
{
◊◊ 
items
ÿÿ 
+=
ÿÿ 
$str
ÿÿ %
+
ÿÿ& '
entry
ÿÿ( -
.
ÿÿ- .
Key
ÿÿ. 1
.
ÿÿ1 2
ToString
ÿÿ2 :
(
ÿÿ: ;
)
ÿÿ; <
+
ÿÿ= >
$str
ÿÿ? C
+
ÿÿD E
entry
ÿÿF K
.
ÿÿK L
Value
ÿÿL Q
.
ÿÿQ R
ToString
ÿÿR Z
(
ÿÿZ [
)
ÿÿ[ \
+
ÿÿ] ^
$str
ÿÿ_ g
;
ÿÿg h
}
ŸŸ 
return
€€ 
$str
€€ 0
+
€€1 2
items
€€3 8
+
€€9 :
$str
€€; C
;
€€C D
}
‹‹ 	
public
ﬁﬁ 
int
ﬁﬁ 
getEvaluate
ﬁﬁ 
(
ﬁﬁ 
SGQDBContext
ﬁﬁ +
.
ﬁﬁ+ ,
	ParLevel2
ﬁﬁ, 5
	parlevel2
ﬁﬁ6 ?
,
ﬁﬁ? @
IEnumerable
ﬁﬁA L
<
ﬁﬁL M
SGQDBContext
ﬁﬁM Y
.
ﬁﬁY Z
ParLevel2Evaluate
ﬁﬁZ k
>
ﬁﬁk l 
ParEvaluateCompany
ﬁﬁm 
,ﬁﬁ Ä
IEnumerableﬁﬁÅ å
<ﬁﬁå ç
SGQDBContextﬁﬁç ô
.ﬁﬁô ö!
ParLevel2Evaluateﬁﬁö ´
>ﬁﬁ´ ¨!
ParEvaluatePadraoﬁﬁ≠ æ
)ﬁﬁæ ø
{
ﬂﬂ 	
int
‡‡ 
evaluate
‡‡ 
=
‡‡ 
$num
‡‡ 
;
‡‡ 
var
·· 
evaluateConf
·· 
=
··  
ParEvaluateCompany
·· 1
.
··1 2
Where
··2 7
(
··7 8
p
··8 9
=>
··: <
p
··= >
.
··> ?
Id
··? A
==
··B D
	parlevel2
··E N
.
··N O
Id
··O Q
)
··Q R
.
··R S
FirstOrDefault
··S a
(
··a b
)
··b c
;
··c d
if
‚‚ 
(
‚‚ 
evaluateConf
‚‚ 
!=
‚‚ 
null
‚‚  $
)
‚‚$ %
{
„„ 
evaluate
‰‰ 
=
‰‰ 
evaluateConf
‰‰ '
.
‰‰' (
Evaluate
‰‰( 0
;
‰‰0 1
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
evaluateConf
ËË 
=
ËË 
ParEvaluatePadrao
ËË 0
.
ËË0 1
Where
ËË1 6
(
ËË6 7
p
ËË7 8
=>
ËË9 ;
p
ËË< =
.
ËË= >
Id
ËË> @
==
ËËA C
	parlevel2
ËËD M
.
ËËM N
Id
ËËN P
)
ËËP Q
.
ËËQ R
FirstOrDefault
ËËR `
(
ËË` a
)
ËËa b
;
ËËb c
if
ÈÈ 
(
ÈÈ 
evaluateConf
ÈÈ  
!=
ÈÈ! #
null
ÈÈ$ (
)
ÈÈ( )
{
ÍÍ 
evaluate
ÎÎ 
=
ÎÎ 
evaluateConf
ÎÎ +
.
ÎÎ+ ,
Evaluate
ÎÎ, 4
;
ÎÎ4 5
}
ÏÏ 
}
ÌÌ 
if
ÓÓ 
(
ÓÓ 
evaluate
ÓÓ 
==
ÓÓ 
$num
ÓÓ 
)
ÓÓ 
{
ÔÔ 
evaluate
 
=
 
$num
 
;
 
}
ÒÒ 
return
ÚÚ 
evaluate
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
public
ıı 
int
ıı "
getMaxEvaluateLevel1
ıı '
(
ıı' (
SGQDBContext
ıı( 4
.
ıı4 5
	ParLevel1
ıı5 >
	parlevel1
ıı? H
,
ııH I
IEnumerable
ııJ U
<
ııU V
SGQDBContext
ııV b
.
ııb c
ParLevel2Evaluate
ııc t
>
ııt u!
ParEvaluateCompanyııv à
)ııà â
{
ˆˆ 	
int
˜˜ 
evaluate
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
string
˙˙ 
sql
˙˙ 
=
˙˙ 
$str
˙˙ 
+
˙˙ 
$str
˚˚ 5
+
˚˚6 7
$str
¸¸ 2
+
¸¸3 4
	parlevel1
¸¸5 >
.
¸¸> ?
Id
¸¸? A
+
¸¸B C
$str
˛˛ N
+
˛˛O P
$str
ˇˇ -
+
ˇˇ. /
$str
ÄÄ [
+
ÄÄ\ ]
$str
ÇÇ B
+
ÇÇC D
$str
ÑÑ =
+
ÑÑ> ?
$strÜÜ ä
+ÜÜã å
$str
àà 3
+
àà4 5
$str
ââ 
+
ââ 
$str
ää )
+
ää* +
$str
ãã 3
;
ãã3 4
string
çç 
conexao
çç 
=
çç 
System
çç #
.
çç# $
Configuration
çç$ 1
.
çç1 2"
ConfigurationManager
çç2 F
.
ççF G
ConnectionStrings
ççG X
[
ççX Y
$str
ççY j
]
ççj k
.
ççk l
ConnectionString
ççl |
;
çç| }
try
éé 
{
èè 
using
êê 
(
êê 
SqlConnection
êê $

connection
êê% /
=
êê0 1
new
êê2 5
SqlConnection
êê6 C
(
êêC D
conexao
êêD K
)
êêK L
)
êêL M
{
ëë 
using
íí 
(
íí 

SqlCommand
íí %
command
íí& -
=
íí. /
new
íí0 3

SqlCommand
íí4 >
(
íí> ?
sql
íí? B
,
ííB C

connection
ííD N
)
ííN O
)
ííO P
{
ìì 

connection
îî "
.
îî" #
Open
îî# '
(
îî' (
)
îî( )
;
îî) *
using
ïï 
(
ïï 
SqlDataReader
ïï ,
r
ïï- .
=
ïï/ 0
command
ïï1 8
.
ïï8 9
ExecuteReader
ïï9 F
(
ïïF G
)
ïïG H
)
ïïH I
{
ññ 
if
óó 
(
óó  
r
óó  !
.
óó! "
Read
óó" &
(
óó& '
)
óó' (
)
óó( )
{
òò 
evaluate
ôô  (
=
ôô) *
Convert
ôô+ 2
.
ôô2 3
ToInt32
ôô3 :
(
ôô: ;
r
ôô; <
[
ôô< =
$num
ôô= >
]
ôô> ?
)
ôô? @
;
ôô@ A
}
öö 
}
õõ 
}
úú 
if
ùù 
(
ùù 

connection
ùù "
.
ùù" #
State
ùù# (
==
ùù) +
System
ùù, 2
.
ùù2 3
Data
ùù3 7
.
ùù7 8
ConnectionState
ùù8 G
.
ùùG H
Open
ùùH L
)
ùùL M

connection
ùùN X
.
ùùX Y
Close
ùùY ^
(
ùù^ _
)
ùù_ `
;
ùù` a
}
ûû 
}
üü 
catch
°° 
(
°° 
	Exception
°° 
)
°° 
{
¢¢ 
return
§§ 
evaluate
§§ 
;
§§  
}
•• 
return
ßß 
evaluate
ßß 
;
ßß 
}
®® 	
public
™™ 
int
™™ 
	getSample
™™ 
(
™™ 
SGQDBContext
™™ )
.
™™) *
	ParLevel2
™™* 3
	parlevel2
™™4 =
,
™™= >
IEnumerable
™™? J
<
™™J K
SGQDBContext
™™K W
.
™™W X
ParLevel2Sample
™™X g
>
™™g h
ParSampleCompany
™™i y
,
™™y z
IEnumerable™™{ Ü
<™™Ü á
SGQDBContext™™á ì
.™™ì î
ParLevel2Sample™™î £
>™™£ §
ParSamplePadrao™™• ¥
)™™¥ µ
{
´´ 	
int
¨¨ 
sample
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
var
≠≠ 

sampleConf
≠≠ 
=
≠≠ 
ParSampleCompany
≠≠ -
.
≠≠- .
Where
≠≠. 3
(
≠≠3 4
p
≠≠4 5
=>
≠≠6 8
p
≠≠9 :
.
≠≠: ;
Id
≠≠; =
==
≠≠> @
	parlevel2
≠≠A J
.
≠≠J K
Id
≠≠K M
)
≠≠M N
.
≠≠N O
FirstOrDefault
≠≠O ]
(
≠≠] ^
)
≠≠^ _
;
≠≠_ `
if
ÆÆ 
(
ÆÆ 

sampleConf
ÆÆ 
!=
ÆÆ 
null
ÆÆ "
)
ÆÆ" #
{
ØØ 
sample
∞∞ 
=
∞∞ 

sampleConf
∞∞ #
.
∞∞# $
Sample
∞∞$ *
;
∞∞* +
}
±± 
else
≤≤ 
{
≥≥ 

sampleConf
¥¥ 
=
¥¥ 
ParSamplePadrao
¥¥ ,
.
¥¥, -
Where
¥¥- 2
(
¥¥2 3
p
¥¥3 4
=>
¥¥5 7
p
¥¥8 9
.
¥¥9 :
Id
¥¥: <
==
¥¥= ?
	parlevel2
¥¥@ I
.
¥¥I J
Id
¥¥J L
)
¥¥L M
.
¥¥M N
FirstOrDefault
¥¥N \
(
¥¥\ ]
)
¥¥] ^
;
¥¥^ _
if
µµ 
(
µµ 

sampleConf
µµ 
!=
µµ !
null
µµ" &
)
µµ& '
{
∂∂ 
sample
∑∑ 
=
∑∑ 

sampleConf
∑∑ '
.
∑∑' (
Sample
∑∑( .
;
∑∑. /
}
∏∏ 
}
ππ 
if
∫∫ 
(
∫∫ 
sample
∫∫ 
==
∫∫ 
$num
∫∫ 
)
∫∫ 
{
ªª 
sample
ºº 
=
ºº 
$num
ºº 
;
ºº 
}
ΩΩ 
return
ææ 
sample
ææ 
;
ææ 
}
øø 	
public
¡¡ 
int
¡¡  
getMaxSampleLevel1
¡¡ %
(
¡¡% &
SGQDBContext
¡¡& 2
.
¡¡2 3
	ParLevel1
¡¡3 <
	parlevel1
¡¡= F
,
¡¡F G
IEnumerable
¡¡H S
<
¡¡S T
SGQDBContext
¡¡T `
.
¡¡` a
ParLevel2Evaluate
¡¡a r
>
¡¡r s!
ParEvaluateCompany¡¡t Ü
)¡¡Ü á
{
¬¬ 	
int
√√ 
evaluate
√√ 
=
√√ 
$num
√√ 
;
√√ 
string
∆∆ 
sql
∆∆ 
=
∆∆ 
$str
∆∆ 
+
∆∆ 
$str
«« 4
+
««5 6
$str
»» 1
+
»»2 3
	parlevel1
»»4 =
.
»»= >
Id
»»> @
+
»»A B
$str
   I
+
  J K
$str
ÀÀ ,
+
ÀÀ- .
$str
ÃÃ Z
+
ÃÃ[ \
$str
ŒŒ A
+
ŒŒB C
$str
–– <
+
––= >
$str““ â
+““ä ã
$str
‘‘ 2
+
‘‘3 4
$str
’’ 
+
’’ 
$str
÷÷ (
+
÷÷) *
$str
◊◊ 2
;
◊◊2 3
string
ŸŸ 
conexao
ŸŸ 
=
ŸŸ 
System
ŸŸ #
.
ŸŸ# $
Configuration
ŸŸ$ 1
.
ŸŸ1 2"
ConfigurationManager
ŸŸ2 F
.
ŸŸF G
ConnectionStrings
ŸŸG X
[
ŸŸX Y
$str
ŸŸY j
]
ŸŸj k
.
ŸŸk l
ConnectionString
ŸŸl |
;
ŸŸ| }
try
⁄⁄ 
{
€€ 
using
‹‹ 
(
‹‹ 
SqlConnection
‹‹ $

connection
‹‹% /
=
‹‹0 1
new
‹‹2 5
SqlConnection
‹‹6 C
(
‹‹C D
conexao
‹‹D K
)
‹‹K L
)
‹‹L M
{
›› 
using
ﬁﬁ 
(
ﬁﬁ 

SqlCommand
ﬁﬁ %
command
ﬁﬁ& -
=
ﬁﬁ. /
new
ﬁﬁ0 3

SqlCommand
ﬁﬁ4 >
(
ﬁﬁ> ?
sql
ﬁﬁ? B
,
ﬁﬁB C

connection
ﬁﬁD N
)
ﬁﬁN O
)
ﬁﬁO P
{
ﬂﬂ 

connection
‡‡ "
.
‡‡" #
Open
‡‡# '
(
‡‡' (
)
‡‡( )
;
‡‡) *
using
·· 
(
·· 
SqlDataReader
·· ,
r
··- .
=
··/ 0
command
··1 8
.
··8 9
ExecuteReader
··9 F
(
··F G
)
··G H
)
··H I
{
‚‚ 
if
„„ 
(
„„  
r
„„  !
.
„„! "
Read
„„" &
(
„„& '
)
„„' (
)
„„( )
{
‰‰ 
evaluate
ÂÂ  (
=
ÂÂ) *
Convert
ÂÂ+ 2
.
ÂÂ2 3
ToInt32
ÂÂ3 :
(
ÂÂ: ;
r
ÂÂ; <
[
ÂÂ< =
$num
ÂÂ= >
]
ÂÂ> ?
)
ÂÂ? @
;
ÂÂ@ A
}
ÊÊ 
}
ÁÁ 
}
ËË 
if
ÈÈ 
(
ÈÈ 

connection
ÈÈ "
.
ÈÈ" #
State
ÈÈ# (
==
ÈÈ) +
System
ÈÈ, 2
.
ÈÈ2 3
Data
ÈÈ3 7
.
ÈÈ7 8
ConnectionState
ÈÈ8 G
.
ÈÈG H
Open
ÈÈH L
)
ÈÈL M

connection
ÈÈN X
.
ÈÈX Y
Close
ÈÈY ^
(
ÈÈ^ _
)
ÈÈ_ `
;
ÈÈ` a
}
ÍÍ 
}
ÎÎ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
)
ÌÌ 
{
ÓÓ 
return
 
evaluate
 
;
  
}
ÒÒ 
return
ÛÛ 
evaluate
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
public
ˆˆ 
string
ˆˆ 

getAPPMain
ˆˆ  
(
ˆˆ  !
int
ˆˆ! $

UserSgq_Id
ˆˆ% /
,
ˆˆ/ 0
int
ˆˆ1 4
ParCompany_Id
ˆˆ5 B
,
ˆˆB C
DateTime
ˆˆD L
Date
ˆˆM Q
,
ˆˆQ R
string
ˆˆS Y
Level1ListId
ˆˆZ f
,
ˆˆf g
bool
ˆˆh l
isVolume
ˆˆm u
=
ˆˆv w
false
ˆˆx }
)
ˆˆ} ~
{
˜˜ 	
var
˙˙ 
html
˙˙ 
=
˙˙ 
new
˙˙ 
Html
˙˙ 
(
˙˙  
)
˙˙  !
;
˙˙! "
string
˚˚ 
culture
˚˚ 
;
˚˚ 
if
˝˝ 
(
˝˝ 
GlobalConfig
˝˝ 
.
˝˝ 
LanguageBrasil
˝˝ +
)
˝˝+ ,
{
˛˛ 
culture
ˇˇ 
=
ˇˇ 
$str
ˇˇ !
;
ˇˇ! "
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
culture
ÉÉ 
=
ÉÉ 
$str
ÉÉ !
;
ÉÉ! "
}
ÑÑ 
string
ÜÜ 

breadCrumb
ÜÜ 
=
ÜÜ 
$str
ÜÜ  Y
;
ÜÜY Z
string
àà 
selectPeriod
àà 
=
àà  !
html
àà" &
.
àà& '
option
àà' -
(
àà- .
$str
àà. 1
,
àà1 2

CommonData
àà3 =
.
àà= >
getResource
àà> I
(
ààI J
$str
ààJ R
)
ààR S
.
ààS T
Value
ààT Y
.
ààY Z
ToString
ààZ b
(
ààb c
)
ààc d
+
ààe f
$str
ààg k
)
ààk l
+
ààm n
html
ââ "
.
ââ" #
option
ââ# )
(
ââ) *
$str
ââ* -
,
ââ- .

CommonData
ââ/ 9
.
ââ9 :
getResource
ââ: E
(
ââE F
$str
ââF N
)
ââN O
.
ââO P
Value
ââP U
.
ââU V
ToString
ââV ^
(
ââ^ _
)
ââ_ `
+
ââa b
$str
ââc g
)
ââg h
+
ââi j
html
ää "
.
ää" #
option
ää# )
(
ää) *
$str
ää* -
,
ää- .

CommonData
ää/ 9
.
ää9 :
getResource
ää: E
(
ääE F
$str
ääF N
)
ääN O
.
ääO P
Value
ääP U
.
ääU V
ToString
ääV ^
(
ää^ _
)
ää_ `
+
ääa b
$str
ääc g
)
ääg h
+
ääi j
html
ãã "
.
ãã" #
option
ãã# )
(
ãã) *
$str
ãã* -
,
ãã- .

CommonData
ãã/ 9
.
ãã9 :
getResource
ãã: E
(
ããE F
$str
ããF N
)
ããN O
.
ããO P
Value
ããP U
.
ããU V
ToString
ããV ^
(
ãã^ _
)
ãã_ `
+
ããa b
$str
ããc g
)
ããg h
;
ããh i
string
çç 
hide
çç 
=
çç 
string
çç  
.
çç  !
Empty
çç! &
;
çç& '
if
éé 
(
éé 
GlobalConfig
éé 
.
éé 
Brasil
éé #
||
éé$ &
GlobalConfig
éé' 3
.
éé3 4
Ytoara
éé4 :
)
éé: ;
{
èè 
hide
êê 
=
êê 
$str
êê 
;
êê 
}
ëë 
selectPeriod
ìì 
=
ìì 
html
ìì 
.
ìì  
select
ìì  &
(
ìì& '
selectPeriod
ìì' 3
,
ìì3 4
id
ìì5 7
:
ìì7 8
$str
ìì9 A
,
ììA B
disabled
ììC K
:
ììK L
true
ììM Q
,
ììQ R
style
ììS X
:
ììX Y
$str
ììZ h
)
ììh i
;
ììi j
selectPeriod
ïï 
=
ïï 
$str
ïï ?
+
ïï@ A
hide
ïïB F
+
ïïG H
$str
ïïI N
+
ïïO P
selectPeriod
ïïQ ]
+
ïï^ _
$str
ïï` h
;
ïïh i
var
ôô 
seiLaLevel1
ôô 
=
ôô 

GetLevel01
ôô (
(
ôô( )
ParCompany_Id
ôô) 6
:
ôô6 7
ParCompany_Id
ôô8 E
,
ôôE F
dateCollect
ôôG R
:
ôôR S
Date
ôôT X
,
ôôX Y
Level1ListId
ôôZ f
:
ôôf g
Level1ListId
ôôh t
,
ôôt u
isVolume
ôôv ~
:
ôô~ 
isVolumeôôÄ à
)ôôà â
;ôôâ ä
string
õõ 
	container
õõ 
=
õõ 
html
õõ #
.
õõ# $
div
õõ$ '
(
õõ' (
	outerhtml
õõ( 1
:
õõ1 2

breadCrumb
õõ3 =
+
õõ> ?
selectPeriod
õõ@ L
+
õõM N
seiLaLevel1
õõO Z
,
õõZ [
classe
õõ\ b
:
õõb c
$str
õõd o
)
õõo p
;
õõp q
string
ùù 
buttons
ùù 
=
ùù 
$strùù Ë
;ùùË È
buttons
üü 
+=
üü 
$strüü Ô
;üüÔ 
buttons
°° 
+=
°° 
$str°° È
;°°È Í
buttons
££ 
+=
££ 
$str
££ T
+
££T U
	Resources
££V _
.
££_ `
Resource
££` h
.
££h i
corrective_action
££i z
+
££{ |
$str££} à
;££à â
string
•• 
message
•• 
=
•• 
$str•• ≠
+••Æ Ø
$str¶¶ ´
+¶¶¨ ≠
$strßß ´
+ßß¨ ≠
$str®® Ø
+®®∞ ±
$str©© ©
;©©© ™
string
ÆÆ 
	viewModal
ÆÆ 
=
ÆÆ 
$str
ÆÆ R
+
ÆÆS T
$strØØ Ü
+ØØá à
$str∞∞ Î
+∞∞Ï Ì
$str±± Î
;±±Î Ï
string
≥≥ 
modalVF
≥≥ 
=
≥≥ 
$str
≥≥ h
;
≥≥h i
string
µµ 

modalPCC1B
µµ 
=
µµ 
$str
µµ  n
;
µµn o
string
∑∑ 
messageConfirm
∑∑ !
=
∑∑" #
$str∑∑$ ≈
+∑∑∆ «
$str∏∏( …
+∏∏  À
$strππ( …
+ππ  À
$str∫∫( √
+∫∫ƒ ≈
$strªª( —
+ªª“ ”
$strºº( •
+ºº¶ ß

CommonDataºº® ≤
.ºº≤ ≥
getResourceºº≥ æ
(ººæ ø
$strººø ƒ
)ººƒ ≈
.ºº≈ ∆
Valueºº∆ À
.ººÀ Ã
ToStringººÃ ‘
(ºº‘ ’
)ºº’ ÷
+ºº◊ ÿ
$strººŸ ¸
+ºº˝ ˛
$strΩΩ( §
+ΩΩ• ¶

CommonDataΩΩß ±
.ΩΩ± ≤
getResourceΩΩ≤ Ω
(ΩΩΩ æ
$strΩΩæ ¬
)ΩΩ¬ √
.ΩΩ√ ƒ
ValueΩΩƒ …
.ΩΩ…  
ToStringΩΩ  “
(ΩΩ“ ”
)ΩΩ” ‘
+ΩΩ’ ÷
$strΩΩ◊ ¸
+ΩΩ˝ ˛
$strææ( …
;ææ…  
string
≈≈ 
debug
≈≈ 
=
≈≈ 
$str
≈≈ l
+
≈≈m n
$str
«« ;
+
««< =
$str
»» ]
+
»»^ _
$str
…… ^
+
……_ `
$str
   '
+
  ( )
$str
ÀÀ t
+
ÀÀu v
$str
ÃÃ '
+
ÃÃ( )
$str
ÕÕ Z
+
ÕÕ[ \
$str
ŒŒ '
+
ŒŒ( )
$str
œœ m
+
œœn o
$str
–– '
+
––( )
$str
—— _
+
——` a
$str
““ '
+
““( )
$str
”” k
+
””l m
$str
‘‘ '
+
‘‘( )
$str
’’ e
+
’’f g
$str
÷÷ '
+
÷÷( )
$str
◊◊ _
+
◊◊` a
$str
ÿÿ '
+
ÿÿ( )
$str
ŸŸ v
+
ŸŸw x
$str
€€ $
+
€€% &
$str
›› &
+
››' (
$str
ﬂﬂ H
+
ﬂﬂI J
$str
‡‡ @
+
‡‡A B
$str
‚‚ (
;
‚‚( )
debug
‰‰ 
=
‰‰ 
$str
‰‰ V
+
‰‰W X
$str
ÊÊ P
+
ÊÊQ R
$str
ÁÁ ]
+
ÁÁ^ _
$str
ËË ^
+
ËË_ `
$str
ÈÈ '
+
ÈÈ( )
$str
ÍÍ t
+
ÍÍu v
$str
ÎÎ '
+
ÎÎ( )
$str
ÏÏ Z
+
ÏÏ[ \
$str
ÌÌ '
+
ÌÌ( )
$str
ÓÓ m
+
ÓÓn o
$str
ÔÔ '
+
ÔÔ( )
$str
 _
+
` a
$str
ÒÒ '
+
ÒÒ( )
$str
ÚÚ k
+
ÚÚl m
$str
ÛÛ '
+
ÛÛ( )
$str
ÙÙ e
+
ÙÙf g
$str
ıı '
+
ıı( )
$str
ˆˆ _
+
ˆˆ` a
$str
˜˜ '
+
˜˜( )
$str
¯¯ v
+
¯¯w x
$str
˙˙ $
;
˙˙$ %
string
¸¸ 
local
¸¸ 
=
¸¸ 
$str
¸¸ 
;
¸¸ 
if
˛˛ 
(
˛˛ 
GlobalConfig
˛˛ 
.
˛˛ 
Brasil
˛˛ #
)
˛˛# $
{
ˇˇ 
local
ÄÄ 
=
ÄÄ 
$str
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
GlobalConfig
ÇÇ 
.
ÇÇ 
Eua
ÇÇ  
)
ÇÇ  !
{
ÉÉ 
local
ÑÑ 
=
ÑÑ 
$str
ÑÑ 
;
ÑÑ 
}
ÖÖ 
if
ÜÜ 
(
ÜÜ 
GlobalConfig
ÜÜ 
.
ÜÜ 
Canada
ÜÜ #
)
ÜÜ# $
{
áá 
local
àà 
=
àà 
$str
àà  
;
àà  !
}
ââ 
return
åå 
html
åå 
.
åå 
div
åå 
(
åå 
	outerhtml
çç %
:
çç% &
navBar
çç' -
(
çç- .

UserSgq_Id
çç. 8
,
çç8 9
ParCompany_Id
çç: G
)
ççG H
+
ççI J
	rightMenu
éé' 0
(
éé0 1
)
éé1 2
+
éé3 4
html
èè' +
.
èè+ ,
div
èè, /
(
èè/ 0
classe
èè0 6
:
èè6 7
$str
èè8 A
,
èèA B
style
èèC H
:
èèH I
$str
èèJ X
)
èèX Y
+
èèZ [
	container
êê' 0
+
êê1 2
buttons
ëë' .
+
ëë/ 0
footer
íí' -
(
íí- .
)
íí. /
,
íí/ 0
classe
ìì #
:
ìì# $
$str
ìì% /
,
ìì/ 0
tags
îî !
:
îî! "
$str
îî# 6
+
îî7 8

CommonData
îî9 C
.
îîC D
getResource
îîD O
(
îîO P
$str
îîP [
)
îî[ \
.
îî\ ]
Value
îî] b
.
îîb c
ToString
îîc k
(
îîk l
)
îîl m
+
îîn o
$str
îîp 
+îîÄ Å
cultureîîÇ â
+îîä ã
$strîîå ¶
+îîß ®
$strîî© ∂
+îî∑ ∏
localîîπ æ
+îîø ¿
$strîî¡ ∆
)
ïï 
+
ïï 
correctiveAction
ññ +
(
ññ+ ,
)
ññ, -
+
ññ. /
	viewModal
óó $
+
óó% &
modalVF
òò "
+
òò# $

modalPCC1B
ôô %
+
ôô& '
message
öö "
+
öö# $
messageConfirm
õõ )
+
õõ* +
debug
úú  
;
úú  !
}
ùù 	
public
°° 
string
°° 
navBar
°° 
(
°° 
int
°°  

UserSgq_Id
°°! +
,
°°+ ,
int
°°- 0
ParCompany_Id
°°1 >
)
°°> ?
{
¢¢ 	
string
££ 
navBar
££ 
=
££ 
$str££ —
+££“ ”
$str§§ Ù
+§§ı ˆ
$str•• —
+••“ ”
$str¶¶ Ì
+¶¶Ó Ô
$strßß —
+ßß“ ” 
selectUserCompanys
®® -
(
®®- .

UserSgq_Id
®®. 8
,
®®8 9
ParCompany_Id
®®: G
)
®®G H
+
®®I J
$str
™™ t
+
™™u v
$str´´ ∂
+´´∑ ∏
$str¨¨ —
+¨¨“ ”
$str≠≠ —
+≠≠“ ”
$strÆÆ —
;ÆÆ— “
return
∞∞ 
navBar
∞∞ 
;
∞∞ 
}
±± 	
public
≤≤ 
string
≤≤ 
	rightMenu
≤≤ 
(
≤≤  
)
≤≤  !
{
≥≥ 	
string
¥¥ 
menu
¥¥ 
=
¥¥ 
$str¥¥ ó
+¥¥ò ô
$strµµ ò
+µµô ö
$str∂∂ ì
+∂∂î ï

CommonData∂∂ñ †
.∂∂† °
getResource∂∂° ¨
(∂∂¨ ≠
$str∂∂≠ ª
)∂∂ª º
.∂∂º Ω
Value∂∂Ω ¬
.∂∂¬ √
ToString∂∂√ À
(∂∂À Ã
)∂∂Ã Õ
+∂∂Œ œ
$str∂∂– à
+∂∂â ä
$str∑∑ ô
+∑∑ö õ

CommonData∑∑ú ¶
.∑∑¶ ß
getResource∑∑ß ≤
(∑∑≤ ≥
$str∑∑≥ À
)∑∑À Ã
.∑∑Ã Õ
Value∑∑Õ “
.∑∑“ ”
ToString∑∑” €
(∑∑€ ‹
)∑∑‹ ›
+∑∑ﬁ ﬂ
$str∑∑‡ ò
;∑∑ò ô
if
∏∏ 
(
∏∏ 
GlobalConfig
∏∏ 
.
∏∏ 
Brasil
∏∏ #
==
∏∏$ &
true
∏∏' +
)
∏∏+ ,
{
ππ 
menu
∫∫ 
+=
∫∫ 
$str∫∫ Æ
;∫∫Æ Ø
}
ºº 
menu
ΩΩ 
+=
ΩΩ 
$str
ΩΩ X
+
ΩΩY Z

CommonData
ΩΩ[ e
.
ΩΩe f
getResource
ΩΩf q
(
ΩΩq r
$str
ΩΩr z
)
ΩΩz {
.
ΩΩ{ |
ValueΩΩ| Å
.ΩΩÅ Ç
ToStringΩΩÇ ä
(ΩΩä ã
)ΩΩã å
+ΩΩç é
$strΩΩè  
+ΩΩÀ Ã
$str
ææ \
+
ææ] ^

CommonData
ææ_ i
.
ææi j
getResource
ææj u
(
ææu v
$strææv Ä
)ææÄ Å
.ææÅ Ç
ValueææÇ á
.ææá à
ToStringææà ê
(ææê ë
)ææë í
+ææì î
$strææï —
+ææ“ ”
$str
øø b
+
øøc d

CommonData
øøe o
.
øøo p
getResource
øøp {
(
øø{ |
$strøø| Ö
)øøÖ Ü
.øøÜ á
Valueøøá å
.øøå ç
ToStringøøç ï
(øøï ñ
)øøñ ó
+øøò ô
$strøøö —
+øø“ ”
$str
¿¿ f
+
¿¿g h

CommonData
¿¿i s
.
¿¿s t
getResource
¿¿t 
(¿¿ Ä
$str¿¿Ä ä
)¿¿ä ã
.¿¿ã å
Value¿¿å ë
.¿¿ë í
ToString¿¿í ö
(¿¿ö õ
)¿¿õ ú
+¿¿ù û
$str¿¿ü —
+¿¿“ ”
$str
¡¡ j
+
¡¡k l

CommonData
¡¡m w
.
¡¡w x
getResource¡¡x É
(¡¡É Ñ
$str¡¡Ñ ì
)¡¡ì î
.¡¡î ï
Value¡¡ï ö
.¡¡ö õ
ToString¡¡õ £
(¡¡£ §
)¡¡§ •
+¡¡¶ ß
$str¡¡® —
+¡¡“ ”
$str
¬¬ a
+
¬¬b c

CommonData
¬¬d n
.
¬¬n o
getResource
¬¬o z
(
¬¬z {
$str¬¬{ â
)¬¬â ä
.¬¬ä ã
Value¬¬ã ê
.¬¬ê ë
ToString¬¬ë ô
(¬¬ô ö
)¬¬ö õ
+¬¬ú ù
$str¬¬û «
+¬¬» …
$str
√√ o
+
√√p q

CommonData
√√r |
.
√√| }
getResource√√} à
(√√à â
$str√√â í
)√√í ì
.√√ì î
Value√√î ô
.√√ô ö
ToString√√ö ¢
(√√¢ £
)√√£ §
+√√• ¶
$str√√ß Î
+√√Ï Ì
$strƒƒ Î
+ƒƒÏ Ì
$str≈≈ —
+≈≈“ ”
$str∆∆ —
;∆∆— “
return
»» 
menu
»» 
;
»» 
}
…… 	
public
   
string
   
correctiveAction
   &
(
  & '
)
  ' (
{
ÀÀ 	
string
ÃÃ 
correctiveAction
ÃÃ #
=
ÃÃ$ %
$strÕÕ Ä
+ÕÕÅ Ç
$str
ŒŒ 0
+
ŒŒ1 2
$str
œœ 4
+
œœ5 6
$str
–– "
+
––# $

CommonData
––% /
.
––/ 0
getResource
––0 ;
(
––; <
$str
––< O
)
––O P
.
––P Q
Value
––Q V
.
––V W
ToString
––W _
(
––_ `
)
––` a
+
––b c
$str
––d l
+
––m n
$str
—— f
+
——g h
$str
““  ^
+
““_ `
$str
”” $
+
””% &
$str
’’ F
+
’’G H
$str
÷÷  E
+
÷÷F G
$str
◊◊$ A
+
◊◊B C
$str
ÿÿ( T
+
ÿÿU V
$str
ŸŸ, c
+
ŸŸd e
$str
⁄⁄0 F
+
⁄⁄G H

CommonData
⁄⁄I S
.
⁄⁄S T
getResource
⁄⁄T _
(
⁄⁄_ `
$str
⁄⁄` y
)
⁄⁄y z
.
⁄⁄z {
Value⁄⁄{ Ä
.⁄⁄Ä Å
ToString⁄⁄Å â
(⁄⁄â ä
)⁄⁄ä ã
+⁄⁄å ç
$str⁄⁄é ö
+⁄⁄õ ú
$str
€€0 5
+
€€6 7

CommonData
€€8 B
.
€€B C
getResource
€€C N
(
€€N O
$str
€€O Z
)
€€Z [
.
€€[ \
Value
€€\ a
.
€€a b
ToString
€€b j
(
€€j k
)
€€k l
+
€€m n
$str€€o ô
+€€ö õ
$str
‹‹0 5
+
‹‹6 7

CommonData
‹‹8 B
.
‹‹B C
getResource
‹‹C N
(
‹‹N O
$str
‹‹O X
)
‹‹X Y
.
‹‹Y Z
Value
‹‹Z _
.
‹‹_ `
ToString
‹‹` h
(
‹‹h i
)
‹‹i j
+
‹‹k l
$str‹‹m ñ
+‹‹ó ò
$str
››0 5
+
››6 7

CommonData
››8 B
.
››B C
getResource
››C N
(
››N O
$str
››O V
)
››V W
.
››W X
Value
››X ]
.
››] ^
ToString
››^ f
(
››f g
)
››g h
+
››i j
$str››k í
+››ì î
$str
ﬁﬁ, 4
+
ﬁﬁ5 6
$str
ﬂﬂ, ^
+
ﬂﬂ_ `
$str
‡‡0 F
+
‡‡G H

CommonData
‡‡I S
.
‡‡S T
getResource
‡‡T _
(
‡‡_ `
$str
‡‡` s
)
‡‡s t
.
‡‡t u
Value
‡‡u z
.
‡‡z {
ToString‡‡{ É
(‡‡É Ñ
)‡‡Ñ Ö
+‡‡Ü á
$str‡‡à î
+‡‡ï ñ
$str
··0 5
+
··6 7

CommonData
··8 B
.
··B C
getResource
··C N
(
··N O
$str
··O Z
)
··Z [
.
··[ \
Value
··\ a
.
··a b
ToString
··b j
(
··j k
)
··k l
+
··m n
$str··o ö
+··õ ú
$str
‚‚0 5
+
‚‚6 7

CommonData
‚‚8 B
.
‚‚B C
getResource
‚‚C N
(
‚‚N O
$str
‚‚O ]
)
‚‚] ^
.
‚‚^ _
Value
‚‚_ d
.
‚‚d e
ToString
‚‚e m
(
‚‚m n
)
‚‚n o
+
‚‚p q
$str‚‚r ú
+‚‚ù û
$str
„„0 5
+
„„6 7

CommonData
„„8 B
.
„„B C
getResource
„„C N
(
„„N O
$str
„„O W
)
„„W X
.
„„X Y
Value
„„Y ^
.
„„^ _
ToString
„„_ g
(
„„g h
)
„„h i
+
„„j k
$str„„l ò
+„„ô ö
$str
‰‰, 4
+
‰‰5 6
$str
ÂÂ( 0
+
ÂÂ1 2
$str
ÊÊ$ ,
+
ÊÊ- .
$str
ÁÁ  (
+
ÁÁ) *
$str
ÍÍ  <
+
ÍÍ= >
$str
ÎÎ$ -
+
ÎÎ. /

CommonData
ÎÎ0 :
.
ÎÎ: ;
getResource
ÎÎ; F
(
ÎÎF G
$str
ÎÎG \
)
ÎÎ\ ]
.
ÎÎ] ^
Value
ÎÎ^ c
.
ÎÎc d
ToString
ÎÎd l
(
ÎÎl m
)
ÎÎm n
+
ÎÎo p
$str
ÎÎq |
+
ÎÎ} ~
$strÏÏ$ ú
+ÏÏù û
$str
ÌÌ  (
+
ÌÌ) *
$str
ÓÓ  <
+
ÓÓ= >
$str
ÔÔ$ -
+
ÔÔ. /

CommonData
ÔÔ0 :
.
ÔÔ: ;
getResource
ÔÔ; F
(
ÔÔF G
$str
ÔÔG d
)
ÔÔd e
.
ÔÔe f
Value
ÔÔf k
.
ÔÔk l
ToString
ÔÔl t
(
ÔÔt u
)
ÔÔu v
+
ÔÔw x
$strÔÔy Ñ
+ÔÔÖ Ü
$str$ £
+§ •
$str
ÒÒ  (
+
ÒÒ) *
$str
ÚÚ  <
+
ÚÚ= >
$str
ÛÛ$ -
+
ÛÛ. /

CommonData
ÛÛ0 :
.
ÛÛ: ;
getResource
ÛÛ; F
(
ÛÛF G
$str
ÛÛG \
)
ÛÛ\ ]
.
ÛÛ] ^
Value
ÛÛ^ c
.
ÛÛc d
ToString
ÛÛd l
(
ÛÛl m
)
ÛÛm n
+
ÛÛo p
$str
ÛÛq |
+
ÛÛ} ~
$strÙÙ$ ú
+ÙÙù û
$str
ıı  (
+
ıı) *
$str
ˆˆ  <
+
ˆˆ= >
$str
˜˜$ -
+
˜˜. /

CommonData
˜˜0 :
.
˜˜: ;
getResource
˜˜; F
(
˜˜F G
$str
˜˜G [
)
˜˜[ \
.
˜˜\ ]
Value
˜˜] b
.
˜˜b c
ToString
˜˜c k
(
˜˜k l
)
˜˜l m
+
˜˜n o
$str
˜˜p {
+
˜˜| }
$str¯¯$ ù
+¯¯û ü
$str
˘˘  (
;
˘˘( )
if
˚˚ 
(
˚˚ 
GlobalConfig
˚˚ 
.
˚˚ 
Eua
˚˚  
)
˚˚  !
{
¸¸ 
correctiveAction
˝˝  
+=
˝˝! #
$str
˛˛  5
+
˛˛6 7
$str
ˇˇ$ >
+
ˇˇ? @
$str
ÄÄ( Q
+
ÄÄR S
$str
ÅÅ, J
+
ÅÅK L
$str
ÇÇ, M
+
ÇÇN O
$str
ÉÉ, X
+
ÉÉY Z
$str
ÑÑ, i
+
ÑÑj k

CommonData
ÑÑl v
.
ÑÑv w
getResourceÑÑw Ç
(ÑÑÇ É
$strÑÑÉ ï
)ÑÑï ñ
.ÑÑñ ó
ValueÑÑó ú
.ÑÑú ù
ToStringÑÑù •
(ÑÑ• ¶
)ÑÑ¶ ß
+ÑÑ® ©
$strÑÑ™ µ
+ÑÑ∂ ∑
$str
ÖÖ( 0
+
ÖÖ1 2
$str
ÜÜ$ ,
+
ÜÜ- .
$str
áá$ >
+
áá? @
$str
àà( R
+
ààS T
$str
ââ, J
+
ââK L
$str
ää, N
+
ääO P
$str
ãã, R
+
ããS T
$str
åå, j
+
ååk l

CommonData
ååm w
.
ååw x
getResourceååx É
(ååÉ Ñ
$strååÑ ñ
)ååñ ó
.ååó ò
Valueååò ù
.ååù û
ToStringååû ¶
(åå¶ ß
)ååß ®
+åå© ™
$stråå´ ∂
+åå∑ ∏
$str
çç( 0
+
çç1 2
$str
éé$ ,
+
éé- .
$str
èè  (
;
èè( )
}
êê 
correctiveAction
ìì 
+=
ìì 
$str
îî  >
;
îî> ?
if
ññ 
(
ññ 
GlobalConfig
ññ 
.
ññ 
Eua
ññ  
)
ññ  !
{
óó 
correctiveAction
òò  
+=
òò! #
$str
ôô$ @
+
ôôA B
$str
öö( o
+
ööp q

CommonData
õõ, 6
.
õõ6 7
getResource
õõ7 B
(
õõB C
$str
õõC X
)
õõX Y
.
õõY Z
Value
õõZ _
.
õõ_ `
ToString
õõ` h
(
õõh i
)
õõi j
+
õõk l
$str
úú( 3
+
úú4 5
$str
ùù( p
+
ùùq r

CommonData
ûû, 6
.
ûû6 7
getResource
ûû7 B
(
ûûB C
$str
ûûC X
)
ûûX Y
.
ûûY Z
Value
ûûZ _
.
ûû_ `
ToString
ûû` h
(
ûûh i
)
ûûi j
+
ûûk l
$str
üü( 3
+
üü4 5
$str
††$ -
;
††- .
}
°° 
correctiveAction
££ 
+=
££ 
$str
§§$ V
+
§§W X

CommonData
§§Y c
.
§§c d
getResource
§§d o
(
§§o p
$str
§§p w
)
§§w x
.
§§x y
Value
§§y ~
.
§§~ 
ToString§§ á
(§§á à
)§§à â
+§§ä ã
$str§§å ó
+§§ò ô
$str
••$ g
+
••h i

CommonData
••j t
.
••t u
getResource••u Ä
(••Ä Å
$str••Å á
)••á à
.••à â
Value••â é
.••é è
ToString••è ó
(••ó ò
)••ò ô
+••ö õ
$str••ú ®
+••© ™
$str
¶¶  (
+
¶¶) *
$str
ßß  
+
ßß! "
$str
®®  
+
®®! "
$str
©©  
+
©©! "
$str
™™ 
;
™™ 
if
¨¨ 
(
¨¨ 
GlobalConfig
¨¨ 
.
¨¨ 
Eua
¨¨  
)
¨¨  !
{
≠≠ 
correctiveAction
ÆÆ  
+=
ÆÆ! #
$strØØ ç
+ØØé è
$str
∞∞ 4
+
∞∞5 6
$str
±± :
+
±±; <
$str
≤≤  G
+
≤≤H I

CommonData
≤≤J T
.
≤≤T U
getResource
≤≤U `
(
≤≤` a
$str
≤≤a v
)
≤≤v w
.
≤≤w x
Value
≤≤x }
.
≤≤} ~
ToString≤≤~ Ü
(≤≤Ü á
)≤≤á à
+≤≤â ä
$str≤≤ã ì
+≤≤î ï
$str
≥≥  H
+
≥≥I J

CommonData
≥≥K U
.
≥≥U V
getResource
≥≥V a
(
≥≥a b
$str
≥≥b w
)
≥≥w x
.
≥≥x y
Value
≥≥y ~
.
≥≥~ 
ToString≥≥ á
(≥≥á à
)≥≥à â
+≥≥ä ã
$str≥≥å î
+≥≥ï ñ
$str
¥¥  [
+
¥¥\ ]
$str
µµ$ b
+
µµc d
$str
∂∂  (
+
∂∂) *
$str
∑∑ $
+
∑∑% &
$str
∏∏ 8
+
∏∏9 :
$str
ππ  5
+
ππ6 7
$str
∫∫$ ?
+
∫∫@ A
$str
ªª( D
+
ªªE F
$str
ºº, 5
+
ºº6 7

CommonData
ºº8 B
.
ººB C
getResource
ººC N
(
ººN O
$str
ººO V
)
ººV W
.
ººW X
Value
ººX ]
.
ºº] ^
ToString
ºº^ f
(
ººf g
)
ººg h
+
ººi j
$str
ººk v
+
ººw x
$str
ΩΩ, p
+
ΩΩq r
$str
ææ( 0
+
ææ1 2
$str
øø( D
+
øøE F
$str
¿¿, 5
+
¿¿6 7

CommonData
¿¿8 B
.
¿¿B C
getResource
¿¿C N
(
¿¿N O
$str
¿¿O Y
)
¿¿Y Z
.
¿¿Z [
Value
¿¿[ `
.
¿¿` a
ToString
¿¿a i
(
¿¿i j
)
¿¿j k
+
¿¿l m
$str
¿¿n y
+
¿¿z {
$str
¡¡, w
+
¡¡x y
$str
¬¬( 0
+
¬¬1 2
$str
√√( e
+
√√f g
$str
ƒƒ, ^
+
ƒƒ_ `

CommonData
ƒƒa k
.
ƒƒk l
getResource
ƒƒl w
(
ƒƒw x
$str
ƒƒx 
)ƒƒ Ä
.ƒƒÄ Å
ValueƒƒÅ Ü
.ƒƒÜ á
ToStringƒƒá è
(ƒƒè ê
)ƒƒê ë
+ƒƒí ì
$strƒƒî √
+ƒƒƒ ≈
$str
≈≈( 0
+
≈≈1 2
$str
∆∆( c
+
∆∆d e
$str
««, j
+
««k l
$str
»»( 0
+
»»1 2
$str
……( h
+
……i j
$str
  , k
+
  l m
$str
ÀÀ( 0
+
ÀÀ1 2
$str
ÃÃ$ ,
+
ÃÃ- .
$str
ÕÕ  (
+
ÕÕ) *
$str
ŒŒ $
+
ŒŒ% &
$str
œœ :
+
œœ; <
$str
––  Y
+
––Z [

CommonData
––\ f
.
––f g
getResource
––g r
(
––r s
$str
––s z
)
––z {
.
––{ |
Value––| Å
.––Å Ç
ToString––Ç ä
(––ä ã
)––ã å
+––ç é
$str––è õ
+––ú ù
$str
——  m
+
——n o

CommonData
——p z
.
——z {
getResource——{ Ü
(——Ü á
$str——á ç
)——ç é
.——é è
Value——è î
.——î ï
ToString——ï ù
(——ù û
)——û ü
+——† °
$str——¢ Æ
+——Ø ∞
$str
““ $
+
““% &
$str
””  
+
””! "
$str
‘‘ 
+
‘‘ 
$str
’’ 
;
’’ 
}
÷÷ 
return
ÿÿ 
correctiveAction
ÿÿ #
;
ÿÿ# $
}
ŸŸ 	
public
€€ 
string
€€ 
footer
€€ 
(
€€ 
)
€€ 
{
‹‹ 	
string
›› 
foot
›› 
=
›› 
$str›› ◊
+››ÿ Ÿ
$strﬁﬁ ∂
+ﬁﬁ∑ ∏
$strﬂﬂ π
+ﬂﬂ∫ ª
$str‡‡ ‚
+‡‡„ ‰
$str·· ∂
+··∑ ∏
$str‚‚ ∂
;‚‚∂ ∑
return
‰‰ 
foot
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ÍÍ 
string
ÍÍ 

GetLevel01
ÍÍ  
(
ÍÍ  !
int
ÍÍ! $
ParCompany_Id
ÍÍ% 2
,
ÍÍ2 3
DateTime
ÍÍ4 <
dateCollect
ÍÍ= H
,
ÍÍH I
string
ÍÍJ P
Level1ListId
ÍÍQ ]
,
ÍÍ] ^
bool
ÍÍ_ c
isVolume
ÍÍd l
)
ÍÍl m
{
ÎÎ 	
var
 
html
 
=
 
new
 
Html
 
(
  
)
  !
;
! "
var
ÛÛ 
ParLevel1DB
ÛÛ 
=
ÛÛ 
new
ÛÛ !
SGQDBContext
ÛÛ" .
.
ÛÛ. /
	ParLevel1
ÛÛ/ 8
(
ÛÛ8 9
db
ÛÛ9 ;
)
ÛÛ; <
;
ÛÛ< =
var
ÙÙ 
ParCounterDB
ÙÙ 
=
ÙÙ 
new
ÙÙ "
SGQDBContext
ÙÙ# /
.
ÙÙ/ 0

ParCounter
ÙÙ0 :
(
ÙÙ: ;
db
ÙÙ; =
)
ÙÙ= >
;
ÙÙ> ?
var
ˆˆ +
ParLevel1VariableProductionDB
ˆˆ -
=
ˆˆ. /
new
ˆˆ0 3
SGQDBContext
ˆˆ4 @
.
ˆˆ@ A)
ParLevel1VariableProduction
ˆˆA \
(
ˆˆ\ ]
db
ˆˆ] _
)
ˆˆ_ `
;
ˆˆ` a
var
˜˜ 
ParRelapseDB
˜˜ 
=
˜˜ 
new
˜˜ "
SGQDBContext
˜˜# /
.
˜˜/ 0

ParRelapse
˜˜0 :
(
˜˜: ;
db
˜˜; =
)
˜˜= >
;
˜˜> ?
var
˙˙ 
parLevel1List
˙˙ 
=
˙˙ 
ParLevel1DB
˙˙  +
.
˙˙+ ,.
 getParLevel1ParCriticalLevelList
˙˙, L
(
˙˙L M
ParCompany_Id
˙˙M Z
:
˙˙Z [
ParCompany_Id
˙˙\ i
,
˙˙i j
Level1ListId
˙˙k w
:
˙˙w x
Level1ListId˙˙y Ö
)˙˙Ö Ü
;˙˙Ü á
if
¸¸ 
(
¸¸ 
isVolume
¸¸ 
)
¸¸ 
{
˝˝ 
var
˛˛ 
parLevel1Familia
˛˛ $
=
˛˛% &
ParLevel1DB
˛˛' 2
.
˛˛2 3
getByFamilia
˛˛3 ?
(
˛˛? @
dateCollection
˛˛@ N
:
˛˛N O
dateCollect
˛˛P [
)
˛˛[ \
;
˛˛\ ]
parLevel1List
ÄÄ 
=
ÄÄ 
parLevel1List
ÄÄ  -
.
ÄÄ- .
Where
ÄÄ. 3
(
ÄÄ3 4
r
ÄÄ4 5
=>
ÄÄ6 8
r
ÅÅ, -
.
ÅÅ- .
Name
ÅÅ. 2
.
ÅÅ2 3
Equals
ÅÅ3 9
(
ÅÅ9 :
$str
ÅÅ: P
)
ÅÅP Q
||
ÅÅR T
r
ÇÇ, -
.
ÇÇ- .
Name
ÇÇ. 2
.
ÇÇ2 3
Equals
ÇÇ3 9
(
ÇÇ9 :
$str
ÇÇ: I
)
ÇÇI J
||
ÇÇK M
r
ÉÉ, -
.
ÉÉ- .
Name
ÉÉ. 2
.
ÉÉ2 3
Equals
ÉÉ3 9
(
ÉÉ9 :
$str
ÉÉ: N
)
ÉÉN O
||
ÉÉP R
r
ÑÑ, -
.
ÑÑ- .
Name
ÑÑ. 2
.
ÑÑ2 3
Equals
ÑÑ3 9
(
ÑÑ9 :
$str
ÑÑ: O
)
ÑÑO P
||
ÑÑQ S
r
ÖÖ, -
.
ÖÖ- .%
IsFixedEvaluetionNumber
ÖÖ. E
==
ÖÖF H
true
ÖÖI M
)
ÖÖM N
;
ÖÖN O
}
ÜÜ 
var
ââ +
parLevel1GroupByCriticalLevel
ââ -
=
ââ. /
parLevel1List
ââ0 =
.
ââ= >
OrderBy
ââ> E
(
ââE F
p
ââF G
=>
ââH J
p
ââK L
.
ââL M!
ParCriticalLevel_Id
ââM `
)
ââ` a
.
ââa b
GroupBy
ââb i
(
ââi j
p
ââj k
=>
ââl n
p
ââo p
.
ââp q"
ParCriticalLevel_Idââq Ñ
)ââÑ Ö
;ââÖ Ü
bool
åå 
ParCriticalLevel
åå !
=
åå" #
false
åå$ )
;
åå) *
string
êê 

listlevel1
êê 
=
êê 
null
êê  $
;
êê$ %
string
ëë 

listLevel2
ëë 
=
ëë 
null
ëë  $
;
ëë$ %
string
íí 

listLevel3
íí 
=
íí 
null
íí  $
;
íí$ %
string
îî 
excecao
îî 
=
îî 
null
îî !
;
îî! "
foreach
òò 
(
òò 
var
òò 
parLevel1Group
òò '
in
òò( *+
parLevel1GroupByCriticalLevel
òò+ H
)
òòH I
{
ôô 
string
ûû 
level01GroupList
ûû '
=
ûû( )
null
ûû* .
;
ûû. /
string
†† 
	parLevel1
††  
=
††! "
null
††# '
;
††' (
string
¢¢ !
nameParCritialLevel
¢¢ *
=
¢¢+ ,
null
¢¢- 1
;
¢¢1 2
foreach
®® 
(
®® 
var
®® 
	parlevel1
®® &
in
®®' )
parLevel1Group
®®* 8
)
®®8 9
{
©© 
string
≠≠ 
tipoTela
≠≠ #
=
≠≠$ %
$str
≠≠& (
;
≠≠( )
var
ØØ 
variableList
ØØ $
=
ØØ% &+
ParLevel1VariableProductionDB
ØØ' D
.
ØØD E
getVariable
ØØE P
(
ØØP Q
	parlevel1
ØØQ Z
.
ØØZ [
Id
ØØ[ ]
)
ØØ] ^
.
ØØ^ _
ToList
ØØ_ e
(
ØØe f
)
ØØf g
;
ØØg h
if
±± 
(
±± 
variableList
±± $
.
±±$ %
Count
±±% *
>
±±+ ,
$num
±±- .
)
±±. /
{
≤≤ 
tipoTela
≥≥  
=
≥≥! "
variableList
≥≥# /
[
≥≥/ 0
$num
≥≥0 1
]
≥≥1 2
.
≥≥2 3
Name
≥≥3 7
;
≥≥7 8
}
¥¥ 
var
∑∑  
ParLevel1AlertasDB
∑∑ *
=
∑∑+ ,
new
∑∑- 0
SGQDBContext
∑∑1 =
.
∑∑= >
ParLevel1Alertas
∑∑> N
(
∑∑N O
db
∑∑O Q
)
∑∑Q R
;
∑∑R S
var
∏∏ 
alertas
∏∏ 
=
∏∏  ! 
ParLevel1AlertasDB
∏∏" 4
.
∏∏4 5

getAlertas
∏∏5 ?
(
∏∏? @
	parlevel1
∏∏@ I
.
∏∏I J
Id
∏∏J L
,
∏∏L M
ParCompany_Id
∏∏N [
,
∏∏[ \
dateCollect
∏∏] h
)
∏∏h i
;
∏∏i j
if
∫∫ 
(
∫∫ 
	parlevel1
∫∫ !
.
∫∫! "!
ParCriticalLevel_Id
∫∫" 5
>
∫∫6 7
$num
∫∫8 9
)
∫∫9 :
{
ªª 
ParCriticalLevel
ΩΩ (
=
ΩΩ) *
true
ΩΩ+ /
;
ΩΩ/ 0!
nameParCritialLevel
øø +
=
øø, -
	parlevel1
øø. 7
.
øø7 8#
ParCriticalLevel_Name
øø8 M
;
øøM N
decimal
√√ 

tipoAlerta
√√  *
=
√√+ ,
	parlevel1
√√- 6
.
√√6 7

tipoAlerta
√√7 A
;
√√A B
decimal
ƒƒ 
valorAlerta
ƒƒ  +
=
ƒƒ, -
	parlevel1
ƒƒ. 7
.
ƒƒ7 8
valorAlerta
ƒƒ8 C
;
ƒƒC D
decimal
∆∆ 
alertaNivel1
∆∆  ,
=
∆∆- .
$num
∆∆/ 0
;
∆∆0 1
decimal
«« 
alertaNivel2
««  ,
=
««- .
$num
««/ 0
;
««0 1
string
»» 
alertaNivel3
»» +
=
»», -
$str
»». 0
;
»»0 1
decimal
   
volumeAlerta
    ,
=
  - .
$num
  / 0
;
  0 1
decimal
ÀÀ 
meta
ÀÀ  $
=
ÀÀ% &
$num
ÀÀ' (
;
ÀÀ( )
if
ÕÕ 
(
ÕÕ 

tipoAlerta
ÕÕ &
==
ÕÕ' )
$num
ÕÕ* +
)
ÕÕ+ ,
{
ŒŒ 
if
œœ 
(
œœ  
alertas
œœ  '
!=
œœ( *
null
œœ+ /
)
œœ/ 0
{
–– 
alertaNivel1
——  ,
=
——- .
alertas
——/ 6
.
——6 7
Nivel1
——7 =
;
——= >
alertaNivel2
““  ,
=
““- .
alertas
““/ 6
.
““6 7
Nivel2
““7 =
;
““= >
alertaNivel3
””  ,
=
””- .
$str
””/ 3
;
””3 4
volumeAlerta
‘‘  ,
=
‘‘- .
alertas
‘‘/ 6
.
‘‘6 7
VolumeAlerta
‘‘7 C
;
‘‘C D
meta
’’  $
=
’’% &
alertas
’’' .
.
’’. /
Meta
’’/ 3
;
’’3 4
}
÷÷ 
}
◊◊ 
else
ÿÿ 
if
ÿÿ 
(
ÿÿ  !

tipoAlerta
ÿÿ! +
==
ÿÿ, .
$num
ÿÿ/ 0
)
ÿÿ0 1
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄  
alertas
⁄⁄  '
!=
⁄⁄( *
null
⁄⁄+ /
)
⁄⁄/ 0
{
€€ 
alertaNivel1
‹‹  ,
=
‹‹- .
valorAlerta
‹‹/ :
;
‹‹: ;
alertaNivel2
››  ,
=
››- .
valorAlerta
››/ :
;
››: ;
alertaNivel3
ﬁﬁ  ,
=
ﬁﬁ- .
$str
ﬁﬁ/ 3
;
ﬁﬁ3 4
volumeAlerta
ﬂﬂ  ,
=
ﬂﬂ- .
alertas
ﬂﬂ/ 6
.
ﬂﬂ6 7
VolumeAlerta
ﬂﬂ7 C
;
ﬂﬂC D
meta
‡‡  $
=
‡‡% &
alertas
‡‡' .
.
‡‡. /
Meta
‡‡/ 3
;
‡‡3 4
}
·· 
}
‚‚ 
else
„„ 
if
„„ 
(
„„  !

tipoAlerta
„„! +
==
„„, .
$num
„„/ 0
)
„„0 1
{
‰‰ 
if
ÂÂ 
(
ÂÂ  
alertas
ÂÂ  '
!=
ÂÂ( *
null
ÂÂ+ /
)
ÂÂ/ 0
{
ÊÊ 
alertaNivel1
ÁÁ  ,
=
ÁÁ- .
valorAlerta
ÁÁ/ :
;
ÁÁ: ;
alertaNivel2
ËË  ,
=
ËË- .
valorAlerta
ËË/ :
;
ËË: ;
alertaNivel3
ÈÈ  ,
=
ÈÈ- .
$str
ÈÈ/ 3
;
ÈÈ3 4
volumeAlerta
ÍÍ  ,
=
ÍÍ- .
alertas
ÍÍ/ 6
.
ÍÍ6 7
VolumeAlerta
ÍÍ7 C
;
ÍÍC D
meta
ÎÎ  $
=
ÎÎ% &
alertas
ÎÎ' .
.
ÎÎ. /
Meta
ÎÎ/ 3
;
ÎÎ3 4
}
ÏÏ 
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ  !

tipoAlerta
ÓÓ! +
==
ÓÓ, .
$num
ÓÓ/ 0
)
ÓÓ0 1
{
ÔÔ 
if
 
(
  
alertas
  '
!=
( *
null
+ /
)
/ 0
{
ÒÒ 
alertaNivel1
ÚÚ  ,
=
ÚÚ- .
alertas
ÚÚ/ 6
.
ÚÚ6 7
Nivel1
ÚÚ7 =
;
ÚÚ= >
alertaNivel2
ÛÛ  ,
=
ÛÛ- .
alertas
ÛÛ/ 6
.
ÛÛ6 7
Nivel2
ÛÛ7 =
;
ÛÛ= >
alertaNivel3
ÙÙ  ,
=
ÙÙ- .
$str
ÙÙ/ 3
;
ÙÙ3 4
volumeAlerta
ıı  ,
=
ıı- .
alertas
ıı/ 6
.
ıı6 7
VolumeAlerta
ıı7 C
;
ııC D
meta
ˆˆ  $
=
ˆˆ% &
alertas
ˆˆ' .
.
ˆˆ. /
Meta
ˆˆ/ 3
;
ˆˆ3 4
}
˜˜ 
}
¯¯ 
else
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚  
alertas
˚˚  '
!=
˚˚( *
null
˚˚+ /
)
˚˚/ 0
{
¸¸ 
alertaNivel1
˝˝  ,
=
˝˝- .
alertas
˝˝/ 6
.
˝˝6 7
Nivel1
˝˝7 =
;
˝˝= >
alertaNivel2
˛˛  ,
=
˛˛- .
alertas
˛˛/ 6
.
˛˛6 7
Nivel2
˛˛7 =
;
˛˛= >
alertaNivel3
ˇˇ  ,
=
ˇˇ- .
$str
ˇˇ/ 3
;
ˇˇ3 4
volumeAlerta
ÄÄ  ,
=
ÄÄ- .
alertas
ÄÄ/ 6
.
ÄÄ6 7
VolumeAlerta
ÄÄ7 C
;
ÄÄC D
meta
ÅÅ  $
=
ÅÅ% &
alertas
ÅÅ' .
.
ÅÅ. /
Meta
ÅÅ/ 3
;
ÅÅ3 4
}
ÇÇ 
}
ÉÉ 
var
ÖÖ 
listCounter
ÖÖ '
=
ÖÖ( )
ParCounterDB
ÖÖ* 6
.
ÖÖ6 7(
GetParLevelXParCounterList
ÖÖ7 Q
(
ÖÖQ R
	parlevel1
ÖÖR [
.
ÖÖ[ \
Id
ÖÖ\ ^
,
ÖÖ^ _
$num
ÖÖ` a
,
ÖÖa b
$num
ÖÖc d
)
ÖÖd e
;
ÖÖe f
string
áá 
painelCounters
áá -
=
áá. /
$str
áá0 2
;
áá2 3
if
ää 
(
ää 
listCounter
ää '
!=
ää( *
null
ää+ /
)
ää/ 0
{
ãã 
painelCounters
åå *
=
åå+ ,
html
åå- 1
.
åå1 2
painelCounters
åå2 @
(
åå@ A
listCounter
ååA L
.
ååL M
Where
ååM R
(
ååR S
r
ååS T
=>
ååU W
r
ååX Y
.
ååY Z
Local
ååZ _
==
åå` b
$str
ååc p
)
ååp q
,
ååq r
$stråås ñ
)ååñ ó
;ååó ò
}
çç 
if
èè 
(
èè 
GlobalConfig
èè (
.
èè( )
Eua
èè) ,
&&
èè- /
	parlevel1
èè0 9
.
èè9 :
Name
èè: >
.
èè> ?
Contains
èè? G
(
èèG H
$str
èèH M
)
èèM N
)
èèN O
{
êê 
tipoTela
ëë $
=
ëë% &
$str
ëë' ,
;
ëë, -
}
íí 
var
îî 
listParRelapse
îî *
=
îî+ ,
ParRelapseDB
îî- 9
.
îî9 :
getRelapses
îî: E
(
îîE F
	parlevel1
îîF O
.
îîO P
Id
îîP R
)
îîR S
;
îîS T
string
ññ 
level01
ññ &
=
ññ' (
html
ññ) -
.
ññ- .
level1
ññ. 4
(
ññ4 5
	parlevel1
ññ5 >
,
ññ> ?
tipoTela
óó5 =
:
óó= >
tipoTela
óó? G
,
óóG H
totalAvaliado
òò5 B
:
òòB C
$num
òòD E
,
òòE F
totalDefeitos
ôô5 B
:
ôôB C
$num
ôôD E
,
ôôE F
alertNivel1
öö5 @
:
öö@ A
alertaNivel1
ööB N
,
ööN O
alertNivel2
õõ5 @
:
õõ@ A
alertaNivel2
õõB N
,
õõN O
alertaNivel3
úú5 A
:
úúA B
alertaNivel3
úúC O
,
úúO P
numeroAvaliacoes
ùù5 E
:
ùùE F
$num
ùùG H
,
ùùH I
metaDia
ûû5 <
:
ûû< =
alertaNivel1
ûû> J
*
ûûK L
$num
ûûM N
,
ûûN O
metaTolerancia
üü5 C
:
üüC D
alertaNivel1
üüE Q
,
üüQ R
metaAvaliacao
††5 B
:
††B C
$num
††D E
,
††E F
alertaAtual
°°5 @
:
°°@ A
$num
°°B C
,
°°C D#
avaliacaoultimoalerta
¢¢5 J
:
¢¢J K
$num
¢¢L M
,
¢¢M N'
monitoramentoultimoalerta
££5 N
:
££N O
$num
££P Q
,
££Q R#
volumeAlertaIndicador
§§5 J
:
§§J K
volumeAlerta
§§L X
,
§§X Y
metaIndicador
••5 B
:
••B C
meta
••D H
,
••H I'
IsLimitedEvaluetionNumber
¶¶5 N
:
¶¶N O
	parlevel1
¶¶P Y
.
¶¶Y Z'
IsLimitedEvaluetionNumber
¶¶Z s
,
¶¶s t
listParRelapse
ßß5 C
:
ßßC D
listParRelapse
ßßE S
)
ßßS T
;
ßßT U
	parLevel1
©© !
+=
©©" $
html
©©% )
.
©©) *
listgroupItem
©©* 7
(
©©7 8
	parlevel1
©©8 A
.
©©A B
Id
©©B D
.
©©D E
ToString
©©E M
(
©©M N
)
©©N O
,
©©O P
classe
©©Q W
:
©©W X
$str
©©Y _
+
©©` a
excecao
©©b i
,
©©i j
	outerhtml
©©k t
:
©©t u
level01
©©v }
+
©©~ 
painelCounters©©Ä é
)©©é è
;©©è ê
}
™™ 
else
´´ 
{
¨¨ 
	parLevel1
ÆÆ !
+=
ÆÆ" $
html
ÆÆ% )
.
ÆÆ) *
listgroupItem
ÆÆ* 7
(
ÆÆ7 8
	parlevel1
ÆÆ8 A
.
ÆÆA B
Id
ÆÆB D
.
ÆÆD E
ToString
ÆÆE M
(
ÆÆM N
)
ÆÆN O
,
ÆÆO P
	outerhtml
ÆÆQ Z
:
ÆÆZ [
	parlevel1
ÆÆ\ e
.
ÆÆe f
Name
ÆÆf j
,
ÆÆj k
classe
ÆÆl r
:
ÆÆr s
excecao
ÆÆt {
)
ÆÆ{ |
;
ÆÆ| }
}
ØØ 
string
±± 
level3Group
±± &
=
±±' (
null
±±) -
;
±±- .

listLevel2
∂∂ 
+=
∂∂ !

GetLevel02
∂∂" ,
(
∂∂, -
	parlevel1
∂∂- 6
,
∂∂6 7
ParCompany_Id
∂∂8 E
,
∂∂E F
dateCollect
∂∂G R
,
∂∂R S
ref
∂∂T W
level3Group
∂∂X c
)
∂∂c d
;
∂∂d e

listLevel3
ππ 
+=
ππ !
level3Group
ππ" -
;
ππ- .
}
ªª 
if
øø 
(
øø 
ParCriticalLevel
øø $
==
øø% '
true
øø( ,
)
øø, -
{
¿¿ 
Html
¡¡ 
.
¡¡ 
bootstrapcolor
¡¡ '
?
¡¡' (
color
¡¡) .
=
¡¡/ 0
null
¡¡1 5
;
¡¡5 6
if
¬¬ 
(
¬¬ 
parLevel1Group
¬¬ &
.
¬¬& '
Key
¬¬' *
==
¬¬+ -
$num
¬¬. /
)
¬¬/ 0
{
√√ 
color
ƒƒ 
=
ƒƒ 
Html
ƒƒ  $
.
ƒƒ$ %
bootstrapcolor
ƒƒ% 3
.
ƒƒ3 4
danger
ƒƒ4 :
;
ƒƒ: ;
}
≈≈ 
else
∆∆ 
if
∆∆ 
(
∆∆ 
parLevel1Group
∆∆ +
.
∆∆+ ,
Key
∆∆, /
==
∆∆0 2
$num
∆∆3 4
)
∆∆4 5
{
«« 
color
»» 
=
»» 
Html
»»  $
.
»»$ %
bootstrapcolor
»»% 3
.
»»3 4
warning
»»4 ;
;
»»; <
}
…… 
else
   
if
   
(
   
parLevel1Group
   +
.
  + ,
Key
  , /
==
  0 2
$num
  3 4
)
  4 5
{
ÀÀ 
color
ÃÃ 
=
ÃÃ 
Html
ÃÃ  $
.
ÃÃ$ %
bootstrapcolor
ÃÃ% 3
.
ÃÃ3 4
info
ÃÃ4 8
;
ÃÃ8 9
}
ÕÕ 
	parLevel1
œœ 
=
œœ 
html
œœ  $
.
œœ$ %
	accordeon
œœ% .
(
œœ. /
id
––0 2
:
––2 3
parLevel1Group
––4 B
.
––B C
Key
––C F
.
––F G
ToString
––G O
(
––O P
)
––P Q
+
––R S
$str
––T c
,
––c d
label
——0 5
:
——5 6!
nameParCritialLevel
——7 J
,
——J K
color
““0 5
:
““5 6
color
““7 <
,
““< =
	outerhtml
””0 9
:
””9 :
	parLevel1
””; D
,
””D E
aberto
‘‘0 6
:
‘‘6 7
true
‘‘8 <
)
‘‘< =
;
‘‘= >
}
’’ 
else
÷÷ 
{
◊◊ 
level01GroupList
ŸŸ $
=
ŸŸ% &
html
ŸŸ' +
.
ŸŸ+ ,
	listgroup
ŸŸ, 5
(
ŸŸ5 6
	outerhtml
⁄⁄3 <
:
⁄⁄< =
	parLevel1
⁄⁄> G
)
€€0 1
;
€€1 2
}
‹‹ 

listlevel1
ﬁﬁ 
+=
ﬁﬁ 
	parLevel1
ﬁﬁ '
;
ﬁﬁ' (
}
ﬂﬂ 
return
‚‚ 
html
‚‚ 
.
‚‚ 
div
‚‚ 
(
‚‚ 
	outerhtml
„„ %
:
„„% &

listlevel1
„„' 1
,
„„1 2
classe
‰‰ "
:
‰‰" #
$str
‰‰$ 0
)
ÂÂ 
+
ÂÂ 
html
ÊÊ 
.
ÊÊ 
div
ÊÊ 
(
ÊÊ 
	outerhtml
ÁÁ %
:
ÁÁ% &

listLevel2
ÁÁ' 1
,
ÁÁ1 2
classe
ËË "
:
ËË" #
$str
ËË$ ?
)
ÈÈ 
+
ÈÈ 
html
ÍÍ 
.
ÍÍ 
div
ÍÍ 
(
ÍÍ 
	outerhtml
ÎÎ %
:
ÎÎ% &

listLevel3
ÎÎ' 1
,
ÎÎ1 2
classe
ÏÏ "
:
ÏÏ" #
$str
ÏÏ$ E
)
ÌÌ 
;
ÌÌ 
}
ÔÔ 	
public
˜˜ 
string
˜˜ 

GetLevel02
˜˜  
(
˜˜  !
SGQDBContext
˜˜! -
.
˜˜- .
	ParLevel1
˜˜. 7
	ParLevel1
˜˜8 A
,
˜˜A B
int
˜˜C F
ParCompany_Id
˜˜G T
,
˜˜T U
DateTime
˜˜V ^
dateCollect
˜˜_ j
,
˜˜j k
ref
˜˜l o
string
˜˜p v
level3Group˜˜w Ç
)˜˜Ç É
{
¯¯ 	
var
˝˝ 
ParLevel1DB
˝˝ 
=
˝˝ 
new
˝˝ !
SGQDBContext
˝˝" .
.
˝˝. /
	ParLevel1
˝˝/ 8
(
˝˝8 9
db
˝˝9 ;
)
˝˝; <
;
˝˝< =
var
˛˛ 
ParLevel2DB
˛˛ 
=
˛˛ 
new
˛˛ !
SGQDBContext
˛˛" .
.
˛˛. /
	ParLevel2
˛˛/ 8
(
˛˛8 9
db
˛˛9 ;
)
˛˛; <
;
˛˛< =
var
ˇˇ 
ParCounterDB
ˇˇ 
=
ˇˇ 
new
ˇˇ "
SGQDBContext
ˇˇ# /
.
ˇˇ/ 0

ParCounter
ˇˇ0 :
(
ˇˇ: ;
db
ˇˇ; =
)
ˇˇ= >
;
ˇˇ> ?
var
ÉÉ 
parlevel02List
ÉÉ 
=
ÉÉ  
ParLevel2DB
ÉÉ! ,
.
ÉÉ, -!
getLevel2ByIdLevel1
ÉÉ- @
(
ÉÉ@ A
	ParLevel1
ÉÉA J
,
ÉÉJ K
dateCollect
ÉÉL W
,
ÉÉW X
ParCompany_Id
ÉÉY f
)
ÉÉf g
;
ÉÉg h
var
ÜÜ 
ParLevelHeaderDB
ÜÜ  
=
ÜÜ! "
new
ÜÜ# &
SGQDBContext
ÜÜ' 3
.
ÜÜ3 4
ParLevelHeader
ÜÜ4 B
(
ÜÜB C
db
ÜÜC E
)
ÜÜE F
;
ÜÜF G
var
àà 
ParFieldTypeDB
àà 
=
àà  
new
àà! $
SGQDBContext
àà% 1
.
àà1 2
ParFieldType
àà2 >
(
àà> ?
db
àà? A
)
ààA B
;
ààB C
var
ââ 
ParNCRuleDB
ââ 
=
ââ 
new
ââ !
SGQDBContext
ââ" .
.
ââ. /
NotConformityRule
ââ/ @
(
ââ@ A
db
ââA C
)
ââC D
;
ââD E
var
ãã 
reauditFlag
ãã 
=
ãã 
$strãã ê
;ããê ë
var
çç 
html
çç 
=
çç 
new
çç 
Html
çç 
(
çç  
)
çç  !
;
çç! "
string
êê 
ParLevel2List
êê  
=
êê! "
null
êê# '
;
êê' (
string
íí 

headerList
íí 
=
íí 
null
íí  $
;
íí$ %
var
ïï 
ParEvaluateDB
ïï 
=
ïï 
new
ïï  #
SGQDBContext
ïï$ 0
.
ïï0 1
ParLevel2Evaluate
ïï1 B
(
ïïB C
db
ïïC E
)
ïïE F
;
ïïF G
var
ññ 
ParSampleDB
ññ 
=
ññ 
new
ññ !
SGQDBContext
ññ" .
.
ññ. /
ParLevel2Sample
ññ/ >
(
ññ> ?
db
ññ? A
)
ññA B
;
ññB C
var
öö 
ParEvaluatePadrao
öö !
=
öö" #
ParEvaluateDB
öö$ 1
.
öö1 2
getEvaluate
öö2 =
(
öö= >
	ParLevel1
öö> G
:
ööG H
	ParLevel1
ööI R
,
ööR S
ParCompany_Id
õõ> K
:
õõK L
null
õõM Q
,
õõQ R
DateCollection
õõS a
:
õõa b
dateCollect
õõc n
)
õõn o
;
õõo p
var
ûû  
ParEvaluateCompany
ûû "
=
ûû# $
ParEvaluateDB
ûû% 2
.
ûû2 3
getEvaluate
ûû3 >
(
ûû> ?
	ParLevel1
ûû? H
:
ûûH I
	ParLevel1
ûûJ S
,
ûûS T
ParCompany_Id
üü? L
:
üüL M
ParCompany_Id
üüN [
,
üü[ \
DateCollection
üü] k
:
üük l
dateCollect
üüm x
)
üüx y
;
üüy z
var
¢¢ 
ParSamplePadrao
¢¢ 
=
¢¢  !
ParSampleDB
¢¢" -
.
¢¢- .
	getSample
¢¢. 7
(
¢¢7 8
	ParLevel1
¢¢8 A
:
¢¢A B
	ParLevel1
¢¢C L
,
¢¢L M
ParCompany_Id
££8 E
:
££E F
null
££G K
,
££K L
DateCollection
££M [
:
££[ \
dateCollect
££] h
)
££h i
;
££i j
var
¶¶ 
ParSampleCompany
¶¶  
=
¶¶! "
ParSampleDB
¶¶# .
.
¶¶. /
	getSample
¶¶/ 8
(
¶¶8 9
	ParLevel1
¶¶9 B
:
¶¶B C
	ParLevel1
¶¶D M
,
¶¶M N
ParCompany_Id
ßß8 E
:
ßßE F
ParCompany_Id
ßßG T
,
ßßT U
DateCollection
ßßV d
:
ßßd e
dateCollect
ßßf q
)
ßßq r
;
ßßr s
int
™™ 
evaluateGroup
™™ 
=
™™ 
$num
™™  !
;
™™! "
int
´´ 
sampleGroup
´´ 
=
´´ 
$num
´´ 
;
´´  
string
≠≠ 
groupLevel3Level2
≠≠ $
=
≠≠% &
null
≠≠' +
;
≠≠+ ,
string
ÆÆ 
painelLevel3
ÆÆ 
=
ÆÆ  !
null
ÆÆ" &
;
ÆÆ& '
int
≤≤ 
evaluate
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
int
≥≥ 
sample
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
int
¥¥ 
defect
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
if
∂∂ 
(
∂∂ 
	ParLevel1
∂∂ 
.
∂∂ 
HasGroupLevel2
∂∂ (
==
∂∂) +
true
∂∂, 0
)
∂∂0 1
{
∑∑ 
evaluate
∏∏ 
=
∏∏ "
getMaxEvaluateLevel1
∏∏ /
(
∏∏/ 0
	ParLevel1
∏∏0 9
,
∏∏9 : 
ParEvaluateCompany
∏∏; M
)
∏∏M N
;
∏∏N O
sample
ππ 
=
ππ  
getMaxSampleLevel1
ππ +
(
ππ+ ,
	ParLevel1
ππ, 5
,
ππ5 6 
ParEvaluateCompany
ππ7 I
)
ππI J
;
ππJ K
evaluateGroup
∫∫ 
=
∫∫ 
evaluate
∫∫  (
;
∫∫( )
sampleGroup
ªª 
=
ªª 
sample
ªª $
;
ªª$ %
}
ºº 
foreach
øø 
(
øø 
var
øø 
	parlevel2
øø "
in
øø# %
parlevel02List
øø& 4
)
øø4 5
{
¿¿ 
if
¬¬ 
(
¬¬ 
	ParLevel1
¬¬ 
.
¬¬ 
HasGroupLevel2
¬¬ ,
!=
¬¬- /
true
¬¬0 4
)
¬¬4 5
{
√√ 
evaluate
ƒƒ 
=
ƒƒ 
getEvaluate
ƒƒ *
(
ƒƒ* +
	parlevel2
ƒƒ+ 4
,
ƒƒ4 5 
ParEvaluateCompany
ƒƒ6 H
,
ƒƒH I
ParEvaluatePadrao
ƒƒJ [
)
ƒƒ[ \
;
ƒƒ\ ]
sample
≈≈ 
=
≈≈ 
	getSample
≈≈ &
(
≈≈& '
	parlevel2
≈≈' 0
,
≈≈0 1
ParSampleCompany
≈≈2 B
,
≈≈B C
ParSamplePadrao
≈≈D S
)
≈≈S T
;
≈≈T U
}
«« 
string
’’ 
headerCounter
’’ $
=
’’% &
html
÷÷% )
.
÷÷) *
div
÷÷* -
(
÷÷- .
	outerhtml
◊◊/ 8
:
◊◊8 9
$str
◊◊: ?
+
◊◊@ A

CommonData
◊◊B L
.
◊◊L M
getResource
◊◊M X
(
◊◊X Y
$str
◊◊Y ]
)
◊◊] ^
.
◊◊^ _
Value
◊◊_ d
.
◊◊d e
ToString
◊◊e m
(
◊◊m n
)
◊◊n o
+
◊◊p q
$str
◊◊r y
,
◊◊y z
classe
ÿÿ/ 5
:
ÿÿ5 6
$str
ÿÿ7 A
,
ÿÿA B
style
ŸŸ/ 4
:
ŸŸ4 5
$str
ŸŸ6 I
)
⁄⁄- .
+
⁄⁄/ 0
html
€€% )
.
€€) *
div
€€* -
(
€€- .
	outerhtml
‹‹/ 8
:
‹‹8 9
$str
‹‹: ?
+
‹‹@ A

CommonData
‹‹B L
.
‹‹L M
getResource
‹‹M X
(
‹‹X Y
$str
‹‹Y ]
)
‹‹] ^
.
‹‹^ _
Value
‹‹_ d
.
‹‹d e
ToString
‹‹e m
(
‹‹m n
)
‹‹n o
+
‹‹p q
$str
‹‹r y
,
‹‹y z
classe
››/ 5
:
››5 6
$str
››7 A
,
››A B
style
ﬁﬁ/ 4
:
ﬁﬁ4 5
$str
ﬁﬁ6 I
)
ﬂﬂ. /
+
ﬂﬂ0 1
html
‡‡& *
.
‡‡* +
div
‡‡+ .
(
‡‡. /
	outerhtml
··/ 8
:
··8 9
$str
··: ?
+
··@ A

CommonData
··B L
.
··L M
getResource
··M X
(
··X Y
$str
··Y ]
)
··] ^
.
··^ _
Value
··_ d
.
··d e
ToString
··e m
(
··m n
)
··n o
+
··p q
$str
··r y
,
··y z
classe
‚‚/ 5
:
‚‚5 6
$str
‚‚7 A
,
‚‚A B
style
„„/ 4
:
„„4 5
$str
„„6 I
)
‰‰- .
;
‰‰. /
headerCounter
ÊÊ 
=
ÊÊ 
html
ÊÊ  $
.
ÊÊ$ %
div
ÊÊ% (
(
ÊÊ( )
	outerhtml
ËË$ -
:
ËË- .
headerCounter
ËË/ <
,
ËË< =
classe
ÈÈ$ *
:
ÈÈ* +
$str
ÈÈ, M
)
ÍÍ$ %
;
ÍÍ% &
string
ÌÌ 
classXSLevel2
ÌÌ $
=
ÌÌ% &
$str
ÌÌ' 2
;
ÌÌ2 3
int
ÔÔ "
totalSampleXEvaluate
ÔÔ (
=
ÔÔ) *
evaluate
ÔÔ+ 3
*
ÔÔ4 5
sample
ÔÔ6 <
;
ÔÔ< =
string
ÒÒ 
counters
ÒÒ 
=
ÒÒ  !
html
ÚÚ& *
.
ÚÚ* +
div
ÚÚ+ .
(
ÚÚ. /
	outerhtml
ÛÛ0 9
:
ÛÛ9 :
html
ÛÛ; ?
.
ÛÛ? @
span
ÛÛ@ D
(
ÛÛD E
	outerhtml
ÛÛE N
:
ÛÛN O
$str
ÛÛP S
,
ÛÛS T
classe
ÛÛU [
:
ÛÛ[ \
$str
ÛÛ] n
)
ÛÛn o
+
ÛÛp q
html
ÛÛr v
.
ÛÛv w
span
ÛÛw {
(
ÛÛ{ |
	outerhtmlÛÛ| Ö
:ÛÛÖ Ü
$strÛÛá ä
,ÛÛä ã
classeÛÛå í
:ÛÛí ì
$strÛÛî ü
)ÛÛü †
+ÛÛ° ¢
htmlÛÛ£ ß
.ÛÛß ®
spanÛÛ® ¨
(ÛÛ¨ ≠
	outerhtmlÛÛ≠ ∂
:ÛÛ∂ ∑
evaluateÛÛ∏ ¿
.ÛÛ¿ ¡
ToStringÛÛ¡ …
(ÛÛ…  
)ÛÛ  À
,ÛÛÀ Ã
classeÛÛÕ ”
:ÛÛ” ‘
$strÛÛ’ ‰
)ÛÛ‰ Â
,ÛÛÂ Ê
classe
ÙÙ0 6
:
ÙÙ6 7
$str
ÙÙ8 B
,
ÙÙB C
style
ıı0 5
:
ıı5 6
$str
ıı7 [
)
ˆˆ. /
+
ˆˆ0 1
html
˜˜& *
.
˜˜* +
div
˜˜+ .
(
˜˜. /
	outerhtml
¯¯0 9
:
¯¯9 :
html
¯¯; ?
.
¯¯? @
span
¯¯@ D
(
¯¯D E
	outerhtml
¯¯E N
:
¯¯N O
$str
¯¯P S
,
¯¯S T
classe
¯¯U [
:
¯¯[ \
$str
¯¯] q
)
¯¯q r
+
¯¯s t
html
¯¯u y
.
¯¯y z
span
¯¯z ~
(
¯¯~ 
	outerhtml¯¯ à
:¯¯à â
$str¯¯ä ç
,¯¯ç é
classe¯¯è ï
:¯¯ï ñ
$str¯¯ó ´
)¯¯´ ¨
+¯¯≠ Æ
html¯¯Ø ≥
.¯¯≥ ¥
span¯¯¥ ∏
(¯¯∏ π
	outerhtml¯¯π ¬
:¯¯¬ √
$str¯¯ƒ «
,¯¯« »
classe¯¯… œ
:¯¯œ –
$str¯¯— ‹
)¯¯‹ ›
+¯¯ﬁ ﬂ
html¯¯‡ ‰
.¯¯‰ Â
span¯¯Â È
(¯¯È Í
	outerhtml¯¯Í Û
:¯¯Û Ù
sample¯¯ı ˚
.¯¯˚ ¸
ToString¯¯¸ Ñ
(¯¯Ñ Ö
)¯¯Ö Ü
,¯¯Ü á
classe¯¯à é
:¯¯é è
$str¯¯ê ¢
)¯¯¢ £
+¯¯§ •
html¯¯¶ ™
.¯¯™ ´
span¯¯´ Ø
(¯¯Ø ∞
	outerhtml¯¯∞ π
:¯¯π ∫$
totalSampleXEvaluate¯¯ª œ
.¯¯œ –
ToString¯¯– ÿ
(¯¯ÿ Ÿ
)¯¯Ÿ ⁄
,¯¯⁄ €
classe¯¯‹ ‚
:¯¯‚ „
$str¯¯‰ ˙
)¯¯˙ ˚
,¯¯˚ ¸
classe
˘˘0 6
:
˘˘6 7
$str
˘˘8 B
,
˘˘B C
style
˙˙0 5
:
˙˙5 6
$str
˙˙7 [
)
˚˚. /
+
˚˚0 1
html
¸¸' +
.
¸¸+ ,
div
¸¸, /
(
¸¸/ 0
	outerhtml
˝˝0 9
:
˝˝9 :
html
˝˝; ?
.
˝˝? @
span
˝˝@ D
(
˝˝D E
	outerhtml
˝˝E N
:
˝˝N O
defect
˝˝P V
.
˝˝V W
ToString
˝˝W _
(
˝˝_ `
)
˝˝` a
,
˝˝a b
classe
˝˝c i
:
˝˝i j
$str
˝˝k y
)
˝˝y z
,
˝˝z {
classe
˛˛0 6
:
˛˛6 7
$str
˛˛8 B
,
˛˛B C
style
ˇˇ0 5
:
ˇˇ5 6
$str
ˇˇ7 [
)
Ä Ä . /
;
Ä Ä / 0
counters
è è  
=
è è  
html
è è  
.
è è   
div
è è   #
(
è è # $
	outerhtml
ë ë $ -
:
ë ë - .
counters
ë ë / 7
,
ë ë 7 8
classe
í í $ *
:
í í * +
$str
í í , ?
)
ì ì $ %
;
ì ì % &
string
ñ ñ  
buttons
ñ ñ  
=
ñ ñ   
null
ñ ñ ! %
;
ñ ñ % &
string
ó ó  
buttonsHeaders
ó ó  %
=
ó ó & '
null
ó ó ( ,
;
ó ó , -
if
ö ö  
(
ö ö  
	ParLevel1
ö ö  
.
ö ö  #
HasNoApplicableLevel2
ö ö  3
==
ö ö 4 6
true
ö ö 7 ;
||
ö ö < >
	ParLevel1
ö ö ? H
.
ö ö H I
HasSaveLevel2
ö ö I V
==
ö ö W Y
true
ö ö Z ^
)
ö ö ^ _
{
õ õ  
string
ú ú  
btnNotAvaliable
ú ú  *
=
ú ú + ,
null
ú ú - 1
;
ú ú 1 2
if
ù ù  
(
ù ù  
	ParLevel1
ù ù  !
.
ù ù ! "#
HasNoApplicableLevel2
ù ù " 7
)
ù ù 7 8
{
û û  
btnNotAvaliable
ü ü  '
=
ü ü ( )
$str
ü ü * h
+
ü ü i j
$str
† † + c
+
† † d e
$str
° ° + c
;
° ° c d
}
¢ ¢  
string
£ £  
btnAreaSave
£ £  &
=
£ £ ' (
null
£ £ ) -
;
£ £ - .
if
§ §  
(
§ §  
	ParLevel1
§ §  !
.
§ § ! "
HasSaveLevel2
§ § " /
)
§ § / 0
{
• •  
btnAreaSave
¶ ¶  #
=
¶ ¶ $ %
$str¶ ¶ & ñ
+¶ ¶ ó ò
$strß ß ' à
+ß ß â ä
$str® ® ' ò
+® ® ô ö
$str© © ' ò
+© © ô ö
$str™ ™ ' ò
+™ ™ ô ö
$str´ ´ ' ò
;´ ´ ò ô
}
¨ ¨  
string
≠ ≠  

btnReaudit
≠ ≠  %
=
≠ ≠ & '
null
≠ ≠ ( ,
;
≠ ≠ , -
if
Æ Æ  
(
Æ Æ  
	parlevel2
Æ Æ  !
.
Æ Æ ! "
	IsReaudit
Æ Æ " +
||
Æ Æ , .
	ParLevel1
Æ Æ / 8
.
Æ Æ 8 9
	IsReaudit
Æ Æ 9 B
)
Æ Æ B C
{
Ø Ø  

btnReaudit
∞ ∞  "
=
∞ ∞ # $
$str
∞ ∞ % Z
+
∞ ∞ [ \
$str
± ± & ?
;
± ± ? @
}
≤ ≤  
buttons
≥ ≥  
=
≥ ≥  
html
≥ ≥  "
.
≥ ≥ " #
div
≥ ≥ # &
(
≥ ≥ & '
	outerhtml
µ µ ! *
:
µ µ * +

btnReaudit
µ µ , 6
+
µ µ 7 8
btnAreaSave
∂ ∂ , 7
+
∂ ∂ 8 9
btnNotAvaliable
∑ ∑ , ;
,
∑ ∑ ; <
style
∏ ∏ ! &
:
∏ ∏ & '
$str
∏ ∏ ( ;
,
∏ ∏ ; <
classe
π π ! '
:
π π ' (
$str
π π ) <
)
∫ ∫ ! "
;
∫ ∫ " #
buttonsHeaders
º º  "
=
º º # $
html
º º % )
.
º º ) *
div
º º * -
(
º º - .
	outerhtml
Ω Ω - 6
:
Ω Ω 6 7
null
Ω Ω 8 <
,
Ω Ω < =
classe
æ æ - 3
:
æ æ 3 4
$str
æ æ 5 H
)
ø ø - .
;
ø ø . /
}
¿ ¿  
else
¡ ¡  
{
¬ ¬  
classXSLevel2
√ √  !
=
√ √ " #
$str
√ √ $ /
;
√ √ / 0
string
ƒ ƒ  

btnReaudit
ƒ ƒ  %
=
ƒ ƒ & '
null
ƒ ƒ ( ,
;
ƒ ƒ , -
if
≈ ≈  
(
≈ ≈  
	parlevel2
≈ ≈  !
.
≈ ≈ ! "
	IsReaudit
≈ ≈ " +
||
≈ ≈ , .
	ParLevel1
≈ ≈ / 8
.
≈ ≈ 8 9
	IsReaudit
≈ ≈ 9 B
)
≈ ≈ B C
{
∆ ∆  

btnReaudit
« «  "
=
« « # $
$str
« « % Z
+
« « [ \
$str
» » & ?
;
» » ? @
buttons
     
=
      !
html
    " &
.
    & '
div
    ' *
(
    * +
	outerhtml
Ã Ã % .
:
Ã Ã . /

btnReaudit
Ã Ã 0 :
,
Ã Ã : ;
style
Õ Õ % *
:
Õ Õ * +
$str
Õ Õ , ?
,
Õ Õ ? @
classe
Œ Œ % +
:
Œ Œ + ,
$str
Œ Œ - @
)
œ œ % &
;
œ œ & '
}
– –  
}
“ “  
string
‘ ‘  
level02Header
‘ ‘  $
=
‘ ‘ % &
html
‘ ‘ ' +
.
‘ ‘ + ,
div
‘ ‘ , /
(
‘ ‘ / 0
classe
‘ ‘ 0 6
:
‘ ‘ 6 7
classXSLevel2
‘ ‘ 8 E
)
‘ ‘ E F
+
‘ ‘ G H
headerCounter
’ ’ ' 4
+
’ ’ 5 6
buttonsHeaders
÷ ÷ ' 5
;
÷ ÷ 5 6

headerList
ÿ ÿ  
=
ÿ ÿ  
html
ÿ ÿ  !
.
ÿ ÿ ! "
listgroupItem
ÿ ÿ " /
(
ÿ ÿ / 0
classe
Ÿ Ÿ 0 6
:
Ÿ Ÿ 6 7
$str
Ÿ Ÿ 8 =
,
Ÿ Ÿ = >
	outerhtml
⁄ ⁄ 0 9
:
⁄ ⁄ 9 :
level02Header
⁄ ⁄ ; H
)
€ € / 0
;
€ € 0 1
var
› ›  
parNCRuleDB
› ›  
=
› ›   !
ParNCRuleDB
› › " -
.
› › - .
getParNCRule
› › . :
(
› › : ;
	parlevel2
› › ; D
.
› › D E%
ParNotConformityRule_id
› › E \
,
› › \ ]
	parlevel2
› › ^ g
.
› › g h
Id
› › h j
)
› › j k
;
› › k l
decimal
ﬁ ﬁ  
	ruleValue
ﬁ ﬁ  !
=
ﬁ ﬁ " #
$num
ﬁ ﬁ $ %
;
ﬁ ﬁ % &
if
‡ ‡  
(
‡ ‡  
parNCRuleDB
‡ ‡  
!=
‡ ‡   "
null
‡ ‡ # '
)
‡ ‡ ' (
{
· ·  
	ruleValue
‚ ‚  
=
‚ ‚  
parNCRuleDB
‚ ‚   +
.
‚ ‚ + ,
Value
‚ ‚ , 1
;
‚ ‚ 1 2
}
„ „  
string
Ê Ê  
level2
Ê Ê  
=
Ê Ê  
html
Ê Ê   $
.
Ê Ê $ %
level2
Ê Ê % +
(
Ê Ê + ,
id
Ê Ê , .
:
Ê Ê . /
	parlevel2
Ê Ê 0 9
.
Ê Ê 9 :
Id
Ê Ê : <
.
Ê Ê < =
ToString
Ê Ê = E
(
Ê Ê E F
)
Ê Ê F G
,
Ê Ê G H
label
Á Á , 1
:
Á Á 1 2
	parlevel2
Á Á 3 <
.
Á Á < =
Name
Á Á = A
,
Á Á A B
classe
Ë Ë , 2
:
Ë Ë 2 3
classXSLevel2
Ë Ë 4 A
,
Ë Ë A B
evaluate
È È , 4
:
È È 4 5
evaluate
È È 6 >
,
È È > ?
sample
Í Í , 2
:
Í Í 2 3
sample
Í Í 4 :
,
Í Í : ;
HasSampleTotal
Î Î , :
:
Î Î : ;
	parlevel2
Î Î < E
.
Î Î E F
HasSampleTotal
Î Î F T
,
Î Î T U
ParFrequency_Id
Ï Ï , ;
:
Ï Ï ; <
	parlevel2
Ï Ï = F
.
Ï Ï F G
ParFrequency_Id
Ï Ï G V
,
Ï Ï V W
IsEmptyLevel3
Ì Ì , 9
:
Ì Ì 9 :
	parlevel2
Ì Ì ; D
.
Ì Ì D E
IsEmptyLevel3
Ì Ì E R
,
Ì Ì R S
RuleId
Ó Ó , 2
:
Ó Ó 2 3
	parlevel2
Ó Ó 4 =
.
Ó Ó = >%
ParNotConformityRule_id
Ó Ó > U
,
Ó Ó U V
	RuleValue
Ô Ô , 5
:
Ô Ô 5 6
	ruleValue
Ô Ô 7 @
.
Ô Ô @ A
ToString
Ô Ô A I
(
Ô Ô I J
)
Ô Ô J K
,
Ô Ô K L
reaudit
  , 3
:
  3 4
	parlevel2
  5 >
.
  > ?
	IsReaudit
  ? H
)
  H I
;
  I J
var
Ú Ú  
listLineCounter
Ú Ú  #
=
Ú Ú $ %
ParCounterDB
Ú Ú & 2
.
Ú Ú 2 3(
GetParLevelXParCounterList
Ú Ú 3 M
(
Ú Ú M N
$num
Ú Ú N O
,
Ú Ú O P
	parlevel2
Ú Ú Q Z
.
Ú Ú Z [
Id
Ú Ú [ ]
,
Ú Ú ] ^
$num
Ú Ú _ `
)
Ú Ú ` a
;
Ú Ú a b
string
Ù Ù  
lineCounters
Ù Ù  #
=
Ù Ù $ %
$str
Ù Ù & (
;
Ù Ù ( )
if
ˆ ˆ  
(
ˆ ˆ  
listLineCounter
ˆ ˆ  #
!=
ˆ ˆ $ &
null
ˆ ˆ ' +
)
ˆ ˆ + ,
{
˜ ˜  
lineCounters
¯ ¯   
=
¯ ¯ ! "
html
¯ ¯ # '
.
¯ ¯ ' (
painelCounters
¯ ¯ ( 6
(
¯ ¯ 6 7
listLineCounter
¯ ¯ 7 F
.
¯ ¯ F G
Where
¯ ¯ G L
(
¯ ¯ L M
r
¯ ¯ M N
=>
¯ ¯ O Q
r
¯ ¯ R S
.
¯ ¯ S T
Local
¯ ¯ T Y
==
¯ ¯ Z \
$str
¯ ¯ ] j
)
¯ ¯ j k
,
¯ ¯ k l
$str¯ ¯ m ê
)¯ ¯ ê ë
;¯ ¯ ë í
}
˘ ˘  
ParLevel2List
¸ ¸  
+=
¸ ¸   
html
¸ ¸ ! %
.
¸ ¸ % &
listgroupItem
¸ ¸ & 3
(
¸ ¸ 3 4
id
˝ ˝ 4 6
:
˝ ˝ 6 7
	parlevel2
˝ ˝ 8 A
.
˝ ˝ A B
Id
˝ ˝ B D
.
˝ ˝ D E
ToString
˝ ˝ E M
(
˝ ˝ M N
)
˝ ˝ N O
,
˝ ˝ O P
classe
˛ ˛ 4 :
:
˛ ˛ : ;
$str
˛ ˛ < A
,
˛ ˛ A B
	outerhtml
ˇ ˇ 4 =
:
ˇ ˇ = >
level2
ˇ ˇ ? E
+
ˇ ˇ F G
counters
Ä!Ä!? G
+
Ä!Ä!H I
buttons
Å!Å!? F
+
Å!Å!G H
html
Ç!Ç!? C
.
Ç!Ç!C D
div
Ç!Ç!D G
(
Ç!Ç!G H
classe
Ç!Ç!H N
:
Ç!Ç!N O
$str
Ç!Ç!P ]
)
Ç!Ç!] ^
+
Ç!Ç!_ `
lineCounters
É!É!? K
)
Ñ!Ñ!4 5
;
Ñ!Ñ!5 6
string
à!à! 
groupLevel3
à!à! "
=
à!à!# $

GetLevel03
à!à!% /
(
à!à!/ 0
	ParLevel1
à!à!0 9
,
à!à!9 :
	parlevel2
à!à!; D
,
à!à!D E
ParCompany_Id
à!à!F S
,
à!à!S T
dateCollect
à!à!U `
,
à!à!` a
ref
à!à!b e
painelLevel3
à!à!f r
)
à!à!r s
;
à!à!s t
if
ä!ä! 
(
ä!ä! 
	ParLevel1
ä!ä! 
.
ä!ä! 
HasGroupLevel2
ä!ä! ,
==
ä!ä!- /
true
ä!ä!0 4
)
ä!ä!4 5
{
ã!ã! 
var
å!å! 

othersTags
å!å! "
=
å!å!# $
$str
å!å!% 1
+
å!å!2 3
$num
å!å!4 5
+
å!å!6 7
$str
ç!ç! +
+
ç!ç!, -
evaluate
ç!ç!. 6
+
ç!ç!7 8
$str
é!é! )
+
é!é!* +
sample
é!é!, 2
+
é!é!3 4
$str
è!è! 1
+
è!è!2 3
$str
ê!ê! 1
+
ê!ê!2 3
$str
ë!ë! C
+
ë!ë!D E
$str
í!í! 9
+
í!í!: ;
$str
ì!ì! :
+
ì!ì!; <
$str
î!î! /
+
î!î!0 1
	parlevel2
î!î!2 ;
.
î!î!; <
HasSampleTotal
î!î!< J
.
î!î!J K
ToString
î!î!K S
(
î!î!S T
)
î!î!T U
.
î!î!U V
ToLower
î!î!V ]
(
î!î!] ^
)
î!î!^ _
+
î!î!` a
$str
î!î!b f
+
î!î!g h
$str
ï!ï! .
+
ï!ï!/ 0
	parlevel2
ï!ï!1 :
.
ï!ï!: ;
IsEmptyLevel3
ï!ï!; H
.
ï!ï!H I
ToString
ï!ï!I Q
(
ï!ï!Q R
)
ï!ï!R S
.
ï!ï!S T
ToLower
ï!ï!T [
(
ï!ï![ \
)
ï!ï!\ ]
+
ñ!ñ! 
$str
ñ!ñ! <
+
ñ!ñ!= >
	parlevel2
ñ!ñ!? H
.
ñ!ñ!H I%
ParNotConformityRule_id
ñ!ñ!I `
+
ó!ó! 
$str
ó!ó! ?
+
ó!ó!@ A
	ruleValue
ó!ó!B K
.
ó!ó!K L
ToString
ó!ó!L T
(
ó!ó!T U
)
ó!ó!U V
+
ò!ò! 
$str
ò!ò! /
+
ò!ò!0 1
$num
ò!ò!2 3
+
ô!ô! 
$str
ô!ô! ,
+
ô!ô!- .
	parlevel2
ô!ô!/ 8
.
ô!ô!8 9
	IsReaudit
ô!ô!9 B
.
ô!ô!B C
ToString
ô!ô!C K
(
ô!ô!K L
)
ô!ô!L M
.
ô!ô!M N
ToLower
ô!ô!N U
(
ô!ô!U V
)
ô!ô!V W
+
ô!ô!X Y
$str
ô!ô!Z ^
;
ô!ô!^ _
groupLevel3
õ!õ! 
=
õ!õ!  !
html
õ!õ!" &
.
õ!õ!& '
	accordeon
õ!õ!' 0
(
õ!õ!0 1
id
ú!ú!4 6
:
ú!ú!6 7
	parlevel2
ú!ú!8 A
.
ú!ú!A B
Id
ú!ú!B D
.
ú!ú!D E
ToString
ú!ú!E M
(
ú!ú!M N
)
ú!ú!N O
,
ú!ú!O P
label
ù!ù!4 9
:
ù!ù!9 :
	parlevel2
ù!ù!; D
.
ù!ù!D E
Name
ù!ù!E I
,
ù!ù!I J
classe
û!û!4 :
:
û!û!: ;
$str
û!û!< H
,
û!û!H I
	outerhtml
ü!ü!4 =
:
ü!ü!= >
groupLevel3
ü!ü!? J
,
ü!ü!J K
accordeonId
†!†!4 ?
:
†!†!? @
	parlevel2
†!†!A J
.
†!†!J K
Id
†!†!K M
,
†!†!M N

othersTags
°!°!4 >
:
°!°!> ?

othersTags
°!°!@ J
)
¢!¢!0 1
;
¢!¢!1 2
groupLevel3Level2
§!§! %
+=
§!§!& (
groupLevel3
§!§!) 4
;
§!§!4 5
}
•!•! 
else
¶!¶! 
{
ß!ß! 
level3Group
®!®! 
+=
®!®!  "
groupLevel3
®!®!# .
;
®!®!. /
}
©!©! 
}
´!´! 
if
Æ!Æ! 
(
Æ!Æ! 
	ParLevel1
Æ!Æ! 
.
Æ!Æ! 
HasGroupLevel2
Æ!Æ! (
==
Æ!Æ!) +
true
Æ!Æ!, 0
)
Æ!Æ!0 1
{
Ø!Ø! 
string
±!±! 
headerCounter
±!±! $
=
±!±!% &
html
≤!≤!% )
.
≤!≤!) *
div
≤!≤!* -
(
≤!≤!- .
	outerhtml
≥!≥!/ 8
:
≥!≥!8 9
$str
≥!≥!: ?
+
≥!≥!@ A

CommonData
≥!≥!B L
.
≥!≥!L M
getResource
≥!≥!M X
(
≥!≥!X Y
$str
≥!≥!Y ]
)
≥!≥!] ^
.
≥!≥!^ _
Value
≥!≥!_ d
.
≥!≥!d e
ToString
≥!≥!e m
(
≥!≥!m n
)
≥!≥!n o
+
≥!≥!p q
$str
≥!≥!r y
,
≥!≥!y z
classe
¥!¥!/ 5
:
¥!¥!5 6
$str
¥!¥!7 A
,
¥!¥!A B
style
µ!µ!/ 4
:
µ!µ!4 5
$str
µ!µ!6 I
)
∂!∂!- .
+
∂!∂!/ 0
html
∑!∑!% )
.
∑!∑!) *
div
∑!∑!* -
(
∑!∑!- .
	outerhtml
∏!∏!/ 8
:
∏!∏!8 9
$str
∏!∏!: ?
+
∏!∏!@ A

CommonData
∏!∏!B L
.
∏!∏!L M
getResource
∏!∏!M X
(
∏!∏!X Y
$str
∏!∏!Y ]
)
∏!∏!] ^
.
∏!∏!^ _
Value
∏!∏!_ d
.
∏!∏!d e
ToString
∏!∏!e m
(
∏!∏!m n
)
∏!∏!n o
+
∏!∏!p q
$str
∏!∏!r y
,
∏!∏!y z
classe
π!π!/ 5
:
π!π!5 6
$str
π!π!7 A
,
π!π!A B
style
∫!∫!/ 4
:
∫!∫!4 5
$str
∫!∫!6 I
)
ª!ª!. /
+
ª!ª!0 1
html
º!º!& *
.
º!º!* +
div
º!º!+ .
(
º!º!. /
	outerhtml
Ω!Ω!/ 8
:
Ω!Ω!8 9
$str
Ω!Ω!: ?
+
Ω!Ω!@ A

CommonData
Ω!Ω!B L
.
Ω!Ω!L M
getResource
Ω!Ω!M X
(
Ω!Ω!X Y
$str
Ω!Ω!Y ]
)
Ω!Ω!] ^
.
Ω!Ω!^ _
Value
Ω!Ω!_ d
.
Ω!Ω!d e
ToString
Ω!Ω!e m
(
Ω!Ω!m n
)
Ω!Ω!n o
+
Ω!Ω!p q
$str
Ω!Ω!r y
,
Ω!Ω!y z
classe
æ!æ!/ 5
:
æ!æ!5 6
$str
æ!æ!7 A
,
æ!æ!A B
style
ø!ø!/ 4
:
ø!ø!4 5
$str
ø!ø!6 I
)
¿!¿!- .
;
¿!¿!. /
headerCounter
¬!¬! 
=
¬!¬! 
html
¬!¬!  $
.
¬!¬!$ %
div
¬!¬!% (
(
¬!¬!( )
	outerhtml
ƒ!ƒ!$ -
:
ƒ!ƒ!- .
headerCounter
ƒ!ƒ!/ <
,
ƒ!ƒ!< =
classe
≈!≈!$ *
:
≈!≈!* +
$str
≈!≈!, M
)
∆!∆!$ %
;
∆!∆!% &
string
…!…! 
classXSLevel2
…!…! $
=
…!…!% &
$str
…!…!' 2
;
…!…!2 3
int
À!À! "
totalSampleXEvaluate
À!À! (
=
À!À!) *
evaluate
À!À!+ 3
*
À!À!4 5
sample
À!À!6 <
;
À!À!< =
string
Õ!Õ! 
counters
Õ!Õ! 
=
Õ!Õ!  !
html
Œ!Œ!& *
.
Œ!Œ!* +
div
Œ!Œ!+ .
(
Œ!Œ!. /
	outerhtml
œ!œ!0 9
:
œ!œ!9 :
html
œ!œ!; ?
.
œ!œ!? @
span
œ!œ!@ D
(
œ!œ!D E
	outerhtml
œ!œ!E N
:
œ!œ!N O
$str
œ!œ!P S
,
œ!œ!S T
classe
œ!œ!U [
:
œ!œ![ \
$str
œ!œ!] n
)
œ!œ!n o
+
œ!œ!p q
html
œ!œ!r v
.
œ!œ!v w
span
œ!œ!w {
(
œ!œ!{ |
	outerhtmlœ!œ!| Ö
:œ!œ!Ö Ü
$strœ!œ!á ä
,œ!œ!ä ã
classeœ!œ!å í
:œ!œ!í ì
$strœ!œ!î ü
)œ!œ!ü †
+œ!œ!° ¢
htmlœ!œ!£ ß
.œ!œ!ß ®
spanœ!œ!® ¨
(œ!œ!¨ ≠
	outerhtmlœ!œ!≠ ∂
:œ!œ!∂ ∑
evaluateœ!œ!∏ ¿
.œ!œ!¿ ¡
ToStringœ!œ!¡ …
(œ!œ!…  
)œ!œ!  À
,œ!œ!À Ã
classeœ!œ!Õ ”
:œ!œ!” ‘
$strœ!œ!’ ‰
)œ!œ!‰ Â
,œ!œ!Â Ê
classe
–!–!0 6
:
–!–!6 7
$str
–!–!8 B
,
–!–!B C
style
—!—!0 5
:
—!—!5 6
$str
—!—!7 [
)
“!“!. /
+
“!“!0 1
html
”!”!& *
.
”!”!* +
div
”!”!+ .
(
”!”!. /
	outerhtml
‘!‘!0 9
:
‘!‘!9 :
html
‘!‘!; ?
.
‘!‘!? @
span
‘!‘!@ D
(
‘!‘!D E
	outerhtml
‘!‘!E N
:
‘!‘!N O
$str
‘!‘!P S
,
‘!‘!S T
classe
‘!‘!U [
:
‘!‘![ \
$str
‘!‘!] q
)
‘!‘!q r
+
‘!‘!s t
html
‘!‘!u y
.
‘!‘!y z
span
‘!‘!z ~
(
‘!‘!~ 
	outerhtml‘!‘! à
:‘!‘!à â
$str‘!‘!ä ç
,‘!‘!ç é
classe‘!‘!è ï
:‘!‘!ï ñ
$str‘!‘!ó ´
)‘!‘!´ ¨
+‘!‘!≠ Æ
html‘!‘!Ø ≥
.‘!‘!≥ ¥
span‘!‘!¥ ∏
(‘!‘!∏ π
	outerhtml‘!‘!π ¬
:‘!‘!¬ √
$str‘!‘!ƒ «
,‘!‘!« »
classe‘!‘!… œ
:‘!‘!œ –
$str‘!‘!— ‹
)‘!‘!‹ ›
+‘!‘!ﬁ ﬂ
html‘!‘!‡ ‰
.‘!‘!‰ Â
span‘!‘!Â È
(‘!‘!È Í
	outerhtml‘!‘!Í Û
:‘!‘!Û Ù
sample‘!‘!ı ˚
.‘!‘!˚ ¸
ToString‘!‘!¸ Ñ
(‘!‘!Ñ Ö
)‘!‘!Ö Ü
,‘!‘!Ü á
classe‘!‘!à é
:‘!‘!é è
$str‘!‘!ê ¢
)‘!‘!¢ £
+‘!‘!§ •
html‘!‘!¶ ™
.‘!‘!™ ´
span‘!‘!´ Ø
(‘!‘!Ø ∞
	outerhtml‘!‘!∞ π
:‘!‘!π ∫$
totalSampleXEvaluate‘!‘!ª œ
.‘!‘!œ –
ToString‘!‘!– ÿ
(‘!‘!ÿ Ÿ
)‘!‘!Ÿ ⁄
,‘!‘!⁄ €
classe‘!‘!‹ ‚
:‘!‘!‚ „
$str‘!‘!‰ ˙
)‘!‘!˙ ˚
,‘!‘!˚ ¸
classe
’!’!0 6
:
’!’!6 7
$str
’!’!8 B
,
’!’!B C
style
÷!÷!0 5
:
÷!÷!5 6
$str
÷!÷!7 [
)
◊!◊!. /
+
◊!◊!0 1
html
ÿ!ÿ!' +
.
ÿ!ÿ!+ ,
div
ÿ!ÿ!, /
(
ÿ!ÿ!/ 0
	outerhtml
Ÿ!Ÿ!0 9
:
Ÿ!Ÿ!9 :
html
Ÿ!Ÿ!; ?
.
Ÿ!Ÿ!? @
span
Ÿ!Ÿ!@ D
(
Ÿ!Ÿ!D E
	outerhtml
Ÿ!Ÿ!E N
:
Ÿ!Ÿ!N O
defect
Ÿ!Ÿ!P V
.
Ÿ!Ÿ!V W
ToString
Ÿ!Ÿ!W _
(
Ÿ!Ÿ!_ `
)
Ÿ!Ÿ!` a
,
Ÿ!Ÿ!a b
classe
Ÿ!Ÿ!c i
:
Ÿ!Ÿ!i j
$str
Ÿ!Ÿ!k w
)
Ÿ!Ÿ!w x
,
Ÿ!Ÿ!x y
classe
⁄!⁄!0 6
:
⁄!⁄!6 7
$str
⁄!⁄!8 B
,
⁄!⁄!B C
style
€!€!0 5
:
€!€!5 6
$str
€!€!7 [
)
‹!‹!. /
;
‹!‹!/ 0
counters
‚!‚! 
=
‚!‚! 
html
‚!‚! 
.
‚!‚!  
div
‚!‚!  #
(
‚!‚!# $
	outerhtml
‰!‰!# ,
:
‰!‰!, -
counters
‰!‰!. 6
,
‰!‰!6 7
classe
Â!Â!# )
:
Â!Â!) *
$str
Â!Â!+ >
)
Ê!Ê!# $
;
Ê!Ê!$ %
string
Á!Á! 
parLevel3Group
Á!Á! %
=
Á!Á!& '
null
Á!Á!( ,
;
Á!Á!, -
string
Í!Í! 
accordeonbuttons
Í!Í! '
=
Í!Í!( )
null
Í!Í!* .
;
Í!Í!. /
accordeonbuttons
Ï!Ï!  
=
Ï!Ï!! "
$strÏ!Ï!# ó
+Ï!Ï!ò ô

@ResourcesÏ!Ï!ö §
.Ï!Ï!§ •
ResourceÏ!Ï!• ≠
.Ï!Ï!≠ Æ
show_allÏ!Ï!Æ ∂
+Ï!Ï!∑ ∏
$strÏ!Ï!π ƒ
+Ï!Ï!≈ ∆
$strÌ!Ì!# ç
+Ì!Ì!é è

@ResourcesÌ!Ì!ê ö
.Ì!Ì!ö õ
ResourceÌ!Ì!õ £
.Ì!Ì!£ §
hide_allÌ!Ì!§ ¨
+Ì!Ì!≠ Æ
$strÌ!Ì!Ø ∫
;Ì!Ì!∫ ª
string
Ô!Ô! 
panelAccordeon
Ô!Ô! %
=
Ô!Ô!& '
html
Ô!Ô!( ,
.
Ô!Ô!, -
listgroupItem
Ô!Ô!- :
(
Ô!Ô!: ;
	outerhtml
!!; D
:
!!D E
accordeonbuttons
!!F V
,
!!V W
classe
Ò!Ò!; A
:
Ò!Ò!A B
$str
Ò!Ò!C ]
)
Ú!Ú!8 9
;
Ú!Ú!9 :
if
ı!ı! 
(
ı!ı! 
!
ı!ı! 
string
ı!ı! 
.
ı!ı! 
IsNullOrEmpty
ı!ı! )
(
ı!ı!) *
groupLevel3Level2
ı!ı!* ;
)
ı!ı!; <
)
ı!ı!< =
{
ˆ!ˆ! 
parLevel3Group
˜!˜! "
=
˜!˜!# $
html
˜!˜!% )
.
˜!˜!) *
div
˜!˜!* -
(
˜!˜!- .
classe
¯!¯!/ 5
:
¯!¯!5 6
$str
¯!¯!7 D
,
¯!¯!D E
tags
˘!˘!/ 3
:
˘!˘!3 4
$str
˘!˘!5 G
+
˘!˘!H I
	ParLevel1
˘!˘!J S
.
˘!˘!S T
Id
˘!˘!T V
+
˘!˘!W X
$str
˘!˘!Y ]
,
˘!˘!] ^
	outerhtml
˚!˚!/ 8
:
˚!˚!8 9
reauditFlag
˚!˚!: E
+
˚!˚!F G
painelLevel3
¸!¸!: F
+
¸!¸!G H
panelAccordeon
˝!˝!: H
+
˝!˝!I J
groupLevel3Level2
˛!˛!: K
)
ˇ!ˇ!- .
;
ˇ!ˇ!. /
level3Group
Å"Å" 
+=
Å"Å"  "
parLevel3Group
Å"Å"# 1
;
Å"Å"1 2
}
Ç"Ç" 
var
Ö"Ö" 
listLineCounter
Ö"Ö" #
=
Ö"Ö"$ %
ParCounterDB
Ö"Ö"& 2
.
Ö"Ö"2 3(
GetParLevelXParCounterList
Ö"Ö"3 M
(
Ö"Ö"M N
	ParLevel1
Ö"Ö"N W
.
Ö"Ö"W X
Id
Ö"Ö"X Z
,
Ö"Ö"Z [
$num
Ö"Ö"\ ]
,
Ö"Ö"] ^
$num
Ö"Ö"_ `
)
Ö"Ö"` a
;
Ö"Ö"a b
string
á"á" 
lineCounters
á"á" #
=
á"á"$ %
$str
á"á"& (
;
á"á"( )
if
â"â" 
(
â"â" 
listLineCounter
â"â" #
!=
â"â"$ &
null
â"â"' +
)
â"â"+ ,
{
ä"ä" 
lineCounters
ã"ã"  
=
ã"ã"! "
html
ã"ã"# '
.
ã"ã"' (
painelCounters
ã"ã"( 6
(
ã"ã"6 7
listLineCounter
ã"ã"7 F
,
ã"ã"F G
$str
ã"ã"H k
)
ã"ã"k l
;
ã"ã"l m
}
å"å" 
string
ç"ç" 
level2
ç"ç" 
=
ç"ç" 
html
ç"ç"  $
.
ç"ç"$ %
level2
ç"ç"% +
(
ç"ç"+ ,
id
ç"ç", .
:
ç"ç". /
$str
ç"ç"0 3
,
ç"ç"3 4
label
é"é", 1
:
é"é"1 2
	ParLevel1
é"é"3 <
.
é"é"< =
Name
é"é"= A
,
é"é"A B
classe
è"è", 2
:
è"è"2 3
$str
è"è"4 D
,
è"è"D E
evaluate
ê"ê", 4
:
ê"ê"4 5
evaluateGroup
ê"ê"6 C
,
ê"ê"C D
sample
ë"ë", 2
:
ë"ë"2 3
sampleGroup
ë"ë"4 ?
,
ë"ë"? @
HasSampleTotal
í"í", :
:
í"í": ;
false
í"í"< A
,
í"í"A B
IsEmptyLevel3
ì"ì", 9
:
ì"ì"9 :
false
ì"ì"; @
,
ì"ì"@ A
level1Group_Id
î"î", :
:
î"î": ;
	ParLevel1
î"î"< E
.
î"î"E F
Id
î"î"F H
)
î"î"H I
;
î"î"I J
ParLevel2List
ó"ó" 
=
ó"ó" 
html
ó"ó"  $
.
ó"ó"$ %
listgroupItem
ó"ó"% 2
(
ó"ó"2 3
id
ò"ò"4 6
:
ò"ò"6 7
	ParLevel1
ò"ò"8 A
.
ò"ò"A B
Id
ò"ò"B D
.
ò"ò"D E
ToString
ò"ò"E M
(
ò"ò"M N
)
ò"ò"N O
,
ò"ò"O P
classe
ô"ô"4 :
:
ô"ô": ;
$str
ô"ô"< A
,
ô"ô"A B
	outerhtml
ö"ö"4 =
:
ö"ö"= >
level2
ö"ö"? E
+
ö"ö"F G
counters
õ"õ"? G
+
õ"õ"H I
lineCounters
ú"ú"? K
+
ú"ú"L M
html
ù"ù"? C
.
ù"ù"C D
div
ù"ù"D G
(
ù"ù"G H
classe
ù"ù"H N
:
ù"ù"N O
$str
ù"ù"P ]
)
ù"ù"] ^
)
û"û"4 5
;
û"û"5 6
}
ü"ü" 
ParLevel2List
§"§" 
=
§"§" 

headerList
§"§" &
+
§"§"' (
ParLevel2List
•"•" )
;
•"•") *
var
ß"ß" (
painelLevel2HeaderListHtml
ß"ß" *
=
ß"ß"+ ,
GetHeaderHtml
ß"ß"- :
(
ß"ß": ;
ParLevelHeaderDB
ß"ß"; K
.
ß"ß"K L
getHeaderByLevel1
ß"ß"L ]
(
ß"ß"] ^
	ParLevel1
ß"ß"^ g
.
ß"ß"g h
Id
ß"ß"h j
)
ß"ß"j k
,
ß"ß"k l
ParFieldTypeDB
ß"ß"m {
,
ß"ß"{ |
htmlß"ß"} Å
)ß"ß"Å Ç
;ß"ß"Ç É
var
≤"≤" 
listCounter
≤"≤" 
=
≤"≤" 
ParCounterDB
≤"≤" *
.
≤"≤"* +(
GetParLevelXParCounterList
≤"≤"+ E
(
≤"≤"E F
	ParLevel1
≤"≤"F O
.
≤"≤"O P
Id
≤"≤"P R
,
≤"≤"R S
$num
≤"≤"T U
,
≤"≤"U V
$num
≤"≤"W X
)
≤"≤"X Y
;
≤"≤"Y Z
string
¥"¥" 
painelCounters
¥"¥" !
=
¥"¥"" #
$str
¥"¥"$ &
;
¥"¥"& '
if
∂"∂" 
(
∂"∂" 
listCounter
∂"∂" 
!=
∂"∂" 
null
∂"∂" #
)
∂"∂"# $
{
∑"∑" 
painelCounters
π"π" 
=
π"π"  
html
π"π"! %
.
π"π"% &
painelCounters
π"π"& 4
(
π"π"4 5
listCounter
π"π"5 @
.
π"π"@ A
Where
π"π"A F
(
π"π"F G
r
π"π"G H
=>
π"π"I K
r
π"π"L M
.
π"π"M N
Local
π"π"N S
==
π"π"T V
$str
π"π"W f
)
π"π"f g
,
π"π"g h
$strπ"π"i å
)π"π"å ç
;π"π"ç é
var
∫"∫" 
form_dentro
∫"∫" 
=
∫"∫"  !
html
∫"∫"" &
.
∫"∫"& '
div
∫"∫"' *
(
∫"∫"* +
	outerhtml
ª"ª", 5
:
ª"ª"5 6
painelCounters
ª"ª"7 E
,
ª"ª"E F
classe
º"º", 2
:
º"º"2 3
$str
º"º"4 G
,
º"º"G H
style
Ω"Ω", 1
:
Ω"Ω"1 2
$str
Ω"Ω"3 H
)
æ"æ"+ ,
;
æ"æ", -
painelCounters
ø"ø" 
+=
ø"ø" !
html
ø"ø"" &
.
ø"ø"& '
div
ø"ø"' *
(
ø"ø"* +
	outerhtml
¿"¿", 5
:
¿"¿"5 6
form_dentro
¿"¿"7 B
,
¿"¿"B C
classe
¡"¡", 2
:
¡"¡"2 3
$str
¡"¡"4 Y
,
¡"¡"Y Z
style
¬"¬", 1
:
¬"¬"1 2
$str
¬"¬"3 q
)
√"√"+ ,
;
√"√", -
}
ƒ"ƒ" 
if
∆"∆" 
(
∆"∆" 
!
∆"∆" 
string
∆"∆" 
.
∆"∆" 
IsNullOrEmpty
∆"∆" %
(
∆"∆"% &(
painelLevel2HeaderListHtml
∆"∆"& @
)
∆"∆"@ A
)
∆"∆"A B
{
«"«" (
painelLevel2HeaderListHtml
»"»" *
=
»"»"+ ,
html
»"»"- 1
.
»"»"1 2
listgroupItem
»"»"2 ?
(
»"»"? @
	outerhtml
…"…"@ I
:
…"…"I J(
painelLevel2HeaderListHtml
…"…"K e
+
…"…"f g
painelCounters
…"…"h v
,
…"…"v w
classe
 " "@ F
:
 " "F G
$str
 " "H [
)
À"À"@ A
;
À"À"A B
}
Ã"Ã" 
if
œ"œ" 
(
œ"œ" 
!
œ"œ" 
string
œ"œ" 
.
œ"œ" 
IsNullOrEmpty
œ"œ" %
(
œ"œ"% &
ParLevel2List
œ"œ"& 3
)
œ"œ"3 4
)
œ"œ"4 5
{
–"–" 
ParLevel2List
“"“" 
=
“"“" 
html
“"“"  $
.
“"“"$ %
	listgroup
“"“"% .
(
“"“". /
	outerhtml
”"”"0 9
:
”"”"9 :
reauditFlag
”"”"; F
+
”"”"G H(
painelLevel2HeaderListHtml
‘"‘"; U
+
‘"‘"V W
null
’"’"; ?
+
’"’"@ A
ParLevel2List
÷"÷"; H
,
÷"÷"H I
tags
◊"◊"0 4
:
◊"◊"4 5
$str
◊"◊"6 D
+
◊"◊"E F
	ParLevel1
◊"◊"G P
.
◊"◊"P Q
Id
◊"◊"Q S
+
◊"◊"T U
$str
◊"◊"V Z
,
ÿ"ÿ"/ 0
classe
ÿ"ÿ"1 7
:
ÿ"ÿ"7 8
$str
ÿ"ÿ"9 K
)
ÿ"ÿ"K L
;
ÿ"ÿ"L M
}
Ÿ"Ÿ" 
return
€"€" 
ParLevel2List
€"€"  
;
€"€"  !
}
‹"‹" 	
public
ﬁ"ﬁ" 
string
ﬁ"ﬁ" 
GetHeaderHtml
ﬁ"ﬁ" #
(
ﬁ"ﬁ"# $
IEnumerable
ﬁ"ﬁ"$ /
<
ﬁ"ﬁ"/ 0
ParLevelHeader
ﬁ"ﬁ"0 >
>
ﬁ"ﬁ"> ?
list
ﬁ"ﬁ"@ D
,
ﬁ"ﬁ"D E
ParFieldType
ﬁ"ﬁ"F R
ParFieldTypeDB
ﬁ"ﬁ"S a
,
ﬁ"ﬁ"a b
Html
ﬁ"ﬁ"c g
html
ﬁ"ﬁ"h l
,
ﬁ"ﬁ"l m
int
ﬁ"ﬁ"n q
ParLevel1_Id
ﬁ"ﬁ"r ~
=ﬁ"ﬁ" Ä
$numﬁ"ﬁ"Å Ç
,ﬁ"ﬁ"Ç É
intﬁ"ﬁ"Ñ á
ParLevel2_Idﬁ"ﬁ"à î
=ﬁ"ﬁ"ï ñ
$numﬁ"ﬁ"ó ò
,ﬁ"ﬁ"ò ô
ParLevelHeaderﬁ"ﬁ"ö ® 
ParLevelHeaderDBﬁ"ﬁ"© π
=ﬁ"ﬁ"∫ ª
nullﬁ"ﬁ"º ¿
,ﬁ"ﬁ"¿ ¡
intﬁ"ﬁ"¬ ≈
ParCompany_idﬁ"ﬁ"∆ ”
=ﬁ"ﬁ"‘ ’
$numﬁ"ﬁ"÷ ◊
)ﬁ"ﬁ"◊ ÿ
{
ﬂ"ﬂ" 	
string
‡"‡" 
retorno
‡"‡" 
=
‡"‡" 
$str
‡"‡" 
;
‡"‡"  
int
‚"‚" 
id
‚"‚" 
=
‚"‚" 
$num
‚"‚" 
;
‚"‚" 
foreach
‰"‰" 
(
‰"‰" 
var
‰"‰" 
header
‰"‰" 
in
‰"‰"  "
list
‰"‰"# '
)
‰"‰"' (
{
Â"Â" 
if
È"È" 
(
È"È" 
ParLevel1_Id
È"È"  
>
È"È"! "
$num
È"È"# $
&&
È"È"% '
ParLevel2_Id
È"È"( 4
>
È"È"5 6
$num
È"È"7 8
&&
È"È"9 ;
ParLevelHeaderDB
È"È"< L
!=
È"È"M O
null
È"È"P T
)
È"È"T U
{
Í"Í" 
if
Î"Î" 
(
Î"Î" 
ParLevelHeaderDB
Î"Î" (
.
Î"Î"( )$
isHeaderLeve2Exception
Î"Î") ?
(
Î"Î"? @
ParLevel1_Id
Î"Î"@ L
,
Î"Î"L M
ParLevel2_Id
Î"Î"N Z
,
Î"Î"Z [
header
Î"Î"\ b
.
Î"Î"b c
ParHeaderField_Id
Î"Î"c t
)
Î"Î"t u
)
Î"Î"u v
{
Ï"Ï" 
continue
Ì"Ì"  
;
Ì"Ì"  !
}
Ó"Ó" 
}
Ô"Ô" 
var
Ò"Ò" 
label
Ò"Ò" 
=
Ò"Ò" 
$str
Ò"Ò" :
+
Ò"Ò"; <
header
Ò"Ò"= C
.
Ò"Ò"C D!
ParHeaderField_Name
Ò"Ò"D W
+
Ò"Ò"X Y
$str
Ò"Ò"Z d
;
Ò"Ò"d e
var
Û"Û" 
form_control
Û"Û"  
=
Û"Û"! "
$str
Û"Û"# %
;
Û"Û"% &
switch
˙"˙" 
(
˙"˙" 
header
˙"˙" 
.
˙"˙" 
ParFieldType_Id
˙"˙" .
)
˙"˙". /
{
˚"˚" 
case
˝"˝" 
$num
˝"˝" 
:
˝"˝" 
var
˛"˛" 
listMultiple
˛"˛" (
=
˛"˛") *
ParFieldTypeDB
˛"˛"+ 9
.
˛"˛"9 :
getMultipleValues
˛"˛": K
(
˛"˛"K L
header
˛"˛"L R
.
˛"˛"R S
ParHeaderField_Id
˛"˛"S d
)
˛"˛"d e
;
˛"˛"e f
var
ˇ"ˇ" 
optionsMultiple
ˇ"ˇ" +
=
ˇ"ˇ", -
$str
ˇ"ˇ". 0
;
ˇ"ˇ"0 1
bool
Ä#Ä# 

hasDefault
Ä#Ä# '
=
Ä#Ä#( )
false
Ä#Ä#* /
;
Ä#Ä#/ 0
foreach
Ç#Ç# 
(
Ç#Ç#  !
var
Ç#Ç#! $
value
Ç#Ç#% *
in
Ç#Ç#+ -
listMultiple
Ç#Ç#. :
)
Ç#Ç#: ;
{
É#É# 
if
Ñ#Ñ# 
(
Ñ#Ñ#  
value
Ñ#Ñ#  %
.
Ñ#Ñ#% &
IsDefaultOption
Ñ#Ñ#& 5
==
Ñ#Ñ#6 8
$num
Ñ#Ñ#9 :
)
Ñ#Ñ#: ;
{
Ö#Ö# 
optionsMultiple
Ü#Ü#  /
+=
Ü#Ü#0 2
$str
Ü#Ü#3 [
+
Ü#Ü#\ ]
value
Ü#Ü#^ c
.
Ü#Ü#c d
Id
Ü#Ü#d f
+
Ü#Ü#g h
$strÜ#Ü#i Ä
+Ü#Ü#Å Ç
valueÜ#Ü#É à
.Ü#Ü#à â
PunishmentValueÜ#Ü#â ò
+Ü#Ü#ô ö
$strÜ#Ü#õ †
+Ü#Ü#° ¢
valueÜ#Ü#£ ®
.Ü#Ü#® ©
NameÜ#Ü#© ≠
+Ü#Ü#Æ Ø
$strÜ#Ü#∞ ª
;Ü#Ü#ª º

hasDefault
á#á#  *
=
á#á#+ ,
true
á#á#- 1
;
á#á#1 2
}
à#à# 
else
â#â#  
{
ä#ä# 
optionsMultiple
ã#ã#  /
+=
ã#ã#0 2
$str
ã#ã#3 E
+
ã#ã#F G
value
ã#ã#H M
.
ã#ã#M N
Id
ã#ã#N P
+
ã#ã#Q R
$str
ã#ã#S j
+
ã#ã#k l
value
ã#ã#m r
.
ã#ã#r s
PunishmentValueã#ã#s Ç
+ã#ã#É Ñ
$strã#ã#Ö ä
+ã#ã#ã å
valueã#ã#ç í
.ã#ã#í ì
Nameã#ã#ì ó
+ã#ã#ò ô
$strã#ã#ö •
;ã#ã#• ¶
}
å#å# 
}
ç#ç# 
if
è#è# 
(
è#è# 
!
è#è# 

hasDefault
è#è# '
)
è#è#' (
optionsMultiple
ê#ê# +
=
ê#ê#, -
$str
ê#ê#. Z
+
ê#ê#[ \

CommonData
ê#ê#] g
.
ê#ê#g h
getResource
ê#ê#h s
(
ê#ê#s t
$str
ê#ê#t |
)
ê#ê#| }
.
ê#ê#} ~
Valueê#ê#~ É
.ê#ê#É Ñ
ToStringê#ê#Ñ å
(ê#ê#å ç
)ê#ê#ç é
+ê#ê#è ê
$strê#ê#ë ü
+ê#ê#† °
optionsMultipleê#ê#¢ ±
;ê#ê#± ≤
form_control
î#î# $
=
î#î#% &
$str
î#î#' \
+
î#î#] ^
header
î#î#_ e
.
î#î#e f
ParHeaderField_Id
î#î#f w
+
î#î#x y
$strî#î#z ù
+î#î#û ü
headerî#î#† ¶
.î#î#¶ ß!
ParHeaderField_Idî#î#ß ∏
+î#î#π ∫
$strî#î#ª “
+î#î#” ‘
headerî#î#’ €
.î#î#€ ‹
ParFieldType_Idî#î#‹ Î
+î#î#Ï Ì
$strî#î#Ó ˚
+î#î#¸ ˝
idî#î#˛ Ä
+î#î#Å Ç
$strî#î#É à
+î#î#â ä
optionsMultipleî#î#ã ö
+î#î#õ ú
$strî#î#ù ®
;î#î#® ©
break
ó#ó# 
;
ó#ó# 
case
ô#ô# 
$num
ô#ô# 
:
ô#ô# 
var
ö#ö# 
listIntegration
ö#ö# +
=
ö#ö#, -
ParFieldTypeDB
ö#ö#. <
.
ö#ö#< ="
getIntegrationValues
ö#ö#= Q
(
ö#ö#Q R
header
ö#ö#R X
.
ö#ö#X Y
ParHeaderField_Id
ö#ö#Y j
,
ö#ö#j k
header
ö#ö#l r
.
ö#ö#r s)
ParHeaderField_Descriptionö#ö#s ç
,ö#ö#ç é
ParCompany_idö#ö#è ú
)ö#ö#ú ù
;ö#ö#ù û
var
õ#õ#  
optionsIntegration
õ#õ# .
=
õ#õ#/ 0
$str
õ#õ#1 3
;
õ#õ#3 4
bool
ú#ú# #
hasDefaultIntegration
ú#ú# 2
=
ú#ú#3 4
false
ú#ú#5 :
;
ú#ú#: ;
foreach
û#û# 
(
û#û#  !
var
û#û#! $
value
û#û#% *
in
û#û#+ -
listIntegration
û#û#. =
)
û#û#= >
{
ü#ü# 
if
†#†# 
(
†#†#  
value
†#†#  %
.
†#†#% &
IsDefaultOption
†#†#& 5
==
†#†#6 8
$num
†#†#9 :
)
†#†#: ;
{
°#°#  
optionsIntegration
¢#¢#  2
+=
¢#¢#3 5
$str
¢#¢#6 ^
+
¢#¢#_ `
value
¢#¢#a f
.
¢#¢#f g
Id
¢#¢#g i
+
¢#¢#j k
$str¢#¢#l á
+¢#¢#à â
value¢#¢#ä è
.¢#¢#è ê
Name¢#¢#ê î
+¢#¢#ï ñ
$str¢#¢#ó ¢
;¢#¢#¢ £#
hasDefaultIntegration
£#£#  5
=
£#£#6 7
true
£#£#8 <
;
£#£#< =
}
§#§# 
else
•#•#  
{
¶#¶#  
optionsIntegration
ß#ß#  2
+=
ß#ß#3 5
$str
ß#ß#6 H
+
ß#ß#I J
value
ß#ß#K P
.
ß#ß#P Q
Id
ß#ß#Q S
+
ß#ß#T U
$str
ß#ß#V q
+
ß#ß#r s
value
ß#ß#t y
.
ß#ß#y z
Name
ß#ß#z ~
+ß#ß# Ä
$strß#ß#Å å
;ß#ß#å ç
}
®#®# 
}
©#©# 
if
™#™# 
(
™#™# 
!
™#™# #
hasDefaultIntegration
™#™# 2
)
™#™#2 3 
optionsIntegration
´#´# .
=
´#´#/ 0
$str
´#´#1 ]
+
´#´#^ _

CommonData
´#´#` j
.
´#´#j k
getResource
´#´#k v
(
´#´#v w
$str
´#´#w 
)´#´# Ä
.´#´#Ä Å
Value´#´#Å Ü
.´#´#Ü á
ToString´#´#á è
(´#´#è ê
)´#´#ê ë
+´#´#í ì
$str´#´#î ¢
+´#´#£ §"
optionsIntegration´#´#• ∑
;´#´#∑ ∏
form_control
≠#≠# $
=
≠#≠#% &
$str
≠#≠#' X
+
≠#≠#Y Z
header
≠#≠#[ a
.
≠#≠#a b
ParHeaderField_Id
≠#≠#b s
+
≠#≠#t u
$str≠#≠#v è
+≠#≠#ê ë
header≠#≠#í ò
.≠#≠#ò ô!
ParHeaderField_Id≠#≠#ô ™
+≠#≠#´ ¨
$str≠#≠#≠ ƒ
+≠#≠#≈ ∆
header≠#≠#« Õ
.≠#≠#Õ Œ
ParFieldType_Id≠#≠#Œ ›
+≠#≠#ﬁ ﬂ
$str≠#≠#‡ Â
+≠#≠#Ê Á"
optionsIntegration≠#≠#Ë ˙
+≠#≠#˚ ¸
$str≠#≠#˝ à
;≠#≠#à â
break
Æ#Æ# 
;
Æ#Æ# 
case
∞#∞# 
$num
∞#∞# 
:
∞#∞# 
var
±#±# 
listBinario
±#±# '
=
±#±#( )
ParFieldTypeDB
±#±#* 8
.
±#±#8 9
getMultipleValues
±#±#9 J
(
±#±#J K
header
±#±#K Q
.
±#±#Q R
ParHeaderField_Id
±#±#R c
)
±#±#c d
;
±#±#d e
var
≤#≤# 
optionsBinario
≤#≤# *
=
≤#≤#+ ,
$str
≤#≤#- /
;
≤#≤#/ 0
foreach
≥#≥# 
(
≥#≥#  !
var
≥#≥#! $
value
≥#≥#% *
in
≥#≥#+ -
listBinario
≥#≥#. 9
)
≥#≥#9 :
{
¥#¥# 
if
µ#µ# 
(
µ#µ#  
listBinario
µ#µ#  +
.
µ#µ#+ ,
	ElementAt
µ#µ#, 5
(
µ#µ#5 6
$num
µ#µ#6 7
)
µ#µ#7 8
==
µ#µ#9 ;
value
µ#µ#< A
)
µ#µ#A B
{
∂#∂# 
optionsBinario
∑#∑#  .
+=
∑#∑#/ 1
$str
∑#∑#2 M
+
∑#∑#N O
value
∑#∑#P U
.
∑#∑#U V
Id
∑#∑#V X
+
∑#∑#Y Z
$str
∑#∑#[ r
+
∑#∑#s t
value
∑#∑#u z
.
∑#∑#z {
PunishmentValue∑#∑#{ ä
+∑#∑#ã å
$str∑#∑#ç í
+∑#∑#ì î
value∑#∑#ï ö
.∑#∑#ö õ
Name∑#∑#õ ü
+∑#∑#† °
$str∑#∑#¢ ≠
;∑#∑#≠ Æ
}
∏#∏# 
else
π#π#  
{
∫#∫# 
optionsBinario
ª#ª#  .
+=
ª#ª#/ 1
$str
ª#ª#2 D
+
ª#ª#E F
value
ª#ª#G L
.
ª#ª#L M
Id
ª#ª#M O
+
ª#ª#P Q
$str
ª#ª#R i
+
ª#ª#j k
value
ª#ª#l q
.
ª#ª#q r
PunishmentValueª#ª#r Å
+ª#ª#Ç É
$strª#ª#Ñ â
+ª#ª#ä ã
valueª#ª#å ë
.ª#ª#ë í
Nameª#ª#í ñ
+ª#ª#ó ò
$strª#ª#ô §
;ª#ª#§ •
}
º#º# 
}
Ω#Ω# 
form_control
æ#æ# $
=
æ#æ#% &
$str
æ#æ#' X
+
æ#æ#Y Z
header
æ#æ#[ a
.
æ#æ#a b
ParHeaderField_Id
æ#æ#b s
+
æ#æ#t u
$stræ#æ#v é
+æ#æ#è ê
headeræ#æ#ë ó
.æ#æ#ó ò!
ParHeaderField_Idæ#æ#ò ©
+æ#æ#™ ´
$stræ#æ#¨ √
+æ#æ#ƒ ≈
headeræ#æ#∆ Ã
.æ#æ#Ã Õ
ParFieldType_Idæ#æ#Õ ‹
+æ#æ#› ﬁ
$stræ#æ#ﬂ „
+æ#æ#‰ Â
optionsBinarioæ#æ#Ê Ù
+æ#æ#ı ˆ
$stræ#æ#˜ Ç
;æ#æ#Ç É
break
ø#ø# 
;
ø#ø# 
case
¡#¡# 
$num
¡#¡# 
:
¡#¡# 
form_control
¬#¬# $
=
¬#¬#% &
$str
¬#¬#' e
+
¬#¬#f g
header
¬#¬#h n
.
¬#¬#n o 
ParHeaderField_Id¬#¬#o Ä
+¬#¬#Å Ç
$str¬#¬#É ú
+¬#¬#ù û
header¬#¬#ü •
.¬#¬#• ¶!
ParHeaderField_Id¬#¬#¶ ∑
+¬#¬#∏ π
$str¬#¬#∫ —
+¬#¬#“ ”
header¬#¬#‘ ⁄
.¬#¬#⁄ €
ParFieldType_Id¬#¬#€ Í
+¬#¬#Î Ï
$str¬#¬#Ì Ú
;¬#¬#Ú Û
break
√#√# 
;
√#√# 
case
≈#≈# 
$num
≈#≈# 
:
≈#≈# 
form_control
∆#∆# $
=
∆#∆#% &
$str
∆#∆#' g
+
∆#∆#h i
header
∆#∆#j p
.
∆#∆#p q 
ParHeaderField_Id∆#∆#q Ç
+∆#∆#É Ñ
$str∆#∆#Ö û
+∆#∆#ü †
header∆#∆#° ß
.∆#∆#ß ®!
ParHeaderField_Id∆#∆#® π
+∆#∆#∫ ª
$str∆#∆#º ”
+∆#∆#‘ ’
header∆#∆#÷ ‹
.∆#∆#‹ ›
ParFieldType_Id∆#∆#› Ï
+∆#∆#Ì Ó
$str∆#∆#Ô Ù
;∆#∆#Ù ı
break
«#«# 
;
«#«# 
case
…#…# 
$num
…#…# 
:
…#…# 
form_control
 # # $
=
 # #% &
$str
 # #' e
+
 # #f g
header
 # #h n
.
 # #n o 
ParHeaderField_Id # #o Ä
+ # #Å Ç
$str # #É ú
+ # #ù û
header # #ü •
. # #• ¶!
ParHeaderField_Id # #¶ ∑
+ # #∏ π
$str # #∫ —
+ # #“ ”
header # #‘ ⁄
. # #⁄ €
ParFieldType_Id # #€ Í
+ # #Î Ï
$str # #Ì Ú
; # #Ú Û
break
À#À# 
;
À#À# 
case
Œ#Œ# 
$num
Œ#Œ# 
:
Œ#Œ# 
form_control
œ#œ# $
=
œ#œ#% &
$str
œ#œ#' e
+
œ#œ#f g
header
œ#œ#h n
.
œ#œ#n o 
ParHeaderField_Idœ#œ#o Ä
+œ#œ#Å Ç
$strœ#œ#É ú
+œ#œ#ù û
headerœ#œ#ü •
.œ#œ#• ¶!
ParHeaderField_Idœ#œ#¶ ∑
+œ#œ#∏ π
$strœ#œ#∫ —
+œ#œ#“ ”
headerœ#œ#‘ ⁄
.œ#œ#⁄ €
ParFieldType_Idœ#œ#€ Í
+œ#œ#Î Ï
$strœ#œ#Ì Ú
;œ#œ#Ú Û
break
–#–# 
;
–#–# 
}
—#—# 
id
‘#‘# 
=
‘#‘# 
id
‘#‘# 
+
‘#‘# 
$num
‘#‘# 
;
‘#‘# 
var
÷#÷# 

form_group
÷#÷# 
=
÷#÷#  
html
÷#÷#! %
.
÷#÷#% &
div
÷#÷#& )
(
÷#÷#) *
	outerhtml
◊#◊#, 5
:
◊#◊#5 6
label
◊#◊#7 <
+
◊#◊#= >
form_control
◊#◊#? K
,
◊#◊#K L
classe
ÿ#ÿ#, 2
:
ÿ#ÿ#2 3
$str
ÿ#ÿ#4 G
,
ÿ#ÿ#G H
tags
Ÿ#Ÿ#, 0
:
Ÿ#Ÿ#0 1
header
Ÿ#Ÿ#2 8
.
Ÿ#Ÿ#8 9

IsRequired
Ÿ#Ÿ#9 C
==
Ÿ#Ÿ#D F
$num
Ÿ#Ÿ#G H
?
Ÿ#Ÿ#I J
$str
Ÿ#Ÿ#K U
:
Ÿ#Ÿ#V W
$str
Ÿ#Ÿ#X Z
,
Ÿ#Ÿ#Z [
style
⁄#⁄#, 1
:
⁄#⁄#1 2
$str
⁄#⁄#3 H
)
€#€#, -
;
€#€#- .
retorno
›#›# 
+=
›#›# 
html
›#›# 
.
›#›#  
div
›#›#  #
(
›#›## $
	outerhtml
ﬁ#ﬁ#, 5
:
ﬁ#ﬁ#5 6

form_group
ﬁ#ﬁ#7 A
,
ﬁ#ﬁ#A B
classe
ﬂ#ﬂ#, 2
:
ﬂ#ﬂ#2 3
$str
ﬂ#ﬂ#4 Y
,
ﬂ#ﬂ#Y Z
style
‡#‡#, 1
:
‡#‡#1 2
$str
‡#‡#3 q
)
·#·#, -
;
·#·#- .
}
Ê#Ê# 
return
Ë#Ë# 
retorno
Ë#Ë# 
;
Ë#Ë# 
}
È#È# 	
public
## 
string
## 
GetHeaderYtoara
## %
(
##% &
)
##& '
{
Ò#Ò# 	
return
Ú#Ú# 

ytoaraUtil
Ú#Ú# 
.
Ú#Ú# 
criarHeader
Ú#Ú# )
(
Ú#Ú#) *

ytoaraUtil
Ú#Ú#* 4
.
Ú#Ú#4 5$
getElementoEstruturado
Ú#Ú#5 K
(
Ú#Ú#K L
)
Ú#Ú#L M
)
Ú#Ú#M N
;
Ú#Ú#N O
}
Û#Û# 	
public
¸#¸# 
string
¸#¸# 

GetLevel03
¸#¸#  
(
¸#¸#  !
SGQDBContext
¸#¸#! -
.
¸#¸#- .
	ParLevel1
¸#¸#. 7
	ParLevel1
¸#¸#8 A
,
¸#¸#A B
SGQDBContext
¸#¸#C O
.
¸#¸#O P
	ParLevel2
¸#¸#P Y
	ParLevel2
¸#¸#Z c
,
¸#¸#c d
int
¸#¸#e h
ParCompany_Id
¸#¸#i v
,
¸#¸#v w
DateTime¸#¸#x Ä
dateCollect¸#¸#Å å
,¸#¸#å ç
ref¸#¸#é ë
string¸#¸#í ò
painellevel3¸#¸#ô •
)¸#¸#• ¶
{
˝#˝# 	
var
˛#˛# 
html
˛#˛# 
=
˛#˛# 
new
˛#˛# 
Html
˛#˛# 
(
˛#˛#  
)
˛#˛#  !
;
˛#˛#! "
var
Ä$Ä$ 
reauditFlag
Ä$Ä$ 
=
Ä$Ä$ 
$strÄ$Ä$ ê
;Ä$Ä$ê ë
var
É$É$ 
ParLevel3DB
É$É$ 
=
É$É$ 
new
É$É$ !
SGQDBContext
É$É$" .
.
É$É$. /
	ParLevel3
É$É$/ 8
(
É$É$8 9
db
É$É$9 ;
)
É$É$; <
;
É$É$< =
var
Ñ$Ñ$ 
ParCounterDB
Ñ$Ñ$ 
=
Ñ$Ñ$ 
new
Ñ$Ñ$ "
SGQDBContext
Ñ$Ñ$# /
.
Ñ$Ñ$/ 0

ParCounter
Ñ$Ñ$0 :
(
Ñ$Ñ$: ;
db
Ñ$Ñ$; =
)
Ñ$Ñ$= >
;
Ñ$Ñ$> ?
var
á$á$ 
ParLevelHeaderDB
á$á$  
=
á$á$! "
new
á$á$# &
SGQDBContext
á$á$' 3
.
á$á$3 4
ParLevelHeader
á$á$4 B
(
á$á$B C
db
á$á$C E
)
á$á$E F
;
á$á$F G
var
â$â$ 
ParFieldTypeDB
â$â$ 
=
â$â$  
new
â$â$! $
SGQDBContext
â$â$% 1
.
â$â$1 2
ParFieldType
â$â$2 >
(
â$â$> ?
db
â$â$? A
)
â$â$A B
;
â$â$B C
var
ã$ã$ +
ParLevel1VariableProductionDB
ã$ã$ -
=
ã$ã$. /
new
ã$ã$0 3
SGQDBContext
ã$ã$4 @
.
ã$ã$@ A)
ParLevel1VariableProduction
ã$ã$A \
(
ã$ã$\ ]
db
ã$ã$] _
)
ã$ã$_ `
;
ã$ã$` a
var
è$è$ 
parlevel3List
è$è$ 
=
è$è$ 
ParLevel3DB
è$è$  +
.
è$è$+ ,
getLevel3ByLevel2
è$è$, =
(
è$è$= >
	ParLevel1
è$è$> G
,
è$è$G H
	ParLevel2
è$è$I R
,
è$è$R S
ParCompany_Id
è$è$T a
,
è$è$a b
dateCollect
è$è$c n
)
è$è$n o
;
è$è$o p
string
ë$ë$ 
tipoTela
ë$ë$ 
=
ë$ë$ 
$str
ë$ë$  
;
ë$ë$  !
var
ì$ì$ 
variableList
ì$ì$ 
=
ì$ì$ +
ParLevel1VariableProductionDB
ì$ì$ <
.
ì$ì$< =
getVariable
ì$ì$= H
(
ì$ì$H I
	ParLevel1
ì$ì$I R
.
ì$ì$R S
Id
ì$ì$S U
)
ì$ì$U V
.
ì$ì$V W
ToList
ì$ì$W ]
(
ì$ì$] ^
)
ì$ì$^ _
;
ì$ì$_ `
var
ï$ï$ 
listCounter
ï$ï$ 
=
ï$ï$ 
ParCounterDB
ï$ï$ *
.
ï$ï$* +(
GetParLevelXParCounterList
ï$ï$+ E
(
ï$ï$E F
$num
ï$ï$F G
,
ï$ï$G H
	ParLevel2
ï$ï$I R
.
ï$ï$R S
Id
ï$ï$S U
,
ï$ï$U V
$num
ï$ï$W X
)
ï$ï$X Y
.
ï$ï$Y Z
ToList
ï$ï$Z `
(
ï$ï$` a
)
ï$ï$a b
;
ï$ï$b c
listCounter
ñ$ñ$ 
.
ñ$ñ$ 
AddRange
ñ$ñ$  
(
ñ$ñ$  !
ParCounterDB
ñ$ñ$! -
.
ñ$ñ$- .(
GetParLevelXParCounterList
ñ$ñ$. H
(
ñ$ñ$H I
	ParLevel1
ñ$ñ$I R
.
ñ$ñ$R S
Id
ñ$ñ$S U
,
ñ$ñ$U V
$num
ñ$ñ$W X
,
ñ$ñ$X Y
$num
ñ$ñ$Z [
)
ñ$ñ$[ \
.
ñ$ñ$\ ]
ToList
ñ$ñ$] c
(
ñ$ñ$c d
)
ñ$ñ$d e
)
ñ$ñ$e f
;
ñ$ñ$f g
if
ò$ò$ 
(
ò$ò$ 
variableList
ò$ò$ 
.
ò$ò$ 
Count
ò$ò$ "
>
ò$ò$# $
$num
ò$ò$% &
)
ò$ò$& '
{
ô$ô$ 
tipoTela
ö$ö$ 
=
ö$ö$ 
variableList
ö$ö$ '
[
ö$ö$' (
$num
ö$ö$( )
]
ö$ö$) *
.
ö$ö$* +
Name
ö$ö$+ /
;
ö$ö$/ 0
}
õ$õ$ 
string
ú$ú$ 
btnNaoAvaliado
ú$ú$ !
=
ú$ú$" #
html
ú$ú$$ (
.
ú$ú$( )
button
ú$ú$) /
(
ú$ú$/ 0
label
ù$ù$$ )
:
ù$ù$) *
html
ù$ù$+ /
.
ù$ù$/ 0
span
ù$ù$0 4
(
ù$ù$4 5
classe
û$û$1 7
:
û$û$7 8
$str
û$û$9 R
,
û$û$R S
	outerhtml
ü$ü$1 :
:
ü$ü$: ;
$str
ü$ü$< A
)
†$†$0 1
,
†$†$1 2
classe
°$°$$ *
:
°$°$* +
$str
°$°$, S
)
¢$¢$  !
;
¢$¢$! "
bool
•$•$ 
haveAccordeon
•$•$ 
=
•$•$  
false
•$•$! &
;
•$•$& '
int
ß$ß$ 
Last_Id
ß$ß$ 
=
ß$ß$ 
$num
ß$ß$ 
;
ß$ß$ 
if
©$©$ 
(
©$©$ 
tipoTela
©$©$ 
.
©$©$ 
Equals
©$©$ 
(
©$©$  
$str
©$©$  %
)
©$©$% &
)
©$©$& '
{
™$™$ 
string
Æ$Æ$ 
parLevel3Group
Æ$Æ$ %
=
Æ$Æ$& '
null
Æ$Æ$( ,
;
Æ$Æ$, -
foreach
∞$∞$ 
(
∞$∞$ 
var
∞$∞$ 
	parLevel3
∞$∞$ &
in
∞$∞$' )
parlevel3List
∞$∞$* 7
)
∞$∞$7 8
{
±$±$ 
if
≥$≥$ 
(
≥$≥$ 
Last_Id
≥$≥$ 
!=
≥$≥$  "
	parLevel3
≥$≥$# ,
.
≥$≥$, -
Id
≥$≥$- /
)
≥$≥$/ 0
{
¥$¥$ 
string
∂$∂$ 

classInput
∂$∂$ )
=
∂$∂$* +
null
∂$∂$, 0
;
∂$∂$0 1
string
∏$∏$ 
labelsInputs
∏$∏$ +
=
∏$∏$, -
null
∏$∏$. 2
;
∏$∏$2 3
string
∫$∫$ 
input
∫$∫$ $
=
∫$∫$% &
getTipoInputBEA
∫$∫$' 6
(
∫$∫$6 7
	parLevel3
∫$∫$7 @
,
∫$∫$@ A
ref
∫$∫$B E

classInput
∫$∫$F P
,
∫$∫$P Q
ref
∫$∫$R U
labelsInputs
∫$∫$V b
)
∫$∫$b c
;
∫$∫$c d
string
º$º$ 

level3List
º$º$ )
=
º$º$* +
html
º$º$, 0
.
º$º$0 1
level3
º$º$1 7
(
º$º$7 8
	parLevel3
º$º$8 A
,
º$º$A B
input
º$º$C H
,
º$º$H I

classInput
º$º$J T
,
º$º$T U
labelsInputs
º$º$V b
)
º$º$b c
;
º$º$c d
parLevel3Group
Ω$Ω$ &
+=
Ω$Ω$' )

level3List
Ω$Ω$* 4
;
Ω$Ω$4 5
Last_Id
ø$ø$ 
=
ø$ø$  !
	parLevel3
ø$ø$" +
.
ø$ø$+ ,
Id
ø$ø$, .
;
ø$ø$. /
}
¡$¡$ 
}
¬$¬$ 
string
≈$≈$ 
avaliacoeshtml
≈$≈$ %
=
≈$≈$& '
html
≈$≈$( ,
.
≈$≈$, -
div
≈$≈$- 0
(
≈$≈$0 1
	outerhtml
∆$∆$$ -
:
∆$∆$- .
$str
∆$∆$/ g
+
∆$∆$h i

CommonData
∆$∆$j t
.
∆$∆$t u
getResource∆$∆$u Ä
(∆$∆$Ä Å
$str∆$∆$Å ç
)∆$∆$ç é
.∆$∆$é è
Value∆$∆$è î
.∆$∆$î ï
ToString∆$∆$ï ù
(∆$∆$ù û
)∆$∆$û ü
+∆$∆$† °
$str∆$∆$¢ Â
+∆$∆$Ê Á
html∆$∆$Ë Ï
.∆$∆$Ï Ì
span∆$∆$Ì Ò
(∆$∆$Ò Ú
classe∆$∆$Ú ¯
:∆$∆$¯ ˘
$str∆$∆$˙ ã
)∆$∆$ã å
+∆$∆$ç é
html∆$∆$è ì
.∆$∆$ì î
span∆$∆$î ò
(∆$∆$ò ô
	outerhtml∆$∆$ô ¢
:∆$∆$¢ £
$str∆$∆$§ ©
,∆$∆$© ™
classe∆$∆$´ ±
:∆$∆$± ≤
$str∆$∆$≥ æ
)∆$∆$æ ø
+∆$∆$¿ ¡
html∆$∆$¬ ∆
.∆$∆$∆ «
span∆$∆$« À
(∆$∆$À Ã
classe∆$∆$Ã “
:∆$∆$“ ”
$str∆$∆$‘ „
)∆$∆$„ ‰
+∆$∆$Â Ê
$str∆$∆$Á Ò
,∆$∆$Ò Ú
style
«$«$$ )
:
«$«$) *
$str
«$«$+ @
,
«$«$@ A
classe
»$»$$ *
:
»$»$* +
$str
»$»$, 8
)
»$»$8 9
;
»$»$9 :
string
…$…$ 
amostrashtml
…$…$ #
=
…$…$$ %
html
…$…$& *
.
…$…$* +
div
…$…$+ .
(
…$…$. /
	outerhtml
 $ $$ -
:
 $ $- .
$str
 $ $/ g
+
 $ $h i

CommonData
 $ $j t
.
 $ $t u
getResource $ $u Ä
( $ $Ä Å
$str $ $Å ä
) $ $ä ã
. $ $ã å
Value $ $å ë
. $ $ë í
ToString $ $í ö
( $ $ö õ
) $ $õ ú
+ $ $ù û
$str $ $ü ‚
+ $ $„ ‰
html $ $Â È
. $ $È Í
span $ $Í Ó
( $ $Ó Ô
classe $ $Ô ı
: $ $ı ˆ
$str $ $˜ Ü
) $ $Ü á
+ $ $à â
html $ $ä é
. $ $é è
span $ $è ì
( $ $ì î
	outerhtml $ $î ù
: $ $ù û
$str $ $ü §
, $ $§ •
classe $ $¶ ¨
: $ $¨ ≠
$str $ $Æ π
) $ $π ∫
+ $ $ª º
html $ $Ω ¡
. $ $¡ ¬
span $ $¬ ∆
( $ $∆ «
classe $ $« Õ
: $ $Õ Œ
$str $ $œ ‹
) $ $‹ ›
+ $ $ﬁ ﬂ
$str $ $‡ Í
, $ $Í Î
style
À$À$$ )
:
À$À$) *
$str
À$À$+ @
,
À$À$@ A
classe
Ã$Ã$$ *
:
Ã$Ã$* +
$str
Ã$Ã$, 8
)
Ã$Ã$8 9
;
Ã$Ã$9 :
string
Œ$Œ$ 

avaliacoes
Œ$Œ$ !
=
Œ$Œ$" #
html
Œ$Œ$$ (
.
Œ$Œ$( )
div
Œ$Œ$) ,
(
Œ$Œ$, -
	outerhtml
œ$œ$$ -
:
œ$œ$- .
avaliacoeshtml
œ$œ$/ =
,
œ$œ$= >
style
–$–$$ )
:
–$–$) *
$str
–$–$+ i
,
–$–$i j
classe
—$—$$ *
:
—$—$* +
$str
—$—$, Q
)
—$—$Q R
;
—$—$R S
string
“$“$ 
amostras
“$“$ 
=
“$“$  !
html
“$“$" &
.
“$“$& '
div
“$“$' *
(
“$“$* +
	outerhtml
”$”$$ -
:
”$”$- .
amostrashtml
”$”$/ ;
,
”$”$; <
style
‘$‘$$ )
:
‘$‘$) *
$str
‘$‘$+ i
,
‘$‘$i j
classe
’$’$$ *
:
’$’$* +
$str
’$’$, Q
)
’$’$Q R
;
’$’$R S
var
⁄$⁄$ (
painelLevel3HeaderListHtml
⁄$⁄$ .
=
⁄$⁄$/ 0
$str
⁄$⁄$1 3
;
⁄$⁄$3 4
var
‹$‹$ 
tituloLabel
‹$‹$ 
=
‹$‹$  !
$str
‹$‹$" 5
;
‹$‹$5 6
if
ﬁ$ﬁ$ 
(
ﬁ$ﬁ$ 
	ParLevel1
ﬁ$ﬁ$ 
.
ﬁ$ﬁ$ 
Id
ﬁ$ﬁ$ 
==
ﬁ$ﬁ$  "
$num
ﬁ$ﬁ$# %
)
ﬁ$ﬁ$% &
{
ﬂ$ﬂ$ 
tituloLabel
‡$‡$ 
=
‡$‡$  !
$str
‡$‡$" 8
;
‡$‡$8 9
}
·$·$ 
var
„$„$ 

labelPecas
„$„$ 
=
„$„$  
$str
„$„$! =
+
„$„$> ?
tituloLabel
„$„$@ K
+
„$„$L M
$str
„$„$N X
;
„$„$X Y
var
‰$‰$ 
formControlPecas
‰$‰$ $
=
‰$‰$% &
$str
‰$‰$' k
;
‰$‰$k l
var
Â$Â$ 
formGroupPecas
Â$Â$ "
=
Â$Â$# $
html
Â$Â$% )
.
Â$Â$) *
div
Â$Â$* -
(
Â$Â$- .
	outerhtml
Ê$Ê$( 1
:
Ê$Ê$1 2

labelPecas
Ê$Ê$3 =
+
Ê$Ê$> ?
formControlPecas
Ê$Ê$@ P
,
Ê$Ê$P Q
classe
Á$Á$( .
:
Á$Á$. /
$str
Á$Á$0 <
,
Á$Á$< =
style
Ë$Ë$( -
:
Ë$Ë$- .
$str
Ë$Ë$/ D
)
È$È$( )
;
È$È$) *(
painelLevel3HeaderListHtml
Î$Î$ *
+=
Î$Î$+ -
html
Î$Î$. 2
.
Î$Î$2 3
div
Î$Î$3 6
(
Î$Î$6 7
	outerhtml
Ï$Ï$0 9
:
Ï$Ï$9 :
formGroupPecas
Ï$Ï$; I
,
Ï$Ï$I J
classe
Ì$Ì$0 6
:
Ì$Ì$6 7
$str
Ì$Ì$8 ]
,
Ì$Ì$] ^
style
Ó$Ó$0 5
:
Ó$Ó$5 6
$str
Ó$Ó$7 u
)
Ô$Ô$0 1
;
Ô$Ô$1 2
painellevel3
Ú$Ú$ 
=
Ú$Ú$ 
html
Ú$Ú$ #
.
Ú$Ú$# $
listgroupItem
Ú$Ú$$ 1
(
Ú$Ú$1 2
	outerhtml
Û$Û$5 >
:
Û$Û$> ?

avaliacoes
Û$Û$@ J
+
Û$Û$K L
amostras
Ù$Ù$@ H
+
Ù$Ù$I J(
painelLevel3HeaderListHtml
ı$ı$@ Z
,
ı$ı$Z [
classe
˜$˜$( .
:
˜$˜$. /
$str
˜$˜$0 J
)
˜$˜$J K
+
˜$˜$L M
html
¯$¯$ "
.
¯$¯$" #
painelCounters
¯$¯$# 1
(
¯$¯$1 2
listCounter
¯$¯$2 =
)
¯$¯$= >
;
¯$¯$> ?
if
˝$˝$ 
(
˝$˝$ 
!
˝$˝$ 
string
˝$˝$ 
.
˝$˝$ 
IsNullOrEmpty
˝$˝$ )
(
˝$˝$) *
parLevel3Group
˝$˝$* 8
)
˝$˝$8 9
)
˝$˝$9 :
{
˛$˛$ 
parLevel3Group
ˇ$ˇ$ "
=
ˇ$ˇ$# $
html
ˇ$ˇ$% )
.
ˇ$ˇ$) *
div
ˇ$ˇ$* -
(
ˇ$ˇ$- .
classe
Ä%Ä%/ 5
:
Ä%Ä%5 6
$str
Ä%Ä%7 H
,
Ä%Ä%H I
tags
Å%Å%/ 3
:
Å%Å%3 4
$str
Å%Å%5 B
+
Å%Å%C D
	ParLevel1
Å%Å%E N
.
Å%Å%N O
Id
Å%Å%O Q
+
Å%Å%R S
$str
Å%Å%T d
+
Å%Å%e f
	ParLevel2
Å%Å%g p
.
Å%Å%p q
Id
Å%Å%q s
+
Å%Å%t u
$str
Å%Å%v z
,
Å%Å%z {
	outerhtml
É%É%/ 8
:
É%É%8 9
painellevel3
É%É%: F
+
É%É%G H
parLevel3Group
Ñ%Ñ%: H
)
Ö%Ö%- .
;
Ö%Ö%. /
}
Ü%Ü% 
return
á%á% 
parLevel3Group
á%á% %
;
á%á%% &
}
ä%ä% 
else
å%å% 
if
å%å% 
(
å%å% 
tipoTela
å%å% 
.
å%å% 
Equals
å%å% $
(
å%å%$ %
$str
å%å%% )
)
å%å%) *
)
å%å%* +
{
ç%ç% 
var
ê%ê% )
CaracteristicaTipificacaoDB
ê%ê% /
=
ê%ê%0 1
new
ê%ê%2 5
SGQDBContext
ê%ê%6 B
.
ê%ê%B C'
CaracteristicaTipificacao
ê%ê%C \
(
ê%ê%\ ]
SGQ_GlobalADO
ê%ê%] j
)
ê%ê%j k
;
ê%ê%k l
var
í%í% 6
(VerificacaoTipificacaoTarefaIntegracaoDB
í%í% <
=
í%í%= >
new
í%í%? B
SGQDBContext
í%í%C O
.
í%í%O P4
&VerificacaoTipificacaoTarefaIntegracao
í%í%P v
(
í%í%v w
SGQ_GlobalADOí%í%w Ñ
)í%í%Ñ Ö
;í%í%Ö Ü
string
ï%ï% 
parLevel3Group
ï%ï% %
=
ï%ï%& '
null
ï%ï%( ,
;
ï%ï%, -
foreach
ó%ó% 
(
ó%ó% 
var
ó%ó% 
	parLevel3
ó%ó% &
in
ó%ó%' )
parlevel3List
ó%ó%* 7
)
ó%ó%7 8
{
ò%ò% 
if
ô%ô% 
(
ô%ô% 
Last_Id
ô%ô% 
!=
ô%ô%  "
	parLevel3
ô%ô%# ,
.
ô%ô%, -
Id
ô%ô%- /
)
ô%ô%/ 0
{
ö%ö% 
string
õ%õ% 
tags
õ%õ% #
=
õ%õ%$ %
null
õ%õ%& *
;
õ%õ%* +
string
ú%ú% 
labels
ú%ú% %
=
ú%ú%& '
null
ú%ú%( ,
;
ú%ú%, -
string
ü%ü% 
level3
ü%ü% %
=
ü%ü%& '
html
ü%ü%( ,
.
ü%ü%, -
link
ü%ü%- 1
(
ü%ü%1 2
	outerhtml
†%†%4 =
:
†%†%= >
html
†%†%? C
.
†%†%C D
span
†%†%D H
(
†%†%H I
	outerhtml
†%†%I R
:
†%†%R S
	parLevel3
†%†%T ]
.
†%†%] ^
Name
†%†%^ b
,
†%†%b c
classe
†%†%d j
:
†%†%j k
$str
†%†%l w
)
†%†%w x
,
†%†%x y
classe
°%°%4 :
:
°%°%: ;
$str
°%°%< [
)
¢%¢%4 5
;
¢%¢%5 6
switch
¶%¶% 
(
¶%¶%  
	parLevel3
¶%¶%  )
.
¶%¶%) *
Name
¶%¶%* .
)
¶%¶%. /
{
ß%ß% 
case
®%®%  
$str
®%®%! N
:
®%®%N O
var
©%©%  #
listOper
©%©%$ ,
=
©%©%- .)
CaracteristicaTipificacaoDB
©%©%/ J
.
©%©%J K+
getCaracteristicasTipificacao
©%©%K h
(
©%©%h i
$num
©%©%i l
)
©%©%l m
;
©%©%m n
var
™%™%  #
listOperHtml
™%™%$ 0
=
™%™%1 2
$str
™%™%3 5
;
™%™%5 6
foreach
´%´%  '
(
´%´%( )
var
´%´%) ,
carac
´%´%- 2
in
´%´%3 5
listOper
´%´%6 >
)
´%´%> ?
{
¨%¨%  !
listOperHtml
≠%≠%$ 0
+=
≠%≠%1 3
$str
≠%≠%4 d
+
≠%≠%e f
carac
Æ%Æ%5 :
.
Æ%Æ%: ;
cNmCaracteristica
Æ%Æ%; L
+
Æ%Æ%M N
$str
Æ%Æ%O c
+
Æ%Æ%d e
carac
Æ%Æ%f k
.
Æ%Æ%k l
cIdentificador
Æ%Æ%l z
+
Æ%Æ%{ |
$strÆ%Æ%} Å
+Æ%Æ%Ç É
$str
Ø%Ø%5 K
+
Ø%Ø%L M
carac
Ø%Ø%N S
.
Ø%Ø%S T
cNrCaracteristica
Ø%Ø%T e
+
Ø%Ø%f g
$str
Ø%Ø%h 
+Ø%Ø%Ä Å
caracØ%Ø%Ç á
.Ø%Ø%á à!
cSgCaracteristicaØ%Ø%à ô
+Ø%Ø%ö õ
$strØ%Ø%ú †
+Ø%Ø%° ¢
carac
∞%∞%5 :
.
∞%∞%: ;
cSgCaracteristica
∞%∞%; L
+
∞%∞%M N
$str
∞%∞%O W
;
∞%∞%W X
;
∞%∞%Y Z
}
±%±%  !
var
≤%≤%  #
CtIdOpe
≤%≤%$ +
=
≤%≤%, -)
CaracteristicaTipificacaoDB
≤%≤%. I
.
≤%≤%I J0
"getCaracteristicasTipificacaoUnico
≤%≤%J l
(
≤%≤%l m
$num
≤%≤%m p
)
≤%≤%p q
.
≤%≤%q r
First
≤%≤%r w
(
≤%≤%w x
)
≤%≤%x y
.
≤%≤%y z 
nCdCaracteristica≤%≤%z ã
;≤%≤%ã å
var
≥%≥%  #
TIdOpe
≥%≥%$ *
=
≥%≥%+ ,6
(VerificacaoTipificacaoTarefaIntegracaoDB
≥%≥%- U
.
≥%≥%U V
	getTarefa
≥%≥%V _
(
≥%≥%_ `
Convert
≥%≥%` g
.
≥%≥%g h
ToInt32
≥%≥%h o
(
≥%≥%o p
CtIdOpe
≥%≥%p w
)
≥%≥%w x
)
≥%≥%x y
.
≥%≥%y z
First
≥%≥%z 
(≥%≥% Ä
)≥%≥%Ä Å
.≥%≥%Å Ç
TarefaId≥%≥%Ç ä
;≥%≥%ä ã
labels
¥%¥%  &
+=
¥%¥%' )
html
¥%¥%* .
.
¥%¥%. /
div
¥%¥%/ 2
(
¥%¥%2 3
	outerhtml
¥%¥%3 <
:
¥%¥%< =
listOperHtml
¥%¥%> J
,
¥%¥%J K
classe
¥%¥%L R
:
¥%¥%R S
$str
¥%¥%T _
,
¥%¥%_ `
name
¥%¥%a e
:
¥%¥%e f
$str
¥%¥%g r
,
¥%¥%r s
tags
¥%¥%t x
:
¥%¥%x y
$str¥%¥%z ¨
+¥%¥%≠ Æ
CtIdOpe¥%¥%Ø ∂
+¥%¥%∑ ∏
$str¥%¥%π ≈
+¥%¥%∆ «
TIdOpe¥%¥%» Œ
)¥%¥%Œ œ
;¥%¥%œ –
break
µ%µ%  %
;
µ%µ%% &
case
∂%∂%  
$str
∂%∂%! D
:
∂%∂%D E
var
∑%∑%  #
listGordura
∑%∑%$ /
=
∑%∑%0 1)
CaracteristicaTipificacaoDB
∑%∑%2 M
.
∑%∑%M N+
getCaracteristicasTipificacao
∑%∑%N k
(
∑%∑%k l
$num
∑%∑%l o
)
∑%∑%o p
;
∑%∑%p q
var
∏%∏%  #
listGorduraHtml
∏%∏%$ 3
=
∏%∏%4 5
$str
∏%∏%6 8
;
∏%∏%8 9
foreach
π%π%  '
(
π%π%( )
var
π%π%) ,
carac
π%π%- 2
in
π%π%3 5
listGordura
π%π%6 A
)
π%π%A B
{
∫%∫%  !
listGorduraHtml
ª%ª%$ 3
+=
ª%ª%4 6
$str
ª%ª%7 g
+
ª%ª%h i
carac
º%º%8 =
.
º%º%= >
cNmCaracteristica
º%º%> O
+
º%º%P Q
$str
º%º%R f
+
º%º%g h
carac
º%º%i n
.
º%º%n o
cIdentificador
º%º%o }
+
º%º%~ 
$strº%º%Ä Ñ
+º%º%Ö Ü
$str
Ω%Ω%8 N
+
Ω%Ω%O P
carac
Ω%Ω%Q V
.
Ω%Ω%V W
cNrCaracteristica
Ω%Ω%W h
+
Ω%Ω%i j
$strΩ%Ω%k Ç
+Ω%Ω%É Ñ
caracΩ%Ω%Ö ä
.Ω%Ω%ä ã!
cSgCaracteristicaΩ%Ω%ã ú
+Ω%Ω%ù û
$strΩ%Ω%ü £
+Ω%Ω%§ •
carac
æ%æ%8 =
.
æ%æ%= >
cSgCaracteristica
æ%æ%> O
+
æ%æ%P Q
$str
æ%æ%R Z
;
æ%æ%Z [
;
æ%æ%\ ]
}
ø%ø%  !
var
¿%¿%  #
CtIdGor
¿%¿%$ +
=
¿%¿%, -)
CaracteristicaTipificacaoDB
¿%¿%. I
.
¿%¿%I J0
"getCaracteristicasTipificacaoUnico
¿%¿%J l
(
¿%¿%l m
$num
¿%¿%m p
)
¿%¿%p q
.
¿%¿%q r
First
¿%¿%r w
(
¿%¿%w x
)
¿%¿%x y
.
¿%¿%y z 
nCdCaracteristica¿%¿%z ã
;¿%¿%ã å
var
¡%¡%  #
TIdGor
¡%¡%$ *
=
¡%¡%+ ,6
(VerificacaoTipificacaoTarefaIntegracaoDB
¡%¡%- U
.
¡%¡%U V
	getTarefa
¡%¡%V _
(
¡%¡%_ `
Convert
¡%¡%` g
.
¡%¡%g h
ToInt32
¡%¡%h o
(
¡%¡%o p
CtIdGor
¡%¡%p w
)
¡%¡%w x
)
¡%¡%x y
.
¡%¡%y z
First
¡%¡%z 
(¡%¡% Ä
)¡%¡%Ä Å
.¡%¡%Å Ç
TarefaId¡%¡%Ç ä
;¡%¡%ä ã
labels
¬%¬%  &
+=
¬%¬%' )
html
¬%¬%* .
.
¬%¬%. /
div
¬%¬%/ 2
(
¬%¬%2 3
	outerhtml
¬%¬%3 <
:
¬%¬%< =
listGorduraHtml
¬%¬%> M
,
¬%¬%M N
classe
¬%¬%O U
:
¬%¬%U V
$str
¬%¬%W b
,
¬%¬%b c
name
¬%¬%d h
:
¬%¬%h i
$str
¬%¬%j s
,
¬%¬%s t
tags
¬%¬%u y
:
¬%¬%y z
$str¬%¬%{ ´
+¬%¬%¨ ≠
CtIdGor¬%¬%Æ µ
+¬%¬%∂ ∑
$str¬%¬%∏ ƒ
+¬%¬%≈ ∆
TIdGor¬%¬%« Õ
)¬%¬%Õ Œ
;¬%¬%Œ œ
break
√%√%  %
;
√%√%% &
case
ƒ%ƒ%  
$str
ƒ%ƒ%! E
:
ƒ%ƒ%E F
var
≈%≈%  #
listContusao
≈%≈%$ 0
=
≈%≈%1 2)
CaracteristicaTipificacaoDB
≈%≈%3 N
.
≈%≈%N O+
getCaracteristicasTipificacao
≈%≈%O l
(
≈%≈%l m
$num
≈%≈%m p
)
≈%≈%p q
;
≈%≈%q r
var
∆%∆%  #
listContusaoHtml
∆%∆%$ 4
=
∆%∆%5 6
$str
∆%∆%7 9
;
∆%∆%9 :
foreach
«%«%  '
(
«%«%( )
var
«%«%) ,
carac
«%«%- 2
in
«%«%3 5
listContusao
«%«%6 B
)
«%«%B C
{
»%»%  !
listContusaoHtml
…%…%$ 4
+=
…%…%5 7
$str
…%…%8 h
+
…%…%i j
carac
 % %8 =
.
 % %= >
cNmCaracteristica
 % %> O
+
 % %P Q
$str
 % %R f
+
 % %g h
carac
 % %i n
.
 % %n o
cIdentificador
 % %o }
+
 % %~ 
$str % %Ä Ñ
+ % %Ö Ü
$str
À%À%8 N
+
À%À%O P
carac
À%À%Q V
.
À%À%V W
cNrCaracteristica
À%À%W h
+
À%À%i j
$strÀ%À%k Ç
+À%À%É Ñ
caracÀ%À%Ö ä
.À%À%ä ã!
cSgCaracteristicaÀ%À%ã ú
+À%À%ù û
$strÀ%À%ü £
+À%À%§ •
carac
Ã%Ã%8 =
.
Ã%Ã%= >
cSgCaracteristica
Ã%Ã%> O
+
Ã%Ã%P Q
$str
Ã%Ã%R Z
;
Ã%Ã%Z [
;
Ã%Ã%\ ]
}
Õ%Õ%  !
var
Œ%Œ%  #
CtIdCon
Œ%Œ%$ +
=
Œ%Œ%, -)
CaracteristicaTipificacaoDB
Œ%Œ%. I
.
Œ%Œ%I J0
"getCaracteristicasTipificacaoUnico
Œ%Œ%J l
(
Œ%Œ%l m
$num
Œ%Œ%m p
)
Œ%Œ%p q
.
Œ%Œ%q r
First
Œ%Œ%r w
(
Œ%Œ%w x
)
Œ%Œ%x y
.
Œ%Œ%y z 
nCdCaracteristicaŒ%Œ%z ã
;Œ%Œ%ã å
var
œ%œ%  #
TIdCon
œ%œ%$ *
=
œ%œ%+ ,6
(VerificacaoTipificacaoTarefaIntegracaoDB
œ%œ%- U
.
œ%œ%U V
	getTarefa
œ%œ%V _
(
œ%œ%_ `
Convert
œ%œ%` g
.
œ%œ%g h
ToInt32
œ%œ%h o
(
œ%œ%o p
CtIdCon
œ%œ%p w
)
œ%œ%w x
)
œ%œ%x y
.
œ%œ%y z
First
œ%œ%z 
(œ%œ% Ä
)œ%œ%Ä Å
.œ%œ%Å Ç
TarefaIdœ%œ%Ç ä
;œ%œ%ä ã
labels
–%–%  &
+=
–%–%' )
html
–%–%* .
.
–%–%. /
div
–%–%/ 2
(
–%–%2 3
	outerhtml
–%–%3 <
:
–%–%< =
listContusaoHtml
–%–%> N
,
–%–%N O
classe
–%–%P V
:
–%–%V W
$str
–%–%X c
,
–%–%c d
name
–%–%e i
:
–%–%i j
$str
–%–%k u
,
–%–%u v
tags
–%–%w {
:
–%–%{ |
$str–%–%} Ø
+–%–%∞ ±
CtIdCon–%–%≤ π
+–%–%∫ ª
$str–%–%º »
+–%–%…  
TIdCon–%–%À —
)–%–%— “
;–%–%“ ”
break
—%—%  %
;
—%—%% &
case
“%“%  
$str
“%“%! B
:
“%“%B C
var
”%”%  #
	listIdade
”%”%$ -
=
”%”%. /)
CaracteristicaTipificacaoDB
”%”%0 K
.
”%”%K L+
getCaracteristicasTipificacao
”%”%L i
(
”%”%i j
$num
”%”%j m
)
”%”%m n
;
”%”%n o
var
‘%‘%  #
listIdadeHtml
‘%‘%$ 1
=
‘%‘%2 3
$str
‘%‘%4 6
;
‘%‘%6 7
foreach
’%’%  '
(
’%’%( )
var
’%’%) ,
carac
’%’%- 2
in
’%’%3 5
	listIdade
’%’%6 ?
)
’%’%? @
{
÷%÷%  !
listIdadeHtml
◊%◊%$ 1
+=
◊%◊%2 4
$str
◊%◊%5 e
+
◊%◊%f g
carac
ÿ%ÿ%8 =
.
ÿ%ÿ%= >
cNmCaracteristica
ÿ%ÿ%> O
+
ÿ%ÿ%P Q
$str
ÿ%ÿ%R f
+
ÿ%ÿ%g h
carac
ÿ%ÿ%i n
.
ÿ%ÿ%n o
cIdentificador
ÿ%ÿ%o }
+
ÿ%ÿ%~ 
$strÿ%ÿ%Ä Ñ
+ÿ%ÿ%Ö Ü
$str
Ÿ%Ÿ%8 N
+
Ÿ%Ÿ%O P
carac
Ÿ%Ÿ%Q V
.
Ÿ%Ÿ%V W
cNrCaracteristica
Ÿ%Ÿ%W h
+
Ÿ%Ÿ%i j
$strŸ%Ÿ%k Ç
+Ÿ%Ÿ%É Ñ
caracŸ%Ÿ%Ö ä
.Ÿ%Ÿ%ä ã!
cSgCaracteristicaŸ%Ÿ%ã ú
+Ÿ%Ÿ%ù û
$strŸ%Ÿ%ü £
+Ÿ%Ÿ%§ •
carac
⁄%⁄%8 =
.
⁄%⁄%= >
cSgCaracteristica
⁄%⁄%> O
+
⁄%⁄%P Q
$str
⁄%⁄%R Z
;
⁄%⁄%Z [
;
⁄%⁄%\ ]
}
€%€%  !
var
‹%‹%  #
	CtIdIdade
‹%‹%$ -
=
‹%‹%. /)
CaracteristicaTipificacaoDB
‹%‹%0 K
.
‹%‹%K L0
"getCaracteristicasTipificacaoUnico
‹%‹%L n
(
‹%‹%n o
$num
‹%‹%o r
)
‹%‹%r s
.
‹%‹%s t
First
‹%‹%t y
(
‹%‹%y z
)
‹%‹%z {
.
‹%‹%{ | 
nCdCaracteristica‹%‹%| ç
;‹%‹%ç é
var
›%›%  #
TIdIdade
›%›%$ ,
=
›%›%- .6
(VerificacaoTipificacaoTarefaIntegracaoDB
›%›%/ W
.
›%›%W X
	getTarefa
›%›%X a
(
›%›%a b
Convert
›%›%b i
.
›%›%i j
ToInt32
›%›%j q
(
›%›%q r
	CtIdIdade
›%›%r {
)
›%›%{ |
)
›%›%| }
.
›%›%} ~
First›%›%~ É
(›%›%É Ñ
)›%›%Ñ Ö
.›%›%Ö Ü
TarefaId›%›%Ü é
;›%›%é è
labels
ﬁ%ﬁ%  &
+=
ﬁ%ﬁ%' )
html
ﬁ%ﬁ%* .
.
ﬁ%ﬁ%. /
div
ﬁ%ﬁ%/ 2
(
ﬁ%ﬁ%2 3
	outerhtml
ﬁ%ﬁ%3 <
:
ﬁ%ﬁ%< =
listIdadeHtml
ﬁ%ﬁ%> K
,
ﬁ%ﬁ%K L
classe
ﬁ%ﬁ%M S
:
ﬁ%ﬁ%S T
$str
ﬁ%ﬁ%U `
,
ﬁ%ﬁ%` a
name
ﬁ%ﬁ%b f
:
ﬁ%ﬁ%f g
$str
ﬁ%ﬁ%h t
,
ﬁ%ﬁ%t u
tags
ﬁ%ﬁ%v z
:
ﬁ%ﬁ%z {
$strﬁ%ﬁ%| ¨
+ﬁ%ﬁ%≠ Æ
	CtIdIdadeﬁ%ﬁ%Ø ∏
+ﬁ%ﬁ%π ∫
$strﬁ%ﬁ%ª «
+ﬁ%ﬁ%» …
TIdIdadeﬁ%ﬁ%  “
)ﬁ%ﬁ%“ ”
;ﬁ%ﬁ%” ‘
break
ﬂ%ﬂ%  %
;
ﬂ%ﬂ%% &
case
‡%‡%  
$str
‡%‡%! A
:
‡%‡%A B
var
·%·%  #
listSexo
·%·%$ ,
=
·%·%- .)
CaracteristicaTipificacaoDB
·%·%/ J
.
·%·%J K+
getCaracteristicasTipificacao
·%·%K h
(
·%·%h i
$num
·%·%i l
)
·%·%l m
;
·%·%m n
var
‚%‚%  #
listSexoHtml
‚%‚%$ 0
=
‚%‚%1 2
$str
‚%‚%3 5
;
‚%‚%5 6
foreach
„%„%  '
(
„%„%( )
var
„%„%) ,
carac
„%„%- 2
in
„%„%3 5
listSexo
„%„%6 >
)
„%„%> ?
{
‰%‰%  !
listSexoHtml
Â%Â%$ 0
+=
Â%Â%1 3
$str
Â%Â%4 d
+
Â%Â%e f
carac
Ê%Ê%4 9
.
Ê%Ê%9 :
cNmCaracteristica
Ê%Ê%: K
+
Ê%Ê%L M
$str
Ê%Ê%N b
+
Ê%Ê%c d
carac
Ê%Ê%e j
.
Ê%Ê%j k
cIdentificador
Ê%Ê%k y
+
Ê%Ê%z {
$strÊ%Ê%| Ä
+Ê%Ê%Å Ç
$str
Á%Á%4 J
+
Á%Á%K L
carac
Á%Á%M R
.
Á%Á%R S
cNrCaracteristica
Á%Á%S d
+
Á%Á%e f
$str
Á%Á%g ~
+Á%Á% Ä
caracÁ%Á%Å Ü
.Á%Á%Ü á!
cSgCaracteristicaÁ%Á%á ò
+Á%Á%ô ö
$strÁ%Á%õ ü
+Á%Á%† °
carac
Ë%Ë%4 9
.
Ë%Ë%9 :
cSgCaracteristica
Ë%Ë%: K
+
Ë%Ë%L M
$str
Ë%Ë%N V
;
Ë%Ë%V W
;
Ë%Ë%X Y
}
È%È%  !
var
Í%Í%  #
CtIdSexo
Í%Í%$ ,
=
Í%Í%- .)
CaracteristicaTipificacaoDB
Í%Í%/ J
.
Í%Í%J K0
"getCaracteristicasTipificacaoUnico
Í%Í%K m
(
Í%Í%m n
$num
Í%Í%n q
)
Í%Í%q r
.
Í%Í%r s
First
Í%Í%s x
(
Í%Í%x y
)
Í%Í%y z
.
Í%Í%z { 
nCdCaracteristicaÍ%Í%{ å
;Í%Í%å ç
var
Î%Î%  #
TIdSexo
Î%Î%$ +
=
Î%Î%, -6
(VerificacaoTipificacaoTarefaIntegracaoDB
Î%Î%. V
.
Î%Î%V W
	getTarefa
Î%Î%W `
(
Î%Î%` a
Convert
Î%Î%a h
.
Î%Î%h i
ToInt32
Î%Î%i p
(
Î%Î%p q
CtIdSexo
Î%Î%q y
)
Î%Î%y z
)
Î%Î%z {
.
Î%Î%{ |
FirstÎ%Î%| Å
(Î%Î%Å Ç
)Î%Î%Ç É
.Î%Î%É Ñ
TarefaIdÎ%Î%Ñ å
;Î%Î%å ç
labels
Ï%Ï%  &
+=
Ï%Ï%' )
html
Ï%Ï%* .
.
Ï%Ï%. /
div
Ï%Ï%/ 2
(
Ï%Ï%2 3
	outerhtml
Ï%Ï%3 <
:
Ï%Ï%< =
listSexoHtml
Ï%Ï%> J
,
Ï%Ï%J K
classe
Ï%Ï%L R
:
Ï%Ï%R S
$str
Ï%Ï%T _
,
Ï%Ï%_ `
name
Ï%Ï%a e
:
Ï%Ï%e f
$str
Ï%Ï%g m
,
Ï%Ï%m n
tags
Ï%Ï%o s
:
Ï%Ï%s t
$strÏ%Ï%u •
+Ï%Ï%¶ ß
CtIdSexoÏ%Ï%® ∞
+Ï%Ï%± ≤
$strÏ%Ï%≥ ø
+Ï%Ï%¿ ¡
TIdSexoÏ%Ï%¬ …
)Ï%Ï%…  
;Ï%Ï%  À
break
Ì%Ì%  %
;
Ì%Ì%% &
}
Ó%Ó% 
labels
Û%Û% 
=
Û%Û%  
html
Û%Û%! %
.
Û%Û%% &
div
Û%Û%& )
(
Û%Û%) *
	outerhtml
Ù%Ù%0 9
:
Ù%Ù%9 :
labels
Ù%Ù%; A
,
Ù%Ù%A B
classe
ı%ı%0 6
:
ı%ı%6 7
$str
ı%ı%8 W
)
ˆ%ˆ%, -
;
ˆ%ˆ%- .
tags
˙%˙% 
+=
˙%˙% 
$str
˙%˙%  ,
+
˙%˙%- .
	parLevel3
˙%˙%/ 8
.
˙%˙%8 9
Weight
˙%˙%9 ?
+
˙%˙%@ A
$str
˙%˙%B U
+
˙%˙%V W
	parLevel3
˙%˙%X a
.
˙%˙%a b
IntervalMin
˙%˙%b m
+
˙%˙%n o
$str˙%˙%p É
+˙%˙%Ñ Ö
	parLevel3˙%˙%Ü è
.˙%˙%è ê
IntervalMax˙%˙%ê õ
+˙%˙%ú ù
$str˙%˙%û ∆
;˙%˙%∆ «
string
¸%¸% 

level3List
¸%¸% )
=
¸%¸%* +
html
¸%¸%, 0
.
¸%¸%0 1
listgroupItem
¸%¸%1 >
(
¸%¸%> ?
id
˝%˝%@ B
:
˝%˝%B C
	parLevel3
˝%˝%D M
.
˝%˝%M N
Id
˝%˝%N P
.
˝%˝%P Q
ToString
˝%˝%Q Y
(
˝%˝%Y Z
)
˝%˝%Z [
,
˝%˝%[ \
classe
˛%˛%@ F
:
˛%˛%F G
$str
˛%˛%H W
,
˛%˛%W X
tags
ˇ%ˇ%@ D
:
ˇ%ˇ%D E
tags
ˇ%ˇ%F J
,
ˇ%ˇ%J K
	outerhtml
Ä&Ä&@ I
:
Ä&Ä&I J
level3
Ä&Ä&K Q
+
Ä&Ä&R S
labels
Å&Å&L R
)
Ç&Ç&< =
;
Ç&Ç&= >
parLevel3Group
Ñ&Ñ& &
+=
Ñ&Ñ&' )

level3List
Ñ&Ñ&* 4
;
Ñ&Ñ&4 5
Last_Id
Ö&Ö& 
=
Ö&Ö&  !
	parLevel3
Ö&Ö&" +
.
Ö&Ö&+ ,
Id
Ö&Ö&, .
;
Ö&Ö&. /
}
á&á& 
}
à&à& 
var
ä&ä& $
listAreasParticipantes
ä&ä& *
=
ä&ä&+ ,)
CaracteristicaTipificacaoDB
ä&ä&- H
.
ä&ä&H I#
getAreasParticipantes
ä&ä&I ^
(
ä&ä&^ _
)
ä&ä&_ `
;
ä&ä&` a
var
ã&ã& 
items
ã&ã& 
=
ã&ã& 
$str
ã&ã& 
;
ã&ã& 
foreach
ç&ç& 
(
ç&ç& 
var
ç&ç& 
area
ç&ç& !
in
ç&ç&" $$
listAreasParticipantes
ç&ç&% ;
)
ç&ç&; <
{
é&é& 
items
è&è& 
+=
è&è& 
$str
è&è& M
+
è&è&N O
area
è&è&P T
.
è&è&T U
cNmCaracteristica
è&è&U f
+
è&è&g h
$str
è&è&i }
+
è&è&~ 
areaè&è&Ä Ñ
.è&è&Ñ Ö
cIdentificadorè&è&Ö ì
+è&è&î ï
$strè&è&ñ ö
+è&è&õ ú
$str
ê&ê& 2
+
ê&ê&3 4
area
ê&ê&5 9
.
ê&ê&9 :
cNrCaracteristica
ê&ê&: K
+
ê&ê&L M
$str
ê&ê&N e
+
ê&ê&f g
area
ê&ê&h l
.
ê&ê&l m
cSgCaracteristica
ê&ê&m ~
+ê&ê& Ä
$strê&ê&Å Ö
+ê&ê&Ü á
area
ë&ë&  
.
ë&ë&  !
cNmCaracteristica
ë&ë&! 2
+
ë&ë&3 4
$str
ë&ë&5 =
;
ë&ë&= >
}
í&í& 
var
î&î& 
CtIdAP
î&î& 
=
î&î& 
$str
î&î& 
;
î&î&  
if
ï&ï& 
(
ï&ï& )
CaracteristicaTipificacaoDB
ï&ï& /
.
ï&ï&/ 0(
getAreasParticipantesUnico
ï&ï&0 J
(
ï&ï&J K
)
ï&ï&K L
.
ï&ï&L M
First
ï&ï&M R
(
ï&ï&R S
)
ï&ï&S T
.
ï&ï&T U
nCdCaracteristica
ï&ï&U f
!=
ï&ï&g i
null
ï&ï&j n
)
ï&ï&n o
CtIdAP
ñ&ñ& 
=
ñ&ñ& )
CaracteristicaTipificacaoDB
ñ&ñ& 8
.
ñ&ñ&8 9(
getAreasParticipantesUnico
ñ&ñ&9 S
(
ñ&ñ&S T
)
ñ&ñ&T U
.
ñ&ñ&U V
First
ñ&ñ&V [
(
ñ&ñ&[ \
)
ñ&ñ&\ ]
.
ñ&ñ&] ^
nCdCaracteristica
ñ&ñ&^ o
;
ñ&ñ&o p
var
ó&ó& 
TIdAP
ó&ó& 
=
ó&ó& 6
(VerificacaoTipificacaoTarefaIntegracaoDB
ó&ó& D
.
ó&ó&D E
	getTarefa
ó&ó&E N
(
ó&ó&N O
Convert
ó&ó&O V
.
ó&ó&V W
ToInt32
ó&ó&W ^
(
ó&ó&^ _
CtIdAP
ó&ó&_ e
)
ó&ó&e f
)
ó&ó&f g
.
ó&ó&g h
First
ó&ó&h m
(
ó&ó&m n
)
ó&ó&n o
.
ó&ó&o p
TarefaId
ó&ó&p x
;
ó&ó&x y
var
ò&ò&  
areasParticipantes
ò&ò& &
=
ò&ò&' (
html
ò&ò&) -
.
ò&ò&- .
listgroupItem
ò&ò&. ;
(
ò&ò&; <
id
ô&ô&0 2
:
ô&ô&2 3
$str
ô&ô&4 9
,
ô&ô&9 :
classe
ö&ö&0 6
:
ö&ö&6 7
$str
ö&ö&8 G
,
ö&ö&G H
tags
õ&õ&0 4
:
õ&õ&4 5
$str
õ&õ&6 I
,
õ&õ&I J
	outerhtml
ú&ú&0 9
:
ú&ú&9 :
html
ú&ú&; ?
.
ú&ú&? @
link
ú&ú&@ D
(
ú&ú&D E
	outerhtml
ù&ù&@ I
:
ù&ù&I J
html
ù&ù&K O
.
ù&ù&O P
span
ù&ù&P T
(
ù&ù&T U
	outerhtml
ù&ù&U ^
:
ù&ù&^ _
$str
ù&ù&` u
,
ù&ù&u v
classe
ù&ù&w }
:
ù&ù&} ~
$strù&ù& ä
)ù&ù&ä ã
,ù&ù&ã å
classe
û&û&@ F
:
û&û&F G
$str
û&û&H g
)
ü&ü&@ A
+
ü&ü&B C
html
†&†&; ?
.
†&†&? @
div
†&†&@ C
(
†&†&C D
	outerhtml
°&°&@ I
:
°&°&I J
html
°&°&K O
.
°&°&O P
div
°&°&P S
(
°&°&S T
	outerhtml
°&°&T ]
:
°&°&] ^
items
°&°&_ d
,
°&°&d e
classe
°&°&f l
:
°&°&l m
$str
°&°&n y
,
°&°&y z
name
°&°&{ 
:°&°& Ä
$str°&°&Å ñ
,°&°&ñ ó
tags°&°&ò ú
:°&°&ú ù
$str°&°&û –
+°&°&— “
CtIdAP°&°&” Ÿ
+°&°&⁄ €
$str°&°&‹ Ë
+°&°&È Í
TIdAP°&°&Î 
)°&°& Ò
,°&°&Ò Ú
classe
¢&¢&@ F
:
¢&¢&F G
$str
¢&¢&H g
)
£&£&@ A
)
§&§&, -
;
§&§&- .
parLevel3Group
¶&¶& 
=
¶&¶&   
areasParticipantes
¶&¶&! 3
+
¶&¶&4 5
parLevel3Group
¶&¶&6 D
;
¶&¶&D E
var
®&®& (
painelLevel3HeaderListHtml
®&®& .
=
®&®&/ 0
$str
®&®&1 3
;
®&®&3 4
var
™&™& 
labelSequencial
™&™& #
=
™&™&$ %
$str
™&™&& T
;
™&™&T U
var
´&´& #
formControlSequencial
´&´& )
=
´&´&* +
$str´&´&, •
;´&´&• ¶
var
¨&¨& !
formGroupSequencial
¨&¨& '
=
¨&¨&( )
html
¨&¨&* .
.
¨&¨&. /
div
¨&¨&/ 2
(
¨&¨&2 3
	outerhtml
≠&≠&( 1
:
≠&≠&1 2
labelSequencial
≠&≠&3 B
+
≠&≠&C D#
formControlSequencial
≠&≠&E Z
,
≠&≠&Z [
classe
Æ&Æ&( .
:
Æ&Æ&. /
$str
Æ&Æ&0 <
,
Æ&Æ&< =
style
Ø&Ø&( -
:
Ø&Ø&- .
$str
Ø&Ø&/ D
)
∞&∞&( )
;
∞&∞&) *
var
≤&≤& 

labelBanda
≤&≤& 
=
≤&≤&  
$str
≤&≤&! J
;
≤&≤&J K
var
∫&∫& 
formControlBanda
∫&∫& $
=
∫&∫&% &
$str∫&∫&' œ
;∫&∫&œ –
var
º&º& 
formGroupBanda
º&º& "
=
º&º&# $
html
º&º&% )
.
º&º&) *
div
º&º&* -
(
º&º&- .
	outerhtml
Ω&Ω&( 1
:
Ω&Ω&1 2

labelBanda
Ω&Ω&3 =
+
Ω&Ω&> ?
formControlBanda
Ω&Ω&@ P
,
Ω&Ω&P Q
classe
æ&æ&( .
:
æ&æ&. /
$str
æ&æ&0 <
,
æ&æ&< =
style
ø&ø&( -
:
ø&ø&- .
$str
ø&ø&/ D
)
¿&¿&( )
;
¿&¿&) *(
painelLevel3HeaderListHtml
¬&¬& *
+=
¬&¬&+ -
html
¬&¬&. 2
.
¬&¬&2 3
div
¬&¬&3 6
(
¬&¬&6 7
	outerhtml
√&√&0 9
:
√&√&9 :!
formGroupSequencial
√&√&; N
,
√&√&N O
classe
ƒ&ƒ&0 6
:
ƒ&ƒ&6 7
$str
ƒ&ƒ&8 ]
,
ƒ&ƒ&] ^
style
≈&≈&0 5
:
≈&≈&5 6
$str
≈&≈&7 u
)
∆&∆&0 1
;
∆&∆&1 2(
painelLevel3HeaderListHtml
»&»& *
+=
»&»&+ -
html
»&»&. 2
.
»&»&2 3
div
»&»&3 6
(
»&»&6 7
	outerhtml
…&…&0 9
:
…&…&9 :
formGroupBanda
…&…&; I
,
…&…&I J
classe
 & &0 6
:
 & &6 7
$str
 & &8 ]
,
 & &] ^
style
À&À&0 5
:
À&À&5 6
$str
À&À&7 u
)
Ã&Ã&0 1
;
Ã&Ã&1 2
string
œ&œ& 
avaliacoeshtml
œ&œ& %
=
œ&œ&& '
html
œ&œ&( ,
.
œ&œ&, -
div
œ&œ&- 0
(
œ&œ&0 1
	outerhtml
–&–&$ -
:
–&–&- .
$str
–&–&/ g
+
–&–&h i

CommonData
–&–&j t
.
–&–&t u
getResource–&–&u Ä
(–&–&Ä Å
$str–&–&Å ç
)–&–&ç é
.–&–&é è
Value–&–&è î
.–&–&î ï
ToString–&–&ï ù
(–&–&ù û
)–&–&û ü
+–&–&† °
$str–&–&¢ Â
+–&–&Ê Á
html–&–&Ë Ï
.–&–&Ï Ì
span–&–&Ì Ò
(–&–&Ò Ú
classe–&–&Ú ¯
:–&–&¯ ˘
$str–&–&˙ ã
)–&–&ã å
+–&–&ç é
html–&–&è ì
.–&–&ì î
span–&–&î ò
(–&–&ò ô
	outerhtml–&–&ô ¢
:–&–&¢ £
$str–&–&§ ©
,–&–&© ™
classe–&–&´ ±
:–&–&± ≤
$str–&–&≥ æ
)–&–&æ ø
+–&–&¿ ¡
html–&–&¬ ∆
.–&–&∆ «
span–&–&« À
(–&–&À Ã
classe–&–&Ã “
:–&–&“ ”
$str–&–&‘ „
)–&–&„ ‰
+–&–&Â Ê
$str–&–&Á Ò
,–&–&Ò Ú
style
—&—&$ )
:
—&—&) *
$str
—&—&+ @
,
—&—&@ A
classe
“&“&$ *
:
“&“&* +
$str
“&“&, 8
)
“&“&8 9
;
“&“&9 :
string
”&”& 
amostrashtml
”&”& #
=
”&”&$ %
html
”&”&& *
.
”&”&* +
div
”&”&+ .
(
”&”&. /
	outerhtml
‘&‘&$ -
:
‘&‘&- .
$str
‘&‘&/ g
+
‘&‘&h i

CommonData
‘&‘&j t
.
‘&‘&t u
getResource‘&‘&u Ä
(‘&‘&Ä Å
$str‘&‘&Å ä
)‘&‘&ä ã
.‘&‘&ã å
Value‘&‘&å ë
.‘&‘&ë í
ToString‘&‘&í ö
(‘&‘&ö õ
)‘&‘&õ ú
+‘&‘&ù û
$str‘&‘&ü ‚
+‘&‘&„ ‰
html‘&‘&Â È
.‘&‘&È Í
span‘&‘&Í Ó
(‘&‘&Ó Ô
classe‘&‘&Ô ı
:‘&‘&ı ˆ
$str‘&‘&˜ Ü
)‘&‘&Ü á
+‘&‘&à â
html‘&‘&ä é
.‘&‘&é è
span‘&‘&è ì
(‘&‘&ì î
	outerhtml‘&‘&î ù
:‘&‘&ù û
$str‘&‘&ü §
,‘&‘&§ •
classe‘&‘&¶ ¨
:‘&‘&¨ ≠
$str‘&‘&Æ π
)‘&‘&π ∫
+‘&‘&ª º
html‘&‘&Ω ¡
.‘&‘&¡ ¬
span‘&‘&¬ ∆
(‘&‘&∆ «
classe‘&‘&« Õ
:‘&‘&Õ Œ
$str‘&‘&œ ‹
)‘&‘&‹ ›
+‘&‘&ﬁ ﬂ
$str‘&‘&‡ Í
,‘&‘&Í Î
style
’&’&$ )
:
’&’&) *
$str
’&’&+ @
,
’&’&@ A
classe
÷&÷&$ *
:
÷&÷&* +
$str
÷&÷&, 8
)
÷&÷&8 9
;
÷&÷&9 :
string
ÿ&ÿ& 

avaliacoes
ÿ&ÿ& !
=
ÿ&ÿ&" #
html
ÿ&ÿ&$ (
.
ÿ&ÿ&( )
div
ÿ&ÿ&) ,
(
ÿ&ÿ&, -
	outerhtml
Ÿ&Ÿ&$ -
:
Ÿ&Ÿ&- .
avaliacoeshtml
Ÿ&Ÿ&/ =
,
Ÿ&Ÿ&= >
style
⁄&⁄&$ )
:
⁄&⁄&) *
$str
⁄&⁄&+ i
,
⁄&⁄&i j
classe
€&€&$ *
:
€&€&* +
$str
€&€&, Q
)
€&€&Q R
;
€&€&R S
string
‹&‹& 
amostras
‹&‹& 
=
‹&‹&  !
html
‹&‹&" &
.
‹&‹&& '
div
‹&‹&' *
(
‹&‹&* +
	outerhtml
›&›&$ -
:
›&›&- .
amostrashtml
›&›&/ ;
,
›&›&; <
style
ﬁ&ﬁ&$ )
:
ﬁ&ﬁ&) *
$str
ﬁ&ﬁ&+ i
,
ﬁ&ﬁ&i j
classe
ﬂ&ﬂ&$ *
:
ﬂ&ﬂ&* +
$str
ﬂ&ﬂ&, Q
)
ﬂ&ﬂ&Q R
;
ﬂ&ﬂ&R S
painellevel3
‰&‰& 
=
‰&‰& 
html
‰&‰& #
.
‰&‰&# $
listgroupItem
‰&‰&$ 1
(
‰&‰&1 2
	outerhtml
Â&Â&< E
:
Â&Â&E F

avaliacoes
Â&Â&G Q
+
Â&Â&R S
amostras
Ê&Ê&G O
+
Ê&Ê&P Q(
painelLevel3HeaderListHtml
Á&Á&G a
,
Á&Á&a b
classe
È&È&/ 5
:
È&È&5 6
$str
È&È&7 Q
)
È&È&Q R
+
È&È&S T
html
Î&Î& #
.
Î&Î&# $
painelCounters
Î&Î&$ 2
(
Î&Î&2 3
listCounter
Î&Î&3 >
)
Î&Î&> ?
;
Î&Î&? @
if
&& 
(
&& 
!
&& 
string
&& 
.
&& 
IsNullOrEmpty
&& )
(
&&) *
parLevel3Group
&&* 8
)
&&8 9
&&
&&: <
	ParLevel1
&&= F
.
&&F G
HasGroupLevel2
&&G U
!=
&&V X
true
&&Y ]
)
&&] ^
{
Ò&Ò& 
parLevel3Group
Ú&Ú& "
=
Ú&Ú&# $
html
Ú&Ú&% )
.
Ú&Ú&) *
div
Ú&Ú&* -
(
Ú&Ú&- .
classe
Û&Û&/ 5
:
Û&Û&5 6
$str
Û&Û&7 G
,
Û&Û&G H
tags
Ù&Ù&/ 3
:
Ù&Ù&3 4
$str
Ù&Ù&5 B
+
Ù&Ù&C D
	ParLevel1
Ù&Ù&E N
.
Ù&Ù&N O
Id
Ù&Ù&O Q
+
Ù&Ù&R S
$str
Ù&Ù&T d
+
Ù&Ù&e f
	ParLevel2
Ù&Ù&g p
.
Ù&Ù&p q
Id
Ù&Ù&q s
+
Ù&Ù&t u
$str
Ù&Ù&v z
,
Ù&Ù&z {
	outerhtml
ˆ&ˆ&3 <
:
ˆ&ˆ&< =
painellevel3
ˆ&ˆ&> J
+
ˆ&ˆ&K L
parLevel3Group
˜&˜&> L
)
¯&¯&1 2
;
¯&¯&2 3
}
˘&˘& 
return
˙&˙& 
parLevel3Group
˙&˙& %
;
˙&˙&% &
}
¸&¸& 
else
˛&˛& 
if
˛&˛& 
(
˛&˛& 
tipoTela
˛&˛& 
.
˛&˛& 
Equals
˛&˛& $
(
˛&˛&$ %
$str
˛&˛&% ,
)
˛&˛&, -
)
˛&˛&- .
{
ˇ&ˇ& 
string
Ç'Ç' 
parLevel3Group
Ç'Ç' %
=
Ç'Ç'& '
null
Ç'Ç'( ,
;
Ç'Ç', -
foreach
Ñ'Ñ' 
(
Ñ'Ñ' 
var
Ñ'Ñ' 
	parLevel3
Ñ'Ñ' &
in
Ñ'Ñ'' )
parlevel3List
Ñ'Ñ'* 7
)
Ñ'Ñ'7 8
{
Ö'Ö' 
if
Ü'Ü' 
(
Ü'Ü' 
Last_Id
Ü'Ü' 
!=
Ü'Ü'  "
	parLevel3
Ü'Ü'# ,
.
Ü'Ü', -
Id
Ü'Ü'- /
)
Ü'Ü'/ 0
{
á'á' 
string
â'â' 

classInput
â'â' )
=
â'â'* +
null
â'â', 0
;
â'â'0 1
string
ã'ã' 
labelsInputs
ã'ã' +
=
ã'ã', -
null
ã'ã'. 2
;
ã'ã'2 3
string
ç'ç' 
input
ç'ç' $
=
ç'ç'% &
getTipoInput
ç'ç'' 3
(
ç'ç'3 4
	parLevel3
ç'ç'4 =
,
ç'ç'= >
ref
ç'ç'? B

classInput
ç'ç'C M
,
ç'ç'M N
ref
ç'ç'O R
labelsInputs
ç'ç'S _
)
ç'ç'_ `
;
ç'ç'` a
string
è'è' 

level3List
è'è' )
=
è'è'* +
html
è'è', 0
.
è'è'0 1
level3
è'è'1 7
(
è'è'7 8
	parLevel3
è'è'8 A
,
è'è'A B
input
è'è'C H
,
è'è'H I

classInput
è'è'J T
,
è'è'T U
labelsInputs
è'è'V b
)
è'è'b c
;
è'è'c d
parLevel3Group
ê'ê' &
+=
ê'ê'' )

level3List
ê'ê'* 4
;
ê'ê'4 5
Last_Id
ë'ë' 
=
ë'ë'  !
	parLevel3
ë'ë'" +
.
ë'ë'+ ,
Id
ë'ë', .
;
ë'ë'. /
}
í'í' 
}
ì'ì' 
var
ó'ó' (
painelLevel3HeaderListHtml
ó'ó' .
=
ó'ó'/ 0
$str
ó'ó'1 3
;
ó'ó'3 4
var
ô'ô' 
labelSequencial
ô'ô' #
=
ô'ô'$ %
$str
ô'ô'& T
;
ô'ô'T U
var
ö'ö' #
formControlSequencial
ö'ö' )
=
ö'ö'* +
$strö'ö', ß
;ö'ö'ß ®
var
õ'õ' !
formGroupSequencial
õ'õ' '
=
õ'õ'( )
html
õ'õ'* .
.
õ'õ'. /
div
õ'õ'/ 2
(
õ'õ'2 3
	outerhtml
ú'ú'( 1
:
ú'ú'1 2
labelSequencial
ú'ú'3 B
+
ú'ú'C D#
formControlSequencial
ú'ú'E Z
,
ú'ú'Z [
classe
ù'ù'( .
:
ù'ù'. /
$str
ù'ù'0 <
,
ù'ù'< =
style
û'û'( -
:
û'û'- .
$str
û'û'/ D
)
ü'ü'( )
;
ü'ü') *
var
°'°' 

labelBanda
°'°' 
=
°'°'  
$str
°'°'! J
;
°'°'J K
var
¢'¢' 
formControlBanda
¢'¢' $
=
¢'¢'% &
$str¢'¢'' —
;¢'¢'— “
var
£'£' 
formGroupBanda
£'£' "
=
£'£'# $
html
£'£'% )
.
£'£') *
div
£'£'* -
(
£'£'- .
	outerhtml
§'§'( 1
:
§'§'1 2

labelBanda
§'§'3 =
+
§'§'> ?
formControlBanda
§'§'@ P
,
§'§'P Q
classe
•'•'( .
:
•'•'. /
$str
•'•'0 <
,
•'•'< =
style
¶'¶'( -
:
¶'¶'- .
$str
¶'¶'/ D
)
ß'ß'( )
;
ß'ß') *(
painelLevel3HeaderListHtml
©'©' *
+=
©'©'+ -
html
©'©'. 2
.
©'©'2 3
div
©'©'3 6
(
©'©'6 7
	outerhtml
™'™'0 9
:
™'™'9 :!
formGroupSequencial
™'™'; N
,
™'™'N O
classe
´'´'0 6
:
´'´'6 7
$str
´'´'8 ]
,
´'´'] ^
style
¨'¨'0 5
:
¨'¨'5 6
$str
¨'¨'7 u
)
≠'≠'0 1
;
≠'≠'1 2(
painelLevel3HeaderListHtml
Ø'Ø' *
+=
Ø'Ø'+ -
html
Ø'Ø'. 2
.
Ø'Ø'2 3
div
Ø'Ø'3 6
(
Ø'Ø'6 7
	outerhtml
∞'∞'0 9
:
∞'∞'9 :
formGroupBanda
∞'∞'; I
,
∞'∞'I J
classe
±'±'0 6
:
±'±'6 7
$str
±'±'8 ]
,
±'±'] ^
style
≤'≤'0 5
:
≤'≤'5 6
$str
≤'≤'7 u
)
≥'≥'0 1
;
≥'≥'1 2
var
µ'µ' 
button
µ'µ' 
=
µ'µ' 
html
µ'µ' !
.
µ'µ'! "
button
µ'µ'" (
(
µ'µ'( )
classe
µ'µ') /
:
µ'µ'/ 0
$str
µ'µ'1 T
,
µ'µ'T U
label
µ'µ'V [
:
µ'µ'[ \
$strµ'µ'] ê
)µ'µ'ê ë
;µ'µ'ë í(
painelLevel3HeaderListHtml
∑'∑' *
+=
∑'∑'+ -
html
∑'∑'. 2
.
∑'∑'2 3
div
∑'∑'3 6
(
∑'∑'6 7
	outerhtml
∏'∏'0 9
:
∏'∏'9 :
button
∏'∏'; A
,
∏'∏'A B
classe
π'π'0 6
:
π'π'6 7
$str
π'π'8 ]
,
π'π'] ^
style
∫'∫'0 5
:
∫'∫'5 6
$str
∫'∫'7 u
)
ª'ª'0 1
;
ª'ª'1 2
string
æ'æ' 
totalnchtml
æ'æ' "
=
æ'æ'# $
html
æ'æ'% )
.
æ'æ') *
div
æ'æ'* -
(
æ'æ'- .
	outerhtml
ø'ø'$ -
:
ø'ø'- .
$strø'ø'/  
+ø'ø'À Ã
htmlø'ø'Õ —
.ø'ø'— “
spanø'ø'“ ÷
(ø'ø'÷ ◊
classeø'ø'◊ ›
:ø'ø'› ﬁ
$strø'ø'ﬂ Ë
)ø'ø'Ë È
+ø'ø'Í Î
$strø'ø'Ï ˆ
,ø'ø'ˆ ˜
style
¿'¿'$ )
:
¿'¿') *
$str
¿'¿'+ @
,
¿'¿'@ A
classe
¡'¡'$ *
:
¡'¡'* +
$str
¡'¡', 8
)
¡'¡'8 9
;
¡'¡'9 :
string
√'√' 
ncdianteirohtml
√'√' &
=
√'√'' (
html
√'√') -
.
√'√'- .
div
√'√'. 1
(
√'√'1 2
	outerhtml
ƒ'ƒ'$ -
:
ƒ'ƒ'- .
$strƒ'ƒ'/ Œ
+ƒ'ƒ'œ –
htmlƒ'ƒ'— ’
.ƒ'ƒ'’ ÷
spanƒ'ƒ'÷ ⁄
(ƒ'ƒ'⁄ €
classeƒ'ƒ'€ ·
:ƒ'ƒ'· ‚
$strƒ'ƒ'„ 
)ƒ'ƒ' Ò
+ƒ'ƒ'Ú Û
$strƒ'ƒ'Ù ˛
,ƒ'ƒ'˛ ˇ
style
≈'≈'$ )
:
≈'≈') *
$str
≈'≈'+ @
,
≈'≈'@ A
classe
∆'∆'$ *
:
∆'∆'* +
$str
∆'∆', 8
)
∆'∆'8 9
;
∆'∆'9 :
string
»'»' 
nctraseirohtml
»'»' %
=
»'»'& '
html
»'»'( ,
.
»'»', -
div
»'»'- 0
(
»'»'0 1
	outerhtml
…'…'$ -
:
…'…'- .
$str…'…'/ Õ
+…'…'Œ œ
html…'…'– ‘
.…'…'‘ ’
span…'…'’ Ÿ
(…'…'Ÿ ⁄
classe…'…'⁄ ‡
:…'…'‡ ·
$str…'…'‚ Ó
)…'…'Ó Ô
+…'…' Ò
$str…'…'Ú ¸
,…'…'¸ ˝
style
 ' '$ )
:
 ' ') *
$str
 ' '+ @
,
 ' '@ A
classe
À'À'$ *
:
À'À'* +
$str
À'À', 8
)
À'À'8 9
;
À'À'9 :
string
Õ'Õ' 

niveishtml
Õ'Õ' !
=
Õ'Õ'" #
html
Õ'Õ'$ (
.
Õ'Õ'( )
div
Õ'Õ') ,
(
Õ'Õ', -
	outerhtml
Œ'Œ'$ -
:
Œ'Œ'- .
$strŒ'Œ'/ »
+Œ'Œ'…  
htmlŒ'Œ'À œ
.Œ'Œ'œ –
spanŒ'Œ'– ‘
(Œ'Œ'‘ ’
classeŒ'Œ'’ €
:Œ'Œ'€ ‹
$strŒ'Œ'› Â
)Œ'Œ'Â Ê
+Œ'Œ'Á Ë
$strŒ'Œ'È 
+Œ'Œ'Ò Ú
htmlŒ'Œ'Û ˜
.Œ'Œ'˜ ¯
spanŒ'Œ'¯ ¸
(Œ'Œ'¸ ˝
classeŒ'Œ'˝ É
:Œ'Œ'É Ñ
$strŒ'Œ'Ö ç
)Œ'Œ'ç é
+Œ'Œ'è ê
$strŒ'Œ'ë ò
+Œ'Œ'ô ö
htmlŒ'Œ'õ ü
.Œ'Œ'ü †
spanŒ'Œ'† §
(Œ'Œ'§ •
classeŒ'Œ'• ´
:Œ'Œ'´ ¨
$strŒ'Œ'≠ µ
)Œ'Œ'µ ∂
+Œ'Œ'∑ ∏
$strŒ'Œ'π √
,Œ'Œ'√ ƒ
style
œ'œ'$ )
:
œ'œ') *
$str
œ'œ'+ @
,
œ'œ'@ A
classe
–'–'$ *
:
–'–'* +
$str
–'–', 8
)
–'–'8 9
;
–'–'9 :
string
“'“' 
totalnc
“'“' 
=
“'“'  
html
“'“'! %
.
“'“'% &
div
“'“'& )
(
“'“') *
	outerhtml
”'”'$ -
:
”'”'- .
totalnchtml
”'”'/ :
,
”'”': ;
style
‘'‘'$ )
:
‘'‘') *
$str
‘'‘'+ i
,
‘'‘'i j
classe
’'’'$ *
:
’'’'* +
$str
’'’', 6
)
’'’'6 7
;
’'’'7 8
string
◊'◊' 
ncdianteiro
◊'◊' "
=
◊'◊'# $
html
◊'◊'% )
.
◊'◊') *
div
◊'◊'* -
(
◊'◊'- .
	outerhtml
ÿ'ÿ'$ -
:
ÿ'ÿ'- .
ncdianteirohtml
ÿ'ÿ'/ >
,
ÿ'ÿ'> ?
style
Ÿ'Ÿ'$ )
:
Ÿ'Ÿ') *
$str
Ÿ'Ÿ'+ i
,
Ÿ'Ÿ'i j
classe
⁄'⁄'$ *
:
⁄'⁄'* +
$str
⁄'⁄', 6
)
⁄'⁄'6 7
;
⁄'⁄'7 8
string
‹'‹' 

nctraseiro
‹'‹' !
=
‹'‹'" #
html
‹'‹'$ (
.
‹'‹'( )
div
‹'‹') ,
(
‹'‹', -
	outerhtml
›'›'$ -
:
›'›'- .
nctraseirohtml
›'›'/ =
,
›'›'= >
style
ﬁ'ﬁ'$ )
:
ﬁ'ﬁ') *
$str
ﬁ'ﬁ'+ i
,
ﬁ'ﬁ'i j
classe
ﬂ'ﬂ'$ *
:
ﬂ'ﬂ'* +
$str
ﬂ'ﬂ', 6
)
ﬂ'ﬂ'6 7
;
ﬂ'ﬂ'7 8
string
·'·' 
niveis
·'·' 
=
·'·' 
html
·'·'  $
.
·'·'$ %
div
·'·'% (
(
·'·'( )
	outerhtml
‚'‚'$ -
:
‚'‚'- .

niveishtml
‚'‚'/ 9
,
‚'‚'9 :
style
„'„'$ )
:
„'„') *
$str
„'„'+ i
,
„'„'i j
classe
‰'‰'$ *
:
‰'‰'* +
$str
‰'‰', 6
)
‰'‰'6 7
;
‰'‰'7 8
string
Ê'Ê' 
avaliacoeshtml
Ê'Ê' %
=
Ê'Ê'& '
html
Ê'Ê'( ,
.
Ê'Ê', -
div
Ê'Ê'- 0
(
Ê'Ê'0 1
	outerhtml
Á'Á'$ -
:
Á'Á'- .
$str
Á'Á'/ g
+
Á'Á'h i

CommonData
Á'Á'j t
.
Á'Á't u
getResourceÁ'Á'u Ä
(Á'Á'Ä Å
$strÁ'Á'Å ç
)Á'Á'ç é
.Á'Á'é è
ValueÁ'Á'è î
.Á'Á'î ï
ToStringÁ'Á'ï ù
(Á'Á'ù û
)Á'Á'û ü
+Á'Á'† °
$strÁ'Á'¢ Â
+Á'Á'Ê Á
htmlÁ'Á'Ë Ï
.Á'Á'Ï Ì
spanÁ'Á'Ì Ò
(Á'Á'Ò Ú
classeÁ'Á'Ú ¯
:Á'Á'¯ ˘
$strÁ'Á'˙ ã
)Á'Á'ã å
+Á'Á'ç é
htmlÁ'Á'è ì
.Á'Á'ì î
spanÁ'Á'î ò
(Á'Á'ò ô
	outerhtmlÁ'Á'ô ¢
:Á'Á'¢ £
$strÁ'Á'§ ©
,Á'Á'© ™
classeÁ'Á'´ ±
:Á'Á'± ≤
$strÁ'Á'≥ æ
)Á'Á'æ ø
+Á'Á'¿ ¡
htmlÁ'Á'¬ ∆
.Á'Á'∆ «
spanÁ'Á'« À
(Á'Á'À Ã
classeÁ'Á'Ã “
:Á'Á'“ ”
$strÁ'Á'‘ „
)Á'Á'„ ‰
+Á'Á'Â Ê
$strÁ'Á'Á Ò
,Á'Á'Ò Ú
style
Ë'Ë'$ )
:
Ë'Ë') *
$str
Ë'Ë'+ @
,
Ë'Ë'@ A
classe
È'È'$ *
:
È'È'* +
$str
È'È', 8
)
È'È'8 9
;
È'È'9 :
string
Í'Í' 
amostrashtml
Í'Í' #
=
Í'Í'$ %
html
Í'Í'& *
.
Í'Í'* +
div
Í'Í'+ .
(
Í'Í'. /
	outerhtml
Î'Î'$ -
:
Î'Î'- .
$str
Î'Î'/ g
+
Î'Î'h i

CommonData
Î'Î'j t
.
Î'Î't u
getResourceÎ'Î'u Ä
(Î'Î'Ä Å
$strÎ'Î'Å ä
)Î'Î'ä ã
.Î'Î'ã å
ValueÎ'Î'å ë
.Î'Î'ë í
ToStringÎ'Î'í ö
(Î'Î'ö õ
)Î'Î'õ ú
+Î'Î'ù û
$strÎ'Î'ü ‚
+Î'Î'„ ‰
htmlÎ'Î'Â È
.Î'Î'È Í
spanÎ'Î'Í Ó
(Î'Î'Ó Ô
classeÎ'Î'Ô ı
:Î'Î'ı ˆ
$strÎ'Î'˜ Ü
)Î'Î'Ü á
+Î'Î'à â
htmlÎ'Î'ä é
.Î'Î'é è
spanÎ'Î'è ì
(Î'Î'ì î
	outerhtmlÎ'Î'î ù
:Î'Î'ù û
$strÎ'Î'ü §
,Î'Î'§ •
classeÎ'Î'¶ ¨
:Î'Î'¨ ≠
$strÎ'Î'Æ π
)Î'Î'π ∫
+Î'Î'ª º
htmlÎ'Î'Ω ¡
.Î'Î'¡ ¬
spanÎ'Î'¬ ∆
(Î'Î'∆ «
classeÎ'Î'« Õ
:Î'Î'Õ Œ
$strÎ'Î'œ ‹
)Î'Î'‹ ›
+Î'Î'ﬁ ﬂ
$strÎ'Î'‡ Í
,Î'Î'Í Î
style
Ï'Ï'$ )
:
Ï'Ï') *
$str
Ï'Ï'+ @
,
Ï'Ï'@ A
classe
Ì'Ì'$ *
:
Ì'Ì'* +
$str
Ì'Ì', 8
)
Ì'Ì'8 9
;
Ì'Ì'9 :
string
Ô'Ô' 

avaliacoes
Ô'Ô' !
=
Ô'Ô'" #
html
Ô'Ô'$ (
.
Ô'Ô'( )
div
Ô'Ô') ,
(
Ô'Ô', -
	outerhtml
''$ -
:
''- .
avaliacoeshtml
''/ =
,
''= >
style
Ò'Ò'$ )
:
Ò'Ò') *
$str
Ò'Ò'+ i
,
Ò'Ò'i j
classe
Ú'Ú'$ *
:
Ú'Ú'* +
$str
Ú'Ú', V
)
Ú'Ú'V W
;
Ú'Ú'W X
string
Û'Û' 
amostras
Û'Û' 
=
Û'Û'  !
html
Û'Û'" &
.
Û'Û'& '
div
Û'Û'' *
(
Û'Û'* +
	outerhtml
Ù'Ù'$ -
:
Ù'Ù'- .
amostrashtml
Ù'Ù'/ ;
,
Ù'Ù'; <
style
ı'ı'$ )
:
ı'ı') *
$str
ı'ı'+ i
,
ı'ı'i j
classe
ˆ'ˆ'$ *
:
ˆ'ˆ'* +
$str
ˆ'ˆ', V
)
ˆ'ˆ'V W
;
ˆ'ˆ'W X
painellevel3
¯'¯' 
=
¯'¯' 
html
¯'¯' #
.
¯'¯'# $
listgroupItem
¯'¯'$ 1
(
¯'¯'1 2
	outerhtml
˘'˘'< E
:
˘'˘'E F
amostras
˘'˘'G O
+
˘'˘'P Q

avaliacoes
˘'˘'R \
+
˘'˘'] ^
totalnc
˘'˘'_ f
+
˘'˘'g h
ncdianteiro
˘'˘'i t
+
˘'˘'u v

nctraseiro˘'˘'w Å
+˘'˘'Ç É
niveis˘'˘'Ñ ä
+˘'˘'ã å*
painelLevel3HeaderListHtml˘'˘'ç ß
,˘'˘'ß ®
classe
˙'˙'/ 5
:
˙'˙'5 6
$str
˙'˙'7 Q
)
˙'˙'Q R
+
˙'˙'S T
html
¸'¸' "
.
¸'¸'" #
painelCounters
¸'¸'# 1
(
¸'¸'1 2
listCounter
¸'¸'2 =
)
¸'¸'= >
;
¸'¸'> ?
if
Ç(Ç( 
(
Ç(Ç( 
!
Ç(Ç( 
string
Ç(Ç( 
.
Ç(Ç( 
IsNullOrEmpty
Ç(Ç( )
(
Ç(Ç() *
parLevel3Group
Ç(Ç(* 8
)
Ç(Ç(8 9
)
Ç(Ç(9 :
{
É(É( 
parLevel3Group
Ñ(Ñ( "
=
Ñ(Ñ(# $
html
Ñ(Ñ(% )
.
Ñ(Ñ() *
div
Ñ(Ñ(* -
(
Ñ(Ñ(- .
classe
Ö(Ö(/ 5
:
Ö(Ö(5 6
$str
Ö(Ö(7 J
,
Ö(Ö(J K
tags
Ü(Ü(/ 3
:
Ü(Ü(3 4
$str
Ü(Ü(5 B
+
Ü(Ü(C D
	ParLevel1
Ü(Ü(E N
.
Ü(Ü(N O
Id
Ü(Ü(O Q
+
Ü(Ü(R S
$str
Ü(Ü(T d
+
Ü(Ü(e f
	ParLevel2
Ü(Ü(g p
.
Ü(Ü(p q
Id
Ü(Ü(q s
+
Ü(Ü(t u
$str
Ü(Ü(v z
,
Ü(Ü(z {
	outerhtml
à(à(/ 8
:
à(à(8 9
painellevel3
à(à(: F
+
à(à(G H
parLevel3Group
â(â(: H
)
ä(ä(- .
;
ä(ä(. /
}
ã(ã( 
return
å(å( 
parLevel3Group
å(å( %
;
å(å(% &
}
é(é( 
else
ê(ê( 
{
ë(ë( 
string
ì(ì( 
parLevel3Group
ì(ì( %
=
ì(ì(& '
null
ì(ì(( ,
;
ì(ì(, -
var
ï(ï( $
parlevel3GroupByLevel2
ï(ï( *
=
ï(ï(+ ,
parlevel3List
ï(ï(- :
.
ï(ï(: ;
GroupBy
ï(ï(; B
(
ï(ï(B C
p
ï(ï(C D
=>
ï(ï(E G
p
ï(ï(H I
.
ï(ï(I J
ParLevel3Group_Id
ï(ï(J [
)
ï(ï([ \
;
ï(ï(\ ]
foreach
ó(ó( 
(
ó(ó( 
var
ó(ó( "
parLevel3GroupLevel2
ó(ó( 1
in
ó(ó(2 4$
parlevel3GroupByLevel2
ó(ó(5 K
)
ó(ó(K L
{
ò(ò( 
string
ô(ô( 
accordeonName
ô(ô( (
=
ô(ô() *
null
ô(ô(+ /
;
ô(ô(/ 0
string
ö(ö( 
acoordeonId
ö(ö( &
=
ö(ö(' (
null
ö(ö() -
;
ö(ö(- .
string
õ(õ( 
level3Group
õ(õ( &
=
õ(õ(' (
null
õ(õ() -
;
õ(õ(- .
foreach
ù(ù( 
(
ù(ù( 
var
ù(ù(  
	parLevel3
ù(ù(! *
in
ù(ù(+ -"
parLevel3GroupLevel2
ù(ù(. B
)
ù(ù(B C
{
û(û( 
if
†(†( 
(
†(†( 
Last_Id
†(†( #
!=
†(†($ &
	parLevel3
†(†(' 0
.
†(†(0 1
Id
†(†(1 3
)
†(†(3 4
{
°(°( 
if
£(£( 
(
£(£(  
	parLevel3
£(£(  )
.
£(£() *
ParLevel3Group_Id
£(£(* ;
>
£(£(< =
$num
£(£(> ?
)
£(£(? @
{
§(§( 
accordeonName
•(•(  -
=
•(•(. /
	parLevel3
•(•(0 9
.
•(•(9 :!
ParLevel3Group_Name
•(•(: M
;
•(•(M N
acoordeonId
¶(¶(  +
=
¶(¶(, -
	parLevel3
¶(¶(. 7
.
¶(¶(7 8
ParLevel3Group_Id
¶(¶(8 I
.
¶(¶(I J
ToString
¶(¶(J R
(
¶(¶(R S
)
¶(¶(S T
+
¶(¶(U V
	ParLevel2
¶(¶(W `
.
¶(¶(` a
Id
¶(¶(a c
.
¶(¶(c d
ToString
¶(¶(d l
(
¶(¶(l m
)
¶(¶(m n
;
¶(¶(n o
}
ß(ß( 
string
™(™( "

classInput
™(™(# -
=
™(™(. /
null
™(™(0 4
;
™(™(4 5
string
¨(¨( "
labelsInputs
¨(¨(# /
=
¨(¨(0 1
null
¨(¨(2 6
;
¨(¨(6 7
string
Æ(Æ( "
input
Æ(Æ(# (
=
Æ(Æ() *
getTipoInput
Æ(Æ(+ 7
(
Æ(Æ(7 8
	parLevel3
Æ(Æ(8 A
,
Æ(Æ(A B
ref
Æ(Æ(C F

classInput
Æ(Æ(G Q
,
Æ(Æ(Q R
ref
Æ(Æ(S V
labelsInputs
Æ(Æ(W c
)
Æ(Æ(c d
;
Æ(Æ(d e
string
∞(∞( "

level3List
∞(∞(# -
=
∞(∞(. /
html
∞(∞(0 4
.
∞(∞(4 5
level3
∞(∞(5 ;
(
∞(∞(; <
	parLevel3
∞(∞(< E
,
∞(∞(E F
input
∞(∞(G L
,
∞(∞(L M

classInput
∞(∞(N X
,
∞(∞(X Y
labelsInputs
∞(∞(Z f
)
∞(∞(f g
;
∞(∞(g h
level3Group
±(±( '
+=
±(±(( *

level3List
±(±(+ 5
;
±(±(5 6
Last_Id
≥(≥( #
=
≥(≥($ %
	parLevel3
≥(≥(& /
.
≥(≥(/ 0
Id
≥(≥(0 2
;
≥(≥(2 3
}
¥(¥( 
}
µ(µ( 
if
∑(∑( 
(
∑(∑( 
!
∑(∑( 
string
∑(∑( 
.
∑(∑(  
IsNullOrEmpty
∑(∑(  -
(
∑(∑(- .
acoordeonId
∑(∑(. 9
)
∑(∑(9 :
)
∑(∑(: ;
{
∏(∏( 
haveAccordeon
π(π( %
=
π(π(& '
true
π(π(( ,
;
π(π(, -
level3Group
∫(∫( #
=
∫(∫($ %
html
∫(∫(& *
.
∫(∫(* +
	accordeon
∫(∫(+ 4
(
∫(∫(4 5
id
ª(ª(8 :
:
ª(ª(: ;
acoordeonId
ª(ª(< G
+
ª(ª(H I
$str
ª(ª(J R
,
ª(ª(R S
label
º(º(8 =
:
º(º(= >
accordeonName
º(º(? L
,
º(º(L M
	outerhtml
Ω(Ω(8 A
:
Ω(Ω(A B
level3Group
Ω(Ω(C N
,
Ω(Ω(N O
classe
æ(æ(8 >
:
æ(æ(> ?
$str
æ(æ(@ E
)
ø(ø(4 5
;
ø(ø(5 6
}
¿(¿( 
string
√(√( 
painelCounters
√(√( )
=
√(√(* +
$str
√(√(, .
;
√(√(. /
if
ƒ(ƒ( 
(
ƒ(ƒ( 
listCounter
ƒ(ƒ( #
!=
ƒ(ƒ($ &
null
ƒ(ƒ(' +
)
ƒ(ƒ(+ ,
{
≈(≈( 
painelCounters
∆(∆( &
=
∆(∆(' (
html
∆(∆() -
.
∆(∆(- .
painelCounters
∆(∆(. <
(
∆(∆(< =
listCounter
∆(∆(= H
.
∆(∆(H I
Where
∆(∆(I N
(
∆(∆(N O
r
∆(∆(O P
=>
∆(∆(Q S
r
∆(∆(T U
.
∆(∆(U V
Local
∆(∆(V [
==
∆(∆(\ ^
$str
∆(∆(_ n
)
∆(∆(n o
)
∆(∆(o p
;
∆(∆(p q
}
«(«( 
parLevel3Group
…(…( "
+=
…(…(# %
level3Group
…(…(& 1
;
…(…(1 2
}
À(À( 
string
’(’( 
avaliacoeshtml
’(’( %
=
’(’(& '
html
’(’(( ,
.
’(’(, -
div
’(’(- 0
(
’(’(0 1
	outerhtml
÷(÷($ -
:
÷(÷(- .
$str
÷(÷(/ g
+
÷(÷(h i

CommonData
÷(÷(j t
.
÷(÷(t u
getResource÷(÷(u Ä
(÷(÷(Ä Å
$str÷(÷(Å ç
)÷(÷(ç é
.÷(÷(é è
Value÷(÷(è î
.÷(÷(î ï
ToString÷(÷(ï ù
(÷(÷(ù û
)÷(÷(û ü
+÷(÷(† °
$str÷(÷(¢ Â
+÷(÷(Ê Á
html÷(÷(Ë Ï
.÷(÷(Ï Ì
span÷(÷(Ì Ò
(÷(÷(Ò Ú
classe÷(÷(Ú ¯
:÷(÷(¯ ˘
$str÷(÷(˙ ã
)÷(÷(ã å
+÷(÷(ç é
html÷(÷(è ì
.÷(÷(ì î
span÷(÷(î ò
(÷(÷(ò ô
	outerhtml÷(÷(ô ¢
:÷(÷(¢ £
$str÷(÷(§ ©
,÷(÷(© ™
classe÷(÷(´ ±
:÷(÷(± ≤
$str÷(÷(≥ æ
)÷(÷(æ ø
+÷(÷(¿ ¡
html÷(÷(¬ ∆
.÷(÷(∆ «
span÷(÷(« À
(÷(÷(À Ã
classe÷(÷(Ã “
:÷(÷(“ ”
$str÷(÷(‘ „
)÷(÷(„ ‰
+÷(÷(Â Ê
$str÷(÷(Á Ò
,÷(÷(Ò Ú
style
◊(◊($ )
:
◊(◊() *
$str
◊(◊(+ @
,
◊(◊(@ A
classe
ÿ(ÿ($ *
:
ÿ(ÿ(* +
$str
ÿ(ÿ(, 8
)
ÿ(ÿ(8 9
;
ÿ(ÿ(9 :
string
Ÿ(Ÿ( 
amostrashtml
Ÿ(Ÿ( #
=
Ÿ(Ÿ($ %
html
Ÿ(Ÿ(& *
.
Ÿ(Ÿ(* +
div
Ÿ(Ÿ(+ .
(
Ÿ(Ÿ(. /
	outerhtml
⁄(⁄($ -
:
⁄(⁄(- .
$str
⁄(⁄(/ g
+
⁄(⁄(h i

CommonData
⁄(⁄(j t
.
⁄(⁄(t u
getResource⁄(⁄(u Ä
(⁄(⁄(Ä Å
$str⁄(⁄(Å ä
)⁄(⁄(ä ã
.⁄(⁄(ã å
Value⁄(⁄(å ë
.⁄(⁄(ë í
ToString⁄(⁄(í ö
(⁄(⁄(ö õ
)⁄(⁄(õ ú
+⁄(⁄(ù û
$str⁄(⁄(ü ‚
+⁄(⁄(„ ‰
html⁄(⁄(Â È
.⁄(⁄(È Í
span⁄(⁄(Í Ó
(⁄(⁄(Ó Ô
classe⁄(⁄(Ô ı
:⁄(⁄(ı ˆ
$str⁄(⁄(˜ Ü
)⁄(⁄(Ü á
+⁄(⁄(à â
html⁄(⁄(ä é
.⁄(⁄(é è
span⁄(⁄(è ì
(⁄(⁄(ì î
	outerhtml⁄(⁄(î ù
:⁄(⁄(ù û
$str⁄(⁄(ü §
,⁄(⁄(§ •
classe⁄(⁄(¶ ¨
:⁄(⁄(¨ ≠
$str⁄(⁄(Æ π
)⁄(⁄(π ∫
+⁄(⁄(ª º
html⁄(⁄(Ω ¡
.⁄(⁄(¡ ¬
span⁄(⁄(¬ ∆
(⁄(⁄(∆ «
classe⁄(⁄(« Õ
:⁄(⁄(Õ Œ
$str⁄(⁄(œ ‹
)⁄(⁄(‹ ›
+⁄(⁄(ﬁ ﬂ
$str⁄(⁄(‡ Í
,⁄(⁄(Í Î
style
€(€($ )
:
€(€() *
$str
€(€(+ @
,
€(€(@ A
classe
‹(‹($ *
:
‹(‹(* +
$str
‹(‹(, 8
)
‹(‹(8 9
;
‹(‹(9 :
string
›(›( 
defeitoshtml
›(›( #
=
›(›($ %
html
›(›(& *
.
›(›(* +
div
›(›(+ .
(
›(›(. /
	outerhtml
ﬁ(ﬁ($ -
:
ﬁ(ﬁ(- .
$str
ﬁ(ﬁ(/ g
+
ﬁ(ﬁ(h i

CommonData
ﬁ(ﬁ(j t
.
ﬁ(ﬁ(t u
getResourceﬁ(ﬁ(u Ä
(ﬁ(ﬁ(Ä Å
$strﬁ(ﬁ(Å ä
)ﬁ(ﬁ(ä ã
.ﬁ(ﬁ(ã å
Valueﬁ(ﬁ(å ë
.ﬁ(ﬁ(ë í
ToStringﬁ(ﬁ(í ö
(ﬁ(ﬁ(ö õ
)ﬁ(ﬁ(õ ú
+ﬁ(ﬁ(ù û
$str
ﬂ(ﬂ($ f
+
ﬂ(ﬂ(g h
html
ﬂ(ﬂ(i m
.
ﬂ(ﬂ(m n
span
ﬂ(ﬂ(n r
(
ﬂ(ﬂ(r s
	outerhtml
ﬂ(ﬂ(s |
:
ﬂ(ﬂ(| }
$strﬂ(ﬂ(~ Å
,ﬂ(ﬂ(Å Ç
classeﬂ(ﬂ(É â
:ﬂ(ﬂ(â ä
$strﬂ(ﬂ(ã î
)ﬂ(ﬂ(î ï
+ﬂ(ﬂ(ñ ó
$strﬂ(ﬂ(ò ¢
,ﬂ(ﬂ(¢ £
style
‡(‡($ )
:
‡(‡() *
$str
‡(‡(+ @
,
‡(‡(@ A
classe
·(·($ *
:
·(·(* +
$str
·(·(, 8
)
·(·(8 9
;
·(·(9 :
string
„(„( 

avaliacoes
„(„( !
=
„(„(" #
html
„(„($ (
.
„(„(( )
div
„(„() ,
(
„(„(, -
	outerhtml
‰(‰($ -
:
‰(‰(- .
avaliacoeshtml
‰(‰(/ =
,
‰(‰(= >
style
Â(Â($ )
:
Â(Â() *
$str
Â(Â(+ i
,
Â(Â(i j
classe
Ê(Ê($ *
:
Ê(Ê(* +
$str
Ê(Ê(, Q
)
Ê(Ê(Q R
;
Ê(Ê(R S
string
Á(Á( 
amostras
Á(Á( 
=
Á(Á(  !
html
Á(Á(" &
.
Á(Á(& '
div
Á(Á(' *
(
Á(Á(* +
	outerhtml
Ë(Ë($ -
:
Ë(Ë(- .
amostrashtml
Ë(Ë(/ ;
,
Ë(Ë(; <
style
È(È($ )
:
È(È() *
$str
È(È(+ i
,
È(È(i j
classe
Í(Í($ *
:
Í(Í(* +
$str
Í(Í(, Q
)
Í(Í(Q R
;
Í(Í(R S
string
Î(Î( 
defeitos
Î(Î( 
=
Î(Î(  !
html
Î(Î(" &
.
Î(Î(& '
div
Î(Î(' *
(
Î(Î(* +
	outerhtml
Ï(Ï($ -
:
Ï(Ï(- .
defeitoshtml
Ï(Ï(/ ;
,
Ï(Ï(; <
style
Ì(Ì($ )
:
Ì(Ì() *
$str
Ì(Ì(+ i
,
Ì(Ì(i j
classe
Ó(Ó($ *
:
Ó(Ó(* +
$str
Ó(Ó(, Q
)
Ó(Ó(Q R
;
Ó(Ó(R S
var
Û(Û( (
painelLevel3HeaderListHtml
Û(Û( .
=
Û(Û(/ 0
GetHeaderHtml
Û(Û(1 >
(
Û(Û(> ?
ParLevelHeaderDB
Ù(Ù( $
.
Ù(Ù($ %%
getHeaderByLevel1Level2
Ù(Ù(% <
(
Ù(Ù(< =
	ParLevel1
Ù(Ù(= F
.
Ù(Ù(F G
Id
Ù(Ù(G I
,
Ù(Ù(I J
	ParLevel2
Ù(Ù(K T
.
Ù(Ù(T U
Id
Ù(Ù(U W
)
Ù(Ù(W X
,
Ù(Ù(X Y
ParFieldTypeDB
Ù(Ù(Z h
,
Ù(Ù(h i
html
Ù(Ù(j n
,
Ù(Ù(n o
	ParLevel1
Ù(Ù(p y
.
Ù(Ù(y z
Id
Ù(Ù(z |
,
Ù(Ù(| }
	ParLevel2Ù(Ù(~ á
.Ù(Ù(á à
IdÙ(Ù(à ä
,Ù(Ù(ä ã 
ParLevelHeaderDBÙ(Ù(å ú
,Ù(Ù(ú ù
ParCompany_IdÙ(Ù(û ´
)Ù(Ù(´ ¨
;Ù(Ù(¨ ≠
string
¯(¯( 
accordeonbuttons
¯(¯( '
=
¯(¯(( )
null
¯(¯(* .
;
¯(¯(. /
if
˘(˘( 
(
˘(˘( 
haveAccordeon
˘(˘( !
==
˘(˘(" $
true
˘(˘(% )
)
˘(˘() *
{
˙(˙( 
accordeonbuttons
˚(˚( $
=
˚(˚(% &
$str˚(˚(' õ
+˚(˚(ú ù
	Resources˚(˚(û ß
.˚(˚(ß ®
Resource˚(˚(® ∞
.˚(˚(∞ ±
show_all˚(˚(± π
+˚(˚(∫ ª
$str˚(˚(º »
+˚(˚(…  
$str¸(¸(' ë
+¸(¸(í ì
	Resources¸(¸(î ù
.¸(¸(ù û
Resource¸(¸(û ¶
.¸(¸(¶ ß
hide_all¸(¸(ß Ø
+¸(¸(∞ ±
$str¸(¸(≤ æ
;¸(¸(æ ø
}
˝(˝( 
var
Ä)Ä) 
level2
Ä)Ä) 
=
Ä)Ä) 
dbEf
Ä)Ä) !
.
Ä)Ä)! "
ParCounterXLocal
Ä)Ä)" 2
.
Ä)Ä)2 3
FirstOrDefault
Ä)Ä)3 A
(
Ä)Ä)A B
r
Ä)Ä)B C
=>
Ä)Ä)D F
r
Ä)Ä)G H
.
Ä)Ä)H I
ParLevel1_Id
Ä)Ä)I U
==
Ä)Ä)V X
	ParLevel1
Ä)Ä)Y b
.
Ä)Ä)b c
Id
Ä)Ä)c e
&&
Ä)Ä)f h
r
Ä)Ä)i j
.
Ä)Ä)j k

ParCounter
Ä)Ä)k u
.
Ä)Ä)u v
Name
Ä)Ä)v z
==
Ä)Ä){ }
$strÄ)Ä)~ á
&&Ä)Ä)à ä
rÄ)Ä)ã å
.Ä)Ä)å ç
IsActiveÄ)Ä)ç ï
)Ä)Ä)ï ñ
;Ä)Ä)ñ ó
if
Å)Å) 
(
Å)Å) 
level2
Å)Å) 
!=
Å)Å) 
null
Å)Å) "
)
Å)Å)" #
{
Ç)Ç) 
var
É)É) 
teste
É)É) 
=
É)É) 
new
É)É)  #
ContadoresXX
É)É)$ 0
(
É)É)0 1
)
É)É)1 2
.
É)É)2 3
GetContadoresXX
É)É)3 B
(
É)É)B C
dbEf
É)É)C G
,
É)É)G H
	ParLevel1
É)É)I R
.
É)É)R S
Id
É)É)S U
,
É)É)U V
ParCompany_Id
É)É)W d
)
É)É)d e
;
É)É)e f
var
Ü)Ü) 

listaShift
Ü)Ü) "
=
Ü)Ü)# $
new
Ü)Ü)% (
List
Ü)Ü)) -
<
Ü)Ü)- .
int
Ü)Ü). 1
>
Ü)Ü)1 2
(
Ü)Ü)2 3
)
Ü)Ü)3 4
;
Ü)Ü)4 5

listaShift
á)á) 
.
á)á) 
Add
á)á) "
(
á)á)" #
$num
á)á)# $
)
á)á)$ %
;
á)á)% &

listaShift
à)à) 
.
à)à) 
Add
à)à) "
(
à)à)" #
$num
à)à)# $
)
à)à)$ %
;
à)à)% &
var
â)â) 
listaPeriod
â)â) #
=
â)â)$ %
new
â)â)& )
List
â)â)* .
<
â)â). /
int
â)â)/ 2
>
â)â)2 3
(
â)â)3 4
)
â)â)4 5
;
â)â)5 6
listaPeriod
ä)ä) 
.
ä)ä)  
Add
ä)ä)  #
(
ä)ä)# $
$num
ä)ä)$ %
)
ä)ä)% &
;
ä)ä)& '
listaPeriod
ã)ã) 
.
ã)ã)  
Add
ã)ã)  #
(
ã)ã)# $
$num
ã)ã)$ %
)
ã)ã)% &
;
ã)ã)& '
listaPeriod
å)å) 
.
å)å)  
Add
å)å)  #
(
å)å)# $
$num
å)å)$ %
)
å)å)% &
;
å)å)& '
listaPeriod
ç)ç) 
.
ç)ç)  
Add
ç)ç)  #
(
ç)ç)# $
$num
ç)ç)$ %
)
ç)ç)% &
;
ç)ç)& '
if
è)è) 
(
è)è) 
teste
è)è) 
.
è)è) 
	IsNotNull
è)è) '
(
è)è)' (
)
è)è)( )
&&
è)è)* ,
teste
è)è)- 2
.
è)è)2 3
Count
è)è)3 8
>
è)è)9 :
$num
è)è); <
)
è)è)< =
{
ê)ê) 
if
ë)ë) 
(
ë)ë) 
(
ë)ë) 
GlobalConfig
ë)ë) )
.
ë)ë)) *
Eua
ë)ë)* -
||
ë)ë). 0
GlobalConfig
ë)ë)1 =
.
ë)ë)= >
Canada
ë)ë)> D
)
ë)ë)D E
&&
ë)ë)F H
	ParLevel1
ë)ë)I R
.
ë)ë)R S
Id
ë)ë)S U
==
ë)ë)V X
$num
ë)ë)Y [
)
ë)ë)[ \
{
í)í) 
foreach
î)î) #
(
î)î)$ %
var
î)î)% (
s
î)î)) *
in
î)î)+ -

listaShift
î)î). 8
)
î)î)8 9
{
ï)ï) 
foreach
ñ)ñ)  '
(
ñ)ñ)( )
var
ñ)ñ)) ,
p
ñ)ñ)- .
in
ñ)ñ)/ 1
listaPeriod
ñ)ñ)2 =
)
ñ)ñ)= >
{
ó)ó)  !(
painelLevel3HeaderListHtml
ò)ò)$ >
+=
ò)ò)? A
$str
ò)ò)B m
+
ò)ò)n o
	ParLevel1
ò)ò)p y
.
ò)ò)y z
Id
ò)ò)z |
+
ò)ò)} ~
$strò)ò) ê
+ò)ò)ë í
pò)ò)ì î
+ò)ò)ï ñ
$strò)ò)ó ù
+ò)ò)û ü
sò)ò)† °
+ò)ò)¢ £
$strò)ò)§ ≤
+ò)ò)≥ ¥
	ParLevel1ò)ò)µ æ
.ò)ò)æ ø
Idò)ò)ø ¡
+ò)ò)¬ √
$strò)ò)ƒ »
+ò)ò)…  

CommonDataò)ò)À ’
.ò)ò)’ ÷
getResourceò)ò)÷ ·
(ò)ò)· ‚
$strò)ò)‚ Ò
)ò)ò)Ò Ú
.ò)ò)Ú Û
Valueò)ò)Û ¯
.ò)ò)¯ ˘
ToStringò)ò)˘ Å
(ò)ò)Å Ç
)ò)ò)Ç É
+ò)ò)Ñ Ö
$strò)ò)Ü û
;ò)ò)û ü(
painelLevel3HeaderListHtml
ö)ö)$ >
+=
ö)ö)? A
$str
ö)ö)B m
+
ö)ö)n o
	ParLevel1
ö)ö)p y
.
ö)ö)y z
Id
ö)ö)z |
+
ö)ö)} ~
$strö)ö) ê
+ö)ö)ë í
pö)ö)ì î
+ö)ö)ï ñ
$strö)ö)ó ù
+ö)ö)û ü
sö)ö)† °
+ö)ö)¢ £
$strö)ö)§ ≤
+ö)ö)≥ ¥
	ParLevel1ö)ö)µ æ
.ö)ö)æ ø
Idö)ö)ø ¡
+ö)ö)¬ √
$strö)ö)ƒ »
+ö)ö)…  

CommonDataö)ö)À ’
.ö)ö)’ ÷
getResourceö)ö)÷ ·
(ö)ö)· ‚
$strö)ö)‚ ¯
)ö)ö)¯ ˘
.ö)ö)˘ ˙
Valueö)ö)˙ ˇ
.ö)ö)ˇ Ä
ToStringö)ö)Ä à
(ö)ö)à â
)ö)ö)â ä
+ö)ö)ã å
$strö)ö)ç ó
+ö)ö)ò ô
testeö)ö)ö ü
.ö)ö)ü †
Whereö)ö)† •
(ö)ö)• ¶
rö)ö)¶ ß
=>ö)ö)® ™
rö)ö)´ ¨
.ö)ö)¨ ≠
Periodö)ö)≠ ≥
==ö)ö)¥ ∂
pö)ö)∑ ∏
&&ö)ö)π ª
rö)ö)º Ω
.ö)ö)Ω æ
Shiftö)ö)æ √
==ö)ö)ƒ ∆
sö)ö)« »
)ö)ö)» …
.ö)ö)…  
Sumö)ö)  Õ
(ö)ö)Õ Œ
rö)ö)Œ œ
=>ö)ö)– “
rö)ö)” ‘
.ö)ö)‘ ’

WeiDefectsö)ö)’ ﬂ
)ö)ö)ﬂ ‡
.ö)ö)‡ ·
ToStringö)ö)· È
(ö)ö)È Í
$strö)ö)Í Ô
)ö)ö)Ô 
+ö)ö)Ò Ú
$strö)ö)Û Ç
;ö)ö)Ç É
if
ú)ú)$ &
(
ú)ú)' (
(
ú)ú)( )
GlobalConfig
ú)ú)) 5
.
ú)ú)5 6
Eua
ú)ú)6 9
||
ú)ú): <
GlobalConfig
ú)ú)= I
.
ú)ú)I J
Canada
ú)ú)J P
)
ú)ú)P Q
&&
ú)ú)R T
	ParLevel1
ú)ú)U ^
.
ú)ú)^ _
Id
ú)ú)_ a
==
ú)ú)b d
$num
ú)ú)e g
)
ú)ú)g h(
painelLevel3HeaderListHtml
ù)ù)( B
+=
ù)ù)C E
$str
ù)ù)F q
+
ù)ù)r s
	ParLevel1
ù)ù)t }
.
ù)ù)} ~
Idù)ù)~ Ä
+ù)ù)Å Ç
$strù)ù)É î
+ù)ù)ï ñ
pù)ù)ó ò
+ù)ù)ô ö
$strù)ù)õ °
+ù)ù)¢ £
sù)ù)§ •
+ù)ù)¶ ß
$strù)ù)® ∂
+ù)ù)∑ ∏
	ParLevel1ù)ù)π ¬
.ù)ù)¬ √
Idù)ù)√ ≈
+ù)ù)∆ «
$strù)ù)» Ã
+ù)ù)Õ Œ

CommonDataù)ù)œ Ÿ
.ù)ù)Ÿ ⁄
getResourceù)ù)⁄ Â
(ù)ù)Â Ê
$strù)ù)Ê ˙
)ù)ù)˙ ˚
.ù)ù)˚ ¸
Valueù)ù)¸ Å
.ù)ù)Å Ç
ToStringù)ù)Ç ä
(ù)ù)ä ã
)ù)ù)ã å
+ù)ù)ç é
$strù)ù)è ß
;ù)ù)ß ®
}
ü)ü)  !
}
°)°) 
}
¢)¢) 
}
£)£) 
else
§)§) 
{
•)•) 
if
¶)¶) 
(
¶)¶) 
(
¶)¶) 
GlobalConfig
¶)¶) )
.
¶)¶)) *
Eua
¶)¶)* -
||
¶)¶). 0
GlobalConfig
¶)¶)1 =
.
¶)¶)= >
Canada
¶)¶)> D
)
¶)¶)D E
&&
¶)¶)F H
	ParLevel1
¶)¶)I R
.
¶)¶)R S
Id
¶)¶)S U
==
¶)¶)V X
$num
¶)¶)Y [
)
¶)¶)[ \
{
ß)ß) 
foreach
®)®) #
(
®)®)$ %
var
®)®)% (
s
®)®)) *
in
®)®)+ -

listaShift
®)®). 8
)
®)®)8 9
{
©)©) 
foreach
™)™)  '
(
™)™)( )
var
™)™)) ,
p
™)™)- .
in
™)™)/ 1
listaPeriod
™)™)2 =
)
™)™)= >
{
´)´)  !(
painelLevel3HeaderListHtml
¨)¨)$ >
+=
¨)¨)? A
$str
¨)¨)B m
+
¨)¨)n o
	ParLevel1
¨)¨)p y
.
¨)¨)y z
Id
¨)¨)z |
+
¨)¨)} ~
$str¨)¨) ê
+¨)¨)ë í
p¨)¨)ì î
+¨)¨)ï ñ
$str¨)¨)ó ù
+¨)¨)û ü
s¨)¨)† °
+¨)¨)¢ £
$str¨)¨)§ ≤
+¨)¨)≥ ¥
	ParLevel1¨)¨)µ æ
.¨)¨)æ ø
Id¨)¨)ø ¡
+¨)¨)¬ √
$str¨)¨)ƒ »
+¨)¨)…  

CommonData¨)¨)À ’
.¨)¨)’ ÷
getResource¨)¨)÷ ·
(¨)¨)· ‚
$str¨)¨)‚ Ò
)¨)¨)Ò Ú
.¨)¨)Ú Û
Value¨)¨)Û ¯
.¨)¨)¯ ˘
ToString¨)¨)˘ Å
(¨)¨)Å Ç
)¨)¨)Ç É
+¨)¨)Ñ Ö
$str¨)¨)Ü û
;¨)¨)û ü(
painelLevel3HeaderListHtml
≠)≠)$ >
+=
≠)≠)? A
$str
≠)≠)B m
+
≠)≠)n o
	ParLevel1
≠)≠)p y
.
≠)≠)y z
Id
≠)≠)z |
+
≠)≠)} ~
$str≠)≠) ê
+≠)≠)ë í
p≠)≠)ì î
+≠)≠)ï ñ
$str≠)≠)ó ù
+≠)≠)û ü
s≠)≠)† °
+≠)≠)¢ £
$str≠)≠)§ ≤
+≠)≠)≥ ¥
	ParLevel1≠)≠)µ æ
.≠)≠)æ ø
Id≠)≠)ø ¡
+≠)≠)¬ √
$str≠)≠)ƒ »
+≠)≠)…  

CommonData≠)≠)À ’
.≠)≠)’ ÷
getResource≠)≠)÷ ·
(≠)≠)· ‚
$str≠)≠)‚ ¯
)≠)≠)¯ ˘
.≠)≠)˘ ˙
Value≠)≠)˙ ˇ
.≠)≠)ˇ Ä
ToString≠)≠)Ä à
(≠)≠)à â
)≠)≠)â ä
+≠)≠)ã å
$str≠)≠)ç •
;≠)≠)• ¶
if
Ø)Ø)$ &
(
Ø)Ø)' (
(
Ø)Ø)( )
GlobalConfig
Ø)Ø)) 5
.
Ø)Ø)5 6
Eua
Ø)Ø)6 9
||
Ø)Ø): <
GlobalConfig
Ø)Ø)= I
.
Ø)Ø)I J
Canada
Ø)Ø)J P
)
Ø)Ø)P Q
&&
Ø)Ø)R T
	ParLevel1
Ø)Ø)U ^
.
Ø)Ø)^ _
Id
Ø)Ø)_ a
==
Ø)Ø)b d
$num
Ø)Ø)e g
)
Ø)Ø)g h(
painelLevel3HeaderListHtml
∞)∞)( B
+=
∞)∞)C E
$str
∞)∞)F q
+
∞)∞)r s
	ParLevel1
∞)∞)t }
.
∞)∞)} ~
Id∞)∞)~ Ä
+∞)∞)Å Ç
$str∞)∞)É î
+∞)∞)ï ñ
p∞)∞)ó ò
+∞)∞)ô ö
$str∞)∞)õ °
+∞)∞)¢ £
s∞)∞)§ •
+∞)∞)¶ ß
$str∞)∞)® ∂
+∞)∞)∑ ∏
	ParLevel1∞)∞)π ¬
.∞)∞)¬ √
Id∞)∞)√ ≈
+∞)∞)∆ «
$str∞)∞)» Ã
+∞)∞)Õ Œ

CommonData∞)∞)œ Ÿ
.∞)∞)Ÿ ⁄
getResource∞)∞)⁄ Â
(∞)∞)Â Ê
$str∞)∞)Ê ˙
)∞)∞)˙ ˚
.∞)∞)˚ ¸
Value∞)∞)¸ Å
.∞)∞)Å Ç
ToString∞)∞)Ç ä
(∞)∞)ä ã
)∞)∞)ã å
+∞)∞)ç é
$str∞)∞)è ß
;∞)∞)ß ®
}
±)±)  !
}
≥)≥) 
}
¥)¥) 
}
µ)µ) 
}
∂)∂) 
painellevel3
∏)∏) 
=
∏)∏) 
html
∏)∏) #
.
∏)∏)# $
listgroupItem
∏)∏)$ 1
(
∏)∏)1 2
	outerhtml
∏)∏)2 ;
:
∏)∏); <

avaliacoes
∏)∏)= G
+
∏)∏)H I
amostras
π)π)= E
+
π)π)F G
defeitos
∫)∫)= E
+
∫)∫)F G(
painelLevel3HeaderListHtml
ª)ª)= W
,
ª)ª)W X
classe
º)º)2 8
:
º)º)8 9
$str
º)º): T
)
º)º)T U
+
º)º)V W
html
Ω)Ω) "
.
Ω)Ω)" #
painelCounters
Ω)Ω)# 1
(
Ω)Ω)1 2
listCounter
Ω)Ω)2 =
)
Ω)Ω)= >
;
Ω)Ω)> ?
var
¡)¡) 
botoesTodos
¡)¡) 
=
¡)¡)  !
$str
¡)¡)" $
;
¡)¡)$ %
if
¬)¬) 
(
¬)¬) 
GlobalConfig
¬)¬)  
.
¬)¬)  !
Brasil
¬)¬)! '
)
¬)¬)' (
{
√)√) 
botoesTodos
ƒ)ƒ) 
=
ƒ)ƒ)  !
$str
ƒ)ƒ)" x
+
ƒ)ƒ)y z
$str≈)≈)$ õ
;≈)≈)õ ú
}
∆)∆) 
string
»)») 
panelButton
»)») "
=
»)»)# $
html
»)»)% )
.
»)»)) *
listgroupItem
»)»)* 7
(
»)»)7 8
	outerhtml
…)…)8 A
:
…)…)A B
botoesTodos
…)…)C N
+
…)…)O P
accordeonbuttons
…)…)Q a
,
…)…)a b
classe
 ) )8 >
:
 ) )> ?
$str
 ) )@ L
)
À)À)4 5
;
À)À)5 6
if
Œ)Œ) 
(
Œ)Œ) 
!
Œ)Œ) 
string
Œ)Œ) 
.
Œ)Œ) 
IsNullOrEmpty
Œ)Œ) )
(
Œ)Œ)) *
parLevel3Group
Œ)Œ)* 8
)
Œ)Œ)8 9
&&
Œ)Œ): <
	ParLevel1
Œ)Œ)= F
.
Œ)Œ)F G
HasGroupLevel2
Œ)Œ)G U
!=
Œ)Œ)V X
true
Œ)Œ)Y ]
)
Œ)Œ)] ^
{
œ)œ) 
parLevel3Group
–)–) "
=
–)–)# $
html
–)–)% )
.
–)–)) *
div
–)–)* -
(
–)–)- .
classe
—)—)/ 5
:
—)—)5 6
$str
—)—)7 D
,
—)—)D E
tags
“)“)/ 3
:
“)“)3 4
$str
“)“)5 B
+
“)“)C D
	ParLevel1
“)“)E N
.
“)“)N O
Id
“)“)O Q
+
“)“)R S
$str
“)“)T d
+
“)“)e f
	ParLevel2
“)“)g p
.
“)“)p q
Id
“)“)q s
+
“)“)t u
$str
“)“)v z
,
“)“)z {
	outerhtml
”)”)/ 8
:
”)”)8 9
reauditFlag
”)”): E
+
”)”)F G
painellevel3
‘)‘): F
+
‘)‘)G H
panelButton
‘)‘)I T
+
‘)‘)U V
parLevel3Group
’)’): H
)
÷)÷)- .
;
÷)÷). /
}
◊)◊) 
return
ÿ)ÿ) 
parLevel3Group
ÿ)ÿ) %
;
ÿ)ÿ)% &
}
Ÿ)Ÿ) 
}
‹)‹) 	
public
Â)Â) 
string
Â)Â) 
getTipoInput
Â)Â) "
(
Â)Â)" #
SGQDBContext
Â)Â)# /
.
Â)Â)/ 0
	ParLevel3
Â)Â)0 9
	parLevel3
Â)Â): C
,
Â)Â)C D
ref
Â)Â)E H
string
Â)Â)I O

classInput
Â)Â)P Z
,
Â)Â)Z [
ref
Â)Â)\ _
string
Â)Â)` f
labels
Â)Â)g m
)
Â)Â)m n
{
Ê)Ê) 	
var
Á)Á) 
html
Á)Á) 
=
Á)Á) 
new
Á)Á) 
Html
Á)Á) 
(
Á)Á)  
)
Á)Á)  !
;
Á)Á)! "
string
Ë)Ë) 
input
Ë)Ë) 
=
Ë)Ë) 
null
Ë)Ë) 
;
Ë)Ë)  
if
È)È) 
(
È)È) 
	parLevel3
È)È) 
.
È)È) #
ParLevel3InputType_Id
È)È) /
==
È)È)0 2
$num
È)È)3 4
)
È)È)4 5
{
Í)Í) 

classInput
Î)Î) 
=
Î)Î) 
$str
Î)Î) '
;
Î)Î)' (
input
Ï)Ï) 
=
Ï)Ï) 
html
Ï)Ï) 
.
Ï)Ï) 
campoBinario
Ï)Ï) )
(
Ï)Ï)) *
	parLevel3
Ï)Ï)* 3
.
Ï)Ï)3 4
Id
Ï)Ï)4 6
.
Ï)Ï)6 7
ToString
Ï)Ï)7 ?
(
Ï)Ï)? @
)
Ï)Ï)@ A
,
Ï)Ï)A B
	parLevel3
Ï)Ï)C L
.
Ï)Ï)L M$
ParLevel3BoolTrue_Name
Ï)Ï)M c
,
Ï)Ï)c d
	parLevel3
Ï)Ï)e n
.
Ï)Ï)n o&
ParLevel3BoolFalse_NameÏ)Ï)o Ü
)Ï)Ï)Ü á
;Ï)Ï)á à
}
Ì)Ì) 
else
Ó)Ó) 
if
Ó)Ó) 
(
Ó)Ó) 
	parLevel3
Ó)Ó) 
.
Ó)Ó) #
ParLevel3InputType_Id
Ó)Ó) 4
==
Ó)Ó)5 7
$num
Ó)Ó)8 9
)
Ó)Ó)9 :
{
Ô)Ô) 

classInput
)) 
=
)) 
$str
)) '
;
))' (
labels
Ò)Ò) 
=
Ò)Ò) 
html
Ò)Ò) 
.
Ò)Ò) 
div
Ò)Ò) !
(
Ò)Ò)! "
	outerhtml
Ú)Ú) $
:
Ú)Ú)$ %
$str
Ú)Ú)& 4
+
Ú)Ú)5 6
	parLevel3
Ú)Ú)7 @
.
Ú)Ú)@ A
IntervalMax
Ú)Ú)A L
.
Ú)Ú)L M
ToString
Ú)Ú)M U
(
Ú)Ú)U V
$str
Ú)Ú)V [
)
Ú)Ú)[ \
,
Ú)Ú)\ ]
classe
Û)Û) !
:
Û)Û)! "
$str
Û)Û)# .
,
Û)Û). /
style
ı)ı)  
:
ı)ı)  !
$str
ı)ı)" 7
)
ˆ)ˆ) 
;
ˆ)ˆ) 
input
¯)¯) 
=
¯)¯) 
html
¯)¯) 
.
¯)¯) #
campoNumeroDeDefeitos
¯)¯) 2
(
¯)¯)2 3
id
¯)¯)3 5
:
¯)¯)5 6
	parLevel3
¯)¯)7 @
.
¯)¯)@ A
Id
¯)¯)A C
.
¯)¯)C D
ToString
¯)¯)D L
(
¯)¯)L M
)
¯)¯)M N
,
¯)¯)N O
intervalMin
˘)˘)0 ;
:
˘)˘); <
	parLevel3
˘)˘)= F
.
˘)˘)F G
IntervalMin
˘)˘)G R
,
˘)˘)R S
intervalMax
˙)˙)0 ;
:
˙)˙); <
	parLevel3
˙)˙)= F
.
˙)˙)F G
IntervalMax
˙)˙)G R
,
˙)˙)R S
unitName
˚)˚)0 8
:
˚)˚)8 9
	parLevel3
˚)˚): C
.
˚)˚)C D%
ParMeasurementUnit_Name
˚)˚)D [
)
˚)˚)[ \
;
˚)˚)\ ]
}
¸)¸) 
else
˝)˝) 
if
˝)˝) 
(
˝)˝) 
	parLevel3
˝)˝) 
.
˝)˝) #
ParLevel3InputType_Id
˝)˝) 4
==
˝)˝)5 7
$num
˝)˝)8 9
)
˝)˝)9 :
{
˛)˛) 

classInput
ˇ)ˇ) 
=
ˇ)ˇ) 
$str
ˇ)ˇ) (
;
ˇ)ˇ)( )
labels
Ä*Ä* 
=
Ä*Ä* 
html
Ä*Ä* 
.
Ä*Ä* 
div
Ä*Ä* !
(
Ä*Ä*! "
	outerhtml
Å*Å*+ 4
:
Å*Å*4 5
$str
Å*Å*6 D
+
Å*Å*E F
	parLevel3
Å*Å*G P
.
Å*Å*P Q
IntervalMin
Å*Å*Q \
.
Å*Å*\ ]
ToString
Å*Å*] e
(
Å*Å*e f
$str
Å*Å*f k
)
Å*Å*k l
+
Å*Å*m n
$strÅ*Å*o Ä
+Å*Å*Å Ç
	parLevel3Å*Å*É å
.Å*Å*å ç
IntervalMaxÅ*Å*ç ò
.Å*Å*ò ô
ToStringÅ*Å*ô °
(Å*Å*° ¢
$strÅ*Å*¢ ß
)Å*Å*ß ®
+Å*Å*© ™
$strÅ*Å*´ Æ
+Å*Å*Ø ∞
	parLevel3Å*Å*± ∫
.Å*Å*∫ ª'
ParMeasurementUnit_NameÅ*Å*ª “
,Å*Å*“ ”
classe
Ç*Ç*+ 1
:
Ç*Ç*1 2
$str
Ç*Ç*3 >
)
Ñ*Ñ*' (
;
Ñ*Ñ*( )
input
Ü*Ü* 
=
Ü*Ü* 
html
Ü*Ü* 
.
Ü*Ü* 
campoIntervalo
Ü*Ü* +
(
Ü*Ü*+ ,
id
Ü*Ü*, .
:
Ü*Ü*. /
	parLevel3
Ü*Ü*0 9
.
Ü*Ü*9 :
Id
Ü*Ü*: <
.
Ü*Ü*< =
ToString
Ü*Ü*= E
(
Ü*Ü*E F
)
Ü*Ü*F G
,
Ü*Ü*G H
intervalMin
á*á*0 ;
:
á*á*; <
	parLevel3
á*á*= F
.
á*á*F G
IntervalMin
á*á*G R
,
á*á*R S
intervalMax
à*à*0 ;
:
à*à*; <
	parLevel3
à*à*= F
.
à*à*F G
IntervalMax
à*à*G R
,
à*à*R S
unitName
â*â*0 8
:
â*â*8 9
	parLevel3
â*â*: C
.
â*â*C D%
ParMeasurementUnit_Name
â*â*D [
)
â*â*[ \
;
â*â*\ ]
}
ä*ä* 
else
ã*ã* 
if
ã*ã* 
(
ã*ã* 
	parLevel3
ã*ã* 
.
ã*ã* #
ParLevel3InputType_Id
ã*ã* 4
==
ã*ã*5 7
$num
ã*ã*8 9
)
ã*ã*9 :
{
å*å* 

classInput
ç*ç* 
=
ç*ç* 
$str
ç*ç* )
;
ç*ç*) *
var
è*è* 
intervalMin
è*è* 
=
è*è*  !
Guard
è*è*" '
.
è*è*' ($
ConverteValorCalculado
è*è*( >
(
è*è*> ?
	parLevel3
è*è*? H
.
è*è*H I
IntervalMin
è*è*I T
)
è*è*T U
;
è*è*U V
var
ê*ê* 
intervalMax
ê*ê* 
=
ê*ê*  !
Guard
ê*ê*" '
.
ê*ê*' ($
ConverteValorCalculado
ê*ê*( >
(
ê*ê*> ?
	parLevel3
ê*ê*? H
.
ê*ê*H I
IntervalMax
ê*ê*I T
)
ê*ê*T U
;
ê*ê*U V
labels
í*í* 
=
í*í* 
html
í*í* 
.
í*í* 
div
í*í* !
(
í*í*! "
	outerhtml
ì*ì*+ 4
:
ì*ì*4 5
$str
ì*ì*6 E
+
ì*ì*F G
Guard
ì*ì*H M
.
ì*ì*M N$
ConverteValorCalculado
ì*ì*N d
(
ì*ì*d e
	parLevel3
ì*ì*e n
.
ì*ì*n o
IntervalMin
ì*ì*o z
)
ì*ì*z {
+
ì*ì*| }
$strì*ì*~ è
+ì*ì*ê ë
Guardì*ì*í ó
.ì*ì*ó ò&
ConverteValorCalculadoì*ì*ò Æ
(ì*ì*Æ Ø
	parLevel3ì*ì*Ø ∏
.ì*ì*∏ π
IntervalMaxì*ì*π ƒ
)ì*ì*ƒ ≈
+ì*ì*∆ «
$strì*ì*» À
+ì*ì*Ã Õ
	parLevel3ì*ì*Œ ◊
.ì*ì*◊ ÿ'
ParMeasurementUnit_Nameì*ì*ÿ Ô
,ì*ì*Ô 
classe
î*î*+ 1
:
î*î*1 2
$str
î*î*3 >
)
ñ*ñ*' (
;
ñ*ñ*( )
input
ò*ò* 
=
ò*ò* 
html
ò*ò* 
.
ò*ò* 
campoCalculado
ò*ò* +
(
ò*ò*+ ,
id
ò*ò*, .
:
ò*ò*. /
	parLevel3
ò*ò*0 9
.
ò*ò*9 :
Id
ò*ò*: <
.
ò*ò*< =
ToString
ò*ò*= E
(
ò*ò*E F
)
ò*ò*F G
,
ò*ò*G H
intervalMin
ô*ô*0 ;
:
ô*ô*; <
	parLevel3
ô*ô*= F
.
ô*ô*F G
IntervalMin
ô*ô*G R
,
ô*ô*R S
intervalMax
ö*ö*0 ;
:
ö*ö*; <
	parLevel3
ö*ö*= F
.
ö*ö*F G
IntervalMax
ö*ö*G R
,
ö*ö*R S
unitName
õ*õ*0 8
:
õ*õ*8 9
	parLevel3
õ*õ*: C
.
õ*õ*C D%
ParMeasurementUnit_Name
õ*õ*D [
)
õ*õ*[ \
;
õ*õ*\ ]
}
ú*ú* 
else
ù*ù* 
if
ù*ù* 
(
ù*ù* 
	parLevel3
ù*ù* 
.
ù*ù* #
ParLevel3InputType_Id
ù*ù* 4
==
ù*ù*5 7
$num
ù*ù*8 9
)
ù*ù*9 :
{
û*û* 

classInput
ü*ü* 
=
ü*ü* 
$str
ü*ü* 5
;
ü*ü*5 6
labels
†*†* 
=
†*†* 
html
†*†* 
.
†*†* 
div
†*†* !
(
†*†*! "
	outerhtml
°*°*+ 4
:
°*°*4 5
$str
°*°*6 8
,
°*°*8 9
classe
¢*¢*+ 1
:
¢*¢*1 2
$str
¢*¢*3 >
)
§*§*' (
;
§*§*( )
input
¶*¶* 
=
¶*¶* 
html
¶*¶* 
.
¶*¶* 

campoTexto
¶*¶* '
(
¶*¶*' (
id
¶*¶*( *
:
¶*¶** +
	parLevel3
¶*¶*, 5
.
¶*¶*5 6
Id
¶*¶*6 8
.
¶*¶*8 9
ToString
¶*¶*9 A
(
¶*¶*A B
)
¶*¶*B C
)
¶*¶*C D
;
¶*¶*D E
}
ß*ß* 
else
®*®* 
{
©*©* 

classInput
´*´* 
=
´*´* 
$str
´*´* (
;
´*´*( )
labels
≠*≠* 
=
≠*≠* 
html
≠*≠* 
.
≠*≠* 
div
≠*≠* !
(
≠*≠*! "
	outerhtml
Æ*Æ*$ -
:
Æ*Æ*- .
$str
Æ*Æ*/ =
+
Æ*Æ*> ?
	parLevel3
Æ*Æ*@ I
.
Æ*Æ*I J
IntervalMin
Æ*Æ*J U
.
Æ*Æ*U V
ToString
Æ*Æ*V ^
(
Æ*Æ*^ _
$str
Æ*Æ*_ d
)
Æ*Æ*d e
+
Æ*Æ*f g
$str
Æ*Æ*h y
+
Æ*Æ*z {
	parLevel3Æ*Æ*| Ö
.Æ*Æ*Ö Ü
IntervalMaxÆ*Æ*Ü ë
.Æ*Æ*ë í
ToStringÆ*Æ*í ö
(Æ*Æ*ö õ
$strÆ*Æ*õ †
)Æ*Æ*† °
+Æ*Æ*¢ £
$strÆ*Æ*§ ß
+Æ*Æ*® ©
	parLevel3Æ*Æ*™ ≥
.Æ*Æ*≥ ¥'
ParMeasurementUnit_NameÆ*Æ*¥ À
,Æ*Æ*À Ã
classe
Ø*Ø*$ *
:
Ø*Ø** +
$str
Ø*Ø*, 7
)
±*±*  !
;
±*±*! "
input
≥*≥* 
=
≥*≥* 
html
≥*≥* 
.
≥*≥* 
campoIntervalo
≥*≥* +
(
≥*≥*+ ,
id
≥*≥*, .
:
≥*≥*. /
	parLevel3
≥*≥*0 9
.
≥*≥*9 :
Id
≥*≥*: <
.
≥*≥*< =
ToString
≥*≥*= E
(
≥*≥*E F
)
≥*≥*F G
,
≥*≥*G H
intervalMin
¥*¥*0 ;
:
¥*¥*; <
	parLevel3
¥*¥*= F
.
¥*¥*F G
IntervalMin
¥*¥*G R
,
¥*¥*R S
intervalMax
µ*µ*0 ;
:
µ*µ*; <
	parLevel3
µ*µ*= F
.
µ*µ*F G
IntervalMax
µ*µ*G R
,
µ*µ*R S
unitName
∂*∂*0 8
:
∂*∂*8 9
	parLevel3
∂*∂*: C
.
∂*∂*C D%
ParMeasurementUnit_Name
∂*∂*D [
)
∂*∂*[ \
;
∂*∂*\ ]
}
∑*∑* 
return
∏*∏* 
input
∏*∏* 
;
∏*∏* 
}
π*π* 	
public
∫*∫* 
string
∫*∫* 
getTipoInputBEA
∫*∫* %
(
∫*∫*% &
SGQDBContext
∫*∫*& 2
.
∫*∫*2 3
	ParLevel3
∫*∫*3 <
	parLevel3
∫*∫*= F
,
∫*∫*F G
ref
∫*∫*H K
string
∫*∫*L R

classInput
∫*∫*S ]
,
∫*∫*] ^
ref
∫*∫*_ b
string
∫*∫*c i
labels
∫*∫*j p
)
∫*∫*p q
{
ª*ª* 	
var
º*º* 
html
º*º* 
=
º*º* 
new
º*º* 
Html
º*º* 
(
º*º*  
)
º*º*  !
;
º*º*! "
string
Ω*Ω* 
input
Ω*Ω* 
=
Ω*Ω* 
null
Ω*Ω* 
;
Ω*Ω*  

classInput
æ*æ* 
=
æ*æ* 
$str
æ*æ* #
;
æ*æ*# $
labels
ø*ø* 
=
ø*ø* 
html
ø*ø* 
.
ø*ø* 
div
ø*ø* 
(
ø*ø* 
)
¬*¬*# $
;
¬*¬*$ %
input
ƒ*ƒ* 
=
ƒ*ƒ* 
html
ƒ*ƒ* 
.
ƒ*ƒ* #
campoNumeroDeDefeitos
ƒ*ƒ* .
(
ƒ*ƒ*. /
id
ƒ*ƒ*/ 1
:
ƒ*ƒ*1 2
	parLevel3
ƒ*ƒ*3 <
.
ƒ*ƒ*< =
Id
ƒ*ƒ*= ?
.
ƒ*ƒ*? @
ToString
ƒ*ƒ*@ H
(
ƒ*ƒ*H I
)
ƒ*ƒ*I J
,
ƒ*ƒ*J K
intervalMin
≈*≈*, 7
:
≈*≈*7 8
	parLevel3
≈*≈*9 B
.
≈*≈*B C
IntervalMin
≈*≈*C N
,
≈*≈*N O
intervalMax
∆*∆*, 7
:
∆*∆*7 8
	parLevel3
∆*∆*9 B
.
∆*∆*B C
IntervalMax
∆*∆*C N
,
∆*∆*N O
unitName
«*«*, 4
:
«*«*4 5
	parLevel3
«*«*6 ?
.
«*«*? @%
ParMeasurementUnit_Name
«*«*@ W
)
«*«*W X
;
«*«*X Y
return
»*»* 
input
»*»* 
;
»*»* 
}
…*…* 	
public
∂+∂+ 
string
∂+∂+ 
GetLoginAPP
∂+∂+ !
(
∂+∂+! "
)
∂+∂+" #
{
∑+∑+ 	
var
∏+∏+ 
html
∏+∏+ 
=
∏+∏+ 
new
∏+∏+ 
Html
∏+∏+ 
(
∏+∏+  
)
∏+∏+  !
;
∏+∏+! "
string
π+π+ 
head
π+π+ 
=
π+π+ 
html
π+π+ 
.
π+π+ 
div
π+π+ "
(
π+π+" #
classe
π+π+# )
:
π+π+) *
$str
π+π++ 1
)
π+π+1 2
;
π+π+2 3
var
º+º+ 
ParConfSGQDB
º+º+ 
=
º+º+ 
new
º+º+ "
SGQDBContext
º+º+# /
.
º+º+/ 0
ParConfSGQContext
º+º+0 A
(
º+º+A B
db
º+º+B D
)
º+º+D E
;
º+º+E F
var
Ω+Ω+ 
configuracoes
Ω+Ω+ 
=
Ω+Ω+ 
ParConfSGQDB
Ω+Ω+  ,
.
Ω+Ω+, -
get
Ω+Ω+- 0
(
Ω+Ω+0 1
)
Ω+Ω+1 2
;
Ω+Ω+2 3
bool
√+√+ !
inputsDesabilitados
√+√+ $
=
√+√+% &
false
√+√+' ,
;
√+√+, -
string
≈+≈+ 

selectUnit
≈+≈+ 
=
≈+≈+ 
null
≈+≈+  $
;
≈+≈+$ %
if
∆+∆+ 
(
∆+∆+ 
configuracoes
∆+∆+ 
!=
∆+∆+  
null
∆+∆+! %
&&
∆+∆+& (
configuracoes
∆+∆+) 6
.
∆+∆+6 7
HaveUnitLogin
∆+∆+7 D
==
∆+∆+E G
true
∆+∆+H L
)
∆+∆+L M
{
«+«+ !
inputsDesabilitados
»+»+ #
=
»+»+$ %
true
»+»+& *
;
»+»+* +

selectUnit
 + + 
=
 + + 
html
 + + !
.
 + +! "
option
 + +" (
(
 + +( )
$str
 + +) ,
,
 + +, -
$str
 + +. 6
,
 + +6 7
tags
 + +8 <
:
 + +< =
$str
 + +> _
)
 + +_ `
;
 + +` a

selectUnit
À+À+ 
=
À+À+ 
html
À+À+ !
.
À+À+! "
select
À+À+" (
(
À+À+( )

selectUnit
À+À+) 3
,
À+À+3 4
$str
À+À+5 A
)
À+À+A B
;
À+À+B C
}
Ã+Ã+ 
string
—+—+ 

selectShit
—+—+ 
=
—+—+ 
null
—+—+  $
;
—+—+$ %
if
“+“+ 
(
“+“+ 
configuracoes
“+“+ 
!=
“+“+  
null
“+“+! %
&&
“+“+& (
configuracoes
“+“+) 6
.
“+“+6 7
HaveShitLogin
“+“+7 D
==
“+“+E G
true
“+“+H L
)
“+“+L M
{
”+”+ !
inputsDesabilitados
‘+‘+ #
=
‘+‘+$ %
true
‘+‘+& *
;
‘+‘+* +

selectShit
’+’+ 
=
’+’+ 
html
’+’+ !
.
’+’+! "
option
’+’+" (
(
’+’+( )
$str
’+’+) ,
,
’+’+, -

CommonData
’+’+. 8
.
’+’+8 9
getResource
’+’+9 D
(
’+’+D E
$str
’+’+E W
)
’+’+W X
.
’+’+X Y
Value
’+’+Y ^
.
’+’+^ _
ToString
’+’+_ g
(
’+’+g h
)
’+’+h i
)
’+’+i j
+
’+’+k l
html
÷+÷+ "
.
÷+÷+" #
option
÷+÷+# )
(
÷+÷+) *
$str
÷+÷+* -
,
÷+÷+- .

CommonData
÷+÷+/ 9
.
÷+÷+9 :
getResource
÷+÷+: E
(
÷+÷+E F
$str
÷+÷+F O
)
÷+÷+O P
.
÷+÷+P Q
Value
÷+÷+Q V
.
÷+÷+V W
ToString
÷+÷+W _
(
÷+÷+_ `
)
÷+÷+` a
)
÷+÷+a b
+
÷+÷+c d
html
◊+◊+ "
.
◊+◊+" #
option
◊+◊+# )
(
◊+◊+) *
$str
◊+◊+* -
,
◊+◊+- .

CommonData
◊+◊+/ 9
.
◊+◊+9 :
getResource
◊+◊+: E
(
◊+◊+E F
$str
◊+◊+F O
)
◊+◊+O P
.
◊+◊+P Q
Value
◊+◊+Q V
.
◊+◊+V W
ToString
◊+◊+W _
(
◊+◊+_ `
)
◊+◊+` a
)
◊+◊+a b
;
◊+◊+b c

selectShit
Ÿ+Ÿ+ 
=
Ÿ+Ÿ+ 
html
Ÿ+Ÿ+ !
.
Ÿ+Ÿ+! "
select
Ÿ+Ÿ+" (
(
Ÿ+Ÿ+( )

selectShit
Ÿ+Ÿ+) 3
,
Ÿ+Ÿ+3 4
id
Ÿ+Ÿ+5 7
:
Ÿ+Ÿ+7 8
$str
Ÿ+Ÿ+9 @
)
Ÿ+Ÿ+@ A
;
Ÿ+Ÿ+A B
}
⁄+⁄+ 
string
›+›+ 
selectUrlPreffix
›+›+ #
=
›+›+$ %
$str
›+›+& (
;
›+›+( )
string
‚+‚+ 
formOuterHtml
‚+‚+  
=
‚+‚+! "
html
‚+‚+# '
.
‚+‚+' (
head
‚+‚+( ,
(
‚+‚+, -
Html
‚+‚+- 1
.
‚+‚+1 2
h
‚+‚+2 3
.
‚+‚+3 4
h2
‚+‚+4 6
,
‚+‚+6 7
	outerhtml
‚+‚+8 A
:
‚+‚+A B

CommonData
‚+‚+C M
.
‚+‚+M N
getResource
‚+‚+N Y
(
‚+‚+Y Z
$str
‚+‚+Z a
)
‚+‚+a b
.
‚+‚+b c
Value
‚+‚+c h
.
‚+‚+h i
ToString
‚+‚+i q
(
‚+‚+q r
)
‚+‚+r s
)
‚+‚+s t
+
‚+‚+u v

selectUnit
„+„+" ,
+
„+„+- .

selectShit
‰+‰+" ,
+
‰+‰+- .
html
Â+Â+" &
.
Â+Â+& '
label
Â+Â+' ,
(
Â+Â+, -
labelfor
Â+Â+- 5
:
Â+Â+5 6
$str
Â+Â+7 F
,
Â+Â+F G
classe
Â+Â+H N
:
Â+Â+N O
$str
Â+Â+P Y
,
Â+Â+Y Z
	outerhtml
Â+Â+[ d
:
Â+Â+d e

CommonData
Â+Â+f p
.
Â+Â+p q
getResource
Â+Â+q |
(
Â+Â+| }
$strÂ+Â+} á
)Â+Â+á à
.Â+Â+à â
ValueÂ+Â+â é
.Â+Â+é è
ToStringÂ+Â+è ó
(Â+Â+ó ò
)Â+Â+ò ô
)Â+Â+ô ö
+Â+Â+õ ú
html
Ê+Ê+" &
.
Ê+Ê+& '
input
Ê+Ê+' ,
(
Ê+Ê+, -
id
Ê+Ê+- /
:
Ê+Ê+/ 0
$str
Ê+Ê+1 @
,
Ê+Ê+@ A
placeholder
Ê+Ê+B M
:
Ê+Ê+M N

CommonData
Ê+Ê+O Y
.
Ê+Ê+Y Z
getResource
Ê+Ê+Z e
(
Ê+Ê+e f
$str
Ê+Ê+f p
)
Ê+Ê+p q
.
Ê+Ê+q r
Value
Ê+Ê+r w
.
Ê+Ê+w x
ToStringÊ+Ê+x Ä
(Ê+Ê+Ä Å
)Ê+Ê+Å Ç
,Ê+Ê+Ç É
requiredÊ+Ê+Ñ å
:Ê+Ê+å ç
trueÊ+Ê+é í
,Ê+Ê+í ì
disabledÊ+Ê+î ú
:Ê+Ê+ú ù#
inputsDesabilitadosÊ+Ê+û ±
)Ê+Ê+± ≤
+Ê+Ê+≥ ¥
html
Á+Á+" &
.
Á+Á+& '
label
Á+Á+' ,
(
Á+Á+, -
labelfor
Á+Á+- 5
:
Á+Á+5 6
$str
Á+Á+7 F
,
Á+Á+F G
classe
Á+Á+H N
:
Á+Á+N O
$str
Á+Á+P Y
,
Á+Á+Y Z
	outerhtml
Á+Á+[ d
:
Á+Á+d e

CommonData
Á+Á+f p
.
Á+Á+p q
getResource
Á+Á+q |
(
Á+Á+| }
$strÁ+Á+} á
)Á+Á+á à
.Á+Á+à â
ValueÁ+Á+â é
.Á+Á+é è
ToStringÁ+Á+è ó
(Á+Á+ó ò
)Á+Á+ò ô
)Á+Á+ô ö
+Á+Á+õ ú
html
Ë+Ë+" &
.
Ë+Ë+& '
input
Ë+Ë+' ,
(
Ë+Ë+, -
type
Ë+Ë+- 1
:
Ë+Ë+1 2
Html
Ë+Ë+3 7
.
Ë+Ë+7 8
type
Ë+Ë+8 <
.
Ë+Ë+< =
password
Ë+Ë+= E
,
Ë+Ë+E F
id
Ë+Ë+G I
:
Ë+Ë+I J
$str
Ë+Ë+K Z
,
Ë+Ë+Z [
placeholder
Ë+Ë+\ g
:
Ë+Ë+g h

CommonData
Ë+Ë+i s
.
Ë+Ë+s t
getResource
Ë+Ë+t 
(Ë+Ë+ Ä
$strË+Ë+Ä ä
)Ë+Ë+ä ã
.Ë+Ë+ã å
ValueË+Ë+å ë
.Ë+Ë+ë í
ToStringË+Ë+í ö
(Ë+Ë+ö õ
)Ë+Ë+õ ú
,Ë+Ë+ú ù
requiredË+Ë+û ¶
:Ë+Ë+¶ ß
trueË+Ë+® ¨
,Ë+Ë+¨ ≠
disabledË+Ë+Æ ∂
:Ë+Ë+∂ ∑#
inputsDesabilitadosË+Ë+∏ À
)Ë+Ë+À Ã
;Ë+Ë+Ã Õ
if
È+È+ 
(
È+È+ 
GlobalConfig
È+È+ 
.
È+È+ 
Brasil
È+È+ #
==
È+È+$ &
true
È+È+' +
&&
È+È+, .
GlobalConfig
È+È+/ ;
.
È+È+; <
Ytoara
È+È+< B
==
È+È+C E
false
È+È+F K
&&
È+È+L N
GlobalConfig
È+È+O [
.
È+È+[ \
Guarani
È+È+\ c
==
È+È+d f
false
È+È+g l
)
È+È+l m
{
Í+Í+ 
formOuterHtml
Î+Î+ 
+=
Î+Î+  
html
Ï+Ï+ 
.
Ï+Ï+ 
button
Ï+Ï+ 
(
Ï+Ï+  
label
Ï+Ï+  %
:
Ï+Ï+% &

CommonData
Ï+Ï+' 1
.
Ï+Ï+1 2
getResource
Ï+Ï+2 =
(
Ï+Ï+= >
$str
Ï+Ï+> M
)
Ï+Ï+M N
.
Ï+Ï+N O
Value
Ï+Ï+O T
.
Ï+Ï+T U
ToString
Ï+Ï+U ]
(
Ï+Ï+] ^
)
Ï+Ï+^ _
,
Ï+Ï+_ `
id
Ï+Ï+a c
:
Ï+Ï+c d
$str
Ï+Ï+e v
,
Ï+Ï+v w
classe
Ï+Ï+x ~
:
Ï+Ï+~ 
$strÏ+Ï+Ä ™
,Ï+Ï+™ ´
dataloadingÏ+Ï+¨ ∑
:Ï+Ï+∑ ∏
$strÏ+Ï+π ê
+Ï+Ï+ë í

CommonDataÏ+Ï+ì ù
.Ï+Ï+ù û
getResourceÏ+Ï+û ©
(Ï+Ï+© ™
$strÏ+Ï+™ ∫
)Ï+Ï+∫ ª
.Ï+Ï+ª º
ValueÏ+Ï+º ¡
.Ï+Ï+¡ ¬
ToStringÏ+Ï+¬  
(Ï+Ï+  À
)Ï+Ï+À Ã
+Ï+Ï+Õ Œ
$strÏ+Ï+œ ÿ
)Ï+Ï+ÿ Ÿ
+Ï+Ï+⁄ €
html
Ì+Ì+ 
.
Ì+Ì+ 
button
Ì+Ì+ 
(
Ì+Ì+  
label
Ì+Ì+  %
:
Ì+Ì+% &

CommonData
Ì+Ì+' 1
.
Ì+Ì+1 2
getResource
Ì+Ì+2 =
(
Ì+Ì+= >
$str
Ì+Ì+> L
)
Ì+Ì+L M
.
Ì+Ì+M N
Value
Ì+Ì+N S
.
Ì+Ì+S T
ToString
Ì+Ì+T \
(
Ì+Ì+\ ]
)
Ì+Ì+] ^
,
Ì+Ì+^ _
id
Ì+Ì+` b
:
Ì+Ì+b c
$str
Ì+Ì+d t
,
Ì+Ì+t u
classe
Ì+Ì+v |
:
Ì+Ì+| }
$strÌ+Ì+~ Ø
,Ì+Ì+Ø ∞
dataloadingÌ+Ì+± º
:Ì+Ì+º Ω
$strÌ+Ì+æ ï
+Ì+Ì+ñ ó

CommonDataÌ+Ì+ò ¢
.Ì+Ì+¢ £
getResourceÌ+Ì+£ Æ
(Ì+Ì+Æ Ø
$strÌ+Ì+Ø ø
)Ì+Ì+ø ¿
.Ì+Ì+¿ ¡
ValueÌ+Ì+¡ ∆
.Ì+Ì+∆ «
ToStringÌ+Ì+« œ
(Ì+Ì+œ –
)Ì+Ì+– —
+Ì+Ì+“ ”
$strÌ+Ì+‘ ›
)Ì+Ì+› ﬁ
;Ì+Ì+ﬁ ﬂ
}
Ó+Ó+ 
else
Ô+Ô+ 
{
++ 
formOuterHtml
Ò+Ò+ 
+=
Ò+Ò+  
html
Ú+Ú+ 
.
Ú+Ú+ 
button
Ú+Ú+ 
(
Ú+Ú+  
label
Ú+Ú+  %
:
Ú+Ú+% &

CommonData
Ú+Ú+' 1
.
Ú+Ú+1 2
getResource
Ú+Ú+2 =
(
Ú+Ú+= >
$str
Ú+Ú+> E
)
Ú+Ú+E F
.
Ú+Ú+F G
Value
Ú+Ú+G L
.
Ú+Ú+L M
ToString
Ú+Ú+M U
(
Ú+Ú+U V
)
Ú+Ú+V W
,
Ú+Ú+W X
id
Ú+Ú+Y [
:
Ú+Ú+[ \
$str
Ú+Ú+] m
,
Ú+Ú+m n
classe
Ú+Ú+o u
:
Ú+Ú+u v
$strÚ+Ú+w °
,Ú+Ú+° ¢
dataloadingÚ+Ú+£ Æ
:Ú+Ú+Æ Ø
$strÚ+Ú+∞ á
+Ú+Ú+à â

CommonDataÚ+Ú+ä î
.Ú+Ú+î ï
getResourceÚ+Ú+ï †
(Ú+Ú+† °
$strÚ+Ú+° ±
)Ú+Ú+± ≤
.Ú+Ú+≤ ≥
ValueÚ+Ú+≥ ∏
.Ú+Ú+∏ π
ToStringÚ+Ú+π ¡
(Ú+Ú+¡ ¬
)Ú+Ú+¬ √
+Ú+Ú+ƒ ≈
$strÚ+Ú+∆ œ
)Ú+Ú+œ –
+Ú+Ú+— “
html
Û+Û+ 
.
Û+Û+ 
button
Û+Û+ 
(
Û+Û+  
label
Û+Û+  %
:
Û+Û+% &

CommonData
Û+Û+' 1
.
Û+Û+1 2
getResource
Û+Û+2 =
(
Û+Û+= >
$str
Û+Û+> M
)
Û+Û+M N
.
Û+Û+N O
Value
Û+Û+O T
.
Û+Û+T U
ToString
Û+Û+U ]
(
Û+Û+] ^
)
Û+Û+^ _
,
Û+Û+_ `
id
Û+Û+a c
:
Û+Û+c d
$str
Û+Û+e v
,
Û+Û+v w
classe
Û+Û+x ~
:
Û+Û+~ 
$strÛ+Û+Ä Ø
,Û+Û+Ø ∞
dataloadingÛ+Û+± º
:Û+Û+º Ω
$strÛ+Û+æ ï
+Û+Û+ñ ó

CommonDataÛ+Û+ò ¢
.Û+Û+¢ £
getResourceÛ+Û+£ Æ
(Û+Û+Æ Ø
$strÛ+Û+Ø ø
)Û+Û+ø ¿
.Û+Û+¿ ¡
ValueÛ+Û+¡ ∆
.Û+Û+∆ «
ToStringÛ+Û+« œ
(Û+Û+œ –
)Û+Û+– —
+Û+Û+“ ”
$strÛ+Û+‘ ›
)Û+Û+› ﬁ
;Û+Û+ﬁ ﬂ
}
Ù+Ù+ 
formOuterHtml
ı+ı+ 
+=
ı+ı+ 
html
ˆ+ˆ+" &
.
ˆ+ˆ+& '
div
ˆ+ˆ+' *
(
ˆ+ˆ+* +
id
ˆ+ˆ++ -
:
ˆ+ˆ+- .
$str
ˆ+ˆ+/ =
,
ˆ+ˆ+= >
classe
ˆ+ˆ+? E
:
ˆ+ˆ+E F
$str
ˆ+ˆ+G `
,
ˆ+ˆ+` a
tags
ˆ+ˆ+b f
:
ˆ+ˆ+f g
$str
ˆ+ˆ+h x
,
ˆ+ˆ+x y
	outerhtml
˜+˜++ 4
:
˜+˜+4 5
html
˜+˜+6 :
.
˜+˜+: ;
span
˜+˜+; ?
(
˜+˜+? @
classe
˜+˜+@ F
:
˜+˜+F G
$str
˜+˜+H Z
)
˜+˜+Z [
+
˜+˜+\ ]
$str
˜+˜+^ w
+
˜+˜+x y
html
˜+˜+z ~
.
˜+˜+~ 
span˜+˜+ É
(˜+˜+É Ñ
id˜+˜+Ñ Ü
:˜+˜+Ü á
$str˜+˜+à ñ
)˜+˜+ñ ó
)˜+˜+ó ò
+˜+˜+ô ö
html
˘+˘+" &
.
˘+˘+& '
div
˘+˘+' *
(
˘+˘+* +
classe
˘+˘++ 1
:
˘+˘+1 2
$str
˘+˘+3 A
,
˘+˘+A B
	outerhtml
˙+˙++ 4
:
˙+˙+4 5
html
˙+˙+6 :
.
˙+˙+: ;
span
˙+˙+; ?
(
˙+˙+? @
classe
˙+˙+@ F
:
˙+˙+F G
$str
˙+˙+H X
)
˙+˙+X Y
)
˙+˙+Y Z
+
˙+˙+[ \
html
¸+¸+" &
.
¸+¸+& '
div
¸+¸+' *
(
¸+¸+* +
id
¸+¸++ -
:
¸+¸+- .
$str
¸+¸+/ =
,
¸+¸+= >
classe
˝+˝++ 1
:
˝+˝+1 2
$str
˝+˝+3 J
,
˝+˝+J K
tags
˛+˛++ /
:
˛+˛+/ 0
$str
˛+˛+1 A
,
˛+˛+A B
	outerhtml
ˇ+ˇ++ 4
:
ˇ+ˇ+4 5
html
ˇ+ˇ+6 :
.
ˇ+ˇ+: ;
span
ˇ+ˇ+; ?
(
ˇ+ˇ+? @
id
ˇ+ˇ+@ B
:
ˇ+ˇ+B C
$str
ˇ+ˇ+D T
,
ˇ+ˇ+T U
classe
ˇ+ˇ+V \
:
ˇ+ˇ+\ ]
$str
ˇ+ˇ+^ n
)
ˇ+ˇ+n o
)
ˇ+ˇ+o p
+
ˇ+ˇ+q r
html
Å,Å," &
.
Å,Å,& '
div
Å,Å,' *
(
Å,Å,* +
id
Å,Å,+ -
:
Å,Å,- .
$str
Å,Å,/ ?
,
Å,Å,? @
classe
Ç,Ç,+ 1
:
Ç,Ç,1 2
$str
Ç,Ç,3 M
,
Ç,Ç,M N
tags
É,É,+ /
:
É,É,/ 0
$str
É,É,1 A
,
É,É,A B
	outerhtml
Ñ,Ñ,+ 4
:
Ñ,Ñ,4 5
html
Ñ,Ñ,6 :
.
Ñ,Ñ,: ;
span
Ñ,Ñ,; ?
(
Ñ,Ñ,? @
id
Ñ,Ñ,@ B
:
Ñ,Ñ,B C
$str
Ñ,Ñ,D U
,
Ñ,Ñ,U V
classe
Ñ,Ñ,W ]
:
Ñ,Ñ,] ^
$str
Ñ,Ñ,_ o
)
Ñ,Ñ,o p
)
Ñ,Ñ,p q
;
Ñ,Ñ,q r
string
à,à, 
form
à,à, 
=
à,à, 
html
à,à, 
.
à,à, 
form
à,à, #
(
à,à,# $
	outerhtml
â,â,$ -
:
â,â,- .
formOuterHtml
â,â,/ <
,
ä,ä,$ %
classe
ä,ä,& ,
:
ä,ä,, -
$str
ä,ä,. ;
)
ä,ä,; <
;
ä,ä,< =
string
ê,ê, 
local
ê,ê, 
=
ê,ê, 
$str
ê,ê, 
;
ê,ê, 
string
ë,ë, 
empresa
ë,ë, 
=
ë,ë, 
$str
ë,ë, 
;
ë,ë,  
if
ì,ì, 
(
ì,ì, 
GlobalConfig
ì,ì, 
.
ì,ì, 
Brasil
ì,ì, #
)
ì,ì,# $
{
î,î, 
local
ï,ï, 
=
ï,ï, 
$str
ï,ï,  
;
ï,ï,  !
}
ñ,ñ, 
if
ó,ó, 
(
ó,ó, 
GlobalConfig
ó,ó, 
.
ó,ó, 
Eua
ó,ó,  
)
ó,ó,  !
{
ò,ò, 
local
ô,ô, 
=
ô,ô, 
$str
ô,ô, 
;
ô,ô, 
}
ö,ö, 
if
õ,õ, 
(
õ,õ, 
GlobalConfig
õ,õ, 
.
õ,õ, 
Canada
õ,õ, #
)
õ,õ,# $
{
ú,ú, 
local
ù,ù, 
=
ù,ù, 
$str
ù,ù,  
;
ù,ù,  !
}
û,û, 
if
ü,ü, 
(
ü,ü, 
GlobalConfig
ü,ü, 
.
ü,ü, 
Guarani
ü,ü, $
)
ü,ü,$ %
{
†,†, 
empresa
°,°, 
=
°,°, 
$str
°,°, #
;
°,°,# $
}
¢,¢, 
if
£,£, 
(
£,£, 
GlobalConfig
£,£, 
.
£,£, 
Brasil
£,£, #
)
£,£,# $
{
§,§, 
empresa
•,•, 
=
•,•, 
$str
•,•, 
;
•,•,  
}
¶,¶, 
if
ß,ß, 
(
ß,ß, 
GlobalConfig
ß,ß, 
.
ß,ß, 
Ytoara
ß,ß, #
)
ß,ß,# $
{
®,®, 
empresa
©,©, 
=
©,©, 
$str
©,©, "
;
©,©," #
}
™,™, 
string
¨,¨, 
footOuterHtml
¨,¨,  
=
¨,¨,! "
html
¨,¨,# '
.
¨,¨,' (
br
¨,¨,( *
(
¨,¨,* +
)
¨,¨,+ ,
+
¨,¨,- .
html
≠,≠,# '
.
≠,≠,' (
br
≠,≠,( *
(
≠,≠,* +
)
≠,≠,+ ,
+
≠,≠,- .
html
Æ,Æ,# '
.
Æ,Æ,' (
br
Æ,Æ,( *
(
Æ,Æ,* +
)
Æ,Æ,+ ,
+
Æ,Æ,- .
html
Ø,Ø,# '
.
Ø,Ø,' (
span
Ø,Ø,( ,
(
Ø,Ø,, -
classe
Ø,Ø,- 3
:
Ø,Ø,3 4
$str
Ø,Ø,5 ;
,
Ø,Ø,; <
id
Ø,Ø,= ?
:
Ø,Ø,? @
$str
Ø,Ø,A H
,
Ø,Ø,H I
attr
Ø,Ø,J N
:
Ø,Ø,N O
$str
Ø,Ø,P \
+
Ø,Ø,] ^
empresa
Ø,Ø,_ f
+
Ø,Ø,g h
$str
Ø,Ø,i t
+
Ø,Ø,u v
local
Ø,Ø,w |
+
Ø,Ø,} ~
$strØ,Ø, Ç
)Ø,Ø,Ç É
+Ø,Ø,Ñ Ö
html
∞,∞,# '
.
∞,∞,' (
span
∞,∞,( ,
(
∞,∞,, -
	outerhtml
±,±,. 7
:
±,±,7 8

CommonData
±,±,9 C
.
±,±,C D
getResource
±,±,D O
(
±,±,O P
$str
±,±,P Y
)
±,±,Y Z
.
±,±,Z [
Value
±,±,[ `
.
±,±,` a
ToString
±,±,a i
(
±,±,i j
)
±,±,j k
+
±,±,l m
html
≤,≤,9 =
.
≤,≤,= >
span
≤,≤,> B
(
≤,≤,B C
classe
≤,≤,C I
:
≤,≤,I J
$str
≤,≤,K S
)
≤,≤,S T
,
≥,≥,- .
id
≥,≥,/ 1
:
≥,≥,1 2
$str
≥,≥,3 A
)
≥,≥,A B
+
≥,≥,C D
html
¥,¥,# '
.
¥,¥,' (
span
¥,¥,( ,
(
¥,¥,, -
	outerhtml
µ,µ,/ 8
:
µ,µ,8 9
html
µ,µ,: >
.
µ,µ,> ?
span
µ,µ,? C
(
µ,µ,C D
classe
µ,µ,D J
:
µ,µ,J K
$str
µ,µ,L R
)
µ,µ,R S
,
∂,∂,- .
id
∂,∂,/ 1
:
∂,∂,1 2
$str
∂,∂,3 B
)
∏,∏,, -
;
∏,∏,- .
string
∫,∫, 
foot
∫,∫, 
=
∫,∫, 
html
∫,∫, 
.
∫,∫, 
div
∫,∫, "
(
∫,∫," #
	outerhtml
ª,ª,$ -
:
ª,ª,- .
footOuterHtml
ª,ª,/ <
,
º,º,$ %
classe
º,º,& ,
:
º,º,, -
$str
º,º,. 4
,
º,º,4 5
style
º,º,6 ;
:
º,º,; <
$str
º,º,= P
)
º,º,P Q
;
º,º,Q R
return
¿,¿, 
html
¿,¿, 
.
¿,¿, 
div
¿,¿, 
(
¿,¿, 
	outerhtml
¡,¡,  )
:
¡,¡,) *
head
¡,¡,+ /
+
¡,¡,0 1
form
¬,¬,+ /
+
¬,¬,0 1
foot
√,√,+ /
,
≈,≈,  !
classe
≈,≈," (
:
≈,≈,( )
$str
≈,≈,* 1
)
∆,∆, 
;
∆,∆, 
}
«,«, 	
[
 , , 	
	WebMethod
 , ,	 
]
 , , 
public
À,À, 
string
À,À, 
getCompanyUsers
À,À, %
(
À,À,% &
string
À,À,& ,
ParCompany_Id
À,À,- :
)
À,À,: ;
{
Ã,Ã, 	
var
Õ,Õ, "
ParCompanyXUserSgqDB
Õ,Õ, $
=
Õ,Õ,% &
new
Õ,Õ,' *
SGQDBContext
Õ,Õ,+ 7
.
Õ,Õ,7 8 
ParCompanyXUserSgq
Õ,Õ,8 J
(
Õ,Õ,J K
db
Õ,Õ,K M
)
Õ,Õ,M N
;
Õ,Õ,N O
var
Œ,Œ, 
RolesXUserSgqDB
Œ,Œ, 
=
Œ,Œ,  !
new
Œ,Œ," %
SGQDBContext
Œ,Œ,& 2
.
Œ,Œ,2 3
RoleXUserSgq
Œ,Œ,3 ?
(
Œ,Œ,? @
db
Œ,Œ,@ B
)
Œ,Œ,B C
;
Œ,Œ,C D
var
–,–, 
users
–,–, 
=
–,–, "
ParCompanyXUserSgqDB
–,–, ,
.
–,–,, -
getCompanyUsers
–,–,- <
(
–,–,< =
Convert
–,–,= D
.
–,–,D E
ToInt32
–,–,E L
(
–,–,L M
ParCompany_Id
–,–,M Z
)
–,–,Z [
)
–,–,[ \
;
–,–,\ ]
var
—,—, 
html
—,—, 
=
—,—, 
new
—,—, 
Html
—,—, 
(
—,—,  
)
—,—,  !
;
—,—,! "
string
”,”, 
	usersList
”,”, 
=
”,”, 
null
”,”, #
;
”,”,# $
foreach
‘,‘, 
(
‘,‘, 
var
‘,‘, 
user
‘,‘, 
in
‘,‘,  
users
‘,‘,! &
)
‘,‘,& '
{
’,’, 
string
÷,÷, 
Password
÷,÷, 
=
÷,÷,  !
user
÷,÷," &
.
÷,÷,& '
UserSGQ_Pass
÷,÷,' 3
;
÷,÷,3 4
var
⁄,⁄, 
roles
⁄,⁄, 
=
⁄,⁄, 
RolesXUserSgqDB
⁄,⁄, +
.
⁄,⁄,+ ,
getRoles
⁄,⁄,, 4
(
⁄,⁄,4 5
Convert
⁄,⁄,5 <
.
⁄,⁄,< =
ToInt32
⁄,⁄,= D
(
⁄,⁄,D E
user
⁄,⁄,E I
.
⁄,⁄,I J

UserSGQ_Id
⁄,⁄,J T
)
⁄,⁄,T U
,
⁄,⁄,U V
Convert
⁄,⁄,W ^
.
⁄,⁄,^ _
ToInt32
⁄,⁄,_ f
(
⁄,⁄,f g
ParCompany_Id
⁄,⁄,g t
)
⁄,⁄,t u
)
⁄,⁄,u v
;
⁄,⁄,v w
	usersList
‹,‹, 
+=
‹,‹, 
html
‹,‹, !
.
‹,‹,! "
user
‹,‹," &
(
‹,‹,& '
user
‹,‹,' +
.
‹,‹,+ ,

UserSGQ_Id
‹,‹,, 6
,
‹,‹,6 7
user
‹,‹,8 <
.
‹,‹,< =
UserSGQ_Name
‹,‹,= I
,
‹,‹,I J
user
‹,‹,K O
.
‹,‹,O P
UserSGQ_Login
‹,‹,P ]
,
‹,‹,] ^
Password
‹,‹,_ g
,
‹,‹,g h
user
‹,‹,i m
.
‹,‹,m n
Role
‹,‹,n r
,
‹,‹,r s
user
‹,‹,t x
.
‹,‹,x y
ParCompany_Id‹,‹,y Ü
,‹,‹,Ü á
user‹,‹,à å
.‹,‹,å ç
ParCompany_Name‹,‹,ç ú
,‹,‹,ú ù
roles‹,‹,û £
)‹,‹,£ §
;‹,‹,§ •
}
ﬁ,ﬁ, 
return
ﬂ,ﬂ, 
	usersList
ﬂ,ﬂ, 
;
ﬂ,ﬂ, 
}
‡,‡, 	
[
·,·, 	
	WebMethod
·,·,	 
]
·,·, 
public
‚,‚, 
string
‚,‚, 
getUserCompanys
‚,‚, %
(
‚,‚,% &
string
‚,‚,& ,

UserSgq_Id
‚,‚,- 7
)
‚,‚,7 8
{
„,„, 	
var
‰,‰, "
ParCompanyXUserSgqDB
‰,‰, $
=
‰,‰,% &
new
‰,‰,' *
SGQDBContext
‰,‰,+ 7
.
‰,‰,7 8 
ParCompanyXUserSgq
‰,‰,8 J
(
‰,‰,J K
db
‰,‰,K M
)
‰,‰,M N
;
‰,‰,N O
var
Ê,Ê, 
users
Ê,Ê, 
=
Ê,Ê, "
ParCompanyXUserSgqDB
Ê,Ê, ,
.
Ê,Ê,, -
getUserCompany
Ê,Ê,- ;
(
Ê,Ê,; <
Convert
Ê,Ê,< C
.
Ê,Ê,C D
ToInt32
Ê,Ê,D K
(
Ê,Ê,K L

UserSgq_Id
Ê,Ê,L V
)
Ê,Ê,V W
)
Ê,Ê,W X
;
Ê,Ê,X Y
var
Á,Á, 
html
Á,Á, 
=
Á,Á, 
new
Á,Á, 
Html
Á,Á, 
(
Á,Á,  
)
Á,Á,  !
;
Á,Á,! "
string
È,È, 
	usersList
È,È, 
=
È,È, 
null
È,È, #
;
È,È,# $
foreach
Í,Í, 
(
Í,Í, 
var
Í,Í, 
user
Í,Í, 
in
Í,Í,  
users
Í,Í,! &
)
Í,Í,& '
{
Î,Î, 
string
Ï,Ï, 
Password
Ï,Ï, 
=
Ï,Ï,  !
user
Ï,Ï," &
.
Ï,Ï,& '
UserSGQ_Pass
Ï,Ï,' 3
;
Ï,Ï,3 4
	usersList
,, 
+=
,, 
html
,, !
.
,,! "
user
,," &
(
,,& '
user
,,' +
.
,,+ ,

UserSGQ_Id
,,, 6
,
,,6 7
user
,,8 <
.
,,< =
UserSGQ_Name
,,= I
,
,,I J
user
,,K O
.
,,O P
UserSGQ_Login
,,P ]
,
,,] ^
Password
,,_ g
,
,,g h
user
,,i m
.
,,m n
Role
,,n r
,
,,r s
user
,,t x
.
,,x y
ParCompany_Id,,y Ü
,,,Ü á
user,,à å
.,,å ç
ParCompany_Name,,ç ú
,,,ú ù
null,,û ¢
),,¢ £
;,,£ §
}
Ú,Ú, 
return
Û,Û, 
	usersList
Û,Û, 
;
Û,Û, 
}
Ù,Ù, 	
[
ı,ı, 	
	WebMethod
ı,ı,	 
]
ı,ı, 
public
ˆ,ˆ, 
string
ˆ,ˆ, 
UserSGQLogin
ˆ,ˆ, "
(
ˆ,ˆ," #
string
ˆ,ˆ,# )
UserName
ˆ,ˆ,* 2
,
ˆ,ˆ,2 3
string
ˆ,ˆ,4 :
Password
ˆ,ˆ,; C
)
ˆ,ˆ,C D
{
˜,˜, 	
var
¯,¯, 
	UserSGQDB
¯,¯, 
=
¯,¯, 
new
¯,¯, 
SGQDBContext
¯,¯,  ,
.
¯,¯,, -
UserSGQ
¯,¯,- 4
(
¯,¯,4 5
db
¯,¯,5 7
)
¯,¯,7 8
;
¯,¯,8 9
var
˘,˘, 
user
˘,˘, 
=
˘,˘, 
	UserSGQDB
˘,˘,  
.
˘,˘,  ! 
getUserByLoginOrId
˘,˘,! 3
(
˘,˘,3 4
	userLogin
˘,˘,4 =
:
˘,˘,= >
UserName
˘,˘,? G
.
˘,˘,G H
Trim
˘,˘,H L
(
˘,˘,L M
)
˘,˘,M N
)
˘,˘,N O
;
˘,˘,O P
var
˝,˝, 
html
˝,˝, 
=
˝,˝, 
new
˝,˝, 
Html
˝,˝, 
(
˝,˝,  
)
˝,˝,  !
;
˝,˝,! "
if
Ç-Ç- 
(
Ç-Ç- 
user
Ç-Ç- 
!=
Ç-Ç- 
null
Ç-Ç- 
&&
Ç-Ç- 
user
Ç-Ç-  $
.
Ç-Ç-$ %
Password
Ç-Ç-% -
==
Ç-Ç-. 0
Password
Ç-Ç-1 9
)
Ç-Ç-9 :
{
É-É- 
if
à-à- 
(
à-à- 
user
à-à- 
.
à-à- 
ParCompany_Id
à-à- &
==
à-à-' )
$num
à-à-* +
)
à-à-+ ,
{
â-â- 
return
ä-ä- 
$str
ä-ä- >
;
ä-ä-> ?
}
ã-ã- 
return
é-é- 
html
é-é- 
.
é-é- 
user
é-é-  
(
é-é-  !
user
é-é-! %
.
é-é-% &
Id
é-é-& (
,
é-é-( )
user
é-é-* .
.
é-é-. /
Name
é-é-/ 3
,
é-é-3 4
user
é-é-5 9
.
é-é-9 :
Login
é-é-: ?
,
é-é-? @
Password
é-é-A I
,
é-é-I J
user
é-é-K O
.
é-é-O P
Role
é-é-P T
,
é-é-T U
user
é-é-V Z
.
é-é-Z [
ParCompany_Id
é-é-[ h
,
é-é-h i
user
é-é-j n
.
é-é-n o
ParCompany_Name
é-é-o ~
,
é-é-~ 
nullé-é-Ä Ñ
)é-é-Ñ Ö
;é-é-Ö Ü
}
è-è- 
else
ê-ê- 
{
ë-ë- 
return
í-í- 
$str
í-í- 3
;
í-í-3 4
}
ì-ì- 
}
ï-ï- 	
[
ñ-ñ- 	
	WebMethod
ñ-ñ-	 
]
ñ-ñ- 
public
ó-ó- 
string
ó-ó- 
UserSGQById
ó-ó- !
(
ó-ó-! "
int
ó-ó-" %
Id
ó-ó-& (
)
ó-ó-( )
{
ò-ò- 	
var
ô-ô- 
	UserSGQDB
ô-ô- 
=
ô-ô- 
new
ô-ô- 
SGQDBContext
ô-ô-  ,
.
ô-ô-, -
UserSGQ
ô-ô-- 4
(
ô-ô-4 5
db
ô-ô-5 7
)
ô-ô-7 8
;
ô-ô-8 9
var
ö-ö- 
user
ö-ö- 
=
ö-ö- 
	UserSGQDB
ö-ö-  
.
ö-ö-  ! 
getUserByLoginOrId
ö-ö-! 3
(
ö-ö-3 4
id
ö-ö-4 6
:
ö-ö-6 7
Id
ö-ö-8 :
)
ö-ö-: ;
;
ö-ö-; <
var
ú-ú- 
html
ú-ú- 
=
ú-ú- 
new
ú-ú- 
Html
ú-ú- 
(
ú-ú-  
)
ú-ú-  !
;
ú-ú-! "
if
ù-ù- 
(
ù-ù- 
user
ù-ù- 
!=
ù-ù- 
null
ù-ù- 
)
ù-ù- 
{
û-û- 
string
ü-ü- 
Password
ü-ü- 
=
ü-ü-  !
user
ü-ü-" &
.
ü-ü-& '
Password
ü-ü-' /
;
ü-ü-/ 0
return
¢-¢- 
html
¢-¢- 
.
¢-¢- 
user
¢-¢-  
(
¢-¢-  !
user
¢-¢-! %
.
¢-¢-% &
Id
¢-¢-& (
,
¢-¢-( )
user
¢-¢-* .
.
¢-¢-. /
Name
¢-¢-/ 3
,
¢-¢-3 4
user
¢-¢-5 9
.
¢-¢-9 :
Login
¢-¢-: ?
,
¢-¢-? @
Password
¢-¢-A I
,
¢-¢-I J
user
¢-¢-K O
.
¢-¢-O P
Role
¢-¢-P T
,
¢-¢-T U
user
¢-¢-V Z
.
¢-¢-Z [
ParCompany_Id
¢-¢-[ h
,
¢-¢-h i
user
¢-¢-j n
.
¢-¢-n o
ParCompany_Name
¢-¢-o ~
,
¢-¢-~ 
null¢-¢-Ä Ñ
)¢-¢-Ñ Ö
;¢-¢-Ö Ü
}
£-£- 
return
•-•- 
$str
•-•- +
;
•-•-+ ,
}
¶-¶- 	
[
®-®- 	
	WebMethod
®-®-	 
]
®-®- 
public
©-©- 
string
©-©- 
insertDeviation
©-©- %
(
©-©-% &
string
©-©-& ,

deviations
©-©-- 7
)
©-©-7 8
{
™-™- 	
if
¨-¨- 
(
¨-¨- 
string
¨-¨- 
.
¨-¨- 
IsNullOrEmpty
¨-¨- $
(
¨-¨-$ %

deviations
¨-¨-% /
)
¨-¨-/ 0
)
¨-¨-0 1
{
≠-≠- 
return
Æ-Æ- 
null
Æ-Æ- 
;
Æ-Æ- 
}
Ø-Ø- 

deviations
π-π- 
=
π-π- 

deviations
π-π- #
.
π-π-# $
Replace
π-π-$ +
(
π-π-+ ,
$str
π-π-, E
,
π-π-E F
$str
π-π-G J
)
π-π-J K
.
π-π-K L
Replace
π-π-L S
(
π-π-S T
$str
π-π-T a
,
π-π-a b
$str
π-π-c e
)
π-π-e f
.
π-π-f g
Replace
π-π-g n
(
π-π-n o
$str
π-π-o }
,
π-π-} ~
$strπ-π- Å
)π-π-Å Ç
;π-π-Ç É
var
∫-∫- 
arrayDeviations
∫-∫- 
=
∫-∫-  !

deviations
∫-∫-" ,
.
∫-∫-, -
Split
∫-∫-- 2
(
∫-∫-2 3
$char
∫-∫-3 6
)
∫-∫-6 7
;
∫-∫-7 8
string
Ω-Ω- 
sql
Ω-Ω- 
=
Ω-Ω- 
null
Ω-Ω- 
;
Ω-Ω- 
for
æ-æ- 
(
æ-æ- 
int
æ-æ- 
i
æ-æ- 
=
æ-æ- 
$num
æ-æ- 
;
æ-æ- 
i
æ-æ- 
<
æ-æ- 
arrayDeviations
æ-æ-  /
.
æ-æ-/ 0
Length
æ-æ-0 6
;
æ-æ-6 7
i
æ-æ-8 9
++
æ-æ-9 ;
)
æ-æ-; <
{
ø-ø- 
string
¿-¿- 
[
¿-¿- 
]
¿-¿- 
	deviation
¿-¿- "
=
¿-¿-# $
arrayDeviations
¿-¿-% 4
[
¿-¿-4 5
i
¿-¿-5 6
]
¿-¿-6 7
.
¿-¿-7 8
Split
¿-¿-8 =
(
¿-¿-= >
$char
¿-¿-> A
)
¿-¿-A B
;
¿-¿-B C
string
¬-¬- 
ParCompany_Id
¬-¬- $
=
¬-¬-% &
	deviation
¬-¬-' 0
[
¬-¬-0 1
$num
¬-¬-1 2
]
¬-¬-2 3
;
¬-¬-3 4
string
√-√- 
ParLevel1_Id
√-√- #
=
√-√-$ %
	deviation
√-√-& /
[
√-√-/ 0
$num
√-√-0 1
]
√-√-1 2
;
√-√-2 3
string
ƒ-ƒ- 
ParLevel2_Id
ƒ-ƒ- #
=
ƒ-ƒ-$ %
	deviation
ƒ-ƒ-& /
[
ƒ-ƒ-/ 0
$num
ƒ-ƒ-0 1
]
ƒ-ƒ-1 2
;
ƒ-ƒ-2 3
string
≈-≈- 

Evaluation
≈-≈- !
=
≈-≈-" #
	deviation
≈-≈-$ -
[
≈-≈-- .
$num
≈-≈-. /
]
≈-≈-/ 0
;
≈-≈-0 1
if
«-«- 
(
«-«- 

Evaluation
«-«- 
==
«-«-  
$str
«-«-! ,
)
«-«-, -
{
»-»- 

Evaluation
…-…- 
=
…-…-  
$str
…-…-! $
;
…-…-$ %
}
 - - 
string
Ã-Ã- 
Sample
Ã-Ã- 
=
Ã-Ã- 
	deviation
Ã-Ã-  )
[
Ã-Ã-) *
$num
Ã-Ã-* +
]
Ã-Ã-+ ,
;
Ã-Ã-, -
if
Œ-Œ- 
(
Œ-Œ- 
Sample
Œ-Œ- 
==
Œ-Œ- 
$str
Œ-Œ- )
)
Œ-Œ-) *
{
œ-œ- 
Sample
–-–- 
=
–-–- 
$str
–-–-  
;
–-–-  !
}
—-—- 
string
“-“- 
alertNumber
“-“- "
=
“-“-# $
	deviation
“-“-% .
[
“-“-. /
$num
“-“-/ 0
]
“-“-0 1
;
“-“-1 2
string
”-”- 
defects
”-”- 
=
”-”-  
	deviation
”-”-! *
[
”-”-* +
$num
”-”-+ ,
]
”-”-, -
;
”-”-- .
string
‘-‘- 
deviationDate
‘-‘- $
=
‘-‘-% &
	deviation
‘-‘-' 0
[
‘-‘-0 1
$num
‘-‘-1 2
]
‘-‘-2 3
;
‘-‘-3 4
string
’-’- 
deviationMessage
’-’- '
=
’-’-( )
	deviation
’-’-* 3
[
’-’-3 4
$num
’-’-4 5
]
’-’-5 6
;
’-’-6 7
if
÷-÷- 
(
÷-÷- 
string
÷-÷- 
.
÷-÷- 
IsNullOrEmpty
÷-÷- (
(
÷-÷-( )
deviationMessage
÷-÷-) 9
)
÷-÷-9 :
)
÷-÷-: ;
{
◊-◊- 
deviationMessage
ÿ-ÿ- $
=
ÿ-ÿ-% &
$str
ÿ-ÿ-' -
;
ÿ-ÿ-- .
}
Ÿ-Ÿ- 
else
⁄-⁄- 
{
€-€- 
deviationMessage
‹-‹- $
=
‹-‹-% &
$str
‹-‹-' *
+
‹-‹-+ ,
deviationMessage
‹-‹-- =
+
‹-‹-> ?
$str
‹-‹-@ C
;
‹-‹-C D
}
›-›- 
var
ﬂ-ﬂ- 
dt
ﬂ-ﬂ- 
=
ﬂ-ﬂ-  
DateCollectConvert
ﬂ-ﬂ- +
(
ﬂ-ﬂ-+ ,
deviationDate
ﬂ-ﬂ-, 9
)
ﬂ-ﬂ-9 :
;
ﬂ-ﬂ-: ;
if
·-·- 
(
·-·- ,
VerificaStringNulaUndefinedNaN
·-·- 2
(
·-·-2 3
defects
·-·-3 :
)
·-·-: ;
)
·-·-; <
defects
‚-‚- 
=
‚-‚- 
$str
‚-‚- !
;
‚-‚-! "
sql
‰-‰- 
+=
‰-‰- 
$str‰-‰- ∆
+‰-‰-« »
$str
Â-Â- !
+
Â-Â-" #
$str
Ê-Ê- 
+
Ê-Ê- 
ParCompany_Id
Ê-Ê- ,
+
Ê-Ê-- .
$str
Ê-Ê-/ 5
+
Ê-Ê-6 7
ParLevel1_Id
Ê-Ê-8 D
+
Ê-Ê-E F
$str
Ê-Ê-G L
+
Ê-Ê-M N
ParLevel2_Id
Ê-Ê-O [
+
Ê-Ê-\ ]
$str
Ê-Ê-^ c
+
Ê-Ê-d e

Evaluation
Ê-Ê-f p
+
Ê-Ê-q r
$str
Ê-Ê-s x
+
Ê-Ê-y z
SampleÊ-Ê-{ Å
+Ê-Ê-Ç É
$strÊ-Ê-Ñ â
+Ê-Ê-ä ã
alertNumberÊ-Ê-å ó
+Ê-Ê-ò ô
$strÊ-Ê-ö ü
+Ê-Ê-† °
defectsÊ-Ê-¢ ©
+Ê-Ê-™ ´
$strÊ-Ê-¨ ≤
+Ê-Ê-≥ ¥
dtÊ-Ê-µ ∑
.Ê-Ê-∑ ∏
ToStringÊ-Ê-∏ ¿
(Ê-Ê-¿ ¡
$strÊ-Ê-¡ ‘
)Ê-Ê-‘ ’
+Ê-Ê-÷ ◊
$strÊ-Ê-ÿ Ï
+Ê-Ê-Ì Ó
HttpUtilityÊ-Ê-Ô ˙
.Ê-Ê-˙ ˚
	UrlDecodeÊ-Ê-˚ Ñ
(Ê-Ê-Ñ Ö 
deviationMessageÊ-Ê-Ö ï
)Ê-Ê-ï ñ
+Ê-Ê-ó ò
$strÊ-Ê-ô ú
;Ê-Ê-ú ù
}
Á-Á- 
string
È-È- 
conexao
È-È- 
=
È-È- 
System
È-È- #
.
È-È-# $
Configuration
È-È-$ 1
.
È-È-1 2"
ConfigurationManager
È-È-2 F
.
È-È-F G
ConnectionStrings
È-È-G X
[
È-È-X Y
$str
È-È-Y j
]
È-È-j k
.
È-È-k l
ConnectionString
È-È-l |
;
È-È-| }
try
Í-Í- 
{
Î-Î- 
using
Ï-Ï- 
(
Ï-Ï- 
SqlConnection
Ï-Ï- $

connection
Ï-Ï-% /
=
Ï-Ï-0 1
new
Ï-Ï-2 5
SqlConnection
Ï-Ï-6 C
(
Ï-Ï-C D
conexao
Ï-Ï-D K
)
Ï-Ï-K L
)
Ï-Ï-L M
{
Ì-Ì- 
using
Ó-Ó- 
(
Ó-Ó- 

SqlCommand
Ó-Ó- %
command
Ó-Ó-& -
=
Ó-Ó-. /
new
Ó-Ó-0 3

SqlCommand
Ó-Ó-4 >
(
Ó-Ó-> ?
sql
Ó-Ó-? B
,
Ó-Ó-B C

connection
Ó-Ó-D N
)
Ó-Ó-N O
)
Ó-Ó-O P
{
Ô-Ô- 

connection
-- "
.
--" #
Open
--# '
(
--' (
)
--( )
;
--) *
var
Ò-Ò- 
i
Ò-Ò- 
=
Ò-Ò- 
Convert
Ò-Ò-  '
.
Ò-Ò-' (
ToInt32
Ò-Ò-( /
(
Ò-Ò-/ 0
command
Ò-Ò-0 7
.
Ò-Ò-7 8
ExecuteNonQuery
Ò-Ò-8 G
(
Ò-Ò-G H
)
Ò-Ò-H I
)
Ò-Ò-I J
;
Ò-Ò-J K
if
Û-Û- 
(
Û-Û- 
i
Û-Û- 
>
Û-Û- 
$num
Û-Û-  !
)
Û-Û-! "
{
Ù-Ù- 
return
ı-ı- "
null
ı-ı-# '
;
ı-ı-' (
}
ˆ-ˆ- 
else
˜-˜- 
{
¯-¯- 
return
˙-˙- "
null
˙-˙-# '
;
˙-˙-' (
}
˚-˚- 
}
¸-¸- 
if
˝-˝- 
(
˝-˝- 

connection
˝-˝- "
.
˝-˝-" #
State
˝-˝-# (
==
˝-˝-) +
System
˝-˝-, 2
.
˝-˝-2 3
Data
˝-˝-3 7
.
˝-˝-7 8
ConnectionState
˝-˝-8 G
.
˝-˝-G H
Open
˝-˝-H L
)
˝-˝-L M

connection
˝-˝-N X
.
˝-˝-X Y
Close
˝-˝-Y ^
(
˝-˝-^ _
)
˝-˝-_ `
;
˝-˝-` a
}
˛-˛- 
}
ˇ-ˇ- 
catch
Å.Å. 
(
Å.Å. 
SqlException
Å.Å. 
ex
Å.Å.  "
)
Å.Å." #
{
Ç.Ç. 
int
á.á. 
	insertLog
á.á. 
=
á.á. 
insertLogJson
á.á.  -
(
á.á.- .
sql
á.á.. 1
,
á.á.1 2
ex
á.á.3 5
.
á.á.5 6
Message
á.á.6 =
,
á.á.= >
$str
á.á.? D
,
á.á.D E
$str
á.á.F K
,
á.á.K L
$str
á.á.M ^
)
á.á.^ _
;
á.á._ `
return
à.à. 
$str
à.à. 
;
à.à. 
}
â.â. 
catch
ä.ä. 
(
ä.ä. 
	Exception
ä.ä. 
ex
ä.ä. 
)
ä.ä.  
{
ã.ã. 
int
ê.ê. 
	insertLog
ê.ê. 
=
ê.ê. 
insertLogJson
ê.ê.  -
(
ê.ê.- .
sql
ê.ê.. 1
,
ê.ê.1 2
ex
ê.ê.3 5
.
ê.ê.5 6
Message
ê.ê.6 =
,
ê.ê.= >
$str
ê.ê.? D
,
ê.ê.D E
$str
ê.ê.F K
,
ê.ê.K L
$str
ê.ê.M ^
)
ê.ê.^ _
;
ê.ê._ `
return
ë.ë. 
$str
ë.ë. 
;
ë.ë. 
}
í.í. 
}
ì.ì. 	
[
î.î. 	
	WebMethod
î.î.	 
]
î.î. 
public
ï.ï. 
string
ï.ï. 
sendEmailAlerta
ï.ï. %
(
ï.ï.% &
)
ï.ï.& '
{
ñ.ñ. 	
string
ó.ó. 
destinatarios
ó.ó.  
=
ó.ó.! "
$str
ó.ó.# B
;
ó.ó.B C
string
ò.ò. 
mensagemEstouro
ò.ò. "
=
ò.ò.# $
$str
ò.ò.% B
;
ò.ò.B C
try
ö.ö. 
{
õ.õ. 
string
ú.ú. 
termo
ú.ú. 
=
ú.ú. 
$strú.ú. Œ
;ú.ú.Œ œ
string
û.û. 
emailRemetente
û.û. %
=
û.û.& '
$str
û.û.( C
;
û.û.C D
string
ü.ü. 
nomeRemetente
ü.ü. $
=
ü.ü.% &
$str
ü.ü.' ;
;
ü.ü.; <
MailMessage
°.°. 
mailMessage
°.°. '
=
°.°.( )
new
°.°.* -
MailMessage
°.°.. 9
(
°.°.9 :
)
°.°.: ;
;
°.°.; <
mailMessage
£.£. 
.
£.£. 
From
£.£.  
=
£.£.! "
new
£.£.# &
MailAddress
£.£.' 2
(
£.£.2 3
emailRemetente
£.£.3 A
,
£.£.A B
nomeRemetente
£.£.C P
)
£.£.P Q
;
£.£.Q R
mailMessage
•.•. 
.
•.•. 
To
•.•. 
.
•.•. 
Add
•.•. "
(
•.•." #
destinatarios
•.•.# 0
)
•.•.0 1
;
•.•.1 2
mailMessage
ß.ß. 
.
ß.ß. 
Subject
ß.ß. #
=
ß.ß.$ %
$str
ß.ß.& .
;
ß.ß.. /
mailMessage
®.®. 
.
®.®. 

IsBodyHtml
®.®. &
=
®.®.' (
true
®.®.) -
;
®.®.- .
mailMessage
™.™. 
.
™.™. 
Body
™.™.  
=
™.™.! "
$str
™.™.# V
+
™.™.W X
mensagemEstouro
™.™.Y h
+
™.™.i j
$str
™.™.k s
+
™.™.t u
$str
´.´.# -
+
´.´.. /
$str≠.≠.# ﬁ
+≠.≠.ﬂ ‡
$str
Æ.Æ.# )
+
Æ.Æ.* +
termo
Ø.Ø.# (
+
Ø.Ø.) *
$str
∞.∞.# u
+
∞.∞.v w
DateTime∞.∞.x Ä
.∞.∞.Ä Å
Now∞.∞.Å Ñ
.∞.∞.Ñ Ö
ToString∞.∞.Ö ç
(∞.∞.ç é
$str∞.∞.é £
)∞.∞.£ §
+∞.∞.• ¶
$str∞.∞.ß Ø
;∞.∞.Ø ∞
mailMessage
≤.≤. 
.
≤.≤. 
Priority
≤.≤. $
=
≤.≤.% &
MailPriority
≤.≤.' 3
.
≤.≤.3 4
High
≤.≤.4 8
;
≤.≤.8 9
string
≥.≥. 
servidorSMTP
≥.≥. #
=
≥.≥.$ %
$str
≥.≥.& =
;
≥.≥.= >
int
¥.¥. 
portaSMS
¥.¥. 
=
¥.¥. 
$num
¥.¥. "
;
¥.¥." #
string
µ.µ. 
usuarioSMTP
µ.µ. "
=
µ.µ.# $
$str
µ.µ.% @
;
µ.µ.@ A
string
∂.∂. 
	senhaSMTP
∂.∂.  
=
∂.∂.! "
$str
∂.∂.# 1
;
∂.∂.1 2

SmtpClient
∏.∏. 

smtpClient
∏.∏. %
=
∏.∏.& '
new
∏.∏.( +

SmtpClient
∏.∏., 6
(
∏.∏.6 7
servidorSMTP
∏.∏.7 C
,
∏.∏.C D
portaSMS
∏.∏.E M
)
∏.∏.M N
;
∏.∏.N O

smtpClient
π.π. 
.
π.π. 
	EnableSsl
π.π. $
=
π.π.% &
false
π.π.' ,
;
π.π., -

smtpClient
ª.ª. 
.
ª.ª. 
Credentials
ª.ª. &
=
ª.ª.' (
new
ª.ª.) ,
NetworkCredential
ª.ª.- >
(
ª.ª.> ?
usuarioSMTP
ª.ª.? J
,
ª.ª.J K
	senhaSMTP
ª.ª.L U
)
ª.ª.U V
;
ª.ª.V W

smtpClient
º.º. 
.
º.º. 
Send
º.º. 
(
º.º.  
mailMessage
º.º.  +
)
º.º.+ ,
;
º.º., -
return
Ω.Ω. 
null
Ω.Ω. 
;
Ω.Ω. 
}
æ.æ. 
catch
ø.ø. 
(
ø.ø. 
	Exception
ø.ø. 
ex
ø.ø. 
)
ø.ø.  
{
¿.¿. 
}
∆.∆. 
return
«.«. 
null
«.«. 
;
«.«. 
}
».». 	
[
….…. 	
	WebMethod
….….	 
]
….…. 
public
 . . 
string
 . . 
	sendEmail
 . . 
(
 . .  
string
 . .  &
email
 . .' ,
,
 . ., -
string
 . .. 4
subject
 . .5 <
,
 . .< =
string
 . .> D
body
 . .E I
,
 . .I J
string
 . .K Q
email_CopiaOculta
 . .R c
=
 . .d e
null
 . .f j
)
 . .j k
{
À.À. 	
string
Ã.Ã. 
destinatarios
Ã.Ã.  
=
Ã.Ã.! "
email
Ã.Ã.# (
;
Ã.Ã.( )
try
Œ.Œ. 
{
œ.œ. 
string
–.–. 
termo
–.–. 
=
–.–. 
$str–.–. Œ
;–.–.Œ œ
string
“.“. 
emailRemetente
“.“. %
=
“.“.& '
$str
“.“.( H
;
“.“.H I
string
”.”. 
nomeRemetente
”.”. $
=
”.”.% &
$str
”.”.' 5
;
”.”.5 6
MailMessage
’.’. 
mailMessage
’.’. '
=
’.’.( )
new
’.’.* -
MailMessage
’.’.. 9
(
’.’.9 :
)
’.’.: ;
;
’.’.; <
mailMessage
◊.◊. 
.
◊.◊. 
From
◊.◊.  
=
◊.◊.! "
new
◊.◊.# &
MailAddress
◊.◊.' 2
(
◊.◊.2 3
emailRemetente
◊.◊.3 A
,
◊.◊.A B
nomeRemetente
◊.◊.C P
)
◊.◊.P Q
;
◊.◊.Q R
if
ÿ.ÿ. 
(
ÿ.ÿ. 
!
ÿ.ÿ. 
string
ÿ.ÿ. 
.
ÿ.ÿ. 
IsNullOrEmpty
ÿ.ÿ. )
(
ÿ.ÿ.) *
email_CopiaOculta
ÿ.ÿ.* ;
)
ÿ.ÿ.; <
)
ÿ.ÿ.< =
{
Ÿ.Ÿ. 
mailMessage
⁄.⁄. 
.
⁄.⁄.  
Bcc
⁄.⁄.  #
.
⁄.⁄.# $
Add
⁄.⁄.$ '
(
⁄.⁄.' (
new
⁄.⁄.( +
MailAddress
⁄.⁄., 7
(
⁄.⁄.7 8
email_CopiaOculta
⁄.⁄.8 I
)
⁄.⁄.I J
)
⁄.⁄.J K
;
⁄.⁄.K L
}
€.€. 
mailMessage
›.›. 
.
›.›. 
To
›.›. 
.
›.›. 
Add
›.›. "
(
›.›." #
destinatarios
›.›.# 0
)
›.›.0 1
;
›.›.1 2
mailMessage
ﬂ.ﬂ. 
.
ﬂ.ﬂ. 
Subject
ﬂ.ﬂ. #
=
ﬂ.ﬂ.$ %
subject
ﬂ.ﬂ.& -
;
ﬂ.ﬂ.- .
mailMessage
‡.‡. 
.
‡.‡. 

IsBodyHtml
‡.‡. &
=
‡.‡.' (
true
‡.‡.) -
;
‡.‡.- .
mailMessage
„.„. 
.
„.„. 
Body
„.„.  
=
„.„.! "
$str
„.„.# V
+
„.„.W X
body
„.„.Y ]
+
„.„.^ _
$str
„.„.` p
+
„.„.q r
$str‰.‰.# ﬁ
+‰.‰.ﬂ ‡
$str
Â.Â.# )
+
Â.Â.* +
termo
Ê.Ê.# (
+
Ê.Ê.) *
$str
Á.Á.# m
+
Á.Á.n o
DateTime
Á.Á.p x
.
Á.Á.x y
Now
Á.Á.y |
.
Á.Á.| }
ToStringÁ.Á.} Ö
(Á.Á.Ö Ü
$strÁ.Á.Ü õ
)Á.Á.õ ú
+Á.Á.ù û
$strÁ.Á.ü ß
;Á.Á.ß ®
mailMessage
È.È. 
.
È.È. 
Priority
È.È. $
=
È.È.% &
MailPriority
È.È.' 3
.
È.È.3 4
High
È.È.4 8
;
È.È.8 9
string
Î.Î. 
servidorSMTP
Î.Î. #
=
Î.Î.$ %
$str
Î.Î.& =
;
Î.Î.= >
int
Ï.Ï. 
portaSMS
Ï.Ï. 
=
Ï.Ï. 
$num
Ï.Ï. "
;
Ï.Ï." #
string
Ì.Ì. 
usuarioSMTP
Ì.Ì. "
=
Ì.Ì.# $
$str
Ì.Ì.% @
;
Ì.Ì.@ A
string
Ó.Ó. 
	senhaSMTP
Ó.Ó.  
=
Ó.Ó.! "
$str
Ó.Ó.# 1
;
Ó.Ó.1 2

SmtpClient
˙.˙. 

smtpClient
˙.˙. %
=
˙.˙.& '
new
˙.˙.( +

SmtpClient
˙.˙., 6
(
˙.˙.6 7
servidorSMTP
˙.˙.7 C
,
˙.˙.C D
portaSMS
˙.˙.E M
)
˙.˙.M N
;
˙.˙.N O

smtpClient
˚.˚. 
.
˚.˚. 
	EnableSsl
˚.˚. $
=
˚.˚.% &
true
˚.˚.' +
;
˚.˚.+ ,

smtpClient
˝.˝. 
.
˝.˝. 
Credentials
˝.˝. &
=
˝.˝.' (
new
˝.˝.) ,
NetworkCredential
˝.˝.- >
(
˝.˝.> ?
usuarioSMTP
˝.˝.? J
,
˝.˝.J K
	senhaSMTP
˝.˝.L U
)
˝.˝.U V
;
˝.˝.V W

smtpClient
˛.˛. 
.
˛.˛. 
Send
˛.˛. 
(
˛.˛.  
mailMessage
˛.˛.  +
)
˛.˛.+ ,
;
˛.˛., -
return
ˇ.ˇ. 
null
ˇ.ˇ. 
;
ˇ.ˇ. 
}
Ä/Ä/ 
catch
Å/Å/ 
(
Å/Å/ 
	Exception
Å/Å/ 
ex
Å/Å/ 
)
Å/Å/  
{
Ç/Ç/ 
}
Ñ/Ñ/ 
return
Ö/Ö/ 
null
Ö/Ö/ 
;
Ö/Ö/ 
}
Ü/Ü/ 	
[
á/á/ 	
	WebMethod
á/á/	 
]
á/á/ 
public
à/à/ 
string
à/à/ !
sendEmailManutencao
à/à/ )
(
à/à/) *
)
à/à/* +
{
â/â/ 	
string
å/å/ 
sql
å/å/ 
=
å/å/ 
$str
å/å/ ~
;
å/å/~ 
string
é/é/ 
conexao
é/é/ 
=
é/é/ 
System
é/é/ #
.
é/é/# $
Configuration
é/é/$ 1
.
é/é/1 2"
ConfigurationManager
é/é/2 F
.
é/é/F G
ConnectionStrings
é/é/G X
[
é/é/X Y
$str
é/é/Y j
]
é/é/j k
.
é/é/k l
ConnectionString
é/é/l |
;
é/é/| }
try
è/è/ 
{
ê/ê/ 
using
ë/ë/ 
(
ë/ë/ 
SqlConnection
ë/ë/ $

connection
ë/ë/% /
=
ë/ë/0 1
new
ë/ë/2 5
SqlConnection
ë/ë/6 C
(
ë/ë/C D
conexao
ë/ë/D K
)
ë/ë/K L
)
ë/ë/L M
{
í/í/ 
using
ì/ì/ 
(
ì/ì/ 

SqlCommand
ì/ì/ %
command
ì/ì/& -
=
ì/ì/. /
new
ì/ì/0 3

SqlCommand
ì/ì/4 >
(
ì/ì/> ?
sql
ì/ì/? B
,
ì/ì/B C

connection
ì/ì/D N
)
ì/ì/N O
)
ì/ì/O P
{
î/î/ 

connection
ï/ï/ "
.
ï/ï/" #
Open
ï/ï/# '
(
ï/ï/' (
)
ï/ï/( )
;
ï/ï/) *
using
ñ/ñ/ 
(
ñ/ñ/ 
SqlDataReader
ñ/ñ/ ,
r
ñ/ñ/- .
=
ñ/ñ// 0
command
ñ/ñ/1 8
.
ñ/ñ/8 9
ExecuteReader
ñ/ñ/9 F
(
ñ/ñ/F G
)
ñ/ñ/G H
)
ñ/ñ/H I
{
ó/ó/ 
while
ò/ò/ !
(
ò/ò/" #
r
ò/ò/# $
.
ò/ò/$ %
Read
ò/ò/% )
(
ò/ò/) *
)
ò/ò/* +
)
ò/ò/+ ,
{
ô/ô/ 
string
ö/ö/  &
nome
ö/ö/' +
=
ö/ö/, -
r
ö/ö/. /
[
ö/ö// 0
$num
ö/ö/0 1
]
ö/ö/1 2
.
ö/ö/2 3
ToString
ö/ö/3 ;
(
ö/ö/; <
)
ö/ö/< =
;
ö/ö/= >
string
ú/ú/  &
email
ú/ú/' ,
=
ú/ú/- .
r
ú/ú// 0
[
ú/ú/0 1
$num
ú/ú/1 2
]
ú/ú/2 3
.
ú/ú/3 4
ToString
ú/ú/4 <
(
ú/ú/< =
)
ú/ú/= >
;
ú/ú/> ?
string
†/†/  &
login
†/†/' ,
=
†/†/- .
r
†/†// 0
[
†/†/0 1
$num
†/†/1 2
]
†/†/2 3
.
†/†/3 4
ToString
†/†/4 <
(
†/†/< =
)
†/†/= >
;
†/†/> ?
var
¢/¢/  #
	nomeArray
¢/¢/$ -
=
¢/¢/. /
nome
¢/¢/0 4
.
¢/¢/4 5
Split
¢/¢/5 :
(
¢/¢/: ;
$char
¢/¢/; >
)
¢/¢/> ?
;
¢/¢/? @
string
£/£/  &
primeiroNome
£/£/' 3
=
£/£/4 5
	nomeArray
£/£/6 ?
[
£/£/? @
$num
£/£/@ A
]
£/£/A B
;
£/£/B C
string
ß/ß/  &
mensagem
ß/ß/' /
=
ß/ß/0 1
$str
ß/ß/2 8
+
ß/ß/9 :
primeiroNome
ß/ß/; G
+
ß/ß/H I
$str
ß/ß/J g
+
ß/ß/h i
$str
®/®/2 U
+
®/®/V W
$str
©/©/2 ]
+
©/©/^ _
$str
™/™/2 H
+
™/™/I J
login
™/™/K P
+
™/™/Q R
$str
´/´/2 I
;
´/´/I J
	sendEmail
Æ/Æ/  )
(
Æ/Æ/) *
email
Æ/Æ/* /
,
Æ/Æ// 0
$str
Æ/Æ/1 F
,
Æ/Æ/F G
mensagem
Æ/Æ/H P
,
Æ/Æ/P Q
email_CopiaOculta
Æ/Æ/R c
:
Æ/Æ/c d
$strÆ/Æ/e Ö
)Æ/Æ/Ö Ü
;Æ/Æ/Ü á
Thread
Ø/Ø/  &
.
Ø/Ø/& '
Sleep
Ø/Ø/' ,
(
Ø/Ø/, -
$num
Ø/Ø/- 1
)
Ø/Ø/1 2
;
Ø/Ø/2 3
}
∞/∞/ 
return
±/±/ "
null
±/±/# '
;
±/±/' (
}
≤/≤/ 
}
≥/≥/ 
if
¥/¥/ 
(
¥/¥/ 

connection
¥/¥/ "
.
¥/¥/" #
State
¥/¥/# (
==
¥/¥/) +
System
¥/¥/, 2
.
¥/¥/2 3
Data
¥/¥/3 7
.
¥/¥/7 8
ConnectionState
¥/¥/8 G
.
¥/¥/G H
Open
¥/¥/H L
)
¥/¥/L M

connection
¥/¥/N X
.
¥/¥/X Y
Close
¥/¥/Y ^
(
¥/¥/^ _
)
¥/¥/_ `
;
¥/¥/` a
}
µ/µ/ 
}
∂/∂/ 
catch
∏/∏/ 
(
∏/∏/ 
SqlException
∏/∏/ 
ex
∏/∏/  "
)
∏/∏/" #
{
π/π/ 
int
∫/∫/ 
	insertLog
∫/∫/ 
=
∫/∫/ 
insertLogJson
∫/∫/  -
(
∫/∫/- .
sql
∫/∫/. 1
,
∫/∫/1 2
ex
∫/∫/3 5
.
∫/∫/5 6
Message
∫/∫/6 =
,
∫/∫/= >
$str
∫/∫/? D
,
∫/∫/D E
$str
∫/∫/F K
,
∫/∫/K L
$str
∫/∫/M e
)
∫/∫/e f
;
∫/∫/f g
return
ª/ª/ 
$str
ª/ª/ 
;
ª/ª/ 
}
º/º/ 
catch
Ω/Ω/ 
(
Ω/Ω/ 
	Exception
Ω/Ω/ 
ex
Ω/Ω/ 
)
Ω/Ω/  
{
æ/æ/ 
int
ø/ø/ 
	insertLog
ø/ø/ 
=
ø/ø/ 
insertLogJson
ø/ø/  -
(
ø/ø/- .
sql
ø/ø/. 1
,
ø/ø/1 2
ex
ø/ø/3 5
.
ø/ø/5 6
Message
ø/ø/6 =
,
ø/ø/= >
$str
ø/ø/? D
,
ø/ø/D E
$str
ø/ø/F K
,
ø/ø/K L
$str
ø/ø/M e
)
ø/ø/e f
;
ø/ø/f g
return
¿/¿/ 
$str
¿/¿/ 
;
¿/¿/ 
}
¡/¡/ 
}
¬/¬/ 	
[
√/√/ 	
	WebMethod
√/√/	 
]
√/√/ 
public
ƒ/ƒ/ 
string
ƒ/ƒ/ &
updateLevel1Consolidaton
ƒ/ƒ/ .
(
ƒ/ƒ/. /
string
ƒ/ƒ// 5
ParLevel1_Id
ƒ/ƒ/6 B
,
ƒ/ƒ/B C
string
ƒ/ƒ/D J
Unit_Id
ƒ/ƒ/K R
,
ƒ/ƒ/R S
string
ƒ/ƒ/T Z
DepartmentId
ƒ/ƒ/[ g
,
ƒ/ƒ/g h
string
ƒ/ƒ/i o

Evaluation
ƒ/ƒ/p z
,
ƒ/ƒ/z {
stringƒ/ƒ/| Ç
Defectsƒ/ƒ/É ä
)ƒ/ƒ/ä ã
{
≈/≈/ 	
string
«/«/ 
sql
«/«/ 
=
«/«/ 
$str
«/«/ C
+
«/«/D E
Defects
«/«/F M
+
«/«/N O
$str
«/«/P a
+
«/«/b c

Evaluation
«/«/d n
+
«/«/o p
$str«/«/q É
+«/«/Ñ Ö
Unit_Id«/«/Ü ç
+«/«/é è
$str«/«/ê ¶
+«/«/ß ®
ParLevel1_Id«/«/© µ
+«/«/∂ ∑
$str«/«/∏ ª
;«/«/ª º
string
»/»/ 
conexao
»/»/ 
=
»/»/ 
System
»/»/ #
.
»/»/# $
Configuration
»/»/$ 1
.
»/»/1 2"
ConfigurationManager
»/»/2 F
.
»/»/F G
ConnectionStrings
»/»/G X
[
»/»/X Y
$str
»/»/Y j
]
»/»/j k
.
»/»/k l
ConnectionString
»/»/l |
;
»/»/| }
try
…/…/ 
{
 / / 
using
À/À/ 
(
À/À/ 
SqlConnection
À/À/ $

connection
À/À/% /
=
À/À/0 1
new
À/À/2 5
SqlConnection
À/À/6 C
(
À/À/C D
conexao
À/À/D K
)
À/À/K L
)
À/À/L M
{
Ã/Ã/ 
using
Õ/Õ/ 
(
Õ/Õ/ 

SqlCommand
Õ/Õ/ %
command
Õ/Õ/& -
=
Õ/Õ/. /
new
Õ/Õ/0 3

SqlCommand
Õ/Õ/4 >
(
Õ/Õ/> ?
sql
Õ/Õ/? B
,
Õ/Õ/B C

connection
Õ/Õ/D N
)
Õ/Õ/N O
)
Õ/Õ/O P
{
Œ/Œ/ 

connection
œ/œ/ "
.
œ/œ/" #
Open
œ/œ/# '
(
œ/œ/' (
)
œ/œ/( )
;
œ/œ/) *
var
–/–/ 
i
–/–/ 
=
–/–/ 
Convert
–/–/  '
.
–/–/' (
ToInt32
–/–/( /
(
–/–// 0
command
–/–/0 7
.
–/–/7 8
ExecuteScalar
–/–/8 E
(
–/–/E F
)
–/–/F G
)
–/–/G H
;
–/–/H I
if
“/“/ 
(
“/“/ 
i
“/“/ 
>
“/“/ 
$num
“/“/  !
)
“/“/! "
{
”/”/ 
return
‘/‘/ "
null
‘/‘/# '
;
‘/‘/' (
}
’/’/ 
else
÷/÷/ 
{
◊/◊/ 
return
Ÿ/Ÿ/ "
null
Ÿ/Ÿ/# '
;
Ÿ/Ÿ/' (
}
⁄/⁄/ 
}
€/€/ 
if
‹/‹/ 
(
‹/‹/ 

connection
‹/‹/ "
.
‹/‹/" #
State
‹/‹/# (
==
‹/‹/) +
System
‹/‹/, 2
.
‹/‹/2 3
Data
‹/‹/3 7
.
‹/‹/7 8
ConnectionState
‹/‹/8 G
.
‹/‹/G H
Open
‹/‹/H L
)
‹/‹/L M

connection
‹/‹/N X
.
‹/‹/X Y
Close
‹/‹/Y ^
(
‹/‹/^ _
)
‹/‹/_ `
;
‹/‹/` a
}
›/›/ 
}
ﬁ/ﬁ/ 
catch
‡/‡/ 
(
‡/‡/ 
SqlException
‡/‡/ 
ex
‡/‡/  "
)
‡/‡/" #
{
·/·/ 
int
‚/‚/ 
	insertLog
‚/‚/ 
=
‚/‚/ 
insertLogJson
‚/‚/  -
(
‚/‚/- .
sql
‚/‚/. 1
,
‚/‚/1 2
ex
‚/‚/3 5
.
‚/‚/5 6
Message
‚/‚/6 =
,
‚/‚/= >
$str
‚/‚/? D
,
‚/‚/D E
$str
‚/‚/F K
,
‚/‚/K L
$str
‚/‚/M g
)
‚/‚/g h
;
‚/‚/h i
return
„/„/ 
$str
„/„/ 
;
„/„/ 
}
‰/‰/ 
catch
Â/Â/ 
(
Â/Â/ 
	Exception
Â/Â/ 
ex
Â/Â/ 
)
Â/Â/  
{
Ê/Ê/ 
int
Á/Á/ 
	insertLog
Á/Á/ 
=
Á/Á/ 
insertLogJson
Á/Á/  -
(
Á/Á/- .
sql
Á/Á/. 1
,
Á/Á/1 2
ex
Á/Á/3 5
.
Á/Á/5 6
Message
Á/Á/6 =
,
Á/Á/= >
$str
Á/Á/? D
,
Á/Á/D E
$str
Á/Á/F K
,
Á/Á/K L
$str
Á/Á/M g
)
Á/Á/g h
;
Á/Á/h i
return
Ë/Ë/ 
$str
Ë/Ë/ 
;
Ë/Ë/ 
}
È/È/ 
}
Í/Í/ 	
[
Î/Î/ 	
	WebMethod
Î/Î/	 
]
Î/Î/ 
public
Ï/Ï/ 
string
Ï/Ï/ !
updateConsolidacoes
Ï/Ï/ )
(
Ï/Ï/) *
string
Ï/Ï/* 0
consolidacoes
Ï/Ï/1 >
)
Ï/Ï/> ?
{
Ì/Ì/ 	
string
Ô/Ô/ 
sql
Ô/Ô/ 
=
Ô/Ô/ 
$str
Ô/Ô/ 
;
Ô/Ô/ 
string
// 
conexao
// 
=
// 
System
// #
.
//# $
Configuration
//$ 1
.
//1 2"
ConfigurationManager
//2 F
.
//F G
ConnectionStrings
//G X
[
//X Y
$str
//Y j
]
//j k
.
//k l
ConnectionString
//l |
;
//| }
try
Ò/Ò/ 
{
Ú/Ú/ 
using
Û/Û/ 
(
Û/Û/ 
SqlConnection
Û/Û/ $

connection
Û/Û/% /
=
Û/Û/0 1
new
Û/Û/2 5
SqlConnection
Û/Û/6 C
(
Û/Û/C D
conexao
Û/Û/D K
)
Û/Û/K L
)
Û/Û/L M
{
Ù/Ù/ 
using
ı/ı/ 
(
ı/ı/ 

SqlCommand
ı/ı/ %
command
ı/ı/& -
=
ı/ı/. /
new
ı/ı/0 3

SqlCommand
ı/ı/4 >
(
ı/ı/> ?
sql
ı/ı/? B
,
ı/ı/B C

connection
ı/ı/D N
)
ı/ı/N O
)
ı/ı/O P
{
ˆ/ˆ/ 

connection
˜/˜/ "
.
˜/˜/" #
Open
˜/˜/# '
(
˜/˜/' (
)
˜/˜/( )
;
˜/˜/) *
var
¯/¯/ 
i
¯/¯/ 
=
¯/¯/ 
Convert
¯/¯/  '
.
¯/¯/' (
ToInt32
¯/¯/( /
(
¯/¯// 0
command
¯/¯/0 7
.
¯/¯/7 8
ExecuteNonQuery
¯/¯/8 G
(
¯/¯/G H
)
¯/¯/H I
)
¯/¯/I J
;
¯/¯/J K
if
˘/˘/ 
(
˘/˘/ 
i
˘/˘/ 
>
˘/˘/ 
$num
˘/˘/  !
)
˘/˘/! "
{
˙/˙/ 
return
˚/˚/ "
null
˚/˚/# '
;
˚/˚/' (
}
¸/¸/ 
else
˝/˝/ 
{
˛/˛/ 
return
ˇ/ˇ/ "
null
ˇ/ˇ/# '
;
ˇ/ˇ/' (
}
Ä0Ä0 
}
É0É0 
if
Ñ0Ñ0 
(
Ñ0Ñ0 

connection
Ñ0Ñ0 "
.
Ñ0Ñ0" #
State
Ñ0Ñ0# (
==
Ñ0Ñ0) +
System
Ñ0Ñ0, 2
.
Ñ0Ñ02 3
Data
Ñ0Ñ03 7
.
Ñ0Ñ07 8
ConnectionState
Ñ0Ñ08 G
.
Ñ0Ñ0G H
Open
Ñ0Ñ0H L
)
Ñ0Ñ0L M

connection
Ñ0Ñ0N X
.
Ñ0Ñ0X Y
Close
Ñ0Ñ0Y ^
(
Ñ0Ñ0^ _
)
Ñ0Ñ0_ `
;
Ñ0Ñ0` a
}
Ö0Ö0 
}
Ü0Ü0 
catch
á0á0 
(
á0á0 
SqlException
á0á0 
ex
á0á0  "
)
á0á0" #
{
à0à0 
return
â0â0 
null
â0â0 
;
â0â0 
}
ä0ä0 
catch
ã0ã0 
(
ã0ã0 
	Exception
ã0ã0 
ex
ã0ã0 
)
ã0ã0  
{
å0å0 
return
ç0ç0 
null
ç0ç0 
;
ç0ç0 
}
é0é0 
}
è0è0 	
public
ï0ï0 
string
ï0ï0  
selectUserCompanys
ï0ï0 (
(
ï0ï0( )
int
ï0ï0) ,

UserSgq_Id
ï0ï0- 7
,
ï0ï07 8
int
ï0ï09 <
ParCompany_Id
ï0ï0= J
)
ï0ï0J K
{
ñ0ñ0 	
var
ó0ó0 "
ParCompanyXUserSgqDB
ó0ó0 $
=
ó0ó0% &
new
ó0ó0' *
SGQDBContext
ó0ó0+ 7
.
ó0ó07 8 
ParCompanyXUserSgq
ó0ó08 J
(
ó0ó0J K
db
ó0ó0K M
)
ó0ó0M N
;
ó0ó0N O
var
ò0ò0  
parCompanyXUserSgq
ò0ò0 "
=
ò0ò0# $
dbEf
ò0ò0% )
.
ò0ò0) *

ParCompany
ò0ò0* 4
.
ò0ò04 5
Where
ò0ò05 :
(
ò0ò0: ;
r
ò0ò0; <
=>
ò0ò0= ?
r
ò0ò0@ A
.
ò0ò0A B
IsActive
ò0ò0B J
)
ò0ò0J K
.
ò0ò0K L
ToList
ò0ò0L R
(
ò0ò0R S
)
ò0ò0S T
;
ò0ò0T U
string
ö0ö0 
options
ö0ö0 
=
ö0ö0 
null
ö0ö0 !
;
ö0ö0! "
foreach
ú0ú0 
(
ú0ú0 
var
ú0ú0 
p
ú0ú0 
in
ú0ú0  
parCompanyXUserSgq
ú0ú0 0
)
ú0ú00 1
{
ù0ù0 
string
û0û0 
selected
û0û0 
=
û0û0  !
null
û0û0" &
;
û0û0& '
if
ü0ü0 
(
ü0ü0 
p
ü0ü0 
.
ü0ü0 
ParCompany_Id
ü0ü0 #
==
ü0ü0$ &
ParCompany_Id
ü0ü0' 4
)
ü0ü04 5
{
†0†0 
selected
°0°0 
=
°0°0 
$str
°0°0 *
;
°0°0* +
}
¢0¢0 
options
§0§0 
+=
§0§0 
$str
§0§0 $
+
§0§0% &
selected
§0§0' /
+
§0§00 1
$str
§0§02 =
+
§0§0> ?
p
§0§0@ A
.
§0§0A B
Id
§0§0B D
+
§0§0E F
$str
§0§0G L
+
§0§0M N
p
§0§0O P
.
§0§0P Q
Name
§0§0Q U
+
§0§0k l
$str
§0§0m x
;
§0§0x y
}
•0•0 
if
ß0ß0 
(
ß0ß0 
!
ß0ß0 
string
ß0ß0 
.
ß0ß0 
IsNullOrEmpty
ß0ß0 %
(
ß0ß0% &
options
ß0ß0& -
)
ß0ß0- .
)
ß0ß0. /
{
®0®0 
options
©0©0 
=
©0©0 
$str
©0©0 d
+
©0©0e f
ParCompany_Id
©0©0g t
+
©0©0u v
$str
©0©0w |
+
©0©0} ~
options©0©0 Ü
+©0©0á à
$str©0©0â î
;©0©0î ï
}
™0™0 
return
´0´0 
options
´0´0 
;
´0´0 
}
¨0¨0 	
[
≠0≠0 	
	WebMethod
≠0≠0	 
]
≠0≠0 
public
Æ0Æ0 
string
Æ0Æ0 
UserCompanyUpdate
Æ0Æ0 '
(
Æ0Æ0' (
string
Æ0Æ0( .

UserSgq_Id
Æ0Æ0/ 9
,
Æ0Æ09 :
int
Æ0Æ0; >
ParCompany_Id
Æ0Æ0? L
)
Æ0Æ0L M
{
Ø0Ø0 	
string
±0±0 
sql
±0±0 
=
±0±0 
$str
±0±0 =
+
±0±0> ?
ParCompany_Id
±0±0@ M
+
±0±0N O
$str
±0±0P ^
+
±0±0_ `

UserSgq_Id
±0±0a k
+
±0±0l m
$str
±0±0n q
;
±0±0q r
string
≤0≤0 
conexao
≤0≤0 
=
≤0≤0 
System
≤0≤0 #
.
≤0≤0# $
Configuration
≤0≤0$ 1
.
≤0≤01 2"
ConfigurationManager
≤0≤02 F
.
≤0≤0F G
ConnectionStrings
≤0≤0G X
[
≤0≤0X Y
$str
≤0≤0Y j
]
≤0≤0j k
.
≤0≤0k l
ConnectionString
≤0≤0l |
;
≤0≤0| }
try
≥0≥0 
{
¥0¥0 
using
µ0µ0 
(
µ0µ0 
SqlConnection
µ0µ0 $

connection
µ0µ0% /
=
µ0µ00 1
new
µ0µ02 5
SqlConnection
µ0µ06 C
(
µ0µ0C D
conexao
µ0µ0D K
)
µ0µ0K L
)
µ0µ0L M
{
∂0∂0 
using
∑0∑0 
(
∑0∑0 

SqlCommand
∑0∑0 %
command
∑0∑0& -
=
∑0∑0. /
new
∑0∑00 3

SqlCommand
∑0∑04 >
(
∑0∑0> ?
sql
∑0∑0? B
,
∑0∑0B C

connection
∑0∑0D N
)
∑0∑0N O
)
∑0∑0O P
{
∏0∏0 

connection
π0π0 "
.
π0π0" #
Open
π0π0# '
(
π0π0' (
)
π0π0( )
;
π0π0) *
var
∫0∫0 
i
∫0∫0 
=
∫0∫0 
Convert
∫0∫0  '
.
∫0∫0' (
ToInt32
∫0∫0( /
(
∫0∫0/ 0
command
∫0∫00 7
.
∫0∫07 8
ExecuteNonQuery
∫0∫08 G
(
∫0∫0G H
)
∫0∫0H I
)
∫0∫0I J
;
∫0∫0J K
if
º0º0 
(
º0º0 
i
º0º0 
>
º0º0 
$num
º0º0  !
)
º0º0! "
{
Ω0Ω0 
return
æ0æ0 "
null
æ0æ0# '
;
æ0æ0' (
}
ø0ø0 
else
¿0¿0 
{
¡0¡0 
return
√0√0 "
$str
√0√0# G
;
√0√0G H
}
ƒ0ƒ0 
}
≈0≈0 
if
∆0∆0 
(
∆0∆0 

connection
∆0∆0 "
.
∆0∆0" #
State
∆0∆0# (
==
∆0∆0) +
System
∆0∆0, 2
.
∆0∆02 3
Data
∆0∆03 7
.
∆0∆07 8
ConnectionState
∆0∆08 G
.
∆0∆0G H
Open
∆0∆0H L
)
∆0∆0L M

connection
∆0∆0N X
.
∆0∆0X Y
Close
∆0∆0Y ^
(
∆0∆0^ _
)
∆0∆0_ `
;
∆0∆0` a
}
«0«0 
}
…0…0 
catch
 0 0 
(
 0 0 
	Exception
 0 0 
ex
 0 0 
)
 0 0  
{
À0À0 
return
Ã0Ã0 
$str
Ã0Ã0 ;
;
Ã0Ã0; <
}
Õ0Õ0 
}
Œ0Œ0 	
[
œ0œ0 	
	WebMethod
œ0œ0	 
]
œ0œ0 
public
–0–0 
string
–0–0 $
InsertCorrectiveAction
–0–0 ,
(
–0–0, -
string
–0–0- 3!
CollectionLevel2_Id
–0–04 G
,
–0–0G H
string
–0–0I O
ParLevel1_Id
–0–0P \
,
–0–0\ ]
string
–0–0^ d
ParLevel2_Id
–0–0e q
,
–0–0q r
string
–0–0s y
Shift
–0–0z 
,–0–0 Ä
string–0–0Å á
Period–0–0à é
,–0–0é è
string–0–0ê ñ
ParCompany_Id–0–0ó §
,–0–0§ •
string
—0—0 
EvaluationNumber
—0—0 #
,
—0—0# $
string
—0—0% +
ParFrequency_Id
—0—0, ;
,
—0—0; <
string
—0—0= C
data
—0—0D H
,
—0—0H I
string
—0—0J P
	AuditorId
—0—0Q Z
,
—0—0Z [
string
—0—0\ b
SlaughterId
—0—0c n
,
—0—0n o
string
—0—0p v
TechinicalId—0—0w É
,—0—0É Ñ
string—0—0Ö ã!
DateTimeSlaughter—0—0å ù
,—0—0ù û
string
“0“0  
DateTimeTechinical
“0“0 %
,
“0“0% &
string
“0“0' -"
DateCorrectiveAction
“0“0. B
,
“0“0B C
string
“0“0D J
AuditStartTime
“0“0K Y
,
“0“0Y Z
string
“0“0[ a 
DescriptionFailure
“0“0b t
,
“0“0t u
string
“0“0v |(
ImmediateCorrectiveAction“0“0} ñ
,“0“0ñ ó
string
”0”0  
ProductDisposition
”0”0 %
,
”0”0% &
string
”0”0' -!
PreventativeMeasure
”0”0. A
,
”0”0A B
string
”0”0C I
reauditnumber
”0”0J W
)
”0”0W X
{
‘0‘0 	
try
’0’0 
{
÷0÷0 
SlaughterId
Ÿ0Ÿ0 
=
Ÿ0Ÿ0  
DefaultValueReturn
Ÿ0Ÿ0 0
(
Ÿ0Ÿ00 1
SlaughterId
Ÿ0Ÿ01 <
,
Ÿ0Ÿ0< =
$str
Ÿ0Ÿ0> A
)
Ÿ0Ÿ0A B
;
Ÿ0Ÿ0B C
TechinicalId
⁄0⁄0 
=
⁄0⁄0  
DefaultValueReturn
⁄0⁄0 1
(
⁄0⁄01 2
TechinicalId
⁄0⁄02 >
,
⁄0⁄0> ?
$str
⁄0⁄0@ C
)
⁄0⁄0C D
;
⁄0⁄0D E
DateTimeSlaughter
€0€0 !
=
€0€0" # 
DefaultValueReturn
€0€0$ 6
(
€0€06 7
DateTimeSlaughter
€0€07 H
,
€0€0H I
$str
€0€0J ]
)
€0€0] ^
;
€0€0^ _ 
DateTimeTechinical
‹0‹0 "
=
‹0‹0# $
DateTimeSlaughter
‹0‹0% 6
;
‹0‹06 7
Period
›0›0 
=
›0›0  
DefaultValueReturn
›0›0 +
(
›0›0+ ,
Period
›0›0, 2
,
›0›02 3
$str
›0›04 7
)
›0›07 8
;
›0›08 9
if
ﬂ0ﬂ0 
(
ﬂ0ﬂ0 
string
ﬂ0ﬂ0 
.
ﬂ0ﬂ0 
IsNullOrEmpty
ﬂ0ﬂ0 (
(
ﬂ0ﬂ0( )!
CollectionLevel2_Id
ﬂ0ﬂ0) <
)
ﬂ0ﬂ0< =
||
ﬂ0ﬂ0> @!
CollectionLevel2_Id
ﬂ0ﬂ0A T
==
ﬂ0ﬂ0U W
$str
ﬂ0ﬂ0X [
)
ﬂ0ﬂ0[ \
{
‡0‡0 !
CollectionLevel2_Id
·0·0 '
=
·0·0( )5
'getCollectionLevel2WithCorrectiveAction
·0·0* Q
(
·0·0Q R
ParLevel1_Id
·0·0R ^
,
·0·0^ _
ParLevel2_Id
·0·0` l
,
·0·0l m
Shift
·0·0n s
,
·0·0s t
Period
·0·0u {
,
·0·0{ |
ParCompany_Id·0·0} ä
,·0·0ä ã 
EvaluationNumber·0·0å ú
,·0·0ú ù
reauditnumber·0·0û ´
,·0·0´ ¨
data·0·0≠ ±
)·0·0± ≤
.·0·0≤ ≥
ToString·0·0≥ ª
(·0·0ª º
)·0·0º Ω
;·0·0Ω æ
if
‚0‚0 
(
‚0‚0 !
CollectionLevel2_Id
‚0‚0 +
==
‚0‚0, .
$str
‚0‚0/ 2
)
‚0‚02 3
{
„0„0 
return
‰0‰0 
$str
‰0‰0 &
;
‰0‰0& '
}
Â0Â0 
}
Ê0Ê0  
DescriptionFailure
Ë0Ë0 "
=
Ë0Ë0# $
HttpUtility
Ë0Ë0% 0
.
Ë0Ë00 1
	UrlDecode
Ë0Ë01 :
(
Ë0Ë0: ; 
DescriptionFailure
Ë0Ë0; M
,
Ë0Ë0M N
System
Ë0Ë0O U
.
Ë0Ë0U V
Text
Ë0Ë0V Z
.
Ë0Ë0Z [
Encoding
Ë0Ë0[ c
.
Ë0Ë0c d
Default
Ë0Ë0d k
)
Ë0Ë0k l
;
Ë0Ë0l m'
ImmediateCorrectiveAction
È0È0 )
=
È0È0* +
HttpUtility
È0È0, 7
.
È0È07 8
	UrlDecode
È0È08 A
(
È0È0A B'
ImmediateCorrectiveAction
È0È0B [
,
È0È0[ \
System
È0È0] c
.
È0È0c d
Text
È0È0d h
.
È0È0h i
Encoding
È0È0i q
.
È0È0q r
Default
È0È0r y
)
È0È0y z
;
È0È0z { 
ProductDisposition
Í0Í0 "
=
Í0Í0# $
HttpUtility
Í0Í0% 0
.
Í0Í00 1
	UrlDecode
Í0Í01 :
(
Í0Í0: ; 
ProductDisposition
Í0Í0; M
,
Í0Í0M N
System
Í0Í0O U
.
Í0Í0U V
Text
Í0Í0V Z
.
Í0Í0Z [
Encoding
Í0Í0[ c
.
Í0Í0c d
Default
Í0Í0d k
)
Í0Í0k l
;
Í0Í0l m!
PreventativeMeasure
Î0Î0 #
=
Î0Î0$ %
HttpUtility
Î0Î0& 1
.
Î0Î01 2
	UrlDecode
Î0Î02 ;
(
Î0Î0; <!
PreventativeMeasure
Î0Î0< O
,
Î0Î0O P
System
Î0Î0Q W
.
Î0Î0W X
Text
Î0Î0X \
.
Î0Î0\ ]
Encoding
Î0Î0] e
.
Î0Î0e f
Default
Î0Î0f m
)
Î0Î0m n
;
Î0Î0n o
int
Ì0Ì0 
id
Ì0Ì0 
=
Ì0Ì0 $
correctiveActionInsert
Ì0Ì0 /
(
Ì0Ì0/ 0
	AuditorId
Ì0Ì00 9
,
Ì0Ì09 :!
CollectionLevel2_Id
Ì0Ì0; N
,
Ì0Ì0N O
SlaughterId
Ì0Ì0P [
,
Ì0Ì0[ \
TechinicalId
Ì0Ì0] i
,
Ì0Ì0i j
DateTimeSlaughter
Ì0Ì0k |
,
Ì0Ì0| }!
DateTimeTechinicalÌ0Ì0~ ê
,Ì0Ì0ê ë$
DateCorrectiveActionÌ0Ì0í ¶
,Ì0Ì0¶ ß
AuditStartTimeÌ0Ì0® ∂
,Ì0Ì0∂ ∑"
DescriptionFailureÌ0Ì0∏  
,Ì0Ì0  À'
ImmediateCorrectiveAction
Ó0Ó0 -
,
Ó0Ó0- . 
ProductDisposition
Ó0Ó0/ A
,
Ó0Ó0A B!
PreventativeMeasure
Ó0Ó0C V
)
Ó0Ó0V W
;
Ó0Ó0W X
if
00 
(
00 
id
00 
>
00 
$num
00 
)
00 
{
Ò0Ò0 
string
ı0ı0 

dataInicio
ı0ı0 %
=
ı0ı0& '
null
ı0ı0( ,
;
ı0ı0, -
string
ˆ0ˆ0 
dataFim
ˆ0ˆ0 "
=
ˆ0ˆ0# $
null
ˆ0ˆ0% )
;
ˆ0ˆ0) *
if
¯0¯0 
(
¯0¯0 
!
¯0¯0 
data
¯0¯0 
.
¯0¯0 
Contains
¯0¯0 &
(
¯0¯0& '
$str
¯0¯0' *
)
¯0¯0* +
)
¯0¯0+ ,
{
˘0˘0 
string
˙0˙0 
dia
˙0˙0 "
=
˙0˙0# $
data
˙0˙0% )
.
˙0˙0) *
	Substring
˙0˙0* 3
(
˙0˙03 4
$num
˙0˙04 5
,
˙0˙05 6
$num
˙0˙07 8
)
˙0˙08 9
;
˙0˙09 :
string
˚0˚0 
mes
˚0˚0 "
=
˚0˚0# $
data
˚0˚0% )
.
˚0˚0) *
	Substring
˚0˚0* 3
(
˚0˚03 4
$num
˚0˚04 5
,
˚0˚05 6
$num
˚0˚07 8
)
˚0˚08 9
;
˚0˚09 :
string
¸0¸0 
ano
¸0¸0 "
=
¸0¸0# $
data
¸0¸0% )
.
¸0¸0) *
	Substring
¸0¸0* 3
(
¸0¸03 4
$num
¸0¸04 5
,
¸0¸05 6
$num
¸0¸07 8
)
¸0¸08 9
;
¸0¸09 :
data
˛0˛0 
=
˛0˛0 
ano
˛0˛0 "
+
˛0˛0# $
$str
˛0˛0% (
+
˛0˛0) *
mes
˛0˛0+ .
+
˛0˛0/ 0
$str
˛0˛01 4
+
˛0˛05 6
dia
˛0˛07 :
;
˛0˛0: ;
}
ˇ0ˇ0 
DateTime
Ä1Ä1 
dataAPP
Ä1Ä1 $
=
Ä1Ä1% &
Convert
Ä1Ä1' .
.
Ä1Ä1. /

ToDateTime
Ä1Ä1/ 9
(
Ä1Ä19 :
data
Ä1Ä1: >
)
Ä1Ä1> ?
;
Ä1Ä1? @
getFrequencyDate
É1É1 $
(
É1É1$ %
Convert
É1É1% ,
.
É1É1, -
ToInt32
É1É1- 4
(
É1É14 5
ParFrequency_Id
É1É15 D
)
É1É1D E
,
É1É1E F
dataAPP
É1É1G N
,
É1É1N O
ref
É1É1P S

dataInicio
É1É1T ^
,
É1É1^ _
ref
É1É1` c
dataFim
É1É1d k
)
É1É1k l
;
É1É1l m
var
Ñ1Ñ1 
idUpdate
Ñ1Ñ1  
=
Ñ1Ñ1! "B
4updateCorrectiveAction_CollectionLevel2_By_ParLevel1
Ñ1Ñ1# W
(
Ñ1Ñ1W X
ParLevel1_Id
Ñ1Ñ1X d
,
Ñ1Ñ1d e
ParCompany_Id
Ñ1Ñ1f s
,
Ñ1Ñ1s t

dataInicio
Ñ1Ñ1u 
,Ñ1Ñ1 Ä
dataFimÑ1Ñ1Å à
,Ñ1Ñ1à â
reauditnumberÑ1Ñ1ä ó
)Ñ1Ñ1ó ò
;Ñ1Ñ1ò ô
return
Ü1Ü1 
null
Ü1Ü1 
;
Ü1Ü1  
}
á1á1 
else
à1à1 
{
â1â1 
throw
ä1ä1 
new
ä1ä1 
	Exception
ä1ä1 '
(
ä1ä1' (
)
ä1ä1( )
;
ä1ä1) *
}
ã1ã1 
}
ç1ç1 
catch
é1é1 
(
é1é1 
	Exception
é1é1 
ex
é1é1 
)
é1é1  
{
è1è1 
int
ê1ê1 
	insertLog
ê1ê1 
=
ê1ê1 
insertLogJson
ê1ê1  -
(
ê1ê1- .
$str
ê1ê1. 0
,
ê1ê10 1
ex
ê1ê12 4
.
ê1ê14 5
Message
ê1ê15 <
,
ê1ê1< =
$str
ê1ê1> C
,
ê1ê1C D
$str
ê1ê1E J
,
ê1ê1J K
$str
ê1ê1L d
)
ê1ê1d e
;
ê1ê1e f
return
í1í1 
$str
í1í1 
;
í1í1 
throw
ì1ì1 
ex
ì1ì1 
;
ì1ì1 
}
î1î1 
}
ï1ï1 	
public
ñ1ñ1 
int
ñ1ñ1 5
'getCollectionLevel2WithCorrectiveAction
ñ1ñ1 :
(
ñ1ñ1: ;
string
ñ1ñ1; A
ParLevel1_Id
ñ1ñ1B N
,
ñ1ñ1N O
string
ñ1ñ1P V
ParLevel2_Id
ñ1ñ1W c
,
ñ1ñ1c d
string
ñ1ñ1e k
Shift
ñ1ñ1l q
,
ñ1ñ1q r
string
ñ1ñ1s y
Periodñ1ñ1z Ä
,ñ1ñ1Ä Å
stringñ1ñ1Ç à
ParCompany_Idñ1ñ1â ñ
,ñ1ñ1ñ ó
stringñ1ñ1ò û 
EvaluationNumberñ1ñ1ü Ø
,ñ1ñ1Ø ∞
stringñ1ñ1± ∑
reauditnumberñ1ñ1∏ ≈
,ñ1ñ1≈ ∆
stringñ1ñ1« Õ
datañ1ñ1Œ “
)ñ1ñ1“ ”
{
ó1ó1 	
if
ö1ö1 
(
ö1ö1 
!
ö1ö1 
data
ö1ö1 
.
ö1ö1 
Contains
ö1ö1 
(
ö1ö1 
$str
ö1ö1 "
)
ö1ö1" #
)
ö1ö1# $
{
õ1õ1 
string
ú1ú1 
dia
ú1ú1 
=
ú1ú1 
data
ú1ú1 !
.
ú1ú1! "
	Substring
ú1ú1" +
(
ú1ú1+ ,
$num
ú1ú1, -
,
ú1ú1- .
$num
ú1ú1/ 0
)
ú1ú10 1
;
ú1ú11 2
string
ù1ù1 
mes
ù1ù1 
=
ù1ù1 
data
ù1ù1 !
.
ù1ù1! "
	Substring
ù1ù1" +
(
ù1ù1+ ,
$num
ù1ù1, -
,
ù1ù1- .
$num
ù1ù1/ 0
)
ù1ù10 1
;
ù1ù11 2
string
û1û1 
ano
û1û1 
=
û1û1 
data
û1û1 !
.
û1û1! "
	Substring
û1û1" +
(
û1û1+ ,
$num
û1û1, -
,
û1û1- .
$num
û1û1/ 0
)
û1û10 1
;
û1û11 2
data
†1†1 
=
†1†1 
ano
†1†1 
+
†1†1 
$str
†1†1  
+
†1†1! "
mes
†1†1# &
+
†1†1' (
$str
†1†1) ,
+
†1†1- .
dia
†1†1/ 2
;
†1†12 3
}
°1°1 
string
£1£1 
sql
£1£1 
=
£1£1 
$str
£1£1 ^
+
£1£1_ `
ParLevel1_Id
£1£1a m
+
£1£1n o
$str£1£1p Ü
+£1£1á à
ParLevel2_Id£1£1â ï
+£1£1ñ ó
$str£1£1ò ®
+£1£1© ™
ParCompany_Id£1£1´ ∏
+£1£1π ∫
$str£1£1ª  
+£1£1À Ã
Shift£1£1Õ “
+£1£1” ‘
$str
§1§1 $
+
§1§1% &
Period
§1§1' -
+
§1§1. /
$str
§1§10 J
+
§1§1K L
EvaluationNumber
§1§1M ]
+
§1§1^ _
$str§1§1` ã
+§1§1å ç
data§1§1é í
+§1§1ì î
$str§1§1ï ¥
+§1§1µ ∂
reauditnumber§1§1∑ ƒ
;§1§1ƒ ≈
string
©1©1 
conexao
©1©1 
=
©1©1 
System
©1©1 #
.
©1©1# $
Configuration
©1©1$ 1
.
©1©11 2"
ConfigurationManager
©1©12 F
.
©1©1F G
ConnectionStrings
©1©1G X
[
©1©1X Y
$str
©1©1Y j
]
©1©1j k
.
©1©1k l
ConnectionString
©1©1l |
;
©1©1| }
try
™1™1 
{
´1´1 
using
¨1¨1 
(
¨1¨1 
SqlConnection
¨1¨1 $

connection
¨1¨1% /
=
¨1¨10 1
new
¨1¨12 5
SqlConnection
¨1¨16 C
(
¨1¨1C D
conexao
¨1¨1D K
)
¨1¨1K L
)
¨1¨1L M
{
≠1≠1 
using
Æ1Æ1 
(
Æ1Æ1 

SqlCommand
Æ1Æ1 %
command
Æ1Æ1& -
=
Æ1Æ1. /
new
Æ1Æ10 3

SqlCommand
Æ1Æ14 >
(
Æ1Æ1> ?
sql
Æ1Æ1? B
,
Æ1Æ1B C

connection
Æ1Æ1D N
)
Æ1Æ1N O
)
Æ1Æ1O P
{
Ø1Ø1 

connection
∞1∞1 "
.
∞1∞1" #
Open
∞1∞1# '
(
∞1∞1' (
)
∞1∞1( )
;
∞1∞1) *
using
±1±1 
(
±1±1 
SqlDataReader
±1±1 ,
r
±1±1- .
=
±1±1/ 0
command
±1±11 8
.
±1±18 9
ExecuteReader
±1±19 F
(
±1±1F G
)
±1±1G H
)
±1±1H I
{
≤1≤1 
if
¥1¥1 
(
¥1¥1  
r
¥1¥1  !
.
¥1¥1! "
Read
¥1¥1" &
(
¥1¥1& '
)
¥1¥1' (
)
¥1¥1( )
{
µ1µ1 
return
∂1∂1  &
Convert
∂1∂1' .
.
∂1∂1. /
ToInt32
∂1∂1/ 6
(
∂1∂16 7
r
∂1∂17 8
[
∂1∂18 9
$num
∂1∂19 :
]
∂1∂1: ;
)
∂1∂1; <
;
∂1∂1< =
}
∑1∑1 
return
π1π1 "
$num
π1π1# $
;
π1π1$ %
}
∫1∫1 
}
ª1ª1 
if
º1º1 
(
º1º1 

connection
º1º1 "
.
º1º1" #
State
º1º1# (
==
º1º1) +
System
º1º1, 2
.
º1º12 3
Data
º1º13 7
.
º1º17 8
ConnectionState
º1º18 G
.
º1º1G H
Open
º1º1H L
)
º1º1L M

connection
º1º1N X
.
º1º1X Y
Close
º1º1Y ^
(
º1º1^ _
)
º1º1_ `
;
º1º1` a
}
Ω1Ω1 
}
æ1æ1 
catch
¿1¿1 
(
¿1¿1 
SqlException
¿1¿1 
ex
¿1¿1  "
)
¿1¿1" #
{
¡1¡1 
int
¬1¬1 
	insertLog
¬1¬1 
=
¬1¬1 
insertLogJson
¬1¬1  -
(
¬1¬1- .
sql
¬1¬1. 1
,
¬1¬11 2
ex
¬1¬13 5
.
¬1¬15 6
Message
¬1¬16 =
,
¬1¬1= >
$str
¬1¬1? D
,
¬1¬1D E
$str
¬1¬1F K
,
¬1¬1K L
$str
¬1¬1M e
)
¬1¬1e f
;
¬1¬1f g
return
√1√1 
$num
√1√1 
;
√1√1 
}
ƒ1ƒ1 
catch
≈1≈1 
(
≈1≈1 
	Exception
≈1≈1 
ex
≈1≈1 
)
≈1≈1  
{
∆1∆1 
int
«1«1 
	insertLog
«1«1 
=
«1«1 
insertLogJson
«1«1  -
(
«1«1- .
sql
«1«1. 1
,
«1«11 2
ex
«1«13 5
.
«1«15 6
Message
«1«16 =
,
«1«1= >
$str
«1«1? D
,
«1«1D E
$str
«1«1F K
,
«1«1K L
$str
«1«1M e
)
«1«1e f
;
«1«1f g
return
»1»1 
$num
»1»1 
;
»1»1 
}
…1…1 
}
 1 1 	
[
Ã1Ã1 	
	WebMethod
Ã1Ã1	 
]
Ã1Ã1 
public
Õ1Õ1 
string
Õ1Õ1 
getPhaseLevel2
Õ1Õ1 $
(
Õ1Õ1$ %
int
Õ1Õ1% (
ParCompany_Id
Õ1Õ1) 6
,
Õ1Õ16 7
string
Õ1Õ18 >
date
Õ1Õ1? C
)
Õ1Õ1C D
{
Œ1Œ1 	
var
–1–1 
ResultPhaseDB
–1–1 
=
–1–1 
new
–1–1  #
SGQDBContext
–1–1$ 0
.
–1–10 1
ResultPhase
–1–11 <
(
–1–1< =
db
–1–1= ?
)
–1–1? @
;
–1–1@ A
var
—1—1 $
ResultPhaseFrequencyDB
—1—1 &
=
—1—1' (
new
—1—1) ,
SGQDBContext
—1—1- 9
.
—1—19 :"
ResultPhaseFrequency
—1—1: N
(
—1—1N O
db
—1—1O Q
)
—1—1Q R
;
—1—1R S
var
“1“1 "
ResultLevel2PeriodDB
“1“1 $
=
“1“1% &
new
“1“1' *
SGQDBContext
“1“1+ 7
.
“1“17 8 
ResultLevel2Period
“1“18 J
(
“1“1J K
db
“1“1K M
)
“1“1M N
;
“1“1N O
DateTime
÷1÷1 
	startDate
÷1÷1 
=
÷1÷1   
DateCollectConvert
÷1÷1! 3
(
÷1÷13 4
date
÷1÷14 8
)
÷1÷18 9
;
÷1÷19 :
DateTime
◊1◊1 
endDate
◊1◊1 
=
◊1◊1  
DateCollectConvert
◊1◊1 1
(
◊1◊11 2
date
◊1◊12 6
)
◊1◊16 7
;
◊1◊17 8
	startDate
Ÿ1Ÿ1 
=
Ÿ1Ÿ1 
	startDate
Ÿ1Ÿ1 !
.
Ÿ1Ÿ1! "
AddDays
Ÿ1Ÿ1" )
(
Ÿ1Ÿ1) *
-
Ÿ1Ÿ1* +
$num
Ÿ1Ÿ1+ -
)
Ÿ1Ÿ1- .
;
Ÿ1Ÿ1. /
var
€1€1 
ResultPhaseList
€1€1 
=
€1€1  !
ResultPhaseDB
€1€1" /
.
€1€1/ 0

GetByMonth
€1€10 :
(
€1€1: ;
ParCompany_Id
€1€1; H
,
€1€1H I
	startDate
€1€1J S
,
€1€1S T
endDate
€1€1U \
)
€1€1\ ]
;
€1€1] ^
string
›1›1 
PhaseResult
›1›1 
=
›1›1  
null
›1›1! %
;
›1›1% &
foreach
ﬂ1ﬂ1 
(
ﬂ1ﬂ1 
var
ﬂ1ﬂ1 
c
ﬂ1ﬂ1 
in
ﬂ1ﬂ1 
ResultPhaseList
ﬂ1ﬂ1 -
)
ﬂ1ﬂ1- .
{
‡1‡1 
var
·1·1 
	frequency
·1·1 
=
·1·1 $
ResultPhaseFrequencyDB
·1·1  6
.
·1·16 7
GetPhaseFrequency
·1·17 H
(
·1·1H I
c
·1·1I J
.
·1·1J K
ParLevel1_Id
·1·1K W
,
·1·1W X
c
·1·1Y Z
.
·1·1Z [
Phase
·1·1[ `
)
·1·1` a
;
·1·1a b
c
„1„1 
.
„1„1 
CountPeriod
„1„1 
=
„1„1 
$num
„1„1  !
;
„1„1! "
c
‰1‰1 
.
‰1‰1 

CountShift
‰1‰1 
=
‰1‰1 
$num
‰1‰1  
;
‰1‰1  !
var
Ê1Ê1 
	divPeriod
Ê1Ê1 
=
Ê1Ê1 
$str
Ê1Ê1  "
;
Ê1Ê1" #
if
Á1Á1 
(
Á1Á1 
	frequency
Á1Á1 
!=
Á1Á1  
null
Á1Á1! %
&&
Á1Á1& (
	frequency
Á1Á1) 2
.
Á1Á12 3
ParFrequency_Id
Á1Á13 B
==
Á1Á1C E
$num
Á1Á1F G
)
Á1Á1G H
{
Ë1Ë1 
var
È1È1 
listResultLevel2
È1È1 (
=
È1È1) *"
ResultLevel2PeriodDB
È1È1+ ?
.
È1È1? @#
GetResultLevel2Period
È1È1@ U
(
È1È1U V
c
È1È1V W
.
È1È1W X
Id
È1È1X Z
,
È1È1Z [
ParCompany_Id
È1È1\ i
,
È1È1i j
c
È1È1k l
.
È1È1l m
ParLevel1_Id
È1È1m y
,
È1È1y z
c
È1È1{ |
.
È1È1| }
ParLevel2_IdÈ1È1} â
,È1È1â ä
	startDateÈ1È1ã î
,È1È1î ï
endDateÈ1È1ñ ù
,È1È1ù û
cÈ1È1ü †
.È1È1† °
ShiftÈ1È1° ¶
)È1È1¶ ß
;È1È1ß ®
foreach
Î1Î1 
(
Î1Î1 
var
Î1Î1  
obj
Î1Î1! $
in
Î1Î1% '
listResultLevel2
Î1Î1( 8
)
Î1Î18 9
{
Ï1Ï1 
	divPeriod
Ì1Ì1 !
+=
Ì1Ì1" $
$str
Ì1Ì1% H
+
Ì1Ì1I J
obj
Ì1Ì1K N
.
Ì1Ì1N O
Period
Ì1Ì1O U
+
Ì1Ì1V W
$str
Ì1Ì1X b
+
Ì1Ì1c d
obj
Ì1Ì1e h
.
Ì1Ì1h i
CollectionDate
Ì1Ì1i w
.
Ì1Ì1w x
ToStringÌ1Ì1x Ä
(Ì1Ì1Ä Å
$strÌ1Ì1Å ã
)Ì1Ì1ã å
+Ì1Ì1ç é
$strÌ1Ì1è ô
;Ì1Ì1ô ö
}
Ó1Ó1 
}
11 
PhaseResult
Ú1Ú1 
+=
Ú1Ú1 
$str
Ú1Ú1 &
+
Ú1Ú1' (
$str
Û1Û1 %
+
Û1Û1& '
c
Û1Û1( )
.
Û1Û1) *
ParLevel1_Id
Û1Û1* 6
+
Û1Û17 8
$str
Û1Û19 >
+
Û1Û1? @
$str
Ù1Ù1 %
+
Ù1Ù1& '
c
Ù1Ù1( )
.
Ù1Ù1) *
ParLevel2_Id
Ù1Ù1* 6
+
Ù1Ù17 8
$str
Ù1Ù19 >
+
Ù1Ù1? @
$str
ı1ı1 '
+
ı1ı1( )
c
ı1ı1* +
.
ı1ı1+ ,
CollectionDate
ı1ı1, :
+
ı1ı1; <
$str
ı1ı1= B
+
ı1ı1C D
$str
ˆ1ˆ1 )
+
ˆ1ˆ1* +
c
ˆ1ˆ1, -
.
ˆ1ˆ1- .
EvaluationNumber
ˆ1ˆ1. >
+
ˆ1ˆ1? @
$str
ˆ1ˆ1A F
+
ˆ1ˆ1G H
$str
˜1˜1 
+
˜1˜1  !
c
˜1˜1" #
.
˜1˜1# $
Period
˜1˜1$ *
+
˜1˜1+ ,
$str
˜1˜1- 2
+
˜1˜13 4
$str
¯1¯1 
+
¯1¯1  
c
¯1¯1! "
.
¯1¯1" #
Shift
¯1¯1# (
+
¯1¯1) *
$str
¯1¯1+ 0
+
¯1¯11 2
$str
˘1˘1 
+
˘1˘1  
c
˘1˘1! "
.
˘1˘1" #
Phase
˘1˘1# (
+
˘1˘1) *
$str
˘1˘1+ 0
+
˘1˘11 2
$str
˙1˙1 2
+
˙1˙13 4
	divPeriod
˚1˚1 
+
¸1¸1 
$str
¸1¸1 
;
¸1¸1 
}
˝1˝1 
return
˛1˛1 
PhaseResult
˛1˛1 
;
˛1˛1 
}
ˇ1ˇ1 	
[
Å2Å2 	
	WebMethod
Å2Å2	 
]
Å2Å2 
public
Ç2Ç2 
string
Ç2Ç2 (
getResultEvaluationDefects
Ç2Ç2 0
(
Ç2Ç20 1
int
Ç2Ç21 4
parCompany_Id
Ç2Ç25 B
,
Ç2Ç2B C
string
Ç2Ç2D J
date
Ç2Ç2K O
,
Ç2Ç2O P
int
Ç2Ç2Q T
parLevel1_Id
Ç2Ç2U a
)
Ç2Ç2a b
{
É2É2 	
var
Ö2Ö2 
ResultPhaseDB
Ö2Ö2 
=
Ö2Ö2 
new
Ö2Ö2  #
SGQDBContext
Ö2Ö2$ 0
.
Ö2Ö20 1%
ResultEvaluationDefects
Ö2Ö21 H
(
Ö2Ö2H I
db
Ö2Ö2I K
)
Ö2Ö2K L
;
Ö2Ö2L M
DateTime
à2à2 
	dateAtual
à2à2 
=
à2à2   
DateCollectConvert
à2à2! 3
(
à2à23 4
date
à2à24 8
)
à2à28 9
;
à2à29 :
var
ä2ä2 )
ResultEvaluationDefectsList
ä2ä2 +
=
ä2ä2, -
ResultPhaseDB
ä2ä2. ;
.
ä2ä2; <
GetByDay
ä2ä2< D
(
ä2ä2D E
parCompany_Id
ä2ä2E R
,
ä2ä2R S
	dateAtual
ä2ä2T ]
,
ä2ä2] ^
parLevel1_Id
ä2ä2_ k
)
ä2ä2k l
;
ä2ä2l m
string
å2å2 
PhaseResult
å2å2 
=
å2å2  
null
å2å2! %
;
å2å2% &
foreach
é2é2 
(
é2é2 
var
é2é2 
c
é2é2 
in
é2é2 )
ResultEvaluationDefectsList
é2é2 9
)
é2é29 :
{
è2è2 
PhaseResult
ê2ê2 
+=
ê2ê2 
$str
ê2ê2 q
+
ê2ê2r s
$str
ë2ë2 
+
ë2ë2 
date
ë2ë2  $
+
ë2ë2% &
$str
ë2ë2' q
+
ë2ë2r s
$str
í2í2  
+
í2í2! "
c
í2í2# $
.
í2í2$ %
Defects
í2í2% ,
+
í2í2- .
$str
í2í2/ q
+
í2í2r s
$str
ì2ì2 )
+
ì2ì2* +
c
ì2ì2, -
.
ì2ì2- .
EvaluationNumber
ì2ì2. >
+
ì2ì2? @
$str
ì2ì2A q
+
ì2ì2r s
$str
î2î2 
+
î2î2  !
c
î2î2" #
.
î2î2# $
Sample
î2î2$ *
+
î2î2+ ,
$str
î2î2- ]
+
î2î2^ _
$str
ï2ï2 
+
ï2ï2  !
c
ï2ï2" #
.
ï2ï2# $
Period
ï2ï2$ *
+
ï2ï2+ ,
$str
ï2ï2- q
+
ï2ï2r s
$str
ñ2ñ2 
+
ñ2ñ2  
c
ñ2ñ2! "
.
ñ2ñ2" #
Shift
ñ2ñ2# (
+
ñ2ñ2) *
$str
ñ2ñ2+ q
+
ñ2ñ2r s
$str
ó2ó2 %
+
ó2ó2& '
parLevel1_Id
ó2ó2( 4
+
ó2ó25 6
$str
ó2ó27 q
+
ó2ó2r s
$str
ò2ò2 8
;
ò2ò28 9
}
ô2ô2 
return
ö2ö2 
PhaseResult
ö2ö2 
;
ö2ö2 
}
õ2õ2 	
[
ù2ù2 	
	WebMethod
ù2ù2	 
]
ù2ù2 
public
û2û2 
string
û2û2 &
_getCollectionLevel2Keys
û2û2 .
(
û2û2. /
string
û2û2/ 5
ParCompany_Id
û2û26 C
,
û2û2C D
string
û2û2E K
date
û2û2L P
,
û2û2P Q
int
û2û2R U
ParLevel1_Id
û2û2V b
=
û2û2c d
$num
û2û2e f
)
û2û2f g
{
ü2ü2 	
var
¢2¢2 3
%ParLevel1ConsolidationXParFrequencyDB
¢2¢2 5
=
¢2¢26 7
new
¢2¢28 ;
SGQDBContext
¢2¢2< H
.
¢2¢2H I1
#ParLevel1ConsolidationXParFrequency
¢2¢2I l
(
¢2¢2l m
db
¢2¢2m o
)
¢2¢2o p
;
¢2¢2p q
DateTime
•2•2 
data
•2•2 
=
•2•2  
DateCollectConvert
•2•2 .
(
•2•2. /
date
•2•2/ 3
)
•2•23 4
;
•2•24 5
var
ß2ß2 1
#parLevel1ConsolidationXParFrequency
ß2ß2 3
=
ß2ß24 53
%ParLevel1ConsolidationXParFrequencyDB
ß2ß26 [
.
ß2ß2[ \
getList
ß2ß2\ c
(
ß2ß2c d
Convert
ß2ß2d k
.
ß2ß2k l
ToInt32
ß2ß2l s
(
ß2ß2s t
ParCompany_Idß2ß2t Å
)ß2ß2Å Ç
,ß2ß2Ç É
dataß2ß2Ñ à
)ß2ß2à â
;ß2ß2â ä
if
´2´2 
(
´2´2 
ParLevel1_Id
´2´2 
>
´2´2 
$num
´2´2  
)
´2´2  !
{
¨2¨2 1
#parLevel1ConsolidationXParFrequency
≠2≠2 3
=
≠2≠24 51
#parLevel1ConsolidationXParFrequency
≠2≠26 Y
.
≠2≠2Y Z
Where
≠2≠2Z _
(
≠2≠2_ `
p
≠2≠2` a
=>
≠2≠2b d
p
≠2≠2e f
.
≠2≠2f g
ParLevel1_Id
≠2≠2g s
==
≠2≠2t v
ParLevel1_Id≠2≠2w É
)≠2≠2É Ñ
;≠2≠2Ñ Ö
}
Æ2Æ2 
string
Ø2Ø2 
ResultsKeys
Ø2Ø2 
=
Ø2Ø2  
null
Ø2Ø2! %
;
Ø2Ø2% &
foreach
±2±2 
(
±2±2 
var
±2±2 
c
±2±2 
in
±2±2 1
#parLevel1ConsolidationXParFrequency
±2±2 A
)
±2±2A B
{
≤2≤2 
string
¥2¥2 

dataInicio
¥2¥2 !
=
¥2¥2" #
null
¥2¥2$ (
;
¥2¥2( )
string
µ2µ2 
dataFim
µ2µ2 
=
µ2µ2  
null
µ2µ2! %
;
µ2µ2% &
getFrequencyDate
∏2∏2  
(
∏2∏2  !
c
∏2∏2! "
.
∏2∏2" #
ParFrequency_Id
∏2∏2# 2
,
∏2∏22 3
data
∏2∏24 8
,
∏2∏28 9
ref
∏2∏2: =

dataInicio
∏2∏2> H
,
∏2∏2H I
ref
∏2∏2J M
dataFim
∏2∏2N U
)
∏2∏2U V
;
∏2∏2V W
var
ª2ª2 
Level2ResultDB
ª2ª2 "
=
ª2ª2# $
new
ª2ª2% (
SGQDBContext
ª2ª2) 5
.
ª2ª25 6
Level2Result
ª2ª26 B
(
ª2ª2B C
db
ª2ª2C E
)
ª2ª2E F
;
ª2ª2F G
var
º2º2 
Level2ResultList
º2º2 $
=
º2º2% &
Level2ResultDB
º2º2' 5
.
º2º25 6
getKeys
º2º26 =
(
º2º2= >
c
º2º2> ?
.
º2º2? @
ParLevel1_Id
º2º2@ L
,
º2º2L M
Convert
º2º2N U
.
º2º2U V
ToInt32
º2º2V ]
(
º2º2] ^
ParCompany_Id
º2º2^ k
)
º2º2k l
,
º2º2l m

dataInicio
º2º2n x
,
º2º2x y
dataFimº2º2z Å
)º2º2Å Ç
;º2º2Ç É
string
Ω2Ω2 
listKeys
Ω2Ω2 
=
Ω2Ω2  !
null
Ω2Ω2" &
;
Ω2Ω2& '
foreach
¡2¡2 
(
¡2¡2 
var
¡2¡2 
key
¡2¡2  
in
¡2¡2! #
Level2ResultList
¡2¡2$ 4
)
¡2¡24 5
{
¬2¬2 
listKeys
√2√2 
+=
√2√2 
$str
√2√2  ,
+
√2√2- .
key
√2√2/ 2
.
√2√22 3
Key
√2√23 6
+
√2√27 8
$str
√2√29 b
;
√2√2b c
}
ƒ2ƒ2 
if
∆2∆2 
(
∆2∆2 
!
∆2∆2 
string
∆2∆2 
.
∆2∆2 
IsNullOrEmpty
∆2∆2 )
(
∆2∆2) *
listKeys
∆2∆2* 2
)
∆2∆22 3
)
∆2∆23 4
{
«2«2 
ResultsKeys
»2»2 
+=
»2»2  "
$str
»2»2# 9
+
»2»2: ;
c
»2»2< =
.
»2»2= >
ParLevel1_Id
»2»2> J
+
»2»2K L
$str
»2»2M l
+
»2»2m n
listKeys
…2…2( 0
+
…2…21 2
$str
 2 2# +
;
 2 2+ ,
}
À2À2 
}
Ã2Ã2 
return
Õ2Õ2 
ResultsKeys
Õ2Õ2 
;
Õ2Õ2 
}
Œ2Œ2 	
[
–2–2 	
	WebMethod
–2–2	 
]
–2–2 
public
—2—2 
string
—2—2 %
getCollectionLevel2Keys
—2—2 -
(
—2—2- .
string
—2—2. 4
ParCompany_Id
—2—25 B
,
—2—2B C
string
—2—2D J
date
—2—2K O
,
—2—2O P
int
—2—2Q T
ParLevel1_Id
—2—2U a
=
—2—2b c
$num
—2—2d e
)
—2—2e f
{
“2“2 	
DateTime
‘2‘2 
data
‘2‘2 
=
‘2‘2  
DateCollectConvert
‘2‘2 .
(
‘2‘2. /
date
‘2‘2/ 3
)
‘2‘23 4
;
‘2‘24 5
string
÷2÷2 
dataS
÷2÷2 
=
÷2÷2 
data
÷2÷2 
.
÷2÷2  
ToString
÷2÷2  (
(
÷2÷2( )
$str
÷2÷2) 3
)
÷2÷23 4
;
÷2÷24 5
string
ÿ2ÿ2 
ResultsKeys
ÿ2ÿ2 
=
ÿ2ÿ2  
$str
ÿ2ÿ2! #
;
ÿ2ÿ2# $
string
⁄2⁄2 
sql
⁄2⁄2 
=
⁄2⁄2 
$str
⁄2⁄2 
+
⁄2⁄2 
$str€2€2 ™
+€2€2´ ¨
$str‹2‹2 ™
+‹2‹2´ ¨
$str›2›2 ™
+›2›2´ ¨
$strﬁ2ﬁ2 ¨
+ﬁ2ﬁ2≠ Æ
$strﬂ2ﬂ2 ´
+ﬂ2ﬂ2¨ ≠
$str‡2‡2 ¥
+‡2‡2µ ∂
$str
·2·2 )
+
·2·2* +
ParCompany_Id
·2·2, 9
+
·2·2: ;
$str
·2·2< n
+
·2·2o p
dataS
·2·2q v
+
·2·2w x
$str·2·2y Ç
+·2·2É Ñ
dataS·2·2Ö ä
+·2·2ã å
$str·2·2ç ƒ
+·2·2≈ ∆
$str‚2‚2 ™
+‚2‚2´ ¨
$str„2„2 ™
+„2„2´ ¨
$str‰2‰2 ™
+‰2‰2´ ¨
$strÂ2Â2 ™
+Â2Â2´ ¨
$strÊ2Ê2 ™
+Ê2Ê2´ ¨
$strÁ2Á2 ™
+Á2Á2´ ¨
$strË2Ë2 ™
+Ë2Ë2´ ¨
$strÈ2È2 ´
+È2È2¨ ≠
$strÍ2Í2 ™
+Í2Í2´ ¨
$strÎ2Î2 ™
+Î2Î2´ ¨
$strÏ2Ï2 ™
+Ï2Ï2´ ¨
$strÌ2Ì2 ™
+Ì2Ì2´ ¨
$strÓ2Ó2 ™
+Ó2Ó2´ ¨
$strÔ2Ô2 ™
+Ô2Ô2´ ¨
$str22 ™
+22´ ¨
$strÒ2Ò2 ™
+Ò2Ò2´ ¨
$strÚ2Ú2 ™
+Ú2Ú2´ ¨
$strÛ2Û2 ™
+Û2Û2´ ¨
$strÙ2Ù2 ™
+Ù2Ù2´ ¨
$strı2ı2 ™
+ı2ı2´ ¨
$strˆ2ˆ2 ™
+ˆ2ˆ2´ ¨
$str˜2˜2 ™
+˜2˜2´ ¨
$str¯2¯2 ™
+¯2¯2´ ¨
$str˘2˘2 ™
+˘2˘2´ ¨
$str˙2˙2 ™
+˙2˙2´ ¨
$str˚2˚2 ´
+˚2˚2¨ ≠
$str¸2¸2 ™
+¸2¸2´ ¨
$str˝2˝2 ™
+˝2˝2´ ¨
$str˛2˛2 ™
+˛2˛2´ ¨
$strˇ2ˇ2 ™
+ˇ2ˇ2´ ¨
$strÄ3Ä3 ™
+Ä3Ä3´ ¨
$strÅ3Å3 ™
+Å3Å3´ ¨
$strÇ3Ç3 ™
+Ç3Ç3´ ¨
$strÉ3É3 ©
+É3É3™ ´
$strÑ3Ñ3 ©
+Ñ3Ñ3™ ´
$strÖ3Ö3 ©
+Ö3Ö3™ ´
$strÜ3Ü3 ©
+Ü3Ü3™ ´
$strá3á3 ©
+á3á3™ ´
$strà3à3 ©
+à3à3™ ´
$strâ3â3 ©
+â3â3™ ´
$strä3ä3 ©
+ä3ä3™ ´
$strã3ã3 ©
+ã3ã3™ ´
$strå3å3 ©
+å3å3™ ´
$strç3ç3 ©
+ç3ç3™ ´
$stré3é3 ©
+é3é3™ ´
$strè3è3 ©
+è3è3™ ´
$strê3ê3 ©
+ê3ê3™ ´
$strë3ë3 ©
+ë3ë3™ ´
$strí3í3 ©
+í3í3™ ´
$strì3ì3 ©
+ì3ì3™ ´
$strî3î3 ©
+î3î3™ ´
$strï3ï3 ©
+ï3ï3™ ´
$strñ3ñ3 ©
+ñ3ñ3™ ´
$stró3ó3 ©
+ó3ó3™ ´
$strò3ò3 ©
+ò3ò3™ ´
$strô3ô3 ©
+ô3ô3™ ´
$strö3ö3 ©
+ö3ö3™ ´
$strõ3õ3 ë
+õ3õ3í ì
$strú3ú3 ©
+ú3ú3™ ´
$strù3ù3 ô
+ù3ù3ö õ
$strû3û3 ©
+û3û3™ ´
$strü3ü3 ©
+ü3ü3™ ´
$str†3†3 ©
+†3†3™ ´
$str°3°3 ©
+°3°3™ ´
$str¢3¢3 ©
+¢3¢3™ ´
$str
£3£3 H
;
£3£3H I
List
ß3ß3 
<
ß3ß3  
ResultadoUmaColuna
ß3ß3 #
>
ß3ß3# $
Lista1
ß3ß3% +
=
ß3ß3, -
dbEf
ß3ß3. 2
.
ß3ß32 3
Database
ß3ß33 ;
.
ß3ß3; <
SqlQuery
ß3ß3< D
<
ß3ß3D E 
ResultadoUmaColuna
ß3ß3E W
>
ß3ß3W X
(
ß3ß3X Y
sql
ß3ß3Y \
)
ß3ß3\ ]
.
ß3ß3] ^
ToList
ß3ß3^ d
(
ß3ß3d e
)
ß3ß3e f
;
ß3ß3f g
foreach
©3©3 
(
©3©3 
var
©3©3 
i
©3©3 
in
©3©3 
Lista1
©3©3 $
)
©3©3$ %
{
™3™3 
ResultsKeys
´3´3 
+=
´3´3 
i
´3´3  
.
´3´3  !
retorno
´3´3! (
;
´3´3( )
}
¨3¨3 
return
Æ3Æ3 
ResultsKeys
Æ3Æ3 
;
Æ3Æ3 
}
Ø3Ø3 	
[
±3±3 	
	WebMethod
±3±3	 
]
±3±3 
public
≤3≤3 
string
≤3≤3 .
 _ConsolidationByCollectionLevel2
≤3≤3 6
(
≤3≤36 7
)
≤3≤37 8
{
≥3≥3 	
string
∂3∂3 
sql
∂3∂3 
=
∂3∂3 
$str∂3∂3 €
;∂3∂3€ ‹
string
∏3∏3 
conexao
∏3∏3 
=
∏3∏3 
System
∏3∏3 #
.
∏3∏3# $
Configuration
∏3∏3$ 1
.
∏3∏31 2"
ConfigurationManager
∏3∏32 F
.
∏3∏3F G
ConnectionStrings
∏3∏3G X
[
∏3∏3X Y
$str
∏3∏3Y j
]
∏3∏3j k
.
∏3∏3k l
ConnectionString
∏3∏3l |
;
∏3∏3| }
try
π3π3 
{
∫3∫3 
using
ª3ª3 
(
ª3ª3 
SqlConnection
ª3ª3 $

connection
ª3ª3% /
=
ª3ª30 1
new
ª3ª32 5
SqlConnection
ª3ª36 C
(
ª3ª3C D
conexao
ª3ª3D K
)
ª3ª3K L
)
ª3ª3L M
{
º3º3 
using
Ω3Ω3 
(
Ω3Ω3 

SqlCommand
Ω3Ω3 %
command
Ω3Ω3& -
=
Ω3Ω3. /
new
Ω3Ω30 3

SqlCommand
Ω3Ω34 >
(
Ω3Ω3> ?
sql
Ω3Ω3? B
,
Ω3Ω3B C

connection
Ω3Ω3D N
)
Ω3Ω3N O
)
Ω3Ω3O P
{
æ3æ3 

connection
ø3ø3 "
.
ø3ø3" #
Open
ø3ø3# '
(
ø3ø3' (
)
ø3ø3( )
;
ø3ø3) *
using
¿3¿3 
(
¿3¿3 
SqlDataReader
¿3¿3 ,
r
¿3¿3- .
=
¿3¿3/ 0
command
¿3¿31 8
.
¿3¿38 9
ExecuteReader
¿3¿39 F
(
¿3¿3F G
)
¿3¿3G H
)
¿3¿3H I
{
¡3¡3 
var
√3√3 #
ConsolidationLevel1DB
√3√3  5
=
√3√36 7
new
√3√38 ;
SGQDBContext
√3√3< H
.
√3√3H I!
ConsolidationLevel1
√3√3I \
(
√3√3\ ]
db
√3√3] _
)
√3√3_ `
;
√3√3` a
var
ƒ3ƒ3 #
ConsolidationLevel2DB
ƒ3ƒ3  5
=
ƒ3ƒ36 7
new
ƒ3ƒ38 ;
SGQDBContext
ƒ3ƒ3< H
.
ƒ3ƒ3H I!
ConsolidationLevel2
ƒ3ƒ3I \
(
ƒ3ƒ3\ ]
db
ƒ3ƒ3] _
)
ƒ3ƒ3_ `
;
ƒ3ƒ3` a
while
»3»3 !
(
»3»3" #
r
»3»3# $
.
»3»3$ %
Read
»3»3% )
(
»3»3) *
)
»3»3* +
)
»3»3+ ,
{
…3…3 
int
 3 3  #
ParLevel1_Id
 3 3$ 0
=
 3 31 2
Convert
 3 33 :
.
 3 3: ;
ToInt32
 3 3; B
(
 3 3B C
r
 3 3C D
[
 3 3D E
$num
 3 3E F
]
 3 3F G
)
 3 3G H
;
 3 3H I
int
À3À3  #
ParLevel2_Id
À3À3$ 0
=
À3À31 2
Convert
À3À33 :
.
À3À3: ;
ToInt32
À3À3; B
(
À3À3B C
r
À3À3C D
[
À3À3D E
$num
À3À3E F
]
À3À3F G
)
À3À3G H
;
À3À3H I
int
Ã3Ã3  #
ParCompany_Id
Ã3Ã3$ 1
=
Ã3Ã32 3
Convert
Ã3Ã34 ;
.
Ã3Ã3; <
ToInt32
Ã3Ã3< C
(
Ã3Ã3C D
r
Ã3Ã3D E
[
Ã3Ã3E F
$num
Ã3Ã3F G
]
Ã3Ã3G H
)
Ã3Ã3H I
;
Ã3Ã3I J
DateTime
Õ3Õ3  (
CollectionDate
Õ3Õ3) 7
=
Õ3Õ38 9
Convert
Õ3Õ3: A
.
Õ3Õ3A B

ToDateTime
Õ3Õ3B L
(
Õ3Õ3L M
r
Õ3Õ3M N
[
Õ3Õ3N O
$num
Õ3Õ3O P
]
Õ3Õ3P Q
)
Õ3Õ3Q R
;
Õ3Õ3R S
int
Œ3Œ3  #
shift
Œ3Œ3$ )
=
Œ3Œ3* +
Convert
Œ3Œ3, 3
.
Œ3Œ33 4
ToInt32
Œ3Œ34 ;
(
Œ3Œ3; <
r
Œ3Œ3< =
[
Œ3Œ3= >
$num
Œ3Œ3> ?
]
Œ3Œ3? @
)
Œ3Œ3@ A
;
Œ3Œ3A B
int
œ3œ3  #
period
œ3œ3$ *
=
œ3œ3+ ,
Convert
œ3œ3- 4
.
œ3œ34 5
ToInt32
œ3œ35 <
(
œ3œ3< =
r
œ3œ3= >
[
œ3œ3> ?
$num
œ3œ3? @
]
œ3œ3@ A
)
œ3œ3A B
;
œ3œ3B C
var
—3—3  #!
consolidationLevel1
—3—3$ 7
=
—3—38 9#
ConsolidationLevel1DB
—3—3: O
.
—3—3O P
getConsolidation
—3—3P `
(
—3—3` a
ParCompany_Id
—3—3a n
,
—3—3n o
ParLevel1_Id
—3—3p |
,
—3—3| }
CollectionDate—3—3~ å
,—3—3å ç
shift—3—3é ì
,—3—3ì î
period—3—3ï õ
)—3—3õ ú
;—3—3ú ù
if
“3“3  "
(
“3“3# $!
consolidationLevel1
“3“3$ 7
==
“3“38 :
null
“3“3; ?
)
“3“3? @
{
”3”3  !!
consolidationLevel1
‘3‘3$ 7
=
‘3‘38 9'
InsertConsolidationLevel1
‘3‘3: S
(
‘3‘3S T
ParCompany_Id
‘3‘3T a
,
‘3‘3a b
ParLevel1_Id
‘3‘3c o
,
‘3‘3o p
CollectionDate
‘3‘3q 
,‘3‘3 Ä
shift‘3‘3Å Ü
,‘3‘3Ü á
period‘3‘3à é
)‘3‘3é è
;‘3‘3è ê
if
’3’3$ &
(
’3’3' (!
consolidationLevel1
’3’3( ;
==
’3’3< >
null
’3’3? C
)
’3’3C D
{
÷3÷3$ %
throw
◊3◊3( -
new
◊3◊3. 1
	Exception
◊3◊32 ;
(
◊3◊3; <
)
◊3◊3< =
;
◊3◊3= >
}
ÿ3ÿ3$ %
}
Ÿ3Ÿ3  !
var
€3€3  #!
consolidationLevel2
€3€3$ 7
=
€3€38 9#
ConsolidationLevel2DB
€3€3: O
.
€3€3O P&
getByConsolidationLevel1
€3€3P h
(
€3€3h i
ParCompany_Id
€3€3i v
,
€3€3v w"
consolidationLevel1€3€3x ã
.€3€3ã å
Id€3€3å é
,€3€3é è
ParLevel2_Id€3€3ê ú
)€3€3ú ù
;€3€3ù û
if
›3›3  "
(
›3›3# $!
consolidationLevel2
›3›3$ 7
==
›3›38 :
null
›3›3; ?
)
›3›3? @
{
ﬁ3ﬁ3  !!
consolidationLevel2
ﬂ3ﬂ3$ 7
=
ﬂ3ﬂ38 9'
InsertConsolidationLevel2
ﬂ3ﬂ3: S
(
ﬂ3ﬂ3S T!
consolidationLevel1
ﬂ3ﬂ3T g
.
ﬂ3ﬂ3g h
Id
ﬂ3ﬂ3h j
,
ﬂ3ﬂ3j k
ParLevel2_Id
ﬂ3ﬂ3l x
,
ﬂ3ﬂ3x y
ParCompany_Idﬂ3ﬂ3z á
,ﬂ3ﬂ3á à
CollectionDateﬂ3ﬂ3â ó
,ﬂ3ﬂ3ó ò
falseﬂ3ﬂ3ô û
,ﬂ3ﬂ3û ü
$numﬂ3ﬂ3† °
)ﬂ3ﬂ3° ¢
;ﬂ3ﬂ3¢ £
if
‡3‡3$ &
(
‡3‡3' (!
consolidationLevel2
‡3‡3( ;
==
‡3‡3< >
null
‡3‡3? C
)
‡3‡3C D
{
·3·3$ %
throw
‚3‚3( -
new
‚3‚3. 1
	Exception
‚3‚32 ;
(
‚3‚3; <
)
‚3‚3< =
;
‚3‚3= >
}
„3„3$ %
}
‰3‰3  !
}
Ê3Ê3 
return
Ë3Ë3 "
null
Ë3Ë3# '
;
Ë3Ë3' (
}
È3È3 
}
Í3Í3 
if
Î3Î3 
(
Î3Î3 

connection
Î3Î3 "
.
Î3Î3" #
State
Î3Î3# (
==
Î3Î3) +
System
Î3Î3, 2
.
Î3Î32 3
Data
Î3Î33 7
.
Î3Î37 8
ConnectionState
Î3Î38 G
.
Î3Î3G H
Open
Î3Î3H L
)
Î3Î3L M

connection
Î3Î3N X
.
Î3Î3X Y
Close
Î3Î3Y ^
(
Î3Î3^ _
)
Î3Î3_ `
;
Î3Î3` a
}
Ï3Ï3 
}
Ì3Ì3 
catch
Ô3Ô3 
(
Ô3Ô3 
SqlException
Ô3Ô3 
ex
Ô3Ô3  "
)
Ô3Ô3" #
{
33 
int
Ò3Ò3 
	insertLog
Ò3Ò3 
=
Ò3Ò3 
insertLogJson
Ò3Ò3  -
(
Ò3Ò3- .
sql
Ò3Ò3. 1
,
Ò3Ò31 2
ex
Ò3Ò33 5
.
Ò3Ò35 6
Message
Ò3Ò36 =
,
Ò3Ò3= >
$str
Ò3Ò3? D
,
Ò3Ò3D E
$str
Ò3Ò3F K
,
Ò3Ò3K L
$str
Ò3Ò3M e
)
Ò3Ò3e f
;
Ò3Ò3f g
return
Ú3Ú3 
ex
Ú3Ú3 
.
Ú3Ú3 
Message
Ú3Ú3 !
;
Ú3Ú3! "
}
Û3Û3 
catch
Ù3Ù3 
(
Ù3Ù3 
	Exception
Ù3Ù3 
ex
Ù3Ù3 
)
Ù3Ù3  
{
ı3ı3 
int
ˆ3ˆ3 
	insertLog
ˆ3ˆ3 
=
ˆ3ˆ3 
insertLogJson
ˆ3ˆ3  -
(
ˆ3ˆ3- .
sql
ˆ3ˆ3. 1
,
ˆ3ˆ31 2
ex
ˆ3ˆ33 5
.
ˆ3ˆ35 6
Message
ˆ3ˆ36 =
,
ˆ3ˆ3= >
$str
ˆ3ˆ3? D
,
ˆ3ˆ3D E
$str
ˆ3ˆ3F K
,
ˆ3ˆ3K L
$str
ˆ3ˆ3M e
)
ˆ3ˆ3e f
;
ˆ3ˆ3f g
return
˜3˜3 
ex
˜3˜3 
.
˜3˜3 
Message
˜3˜3 !
;
˜3˜3! "
}
¯3¯3 
}
˘3˘3 	
[
˚3˚3 	
	WebMethod
˚3˚3	 
]
˚3˚3 
public
¸3¸3 
string
¸3¸3 :
,_CollectionLevel02_ConsolidationLevel2Update
¸3¸3 B
(
¸3¸3B C
string
¸3¸3C I

dataInicio
¸3¸3J T
,
¸3¸3T U
string
¸3¸3V \
dataFim
¸3¸3] d
)
¸3¸3d e
{
˝3˝3 	
string
˛3˛3 
sql
˛3˛3 
=
˛3˛3 
$str
˛3˛3 ~
+˛3˛3 Ä
$str
ˇ3ˇ3 M
+
ˇ3ˇ3N O
$str
Ä4Ä4 f
+
Ä4Ä4g h
$str
Å4Å4 N
+
Å4Å4O P

dataInicio
Å4Å4Q [
+
Å4Å4\ ]
$str
Å4Å4^ g
+
Å4Å4h i
dataFim
Å4Å4j q
+
Å4Å4r s
$str
Å4Å4t x
;
Å4Å4x y
string
É4É4 
conexao
É4É4 
=
É4É4 
System
É4É4 #
.
É4É4# $
Configuration
É4É4$ 1
.
É4É41 2"
ConfigurationManager
É4É42 F
.
É4É4F G
ConnectionStrings
É4É4G X
[
É4É4X Y
$str
É4É4Y j
]
É4É4j k
.
É4É4k l
ConnectionString
É4É4l |
;
É4É4| }
try
Ñ4Ñ4 
{
Ö4Ö4 
using
Ü4Ü4 
(
Ü4Ü4 
SqlConnection
Ü4Ü4 $

connection
Ü4Ü4% /
=
Ü4Ü40 1
new
Ü4Ü42 5
SqlConnection
Ü4Ü46 C
(
Ü4Ü4C D
conexao
Ü4Ü4D K
)
Ü4Ü4K L
)
Ü4Ü4L M
{
á4á4 
using
à4à4 
(
à4à4 

SqlCommand
à4à4 %
command
à4à4& -
=
à4à4. /
new
à4à40 3

SqlCommand
à4à44 >
(
à4à4> ?
sql
à4à4? B
,
à4à4B C

connection
à4à4D N
)
à4à4N O
)
à4à4O P
{
â4â4 

connection
ä4ä4 "
.
ä4ä4" #
Open
ä4ä4# '
(
ä4ä4' (
)
ä4ä4( )
;
ä4ä4) *
using
ã4ã4 
(
ã4ã4 
SqlDataReader
ã4ã4 ,
r
ã4ã4- .
=
ã4ã4/ 0
command
ã4ã41 8
.
ã4ã48 9
ExecuteReader
ã4ã49 F
(
ã4ã4F G
)
ã4ã4G H
)
ã4ã4H I
{
å4å4 
while
è4è4 !
(
è4è4" #
r
è4è4# $
.
è4è4$ %
Read
è4è4% )
(
è4è4) *
)
è4è4* +
)
è4è4+ ,
{
ê4ê4 
int
ë4ë4  #$
ConsolidationLevel2_Id
ë4ë4$ :
=
ë4ë4; <
Convert
ë4ë4= D
.
ë4ë4D E
ToInt32
ë4ë4E L
(
ë4ë4L M
r
ë4ë4M N
[
ë4ë4N O
$num
ë4ë4O P
]
ë4ë4P Q
)
ë4ë4Q R
;
ë4ë4R S
int
í4í4  #
ParLevel1_Id
í4í4$ 0
=
í4í41 2
Convert
í4í43 :
.
í4í4: ;
ToInt32
í4í4; B
(
í4í4B C
r
í4í4C D
[
í4í4D E
$num
í4í4E F
]
í4í4F G
)
í4í4G H
;
í4í4H I
int
ì4ì4  #
ParLevel2_Id
ì4ì4$ 0
=
ì4ì41 2
Convert
ì4ì43 :
.
ì4ì4: ;
ToInt32
ì4ì4; B
(
ì4ì4B C
r
ì4ì4C D
[
ì4ì4D E
$num
ì4ì4E F
]
ì4ì4F G
)
ì4ì4G H
;
ì4ì4H I
int
î4î4  #
ParCompany_Id
î4î4$ 1
=
î4î42 3
Convert
î4î44 ;
.
î4î4; <
ToInt32
î4î4< C
(
î4î4C D
r
î4î4D E
[
î4î4E F
$num
î4î4F G
]
î4î4G H
)
î4î4H I
;
î4î4I J
DateTime
ï4ï4  (
ConsolidationDate
ï4ï4) :
=
ï4ï4; <
Convert
ï4ï4= D
.
ï4ï4D E

ToDateTime
ï4ï4E O
(
ï4ï4O P
r
ï4ï4P Q
[
ï4ï4Q R
$num
ï4ï4R S
]
ï4ï4S T
)
ï4ï4T U
;
ï4ï4U V'
_CollectionLevel02_Update
ó4ó4  9
(
ó4ó49 :$
ConsolidationLevel2_Id
ó4ó4: P
,
ó4ó4P Q
ParLevel1_Id
ó4ó4R ^
,
ó4ó4^ _
ParLevel2_Id
ó4ó4` l
,
ó4ó4l m
ParCompany_Id
ó4ó4n {
,
ó4ó4{ | 
ConsolidationDateó4ó4} é
)ó4ó4é è
;ó4ó4è ê
}
ô4ô4 
return
õ4õ4 "
null
õ4õ4# '
;
õ4õ4' (
}
ú4ú4 
}
ù4ù4 
if
û4û4 
(
û4û4 

connection
û4û4 "
.
û4û4" #
State
û4û4# (
==
û4û4) +
System
û4û4, 2
.
û4û42 3
Data
û4û43 7
.
û4û47 8
ConnectionState
û4û48 G
.
û4û4G H
Open
û4û4H L
)
û4û4L M

connection
û4û4N X
.
û4û4X Y
Close
û4û4Y ^
(
û4û4^ _
)
û4û4_ `
;
û4û4` a
}
ü4ü4 
}
†4†4 
catch
¢4¢4 
(
¢4¢4 
SqlException
¢4¢4 
ex
¢4¢4  "
)
¢4¢4" #
{
£4£4 
int
§4§4 
	insertLog
§4§4 
=
§4§4 
insertLogJson
§4§4  -
(
§4§4- .
sql
§4§4. 1
,
§4§41 2
ex
§4§43 5
.
§4§45 6
Message
§4§46 =
,
§4§4= >
$str
§4§4? D
,
§4§4D E
$str
§4§4F K
,
§4§4K L
$str
§4§4M e
)
§4§4e f
;
§4§4f g
return
•4•4 
ex
•4•4 
.
•4•4 
Message
•4•4 !
;
•4•4! "
}
¶4¶4 
catch
ß4ß4 
(
ß4ß4 
	Exception
ß4ß4 
ex
ß4ß4 
)
ß4ß4  
{
®4®4 
int
©4©4 
	insertLog
©4©4 
=
©4©4 
insertLogJson
©4©4  -
(
©4©4- .
sql
©4©4. 1
,
©4©41 2
ex
©4©43 5
.
©4©45 6
Message
©4©46 =
,
©4©4= >
$str
©4©4? D
,
©4©4D E
$str
©4©4F K
,
©4©4K L
$str
©4©4M e
)
©4©4e f
;
©4©4f g
return
™4™4 
ex
™4™4 
.
™4™4 
Message
™4™4 !
;
™4™4! "
}
´4´4 
}
¨4¨4 	
[
Æ4Æ4 	
	WebMethod
Æ4Æ4	 
]
Æ4Æ4 
public
Ø4Ø4 
string
Ø4Ø4 
_ReConsolidation
Ø4Ø4 &
(
Ø4Ø4& '
int
Ø4Ø4' *
ParCompany_Id
Ø4Ø4+ 8
)
Ø4Ø48 9
{
∞4∞4 	
string
≤4≤4 
sql
≤4≤4 
=
≤4≤4 
$str
≤4≤4 |
+
≤4≤4} ~
ParCompany_Id≤4≤4 å
+≤4≤4ç é
$str≤4≤4è í
;≤4≤4í ì
string
¥4¥4 
conexao
¥4¥4 
=
¥4¥4 
System
¥4¥4 #
.
¥4¥4# $
Configuration
¥4¥4$ 1
.
¥4¥41 2"
ConfigurationManager
¥4¥42 F
.
¥4¥4F G
ConnectionStrings
¥4¥4G X
[
¥4¥4X Y
$str
¥4¥4Y j
]
¥4¥4j k
.
¥4¥4k l
ConnectionString
¥4¥4l |
;
¥4¥4| }
try
µ4µ4 
{
∂4∂4 
using
∑4∑4 
(
∑4∑4 
SqlConnection
∑4∑4 $

connection
∑4∑4% /
=
∑4∑40 1
new
∑4∑42 5
SqlConnection
∑4∑46 C
(
∑4∑4C D
conexao
∑4∑4D K
)
∑4∑4K L
)
∑4∑4L M
{
∏4∏4 
using
π4π4 
(
π4π4 

SqlCommand
π4π4 %
command
π4π4& -
=
π4π4. /
new
π4π40 3

SqlCommand
π4π44 >
(
π4π4> ?
sql
π4π4? B
,
π4π4B C

connection
π4π4D N
)
π4π4N O
)
π4π4O P
{
∫4∫4 

connection
ª4ª4 "
.
ª4ª4" #
Open
ª4ª4# '
(
ª4ª4' (
)
ª4ª4( )
;
ª4ª4) *
using
º4º4 
(
º4º4 
SqlDataReader
º4º4 ,
r
º4º4- .
=
º4º4/ 0
command
º4º41 8
.
º4º48 9
ExecuteReader
º4º49 F
(
º4º4F G
)
º4º4G H
)
º4º4H I
{
Ω4Ω4 
while
¿4¿4 !
(
¿4¿4" #
r
¿4¿4# $
.
¿4¿4$ %
Read
¿4¿4% )
(
¿4¿4) *
)
¿4¿4* +
)
¿4¿4+ ,
{
¡4¡4 
int
√4√4  #$
ConsolidationLevel2_Id
√4√4$ :
=
√4√4; <
Convert
√4√4= D
.
√4√4D E
ToInt32
√4√4E L
(
√4√4L M
r
√4√4M N
[
√4√4N O
$num
√4√4O P
]
√4√4P Q
)
√4√4Q R
;
√4√4R S
int
ƒ4ƒ4  #
ParLevel2_Id
ƒ4ƒ4$ 0
=
ƒ4ƒ41 2
Convert
ƒ4ƒ43 :
.
ƒ4ƒ4: ;
ToInt32
ƒ4ƒ4; B
(
ƒ4ƒ4B C
r
ƒ4ƒ4C D
[
ƒ4ƒ4D E
$num
ƒ4ƒ4E F
]
ƒ4ƒ4F G
)
ƒ4ƒ4G H
;
ƒ4ƒ4H I
int
≈4≈4  #$
ConsolidationLevel1_Id
≈4≈4$ :
=
≈4≈4; <
Convert
≈4≈4= D
.
≈4≈4D E
ToInt32
≈4≈4E L
(
≈4≈4L M
r
≈4≈4M N
[
≈4≈4N O
$num
≈4≈4O P
]
≈4≈4P Q
)
≈4≈4Q R
;
≈4≈4R S
var
«4«4  #-
CollectionLevel2ConsolidationDB
«4«4$ C
=
«4«4D E
new
«4«4F I
SGQDBContext
«4«4J V
.
«4«4V W+
CollectionLevel2Consolidation
«4«4W t
(
«4«4t u
db
«4«4u w
)
«4«4w x
;
«4«4x y
var
»4»4  #+
collectionLevel2Consolidation
»4»4$ A
=
»4»4B C-
CollectionLevel2ConsolidationDB
»4»4D c
.
»4»4c d
getConsolidation
»4»4d t
(
»4»4t u%
ConsolidationLevel2_Id»4»4u ã
,»4»4ã å
ParLevel2_Id»4»4ç ô
)»4»4ô ö
;»4»4ö õ
var
 4 4  #)
updateConsolidationLevel2Id
 4 4$ ?
=
 4 4@ A'
updateConsolidationLevel2
 4 4B [
(
 4 4[ \$
ConsolidationLevel2_Id
 4 4\ r
,
 4 4r s
$str
 4 4t w
,
 4 4w x
$str
 4 4y |
,
 4 4| }
$str 4 4~ Å
, 4 4Å Ç-
collectionLevel2Consolidation 4 4É †
) 4 4† °
; 4 4° ¢
var
Ã4Ã4  #7
)ConsolidationLevel1XConsolidationLevel2DB
Ã4Ã4$ M
=
Ã4Ã4N O
new
Ã4Ã4P S5
'ConsolidationLevel1XConsolidationLevel2
Ã4Ã4T {
(
Ã4Ã4{ |
db
Ã4Ã4| ~
)
Ã4Ã4~ 
;Ã4Ã4 Ä
var
Õ4Õ4  #5
'consolidationLevel1XConsolidationLevel2
Õ4Õ4$ K
=
Õ4Õ4L M7
)ConsolidationLevel1XConsolidationLevel2DB
Õ4Õ4N w
.
Õ4Õ4w x
getConsolidationÕ4Õ4x à
(Õ4Õ4à â&
ConsolidationLevel1_IdÕ4Õ4â ü
)Õ4Õ4ü †
;Õ4Õ4† °
var
œ4œ4  #)
updateConsolidationLevel1Id
œ4œ4$ ?
=
œ4œ4@ A'
updateConsolidationLevel1
œ4œ4B [
(
œ4œ4[ \$
ConsolidationLevel1_Id
œ4œ4\ r
,
œ4œ4r s
$str
œ4œ4t w
,
œ4œ4w x
$str
œ4œ4y |
,
œ4œ4| }
$strœ4œ4~ Å
,œ4œ4Å Ç7
'consolidationLevel1XConsolidationLevel2œ4œ4É ™
)œ4œ4™ ´
;œ4œ4´ ¨
}
“4“4 
return
‘4‘4 "
null
‘4‘4# '
;
‘4‘4' (
}
’4’4 
}
÷4÷4 
if
◊4◊4 
(
◊4◊4 

connection
◊4◊4 "
.
◊4◊4" #
State
◊4◊4# (
==
◊4◊4) +
System
◊4◊4, 2
.
◊4◊42 3
Data
◊4◊43 7
.
◊4◊47 8
ConnectionState
◊4◊48 G
.
◊4◊4G H
Open
◊4◊4H L
)
◊4◊4L M

connection
◊4◊4N X
.
◊4◊4X Y
Close
◊4◊4Y ^
(
◊4◊4^ _
)
◊4◊4_ `
;
◊4◊4` a
}
ÿ4ÿ4 
}
Ÿ4Ÿ4 
catch
€4€4 
(
€4€4 
SqlException
€4€4 
ex
€4€4  "
)
€4€4" #
{
‹4‹4 
int
›4›4 
	insertLog
›4›4 
=
›4›4 
insertLogJson
›4›4  -
(
›4›4- .
sql
›4›4. 1
,
›4›41 2
ex
›4›43 5
.
›4›45 6
Message
›4›46 =
,
›4›4= >
$str
›4›4? D
,
›4›4D E
$str
›4›4F K
,
›4›4K L
$str
›4›4M e
)
›4›4e f
;
›4›4f g
return
ﬁ4ﬁ4 
ex
ﬁ4ﬁ4 
.
ﬁ4ﬁ4 
Message
ﬁ4ﬁ4 !
;
ﬁ4ﬁ4! "
}
ﬂ4ﬂ4 
catch
‡4‡4 
(
‡4‡4 
	Exception
‡4‡4 
ex
‡4‡4 
)
‡4‡4  
{
·4·4 
int
‚4‚4 
	insertLog
‚4‚4 
=
‚4‚4 
insertLogJson
‚4‚4  -
(
‚4‚4- .
sql
‚4‚4. 1
,
‚4‚41 2
ex
‚4‚43 5
.
‚4‚45 6
Message
‚4‚46 =
,
‚4‚4= >
$str
‚4‚4? D
,
‚4‚4D E
$str
‚4‚4F K
,
‚4‚4K L
$str
‚4‚4M e
)
‚4‚4e f
;
‚4‚4f g
return
„4„4 
ex
„4„4 
.
„4„4 
Message
„4„4 !
;
„4„4! "
}
‰4‰4 
}
Â4Â4 	
[
Á4Á4 	
	WebMethod
Á4Á4	 
]
Á4Á4 
public
Ë4Ë4 
string
Ë4Ë4 &
_ReConsolidationByLevel1
Ë4Ë4 .
(
Ë4Ë4. /
int
Ë4Ë4/ 2
ParCompany_Id
Ë4Ë43 @
,
Ë4Ë4@ A
int
Ë4Ë4B E
ParLevel1_Id
Ë4Ë4F R
,
Ë4Ë4R S
DateTime
Ë4Ë4T \
ConsolidationDate
Ë4Ë4] n
)
Ë4Ë4n o
{
È4È4 	
string
Î4Î4 
sql
Î4Î4 
=
Î4Î4 
$strÎ4Î4 Ç
+Î4Î4É Ñ
$str
Ï4Ï4 u
+
Ï4Ï4v w
$str
Ì4Ì4 "
+
Ì4Ì4# $
ParCompany_Id
Ì4Ì4% 2
+
Ì4Ì43 4
$str
Ì4Ì45 M
+
Ì4Ì4N O
ParLevel1_Id
Ì4Ì4P \
+
Ì4Ì4] ^
$strÌ4Ì4_ ç
+Ì4Ì4é è!
ConsolidationDateÌ4Ì4ê °
.Ì4Ì4° ¢
ToStringÌ4Ì4¢ ™
(Ì4Ì4™ ´
$strÌ4Ì4´ µ
)Ì4Ì4µ ∂
+Ì4Ì4∑ ∏
$strÌ4Ì4π º
;Ì4Ì4º Ω
string
44 
conexao
44 
=
44 
System
44 #
.
44# $
Configuration
44$ 1
.
441 2"
ConfigurationManager
442 F
.
44F G
ConnectionStrings
44G X
[
44X Y
$str
44Y j
]
44j k
.
44k l
ConnectionString
44l |
;
44| }
try
Ò4Ò4 
{
Ú4Ú4 
using
Û4Û4 
(
Û4Û4 
SqlConnection
Û4Û4 $

connection
Û4Û4% /
=
Û4Û40 1
new
Û4Û42 5
SqlConnection
Û4Û46 C
(
Û4Û4C D
conexao
Û4Û4D K
)
Û4Û4K L
)
Û4Û4L M
{
Ù4Ù4 
using
ı4ı4 
(
ı4ı4 

SqlCommand
ı4ı4 %
command
ı4ı4& -
=
ı4ı4. /
new
ı4ı40 3

SqlCommand
ı4ı44 >
(
ı4ı4> ?
sql
ı4ı4? B
,
ı4ı4B C

connection
ı4ı4D N
)
ı4ı4N O
)
ı4ı4O P
{
ˆ4ˆ4 

connection
˜4˜4 "
.
˜4˜4" #
Open
˜4˜4# '
(
˜4˜4' (
)
˜4˜4( )
;
˜4˜4) *
using
¯4¯4 
(
¯4¯4 
SqlDataReader
¯4¯4 ,
r
¯4¯4- .
=
¯4¯4/ 0
command
¯4¯41 8
.
¯4¯48 9
ExecuteReader
¯4¯49 F
(
¯4¯4F G
)
¯4¯4G H
)
¯4¯4H I
{
˘4˘4 
while
¸4¸4 !
(
¸4¸4" #
r
¸4¸4# $
.
¸4¸4$ %
Read
¸4¸4% )
(
¸4¸4) *
)
¸4¸4* +
)
¸4¸4+ ,
{
˝4˝4 
int
ˇ4ˇ4  #$
ConsolidationLevel2_Id
ˇ4ˇ4$ :
=
ˇ4ˇ4; <
Convert
ˇ4ˇ4= D
.
ˇ4ˇ4D E
ToInt32
ˇ4ˇ4E L
(
ˇ4ˇ4L M
r
ˇ4ˇ4M N
[
ˇ4ˇ4N O
$num
ˇ4ˇ4O P
]
ˇ4ˇ4P Q
)
ˇ4ˇ4Q R
;
ˇ4ˇ4R S
int
Ä5Ä5  #
ParLevel2_Id
Ä5Ä5$ 0
=
Ä5Ä51 2
Convert
Ä5Ä53 :
.
Ä5Ä5: ;
ToInt32
Ä5Ä5; B
(
Ä5Ä5B C
r
Ä5Ä5C D
[
Ä5Ä5D E
$num
Ä5Ä5E F
]
Ä5Ä5F G
)
Ä5Ä5G H
;
Ä5Ä5H I
int
Å5Å5  #$
ConsolidationLevel1_Id
Å5Å5$ :
=
Å5Å5; <
Convert
Å5Å5= D
.
Å5Å5D E
ToInt32
Å5Å5E L
(
Å5Å5L M
r
Å5Å5M N
[
Å5Å5N O
$num
Å5Å5O P
]
Å5Å5P Q
)
Å5Å5Q R
;
Å5Å5R S
var
É5É5  #-
CollectionLevel2ConsolidationDB
É5É5$ C
=
É5É5D E
new
É5É5F I
SGQDBContext
É5É5J V
.
É5É5V W+
CollectionLevel2Consolidation
É5É5W t
(
É5É5t u
db
É5É5u w
)
É5É5w x
;
É5É5x y
var
Ñ5Ñ5  #+
collectionLevel2Consolidation
Ñ5Ñ5$ A
=
Ñ5Ñ5B C-
CollectionLevel2ConsolidationDB
Ñ5Ñ5D c
.
Ñ5Ñ5c d
getConsolidation
Ñ5Ñ5d t
(
Ñ5Ñ5t u%
ConsolidationLevel2_IdÑ5Ñ5u ã
,Ñ5Ñ5ã å
ParLevel2_IdÑ5Ñ5ç ô
)Ñ5Ñ5ô ö
;Ñ5Ñ5ö õ
var
Ü5Ü5  #)
updateConsolidationLevel2Id
Ü5Ü5$ ?
=
Ü5Ü5@ A'
updateConsolidationLevel2
Ü5Ü5B [
(
Ü5Ü5[ \$
ConsolidationLevel2_Id
Ü5Ü5\ r
,
Ü5Ü5r s
$str
Ü5Ü5t w
,
Ü5Ü5w x
$str
Ü5Ü5y |
,
Ü5Ü5| }
$strÜ5Ü5~ Å
,Ü5Ü5Å Ç-
collectionLevel2ConsolidationÜ5Ü5É †
)Ü5Ü5† °
;Ü5Ü5° ¢
var
à5à5  #7
)ConsolidationLevel1XConsolidationLevel2DB
à5à5$ M
=
à5à5N O
new
à5à5P S5
'ConsolidationLevel1XConsolidationLevel2
à5à5T {
(
à5à5{ |
db
à5à5| ~
)
à5à5~ 
;à5à5 Ä
var
â5â5  #5
'consolidationLevel1XConsolidationLevel2
â5â5$ K
=
â5â5L M7
)ConsolidationLevel1XConsolidationLevel2DB
â5â5N w
.
â5â5w x
getConsolidationâ5â5x à
(â5â5à â&
ConsolidationLevel1_Idâ5â5â ü
)â5â5ü †
;â5â5† °
var
ã5ã5  #)
updateConsolidationLevel1Id
ã5ã5$ ?
=
ã5ã5@ A'
updateConsolidationLevel1
ã5ã5B [
(
ã5ã5[ \$
ConsolidationLevel1_Id
ã5ã5\ r
,
ã5ã5r s
$str
ã5ã5t w
,
ã5ã5w x
$str
ã5ã5y |
,
ã5ã5| }
$strã5ã5~ Å
,ã5ã5Å Ç7
'consolidationLevel1XConsolidationLevel2ã5ã5É ™
)ã5ã5™ ´
;ã5ã5´ ¨
}
é5é5 
return
ê5ê5 "
null
ê5ê5# '
;
ê5ê5' (
}
ë5ë5 
}
í5í5 
if
ì5ì5 
(
ì5ì5 

connection
ì5ì5 "
.
ì5ì5" #
State
ì5ì5# (
==
ì5ì5) +
System
ì5ì5, 2
.
ì5ì52 3
Data
ì5ì53 7
.
ì5ì57 8
ConnectionState
ì5ì58 G
.
ì5ì5G H
Open
ì5ì5H L
)
ì5ì5L M

connection
ì5ì5N X
.
ì5ì5X Y
Close
ì5ì5Y ^
(
ì5ì5^ _
)
ì5ì5_ `
;
ì5ì5` a
}
î5î5 
}
ï5ï5 
catch
ó5ó5 
(
ó5ó5 
SqlException
ó5ó5 
ex
ó5ó5  "
)
ó5ó5" #
{
ò5ò5 
int
ô5ô5 
	insertLog
ô5ô5 
=
ô5ô5 
insertLogJson
ô5ô5  -
(
ô5ô5- .
sql
ô5ô5. 1
,
ô5ô51 2
ex
ô5ô53 5
.
ô5ô55 6
Message
ô5ô56 =
,
ô5ô5= >
$str
ô5ô5? D
,
ô5ô5D E
$str
ô5ô5F K
,
ô5ô5K L
$str
ô5ô5M g
)
ô5ô5g h
;
ô5ô5h i
return
ö5ö5 
ex
ö5ö5 
.
ö5ö5 
Message
ö5ö5 !
;
ö5ö5! "
}
õ5õ5 
catch
ú5ú5 
(
ú5ú5 
	Exception
ú5ú5 
ex
ú5ú5 
)
ú5ú5  
{
ù5ù5 
int
û5û5 
	insertLog
û5û5 
=
û5û5 
insertLogJson
û5û5  -
(
û5û5- .
sql
û5û5. 1
,
û5û51 2
ex
û5û53 5
.
û5û55 6
Message
û5û56 =
,
û5û5= >
$str
û5û5? D
,
û5û5D E
$str
û5û5F K
,
û5û5K L
$str
û5û5M g
)
û5û5g h
;
û5û5h i
return
ü5ü5 
ex
ü5ü5 
.
ü5ü5 
Message
ü5ü5 !
;
ü5ü5! "
}
†5†5 
}
°5°5 	
public
£5£5 
void
£5£5 '
_CollectionLevel02_Update
£5£5 -
(
£5£5- .
int
£5£5. 1$
ConsolidationLevel2_Id
£5£52 H
,
£5£5H I
int
£5£5J M
ParLevel1_Id
£5£5N Z
,
£5£5Z [
int
£5£5\ _
ParLevel2_Id
£5£5` l
,
£5£5l m
int
£5£5n q
ParCompany_Id
£5£5r 
,£5£5 Ä
DateTime£5£5Å â!
ConsolidationDate£5£5ä õ
)£5£5õ ú
{
§5§5 	
string
¶5¶5 
sql
¶5¶5 
=
¶5¶5 
$str
¶5¶5 P
+
¶5¶5Q R$
ConsolidationLevel2_Id
¶5¶5S i
+
¶5¶5j k
$str¶5¶5l Ñ
+¶5¶5Ö Ü
ParLevel1_Id¶5¶5á ì
+¶5¶5î ï
$str¶5¶5ñ ¨
+¶5¶5≠ Æ
ParLevel2_Id¶5¶5Ø ª
+¶5¶5º Ω
$str¶5¶5æ Œ
+¶5¶5œ –
ParCompany_Id¶5¶5— ﬁ
+¶5¶5ﬂ ‡
$str¶5¶5· â
+¶5¶5ä ã!
ConsolidationDate¶5¶5å ù
.¶5¶5ù û
ToString¶5¶5û ¶
(¶5¶5¶ ß
$str¶5¶5ß ±
)¶5¶5± ≤
+¶5¶5≥ ¥
$str¶5¶5µ ∏
;¶5¶5∏ π
string
ß5ß5 
conexao
ß5ß5 
=
ß5ß5 
System
ß5ß5 #
.
ß5ß5# $
Configuration
ß5ß5$ 1
.
ß5ß51 2"
ConfigurationManager
ß5ß52 F
.
ß5ß5F G
ConnectionStrings
ß5ß5G X
[
ß5ß5X Y
$str
ß5ß5Y j
]
ß5ß5j k
.
ß5ß5k l
ConnectionString
ß5ß5l |
;
ß5ß5| }
try
®5®5 
{
©5©5 
using
™5™5 
(
™5™5 
SqlConnection
™5™5 $

connection
™5™5% /
=
™5™50 1
new
™5™52 5
SqlConnection
™5™56 C
(
™5™5C D
conexao
™5™5D K
)
™5™5K L
)
™5™5L M
{
´5´5 
using
¨5¨5 
(
¨5¨5 

SqlCommand
¨5¨5 %
command
¨5¨5& -
=
¨5¨5. /
new
¨5¨50 3

SqlCommand
¨5¨54 >
(
¨5¨5> ?
sql
¨5¨5? B
,
¨5¨5B C

connection
¨5¨5D N
)
¨5¨5N O
)
¨5¨5O P
{
≠5≠5 

connection
Æ5Æ5 "
.
Æ5Æ5" #
Open
Æ5Æ5# '
(
Æ5Æ5' (
)
Æ5Æ5( )
;
Æ5Æ5) *
var
Ø5Ø5 
i
Ø5Ø5 
=
Ø5Ø5 
Convert
Ø5Ø5  '
.
Ø5Ø5' (
ToInt32
Ø5Ø5( /
(
Ø5Ø5/ 0
command
Ø5Ø50 7
.
Ø5Ø57 8
ExecuteNonQuery
Ø5Ø58 G
(
Ø5Ø5G H
)
Ø5Ø5H I
)
Ø5Ø5I J
;
Ø5Ø5J K
}
±5±5 
if
≤5≤5 
(
≤5≤5 

connection
≤5≤5 "
.
≤5≤5" #
State
≤5≤5# (
==
≤5≤5) +
System
≤5≤5, 2
.
≤5≤52 3
Data
≤5≤53 7
.
≤5≤57 8
ConnectionState
≤5≤58 G
.
≤5≤5G H
Open
≤5≤5H L
)
≤5≤5L M

connection
≤5≤5N X
.
≤5≤5X Y
Close
≤5≤5Y ^
(
≤5≤5^ _
)
≤5≤5_ `
;
≤5≤5` a
}
≥5≥5 
}
¥5¥5 
catch
µ5µ5 
(
µ5µ5 
SqlException
µ5µ5 
ex
µ5µ5  "
)
µ5µ5" #
{
∂5∂5 
int
∑5∑5 
	insertLog
∑5∑5 
=
∑5∑5 
insertLogJson
∑5∑5  -
(
∑5∑5- .
sql
∑5∑5. 1
,
∑5∑51 2
ex
∑5∑53 5
.
∑5∑55 6
Message
∑5∑56 =
,
∑5∑5= >
$str
∑5∑5? D
,
∑5∑5D E
$str
∑5∑5F K
,
∑5∑5K L
$str
∑5∑5M h
)
∑5∑5h i
;
∑5∑5i j
throw
∏5∏5 
ex
∏5∏5 
;
∏5∏5 
}
π5π5 
catch
∫5∫5 
(
∫5∫5 
	Exception
∫5∫5 
ex
∫5∫5 
)
∫5∫5  
{
ª5ª5 
int
º5º5 
	insertLog
º5º5 
=
º5º5 
insertLogJson
º5º5  -
(
º5º5- .
sql
º5º5. 1
,
º5º51 2
ex
º5º53 5
.
º5º55 6
Message
º5º56 =
,
º5º5= >
$str
º5º5? D
,
º5º5D E
$str
º5º5F K
,
º5º5K L
$str
º5º5M h
)
º5º5h i
;
º5º5i j
throw
Ω5Ω5 
ex
Ω5Ω5 
;
Ω5Ω5 
}
æ5æ5 
}
ø5ø5 	
[
¡5¡5 	
	WebMethod
¡5¡5	 
]
¡5¡5 
public
¬5¬5 
string
¬5¬5 %
ReconsolidationToLevel3
¬5¬5 -
(
¬5¬5- .
string
¬5¬5. 4!
collectionLevel2_Id
¬5¬55 H
)
¬5¬5H I
{
ƒ5ƒ5 	
try
∆5∆5 
{
«5«5 
string
»5»5 
conexao
»5»5 
=
»5»5  
System
»5»5! '
.
»5»5' (
Configuration
»5»5( 5
.
»5»55 6"
ConfigurationManager
»5»56 J
.
»5»5J K
ConnectionStrings
»5»5K \
[
»5»5\ ]
$str
»5»5] n
]
»5»5n o
.
»5»5o p
ConnectionString»5»5p Ä
;»5»5Ä Å
using
…5…5 
(
…5…5 
SqlConnection
…5…5 $

connection
…5…5% /
=
…5…50 1
new
…5…52 5
SqlConnection
…5…56 C
(
…5…5C D
conexao
…5…5D K
)
…5…5K L
)
…5…5L M
{
 5 5 

connection
À5À5 
.
À5À5 
Open
À5À5 #
(
À5À5# $
)
À5À5$ %
;
À5À5% &

SqlCommand
Õ5Õ5 
command
Õ5Õ5 &
;
Õ5Õ5& '
string
œ5œ5 
query
œ5œ5  
=
œ5œ5! "
$strœ5œ5# è
+œ5œ5ê ë
$str
–5–5 '
+
–5–5( )!
collectionLevel2_Id
–5–5* =
+
–5–5> ?
$str—5—5 è
+—5—5ê ë
$str“5“5 è
+“5“5ê ë
$str”5”5 è
+”5”5ê ë
$str‘5‘5 è
+‘5‘5ê ë
$str’5’5 è
+’5’5ê ë
$str÷5÷5 è
+÷5÷5ê ë
$str◊5◊5 è
+◊5◊5ê ë
$strÿ5ÿ5 è
+ÿ5ÿ5ê ë
$strŸ5Ÿ5 è
+Ÿ5Ÿ5ê ë
$str⁄5⁄5 è
+⁄5⁄5ê ë
$str€5€5 è
+€5€5ê ë
$str‹5‹5 è
+‹5‹5ê ë
$str›5›5 è
+›5›5ê ë
$strﬁ5ﬁ5 è
+ﬁ5ﬁ5ê ë
$strﬂ5ﬂ5 è
+ﬂ5ﬂ5ê ë
$str„5„5 è
+„5„5ê ë
$str‰5‰5 ≤
+‰5‰5≥ ¥
$strÂ5Â5 ú
+Â5Â5ù û
$strÊ5Ê5 è
+Ê5Ê5ê ë
$strÁ5Á5 è
+Á5Á5ê ë
$strË5Ë5 è
+Ë5Ë5ê ë
$strÈ5È5 è
+È5È5ê ë
$strÍ5Í5 è
+Í5Í5ê ë
$strÎ5Î5 è
+Î5Î5ê ë
$strÏ5Ï5 è
+Ï5Ï5ê ë
$strÌ5Ì5 è
+Ì5Ì5ê ë
$strÓ5Ó5 è
+Ó5Ó5ê ë
$strÔ5Ô5 è
+Ô5Ô5ê ë
$str55 è
+55ê ë
$strÒ5Ò5 è
+Ò5Ò5ê ë
$strÚ5Ú5 è
+Ú5Ú5ê ë
$strÛ5Û5 è
;Û5Û5è ê
command
ı5ı5 
=
ı5ı5 
new
ı5ı5 !

SqlCommand
ı5ı5" ,
(
ı5ı5, -
query
ı5ı5- 2
,
ı5ı52 3

connection
ı5ı54 >
)
ı5ı5> ?
;
ı5ı5? @
var
˜5˜5 
iSql
˜5˜5 
=
˜5˜5 
command
˜5˜5 &
.
˜5˜5& '
ExecuteScalar
˜5˜5' 4
(
˜5˜54 5
)
˜5˜55 6
;
˜5˜56 7
if
˘5˘5 
(
˘5˘5 

connection
˘5˘5 "
.
˘5˘5" #
State
˘5˘5# (
==
˘5˘5) +
System
˘5˘5, 2
.
˘5˘52 3
Data
˘5˘53 7
.
˘5˘57 8
ConnectionState
˘5˘58 G
.
˘5˘5G H
Open
˘5˘5H L
)
˘5˘5L M

connection
˘5˘5N X
.
˘5˘5X Y
Close
˘5˘5Y ^
(
˘5˘5^ _
)
˘5˘5_ `
;
˘5˘5` a
}
˙5˙5 
using
˛5˛5 
(
˛5˛5 
var
˛5˛5 
db
˛5˛5 
=
˛5˛5 
new
˛5˛5  #
Dominio
˛5˛5$ +
.
˛5˛5+ ,
SgqDbDevEntities
˛5˛5, <
(
˛5˛5< =
)
˛5˛5= >
)
˛5˛5> ?
{
ˇ5ˇ5 
int
Ä6Ä6 
idl2
Ä6Ä6 
=
Ä6Ä6 
Int32
Ä6Ä6 $
.
Ä6Ä6$ %
Parse
Ä6Ä6% *
(
Ä6Ä6* +!
collectionLevel2_Id
Ä6Ä6+ >
)
Ä6Ä6> ?
;
Ä6Ä6? @
Dominio
Å6Å6 
.
Å6Å6 
CollectionLevel2
Å6Å6 ,
collectionLevel2
Å6Å6- =
=
Å6Å6> ?
db
Å6Å6@ B
.
Å6Å6B C
CollectionLevel2
Å6Å6C S
.
Å6Å6S T
FirstOrDefault
Å6Å6T b
(
Å6Å6b c
r
Å6Å6c d
=>
Å6Å6e g
r
Å6Å6h i
.
Å6Å6i j
Id
Å6Å6j l
==
Å6Å6m o
idl2
Å6Å6p t
)
Å6Å6t u
;
Å6Å6u v
int
Ñ6Ñ6 

company_Id
Ñ6Ñ6 "
=
Ñ6Ñ6# $
collectionLevel2
Ñ6Ñ6% 5
.
Ñ6Ñ65 6
UnitId
Ñ6Ñ66 <
;
Ñ6Ñ6< =
int
Ö6Ö6 
	level1_Id
Ö6Ö6 !
=
Ö6Ö6" #
collectionLevel2
Ö6Ö6$ 4
.
Ö6Ö64 5
ParLevel1_Id
Ö6Ö65 A
;
Ö6Ö6A B
DateTime
Ü6Ü6 
data
Ü6Ü6 !
=
Ü6Ü6" #
collectionLevel2
Ü6Ü6$ 4
.
Ü6Ü64 5
CollectionDate
Ü6Ü65 C
.
Ü6Ü6C D
Date
Ü6Ü6D H
;
Ü6Ü6H I
var
à6à6 
retorno
à6à6 
=
à6à6  !&
_ReConsolidationByLevel1
à6à6" :
(
à6à6: ;

company_Id
à6à6; E
,
à6à6E F
	level1_Id
à6à6G P
,
à6à6P Q
data
à6à6R V
)
à6à6V W
;
à6à6W X
return
ä6ä6 
$str
ä6ä6 
;
ä6ä6  
}
ã6ã6 
}
å6å6 
catch
ç6ç6 
(
ç6ç6 
	Exception
ç6ç6 
e
ç6ç6 
)
ç6ç6 
{
é6é6 
return
è6è6 
e
è6è6 
.
è6è6 
ToString
è6è6 !
(
è6è6! "
)
è6è6" #
;
è6è6# $
}
ê6ê6 
}
í6í6 	
}
î6î6 
}ï6ï6 ¶7
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\AccountBindingModels.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public		 

class		 (
AddExternalLoginBindingModel		 -
{

 
[ 	
Required	 
] 
[ 	
Display	 
( 
Name 
= 
$str /
)/ 0
]0 1
public 
string 
ExternalAccessToken )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
public 

class &
ChangePasswordBindingModel +
{ 
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str *
)* +
]+ ,
public 
string 
OldPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* Y
,Y Z
MinimumLength[ h
=i j
$numk l
)l m
]m n
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str &
)& '
]' (
public 
string 
NewPassword !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
[ 	
Display	 
( 
Name 
= 
$str .
). /
]/ 0
[ 	
Compare	 
( 
$str 
, 
ErrorMessage  ,
=- .
$str/ i
)i j
]j k
public   
string   
ConfirmPassword   %
{  & '
get  ( +
;  + ,
set  - 0
;  0 1
}  2 3
}!! 
public## 

class##  
RegisterBindingModel## %
{$$ 
[%% 	
Required%%	 
]%% 
[&& 	
Display&&	 
(&& 
Name&& 
=&& 
$str&& 
)&&  
]&&  !
public'' 
string'' 
Email'' 
{'' 
get'' !
;''! "
set''# &
;''& '
}''( )
[)) 	
Required))	 
])) 
[** 	
StringLength**	 
(** 
$num** 
,** 
ErrorMessage** '
=**( )
$str*** Y
,**Y Z
MinimumLength**[ h
=**i j
$num**k l
)**l m
]**m n
[++ 	
DataType++	 
(++ 
DataType++ 
.++ 
Password++ #
)++# $
]++$ %
[,, 	
Display,,	 
(,, 
Name,, 
=,, 
$str,, "
),," #
],,# $
public-- 
string-- 
Password-- 
{--  
get--! $
;--$ %
set--& )
;--) *
}--+ ,
[// 	
DataType//	 
(// 
DataType// 
.// 
Password// #
)//# $
]//$ %
[00 	
Display00	 
(00 
Name00 
=00 
$str00 *
)00* +
]00+ ,
[11 	
Compare11	 
(11 
$str11 
,11 
ErrorMessage11 )
=11* +
$str11, b
)11b c
]11c d
public22 
string22 
ConfirmPassword22 %
{22& '
get22( +
;22+ ,
set22- 0
;220 1
}222 3
}33 
public55 

class55 (
RegisterExternalBindingModel55 -
{66 
[77 	
Required77	 
]77 
[88 	
Display88	 
(88 
Name88 
=88 
$str88 
)88  
]88  !
public99 
string99 
Email99 
{99 
get99 !
;99! "
set99# &
;99& '
}99( )
}:: 
public<< 

class<< #
RemoveLoginBindingModel<< (
{== 
[>> 	
Required>>	 
]>> 
[?? 	
Display??	 
(?? 
Name?? 
=?? 
$str?? (
)??( )
]??) *
public@@ 
string@@ 
LoginProvider@@ #
{@@$ %
get@@& )
;@@) *
set@@+ .
;@@. /
}@@0 1
[BB 	
RequiredBB	 
]BB 
[CC 	
DisplayCC	 
(CC 
NameCC 
=CC 
$strCC &
)CC& '
]CC' (
publicDD 
stringDD 
ProviderKeyDD !
{DD" #
getDD$ '
;DD' (
setDD) ,
;DD, -
}DD. /
}EE 
publicGG 

classGG #
SetPasswordBindingModelGG (
{HH 
[II 	
RequiredII	 
]II 
[JJ 	
StringLengthJJ	 
(JJ 
$numJJ 
,JJ 
ErrorMessageJJ '
=JJ( )
$strJJ* Y
,JJY Z
MinimumLengthJJ[ h
=JJi j
$numJJk l
)JJl m
]JJm n
[KK 	
DataTypeKK	 
(KK 
DataTypeKK 
.KK 
PasswordKK #
)KK# $
]KK$ %
[LL 	
DisplayLL	 
(LL 
NameLL 
=LL 
$strLL &
)LL& '
]LL' (
publicMM 
stringMM 
NewPasswordMM !
{MM" #
getMM$ '
;MM' (
setMM) ,
;MM, -
}MM. /
[OO 	
DataTypeOO	 
(OO 
DataTypeOO 
.OO 
PasswordOO #
)OO# $
]OO$ %
[PP 	
DisplayPP	 
(PP 
NamePP 
=PP 
$strPP .
)PP. /
]PP/ 0
[QQ 	
CompareQQ	 
(QQ 
$strQQ 
,QQ 
ErrorMessageQQ  ,
=QQ- .
$strQQ/ i
)QQi j
]QQj k
publicRR 
stringRR 
ConfirmPasswordRR %
{RR& '
getRR( +
;RR+ ,
setRR- 0
;RR0 1
}RR2 3
}SS 
}TT ”
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\AccountViewModels.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class "
ExternalLoginViewModel '
{		 
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
string 
Url 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
State 
{ 
get !
;! "
set# &
;& '
}( )
} 
public 

class 
ManageInfoViewModel $
{ 
public 
string 
LocalLoginProvider (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
IEnumerable 
< "
UserLoginInfoViewModel 1
>1 2
Logins3 9
{: ;
get< ?
;? @
setA D
;D E
}F G
public 
IEnumerable 
< "
ExternalLoginViewModel 1
>1 2"
ExternalLoginProviders3 I
{J K
getL O
;O P
setQ T
;T U
}V W
} 
public 

class 
UserInfoViewModel "
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public   
bool   
HasRegistered   !
{  " #
get  $ '
;  ' (
set  ) ,
;  , -
}  . /
public"" 
string"" 
LoginProvider"" #
{""$ %
get""& )
;"") *
set""+ .
;"". /
}""0 1
}## 
public%% 

class%% "
UserLoginInfoViewModel%% '
{&& 
public'' 
string'' 
LoginProvider'' #
{''$ %
get''& )
;'') *
set''+ .
;''. /
}''0 1
public)) 
string)) 
ProviderKey)) !
{))" #
get))$ '
;))' (
set))) ,
;)), -
})). /
}** 
}++ É
lC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\BaseEntityViewModel\EntityBaseViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
. 
BaseEntityViewModel 2
{ 
public 

class 
EntityBaseViewModel $
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
=$ %
$num& '
;' (
public 
DateTime 
AddDate 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
DateTime0 8
.8 9
Now9 <
;< =
public		 
DateTime		 
?		 
	AlterDate		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
null		3 7
;		7 8
}

 
} Ì
tC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\BaseEntityViewModel\DataCollectionBaseViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
. 
BaseEntityViewModel 2
{ 
public 

class '
DataCollectionBaseViewModel ,
:- .
EntityBaseViewModel/ B
{ 
public 
decimal 
Evaluate 
{  !
get" %
;% &
set' *
;* +
}, -
public 
decimal 

NotConform !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} Ì
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\CompanyViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
CompanyViewModel !
{ 
public		 
ParCompanyDTO		 
parCompanyDTO		 *
{		+ ,
get		- 0
;		0 1
set		2 5
;		5 6
}		7 8
public

 
ParStructureDTO

 
parStructureDTO

 .
{

/ 0
get

1 4
;

4 5
set

6 9
;

9 :
}

; <
public  
ParStructureGroupDTO # 
parStructureGroupDTO$ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
public #
ParCompanyXStructureDTO &#
parCompanyXStructureDTO' >
{? @
getA D
;D E
setF I
;I J
}K L
} 
} Å=
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\FormularioParaRelatorioViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public		 

class		 ,
 FormularioParaRelatorioViewModel		 1
:		2 3!
DataCarrierFormulario		4 I
{

 
public ,
 FormularioParaRelatorioViewModel /
(/ 0
)0 1
{ 	
} 	
public   $
ResultSetRelatorioColeta   '
result  ( .
{  / 0
get  1 4
;  4 5
set  6 9
;  9 :
}  ; <
public!! (
ResultSetGetCorrectiveAction!! +(
resultSetGetCorrectiveAction!!, H
{!!I J
get!!K N
;!!N O
set!!P S
;!!S T
}!!U V
public'' 
IEnumerable'' 
<'' 
SelectListItem'' )
>'') * 
level01DTOSelectList''+ ?
{''@ A
get''B E
;''E F
set''G J
;''J K
}''L M
internal(( 
void((  
SetLevel01SelectList(( *
(((* +
IEnumerable((+ 6
<((6 7

Level01DTO((7 A
>((A B

enumerable((C M
)((M N
{)) 	 
level01DTOSelectList**  
=**! "
CriaSelectList**# 1
(**1 2

enumerable**2 <
)**< =
;**= >
}++ 	
public-- 
IEnumerable-- 
<-- 
SelectListItem-- )
>--) * 
level02DTOSelectList--+ ?
{--@ A
get--B E
;--E F
set--G J
;--J K
}--L M
internal.. 
void..  
Setlevel02SelectList.. *
(..* +
IEnumerable..+ 6
<..6 7

Level02DTO..7 A
>..A B

enumerable..C M
)..M N
{// 	 
level02DTOSelectList00  
=00! "
CriaSelectList00# 1
(001 2

enumerable002 <
)00< =
;00= >
}11 	
public33 
IEnumerable33 
<33 
SelectListItem33 )
>33) * 
level03DTOSelectList33+ ?
{33@ A
get33B E
;33E F
set33G J
;33J K
}33L M
internal44 
void44  
SetLevel03SelectList44 *
(44* +
IEnumerable44+ 6
<446 7

Level03DTO447 A
>44A B

enumerable44C M
)44M N
{55 	 
level02DTOSelectList66  
=66! "
CriaSelectList66# 1
(661 2

enumerable662 <
)66< =
;66= >
}88 	
public:: 
IEnumerable:: 
<:: 
SelectListItem:: )
>::) *
UnitsSelectList::+ :
{::; <
get::= @
;::@ A
set::B E
;::E F
}::G H
internal;; 
void;; 
SetUnitsSelectList;; (
(;;( )
IEnumerable;;) 4
<;;4 5
ParCompanyDTO;;5 B
>;;B C

enumerable;;D N
);;N O
{<< 	
UnitsSelectList== 
=== 
CriaSelectList== ,
(==, -

enumerable==- 7
)==7 8
;==8 9
}?? 	
publicAA 
IEnumerableAA 
<AA 
SelectListItemAA )
>AA) *
ShiftSelectListAA+ :
{AA; <
getAA= @
;AA@ A
setAAB E
;AAE F
}AAG H
internalBB 
voidBB 
SetShiftSelectListBB (
(BB( )
)BBM N
{CC 	
ShiftSelectListEE 
=EE 
newEE !
ListEE" &
<EE& '
SelectListItemEE' 5
>EE5 6
(EE6 7
)EE7 8
{EE8 9
newFF4 7
SelectListItemFF8 F
(FFF G
)FFG H
{FFI J
TextFFJ N
=FFN O
$strFFO X
,FFX Y
ValueFFZ _
=FF_ `
$strFF` c
}FFc d
,FFd e
newGG4 7
SelectListItemGG8 F
(GGF G
)GGG H
{GGI J
TextGGJ N
=GGN O
$strGGO X
,GGX Y
ValueGGZ _
=GG_ `
$strGG` c
}GGc d
,GGd e
}HH0 1
;HH1 2
}II 	
publicKK 
IEnumerableKK 
<KK 
SelectListItemKK )
>KK) *
PeriodSelectListKK+ ;
{KK< =
getKK> A
;KKA B
setKKC F
;KKF G
}KKH I
internalLL 
voidLL 
SetPeriodSelectListLL )
(LL) *
IEnumerableLL* 5
<LL5 6
	PeriodDTOLL6 ?
>LL? @

enumerableLLA K
)LLK L
{MM 	
PeriodSelectListNN 
=NN 
CriaSelectListNN -
(NN- .

enumerableNN. 8
)NN8 9
;NN9 :
}PP 	
publicRR 
IEnumerableRR 
<RR 
SelectListItemRR )
>RR) *
UserSelectListRR+ 9
{RR: ;
getRR< ?
;RR? @
setRRA D
;RRD E
}RRF G
internalSS 
voidSS 
SetUserSelectListSS '
(SS' (
IEnumerableSS( 3
<SS3 4
UserDTOSS4 ;
>SS; <

enumerableSS= G
)SSG H
{TT 	
UserSelectListUU 
=UU 
CriaSelectListUU +
(UU+ ,

enumerableUU, 6
)UU6 7
;UU7 8
}WW 	
privateYY 
ListYY 
<YY 
SelectListItemYY #
>YY# $
CriaSelectListYY% 3
<YY3 4
TYY4 5
>YY5 6
(YY6 7
IEnumerableYY7 B
<YYB C
TYYC D
>YYD E

enumerableYYF P
)YYP Q
{ZZ 	
List[[ 
<[[ 
SelectListItem[[ 
>[[  
retorno[[! (
=[[) *
new[[+ .
List[[/ 3
<[[3 4
SelectListItem[[4 B
>[[B C
([[C D
)[[D E
;[[E F
var\\ 
counter\\ 
=\\ 
$num\\ 
;\\ 
foreach]] 
(]] 
var]] 
i]] 
in]] 

enumerable]] (
)]]( )
{^^ 
var__ 
text__ 
=__ 
i__ 
.__ 
GetType__ $
(__$ %
)__% &
.__& '
GetProperty__' 2
(__2 3
$str__3 9
)__9 :
??__; =
i__> ?
.__? @
GetType__@ G
(__G H
)__H I
.__I J
GetProperty__J U
(__U V
$str__V c
)__c d
;__d e
var`` 
prop`` 
=`` 
i`` 
.`` 
GetType`` $
(``$ %
)``% &
.``& '
GetProperty``' 2
(``2 3
$str``3 7
)``7 8
;``8 9
retornoaa 
.aa 
Insertaa 
(aa 
counteraa &
,aa& '
newaa( +
SelectListItemaa, :
(aa: ;
)aa; <
{aa= >
Textaa? C
=aaD E
textaaF J
.aaJ K
GetValueaaK S
(aaS T
iaaT U
)aaU V
.aaV W
ToStringaaW _
(aa_ `
)aa` a
,aaa b
Valueaac h
=aai j
propaak o
.aao p
GetValueaap x
(aax y
iaay z
)aaz {
.aa{ |
ToString	aa| Ñ
(
aaÑ Ö
)
aaÖ Ü
}
aaá à
)
aaà â
;
aaâ ä
counterbb 
++bb 
;bb 
}cc 
returnee 
retornoee 
;ee 
}ff 	
}jj 
}kk Ç
^C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\CorrectiveActionViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class %
CorrectiveActionViewModel *
:+ ,
CorrectiveActionDTO- @
{ 
public 
UserDTO 
User 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ›
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\IdentityModels.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public

 

class

 
ApplicationUser

  
:

! "
IdentityUser

# /
{ 
public 
async 
Task 
< 
ClaimsIdentity (
>( )%
GenerateUserIdentityAsync* C
(C D
UserManagerD O
<O P
ApplicationUserP _
>_ `
managera h
,h i
stringj p
authenticationType	q É
)
É Ñ
{ 	
var 
userIdentity 
= 
await $
manager% ,
., -
CreateIdentityAsync- @
(@ A
thisA E
,E F
authenticationTypeG Y
)Y Z
;Z [
return 
userIdentity 
;  
} 	
} 
public 

class  
ApplicationDbContext %
:& '
IdentityDbContext( 9
<9 :
ApplicationUser: I
>I J
{ 
public  
ApplicationDbContext #
(# $
)$ %
: 
base 
( 
$str &
,& '
throwIfV1Schema( 7
:7 8
false9 >
)> ?
{ 	
} 	
public 
static  
ApplicationDbContext *
Create+ 1
(1 2
)2 3
{ 	
return 
new  
ApplicationDbContext +
(+ ,
), -
;- .
} 	
public!! 
System!! 
.!! 
Data!! 
.!! 
Entity!! !
.!!! "
DbSet!!" '
<!!' (
Dominio!!( /
.!!/ 0

ParCluster!!0 :
>!!: ;
ParClusters!!< G
{!!H I
get!!J M
;!!M N
set!!O R
;!!R S
}!!T U
}"" 
}## †
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\ColetaViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
ColetaViewModel  
:! "
	ColetaDTO# ,
{ 
public		 
List		 
<		 
	ColetaDTO		 
>		 
listaResultado		 -
{		. /
get		0 3
;		3 4
set		5 8
;		8 9
}		: ;
} 
} ∏
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\ContextExampleViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class #
ContextExampleViewModel (
:) *
ContextExampleDTO+ <
{ 
public 
IEnumerable 
< 
SelectListItem )
>) *"
ShiftSelectListExample+ A
{ 	
get 
{ 
return 
new 
List 
<  
SelectListItem  .
>. /
(/ 0
)0 1
{1 2
new4 7
SelectListItem8 F
(F G
)G H
{I J
TextJ N
=N O
$strO X
,X Y
ValueZ _
=_ `
$str` c
}c d
,d e
new4 7
SelectListItem8 F
(F G
)G H
{I J
TextJ N
=N O
$strO X
,X Y
ValueZ _
=_ `
$str` c
}c d
,d e
}0 1
;1 2
;3 4
} 
set 
{ "
ShiftSelectListExample &
=' (
value) .
;. /
} 
} 	
public 
int 
IntegerProp 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
decimal   
DecimalProp   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
public!! 
Nullable!! 
<!! 
decimal!! 
>!!  
DecimalNullProp!!! 0
{!!1 2
get!!3 6
;!!6 7
set!!8 ;
;!!; <
}!!= >
public## 
float## 
	FloatProp## 
{##  
get##! $
;##$ %
set##& )
;##) *
}##+ ,
public$$ 
DateTime$$ 
DateTimeProp$$ $
{$$% &
get$$' *
;$$* +
set$$, /
;$$/ 0
}$$1 2
}%% 
}&& 
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\ParamsViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
ParamsViewModel  
{ 
public 
ParamsViewModel 
( 
)  
{! "
}# $
public 
ParamsViewModel 
( 
	ParamsDdl (
	paramsDdl) 2
)2 3
{ 	
this 
. 
	paramsDdl 
= 
	paramsDdl &
;& '
	paramsDto 
= 
new 
	ParamsDTO %
(% &
)& '
;' (
	paramsDto 
. )
parNotConformityRuleXLevelDto 3
=4 5
new6 9)
ParNotConformityRuleXLevelDTO: W
(W X
)X Y
;Y Z
	paramsDto 
. 
parLevel1Dto "
=# $
new% (
ParLevel1DTO) 5
(5 6
)6 7
;7 8
	paramsDto 
. 
parLevel1Dto "
." #)
parNotConformityRuleXLevelDto# @
=A B
newC F)
ParNotConformityRuleXLevelDTOG d
(d e
)e f
;f g
	paramsDto 
. 
parLevel2Dto "
=# $
new% (
ParLevel2DTO) 5
(5 6
)6 7
;7 8
	paramsDto 
. 
parLevel3Dto "
=# $
new% (
ParLevel3DTO) 5
(5 6
)6 7
{8 9
listGroupsLevel2: J
=K L
newM P
ListQ U
<U V
ParLevel3GroupDTOV g
>g h
(h i
)i j
}k l
;l m
	paramsDto 
. 
parLevel3Value $
=% &
new' *
ParLevel3ValueDTO+ <
(< =
)= >
;> ?
} 	
public&& 
ParamsViewModel&& 
(&& 
	ParamsDdl&& (
	paramsDdl&&) 2
,&&2 3
	ParamsDTO&&4 =
paramsDb&&> F
)&&F G
{'' 	
}(( 	
public,, 
	ParamsDTO,, 
	paramsDto,, "
{,,# $
get,,% (
;,,( )
set,,* -
;,,- .
},,/ 0
public.. 
	ParamsDdl.. 
	paramsDdl.. "
{..# $
get..% (
;..( )
set..* -
;..- .
}../ 0
public00 
int00 
levelControl00 
{00  !
get00" %
;00% &
set00' *
;00* +
}00, -
}11 
}22 …
eC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\ReportsCorrectiveActionViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class ,
 ReportsCorrectiveActionViewModel 1
{ 
public ,
 FormularioParaRelatorioViewModel /,
 formularioParaRelatorioViewModel0 P
{Q R
getS V
;V W
setX [
;[ \
}] ^
public 
CorrectiveActionDTO "
correctiveActionDTO# 6
{7 8
get9 <
;< =
set> A
;A B
}C D
}		 
}

 Ê
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\ReqController.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

static 
class 
ReqController %
{ 
public 
static 
string 
	avaliable &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
} 
} ≈
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\SyncViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
SyncViewModel 
:  
SyncDTO! (
{ 
} 
} ¸K
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\TipificacaoViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class  
TipificacaoViewModel %
{ 
public		 
int		 
	EmpresaId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
DepartamentoId

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
int 
TarefaId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
MonitoramentoId "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
	ProdutoId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
	UnidadeId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

OperacaoId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
	AuditorId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
List 
< '
VTVerificacaoTipificacaoDTO /
>/ 0"
VerificacaoTipificacao1 G
{H I
getJ M
;M N
setO R
;R S
}T U
public 
List 
< 1
%VTVerificacaoTipificacaoResultadosDTO 9
>9 :,
 VerificacaoTipificacaoResultados; [
{\ ]
get^ a
;a b
setc f
;f g
}h i
} 
public 

class '
VTVerificacaoTipificacaoDTO ,
:- .

EntityBase/ 9
{ 
public 
int 

Sequencial 
{ 
get  #
;# $
set% (
;( )
}* +
public 
byte 
Banda 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
dataTipificacao %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DateTime 
DataHora  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
	UnidadeId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Chave 
{ 
get !
;! "
set# &
;& '
}( )
public 
Nullable 
< 
int 
> 
EvaluationNumber -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
Nullable 
< 
int 
> 
Sample #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
public!! 

class!! 1
%VTVerificacaoTipificacaoResultadosDTO!! 6
:!!7 8

EntityBase!!9 C
{"" 
public## 
int## 
TarefaId## 
{## 
get## !
;##! "
set### &
;##& '
}##( )
public$$ 
string$$ '
CaracteristicaTipificacaoId$$ 1
{$$2 3
get$$4 7
;$$7 8
set$$9 <
;$$< =
}$$> ?
public%% 
string%% 
Chave%% 
{%% 
get%% !
;%%! "
set%%# &
;%%& '
}%%( )
public&& 
string&&  
AreasParticipantesId&& *
{&&+ ,
get&&- 0
;&&0 1
set&&2 5
;&&5 6
}&&7 8
public'' '
VTVerificacaoTipificacaoDTO'' *"
VerificacaoTipificacao''+ A
{''B C
get''D G
;''G H
set''I L
;''L M
}''N O
public(( 
MonitoramentoDTO(( 
Monitoramento((  -
{((. /
get((0 3
;((3 4
set((5 8
;((8 9
}((: ;
public)) (
CaracteristicaTipificacaoDTO)) +%
CaracteristicaTipificacao)), E
{))F G
get))H K
;))K L
set))M P
;))P Q
}))R S
}** 
public,, 

class,, 7
+VTVerificacaoTipificacaoTarefaIntegracaoDTO,, <
:,,= >

EntityBase,,? I
{-- 
public.. 
MonitoramentoDTO.. 
Monitoramento..  -
{... /
get..0 3
;..3 4
set..5 8
;..8 9
}..: ;
public// (
CaracteristicaTipificacaoDTO// +%
CaracteristicaTipificacao//, E
{//F G
get//H K
;//K L
set//M P
;//P Q
}//R S
}00 
public22 

class22 (
CaracteristicaTipificacaoDTO22 -
{33 
public44 
decimal44 
nCdCaracteristica44 (
{44) *
get44+ .
;44. /
set440 3
;443 4
}445 6
public55 
string55 
cNmCaracteristica55 '
{55( )
get55* -
;55- .
set55/ 2
;552 3
}554 5
public66 
string66 
cNrCaracteristica66 '
{66( )
get66* -
;66- .
set66/ 2
;662 3
}664 5
public77 
string77 
cSgCaracteristica77 '
{77( )
get77* -
;77- .
set77/ 2
;772 3
}774 5
public88 
string88 
cIdentificador88 $
{88% &
get88' *
;88* +
set88, /
;88/ 0
}881 2
public99 
List99 
<99 (
CaracteristicaTipificacaoDTO99 0
>990 1&
CaracteristicasTipificacao992 L
{99M N
get99O R
;99R S
set99T W
;99W X
}99Y Z
}:: 
public<< 

class<< !
AreasParticipantesDTO<< &
{== 
public>> 
decimal>> 
nCdCaracteristica>> (
{>>) *
get>>+ .
;>>. /
set>>0 3
;>>3 4
}>>5 6
public?? 
string?? 
cNmCaracteristica?? '
{??( )
get??* -
;??- .
set??/ 2
;??2 3
}??4 5
public@@ 
string@@ 
cNrCaracteristica@@ '
{@@( )
get@@* -
;@@- .
set@@/ 2
;@@2 3
}@@4 5
publicAA 
stringAA 
cSgCaracteristicaAA '
{AA( )
getAA* -
;AA- .
setAA/ 2
;AA2 3
}AA4 5
publicBB 
stringBB 
cIdentificadorBB $
{BB% &
getBB' *
;BB* +
setBB, /
;BB/ 0
}BB1 2
publicCC 
ListCC 
<CC !
AreasParticipantesDTOCC )
>CC) *
AreasParticipantesCC+ =
{CC> ?
getCC@ C
;CCC D
setCCE H
;CCH I
}CCJ K
}DD 
publicFF 

classFF 
MonitoramentoDTOFF !
{GG 
publicHH 
intHH 
IdHH 
{HH 
getHH 
;HH 
setHH  
;HH  !
}HH" #
publicII 
stringII 
NomeII 
{II 
getII  
;II  !
setII" %
;II% &
}II' (
publicJJ 
intJJ 
UsuarioInsercaoJJ "
{JJ# $
getJJ% (
;JJ( )
setJJ* -
;JJ- .
}JJ/ 0
publicKK 
SystemKK 
.KK 
DateTimeKK 
DataInsercaoKK +
{KK, -
getKK. 1
;KK1 2
setKK3 6
;KK6 7
}KK8 9
publicLL 
NullableLL 
<LL 
intLL 
>LL 
UsuarioAlteracaoLL -
{LL. /
getLL0 3
;LL3 4
setLL5 8
;LL8 9
}LL: ;
publicMM 
NullableMM 
<MM 
SystemMM 
.MM 
DateTimeMM '
>MM' (
DataAlteracaoMM) 6
{MM7 8
getMM9 <
;MM< =
setMM> A
;MMA B
}MMC D
publicNN 
stringNN 

FrequenciaNN  
{NN! "
getNN# &
;NN& '
setNN( +
;NN+ ,
}NN- .
publicOO 
NullableOO 
<OO 
SystemOO 
.OO 
DateTimeOO '
>OO' (
VigenciaOO) 1
{OO2 3
getOO4 7
;OO7 8
setOO9 <
;OO< =
}OO> ?
publicPP 
stringPP 
SiglaContusaoPP #
{PP$ %
getPP& )
;PP) *
setPP+ .
;PP. /
}PP0 1
publicQQ 
stringQQ !
SiglaFalhaOperacionalQQ +
{QQ, -
getQQ. 1
;QQ1 2
setQQ3 6
;QQ6 7
}QQ8 9
}RR 
}SS Ú
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\ViewModels\UserViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
UserViewModel 
:  
UserDTO! (
{ 
[ 	
StringLength	 
( 
$num 
, 
MinimumLength '
=( )
$num* +
)+ ,
], -
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
SenhaAntiga !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
StringLength	 
( 
$num 
, 
MinimumLength '
=( )
$num* +
)+ ,
], -
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
ConfirmarSenha $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
< 

EmpresaDTO 
> 
Empresa  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
	ErrorList 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ¸
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str $
)$ %
]% &
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str &
)& '
]' (
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" "
)""" #
]""# $
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *È8
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Providers\ApplicationOAuthProvider.cs
	namespace 	
	SgqSystem
 
. 
	Providers 
{ 
public 

class $
ApplicationOAuthProvider )
:* +,
 OAuthAuthorizationServerProvider, L
{ 
private 
readonly 
string 
_publicClientId  /
;/ 0
public $
ApplicationOAuthProvider '
(' (
string( .
publicClientId/ =
)= >
{ 	
if 
( 
publicClientId 
== !
null" &
)& '
{ 
throw 
new !
ArgumentNullException /
(/ 0
$str0 @
)@ A
;A B
} 
_publicClientId 
= 
publicClientId ,
;, -
} 	
public 
override 
async 
Task ")
GrantResourceOwnerCredentials# @
(@ A5
)OAuthGrantResourceOwnerCredentialsContextA j
contextk r
)r s
{ 	
var   
userManager   
=   
context   %
.  % &
OwinContext  & 1
.  1 2
GetUserManager  2 @
<  @ A"
ApplicationUserManager  A W
>  W X
(  X Y
)  Y Z
;  Z [
ApplicationUser"" 
user""  
=""! "
await""# (
userManager"") 4
.""4 5
	FindAsync""5 >
(""> ?
context""? F
.""F G
UserName""G O
,""O P
context""Q X
.""X Y
Password""Y a
)""a b
;""b c
if$$ 
($$ 
user$$ 
==$$ 
null$$ 
)$$ 
{%% 
context&& 
.&& 
SetError&&  
(&&  !
$str&&! 0
,&&0 1
$str&&2 [
)&&[ \
;&&\ ]
return'' 
;'' 
}(( 
ClaimsIdentity** 
oAuthIdentity** (
=**) *
await**+ 0
user**1 5
.**5 6%
GenerateUserIdentityAsync**6 O
(**O P
userManager**P [
,**[ \
OAuthDefaults++ 
.++ 
AuthenticationType++ /
)++/ 0
;++0 1
ClaimsIdentity,, 
cookiesIdentity,, *
=,,+ ,
await,,- 2
user,,3 7
.,,7 8%
GenerateUserIdentityAsync,,8 Q
(,,Q R
userManager,,R ]
,,,] ^(
CookieAuthenticationDefaults-- ,
.--, -
AuthenticationType--- ?
)--? @
;--@ A$
AuthenticationProperties// $

properties//% /
=//0 1
CreateProperties//2 B
(//B C
user//C G
.//G H
UserName//H P
)//P Q
;//Q R 
AuthenticationTicket00  
ticket00! '
=00( )
new00* - 
AuthenticationTicket00. B
(00B C
oAuthIdentity00C P
,00P Q

properties00R \
)00\ ]
;00] ^
context11 
.11 
	Validated11 
(11 
ticket11 $
)11$ %
;11% &
context22 
.22 
Request22 
.22 
Context22 #
.22# $
Authentication22$ 2
.222 3
SignIn223 9
(229 :
cookiesIdentity22: I
)22I J
;22J K
}33 	
public55 
override55 
Task55 
TokenEndpoint55 *
(55* +%
OAuthTokenEndpointContext55+ D
context55E L
)55L M
{66 	
foreach77 
(77 
KeyValuePair77 !
<77! "
string77" (
,77( )
string77* 0
>770 1
property772 :
in77; =
context77> E
.77E F

Properties77F P
.77P Q

Dictionary77Q [
)77[ \
{88 
context99 
.99 (
AdditionalResponseParameters99 4
.994 5
Add995 8
(998 9
property999 A
.99A B
Key99B E
,99E F
property99G O
.99O P
Value99P U
)99U V
;99V W
}:: 
return<< 
Task<< 
.<< 

FromResult<< "
<<<" #
object<<# )
><<) *
(<<* +
null<<+ /
)<</ 0
;<<0 1
}== 	
public?? 
override?? 
Task?? (
ValidateClientAuthentication?? 9
(??9 :4
(OAuthValidateClientAuthenticationContext??: b
context??c j
)??j k
{@@ 	
ifBB 
(BB 
contextBB 
.BB 
ClientIdBB  
==BB! #
nullBB$ (
)BB( )
{CC 
contextDD 
.DD 
	ValidatedDD !
(DD! "
)DD" #
;DD# $
}EE 
returnGG 
TaskGG 
.GG 

FromResultGG "
<GG" #
objectGG# )
>GG) *
(GG* +
nullGG+ /
)GG/ 0
;GG0 1
}HH 	
publicJJ 
overrideJJ 
TaskJJ %
ValidateClientRedirectUriJJ 6
(JJ6 71
%OAuthValidateClientRedirectUriContextJJ7 \
contextJJ] d
)JJd e
{KK 	
ifLL 
(LL 
contextLL 
.LL 
ClientIdLL  
==LL! #
_publicClientIdLL$ 3
)LL3 4
{MM 
UriNN 
expectedRootUriNN #
=NN$ %
newNN& )
UriNN* -
(NN- .
contextNN. 5
.NN5 6
RequestNN6 =
.NN= >
UriNN> A
,NNA B
$strNNC F
)NNF G
;NNG H
ifPP 
(PP 
expectedRootUriPP #
.PP# $
AbsoluteUriPP$ /
==PP0 2
contextPP3 :
.PP: ;
RedirectUriPP; F
)PPF G
{QQ 
contextRR 
.RR 
	ValidatedRR %
(RR% &
)RR& '
;RR' (
}SS 
}TT 
returnVV 
TaskVV 
.VV 

FromResultVV "
<VV" #
objectVV# )
>VV) *
(VV* +
nullVV+ /
)VV/ 0
;VV0 1
}WW 	
publicYY 
staticYY $
AuthenticationPropertiesYY .
CreatePropertiesYY/ ?
(YY? @
stringYY@ F
userNameYYG O
)YYO P
{ZZ 	
IDictionary[[ 
<[[ 
string[[ 
,[[ 
string[[  &
>[[& '
data[[( ,
=[[- .
new[[/ 2

Dictionary[[3 =
<[[= >
string[[> D
,[[D E
string[[F L
>[[L M
{\\ 
{]] 
$str]] 
,]] 
userName]] &
}]]' (
}^^ 
;^^ 
return__ 
new__ $
AuthenticationProperties__ /
(__/ 0
data__0 4
)__4 5
;__5 6
}`` 	
}aa 
}bb ’
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Startup.cs
[		 
assembly		 	
:			 

OwinStartup		 
(		 
typeof		 
(		 
	SgqSystem		 '
.		' (
Startup		( /
)		/ 0
)		0 1
]		1 2
	namespace 	
	SgqSystem
 
{ 
public 

partial 
class 
Startup  
{ 
public 
void 
Configuration !
(! "
IAppBuilder" -
app. 1
)1 2
{ 	
ConfigureAuth 
( 
app 
) 
; 
var 
dashboardoptions  
=! "
new# &
DashboardOptions' 7
{ 
AppPath 
= 
VirtualPathUtility ,
., -

ToAbsolute- 7
(7 8
$str8 ;
); <
,< =
Authorization 
= 
new  #
[# $
]$ %
{& '
new( +-
!CustomAuthorizationHangFireFilter, M
(M N
)N O
}P Q
} 
; 
var 

joboptions 
= 
new  &
BackgroundJobServerOptions! ;
{< =
}> ?
;? @
app 
. 
UseHangfireServer !
(! "

joboptions" ,
), -
;- .
app 
.  
UseHangfireDashboard $
($ %
$str% 0
,0 1
dashboardoptions2 B
)B C
;C D
}33 	
}44 
public66 

class66 -
!CustomAuthorizationHangFireFilter66 2
:663 4)
IDashboardAuthorizationFilter665 R
{77 
public99 
bool99 
	Authorize99 
(99 
DashboardContext99 .
context99/ 6
)996 7
{:: 	
return== 
true== 
;== 
}AA 	
}BB 
}CC ¢
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\SgqSystem\Views\ResultsDivViewModel.cs
	namespace 	
	SgqSystem
 
. 

ViewModels 
{ 
public 

class 
ResultsDivViewModel $
{ 
public		 
List		 
<		  
ConsolidationLevel01		 (
>		( ) 
consolidationLevel01		* >
{		? @
get		A D
;		D E
set		F I
;		I J
}		K L
public 
List 
<  
ConsolidationLevel01 (
>( )
consolidcaoCFF* 8
{ 	
get 
{ 
return  
consolidationLevel01 +
;+ ,
} 
} 	
} 
} 