Ê
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\BaseEntity\DataCollectionBase.cs
	namespace 	
DTO
 
. 

BaseEntity 
{ 
public 

class 
DataCollectionBase #
:$ %

EntityBase& 0
{ 
public 
decimal 
Evaluate 
{  !
get" %
;% &
set' *
;* +
}, -
public 
decimal 

NotConform !
{" #
get$ '
;' (
set) ,
;, -
}. /
public

 
void

 $
ValidaDataCollectionBase

 ,
(

, -
)

- .
{ 	
Guard 
. 
ForNegative 
( 
Evaluate &
,& '
$str( 2
)2 3
;3 4
Guard 
. 
ForNegative 
( 

NotConform (
,( )
$str* 7
)7 8
;8 9
} 	
} 
} Ç
IC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\BaseEntity\EntityBase.cs
	namespace 	
DTO
 
. 

BaseEntity 
{ 
public 

class 

EntityBase 
{		 
[

 	

DataMember

	 
]

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
=$ %
$num& '
;' (
[ 	

DataMember	 
] 
public 
DateTime 
AddDate 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
DateTime0 8
.8 9
Now9 <
;< =
[ 	

DataMember	 
] 
public 
DateTime 
? 
	AlterDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
;7 8
public 
void 
ValidaBaseEntity $
($ %
[% &
CallerMemberName& 6
]6 7
string8 >

callerName? I
=J K
$strL N
)N O
{ 	
Guard 
. 

ForValidId 
( 
Id 
,  

callerName! +
)+ ,
;, -
if 
( 
AddDate 
. 
IsNull 
( 
)  
||! #
AddDate$ +
==, .
DateTime/ 7
.7 8
MinValue8 @
)@ A
AddDate 
= 
DateTime "
." #
Now# &
;& '
} 	
} 
} Òd
=C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\CreateLog.cs
	namespace 	
DTO
 
{ 
public 

class 
	CreateLog 
{		 
public 
	CreateLog 
( 
	Exception "
e# $
)$ %
{ 	$
GlobalDiagnosticsContext $
.$ %
Clear% *
(* +
)+ ,
;, -
LogException 
( 
e 
) 
; 
} 	
public 
	CreateLog 
( 
	Exception "
e# $
,$ %
string& ,
ControllerAction- =
)= >
{ 	$
GlobalDiagnosticsContext $
.$ %
Clear% *
(* +
)+ ,
;, -
LogException 
( 
e 
, 
ControllerAction ,
), -
;- .
} 	
public!! 
	CreateLog!! 
(!! 
	Exception!! "
	exception!!# ,
,!!, -
int!!. 1
user_Id!!2 9
,!!9 :
int!!; >
period!!? E
,!!E F
int!!G J
shift!!K P
,!!P Q
string!!R X
html!!Y ]
,!!] ^
object!!_ e
json!!f j
)!!j k
{"" 	
LogExceptionColleta## 
(##  
	exception##  )
,##) *
user_Id##+ 2
,##2 3
period##4 :
,##: ;
shift##< A
,##A B
html##C G
,##G H
json##I M
)##M N
;##N O
}$$ 	
private&& 
void&& 
LogExceptionColleta&& (
(&&( )
	Exception&&) 2
_ex&&3 6
,&&6 7
int&&8 ;
user_Id&&< C
,&&C D
int&&E H
period&&I O
,&&O P
int&&Q T
shift&&U Z
,&&Z [
string&&\ b
html&&c g
,&&g h
object&&i o
json&&p t
)&&t u
{'' 	
mensagem)) 
=)) 
_ex)) 
.)) 
Message)) "
;))" #
mensagemExcecao** 
=** 
mensagem** &
+**' (
$str**) ,
+**- .
_ex**/ 2
.**2 3
Message**3 :
;**: ;
inner++ 
=++ 
innerMessage++  
;++  !
CreateStackTrace-- 
(-- 
_ex--  
)--  !
;--! "!
CreateInnerStacktrace.. !
(..! "
_ex.." %
)..% &
;..& '
var00 
logger00 
=00 

LogManager00 #
.00# $
	GetLogger00$ -
(00- .
$str00. C
)00C D
;00D E$
GlobalDiagnosticsContext;; $
.;;$ %
Set;;% (
(;;( )
$str;;) 2
,;;2 3
user_Id;;4 ;
);;; <
;;;< =$
GlobalDiagnosticsContext<< $
.<<$ %
Set<<% (
(<<( )
$str<<) 1
,<<1 2
period<<3 9
)<<9 :
;<<: ;$
GlobalDiagnosticsContext== $
.==$ %
Set==% (
(==( )
$str==) 0
,==0 1
shift==2 7
)==7 8
;==8 9$
GlobalDiagnosticsContext>> $
.>>$ %
Set>>% (
(>>( )
$str>>) /
,>>/ 0
html>>1 5
)>>5 6
;>>6 7$
GlobalDiagnosticsContext?? $
.??$ %
Set??% (
(??( )
$str??) /
,??/ 0
ToJson??1 7
(??7 8
json??8 <
)??< =
.??= >
ToString??> F
(??F G
)??G H
)??H I
;??I J$
GlobalDiagnosticsContext@@ $
.@@$ %
Set@@% (
(@@( )
$str@@) 5
,@@5 6

stackTrace@@7 A
)@@A B
;@@B C
loggerBB 
.BB 
WarnBB 
(BB 
_exBB 
,BB 
mensagemExcecaoBB ,
,BB, -
jsonBB. 2
)BB2 3
;BB3 4
}DD 	
publicHH 
	CreateLogHH 
(HH 
	ExceptionHH "
	exceptionHH# ,
,HH, -
objectHH. 4
objHH5 8
)HH8 9
{II 	
LogExceptionJJ 
(JJ 
	exceptionJJ "
,JJ" #
objJJ$ '
)JJ' (
;JJ( )
}KK 	
privateMM 
LoggerMM 
_loggerMM 
;MM 
publicNN 
voidNN 
GetLogNN 
(NN 
stringNN !
nameNN" &
)NN& '
{OO 	
_loggerPP 
=PP 

LogManagerPP  
.PP  !
	GetLoggerPP! *
(PP* +
namePP+ /
)PP/ 0
;PP0 1
}QQ 	
privateXX 
stringXX 
innerMessageXX #
=XX$ %
$strXX& (
;XX( )
privateYY 
stringYY 

stackTraceYY !
=YY" #
$strYY$ &
;YY& '
privateZZ 
stringZZ 
mensagemZZ 
=ZZ  !
$strZZ" $
;ZZ$ %
private[[ 
string[[ 
mensagemExcecao[[ &
=[[' (
$str[[) +
;[[+ ,
private\\ 
string\\ 
inner\\ 
=\\ 
$str\\ !
;\\! "
private]] 
void]] 
LogException]] !
(]]! "
	Exception]]" +
_ex]], /
,]]/ 0
string]]1 7
ControllerAction]]8 H
=]]I J
null]]K O
)]]O P
{^^ 	
mensagem`` 
=`` 
_ex`` 
.`` 
Message`` "
;``" #
ifaa 
(aa 
!aa 
stringaa 
.aa 
IsNullOrEmptyaa %
(aa% &
ControllerActionaa& 6
)aa6 7
)aa7 8
mensagembb 
+=bb 
$strbb 
+bb  !
ControllerActionbb" 2
;bb2 3
mensagemExcecaodd 
=dd 
mensagemdd &
+dd' (
$strdd) ,
+dd- .
_exdd/ 2
.dd2 3
Messagedd3 :
;dd: ;
inneree 
=ee 
innerMessageee  
;ee  !
CreateStackTracegg 
(gg 
_exgg  
)gg  !
;gg! "!
CreateInnerStacktracehh !
(hh! "
_exhh" %
)hh% &
;hh& '
varjj 
loggerjj 
=jj 

LogManagerjj #
.jj# $
	GetLoggerjj$ -
(jj- .
$strjj. >
)jj> ?
;jj? @$
GlobalDiagnosticsContextll $
.ll$ %
Setll% (
(ll( )
$strll) 5
,ll5 6

stackTracell7 A
)llA B
;llB C
loggermm 
.mm 
Warnmm 
(mm 
_exmm 
,mm 
mensagemExcecaomm ,
,mm, -
thismm. 2
)mm2 3
;mm3 4
}oo 	
privateqq 
voidqq 
LogExceptionqq !
(qq! "
	Exceptionqq" +
_exqq, /
,qq/ 0
objectqq1 7
objqq8 ;
)qq; <
{rr 	
mensagemtt 
=tt 
_extt 
.tt 
Messagett "
;tt" #
mensagemExcecaouu 
=uu 
mensagemuu &
+uu' (
$struu) ,
+uu- .
_exuu/ 2
.uu2 3
Messageuu3 :
;uu: ;
innervv 
=vv 
innerMessagevv  
;vv  !
CreateStackTracexx 
(xx 
_exxx  
)xx  !
;xx! "!
CreateInnerStacktraceyy !
(yy! "
_exyy" %
)yy% &
;yy& '
var{{ 
logger{{ 
={{ 

LogManager{{ #
.{{# $
	GetLogger{{$ -
({{- .
$str{{. >
){{> ?
;{{? @$
GlobalDiagnosticsContext}} $
.}}$ %
Set}}% (
(}}( )
$str}}) 5
,}}5 6

stackTrace}}7 A
)}}A B
;}}B C$
GlobalDiagnosticsContext~~ $
.~~$ %
Set~~% (
(~~( )
$str~~) 2
,~~2 3
ToJson~~4 :
(~~: ;
obj~~; >
)~~> ?
.~~? @
ToString~~@ H
(~~H I
)~~I J
)~~J K
;~~K L
logger 
. 
Warn 
( 
_ex 
, 
mensagemExcecao ,
,, -
obj. 1
)1 2
;2 3
}
 	
public
 
string
 
ToJson
 
(
 
object
 #
value
$ )
)
) *
{
 	
var
 
settings
 
=
 
new
 $
JsonSerializerSettings
 5
{
 #
ReferenceLoopHandling
 %
=
& '#
ReferenceLoopHandling
( =
.
= >
Ignore
> D
}
 
;
 
return
 
JsonConvert
 
.
 
SerializeObject
 .
(
. /
value
/ 4
,
4 5

Formatting
6 @
.
@ A
Indented
A I
,
I J
settings
K S
)
S T
;
T U
}
 	
private
 
void
 #
CreateInnerStacktrace
 *
(
* +
	Exception
+ 4
_ex
5 8
)
8 9
{
 	
var
  
hasInnnerException
 "
=
# $
_ex
% (
.
( )
InnerException
) 7
;
7 8
var
 
counter
 
=
 
$num
 
;
 
while
 
(
  
hasInnnerException
 %
!=
& (
null
) -
)
- .
{
 
mensagemExcecao
 
+=
  "
$str
# 3
+
4 5
counter
6 =
+
> ?
$str
@ F
+
G H 
hasInnnerException
I [
.
[ \
Message
\ c
;
c d
inner
 
+=
 
$str
 +
+
, -
counter
. 5
+
6 7
$str
8 =
+
> ? 
hasInnnerException
@ R
.
R S
InnerException
S a
;
a b

stackTrace
 
+=
 
$str
 2
+
3 4
counter
5 <
+
= >
$str
? E
;
E F
CreateStackTrace
  
(
  ! 
hasInnnerException
! 3
)
3 4
;
4 5 
hasInnnerException
 "
=
# $ 
hasInnnerException
% 7
.
7 8
InnerException
8 F
;
F G
counter
 
++
 
;
 
}
 
}
   	
private
¦¦ 
void
¦¦ 
CreateStackTrace
¦¦ %
(
¦¦% &
	Exception
¦¦& /
_ex
¦¦0 3
)
¦¦3 4
{
§§ 	
var
¨¨ 
st
¨¨ 
=
¨¨ 
new
¨¨ 

StackTrace
¨¨ #
(
¨¨# $
_ex
¨¨$ '
,
¨¨' (
true
¨¨) -
)
¨¨- .
;
¨¨. /
var
©© 
counter
©© 
=
©© 
$num
©© 
;
©© 
while
ªª 
(
ªª 
st
ªª 
.
ªª 
GetFrame
ªª 
(
ªª 
counter
ªª &
)
ªª& '
!=
ªª( *
null
ªª+ /
)
ªª/ 0
{
«« 
var
¬¬ 
frame
¬¬ 
=
¬¬ 
st
¬¬ 
.
¬¬ 
GetFrame
¬¬ '
(
¬¬' (
counter
¬¬( /
)
¬¬/ 0
;
¬¬0 1
if
­­ 
(
­­ 
frame
­­ 
.
­­ 
	GetMethod
­­ #
(
­­# $
)
­­$ %
.
­­% &
DeclaringType
­­& 3
!=
­­4 6
null
­­7 ;
)
­­; <
{
®® 

stackTrace
¯¯ 
+=
¯¯ !
$str
¯¯" -
+
¯¯. /
frame
¯¯0 5
.
¯¯5 6
	GetMethod
¯¯6 ?
(
¯¯? @
)
¯¯@ A
.
¯¯A B
DeclaringType
¯¯B O
.
¯¯O P
Name
¯¯P T
;
¯¯T U

stackTrace
°° 
+=
°° !
$str
°°" *
+
°°+ ,
frame
°°- 2
.
°°2 3
GetFileLineNumber
°°3 D
(
°°D E
)
°°E F
;
°°F G

stackTrace
±± 
+=
±± !
$str
±±" &
;
±±& '
}
²² 
counter
³³ 
++
³³ 
;
³³ 
}
´´ 
}
µµ 	
}
·· 
}¸¸ ´3
IC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DataCarrierFormulario.cs
	namespace 	
DTO
 
{ 
public 

class !
DataCarrierFormulario &
{ 
public

 
bool

 
hasErros

 
;

 
public 
DateTime 
_dataInicio #
{ 	
get 
{ 
if 
( 
	startDate 
!=  
null! %
)% &
{ 
return 
Guard  
.  !
ParseDateToSqlV2! 1
(1 2
	startDate2 ;
); <
;< =
} 
return 
DateTime 
.  
Now  #
;# $
} 
} 	
public 
String 
_dataInicioSQL $
{ 	
get 
{ 
if   
(   
	startDate   
!=    
null  ! %
)  % &
{!! 
return"" 
_dataInicio"" &
.""& '
ToString""' /
(""/ 0
$str""0 :
)"": ;
;""; <
}## 
return$$ 
DateTime$$ 
.$$  
Now$$  #
.$$# $
ToString$$$ ,
($$, -
$str$$- 7
)$$7 8
;$$8 9
}%% 
}'' 	
public)) 
DateTime)) 
_dataFim))  
{** 	
get++ 
{,, 
if-- 
(-- 
endDate-- 
!=-- 
null-- #
)--# $
{.. 
return11 
Guard11  
.11  !
ParseDateToSqlV211! 1
(111 2
endDate112 9
)119 :
;11: ;
}22 
return33 
DateTime33 
.33  
Now33  #
;33# $
}44 
}55 	
public77 
String77 
_dataFimSQL77 !
{88 	
get99 
{:: 
if;; 
(;; 
endDate;; 
!=;; 
null;; #
);;# $
{<< 
return== 
_dataFim== #
.==# $
ToString==$ ,
(==, -
$str==- 7
)==7 8
;==8 9
}>> 
return?? 
DateTime?? 
.??  
Now??  #
.??# $
ToString??$ ,
(??, -
$str??- 7
)??7 8
;??8 9
}@@ 
}AA 	
publicCC 
stringCC 
	startDateCC 
{CC  !
getCC" %
;CC% &
setCC' *
;CC* +
}CC, -
publicDD 
stringDD 
endDateDD 
{DD 
getDD  #
;DD# $
setDD% (
;DD( )
}DD* +
publicFF 
intFF 
level1IdFF 
{FF 
getFF !
;FF! "
setFF# &
;FF& '
}FF( )
publicGG 
stringGG 

level1NameGG  
{GG! "
getGG# &
;GG& '
setGG( +
;GG+ ,
}GG- .
publicII 
intII 
level2IdII 
{II 
getII !
;II! "
setII# &
;II& '
}II( )
publicJJ 
stringJJ 

level2NameJJ  
{JJ! "
getJJ# &
;JJ& '
setJJ( +
;JJ+ ,
}JJ- .
publicLL 
intLL 
level3IdLL 
{LL 
getLL !
;LL! "
setLL# &
;LL& '
}LL( )
publicMM 
stringMM 

level3NameMM  
{MM! "
getMM# &
;MM& '
setMM( +
;MM+ ,
}MM- .
publicOO 
intOO 
unitIdOO 
{OO 
getOO 
;OO  
setOO! $
;OO$ %
}OO& '
publicPP 
stringPP 
unitNamePP 
{PP  
getPP! $
;PP$ %
setPP& )
;PP) *
}PP+ ,
publicRR 
intRR 
	auditorIdRR 
{RR 
getRR "
;RR" #
setRR$ '
;RR' (
}RR) *
publicSS 
stringSS 
auditorNameSS !
{SS" #
getSS$ '
;SS' (
setSS) ,
;SS, -
}SS. /
publicUU 
intUU 
shiftUU 
{UU 
getUU 
;UU 
setUU  #
;UU# $
}UU% &
publicVV 
intVV 
periodVV 
{VV 
getVV 
;VV  
setVV! $
;VV$ %
}VV& '
publicYY 
intYY 
MetaFTAYY 
{YY 
getYY  
;YY  !
setYY" %
;YY% &
}YY' (
publicZZ 
intZZ 
PercentualNCFTAZZ "
{ZZ# $
getZZ% (
;ZZ( )
setZZ* -
;ZZ- .
}ZZ/ 0
public[[ 
int[[ !
ReincidenciaDesvioFTA[[ (
{[[) *
get[[+ .
;[[. /
set[[0 3
;[[3 4
}[[5 6
public]] 
string]] 
CallBackTableBody]] '
{]]( )
get]]* -
;]]- .
set]]/ 2
;]]2 3
}]]4 5
public^^ 
string^^ !
CallBackTableEsquerda^^ +
{^^, -
get^^. 1
;^^1 2
set^^3 6
;^^6 7
}^^8 9
public__ 
string__ &
CallBackTableTituloColunas__ 0
{__1 2
get__3 6
;__6 7
set__8 ;
;__; <
}__= >
public`` 
string`` 
Query`` 
{`` 
get`` !
;``! "
set``# &
;``& '
}``( )
publicaa 
stringaa 
Titleaa 
{aa 
getaa !
;aa! "
setaa# &
;aa& '
}aa( )
publicbb 
Listbb 
<bb 
stringbb 
>bb 
ParametroTableRowbb -
{bb. /
getbb0 3
;bb3 4
setbb5 8
;bb8 9
}bb: ;
publiccc 
Listcc 
<cc 
stringcc 
>cc 
ParametroTableColcc -
{cc. /
getcc0 3
;cc3 4
setcc5 8
;cc8 9
}cc: ;
publicee 
intee 
clusterSelected_Idee %
{ee& '
getee( +
;ee+ ,
setee- 0
;ee0 1
}ee2 3
}gg 
}hh Ò
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ColetaDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
	ColetaDTO 
: 
DataCollectionBase /
{ 
public

 
int

 
	Id_Level1

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
int 
	Id_Level2 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
	Id_Level3 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
Reaudit 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
UserIdInsercao !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
Period 
{ 
get 
;  
set! $
;$ %
}& '
public 
decimal 
Cattle_Type "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
decimal 
Chain_Speed "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
decimal 
Lot 
{ 
get  
;  !
set" %
;% &
}' (
public 
decimal 
	Mud_Score  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
TotalDefectsLevel1 )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
decimal 
TotalDefectsLevel2 )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
decimal 
TotalDefectsLevel3 )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 

Level1Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

Level2Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

Level3Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public** 
void** 
ValidaColeta**  
(**  !
)**! "
{++ 	
ValidaBaseEntity,, 
(,, 
),, 
;,, $
ValidaDataCollectionBase-- $
(--$ %
)--% &
;--& '
Guard// 
.// 
ForNegative// 
(// 
UserIdInsercao// ,
,//, -
$str//. P
)//P Q
;//Q R
Guard00 
.00 
forValueZero00 
(00 
UserIdInsercao00 -
,00- .
$str00/ Y
)00Y Z
;00Z [
Guard11 
.11 

ForValidFk11 
(11 
	Id_Level211 &
,11& '
$str11( u
)11u v
;11v w
Guard22 
.22 

ForValidFk22 
(22 
	Id_Level122 &
,22& '
$str22( u
)22u v
;22v w
Guard33 
.33 

ForValidFk33 
(33 
	Id_Level333 &
,33& '
$str33( u
)33u v
;33v w
}44 	
}55 
}66 ã
IC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\CollectionHtmlDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
CollectionHtmlDTO "
:# $

EntityBase% /
{ 
public		 
string		 
Html		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
int

 
Period

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
int 
Shift 
{ 
get 
; 
set  #
;# $
}% &
public 
System 
. 
DateTime 
CollectionDate -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
int 
UnitId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string #
CollectionDateFormatado -
{ 	
get 
{ 
return 
CollectionDate '
!=( *
null+ /
?0 1
CollectionDate2 @
.@ A
ToStringA I
(I J
$strJ V
)V W
:X Y
nullZ ^
;^ _
}` a
set 
{ 
CollectionDate 
=  
Convert! (
.( )

ToDateTime) 3
(3 4
value4 9
.9 :
ToString: B
(B C
)C D
,D E
CultureInfoF Q
.Q R
InvariantCultureR b
)b c
;c d
} 
} 	
} 
} Ô
OC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ConsolidationLevel02DTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public		 

class		 #
ConsolidationLevel02DTO		 (
:		) *

EntityBase		+ 5
{

 
public #
ConsolidationLevel02DTO &
(& '
)' (
{) *
}+ ,
public 
int "
Level01ConsolidationId )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
int 
	Level02Id 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
UnitId 
{ 
get 
;  
set! $
;$ %
}& '
public 
DateTime 
ConsolidationDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

Level02DTO 
Level02 !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
List 
<  
CollectionLevel02DTO (
>( )
CollectionLevel02* ;
{< =
get> A
;A B
setC F
;F G
}H I
public #
ConsolidationLevel02DTO &
(& '
List' +
<+ , 
CollectionLevel02DTO, @
>@ A
xB C
)C D
{ 	
ValidaBaseEntity 
( 
) 
; 
if## 
(## 
x## 
.## 
FirstOrDefault##  
(##  !
)##! "
.##" #
	Level01Id### ,
==##- /
$num##0 1
)##1 2
{$$ 
}%% 
if++ 
(++ 
x++ 
.++ 
FirstOrDefault++  
(++  !
)++! "
.++" #
	Level01Id++# ,
==++- /
$num++0 1
)++1 2
{,, 
}-- 
if33 
(33 
x33 
.33 
FirstOrDefault33  
(33  !
)33! "
.33" #
	Level01Id33# ,
==33- /
$num330 1
)331 2
{44 
}55 
if;; 
(;; 
x;; 
[;; 
$num;; 
];; 
.;; 
CollectionDate;; #
!=;;$ &
null;;' +
);;+ ,
{<< 
ConsolidationDate== !
===" #
x==$ %
[==% &
$num==& '
]==' (
.==( )
CollectionDate==) 7
;==7 8
}>> 
	Level02Id@@ 
=@@ 
x@@ 
.@@ 
FirstOrDefault@@ (
(@@( )
)@@) *
.@@* +
	Level02Id@@+ 4
;@@4 5
GuardAA 
.AA 

ForValidFkAA 
(AA 
	Level02IdAA &
,AA& '
$strAA( B
)AAB C
;AAC D
}GG 	
publicII 
ListII 
<II  
CollectionLevel02DTOII (
>II( ) 
collectionLevel02DTOII* >
{II? @
getIIA D
;IID E
setIIF I
;III J
}IIK L
}MM 
}NN þÀ
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\CollectionLevel02DTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public		 

class		  
CollectionLevel02DTO		 %
:		& '

EntityBase		( 2
{

 
public  
CollectionLevel02DTO #
(# $
)$ %
{& '
}( )
public  
CollectionLevel02DTO #
(# $
NextRoot$ ,
nextRoot- 5
,5 6
int7 :
unitId; A
,A B
stringC I
biasedunbiasedJ X
)X Y
{ 	
if 
( 
nextRoot 
. 
id 
!= 
null #
)# $
if 
( 
nextRoot 
. 
id 
.  
Length  &
>' (
$num) *
)* +
Id 
= 
Guard 
. 
ConverteValor ,
<, -
int- 0
>0 1
(1 2
nextRoot2 :
.: ;
id; =
,= >
$str? K
)K L
;L M
ValidaBaseEntity 
( 
) 
; 
if 
( 
nextRoot 
. 
remove 
!=  "
null# '
)' (
if 
( 
nextRoot 
. 
remove #
.# $
Length$ *
>+ ,
$num- .
). /
Remove 
= 
Guard "
." #
ConverteValor# 0
<0 1
bool1 5
>5 6
(6 7
nextRoot7 ?
.? @
remove@ F
,F G
$strH X
)X Y
;Y Z
Guard 
. 
VerifyIfIsBool  
(  !
Remove! '
,' (
$str) >
)> ?
;? @
if"" 
("" 
nextRoot"" 
."" 
	level01id"" "
.""" #
Equals""# )
("") *
$str""* -
)""- .
)"". /
{## 
CattleTypeId$$ 
=$$ 
Guard$$ $
.$$$ %
ConverteValor$$% 2
<$$2 3
int$$3 6
>$$6 7
($$7 8
biasedunbiased$$8 F
,$$F G
$str$$H `
)$$` a
;$$a b
Guard%% 
.%% 

ForValidFk%%  
(%%  !
CattleTypeId%%! -
,%%- .
$str%%/ P
)%%P Q
;%%Q R
}&& 
if(( 
((( 
nextRoot(( 
.(( 
startphasedate(( '
!=((( *
null((+ /
)((/ 0
{)) 
var++ 
dataCorrigida++ !
=++" #
nextRoot++$ ,
.++, -
startphasedate++- ;
.++; <
Split++< A
(++A B
$char++B E
)++E F
;++F G
StartPhaseDate,, 
=,,  
DateTime,,! )
.,,) *

ParseExact,,* 4
(,,4 5
nextRoot,,5 =
.,,= >
startphasedate,,> L
.,,L M
Split,,M R
(,,R S
$char,,S V
),,V W
[,,W X
$num,,X Y
],,Y Z
+,,[ \
$str,,] `
+,,a b
nextRoot,,c k
.,,k l
startphasedate,,l z
.,,z {
Split	,,{ 
(
,, 
$char
,, 
)
,, 
[
,, 
$num
,, 
]
,, 
,
,, 
$str
,, 
,
,, 
CultureInfo
,, ©
.
,,© ª
InvariantCulture
,,ª º
)
,,º »
;
,,» ¼
StartPhaseDate-- 
=--  
CollectionDate--! /
.--/ 0

AddSeconds--0 :
(--: ;
Guard--; @
.--@ A
ConverteValor--A N
<--N O
int--O R
>--R S
(--S T
nextRoot--T \
.--\ ]
startphasedate--] k
.--k l
Split--l q
(--q r
$char--r u
)--u v
[--v w
$num--w x
]--x y
,--y z
$str	--{ 
)
-- 
)
-- 
.
-- 
AddMilliseconds
-- 
(
-- 
Guard
-- £
.
--£ ¤
ConverteValor
--¤ ±
<
--± ²
int
--² µ
>
--µ ¶
(
--¶ ·
nextRoot
--· ¿
.
--¿ À
startphasedate
--À Î
.
--Î Ï
Split
--Ï Ô
(
--Ô Õ
$char
--Õ Ø
)
--Ø Ù
[
--Ù Ú
$num
--Ú Û
]
--Û Ü
,
--Ü Ý
$str
--Þ î
)
--î ï
)
--ï ð
;
--ð ñ
}// 
if55 
(55 
nextRoot55 
.55 
	level01id55 "
.55" #
Equals55# )
(55) *
$str55* -
)55- .
)55. /
{66 
}77 
if== 
(== 
nextRoot== 
.== 
	level01id== "
.==" #
Equals==# )
(==) *
$str==* -
)==- .
)==. /
{>> 
CattleTypeId?? 
=?? 
Guard?? $
.??$ %
ConverteValor??% 2
<??2 3
int??3 6
>??6 7
(??7 8
nextRoot??8 @
.??@ A

cattletype??A K
,??K L
$str??M a
)??a b
;??b c
Guard@@ 
.@@ 

ForValidFk@@  
(@@  !
CattleTypeId@@! -
,@@- .
$str@@/ L
)@@L M
;@@M N

ChainspeedBB 
=BB 
GuardBB "
.BB" #
ConverteValorBB# 0
<BB0 1
decimalBB1 8
>BB8 9
(BB9 :
nextRootBB: B
.BBB C

chainspeedBBC M
,BBM N
$strBBO c
)BBc d
;BBd e
GuardCC 
.CC 
ForNegativeCC !
(CC! "

ChainspeedCC" ,
,CC, -
$strCC. :
)CC: ;
;CC; <
	LotNumberFF 
=FF 
GuardFF !
.FF! "
ConverteValorFF" /
<FF/ 0
decimalFF0 7
>FF7 8
(FF8 9
nextRootFF9 A
.FFA B
	lotnumberFFB K
,FFK L
$strFFM `
)FF` a
;FFa b
GuardGG 
.GG 
ForNegativeGG !
(GG! "
	LotNumberGG" +
,GG+ ,
$strGG- 8
)GG8 9
;GG9 :
MudscoreII 
=II 
GuardII  
.II  !
ConverteValorII! .
<II. /
decimalII/ 6
>II6 7
(II7 8
nextRootII8 @
.II@ A
mudscoreIIA I
,III J
$strIIK ]
)II] ^
;II^ _
GuardJJ 
.JJ 
ForNegativeJJ !
(JJ! "
MudscoreJJ" *
,JJ* +
$strJJ, 6
)JJ6 7
;JJ7 8
ifLL 
(LL 
nextRootLL 
.LL #
consecutivefailuretotalLL 4
!=LL5 7
nullLL8 <
)LL< =#
ConsecutiveFailureTotalMM +
=MM, -
GuardMM. 3
.MM3 4
ConverteValorMM4 A
<MMA B
intMMB E
>MME F
(MMF G
nextRootMMG O
.MMO P#
consecutivefailuretotalMMP g
,MMg h
$str	MMi 
)
MM 
;
MM 
GuardNN 
.NN 
ForNegativeNN !
(NN! "#
ConsecutiveFailureTotalNN" 9
,NN9 :
$strNN; T
)NNT U
;NNU V
}OO 
	Level02IdUU 
=UU 
GuardUU 
.UU 
ConverteValorUU +
<UU+ ,
intUU, /
>UU/ 0
(UU0 1
nextRootUU1 9
.UU9 :
	level02idUU: C
,UUC D
$strUUE X
)UUX Y
;UUY Z
GuardVV 
.VV 

ForValidFkVV 
(VV 
	Level02IdVV &
,VV& '
$strVV( B
)VVB C
;VVC D
UnitIdXX 
=XX 
unitIdXX 
;XX 
GuardYY 
.YY 

ForValidFkYY 
(YY 
UnitIdYY #
,YY# $
$strYY% <
)YY< =
;YY= >
Period[[ 
=[[ 
Guard[[ 
.[[ 
ConverteValor[[ (
<[[( )
int[[) ,
>[[, -
([[- .
nextRoot[[. 6
.[[6 7
period[[7 =
,[[= >
$str[[? O
)[[O P
;[[P Q
Guard\\ 
.\\ 
ForNegative\\ 
(\\ 
Period\\ $
,\\$ %
$str\\& .
)\\. /
;\\/ 0
if^^ 
(^^ 
nextRoot^^ 
.^^ 
phase^^ 
.^^ 
	IsNotNull^^ (
(^^( )
)^^) *
)^^* +
{__ 
Phase`` 
=`` 
Guard`` 
.`` 
ConverteValor`` +
<``+ ,
int``, /
>``/ 0
(``0 1
nextRoot``1 9
.``9 :
phase``: ?
,``? @
$str``A P
)``P Q
;``Q R
Guardaa 
.aa 
ForNegativeaa !
(aa! "
Phaseaa" '
,aa' (
$straa) 7
)aa7 8
;aa8 9
}bb 
	ReauditIsdd 
=dd 
Guarddd 
.dd 
ConverteValordd +
<dd+ ,
booldd, 0
>dd0 1
(dd1 2
nextRootdd2 :
.dd: ;
reauditdd; B
,ddB C
$strddD U
)ddU V
;ddV W
Guardee 
.ee 
VerifyIfIsBoolee  
(ee  !
	ReauditIsee! *
,ee* +
$stree, 7
)ee7 8
;ee8 9
ReauditNumbergg 
=gg 
Guardgg !
.gg! "
ConverteValorgg" /
<gg/ 0
intgg0 3
>gg3 4
(gg4 5
nextRootgg5 =
.gg= >
reauditnumbergg> K
,ggK L
$strggM d
)ggd e
;gge f
Guardhh 
.hh 
ForNegativehh 
(hh 
ReauditNumberhh +
,hh+ ,
$strhh- <
)hh< =
;hh= >
ifii 
(ii 
nextRootii 
.ii 
notavaliableii %
.ii% &
	IsNotNullii& /
(ii/ 0
)ii0 1
)ii1 2
NotEvaluatedIsjj 
=jj  
Guardjj! &
.jj& '
ConverteValorjj' 4
<jj4 5
booljj5 9
>jj9 :
(jj: ;
nextRootjj; C
.jjC D
notavaliablejjD P
,jjP Q
$strjjR h
)jjh i
;jji j
Guardkk 
.kk 
VerifyIfIsBoolkk  
(kk  !
NotEvaluatedIskk! /
,kk/ 0
$strkk1 A
)kkA B
;kkB C
ifnn 
(nn 
nextRootnn 
.nn 
samplenn 
!=nn  "
nullnn# '
)nn' (
Sampleoo 
=oo 
Guardoo 
.oo 
ConverteValoroo ,
<oo, -
intoo- 0
>oo0 1
(oo1 2
nextRootoo2 :
.oo: ;
sampleoo; A
,ooA B
$strooC S
)ooS T
;ooT U
elsepp 
Sampleqq 
=qq 
$numqq 
;qq 
Guardrr 
.rr 
ForNegativerr 
(rr 
Samplerr $
,rr$ %
$strrr& .
)rr. /
;rr/ 0
Shifttt 
=tt 
Guardtt 
.tt 
ConverteValortt '
<tt' (
inttt( +
>tt+ ,
(tt, -
nextRoottt- 5
.tt5 6
shifttt6 ;
,tt; <
$strtt= L
)ttL M
;ttM N
Guarduu 
.uu 
ForNegativeuu 
(uu 
Shiftuu #
,uu# $
$struu% ,
)uu, -
;uu- .
ifww 
(ww 
Phaseww 
>ww 
$numww 
)ww 
{xx 
varyy  
partePrincipalDaDatayy (
=yy) *
nextRootyy+ 3
.yy3 4
startphasedateyy4 B
.yyB C
SplityyC H
(yyH I
$charyyI L
)yyL M
[yyM N
$numyyN O
]yyO P
+yyQ R
$stryyS V
+yyW X
nextRootyyY a
.yya b
startphasedateyyb p
.yyp q
Splityyq v
(yyv w
$charyyw z
)yyz {
[yy{ |
$numyy| }
]yy} ~
;yy~ 
StartPhaseDatezz 
=zz  
DateTimezz! )
.zz) *

ParseExactzz* 4
(zz4 5 
partePrincipalDaDatazz5 I
,zzI J
$strzzK ]
,zz] ^
CultureInfozz_ j
.zzj k
InvariantCulturezzk {
)zz{ |
;zz| }
}{{ 
if 
( 
nextRoot 
. 
idcorrectiveaction +
!=, .
null/ 3
)3 4 
CorrectiveActionId
 "
=
# $
Guard
% *
.
* +
ConverteValor
+ 8
<
8 9
int
9 <
>
< =
(
= >
nextRoot
> F
.
F G 
idcorrectiveaction
G Y
,
Y Z
$str
[ w
)
w x
;
x y
if
 
(
 
nextRoot
 
.
 
nextnextRoot
 %
==
& (
null
) -
)
- .
throw
 
new
 
ExceptionHelper
 )
(
) *
$str
* P
)
P Q
;
Q R
if
 
(
 
nextRoot
 
.
 
nextnextRoot
 %
.
% &
Count
& +
==
, .
$num
/ 0
)
0 1
throw
 
new
 
ExceptionHelper
 )
(
) *
$str
* P
)
P Q
;
Q R"
collectionLevel03DTO
  
=
! "
new
# &
List
' +
<
+ ,"
CollectionLevel03DTO
, @
>
@ A
(
A B
)
B C
;
C D
foreach
 
(
 
var
 
x
 
in
 
nextRoot
 &
.
& '
nextnextRoot
' 3
)
3 4"
collectionLevel03DTO
 $
.
$ %
Add
% (
(
( )
new
) ,"
CollectionLevel03DTO
- A
(
A B
x
B C
,
C D
	Level01Id
E N
,
N O
	Level02Id
P Y
)
Y Z
)
Z [
;
[ \
	AuditorId
 
=
 
Guard
 
.
 
ConverteValor
 +
<
+ ,
int
, /
>
/ 0
(
0 1
nextRoot
1 9
.
9 :
	auditorid
: C
,
C D
$str
E X
)
X Y
;
Y Z
if
 
(
 
nextRoot
 
.
 
datetime
 !
!=
" $
null
% )
)
) *
{
 
var
 
dataCorrigida
 !
=
" #
nextRoot
$ ,
.
, -
datetime
- 5
.
5 6
Split
6 ;
(
; <
$char
< ?
)
? @
;
@ A
CollectionDate
 
=
  
DateTime
! )
.
) *

ParseExact
* 4
(
4 5
nextRoot
5 =
.
= >
datetime
> F
.
F G
Split
G L
(
L M
$char
M P
)
P Q
[
Q R
$num
R S
]
S T
+
U V
$str
W Z
+
[ \
nextRoot
] e
.
e f
datetime
f n
.
n o
Split
o t
(
t u
$char
u x
)
x y
[
y z
$num
z {
]
{ |
,
| }
$str~ 
, 
CultureInfo 
.  
InvariantCulture ®
)® ¯
;¯ °
CollectionDate
 
=
  
CollectionDate
! /
.
/ 0

AddSeconds
0 :
(
: ;
Guard
; @
.
@ A
ConverteValor
A N
<
N O
int
O R
>
R S
(
S T
nextRoot
T \
.
\ ]
datetime
] e
.
e f
Split
f k
(
k l
$char
l o
)
o p
[
p q
$num
q r
]
r s
,
s t
$stru 
) 
) 
. 
AddMilliseconds 
( 
Guard 
. 
ConverteValor «
<« ¬
int¬ ¯
>¯ °
(° ±
nextRoot± ¹
.¹ º
datetimeº Â
.Â Ã
SplitÃ È
(È É
$charÉ Ì
)Ì Í
[Í Î
$numÎ Ï
]Ï Ð
,Ð Ñ
$strÒ â
)â ã
)ã ä
;ä å
}
 
if
 
(
 
nextRoot
 
.
 
evaluate
 !
!=
" $
null
% )
)
) *
EvaluationNumber
  
=
! "
Guard
# (
.
( )
ConverteValor
) 6
<
6 7
int
7 :
>
: ;
(
; <
nextRoot
< D
.
D E
evaluate
E M
,
M N
$str
O a
)
a b
;
b c
else
 
EvaluationNumber
  
=
! "
$num
# $
;
$ %
}
   	
public
¢¢ 
int
¢¢ $
ConsolidationLevel02Id
¢¢ )
{
¢¢* +
get
¢¢, /
;
¢¢/ 0
set
¢¢1 4
;
¢¢4 5
}
¢¢6 7
public
££ 
int
££ 
	Level01Id
££ 
{
££ 
get
££ "
;
££" #
set
££$ '
;
££' (
}
££) *
public
¤¤ 
int
¤¤ 
	Level02Id
¤¤ 
{
¤¤ 
get
¤¤ "
;
¤¤" #
set
¤¤$ '
;
¤¤' (
}
¤¤) *
public
¥¥ 
int
¥¥ 
UnitId
¥¥ 
{
¥¥ 
get
¥¥ 
;
¥¥  
set
¥¥! $
;
¥¥$ %
}
¥¥& '
public
¦¦ 
int
¦¦ 
	AuditorId
¦¦ 
{
¦¦ 
get
¦¦ "
;
¦¦" #
set
¦¦$ '
;
¦¦' (
}
¦¦) *
public
§§ 
int
§§ 
Shift
§§ 
{
§§ 
get
§§ 
;
§§ 
set
§§  #
;
§§# $
}
§§% &
public
¨¨ 
int
¨¨ 
Period
¨¨ 
{
¨¨ 
get
¨¨ 
;
¨¨  
set
¨¨! $
;
¨¨$ %
}
¨¨& '
public
©© 
int
©© 
Phase
©© 
{
©© 
get
©© 
;
©© 
set
©©  #
;
©©# $
}
©©% &
public
ªª 
bool
ªª 
	ReauditIs
ªª 
{
ªª 
get
ªª  #
;
ªª# $
set
ªª% (
;
ªª( )
}
ªª* +
public
«« 
int
«« 
ReauditNumber
««  
{
««! "
get
««# &
;
««& '
set
««( +
;
««+ ,
}
««- .
public
¬¬ 
System
¬¬ 
.
¬¬ 
DateTime
¬¬ 
CollectionDate
¬¬ -
{
¬¬. /
get
¬¬0 3
;
¬¬3 4
set
¬¬5 8
;
¬¬8 9
}
¬¬: ;
public
­­ 
System
­­ 
.
­­ 
DateTime
­­ 
StartPhaseDate
­­ -
{
­­. /
get
­­0 3
;
­­3 4
set
­­5 8
;
­­8 9
}
­­: ;
public
®® 
Nullable
®® 
<
®® 
int
®® 
>
®® 
EvaluationNumber
®® -
{
®®. /
get
®®0 3
;
®®3 4
set
®®5 8
;
®®8 9
}
®®: ;
public
¯¯ 
int
¯¯ 
Sample
¯¯ 
{
¯¯ 
get
¯¯ 
;
¯¯  
set
¯¯! $
;
¯¯$ %
}
¯¯& '
public
°° 
int
°° 
CattleTypeId
°° 
{
°°  !
get
°°" %
;
°°% &
set
°°' *
;
°°* +
}
°°, -
public
±± 
decimal
±± 

Chainspeed
±± !
{
±±" #
get
±±$ '
;
±±' (
set
±±) ,
;
±±, -
}
±±. /
public
²² 
bool
²² "
ConsecutiveFailureIs
²² (
{
²²) *
get
²²+ .
;
²². /
set
²²0 3
;
²²3 4
}
²²5 6
public
³³ 
int
³³ %
ConsecutiveFailureTotal
³³ *
{
³³+ ,
get
³³- 0
;
³³0 1
set
³³2 5
;
³³5 6
}
³³7 8
public
´´ 
int
´´ 
biasedunbiased
´´ !
{
´´" #
get
´´$ '
;
´´' (
set
´´) ,
;
´´, -
}
´´. /
public
µµ 
decimal
µµ 
	LotNumber
µµ  
{
µµ! "
get
µµ# &
;
µµ& '
set
µµ( +
;
µµ+ ,
}
µµ- .
public
¶¶ 
decimal
¶¶ 
Mudscore
¶¶ 
{
¶¶  !
get
¶¶" %
;
¶¶% &
set
¶¶' *
;
¶¶* +
}
¶¶, -
public
·· 
bool
·· 
NotEvaluatedIs
·· "
{
··# $
get
··% (
;
··( )
set
··* -
;
··- .
}
··/ 0
public
¸¸ 
bool
¸¸ 

Duplicated
¸¸ 
{
¸¸  
get
¸¸! $
;
¸¸$ %
set
¸¸& )
;
¸¸) *
}
¸¸+ ,
public
¹¹ 

Level01DTO
¹¹ 
Level01
¹¹ !
{
¹¹" #
get
¹¹$ '
;
¹¹' (
set
¹¹) ,
;
¹¹, -
}
¹¹. /
public
ºº 

Level02DTO
ºº 
Level02
ºº !
{
ºº" #
get
ºº$ '
;
ºº' (
set
ºº) ,
;
ºº, -
}
ºº. /
public
»» 
UserDTO
»» 
UserSgq
»» 
{
»»  
get
»»! $
;
»»$ %
set
»»& )
;
»») *
}
»»+ ,
public
¼¼ 
List
¼¼ 
<
¼¼ "
CollectionLevel03DTO
¼¼ (
>
¼¼( )
CollectionLevel03
¼¼* ;
{
¼¼< =
get
¼¼> A
;
¼¼A B
set
¼¼C F
;
¼¼F G
}
¼¼H I
public
½½ 
List
½½ 
<
½½ !
CorrectiveActionDTO
½½ '
>
½½' (
CorrectiveAction
½½) 9
{
½½: ;
get
½½< ?
;
½½? @
set
½½A D
;
½½D E
}
½½F G
public
ÁÁ 
int
ÁÁ  
CorrectiveActionId
ÁÁ %
{
ÁÁ& '
get
ÁÁ( +
;
ÁÁ+ ,
set
ÁÁ- 0
;
ÁÁ0 1
}
ÁÁ2 3
public
ÔÔ 
string
ÔÔ 
Name
ÔÔ 
{
ÔÔ 
get
ÔÔ  
;
ÔÔ  !
set
ÔÔ" %
;
ÔÔ% &
}
ÔÔ' (
public
ØØ 
List
ØØ 
<
ØØ "
CollectionLevel03DTO
ØØ (
>
ØØ( )"
collectionLevel03DTO
ØØ* >
{
ØØ? @
get
ØØA D
;
ØØD E
set
ØØF I
;
ØØI J
}
ØØK L
public
ÙÙ %
ConsolidationLevel01DTO
ÙÙ &%
consolidationLevel01DTO
ÙÙ' >
{
ÙÙ? @
get
ÙÙA D
;
ÙÙD E
set
ÙÙF I
;
ÙÙI J
}
ÙÙK L
public
ÚÚ 
bool
ÚÚ 
Remove
ÚÚ 
{
ÚÚ 
get
ÚÚ  
;
ÚÚ  !
set
ÚÚ" %
;
ÚÚ% &
}
ÚÚ' (
public
ÛÛ !
CorrectiveActionDTO
ÛÛ "#
CorrectiveActionSaved
ÛÛ# 8
{
ÛÛ9 :
get
ÛÛ; >
;
ÛÛ> ?
set
ÛÛ@ C
;
ÛÛC D
}
ÛÛE F
public
ÜÜ 
bool
ÜÜ 
HasDuplicated
ÜÜ !
{
ÜÜ" #
get
ÜÜ$ '
;
ÜÜ' (
set
ÜÜ) ,
;
ÜÜ, -
}
ÜÜ. /
}
ÝÝ 
}ÞÞ æ&
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\CollectionLevel03DTO.cs
	namespace		 	
DTO		
 
.		 
DTO		 
{

 
public 

class  
CollectionLevel03DTO %
:& '

EntityBase( 2
{ 
public  
CollectionLevel03DTO #
(# $
)$ %
{& '
}( )
public  
CollectionLevel03DTO #
(# $
NextnextRoot$ 0
nextnextRoot1 =
,= >
int? B
	level02IdC L
,L M
intN Q
	level01IdR [
)[ \
{ 	
if 
( 
nextnextRoot 
. 
id 
!=  "
null# '
)' (
if 
( 
nextnextRoot  
.  !
id! #
.# $
Length$ *
>+ ,
$num- .
). /
Id 
= 
Guard 
. 
ConverteValor ,
<, -
int- 0
>0 1
(1 2
nextnextRoot2 >
.> ?
id? A
,A B
$strC O
)O P
;P Q
ValidaBaseEntity 
( 
) 
; 
if 
( 
	level01Id 
== 
$num 
) 
{ 
} 
if"" 
("" 
	level01Id"" 
=="" 
$num"" 
)"" 
{## 
}$$ 
if** 
(** 
	level01Id** 
==** 
$num** 
)** 
{++ 
},, 
	Level03Id22 
=22 
Guard22 
.22 
ConverteValor22 +
<22+ ,
int22, /
>22/ 0
(220 1
nextnextRoot221 =
.22= >
	level03id22> G
,22G H
$str22I \
)22\ ]
;22] ^
Guard33 
.33 

ForValidFk33 
(33 
	Level03Id33 &
.33& '
Value33' ,
,33, -
$str33. I
)33I J
;33J K
ConformedIs88 
=88 
Guard88 
.88  
ConverteValor88  -
<88- .
bool88. 2
>882 3
(883 4
nextnextRoot884 @
.88@ A
conform88A H
,88H I
$str88J [
)88[ \
;88\ ]
Guard99 
.99 
VerifyIfIsBool99  
(99  !
ConformedIs99! ,
,99, -
$str99. ;
)99; <
;99< =
if;; 
(;; 
nextnextRoot;; 
.;; 
value;; "
!=;;# %
null;;& *
);;* +
Value<< 
=<< 
Guard<< 
.<< 
ConverteValor<< +
<<<+ ,
decimal<<, 3
><<3 4
(<<4 5
nextnextRoot<<5 A
.<<A B
value<<B G
,<<G H
$str<<I X
)<<X Y
;<<Y Z
Guard== 
.== 
ForNegative== 
(== 
Value== #
,==# $
$str==% 4
)==4 5
;==5 6
	ValueText?? 
=?? 
$str?? 
;?? 
if@@ 
(@@ 
nextnextRoot@@ 
.@@ 
	valueText@@ &
!=@@' )
null@@* .
)@@. /
	ValueTextAA 
=AA 
nextnextRootAA (
.AA( )
	valueTextAA) 2
;AA2 3
}EE 	
publicGG 
stringGG 
NameGG 
{GG 
getGG  
;GG  !
setGG" %
;GG% &
}GG' (
publicHH 
intHH 
CollectionLevel02IdHH &
{HH' (
getHH) ,
;HH, -
setHH. 1
;HH1 2
}HH3 4
publicII 
NullableII 
<II 
intII 
>II 
	Level03IdII &
{II' (
getII) ,
;II, -
setII. 1
;II1 2
}II3 4
publicJJ 
boolJJ 
ConformedIsJJ 
{JJ  !
getJJ" %
;JJ% &
setJJ' *
;JJ* +
}JJ, -
publicKK 
decimalKK 
ValueKK 
{KK 
getKK "
;KK" #
setKK$ '
;KK' (
}KK) *
publicLL 
stringLL 
	ValueTextLL 
{LL  !
getLL" %
;LL% &
setLL' *
;LL* +
}LL, -
publicMM 
NullableMM 
<MM 
boolMM 
>MM 

DuplicatedMM (
{MM) *
getMM+ .
;MM. /
setMM0 3
;MM3 4
}MM5 6
publicNN 

Level03DTONN 
Level03NN !
{NN" #
getNN$ '
;NN' (
setNN) ,
;NN, -
}NN. /
}PP 
}QQ A
OC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ConsolidationLevel01DTO.cs
	namespace 	
DTO
 
. 
DTO 
{		 
public

 

class

 #
ConsolidationLevel01DTO

 (
:

) *

EntityBase

+ 5
{ 
public #
ConsolidationLevel01DTO &
(& '
)' (
{) *
}+ ,
public 
DateTime 
ConsolidationDate )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
int 
UnitId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
DepartmentId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
	Level01Id 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DepartmentDTO 

Department '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 

Level01DTO 
Level01 !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
UnitDTO 
Unit 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< #
ConsolidationLevel02DTO +
>+ , 
ConsolidationLevel02- A
{B C
getD G
;G H
setI L
;L M
}N O
public   
List   
<   #
ConsolidationLevel02DTO   +
>  + ,#
consolidationLevel02DTO  - D
{  E F
get  G J
;  J K
set  L O
;  O P
}  Q R
public!! 
List!! 
<!!  
CollectionLevel02DTO!! (
>!!( ) 
collectionLevel02DTO!!* >
{!!? @
get!!A D
;!!D E
set!!F I
;!!I J
}!!K L
public$$ #
ConsolidationLevel01DTO$$ &
($$& '

RootObject$$' 1

rootObject$$2 <
)$$< =
{%% 	
ValidaBaseEntity'' 
('' 
)'' 
;'' 
if++ 
(++ 

rootObject++ 
.++ 
nextRoot++ #
[++# $
$num++$ %
]++% &
.++& '
datetime++' /
!=++0 2
null++3 7
)++7 8
{,, 
var-- 
dataCorrigida-- !
=--" #

rootObject--$ .
.--. /
nextRoot--/ 7
[--7 8
$num--8 9
]--9 :
.--: ;
datetime--; C
.--C D
Split--D I
(--I J
$char--J M
)--M N
;--N O
ConsolidationDate.. !
=.." #
DateTime..$ ,
..., -

ParseExact..- 7
(..7 8

rootObject..8 B
...B C
nextRoot..C K
[..K L
$num..L M
]..M N
...N O
datetime..O W
...W X
Split..X ]
(..] ^
$char..^ a
)..a b
[..b c
$num..c d
]..d e
+..f g
$str..h k
+..l m

rootObject..n x
...x y
nextRoot	..y 
[
.. 
$num
.. 
]
.. 
.
.. 
datetime
.. 
.
.. 
Split
.. 
(
.. 
$char
.. 
)
.. 
[
.. 
$num
.. 
]
.. 
,
.. 
$str
.. ¯
,
..¯ °
CultureInfo
..± ¼
.
..¼ ½
InvariantCulture
..½ Í
)
..Í Î
;
..Î Ï
ConsolidationDate// !
=//" #
ConsolidationDate//$ 5
.//5 6

AddSeconds//6 @
(//@ A
Guard//A F
.//F G
ConverteValor//G T
<//T U
int//U X
>//X Y
(//Y Z

rootObject//Z d
.//d e
nextRoot//e m
[//m n
$num//n o
]//o p
.//p q
datetime//q y
.//y z
Split//z 
(	// 
$char
// 
)
// 
[
// 
$num
// 
]
// 
,
// 
$str
// 
)
// 
)
// 
.
// 
AddMilliseconds
// «
(
//« ¬
Guard
//¬ ±
.
//± ²
ConverteValor
//² ¿
<
//¿ À
int
//À Ã
>
//Ã Ä
(
//Ä Å

rootObject
//Å Ï
.
//Ï Ð
nextRoot
//Ð Ø
[
//Ø Ù
$num
//Ù Ú
]
//Ú Û
.
//Û Ü
datetime
//Ü ä
.
//ä å
Split
//å ê
(
//ê ë
$char
//ë î
)
//î ï
[
//ï ð
$num
//ð ñ
]
//ñ ò
,
//ò ó
$str
//ô 
)
// 
)
// 
;
// 
}00 
DepartmentId44 
=44 
$num44 
;44 
Guard55 
.55 

ForValidFk55 
(55 
DepartmentId55 )
,55) *
$str55+ _
)55_ `
;55` a
UnitId99 
=99 
Guard99 
.99 
ConverteValor99 (
<99( )
int99) ,
>99, -
(99- .

rootObject99. 8
.998 9
	unidadeid999 B
,99B C
$str99D W
)99W X
;99X Y
Guard:: 
.:: 

ForValidFk:: 
(:: 
UnitId:: #
,::# $
$str::% Y
)::Y Z
;::Z [
	Level01Id?? 
=?? 
Guard?? 
.?? 
ConverteValor?? +
<??+ ,
int??, /
>??/ 0
(??0 1

rootObject??1 ;
.??; <
	level01id??< E
,??E F
$str??G Z
)??Z [
;??[ \
Guard@@ 
.@@ 

ForValidFk@@ 
(@@ 
	Level01Id@@ &
,@@& '
$str@@( _
)@@_ `
;@@` a 
collectionLevel02DTODD  
=DD! "
newDD# &
ListDD' +
<DD+ , 
CollectionLevel02DTODD, @
>DD@ A
(DDA B
)DDB C
;DDC D#
consolidationLevel02DTOEE #
=EE$ %
newEE& )
ListEE* .
<EE. /#
ConsolidationLevel02DTOEE/ F
>EEF G
(EEG H
)EEH I
;EEI J
ifII 
(II 

rootObjectII 
.II 
nextRootII #
==II$ &
nullII' +
)II+ ,
throwJJ 
newJJ 
ExceptionHelperJJ )
(JJ) *
$strJJ* P
)JJP Q
;JJQ R
ifLL 
(LL 

rootObjectLL 
.LL 
nextRootLL #
.LL# $
CountLL$ )
==LL* ,
$numLL- .
)LL. /
throwMM 
newMM 
ExceptionHelperMM )
(MM) *
$strMM* P
)MMP Q
;MMQ R
foreachOO 
(OO 
varOO 
iOO 
inOO 

rootObjectOO (
.OO( )
nextRootOO) 1
)OO1 2 
collectionLevel02DTOPP $
.PP$ %
AddPP% (
(PP( )
newPP) , 
CollectionLevel02DTOPP- A
(PPA B
iPPB C
,PPC D
UnitIdPPE K
,PPK L

rootObjectPPM W
.PPW X
biasedunbiasedPPX f
)PPf g
)PPg h
;PPh i
varVV 
idsVV 
=VV  
collectionLevel02DTOVV *
.VV* +
SelectVV+ 1
(VV1 2
rVV2 3
=>VV4 6
rVV7 8
.VV8 9
	Level02IdVV9 B
)VVB C
.VVC D
DistinctVVD L
(VVL M
)VVM N
.VVN O
ToListVVO U
(VVU V
)VVV W
;VVW X#
consolidationLevel02DTOWW #
.WW# $
AddWW$ '
(WW' (
newWW( +#
ConsolidationLevel02DTOWW, C
(WWC D 
collectionLevel02DTOWWD X
)WWX Y
)WWY Z
;WWZ [
}[[ 	
}^^ 
}__ Ø
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\CorrectiveActionLevelsDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
[ 
DataContract 
] 
[ 
Serializable 
] 
public		 

class		 %
CorrectiveActionLevelsDTO		 *
:		+ ,

EntityBase		- 7
{

 
[ 	

DataMember	 
] 
public 
int 
CorrectiveActionId %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 	

DataMember	 
] 
public 
int 
	Level01Id 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	

DataMember	 
] 
public 
int 
	Level02Id 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	

DataMember	 
] 
public 
int 
	Level03Id 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	

DataMember	 
] 
public 
Nullable 
< 
int 
> 
Defects $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
void (
ValidaCorrectiveActionLevels 0
(0 1
)1 2
{ 	
ValidaBaseEntity 
( 
) 
; 
} 	
} 
}   
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\CorrectiveActionDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public		 

class		 
CorrectiveActionDTO		 $
:		% &

EntityBase		' 1
{

 
public 
int 
idcorrectiveaction %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 

PeriodName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
	ShiftName 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
AuditorName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
level02Name !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
level03Name !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
level01Name !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
	Level01Id 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
	Level02Id 
{ 
get "
;" #
set$ '
;' (
}) *
public 
UnitDTO 
Unit 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	AuditorId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
CollectionLevel02Id &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
Nullable 
< 
int 
> 
SlaughterId (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
Nullable 
< 
int 
> 
TechinicalId )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
Nullable 
< 
System 
. 
DateTime '
>' (
DateTimeSlaughter) :
{; <
get= @
;@ A
setB E
;E F
}G H
public 
Nullable 
< 
System 
. 
DateTime '
>' (
DateTimeTechinical) ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
System 
. 
DateTime  
DateCorrectiveAction 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
System 
. 
DateTime 
AuditStartTime -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
string 
DescriptionFailure (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string %
ImmediateCorrectiveAction /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public   
string   
ProductDisposition   (
{  ) *
get  + .
;  . /
set  0 3
;  3 4
}  5 6
public!! 
string!! 
PreventativeMeasure!! )
{!!* +
get!!, /
;!!/ 0
set!!1 4
;!!4 5
}!!6 7
public## 
System## 
.## 
DateTime## 
DateExecute## *
{##+ ,
get##- 0
;##0 1
set##2 5
;##5 6
}##7 8
public$$ 
int$$ 
ShiftId$$ 
{$$ 
get$$  
;$$  !
set$$" %
;$$% &
}$$' (
public,, 
System,, 
.,, 
DateTime,, 
	StartTime,, (
{,,) *
get,,+ .
;,,. /
set,,0 3
;,,3 4
},,5 6
public-- 
int-- 
PeriodId-- 
{-- 
get-- !
;--! "
set--# &
;--& '
}--( )
public.. 
string.. 
NameTechinical.. $
{..% &
get..' *
;..* +
set.., /
;../ 0
}..1 2
public// 
string// 
NameSlaughter// #
{//$ %
get//& )
;//) *
set//+ .
;//. /
}//0 1
public00 
Nullable00 
<00 
int00 
>00 
AuditLevel01Id00 +
{00, -
get00. 1
;001 2
set003 6
;006 7
}008 9
public22 
List22 
<22 %
CorrectiveActionLevelsDTO22 -
>22- ."
CorrectiveActionLevels22/ E
{22F G
get22H K
;22K L
set22M P
;22P Q
}22R S
public>> 
string>> )
DateCorrectiveActionFormatado>> 3
{?? 	
get@@ 
{@@ 
return@@  
DateCorrectiveAction@@ -
.@@- .
ToString@@. 6
(@@6 7
$str@@7 L
)@@L M
;@@M N
}@@O P
setAA 
{BB  
DateCorrectiveActionDD $
=DD% &
ConvertDD' .
.DD. /

ToDateTimeDD/ 9
(DD9 :
valueDD: ?
.DD? @
ToStringDD@ H
(DDH I
)DDI J
,DDJ K
CultureInfoDDL W
.DDW X
InvariantCultureDDX h
)DDh i
;DDi j
}EE 
}FF 	
publicHH 
stringHH .
"DateCorrectiveActionFormatadoShortHH 8
{II 	
getJJ 
{JJ 
returnJJ  
DateCorrectiveActionJJ -
.JJ- .
ToStringJJ. 6
(JJ6 7
$strJJ7 C
)JJC D
;JJD E
}JJF G
setKK 
{LL  
DateCorrectiveActionNN $
=NN% &
ConvertNN' .
.NN. /

ToDateTimeNN/ 9
(NN9 :
valueNN: ?
.NN? @
ToStringNN@ H
(NNH I
)NNI J
,NNJ K
CultureInfoNNL W
.NNW X
InvariantCultureNNX h
)NNh i
;NNi j
}OO 
}PP 	
publicRR 
stringRR 
StartTimeFormatadoRR (
{SS 	
getTT 
{TT 
returnTT 
AuditStartTimeTT '
.TT' (
ToStringTT( 0
(TT0 1
$strTT1 F
)TTF G
;TTG H
}TTI J
setUU 
{VV 
AuditStartTimeXX 
=XX  
ConvertXX! (
.XX( )

ToDateTimeXX) 3
(XX3 4
valueXX4 9
.XX9 :
ToStringXX: B
(XXB C
)XXC D
,XXD E
CultureInfoXXF Q
.XXQ R
InvariantCultureXXR b
)XXb c
;XXc d
}YY 
}ZZ 	
public\\ 
string\\ &
DateTimeSlaughterFarmatado\\ 0
{]] 	
get^^ 
{^^ 
return^^ 
DateTimeSlaughter^^ *
!=^^+ -
null^^. 2
?^^3 4
DateTimeSlaughter^^5 F
.^^F G
Value^^G L
.^^L M
ToString^^M U
(^^U V
$str^^V k
)^^k l
:^^m n
string^^o u
.^^u v
Empty^^v {
;^^{ |
}^^} ~
set__ 
{`` 
ifaa 
(aa 
!aa 
stringaa 
.aa 
IsNullOrEmptyaa )
(aa) *
valueaa* /
)aa/ 0
)aa0 1
{bb 
DateTimeSlaughterdd %
=dd& '
Convertdd( /
.dd/ 0

ToDateTimedd0 :
(dd: ;
valuedd; @
.dd@ A
ToStringddA I
(ddI J
)ddJ K
,ddK L
CultureInfoddM X
.ddX Y
InvariantCultureddY i
)ddi j
;ddj k
}ee 
}ff 
}gg 	
publicii 
stringii '
DateTimeTechinicalFarmatadoii 1
{jj 	
getkk 
{kk 
returnkk 
DateTimeTechinicalkk +
!=kk, .
nullkk/ 3
?kk4 5
DateTimeTechinicalkk6 H
.kkH I
ValuekkI N
.kkN O
ToStringkkO W
(kkW X
$strkkX m
)kkm n
:kko p
stringkkq w
.kkw x
Emptykkx }
;kk} ~
}	kk 
setll 
{mm 
ifnn 
(nn 
!nn 
stringnn 
.nn 
IsNullOrEmptynn )
(nn) *
valuenn* /
)nn/ 0
)nn0 1
{oo 
DateTimeTechinicalqq &
=qq' (
Convertqq) 0
.qq0 1

ToDateTimeqq1 ;
(qq; <
valueqq< A
.qqA B
ToStringqqB J
(qqJ K
)qqK L
,qqL M
CultureInfoqqN Y
.qqY Z
InvariantCultureqqZ j
)qqj k
;qqk l
}rr 
}ss 
}tt 	
publicvv 
stringvv  
NameSlaugtherAndDatevv *
{ww 	
getxx 
{xx 
returnxx 
NameSlaughterxx &
!=xx' )
nullxx* .
?xx/ 0
NameSlaughterxx1 >
+xx? @
$strxxA E
+xxF G
DateTimeSlaughterxxH Y
.xxY Z
ValuexxZ _
.xx_ `
ToStringxx` h
(xxh i
$strxxi ~
)xx~ 
+
xx 
$str
xx 
:
xx 
string
xx 
.
xx 
Empty
xx 
;
xx 
}
xx 
}yy 	
public{{ 
string{{ !
NameTechinicalAndDate{{ +
{|| 	
get}} 
{}} 
return}} 
NameTechinical}} '
!=}}( *
null}}+ /
?}}0 1
NameTechinical}}2 @
+}}A B
$str}}C G
+}}H I
DateTimeTechinical}}J \
.}}\ ]
Value}}] b
.}}b c
ToString}}c k
(}}k l
$str	}}l 
)
}} 
+
}} 
$str
}} 
:
}} 
string
}} 
.
}} 
Empty
}} 
;
}} 
}
}} 
}~~ 	
public
 
void
 +
ValidaDataCorrectiveActionDTO
 1
(
1 2
)
2 3
{
 	
ValidaBaseEntity
 
(
 
)
 
;
 
}
¾¾ 	
public
ÁÁ 
string
ÁÁ 
SendMeByMail
ÁÁ "
{
ÂÂ 	
get
ÃÃ 
{
ÄÄ 
if
ÆÆ 
(
ÆÆ 
Id
ÆÆ 
<=
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
return
ÇÇ 
string
ÇÇ !
.
ÇÇ! "
Empty
ÇÇ" '
;
ÇÇ' (
if
ÉÉ 
(
ÉÉ 
Unit
ÉÉ 
==
ÉÉ 
null
ÉÉ  
)
ÉÉ  !
return
ÊÊ 
string
ÊÊ !
.
ÊÊ! "
Empty
ÊÊ" '
;
ÊÊ' (
var
ÍÍ 
body
ÍÍ 
=
ÍÍ 
$str
ÍÍ ]
;
ÍÍ] ^
if
ÎÎ 
(
ÎÎ 
GlobalConfig
ÎÎ  
.
ÎÎ  !
Eua
ÎÎ! $
)
ÎÎ$ %
body
ÏÏ 
+=
ÏÏ 
$str
ÏÏ O
+
ÏÏP Q
Unit
ÏÏR V
.
ÏÏV W
Name
ÏÏW [
+
ÏÏ\ ]
$strÏÏ^ 
+ÏÏ 
UnitÏÏ 
.ÏÏ 
CodeÏÏ 
+ÏÏ 
$strÏÏ ¤
;ÏÏ¤ ¥
if
ÐÐ 
(
ÐÐ 
GlobalConfig
ÐÐ  
.
ÐÐ  !
Brasil
ÐÐ! '
)
ÐÐ' (
body
ÑÑ 
+=
ÑÑ 
$str
ÑÑ O
+
ÑÑP Q
Unit
ÑÑR V
.
ÑÑV W
Name
ÑÑW [
+
ÑÑ\ ]
$str
ÑÑ^ z
+
ÑÑ{ |
UnitÑÑ} 
.ÑÑ 
CodeÑÑ 
+ÑÑ 
$strÑÑ 
;ÑÑ 
body
ÓÓ 
+=
ÓÓ 
$str
ÓÓ #
+
ÓÓ$ %
	Resources
ÓÓ& /
.
ÓÓ/ 0
Resource
ÓÓ0 8
.
ÓÓ8 9%
safe_program_audit_form
ÓÓ9 P
+
ÓÓQ R
$str
ÓÓS [
+
ÓÓ\ ]
$str
ÔÔ 
+
ÔÔ 
	Resources
ÔÔ '
.
ÔÔ' (
Resource
ÔÔ( 0
.
ÔÔ0 1
corrective_action
ÔÔ1 B
+
ÔÔC D
$str
ÔÔE M
+
ÔÔN O
$str
ÕÕ 
+
ÕÕ 
$str
ÖÖ n
+
ÖÖo p
$str
×× '
+
××( )
$str
ØØ K
+
ØØL M
$str
ÙÙ 0
+
ÙÙ1 2
	Resources
ÙÙ3 <
.
ÙÙ< =
Resource
ÙÙ= E
.
ÙÙE F%
corrective_action_taken
ÙÙF ]
+
ÙÙ^ _
$str
ÙÙ` k
+
ÙÙl m
$str
ÚÚ !
+
ÚÚ" #
	Resources
ÚÚ$ -
.
ÚÚ- .
Resource
ÚÚ. 6
.
ÚÚ6 7
	date_time
ÚÚ7 @
+
ÚÚA B
$str
ÚÚC _
+
ÚÚ` a+
DateCorrectiveActionFormatado
ÚÚb 
+ÚÚ 
$strÚÚ 
+ÚÚ 
$str
ÛÛ !
+
ÛÛ" #
	Resources
ÛÛ$ -
.
ÛÛ- .
Resource
ÛÛ. 6
.
ÛÛ6 7
auditor
ÛÛ7 >
+
ÛÛ? @
$str
ÛÛA \
+
ÛÛ] ^
AuditorName
ÛÛ_ j
+
ÛÛk l
$str
ÛÛm z
+
ÛÛ{ |
$str
ÜÜ !
+
ÜÜ" #
	Resources
ÜÜ$ -
.
ÜÜ- .
Resource
ÜÜ. 6
.
ÜÜ6 7
shift
ÜÜ7 <
+
ÜÜ= >
$str
ÜÜ? X
+
ÜÜY Z
	ShiftName
ÜÜ[ d
+
ÜÜe f
$str
ÜÜg t
+
ÜÜu v
$str
ÝÝ  
+
ÝÝ! "
$str
ÞÞ F
+
ÞÞG H
$str
ßß 0
+
ßß1 2
	Resources
ßß3 <
.
ßß< =
Resource
ßß= E
.
ßßE F
audit_information
ßßF W
+
ßßX Y
$str
ßßZ e
+
ßßf g
$str
àà !
+
àà" #
	Resources
àà$ -
.
àà- .
Resource
àà. 6
.
àà6 7
audit
àà7 <
+
àà= >
$str
àà? \
+
àà] ^
level01Name
àà_ j
+
ààk l
$str
ààm z
+
àà{ |
$str
áá !
+
áá" #
	Resources
áá$ -
.
áá- .
Resource
áá. 6
.
áá6 7

start_time
áá7 A
+
ááB C
$str
ááD a
+
ááb c 
StartTimeFormatado
áád v
+
ááw x
$strááy 
+áá 
$str
ââ !
+
ââ" #
	Resources
ââ$ -
.
ââ- .
Resource
ââ. 6
.
ââ6 7
period
ââ7 =
+
ââ> ?
$str
ââ@ d
+
ââe f

PeriodName
ââg q
+
ââr s
$str
âât }
+
ââ~ 
$str
ãã  
+
ãã! "
$str
ää 
+
ää 
$str
åå 
+
åå 
$str
ææ 
+
ææ 
$str
çç q
+
ççr s
$str
èè 3
+
èè4 5
	Resources
èè6 ?
.
èè? @
Resource
èè@ H
.
èèH I!
description_failure
èèI \
+
èè] ^
$str
èè_ f
+
èèg h
$str
éé 7
+
éé8 9
$str
êê 
+
êê  
DescriptionFailure
êê 0
+
êê1 2
$str
ëë  
+
ëë! "
$str
ìì 
+
ìì 
$str
íí r
+
íís t
$str
îî 3
+
îî4 5
	Resources
îî6 ?
.
îî? @
Resource
îî@ H
.
îîH I)
immediate_corrective_action
îîI d
+
îîe f
$str
îîg n
+
îîo p
$str
ïï >
+
ïï? @'
ImmediateCorrectiveAction
ïïA Z
+
ïï[ \
$str
ïï] e
+
ïïf g
$str
ðð 
+
ðð 
$str
ññ r
+
ññs t
$str
òò 3
+
òò4 5
	Resources
òò6 ?
.
òò? @
Resource
òò@ H
.
òòH I!
product_disposition
òòI \
+
òò] ^
$str
òò_ f
+
òòg h
$str
óó 7
+
óó8 9 
ProductDisposition
óó: L
+
óóM N
$str
óóO W
+
óóX Y
$str
ôô 
+
ôô 
$str
õõ r
+
õõs t
$str
öö 3
+
öö4 5
	Resources
öö6 ?
.
öö? @
Resource
öö@ H
.
ööH I"
preventative_measure
ööI ]
+
öö^ _
$str
öö` g
+
ööh i
$str
÷÷ 8
+
÷÷9 :!
PreventativeMeasure
÷÷; N
+
÷÷O P
$str
÷÷Q Y
+
÷÷Z [
$str
øø 
+
øø 
$strùù 
+ùù 
$str
úú t
+
úúu v
$str
ûû H
+
ûûI J
	Resources
ûûK T
.
ûûT U
Resource
ûûU ]
.
ûû] ^!
slaughter_signature
ûû^ q
+
ûûr s
$str
ûût {
+
ûû| }
$str
üü 0
+
üü1 2
NameSlaughter
üü3 @
+
üüA B
$str
üüC K
+
üüL M
$str
ýý 0
+
ýý1 2(
DateTimeSlaughterFarmatado
ýý3 M
+
ýýN O
$str
ýýP X
+
ýýY Z
$str
þþ  
+
þþ! "
$str
ÿÿ s
+
ÿÿt u
$str
 H
+
I J
	Resources
K T
.
T U
Resource
U ]
.
] ^!
technical_signature
^ q
+
r s
$str
t {
+
| }
$str
 0
+
1 2
NameTechinical
3 A
+
B C
$str
D L
+
M N
$str
 0
+
1 2)
DateTimeTechinicalFarmatado
3 N
+
O P
$str
Q Y
+
Z [
$str
  
+
! "
$str
 
+
 
$str
 
;
 
return
 
body
 
;
 
}
 
}
 	
}
 
} 
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\DefectDTO.cs
	namespace 	
DTO
 
. 
DTO 
{		 
public

 

class

 
	DefectDTO

 
:

 

EntityBase

 '
{ 
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
ParLevel1_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
CurrentEvaluation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
Evaluations 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
Defects 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
System 
. 
DateTime 
Date #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 
Active 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Æ
EC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\DepartmentDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
DepartmentDTO 
:  

EntityBase! +
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
}

 
} 
GC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\EmailContentDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
EmailContentDTO  
:! "

EntityBase# -
{ 
public 
string 
To 
{ 
get 
; 
set  #
;# $
}% &
public		 
string		 
Body		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 

SendStatus

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
DateTime 
SendDate  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
Project 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 

IsBodyHtml 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Subject 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
From 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Ñ
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\GetSyncDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

GetSyncDTO 
{ 
public		 
List		 
<		 $
TableResultsForDataTable		 ,
>		, - 
ConsolidationLevel01		. B
{		C D
get		E H
;		H I
set		J M
;		M N
}		O P
public

 
string

 
html

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
void 
MakeHtml 
( 
) 
{ 	
var 
	divMaster 
= 
$str #
;# $
if 
(  
ConsolidationLevel01 $
.$ %
FirstOrDefault% 3
(3 4
)4 5
!=6 8
null9 =
)= >
{ 
foreach 
( 
var 
i 
in ! 
ConsolidationLevel01" 6
.6 7
FirstOrDefault7 E
(E F
)F G
.G H
GetTypeH O
(O P
)P Q
.Q R
GetPropertiesR _
(_ `
)` a
)a b
{ 
if 
( 
i 
. 
PropertyType &
.& '
BaseType' /
./ 0
Name0 4
.4 5
Equals5 ;
(; <
$str< H
)H I
)I J
foreach 
(  !
var! $
x% &
in' )
i* +
.+ ,
GetType, 3
(3 4
)4 5
.5 6
GetProperties6 C
(C D
)D E
)E F
{ 
	divMaster %
+=& (
x) *
.* +
Name+ /
+0 1
$str2 8
+9 :
x; <
.< =
GetValue= E
(E F
iF G
,G H
nullI M
)M N
+O P
$strQ U
;U V
} 
	divMaster 
+=  
i! "
." #
Name# '
+( )
$str* 0
+1 2
i3 4
.4 5
GetValue5 =
(= > 
ConsolidationLevel01> R
.R S
FirstOrDefaultS a
(a b
)b c
,c d
nulle i
)i j
+k l
$strm q
;q r
} 
} 
	divMaster 
+= 
$str !
;! "
} 	
} 
} ñ
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Level02DTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

Level02DTO 
: 

EntityBase (
{ 
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Alias

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
bool 
Active 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ñ
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Level03DTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

Level03DTO 
: 

EntityBase (
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Alias 
{ 
get !
;! "
set# &
;& '
}( )
public		 
bool		 
Active		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
}

 
} ñ
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Level01DTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

Level01DTO 
: 

EntityBase (
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Alias 
{ 
get !
;! "
set# &
;& '
}( )
public		 
bool		 
Active		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
}

 
} Õ
IC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ContextExampleDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
ContextExampleDTO "
:# $

EntityBase% /
{		 
public

 

ExampleDTO

 
example

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
} 
} õ
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Manutencao\ManDataCollectITsDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 

Manutencao 
{ 
public 

class  
ManDataCollectITsDTO %
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
DateTime		 
AddDate		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
DateTime

 
	AlterDate

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
DateTime 
ReferenceDatetime )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
int 

UserSGQ_Id 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int %
DimManutencaoColetaITs_id ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
decimal 

AmountData !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Comments 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ¦
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Manutencao\DimManutencaoColetaITsDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 

Manutencao 
{ 
public 

class %
DimManutencaoColetaITsDTO *
{ 
public 
int 
id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
DataType 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
TechnicalIndicator (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
}		 
}

 ì
dC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Manutencao\PainelIndicadoresUniManutencaoDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 

Manutencao 
{ 
public		 

class		 -
!PainelIndicadoresUniManutencaoDTO		 2
{

 
public 
string 
dado 
{ 
get  
;  !
set" %
;% &
}' (
public 
decimal 
orcado 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 
	realizado  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
desvio 
{ 
get  #
;# $
set% (
;( )
}* +
public 
decimal 

porcDesvio !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ¬
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\NxN.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
NxN 
: 

EntityBase !
{ 
public 
bool 
IsSave 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 

IsInativar 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
bool		 
IsEdit		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
bool

 

IsReativar

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
} 
} Ò
HC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParamsDdl.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

 
	ParamsDdl

 
{ 
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlParConsolidation+ >
{? @
getA D
;D E
setF I
;I J
}K L
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlFrequency+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlparLevel1+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlparLevel2+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlparLevel3+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlparCluster+ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
public 
IEnumerable 
< 
SelectListItem )
>) *

DdlparCrit+ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlScoretype+ 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlparLevel1Active+ =
{> ?
get@ C
;C D
setE H
;H I
}J K
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlParDepartment+ ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
IEnumerable 
< 
SelectListItem )
>) *!
DdlparLevelDefinition+ @
{A B
getC F
;F G
setH K
;K L
}M N
public 
IEnumerable 
< 
SelectListItem )
>) *
DdlParFieldType+ :
{; <
get= @
;@ A
setB E
;E F
}G H
public   
IEnumerable   
<   
SelectListItem   )
>  ) * 
DdlParCounter_Level1  + ?
{  @ A
get  B E
;  E F
set  G J
;  J K
}  L M
public!! 
IEnumerable!! 
<!! 
SelectListItem!! )
>!!) * 
DdlParCounter_Level2!!+ ?
{!!@ A
get!!B E
;!!E F
set!!G J
;!!J K
}!!L M
public"" 
IEnumerable"" 
<"" 
SelectListItem"" )
>"") *
DdlParLocal_Level1""+ =
{""> ?
get""@ C
;""C D
set""E H
;""H I
}""J K
public## 
IEnumerable## 
<## 
SelectListItem## )
>##) *
DdlParLocal_Level2##+ =
{##> ?
get##@ C
;##C D
set##E H
;##H I
}##J K
public%% 
IEnumerable%% 
<%% 
SelectListItem%% )
>%%) *#
DdlParNotConformityRule%%+ B
{%%C D
get%%E H
;%%H I
set%%J M
;%%M N
}%%O P
public'' 
IEnumerable'' 
<'' 
SelectListItem'' )
>'') *!
DdlParLevel3InputType''+ @
{''A B
get''C F
;''F G
set''H K
;''K L
}''M N
public(( 
IEnumerable(( 
<(( 
SelectListItem(( )
>(() *!
DdlParMeasurementUnit((+ @
{((A B
get((C F
;((F G
set((H K
;((K L
}((M N
public)) 
IEnumerable)) 
<)) 
SelectListItem)) )
>))) *!
DdlParLevel3BoolFalse))+ @
{))A B
get))C F
;))F G
set))H K
;))K L
}))M N
public** 
IEnumerable** 
<** 
SelectListItem** )
>**) * 
DdlParLevel3BoolTrue**+ ?
{**@ A
get**B E
;**E F
set**G J
;**J K
}**L M
public,, 
IEnumerable,, 
<,, 
SelectListItem,, )
>,,) *
DdlParCompany,,+ 8
{,,9 :
get,,; >
;,,> ?
set,,@ C
;,,C D
},,E F
public-- 
IEnumerable-- 
<-- 
SelectListItem-- )
>--) *
DdlEquipamentos--+ :
{--; <
get--= @
;--@ A
set--B E
;--E F
}--G H
public.. 
IEnumerable.. 
<.. 
SelectListItem.. )
>..) *

DdlCamaras..+ 5
{..6 7
get..8 ;
;..; <
set..= @
;..@ A
}..B C
public// 
IEnumerable// 
<// 
SelectListItem// )
>//) *
DdlPontosDeColeta//+ <
{//= >
get//? B
;//B C
set//D G
;//G H
}//I J
private11 
List11 
<11 
SelectListItem11 #
>11# $4
(CreateSelectListParamsViewModelListLevel11% M
<11M N
T11N O
>11O P
(11P Q
IEnumerable11Q \
<11\ ]
T11] ^
>11^ _

enumerable11` j
)11j k
{22 	
List33 
<33 
SelectListItem33 
>33  
retorno33! (
=33) *
new33+ .
List33/ 3
<333 4
SelectListItem334 B
>33B C
(33C D
)33D E
;33E F
var44 
defaultOption44 
=44 
GlobalConfig44  ,
.44, -
PrimeiraOption44- ;
;44; <
retorno55 
.55 
Insert55 
(55 
$num55 
,55 
new55 !
SelectListItem55" 0
(550 1
)551 2
{553 4
Text555 9
=55: ;
defaultOption55< I
,55I J
Value55K P
=55Q R
$str55S W
}55X Y
)55Y Z
;55Z [
var66 
counter66 
=66 
$num66 
;66 
foreach77 
(77 
var77 
i77 
in77 

enumerable77 (
)77( )
{88 
var99 
text99 
=99 
i99 
.99 
GetType99 $
(99$ %
)99% &
.99& '
GetProperty99' 2
(992 3
$str993 9
)999 :
??99; =
i99> ?
.99? @
GetType99@ G
(99G H
)99H I
.99I J
GetProperty99J U
(99U V
$str99V c
)99c d
;99d e
var:: 
prop:: 
=:: 
i:: 
.:: 
GetType:: $
(::$ %
)::% &
.::& '
GetProperty::' 2
(::2 3
$str::3 7
)::7 8
;::8 9
retorno;; 
.;; 
Insert;; 
(;; 
counter;; &
,;;& '
new;;( +
SelectListItem;;, :
(;;: ;
);;; <
{;;= >
Text;;? C
=;;D E
prop;;F J
.;;J K
GetValue;;K S
(;;S T
i;;T U
);;U V
.;;V W
ToString;;W _
(;;_ `
);;` a
+;;b c
$str;;d i
+;;j k
text;;l p
.;;p q
GetValue;;q y
(;;y z
i;;z {
);;{ |
.;;| }
ToString	;;} 
(
;; 
)
;; 
,
;; 
Value
;; 
=
;; 
prop
;; 
.
;; 
GetValue
;; 
(
;; 
i
;;  
)
;;  ¡
.
;;¡ ¢
ToString
;;¢ ª
(
;;ª «
)
;;« ¬
}
;;­ ®
)
;;® ¯
;
;;¯ °
counter<< 
++<< 
;<< 
}== 
return?? 
retorno?? 
;?? 
}@@ 	
publicBB 
voidBB 
SetDdlsBB 
(BB 
ListBB  
<BB  !#
ParConsolidationTypeDTOBB! 8
>BB8 9
ddlParConsolidationBB: M
,BBM N
ListCC  
<CC  !
ParFrequencyDTOCC! 0
>CC0 1
ddlFrequencyCC2 >
,CC> ?
ListGG  
<GG  !
ParClusterDTOGG! .
>GG. /
ddlparClusterGG0 =
,GG= >
ListHH  
<HH  ! 
ParLevelDefinitonDTOHH! 5
>HH5 6!
ddlparLevelDefinitionHH7 L
,HHL M
ListII  
<II  !
ParFieldTypeDTOII! 0
>II0 1
ddlParFieldTypeII2 A
,IIA B
ListJJ  
<JJ  !
ParDepartmentDTOJJ! 1
>JJ1 2
ddlParDepartmentJJ3 C
,JJC D
ListKK  
<KK  !
ParCounterDTOKK! .
>KK. / 
ddlParCounter_Level1KK0 D
,KKD E
ListLL  
<LL  !
ParLocalDTOLL! ,
>LL, -
ddlParLocal_Level1LL. @
,LL@ A
ListMM  
<MM  !
ParCounterDTOMM! .
>MM. / 
ddlParCounter_Level2MM0 D
,MMD E
ListNN  
<NN  !
ParLocalDTONN! ,
>NN, -
ddlParLocal_Level2NN. @
,NN@ A
ListOO  
<OO  !#
ParNotConformityRuleDTOOO! 8
>OO8 9#
ddlParNotConformityRuleOO: Q
,OOQ R
ListPP  
<PP  !!
ParLevel3InputTypeDTOPP! 6
>PP6 7 
ddlParLevel3InptTypePP8 L
,PPL M
ListQQ  
<QQ  !!
ParMeasurementUnitDTOQQ! 6
>QQ6 7!
ddlParMeasurementUnitQQ8 M
,QQM N
ListRR  
<RR  !!
ParLevel3BoolFalseDTORR! 6
>RR6 7!
ddlParLevel3BoolFalseRR8 M
,RRM N
ListSS  
<SS  ! 
ParLevel3BoolTrueDTOSS! 5
>SS5 6 
ddlParLevel3BoolTrueSS7 K
,SSK L
ListTT  
<TT  !
ParCriticalLevelDTOTT! 4
>TT4 5

ddlparCritTT6 @
,TT@ A
ListUU  
<UU  !
ParCompanyDTOUU! .
>UU. /
ddlParCompanyUU0 =
,UU= >
ListVV !
<VV! "
ParScoreTypeDTOVV" 1
>VV1 2
ddlScoretypeVV3 ?
)WW 
{XX 	
DdlParCompany[[ 
=[[ 
Guard[[ !
.[[! "
CreateDropDownList[[" 4
([[4 5
ddlParCompany[[5 B
.[[B C
OrderBy[[C J
([[J K
r[[K L
=>[[M O
r[[P Q
.[[Q R
Name[[R V
)[[V W
)[[W X
;[[X Y
DdlParConsolidation\\ 
=\\  !
Guard\\" '
.\\' (
CreateDropDownList\\( :
(\\: ;
ddlParConsolidation\\; N
.\\N O
Where\\O T
(\\T U
r\\U V
=>\\W Y
r\\Z [
.\\[ \
IsActive\\\ d
==\\e g
true\\h l
)\\l m
.\\m n
OrderBy\\n u
(\\u v
r\\v w
=>\\x z
r\\{ |
.\\| }
Name	\\} 
)
\\ 
)
\\ 
;
\\ 
DdlFrequency]] 
=]] 
Guard]]  
.]]  !
CreateDropDownList]]! 3
(]]3 4
ddlFrequency]]4 @
.]]@ A
OrderBy]]A H
(]]H I
r]]I J
=>]]K M
r]]N O
.]]O P
Name]]P T
)]]T U
)]]U V
;]]V W
DdlparClusteraa 
=aa 
Guardaa !
.aa! "
CreateDropDownListaa" 4
(aa4 5
ddlparClusteraa5 B
.aaB C
OrderByaaC J
(aaJ K
raaK L
=>aaM O
raaP Q
.aaQ R
NameaaR V
)aaV W
)aaW X
;aaX Y!
DdlparLevelDefinitionbb !
=bb" #
Guardbb$ )
.bb) *
CreateDropDownListbb* <
(bb< =!
ddlparLevelDefinitionbb= R
.bbR S
OrderBybbS Z
(bbZ [
rbb[ \
=>bb] _
rbb` a
.bba b
Namebbb f
)bbf g
)bbg h
;bbh i
DdlParFieldTypedd 
=dd 
Guarddd #
.dd# $
CreateDropDownListdd$ 6
(dd6 7
ddlParFieldTypedd7 F
.ddF G
OrderByddG N
(ddN O
rddO P
=>ddQ S
rddT U
.ddU V
NameddV Z
)ddZ [
)dd[ \
;dd\ ]
ifff 
(ff 
GlobalConfigff 
.ff 
Euaff  
)ff  !
{gg 
DdlParFieldTypehh 
=hh  !
Guardhh" '
.hh' (
CreateDropDownListhh( :
(hh: ;
ddlParFieldTypehh; J
.hhJ K
WherehhK P
(hhP Q
rhhQ R
=>hhS U
rhhV W
.hhW X
IdhhX Z
!=hh[ ]
$numhh^ _
)hh_ `
.hh` a
OrderByhha h
(hhh i
rhhi j
=>hhk m
rhhn o
.hho p
Namehhp t
)hht u
)hhu v
;hhv w
}ii 
DdlParDepartmentkk 
=kk 
Guardkk $
.kk$ %
CreateDropDownListkk% 7
(kk7 8
ddlParDepartmentkk8 H
.kkH I
OrderBykkI P
(kkP Q
rkkQ R
=>kkS U
rkkV W
.kkW X
NamekkX \
)kk\ ]
)kk] ^
;kk^ _ 
DdlParCounter_Level1ll  
=ll! "
Guardll# (
.ll( )
CreateDropDownListll) ;
(ll; < 
ddlParCounter_Level1ll< P
.llP Q
OrderByllQ X
(llX Y
rllY Z
=>ll[ ]
rll^ _
.ll_ `
Namell` d
)lld e
)lle f
;llf g
DdlParLocal_Level1mm 
=mm  
Guardmm! &
.mm& '
CreateDropDownListmm' 9
(mm9 :
ddlParLocal_Level1mm: L
.mmL M
OrderBymmM T
(mmT U
rmmU V
=>mmW Y
rmmZ [
.mm[ \
Namemm\ `
)mm` a
)mma b
;mmb c 
DdlParCounter_Level2nn  
=nn! "
Guardnn# (
.nn( )
CreateDropDownListnn) ;
(nn; < 
ddlParCounter_Level2nn< P
.nnP Q
OrderBynnQ X
(nnX Y
rnnY Z
=>nn[ ]
rnn^ _
.nn_ `
Namenn` d
)nnd e
)nne f
;nnf g
DdlParLocal_Level2oo 
=oo  
Guardoo! &
.oo& '
CreateDropDownListoo' 9
(oo9 :
ddlParLocal_Level2oo: L
.ooL M
OrderByooM T
(ooT U
rooU V
=>ooW Y
rooZ [
.oo[ \
Nameoo\ `
)oo` a
)ooa b
;oob c#
DdlParNotConformityRulepp #
=pp$ %
Guardpp& +
.pp+ ,
CreateDropDownListpp, >
(pp> ?#
ddlParNotConformityRulepp? V
.ppV W
OrderByppW ^
(pp^ _
rpp_ `
=>ppa c
rppd e
.ppe f
Nameppf j
)ppj k
)ppk l
;ppl m!
DdlParLevel3InputTypeqq !
=qq" #
Guardqq$ )
.qq) *
CreateDropDownListqq* <
(qq< = 
ddlParLevel3InptTypeqq= Q
.qqQ R
OrderByqqR Y
(qqY Z
rqqZ [
=>qq\ ^
rqq_ `
.qq` a
Nameqqa e
)qqe f
)qqf g
;qqg h!
DdlParMeasurementUnitrr !
=rr" #
Guardrr$ )
.rr) *
CreateDropDownListrr* <
(rr< =!
ddlParMeasurementUnitrr= R
.rrR S
OrderByrrS Z
(rrZ [
rrr[ \
=>rr] _
rrr` a
.rra b
Namerrb f
)rrf g
)rrg h
;rrh i!
DdlParLevel3BoolFalsess !
=ss" #
Guardss$ )
.ss) *
CreateDropDownListss* <
(ss< =!
ddlParLevel3BoolFalsess= R
.ssR S
OrderByssS Z
(ssZ [
rss[ \
=>ss] _
rss` a
.ssa b
Namessb f
)ssf g
)ssg h
;ssh i 
DdlParLevel3BoolTruett  
=tt! "
Guardtt# (
.tt( )
CreateDropDownListtt) ;
(tt; < 
ddlParLevel3BoolTruett< P
.ttP Q
OrderByttQ X
(ttX Y
rttY Z
=>tt[ ]
rtt^ _
.tt_ `
Namett` d
)ttd e
)tte f
;ttf g

DdlparCrituu 
=uu 
Guarduu 
.uu 
CreateDropDownListuu 1
(uu1 2

ddlparCrituu2 <
.uu< =
OrderByuu= D
(uuD E
ruuE F
=>uuG I
ruuJ K
.uuK L
NameuuL P
)uuP Q
)uuQ R
;uuR S
ifww 
(ww 
GlobalConfigww 
.ww 
Brasilww #
)ww# $
{xx 
DdlEquipamentosyy 
=yy  !(
CreateSelectListEquipamentosyy" >
(yy> ?
$stryy? L
)yyL M
;yyM N

DdlCamaraszz 
=zz (
CreateSelectListEquipamentoszz 9
(zz9 :
$strzz: B
)zzB C
;zzC D
DdlPontosDeColeta{{ !
={{" #(
CreateSelectListEquipamentos{{$ @
({{@ A
$str{{A R
){{R S
;{{S T
}|| 
DdlScoretype~~ 
=~~ 
Guard~~  
.~~  !
CreateDropDownList~~! 3
(~~3 4
ddlScoretype~~4 @
.~~@ A
OrderBy~~A H
(~~H I
r~~I J
=>~~K M
r~~N O
.~~O P
Name~~P T
)~~T U
)~~U V
;~~V W
}
 	
public
 
void
 
SetDdlsNivel123
 #
(
# $
List
$ (
<
( )
ParLevel1DTO
) 5
>
5 6
ddlparLevel1
7 C
,
C D
List
E I
<
I J
ParLevel2DTO
J V
>
V W
ddlparLevel2
X d
,
d e
List
f j
<
j k
ParLevel3DTO
k w
>
w x
ddlparLevel3y 
) 
{
 	
DdlparLevel1
 
=
 6
(CreateSelectListParamsViewModelListLevel
 C
(
C D
ddlparLevel1
D P
.
P Q
OrderBy
Q X
(
X Y
r
Y Z
=>
[ ]
r
^ _
.
_ `
Name
` d
)
d e
)
e f
;
f g
DdlparLevel2
 
=
 6
(CreateSelectListParamsViewModelListLevel
 C
(
C D
ddlparLevel2
D P
.
P Q
OrderBy
Q X
(
X Y
r
Y Z
=>
[ ]
r
^ _
.
_ `
Name
` d
)
d e
)
e f
;
f g
DdlparLevel3
 
=
 6
(CreateSelectListParamsViewModelListLevel
 C
(
C D
ddlparLevel3
D P
.
P Q
OrderBy
Q X
(
X Y
r
Y Z
=>
[ ]
r
^ _
.
_ `
Name
` d
)
d e
)
e f
;
f g 
DdlparLevel1Active
 
=
  6
(CreateSelectListParamsViewModelListLevel
! I
(
I J
ddlparLevel1
J V
.
V W
Where
W \
(
\ ]
r
] ^
=>
_ a
r
b c
.
c d
IsActive
d l
==
m o
true
p t
)
t u
.
u v
OrderBy
v }
(
} ~
r
~ 
=> 
r 
. 
Name 
) 
) 
; 
DdlparLevel1
 
=
 
DdlparLevel1
 '
.
' (
OrderBy
( /
(
/ 0
r
0 1
=>
2 4
r
5 6
.
6 7
Group
7 <
)
< =
;
= >
DdlparLevel2
 
=
 
DdlparLevel2
 '
.
' (
OrderBy
( /
(
/ 0
r
0 1
=>
2 4
r
5 6
.
6 7
Group
7 <
)
< =
;
= >
DdlparLevel3
 
=
 
DdlparLevel3
 '
.
' (
OrderBy
( /
(
/ 0
r
0 1
=>
2 4
r
5 6
.
6 7
Group
7 <
)
< =
;
= > 
DdlparLevel1Active
 
=
   
DdlparLevel1Active
! 3
.
3 4
OrderBy
4 ;
(
; <
r
< =
=>
> @
r
A B
.
B C
Group
C H
)
H I
;
I J
}
 	
private
 
List
 
<
 
SelectListItem
 #
>
# $6
(CreateSelectListParamsViewModelListLevel
% M
<
M N
T
N O
>
O P
(
P Q
List
Q U
<
U V
T
V W
>
W X
lista
Y ^
)
^ _
{
 	
List
 
<
 
SelectListItem
 
>
  
retorno
! (
=
) *
new
+ .
List
/ 3
<
3 4
SelectListItem
4 B
>
B C
(
C D
)
D E
;
E F
retorno
 
.
 
Insert
 
(
 
$num
 
,
 
new
 !
SelectListItem
" 0
(
0 1
)
1 2
{
3 4
Text
5 9
=
: ;
GlobalConfig
< H
.
H I
PrimeiraOption
I W
,
W X
Value
Y ^
=
_ `
$str
a e
}
f g
)
g h
;
h i
var
 
counter
 
=
 
$num
 
;
 
var
 
group
 
=
 
new
 
SelectListGroup
 +
(
+ ,
)
, -
{
. /
Name
0 4
=
5 6
GlobalConfig
7 C
.
C D
NaoVinculado
D P
}
e f
;
f g
var
 
groupSelecionado
  
=
! "
new
# &
SelectListGroup
' 6
(
6 7
)
7 8
;
8 9
foreach
 
(
 
var
 
i
 
in
 
lista
 #
)
# $
{
 
var
 
text
 
=
 
i
 
.
 
GetType
 $
(
$ %
)
% &
.
& '
GetProperty
' 2
(
2 3
$str
3 9
)
9 :
.
: ;
GetValue
; C
(
C D
i
D E
)
E F
??
G I
i
J K
.
K L
GetType
L S
(
S T
)
T U
.
U V
GetProperty
V a
(
a b
$str
b o
)
o p
.
p q
GetValue
q y
(
y z
i
z {
)
{ |
;
| }
var
 
prop
 
=
 
i
 
.
 
GetType
 $
(
$ %
)
% &
.
& '
GetProperty
' 2
(
2 3
$str
3 7
)
7 8
.
8 9
GetValue
9 A
(
A B
i
B C
)
C D
;
D E
var
 
opt
 
=
 
new
 
SelectListItem
 ,
(
, -
)
- .
{
/ 0
Text
1 5
=
6 7
prop
8 <
.
< =
ToString
= E
(
E F
)
F G
+
H I
$str
J O
+
P Q
text
R V
,
V W
Value
X ]
=
^ _
prop
` d
.
d e
ToString
e m
(
m n
)
n o
}
p q
;
q r
retorno
ªª 
.
ªª 
Insert
ªª 
(
ªª 
counter
ªª &
,
ªª& '
opt
ªª( +
)
ªª+ ,
;
ªª, -
counter
¬¬ 
++
¬¬ 
;
¬¬ 
}
­­ 
return
¯¯ 
retorno
¯¯ 
;
¯¯ 
}
°° 	
private
²² 
IEnumerable
²² 
<
²² 
SelectListItem
²² *
>
²²* +*
CreateSelectListEquipamentos
²², H
(
²²H I
string
²²I O
tipo
²²P T
)
²²T U
{
³³ 	
IEnumerable
´´ 
<
´´ 
SelectListItem
´´ &
>
´´& '
retorno
´´( /
;
´´/ 0
var
¶¶ 
context
¶¶ 
=
¶¶ 
$str
¶¶ )
;
¶¶) *
using
¸¸ 
(
¸¸ 
var
¸¸ 
db
¸¸ 
=
¸¸ 
new
¸¸ 
Factory
¸¸  '
(
¸¸' (
context
¸¸( /
)
¸¸/ 0
)
¸¸0 1
{
¹¹ 
string
ºº 
query
ºº 
=
ºº 
$str
ºº ]
+
ºº] ^
$str
»»  V
+
»»V W
$str
¼¼  ]
+
¼¼] ^
$str
½½  B
+
½½B C
tipo
½½D H
+
½½I J
$str
½½K f
;
½½f g
retorno
¿¿ 
=
¿¿ 
db
¿¿ 
.
¿¿ 
SearchQuery
¿¿ (
<
¿¿( )
SelectListItem
¿¿) 7
>
¿¿7 8
(
¿¿8 9
query
¿¿9 >
)
¿¿> ?
;
¿¿? @
}
ÀÀ 
return
ÂÂ 
retorno
ÂÂ 
;
ÂÂ 
}
ÃÃ 	
}
ÅÅ 
}ÆÆ  1
HC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParamsDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
	ParamsDTO 
: 

EntityBase '
{ 
public		 
int		 
level1Selected		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public 
int 
level2Selected !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
level3Selected !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
parLevel1Selected $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
parLevel2Selected $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
parLevel3Selected $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
ParLevel1DTO 
parLevel1Dto (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
List 
<  
ParLevel1XClusterDTO (
>( ) 
parLevel1XClusterDto* >
{? @
getA D
;D E
setF I
;I J
}K L
public 
List 
< 
ParHeaderFieldDTO %
>% &!
listParHeaderFieldDto' <
{= >
get? B
;B C
setD G
;G H
}I J
public 
List 
< 
ParFrequencyDTO #
># $ 
listParFrequencydDto% 9
{: ;
get< ?
;? @
setA D
;D E
}F G
public 
List 
< 
ParCounterXLocalDTO '
>' ( 
listParCounterXLocal) =
{> ?
get@ C
;C D
setE H
;H I
}J K
public 
ParHeaderFieldDTO  
parHeaderFieldDto! 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public   $
ParLevel1XHeaderFieldDTO   '#
parLevel1HeaderFieldDto  ( ?
{  @ A
get  B E
;  E F
set  G J
;  J K
}  L M
public!! $
ParLevel2XHeaderFieldDTO!! '#
parLevel2HeaderFieldDto!!( ?
{!!@ A
get!!B E
;!!E F
set!!G J
;!!J K
}!!L M
public)) 
List)) 
<)) 
ParDepartmentDTO)) $
>))$ %!
listParDepartmentdDto))& ;
{))< =
get))> A
;))A B
set))C F
;))F G
}))H I
public++ 
ParLevel2DTO++ 
parLevel2Dto++ (
{++) *
get+++ .
;++. /
set++0 3
;++3 4
}++5 6
public-- 
List-- 
<-- 
ParLevel3GroupDTO-- %
>--% &!
listParLevel3GroupDto--' <
{--= >
get--? B
;--B C
set--D G
;--G H
}--I J
public// 
List// 
<// 
ParLocalDTO// 
>//  
listParLocalDto//! 0
{//1 2
get//3 6
;//6 7
set//8 ;
;//; <
}//= >
public00 
List00 
<00 
ParCounterDTO00 !
>00! "
listParCounterDto00# 4
{005 6
get007 :
;00: ;
set00< ?
;00? @
}00A B
public11 
List11 
<11 
ParCounterXLocalDTO11 '
>11' (#
listParCounterXLocalDto11) @
{11A B
get11C F
;11F G
set11H K
;11K L
}11M N
public22 
List22 
<22 
ParRelapseDTO22 !
>22! "
listParRelapseDto22# 4
{225 6
get227 :
;22: ;
set22< ?
;22? @
}22A B
public33 #
ParNotConformityRuleDTO33 &#
parNotConformityRuleDto33' >
{33? @
get33A D
;33D E
set33F I
;33I J
}33K L
public44 )
ParNotConformityRuleXLevelDTO44 ,)
parNotConformityRuleXLevelDto44- J
{44K L
get44M P
;44P Q
set44R U
;44U V
}44W X
public66 
List66 
<66 #
ParNotConformityRuleDTO66 +
>66+ ,#
listParNotConformitRule66- D
{66E F
get66G J
;66J K
set66L O
;66O P
}66Q R
public99 
ParCompanyDTO99 
parCompanyDto99 *
{99+ ,
get99- 0
;990 1
set992 5
;995 6
}997 8
public== 
ParEvaluationDTO== 
parEvaluationDto==  0
{==1 2
get==3 6
;==6 7
set==8 ;
;==; <
}=== >
public>> 
ParSampleDTO>> 
parSampleDto>> (
{>>) *
get>>+ .
;>>. /
set>>0 3
;>>3 4
}>>5 6
public@@ 
ParLevel3DTO@@ 
parLevel3Dto@@ (
{@@) *
get@@+ .
;@@. /
set@@0 3
;@@3 4
}@@5 6
publicAA 
ParLevel3ValueDTOAA  
parLevel3ValueAA! /
{AA0 1
getAA2 5
;AA5 6
setAA7 :
;AA: ;
}AA< =
publicCC 
ParLevel3Level2DTOCC !
parLevel3Level2CC" 1
{CC2 3
getCC4 7
;CC7 8
setCC9 <
;CC< =
}CC> ?
publicII 
ListII 
<II 
ParLevel1DTOII  
>II  !
collectionObjectII" 2
{II3 4
getII5 8
;II8 9
setII: =
;II= >
}II? @
}MM 
}NN 
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCompanyClusterDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

  
ParCompanyClusterDTO

 %
:

& '

EntityBase

( 2
{ 
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
ParCluster_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
Active 
{ 
get  
;  !
set" %
;% &
}' (
public 
ParClusterDTO 

ParCluster '
;' (
} 
} 
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCompanyXStructureDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class #
ParCompanyXStructureDTO (
:) *

EntityBase+ 5
{ 
public 
int 
ParStructure_Id "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
bool		 
Active		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
true		+ /
;		/ 0
public 
ParStructureDTO 
ParStructure +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
} 
} ú
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCriticalLevelDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParCriticalLevelDTO $
:% &

EntityBase' 1
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
Nullable		 
<		 
bool		 
>		 
IsActive		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
=		5 6
true		7 ;
;		; <
} 
} ¯
OC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParDepartmentDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParDepartmentDTO !
:" #

EntityBase$ .
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} Ð
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCounterDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParCounterDTO 
:  

EntityBase! +
{ 
public 
int 
Level 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
} 
} ²
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCounterXLocalDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParCounterXLocalDTO $
:% &

EntityBase' 1
{ 
public 
int 
ParLocal_Id 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
ParCounter_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
int		 
?		 
ParLevel1_Id		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
int

 
?

 
ParLevel2_Id

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 
? 
ParLevel3_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
ParCounterDTO 

ParCounter '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ParLocalDTO 
ParLocal #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} 
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel2XHeaderFieldDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class $
ParLevel2XHeaderFieldDTO )
:* +

EntityBase, 6
{ 
public 
int 
ParLevel1_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
ParLevel2_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
ParHeaderField_Id		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
bool

 
Active

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
=

) *
true

+ /
;

/ 0
} 
} Ã 
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel2ControlCompanyDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class &
ParLevel2ControlCompanyDTO +
:, -

EntityBase. 8
{ 
public

 
Nullable

 
<

 
int

 
>

 
ParCompany_Id

 *
{

+ ,
get

- 0
;

0 1
set

2 5
;

5 6
}

7 8
public 
Nullable 
< 
int 
> 
ParLevel1_Id )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
Nullable 
< 
int 
> 
ParLevel2_Id )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
Nullable 
< 
System 
. 
DateTime '
>' (
InitDate) 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
Nullable 
< 
bool 
> 
IsActive &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
ParCompanyDTO 

ParCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ParLevel1DTO 
	ParLevel1 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel2DTO 
	ParLevel2 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public &
ParLevel2ControlCompanyDTO )
() *
)* +
{ 	
} 	
public &
ParLevel2ControlCompanyDTO )
() *
int* -
level2Id. 6
,6 7
int8 ;
level1Id< D
,D E
intF I
?I J
parcompanyIdK W
,W X
DateTimeY a
initdateb j
,j k
booll p
isActiveq y
)y z
{ 	
ParLevel2_Id 
= 
level2Id #
;# $
ParLevel1_Id 
= 
level1Id #
;# $
ParCompany_Id 
= 
parcompanyId (
;( )
InitDate 
= 
initdate 
;  
IsActive 
= 
isActive 
;  
if"" 
("" 
parcompanyId"" 
!="" 
null""  $
)""$ %
if## 
(## 
parcompanyId##  
>##! "
$num### $
)##$ %
ParCompany_Id$$ !
=$$" #
parcompanyId$$$ 0
;$$0 1
}%% 	
public(( &
ParLevel2ControlCompanyDTO(( )
((() *
int((* -
level2Id((. 6
,((6 7
int((8 ;
level1Id((< D
,((D E
int((F I
?((I J
parcompanyId((K W
,((W X
DateTime((Y a
initdate((b j
)((j k
{)) 	
ParLevel2_Id** 
=** 
level2Id** #
;**# $
ParLevel1_Id++ 
=++ 
level1Id++ #
;++# $
ParCompany_Id,, 
=,, 
parcompanyId,, (
;,,( )
InitDate-- 
=-- 
initdate-- 
;--  
IsActive.. 
=.. 
true.. 
;.. 
if11 
(11 
parcompanyId11 
!=11 
null11  $
)11$ %
if22 
(22 
parcompanyId22  
>22! "
$num22# $
)22$ %
ParCompany_Id33 !
=33" #
parcompanyId33$ 0
;330 1
}44 	
}66 
}77 Î

QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel2Level1DTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParLevel2Level1DTO #
:$ %

EntityBase& 0
{ 
public 
int 
ParLevel1_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
ParLevel2_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
Nullable

 
<

 
int

 
>

 
ParCompany_Id

 *
{

+ ,
get

- 0
;

0 1
set

2 5
;

5 6
}

7 8
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
ParLevel1DTO 
	ParLevel1 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel2DTO 
	ParLevel2 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} ß
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel2SampleEvaluationDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class (
ParLevel2SampleEvaluationDTO -
{ 
public 
int 
sampleNumber 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
? 
sampleId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
evaluationNumber #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
int		 
?		 
evaluationId		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public 
int 
level2Id 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
? 
	companyId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
? 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ó
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3Level2DTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParLevel3Level2DTO #
:$ %

EntityBase& 0
{ 
public 
int 
ParLevel2_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
ParLevel3_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
?

 
ParLevel3Group_Id

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
int 
? 
ParCompany_Id !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
Weight 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
ParLevel2DTO 
	ParLevel2 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel3DTO 
	ParLevel3 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel3GroupDTO  
ParLevel3Group! /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
ParCompanyDTO 

ParCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
void $
preparaParaInsertEmBanco ,
(, -
)- .
{ 	
if 
( 
ParCompany_Id 
<=  
$num! "
)" #
ParCompany_Id 
= 
null  $
;$ %
if 
( 
ParLevel3Group_Id !
<=" $
$num% &
)& '
ParLevel3Group_Id !
=" #
null$ (
;( )
} 	
} 
} 	
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3Level2Level1DTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class $
ParLevel3Level2Level1DTO )
:* +

EntityBase, 6
{ 
public 
int 
ParLevel3Level2_Id %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public		 
int		 
ParLevel1_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
bool

 
Active

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
ParLevel1DTO 
	ParLevel1 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel3Level2DTO !
ParLevel3Level2" 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
} 
} ç"
ZC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3Value_OuterListDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

 '
ParLevel3Value_OuterListDTO

 ,
:

- .

EntityBase

/ 9
{ 
public 
int 
OuterEmpresa_Id "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
OuterEmpresa_Text '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
int 
OuterLevel3_Id !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
OuterLevel3_Text &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
int 
OuterLevel3Value_Id &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string !
OuterLevel3Value_Text +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
int ,
 OuterLevel3ValueIntervalMinValue 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
int ,
 OuterLevel3ValueIntervalMaxValue 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
string 
Operator 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
Order 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
ParLevel3_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
ParLevel3_Name $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int !
ParLevel3InputType_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string #
ParLevel3InputType_Name -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
ParCompany_Name %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int !
ParMeasurementUnit_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
string #
ParMeasurementUnit_Name -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public   
int   
UnidadeMedida_Id   #
{  $ %
get  & )
;  ) *
set  + .
;  . /
}  0 1
public!! 
string!! 
UnidadeMedidaText!! '
{!!( )
get!!* -
;!!- .
set!!/ 2
;!!2 3
}!!4 5
public"" 
string"" 
AceitavelEntreText"" (
{"") *
get""+ .
;"". /
set""0 3
;""3 4
}""5 6
public## 
int## 
AceitavelEntre_Id## $
{##% &
get##' *
;##* +
set##, /
;##/ 0
}##1 2
public$$ 
decimal$$ 
LimInferior$$ #
{$$$ %
get$$& )
;$$) *
set$$+ .
;$$. /
}$$0 1
public%% 
decimal%% 
LimSuperior%% "
{%%# $
get%%% (
;%%( )
set%%* -
;%%- .
}%%/ 0
public'' 
bool'' 
IsActive'' 
{'' 
get'' "
;''" #
set''$ '
;''' (
}'') *
})) 
}** é
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParMeasurementUnitDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class !
ParMeasurementUnitDTO &
:' (

EntityBase) 3
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
}

 
} È
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3BoolTrueDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class  
ParLevel3BoolTrueDTO %
:& '

EntityBase( 2
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
}		 
}

 Ê
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3BoolFalseDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class !
ParLevel3BoolFalseDTO &
:' (

EntityBase) 3
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
}		 
}

 3
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3ValueDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParLevel3ValueDTO "
:# $

EntityBase% /
{ 
public 
int 
ParLevel3_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int !
ParLevel3InputType_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? !
ParLevel3BoolFalse_Id )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
int 
?  
ParLevel3BoolTrue_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int 
? 
ParCompany_Id !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? !
ParMeasurementUnit_Id )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
bool 
? "
AcceptableValueBetween +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
decimal 
? 
IntervalMin #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
$num4 5
;5 6
public 
decimal 
? 
IntervalMax #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
$num4 5
;5 6
public 
string  
IntervalMinCalculado *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
string  
IntervalMaxCalculado *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
ParCompanyDTO 

ParCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public !
ParLevel3BoolFalseDTO $
ParLevel3BoolFalse% 7
{8 9
get: =
;= >
set? B
;B C
}D E
public    
ParLevel3BoolTrueDTO   #
ParLevel3BoolTrue  $ 5
{  6 7
get  8 ;
;  ; <
set  = @
;  @ A
}  B C
public!! !
ParLevel3InputTypeDTO!! $
ParLevel3InputType!!% 7
{!!8 9
get!!: =
;!!= >
set!!? B
;!!B C
}!!D E
public"" !
ParMeasurementUnitDTO"" $
ParMeasurementUnit""% 7
{""8 9
get"": =
;""= >
set""? B
;""B C
}""D E
public$$ 
void$$ $
preparaParaInsertEmBanco$$ ,
($$, -
)$$- .
{%% 	
if&& 
(&& !
ParLevel3InputType_Id&& %
==&&& (
$num&&) *
||&&+ -!
ParLevel3InputType_Id&&. C
==&&D F
$num&&G H
||&&I K!
ParLevel3InputType_Id&&L a
==&&b d
$num&&e f
)&&f g
{'' !
ParLevel3BoolFalse_Id(( %
=((& '
null((( ,
;((, - 
ParLevel3BoolTrue_Id)) $
=))% &
null))' +
;))+ ,
}** 
if,, 
(,, !
ParLevel3InputType_Id,, %
==,,& (
$num,,) *
),,* +
{-- 
IntervalMax.. 
=.. 
$num.. 
;..  
IntervalMin// 
=// 
$num// 
;//  "
AcceptableValueBetween00 &
=00' (
null00) -
;00- .!
ParMeasurementUnit_Id11 %
=11& '
null11( ,
;11, -
}22 
if44 
(44 
!44 
string44 
.44 
IsNullOrEmpty44 %
(44% & 
IntervalMaxCalculado44& :
)44: ;
&&44< >
IntervalMax44? J
==44K M
$num44N O
)44O P
IntervalMax55 
=55 
Guard55 #
.55# $"
ConverteValorCalculado55$ :
(55: ; 
IntervalMaxCalculado55; O
)55O P
;55P Q
if77 
(77 
!77 
string77 
.77 
IsNullOrEmpty77 $
(77$ % 
IntervalMinCalculado77% 9
)779 :
&&77; =
IntervalMin77> I
==77J L
$num77M N
)77N O
IntervalMin88 
=88 
Guard88 #
.88# $"
ConverteValorCalculado88$ :
(88: ; 
IntervalMinCalculado88; O
)88O P
;88P Q
if:: 
(:: 
ParCompany_Id:: 
<=::  
$num::! "
)::" #
ParCompany_Id;; 
=;; 
null;;  $
;;;$ %
}== 	
public?? 
void?? 

PreparaGet?? 
(?? 
)??  
{@@ 	
ifAA 
(AA !
ParLevel3InputType_IdAA %
==AA& (
$numAA) *
)AA* +
{BB 
ifCC 
(CC 
IntervalMaxCC 
.CC  
HasValueCC  (
&&CC) +
IntervalMinCC, 7
.CC7 8
HasValueCC8 @
)CC@ A
{DD  
IntervalMinCalculadoEE (
=EE) *
GuardEE+ 0
.EE0 1"
ConverteValorCalculadoEE1 G
(EEG H
IntervalMinEEH S
.EES T
ValueEET Y
)EEY Z
;EEZ [ 
IntervalMaxCalculadoFF (
=FF) *
GuardFF+ 0
.FF0 1"
ConverteValorCalculadoFF1 G
(FFG H
IntervalMaxFFH S
.FFS T
ValueFFT Y
)FFY Z
;FFZ [
}GG 
}HH 
}II 	
}JJ 
}KK é
TC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3InputTypeDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class !
ParLevel3InputTypeDTO &
:' (

EntityBase) 3
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
} 
} ¦
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParSampleDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParSampleDTO 
: 

EntityBase  *
{ 
public 
Nullable 
< 
int 
> 
ParCompany_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public		 
int		 
ParLevel2_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
Number

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
} 
} «
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParEvaluation.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParEvaluationDTO !
:" #

EntityBase$ .
{ 
public 
Nullable 
< 
int 
> 
ParCompany_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public		 
int		 
ParLevel2_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
int

 
Number

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
} 
} 
\C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParNotConformityRuleXLevelDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class )
ParNotConformityRuleXLevelDTO .
:/ 0
NxN1 4
{ 
public 
int #
ParNotConformityRule_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
decimal		 
Value		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
Level

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
public 
int 
? 
ParLevel1_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
ParLevel2_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
ParLevel3_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
	IsReaudit 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
ParCompanyDTO 

parCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ParLevel1DTO 
	parLevel1 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel2DTO 
	parLevel2 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel3DTO 
	parLevel3 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public #
ParNotConformityRuleDTO & 
ParNotConformityRule' ;
{< =
get> A
;A B
setC F
;F G
}H I
} 
} ç
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParNotConformityRuleDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class #
ParNotConformityRuleDTO (
:) *

EntityBase+ 5
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Sufix 
{ 
get !
;! "
set# &
;& '
}( )
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
}

 
} *
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3DTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

 
ParLevel3DTO

 
:

 

EntityBase

  *
{ 
[ 	
Required	 
( $
ErrorMessageResourceName *
=+ ,
$str- >
,> ?$
ErrorMessageResourceType@ X
=Y Z
typeof[ a
(a b
Resourceb j
)j k
)k l
]l m
[ 	
	MinLength	 
( 
$num 
, $
ErrorMessageResourceName .
=/ 0
$str1 L
,L M$
ErrorMessageResourceTypeN f
=g h
typeofi o
(o p
Resourcep x
)x y
)y z
]z {
[ 	
	MaxLength	 
( 
$num 
, $
ErrorMessageResourceName 0
=1 2
$str3 O
,O P$
ErrorMessageResourceTypeQ i
=j k
typeofl r
(r s
Resources {
){ |
)| }
]} ~
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
	MinLength	 
( 
$num 
, $
ErrorMessageResourceName .
=/ 0
$str1 T
,T U$
ErrorMessageResourceTypeV n
=o p
typeofq w
(w x
Resource	x 
)
 
)
 
]
 
[ 	
	MaxLength	 
( 
$num 
, $
ErrorMessageResourceName 0
=1 2
$str3 X
,X Y$
ErrorMessageResourceTypeZ r
=s t
typeofu {
({ |
Resource	| 
)
 
)
 
]
 
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
bool 
IsPointLess 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
true0 4
;4 5
public 
bool 

hasVinculo 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
decimal 
pesoDoVinculo $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public   
virtual   
List   
<   
ParLevel3ValueDTO   -
>  - .
ParLevel3Value  / =
{  > ?
get  @ C
;  C D
set  E H
;  H I
}  J K
public!! 
List!! 
<!! 
ParLevel3GroupDTO!! %
>!!% &
listGroupsLevel2!!' 7
{!!8 9
get!!: =
;!!= >
set!!? B
;!!B C
}!!D E
public"" 
int"" 
?"" 
groupLevel2Selected"" '
;""' (
public## 
Nullable## 
<## 
int## 
>## 
OrderColumn## (
{##) *
get##+ .
;##. /
set##0 3
;##3 4
}##5 6
public%% 
List%% 
<%% 
ParRelapseDTO%% !
>%%! "
listParRelapseDto%%# 4
{%%5 6
get%%7 :
;%%: ;
set%%< ?
;%%? @
}%%A B
public&& 
List&& 
<&& 
int&& 
>&& 
removeReincidencia&& +
{&&, -
get&&. 1
;&&1 2
set&&3 6
;&&6 7
}&&8 9
public'' 
List'' 
<'' 
ParLevel3ValueDTO'' %
>''% &
listLevel3Value''' 6
{''7 8
get''9 <
;''< =
set''> A
;''A B
}''C D
public(( 
List(( 
<(( 
ParLevel3Level2DTO(( &
>((& '
listLevel3Level2((( 8
{((9 :
get((; >
;((> ?
set((@ C
;((C D
}((E F
public)) 
List)) 
<)) '
ParLevel3Value_OuterListDTO)) /
>))/ 0$
ParLevel3Value_OuterList))1 I
{))J K
get))L O
;))O P
set))Q T
;))T U
}))V W
public** 
IEnumerable** 
<** 
	IGrouping** $
<**$ %
int**% (
,**( )'
ParLevel3Value_OuterListDTO*** E
>**E F
>**F G+
ParLevel3Value_OuterListGrouped**H g
{**h i
get**j m
;**m n
set**o r
;**r s
}**t u
public++ 
bool++ 
AllowNA++ 
{++ 
get++ !
;++! "
set++# &
;++& '
}++( )
},, 
}-- Ø
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParCompanyDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParCompanyDTO 
:  

EntityBase! +
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
bool

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
=

+ ,
true

- 1
;

1 2
public 
string 
Initials 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
SIF 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
CompanyNumber  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
IPServer 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
DBServer 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
RolePerCompany $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
<  
ParCompanyClusterDTO (
>( )!
ListParCompanyCluster* ?
{@ A
getB E
;E F
setG J
;J K
}L M
public 
List 
< #
ParCompanyXStructureDTO +
>+ ,$
ListParCompanyXStructure- E
{F G
getH K
;K L
setM P
;P Q
}R S
} 
} 
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParRelapseDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParRelapseDTO 
:  

EntityBase! +
{ 
public 
int 
? 
ParLevel1_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
? 
ParLevel2_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
int		 
?		 
ParLevel3_Id		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
int

 
ParFrequency_Id

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
int 
NcNumber 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
EffectiveLength "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
ParFrequencyDTO 
parFrequency +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
ParLevel1DTO 
	parLevel1 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel2DTO 
	parLevel2 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
ParLevel3DTO 
	parLevel3 %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} Ì
JC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLocalDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParLocalDTO 
: 

EntityBase )
{ 
public 
int 
Level 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
} 
} ¤	
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel3GroupDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParLevel3GroupDTO "
:# $

EntityBase% /
{ 
public 
int 
ParLevel2_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
bool

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
=

+ ,
true

- 1
;

1 2
public 
ParLevel2DTO 
parLevel2Dto (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
} 
} ®
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel2DTO.cs
	namespace

 	
DTO


 
.

 
DTO

 
.

 
Params

 
{ 
public 

class 
ParLevel2DTO 
: 

EntityBase  *
{ 
public 
decimal $
pesoDoVinculoSelecionado /
;/ 0
public 
List 
< 
ParLevel3DTO  
>  !!
listaParLevel3Colleta" 7
;7 8
public 
List 
< 
int 
> &
listVinculoExistenLevel1Id 3
;3 4
public 
bool 
isVinculado 
{  !
get" %
;% &
set' *
;* +
}, -
public 
List 
< 
ParCounterXLocalDTO '
>' ( 
listParCounterXLocal) =
{> ?
get@ C
;C D
setE H
;H I
}J K
[ 	
Range	 
( 
$num 
, 
$num 
, $
ErrorMessageResourceName 6
=7 8
$str9 O
,O P$
ErrorMessageResourceTypeQ i
=j k
typeofl r
(r s
Resources {
){ |
)| }
]} ~
public 
int 
ParFrequency_Id "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Range	 
( 
$num 
, 
$num 
, $
ErrorMessageResourceName 6
=7 8
$str9 P
,P Q$
ErrorMessageResourceTypeR j
=k l
typeofm s
(s t
Resourcet |
)| }
)} ~
]~ 
public 
int 
ParDepartment_Id #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
( $
ErrorMessageResourceName *
=+ ,
$str- H
,H I$
ErrorMessageResourceTypeJ b
=c d
typeofe k
(k l
Resourcel t
)t u
)u v
]v w
[ 	
	MinLength	 
( 
$num 
, $
ErrorMessageResourceName .
=/ 0
$str1 M
,M N$
ErrorMessageResourceTypeO g
=h i
typeofj p
(p q
Resourceq y
)y z
)z {
]{ |
[   	
	MaxLength  	 
(   
$num   
,   $
ErrorMessageResourceName   0
=  1 2
$str  3 Q
,  Q R$
ErrorMessageResourceType  S k
=  l m
typeof  n t
(  t u
Resource  u }
)  } ~
)  ~ 
]	   
public!! 
string!! 
Name!! 
{!! 
get!!  
;!!  !
set!!" %
;!!% &
}!!' (
[&& 	
	MinLength&&	 
(&& 
$num&& 
,&& $
ErrorMessageResourceName&& .
=&&/ 0
$str&&1 T
,&&T U$
ErrorMessageResourceType&&V n
=&&o p
typeof&&q w
(&&w x
Resource	&&x 
)
&& 
)
&& 
]
&& 
['' 	
	MaxLength''	 
('' 
$num'' 
,'' $
ErrorMessageResourceName'' 0
=''1 2
$str''3 X
,''X Y$
ErrorMessageResourceType''Z r
=''s t
typeof''u {
(''{ |
Resource	''| 
)
'' 
)
'' 
]
'' 
public(( 
string(( 
Description(( !
{((" #
get(($ '
;((' (
set(() ,
;((, -
}((. /
public** 
bool** 
IsEmptyLevel3** !
{**" #
get**$ '
;**' (
set**) ,
;**, -
}**. /
public++ 
bool++ 
HasShowLevel03++ "
{++# $
get++% (
;++( )
set++* -
;++- .
}++/ 0
public,, 
bool,, 
HasGroupLevel3,, "
{,,# $
get,,% (
;,,( )
set,,* -
;,,- .
},,/ 0
public-- 
bool-- 
IsActive-- 
{-- 
get-- "
;--" #
set--$ '
;--' (
}--) *
=--+ ,
true--- 1
;--1 2
public// #
ParConsolidationTypeDTO// &#
parConsolidationTypeDto//' >
{//? @
get//A D
;//D E
set//F I
;//I J
}//K L
public00 
ParFrequencyDTO00 
parFrequencyDto00 .
{00/ 0
get001 4
;004 5
set006 9
;009 :
}00; <
public11 
List11 
<11 
ParLevel3Level2DTO11 &
>11& '"
listParLevel3Level2Dto11( >
{11? @
get11A D
;11D E
set11F I
;11I J
}11K L
public22 
List22 
<22 
ParRelapseDTO22 !
>22! "
listParRelapseDto22# 4
{225 6
get227 :
;22: ;
set22< ?
;22? @
}22A B
public33 
List33 
<33 
int33 
>33 
removeReincidencia33 +
{33, -
get33. 1
;331 2
set333 6
;336 7
}338 9
public77 
List77 
<77 
ParLevel3GroupDTO77 %
>77% &
ParLevel3Group77' 5
{776 7
get778 ;
;77; <
set77= @
;77@ A
}77B C
public88 
ParEvaluationDTO88 
ParamEvaluation88  /
{880 1
get882 5
;885 6
set887 :
;88: ;
}88< =
public99 
ParSampleDTO99 
ParamSample99 '
{99( )
get99* -
;99- .
set99/ 2
;992 3
}994 5
public:: 
bool:: 
HasSampleTotal:: "
{::# $
get::% (
;::( )
set::* -
;::- .
}::/ 0
public>> 
IEnumerable>> 
<>> 
SelectListItem>> )
>>>) *
DdlLevel3Vinculados>>+ >
{>>? @
get>>A D
;>>D E
set>>F I
;>>I J
}>>K L
public@@ 
void@@ 4
(CreateSelectListParamsViewModelListLevel@@ <
(@@< =
List@@= A
<@@A B
ParLevel3DTO@@B N
>@@N O

listLevel3@@P Z
,@@Z [
List@@\ `
<@@` a
ParLevel3Level2DTO@@a s
>@@s t#
listParLevel3Level2Dto	@@u 
)
@@ 
{AA 	
ListBB 
<BB 
SelectListItemBB 
>BB  
retornoBB! (
=BB) *
newBB+ .
ListBB/ 3
<BB3 4
SelectListItemBB4 B
>BBB C
(BBC D
)BBD E
;BBE F
retornoCC 
.CC 
InsertCC 
(CC 
$numCC 
,CC 
newCC !
SelectListItemCC" 0
(CC0 1
)CC1 2
{CC3 4
TextCC5 9
=CC: ;
GlobalConfigCC< H
.CCH I
PrimeiraOptionCCI W
,CCW X
ValueCCY ^
=CC_ `
$strCCa e
}CCf g
)CCg h
;CCh i
varDD 
counterDD 
=DD 
$numDD 
;DD 
varFF 
groupFF 
=FF 
newFF 
SelectListGroupFF +
(FF+ ,
)FF, -
{FF. /
NameFF0 4
=FF5 6
(FF7 8
GlobalConfigFF8 D
.FFD E
EuaFFE H
||FFI K
GlobalConfigFFL X
.FFX Y
CanadaFFY _
)FF_ `
?FFa b
$strFFc m
:FFn o
$str	FFp 
}
FF 
;
FF 
varGG 
groupSelecionadoGG  
=GG! "
newGG# &
SelectListGroupGG' 6
(GG6 7
)GG7 8
;GG8 9
foreachII 
(II 
varII 
iII 
inII 

listLevel3II (
)II( )
{JJ 
varLL 
textLL 
=LL 
iLL 
.LL 
NameLL !
;LL! "
varMM 
propMM 
=MM 
iMM 
.MM 
IdMM 
;MM  
varNN 
optNN 
=NN 
newNN 
SelectListItemNN ,
(NN, -
)NN- .
{NN/ 0
TextNN1 5
=NN6 7
iNN8 9
.NN9 :
IdNN: <
.NN< =
ToStringNN= E
(NNE F
)NNF G
+NNH I
$strNNJ O
+NNP Q
iNNR S
.NNS T
NameNNT X
,NNX Y
ValueNNZ _
=NN` a
iNNb c
.NNc d
IdNNd f
.NNf g
ToStringNNg o
(NNo p
)NNp q
}NNr s
;NNs t
ifOO 
(OO "
listParLevel3Level2DtoOO *
.OO* +
WhereOO+ 0
(OO0 1
rOO1 2
=>OO3 5
rOO6 7
.OO7 8
ParLevel3_IdOO8 D
==OOE G
iOOH I
.OOI J
IdOOJ L
)OOL M
.OOM N
CountOON S
(OOS T
)OOT U
>OOV W
$numOOX Y
)OOY Z
{PP 
groupSelecionadoQQ $
.QQ$ %
NameQQ% )
=QQ* +
(QQ, -
GlobalConfigQQ- 9
.QQ9 :
EuaQQ: =
||QQ> @
GlobalConfigQQA M
.QQM N
CanadaQQN T
)QQT U
?QQV W
$strQQX `
:QQa b
$strQQc o
;QQo p
optRR 
.RR 
GroupRR 
=RR 
groupSelecionadoRR  0
;RR0 1
retornoSS 
.SS 
InsertSS "
(SS" #
counterSS# *
,SS* +
optSS, /
)SS/ 0
;SS0 1
counterTT 
++TT 
;TT 
}UU 
}WW 
foreachYY 
(YY 
varYY 
iYY 
inYY 

listLevel3YY (
)YY( )
{ZZ 
var\\ 
text\\ 
=\\ 
i\\ 
.\\ 
Name\\ !
;\\! "
var]] 
prop]] 
=]] 
i]] 
.]] 
Id]] 
;]]  
var^^ 
opt^^ 
=^^ 
new^^ 
SelectListItem^^ ,
(^^, -
)^^- .
{^^/ 0
Text^^1 5
=^^6 7
i^^8 9
.^^9 :
Id^^: <
.^^< =
ToString^^= E
(^^E F
)^^F G
+^^H I
$str^^J O
+^^P Q
i^^R S
.^^S T
Name^^T X
,^^X Y
Value^^Z _
=^^` a
i^^b c
.^^c d
Id^^d f
.^^f g
ToString^^g o
(^^o p
)^^p q
}^^r s
;^^s t
if__ 
(__ "
listParLevel3Level2Dto__ *
.__* +
Where__+ 0
(__0 1
r__1 2
=>__3 5
r__6 7
.__7 8
ParLevel3_Id__8 D
==__E G
i__H I
.__I J
Id__J L
)__L M
.__M N
Count__N S
(__S T
)__T U
==__V X
$num__Y Z
)__Z [
{`` 
optaa 
.aa 
Groupaa 
=aa 
groupaa  %
;aa% &
retornobb 
.bb 
Insertbb "
(bb" #
counterbb# *
,bb* +
optbb, /
)bb/ 0
;bb0 1
countercc 
++cc 
;cc 
}dd 
}ff 
DdlLevel3Vinculadoshh 
=hh  !
retornohh" )
;hh) *
}ii 	
publicjj 
Listjj 
<jj )
ParNotConformityRuleXLevelDTOjj 1
>jj1 2-
!listParNotConformityRuleXLevelDtojj3 T
{jjU V
getjjW Z
;jjZ [
setjj\ _
;jj_ `
}jja b
publickk 
Listkk 
<kk 
ParLevel3GroupDTOkk %
>kk% &!
listParLevel3GroupDtokk' <
{kk= >
getkk? B
;kkB C
setkkD G
;kkG H
}kkI J
publicll 
Listll 
<ll (
ParLevel2SampleEvaluationDTOll 0
>ll0 1,
 listParLevel2SampleEvaluationDTOll2 R
{llS T
getllU X
;llX Y
setllZ ]
;ll] ^
}ll_ `
publicnn 
Listnn 
<nn 
ParSampleDTOnn  
>nn  !

listSamplenn" ,
{nn- .
getnn/ 2
;nn2 3
setnn4 7
;nn7 8
}nn9 :
publicoo 
Listoo 
<oo 
ParEvaluationDTOoo $
>oo$ %
listEvaluationoo& 4
{oo5 6
getoo7 :
;oo: ;
setoo< ?
;oo? @
}ooA B
publicpp 
Listpp 
<pp $
ParLevel1XHeaderFieldDTOpp ,
>pp, -
cabecalhosInclusospp. @
{ppA B
getppC F
;ppF G
setppH K
;ppK L
}ppM N
publicqq 
Listqq 
<qq $
ParLevel2XHeaderFieldDTOqq ,
>qq, -
cabecalhosExclusosqq. @
{qqA B
getqqC F
;qqF G
setqqH K
;qqK L
}qqM N
publicss 
voidss %
CriaListaSampleEvaluationss -
(ss- .
)ss. /
{tt 	

listSampleuu 
=uu 
newuu 
Listuu !
<uu! "
ParSampleDTOuu" .
>uu. /
(uu/ 0
)uu0 1
;uu1 2
listEvaluationvv 
=vv 
newvv  
Listvv! %
<vv% &
ParEvaluationDTOvv& 6
>vv6 7
(vv7 8
)vv8 9
;vv9 :
if
 
(
 .
 listParLevel2SampleEvaluationDTO
 0
!=
1 3
null
4 8
)
8 9
foreach
 
(
 
var
 
i
 
in
 !.
 listParLevel2SampleEvaluationDTO
" B
)
B C
{
 
var
 
sample
 
=
  
new
! $
ParSampleDTO
% 1
(
1 2
)
2 3
{
 
Number
 
=
  
i
! "
.
" #
sampleNumber
# /
,
/ 0
Id
 
=
 
i
 
.
 
sampleId
 '
??
( *
$num
+ ,
,
, -
IsActive
  
=
! "
i
# $
.
$ %
IsActive
% -
}
 
;
 
var
 

evaluation
 "
=
# $
new
% (
ParEvaluationDTO
) 9
(
9 :
)
: ;
{
 
Number
 
=
  
i
! "
.
" #
evaluationNumber
# 3
,
3 4
Id
 
=
 
i
 
.
 
evaluationId
 +
??
, .
$num
/ 0
,
0 1
IsActive
  
=
! "
i
# $
.
$ %
IsActive
% -
}
 
;
 
if
 
(
 
i
 
.
 
	companyId
 #
>
$ %
$num
& '
)
' (
{
 
sample
 
.
 
ParCompany_Id
 ,
=
- .
i
/ 0
.
0 1
	companyId
1 :
;
: ;

evaluation
 "
.
" #
ParCompany_Id
# 0
=
1 2
i
3 4
.
4 5
	companyId
5 >
;
> ?
}
 

listSample
 
.
 
Add
 "
(
" #
sample
# )
)
) *
;
* +
listEvaluation
 "
.
" #
Add
# &
(
& '

evaluation
' 1
)
1 2
;
2 3
}
 
}
 	
public
 
void
 +
RecuperaListaSampleEvaluation
 1
(
1 2
)
2 3
{
 	.
 listParLevel2SampleEvaluationDTO
 ,
=
- .
new
/ 2
List
3 7
<
7 8*
ParLevel2SampleEvaluationDTO
8 T
>
T U
(
U V
)
V W
;
W X
if
   
(
   
listEvaluation
   
!=
   !
null
  " &
)
  & '
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
i
¡¡ 
in
¡¡ !
listEvaluation
¡¡" 0
)
¡¡0 1
{
¢¢ 
var
££ 
coiso
££ 
=
££ 
new
££  #*
ParLevel2SampleEvaluationDTO
££$ @
(
££@ A
)
££A B
;
££B C
coiso
¤¤ 
.
¤¤ 
evaluationId
¤¤ &
=
¤¤' (
i
¤¤) *
.
¤¤* +
Id
¤¤+ -
;
¤¤- .
coiso
¥¥ 
.
¥¥ 
evaluationNumber
¥¥ *
=
¥¥+ ,
i
¥¥- .
.
¥¥. /
Number
¥¥/ 5
;
¥¥5 6
var
§§ 
sample
§§ 
=
§§  

listSample
§§! +
.
§§+ ,
FirstOrDefault
§§, :
(
§§: ;
r
§§; <
=>
§§= ?
r
§§@ A
.
§§A B
ParCompany_Id
§§B O
==
§§P R
i
§§S T
.
§§T U
ParCompany_Id
§§U b
)
§§b c
;
§§c d
if
¨¨ 
(
¨¨ 
sample
¨¨ 
!=
¨¨ !
null
¨¨" &
)
¨¨& '
{
©© 
coiso
ªª 
.
ªª 
sampleId
ªª &
=
ªª' (
sample
ªª) /
.
ªª/ 0
Id
ªª0 2
;
ªª2 3
coiso
«« 
.
«« 
sampleNumber
«« *
=
««+ ,
sample
««- 3
.
««3 4
Number
««4 :
;
««: ;
}
¬¬ 
else
­­ 
{
®® 
coiso
¯¯ 
.
¯¯ 
sampleId
¯¯ &
=
¯¯' (
$num
¯¯) *
;
¯¯* +
coiso
°° 
.
°° 
sampleNumber
°° *
=
°°+ ,
listEvaluation
°°- ;
.
°°; <
FirstOrDefault
°°< J
(
°°J K
r
°°K L
=>
°°M O
r
°°P Q
.
°°Q R
ParCompany_Id
°°R _
==
°°` b
null
°°c g
)
°°g h
.
°°h i
Number
°°i o
;
°°o p
}
±± 
coiso
³³ 
.
³³ 
IsActive
³³ "
=
³³# $
i
³³% &
.
³³& '
IsActive
³³' /
;
³³/ 0
coiso
´´ 
.
´´ 
Id
´´ 
=
´´ 
$num
´´  
;
´´  !
if
µµ 
(
µµ 
i
µµ 
.
µµ 
ParCompany_Id
µµ '
!=
µµ( *
null
µµ+ /
&&
µµ0 2
i
µµ3 4
.
µµ4 5
ParCompany_Id
µµ5 B
>
µµC D
$num
µµE F
)
µµF G
coiso
¶¶ 
.
¶¶ 
	companyId
¶¶ '
=
¶¶( )
i
¶¶* +
.
¶¶+ ,
ParCompany_Id
¶¶, 9
;
¶¶9 :.
 listParLevel2SampleEvaluationDTO
¸¸ 4
.
¸¸4 5
Add
¸¸5 8
(
¸¸8 9
coiso
¸¸9 >
)
¸¸> ?
;
¸¸? @
}
ºº 
}
¼¼ 	
public
¾¾ 
void
¾¾  
RegrasParamsLevel1
¾¾ &
(
¾¾& '
ParLevel1DTO
¾¾' 3
	parLevel1
¾¾4 =
)
¾¾= >
{
¿¿ 	
if
ÀÀ 
(
ÀÀ 
	parLevel1
ÀÀ 
.
ÀÀ 

IsSpecific
ÀÀ $
)
ÀÀ$ %
{
ÁÁ 2
$_PermiteCadastroEspecificoPorUnidade
ÂÂ 4
=
ÂÂ5 6
	parLevel1
ÂÂ7 @
.
ÂÂ@ A

IsSpecific
ÂÂA K
;
ÂÂK L+
_PermiteEditarCamposCabecalho
ÃÃ -
=
ÃÃ. /
	parLevel1
ÃÃ0 9
.
ÃÃ9 :#
IsSpecificHeaderField
ÃÃ: O
;
ÃÃO P&
_PermiteEditarNumeroDeAv
ÄÄ (
=
ÄÄ) *
	parLevel1
ÄÄ+ 4
.
ÄÄ4 5(
IsSpecificNumberEvaluetion
ÄÄ5 O
||
ÄÄP R
	parLevel1
ÄÄS \
.
ÄÄ\ ]$
IsSpecificNumberSample
ÄÄ] s
?
ÄÄt u
true
ÄÄv z
:
ÄÄ{ |
falseÄÄ} 
;ÄÄ ,
_PermiteEditarVinculoComTarefa
ÅÅ .
=
ÅÅ/ 0
	parLevel1
ÅÅ1 :
.
ÅÅ: ;
IsSpecificLevel3
ÅÅ; K
;
ÅÅK L
}
ÆÆ 
}
ÇÇ 	
public
ÉÉ 
bool
ÉÉ 2
$_PermiteCadastroEspecificoPorUnidade
ÉÉ 8
{
ÉÉ9 :
get
ÉÉ; >
;
ÉÉ> ?
set
ÉÉ@ C
;
ÉÉC D
}
ÉÉE F
public
ÊÊ 
bool
ÊÊ +
_PermiteEditarCamposCabecalho
ÊÊ 1
{
ÊÊ2 3
get
ÊÊ4 7
;
ÊÊ7 8
set
ÊÊ9 <
;
ÊÊ< =
}
ÊÊ> ?
public
ËË 
bool
ËË &
_PermiteEditarNumeroDeAv
ËË ,
{
ËË- .
get
ËË/ 2
;
ËË2 3
set
ËË4 7
;
ËË7 8
}
ËË9 :
public
ÌÌ 
bool
ÌÌ &
_PermiteEditarNumeroDeAm
ÌÌ ,
{
ÌÌ- .
get
ÌÌ/ 2
;
ÌÌ2 3
set
ÌÌ4 7
;
ÌÌ7 8
}
ÌÌ9 :
public
ÍÍ 
bool
ÍÍ ,
_PermiteEditarVinculoComTarefa
ÍÍ 2
{
ÍÍ3 4
get
ÍÍ5 8
;
ÍÍ8 9
set
ÍÍ: =
;
ÍÍ= >
}
ÍÍ? @
public
ÎÎ 
bool
ÎÎ 4
&_PermiteEditarMetaDoIndicadorComTarefa
ÎÎ :
{
ÎÎ; <
get
ÎÎ= @
;
ÎÎ@ A
set
ÎÎB E
;
ÎÎE F
}
ÎÎG H
}
ÑÑ 
}ÒÒ ·
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevelDefinitonDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class  
ParLevelDefinitonDTO %
:& '

EntityBase( 2
{ 
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
} 
} ­
NC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParScoreTypeDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParScoreTypeDTO  
:! "

EntityBase# -
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} Û

NC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParStructureDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

 
ParStructureDTO

  
:

! "

EntityBase

# -
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int !
ParStructureParent_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
int  
ParStructureGroup_Id '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public  
ParStructureGroupDTO #
ParStructureGroup$ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} Å	
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParStructureGroupDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{		 
public

 

class

  
ParStructureGroupDTO

 %
:

& '

EntityBase

( 2
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int &
ParStructureGroupParent_Id -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public  
ParStructureGroupDTO #
ParStructureGroup$ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} ´
MC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ParCompanyXUserSgqDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class !
ParCompanyXUserSgqDTO &
:' (

EntityBase) 3
{ 
public 
int 

UserSgq_Id 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
int		 
ParCompany_Id		  
{		! "
get		# &
;		& '
set		( +
;		+ ,
}		- .
public

 
string

 
Role

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
ParCompanyDTO 

ParCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} Ì
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\PeriodDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
	PeriodDTO 
: 

EntityBase '
{ 
[		 	

DataMember			 
]		 
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
Name 
{ 
get  
{! "
return# )
$str* 3
+4 5
Description6 A
;A B
}C D
}E F
public 
void 
ValidaPeriodDTO #
(# $
)$ %
{ 	
ValidaBaseEntity 
( 
) 
; 
string 
DescValidated  
;  !
Guard 
. 
CheckStringFull !
(! "
retorno" )
:) *
out+ .
DescValidated/ <
,< =
propName> F
:F G
$strH U
,U V
	requeridoW `
:` a
trueb f
,f g
valueh m
:m n
Descriptiono z
)z {
;{ |
Description 
= 
DescValidated '
;' (
} 	
} 
} »
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ExampleDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

ExampleDTO 
: 

EntityBase (
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
string

 
SelectedElement

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
public 
void 
IsValid 
( 
) 
{ 	
if 
( 
Guard 
. !
VerifyStringNullValue +
(+ ,
Name, 0
)0 1
)1 2
{ 
var 
nameValidado  
=! "
$str# %
;% &
Guard 
. 
CheckStringFull %
(% &
out& )
nameValidado* 6
,6 7
$str8 >
,> ?
Name@ D
,D E
$strF `
,` a
trueb f
)f g
;g h
Name 
= 
nameValidado #
;# $
} 
if 
( 
Guard 
. !
VerifyStringNullValue +
(+ ,
Name, 0
)0 1
)1 2
{ 
var 
desc 
= 
$str 
; 
Guard 
. 
CheckStringFull %
(% &
out& )
desc* .
,. /
$str0 6
,6 7
Description8 C
,C D
$strE _
,_ `
truea e
)e f
;f g
Name 
= 
desc 
; 
} 
Guard 
. 
ForNegative 
( 
Guard #
.# $
ConverteValor$ 1
<1 2
int2 5
>5 6
(6 7
SelectedElement7 F
,F G
$strH Z
)Z [
,[ \
$str] k
)k l
;l m
} 	
} 
}   ð
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParClusterDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParClusterDTO 
:  

EntityBase! +
{ 
public 
int 
ParClusterGroup_Id %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
int

 
ParClusterParent_Id

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} Ú
QC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParClusterGroupDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParClusterGroupDTO #
:$ %

EntityBase& 0
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
int		 $
ParClusterGroupParent_Id		 +
{		, -
get		. 1
;		1 2
set		3 6
;		6 7
}		8 9
public

 
bool

 
Active

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
} 
} ¬
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParHeaderFieldDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public		 

class		 
ParHeaderFieldDTO		 "
:		# $

EntityBase		% /
{

 
public 
int 
? 
ParFieldType_Id #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
$str2 5
;5 6
public 
int !
ParLevelDefinition_Id (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
bool  
LinkNumberEvaluetion (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
DefaultOption #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
Nullable 
< 
bool 
> 

IsRequired (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
List 
<  
ParMultipleValuesDTO (
>( ) 
parMultipleValuesDto* >
{? @
getA D
;D E
setF I
;I J
}K L
public 
List 
<  
ParMultipleValuesDTO (
>( )
ParMultipleValues* ;
{< =
get> A
;A B
setC F
;F G
}H I
public  
ParLevelDefinitonDTO #
ParLevelDefiniton$ 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
ParFieldTypeDTO 
ParFieldType +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
IEnumerable 
< 
SelectListItem )
>) *
_DropDownList+ 8
;8 9
public!! 
IEnumerable!! 
<!! 
SelectListItem!! )
>!!) *
DropDownList!!+ 7
{"" 	
get## 
{$$ 
if%% 
(%% 
ParMultipleValues%% %
==%%& (
null%%) -
)%%- .
return&& 
_DropDownList&& (
;&&( )
else'' 
return(( 
Guard((  
.((  !
CreateDropDownList((! 3
(((3 4
ParMultipleValues((4 E
)((E F
;((F G
})) 
set** 
{++ 
DropDownList,, 
=,, 
value,, $
;,,$ %
}-- 
}.. 	
}11 
}22 ½
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParConsolidationTypeDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class #
ParConsolidationTypeDTO (
:) *

EntityBase+ 5
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
} 
} ­
NC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParFieldTypeDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParFieldTypeDTO  
:! "

EntityBase# -
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} 	
IC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParGoalDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 

ParGoalDTO 
: 

EntityBase (
{ 
public 
int 
ParLevel1_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
ParCompany_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
decimal		 
PercentValue		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
bool

 
IsActive

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
=

+ ,
true

- 1
;

1 2
public 
ParCompanyDTO 

ParCompany '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} è
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel1XClusterDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class  
ParLevel1XClusterDTO %
:& '

EntityBase( 2
{ 
public		 
int		 
ParLevel1_Id		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
[

 	
Required

	 
]

 
public 
int 
ParCluster_Id  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
decimal 
Points 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
Nullable 
< 
int 
> 
ParCriticalLevel_Id 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
ParClusterDTO 

ParCluster '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
ParCriticalLevelDTO "
ParCriticalLevel# 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
} 
} ª§
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel1DTO.cs
	namespace

 	
DTO


 
.

 
DTO

 
.

 
Params

 
{ 
public 

class 
ParLevel1DTO 
: 

EntityBase  *
{ 
public 
bool 
AllowAddLevel3 "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
bool #
AllowEditWeightOnLevel3 +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
bool &
AllowEditPatternLevel3Task .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
List 
< 
ParLevel2DTO  
>  ! 
listParLevel2Colleta" 6
;6 7
[ 	
Range	 
( 
$num 
, 
$num 
, $
ErrorMessageResourceName 6
=7 8
$str9 Y
,Y Z$
ErrorMessageResourceType[ s
=t u
typeofv |
(| }
Resource	} 
)
 
)
 
]
 
public 
int #
ParConsolidationType_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
[ 	
Range	 
( 
$num 
, 
$num 
, $
ErrorMessageResourceName 6
=7 8
$str9 O
,O P$
ErrorMessageResourceTypeQ i
=j k
typeofl r
(r s
Resources {
){ |
)| }
]} ~
public 
int 
ParFrequency_Id "
{# $
get% (
;( )
set* -
;- .
}/ 0
[## 	
	MinLength##	 
(## 
$num## 
,## $
ErrorMessageResourceName## .
=##/ 0
$str##1 M
,##M N$
ErrorMessageResourceType##O g
=##h i
typeof##j p
(##p q
Resource##q y
)##y z
)##z {
]##{ |
[$$ 	
	MaxLength$$	 
($$ 
$num$$ 
,$$ $
ErrorMessageResourceName$$ 0
=$$1 2
$str$$3 Q
,$$Q R$
ErrorMessageResourceType$$S k
=$$l m
typeof$$n t
($$t u
Resource$$u }
)$$} ~
)$$~ 
]	$$ 
public%% 
string%% 
Name%% 
{%% 
get%%  
;%%  !
set%%" %
;%%% &
}%%' (
[++ 	
Required++	 
(++ $
ErrorMessageResourceName++ *
=+++ ,
$str++- O
,++O P$
ErrorMessageResourceType++Q i
=++j k
typeof++l r
(++r s
Resource++s {
)++{ |
)++| }
]++} ~
[,, 	
	MinLength,,	 
(,, 
$num,, 
,,, $
ErrorMessageResourceName,, .
=,,/ 0
$str,,1 T
,,,T U$
ErrorMessageResourceType,,V n
=,,o p
typeof,,q w
(,,w x
Resource	,,x 
)
,, 
)
,, 
]
,, 
[-- 	
	MaxLength--	 
(-- 
$num-- 
,-- $
ErrorMessageResourceName-- 0
=--1 2
$str--3 X
,--X Y$
ErrorMessageResourceType--Z r
=--s t
typeof--u {
(--{ |
Resource	--| 
)
-- 
)
-- 
]
-- 
public.. 
string.. 
Description.. !
{.." #
get..$ '
;..' (
set..) ,
;.., -
}... /
public11 
bool11 
HasSaveLevel211 !
{11" #
get11$ '
;11' (
set11) ,
;11, -
}11. /
public44 
bool44 !
HasNoApplicableLevel244 )
{44* +
get44, /
;44/ 0
set441 4
;444 5
}446 7
public77 
bool77 
HasGroupLevel277 "
{77# $
get77% (
;77( )
set77* -
;77- .
}77/ 0
public:: 
bool:: 
HasAlert:: 
{:: 
get:: "
;::" #
set::$ '
;::' (
}::) *
public== 
bool== 

IsSpecific== 
{==  
get==! $
;==$ %
set==& )
;==) *
}==+ ,
public@@ 
bool@@ !
IsSpecificHeaderField@@ )
{@@* +
get@@, /
;@@/ 0
set@@1 4
;@@4 5
}@@6 7
publicCC 
boolCC &
IsSpecificNumberEvaluetionCC .
{CC/ 0
getCC1 4
;CC4 5
setCC6 9
;CC9 :
}CC; <
publicFF 
boolFF "
IsSpecificNumberSampleFF *
{FF+ ,
getFF- 0
;FF0 1
setFF2 5
;FF5 6
}FF7 8
publicII 
boolII 
IsSpecificLevel3II $
{II% &
getII' *
;II* +
setII, /
;II/ 0
}II1 2
publicLL 
boolLL 
IsSpecificGoalLL "
{LL# $
getLL% (
;LL( )
setLL* -
;LL- .
}LL/ 0
publicOO 
boolOO 
IsRuleConformityOO $
{OO% &
getOO' *
;OO* +
setOO, /
;OO/ 0
}OO1 2
publicRR 
boolRR #
IsFixedEvaluetionNumberRR +
{RR, -
getRR. 1
;RR1 2
setRR3 6
;RR6 7
}RR8 9
publicUU 
boolUU %
IsLimitedEvaluetionNumberUU -
{UU. /
getUU0 3
;UU3 4
setUU5 8
;UU8 9
}UU: ;
publicWW 
boolWW 
IsRecravacaoWW  
{WW! "
getWW# &
;WW& '
setWW( +
;WW+ ,
}WW- .
publicZZ 
boolZZ 
IsActiveZZ 
{ZZ 
getZZ "
;ZZ" #
setZZ$ '
;ZZ' (
}ZZ) *
=ZZ+ ,
trueZZ- 1
;ZZ1 2
public\\ 
bool\\ 
ShowInTablet\\  
{\\! "
get\\# &
;\\& '
set\\( +
;\\+ ,
}\\- .
=\\/ 0
true\\1 5
;\\5 6
public^^ 
bool^^ 
IsPartialSave^^ !
{^^" #
get^^$ '
;^^' (
set^^) ,
;^^, -
}^^. /
=^^0 1
false^^2 7
;^^7 8
public`` 
bool`` %
haveRealTimeConsolidation`` -
{``. /
get``0 3
;``3 4
set``5 8
;``8 9
}``: ;
publicaa 
boolaa !
HasCompleteEvaluationaa )
{aa* +
getaa, /
;aa/ 0
setaa1 4
;aa4 5
}aa6 7
publicbb 
boolbb 

EditLevel2bb 
{bb  
getbb! $
;bb$ %
setbb& )
;bb) *
}bb+ ,
publiccc 
Nullablecc 
<cc 
intcc 
>cc '
RealTimeConsolitationUpdatecc 8
{cc9 :
getcc; >
;cc> ?
setcc@ C
;ccC D
}ccE F
publicee 
boolee 

IsChildrenee 
{ee  
getee! $
;ee$ %
setee& )
;ee) *
}ee+ ,
privategg 
Nullablegg 
<gg 
intgg 
>gg 
parLevel1Origin_Idgg 0
;gg0 1
publichh 
Nullablehh 
<hh 
inthh 
>hh 
ParLevel1Origin_Idhh /
{ii 	
getjj 
{kk 
ifll 
(ll 

IsChildrenll 
)ll 
returnmm 
parLevel1Origin_Idmm -
;mm- .
elsenn 
returnoo 
nulloo 
;oo  
}pp 
setqq 
{rr 
parLevel1Origin_Idss "
=ss# $
valuess% *
;ss* +
}tt 
}uu 	
privatevv 
boolvv 
pointsDestinyvv "
;vv" #
publicww 
boolww 
PointsDestinyww !
{xx 	
getyy 
{zz 
if{{ 
({{ 

IsChildren{{ 
){{ 
return|| 
pointsDestiny|| (
;||( )
else}} 
return~~ 
false~~  
;~~  !
} 
set
 
{
 
pointsDestiny
 
=
 
value
  %
;
% &
}
 
}
 	
private
 
Nullable
 
<
 
int
 
>
 !
parLevel1Destiny_Id
 1
;
1 2
public
 
Nullable
 
<
 
int
 
>
 !
ParLevel1Destiny_Id
 0
{
 	
get
 
{
 
if
 
(
 

IsChildren
 
)
 
return
 !
parLevel1Destiny_Id
 .
;
. /
else
 
return
 
null
 
;
  
}
 
set
 
{
 !
parLevel1Destiny_Id
 #
=
$ %
value
& +
;
+ ,
}
 
}
 	
public
 
List
 
<
 (
ParLevel2ControlCompanyDTO
 .
>
. /'
listLevel2CorporativosObj
0 I
{
J K
get
L O
;
O P
set
Q T
;
T U
}
V W
public
 
ParFrequencyDTO
 
parFrequencyDto
 .
{
/ 0
get
1 4
;
4 5
set
6 9
;
9 :
}
; <
public
 %
ParConsolidationTypeDTO
 &%
parConsolidationTypeDto
' >
{
? @
get
A D
;
D E
set
F I
;
I J
}
K L
public
 +
ParNotConformityRuleXLevelDTO
 ,+
parNotConformityRuleXLevelDto
- J
{
K L
get
M P
;
P Q
set
R U
;
U V
}
W X
public
 
List
 
<
 &
ParLevel1XHeaderFieldDTO
 ,
>
, -%
parLevel1HeaderFieldDto
. E
{
F G
get
H K
;
K L
set
M P
;
P Q
}
R S
public
 
List
 
<
 +
ParNotConformityRuleXLevelDTO
 1
>
1 2/
!listParNotConformityRuleXLevelDto
3 T
{
U V
get
W Z
;
Z [
set
\ _
;
_ `
}
a b
public
   
List
   
<
   &
ParLevel1XHeaderFieldDTO
   ,
>
  , - 
cabecalhosInclusos
  . @
{
  A B
get
  C F
;
  F G
set
  H K
;
  K L
}
  M N
public
¢¢ 
List
¢¢ 
<
¢¢ !
ParCounterXLocalDTO
¢¢ '
>
¢¢' (!
contadoresIncluidos
¢¢) <
{
¢¢= >
get
¢¢? B
;
¢¢B C
set
¢¢D G
;
¢¢G H
}
¢¢I J
public
££ 
List
££ 
<
££ 
ParRelapseDTO
££ !
>
££! "
listParRelapseDto
££# 4
{
££5 6
get
££7 :
;
££: ;
set
££< ?
;
££? @
}
££A B
public
¦¦ 
List
¦¦ 
<
¦¦ "
ParLevel1XClusterDTO
¦¦ (
>
¦¦( )#
listLevel1XClusterDto
¦¦* ?
{
¦¦@ A
get
¦¦B E
;
¦¦E F
set
¦¦G J
;
¦¦J K
}
¦¦L M
public
§§ 
List
§§ 
<
§§ &
ParLevel3Level2Level1DTO
§§ ,
>
§§, -*
listParLevel3Level2Level1Dto
§§. J
{
§§K L
get
§§M P
;
§§P Q
set
§§R U
;
§§U V
}
§§W X
public
¨¨ 
List
¨¨ 
<
¨¨ !
ParCounterXLocalDTO
¨¨ '
>
¨¨' ("
listParCounterXLocal
¨¨) =
{
¨¨> ?
get
¨¨@ C
;
¨¨C D
set
¨¨E H
;
¨¨H I
}
¨¨J K
public
©© 
List
©© 
<
©© 

ParGoalDTO
©© 
>
©© 
listParGoalLevel1
©©  1
{
©©2 3
get
©©4 7
;
©©7 8
set
©©9 <
;
©©< =
}
©©> ?
public
«« 
IEnumerable
«« 
<
«« 
SelectListItem
«« )
>
««) *!
DdlLevel2Vinculados
««+ >
{
««? @
get
««A D
;
««D E
set
««F I
;
««I J
}
««K L
public
­­ 
void
­­ 6
(CreateSelectListParamsViewModelListLevel
­­ <
(
­­< =
List
­­= A
<
­­A B
ParLevel2DTO
­­B N
>
­­N O

listLevel2
­­P Z
,
­­Z [
List
­­\ `
<
­­` a&
ParLevel3Level2Level1DTO
­­a y
>
­­y z+
listParLevel3Level2Level1Dto­­{ 
)­­ 
{
®® 	
List
°° 
<
°° 
SelectListItem
°° 
>
°°  
retorno
°°! (
=
°°) *
new
°°+ .
List
°°/ 3
<
°°3 4
SelectListItem
°°4 B
>
°°B C
(
°°C D
)
°°D E
;
°°E F
retorno
±± 
.
±± 
Insert
±± 
(
±± 
$num
±± 
,
±± 
new
±± !
SelectListItem
±±" 0
(
±±0 1
)
±±1 2
{
±±3 4
Text
±±5 9
=
±±: ;
GlobalConfig
±±< H
.
±±H I
PrimeiraOption
±±I W
,
±±W X
Value
±±Y ^
=
±±_ `
$str
±±a e
}
±±f g
)
±±g h
;
±±h i
var
²² 
counter
²² 
=
²² 
$num
²² 
;
²² 
var
µµ 
group
µµ 
=
µµ 
new
µµ 
SelectListGroup
µµ +
(
µµ+ ,
)
µµ, -
{
µµ. /
Name
µµ0 4
=
µµ5 6
(
µµ7 8
GlobalConfig
µµ8 D
.
µµD E
Eua
µµE H
||
µµI K
GlobalConfig
µµL X
.
µµX Y
Canada
µµY _
)
µµ_ `
?
µµa b
$str
µµc m
:
µµn o
$strµµp 
}µµ 
;µµ 
var
¶¶ 
groupSelecionado
¶¶  
=
¶¶! "
new
¶¶# &
SelectListGroup
¶¶' 6
(
¶¶6 7
)
¶¶7 8
;
¶¶8 9
foreach
ºº 
(
ºº 
var
ºº 
i
ºº 
in
ºº 

listLevel2
ºº (
)
ºº( )
{
»» 
var
½½ 
text
½½ 
=
½½ 
i
½½ 
.
½½ 
Name
½½ !
;
½½! "
var
¾¾ 
prop
¾¾ 
=
¾¾ 
i
¾¾ 
.
¾¾ 
Id
¾¾ 
;
¾¾  
var
¿¿ 
opt
¿¿ 
=
¿¿ 
new
¿¿ 
SelectListItem
¿¿ ,
(
¿¿, -
)
¿¿- .
{
¿¿/ 0
Text
¿¿1 5
=
¿¿6 7
i
¿¿8 9
.
¿¿9 :
Id
¿¿: <
.
¿¿< =
ToString
¿¿= E
(
¿¿E F
)
¿¿F G
+
¿¿H I
$str
¿¿J O
+
¿¿P Q
i
¿¿R S
.
¿¿S T
Name
¿¿T X
,
¿¿X Y
Value
¿¿Z _
=
¿¿` a
i
¿¿b c
.
¿¿c d
Id
¿¿d f
.
¿¿f g
ToString
¿¿g o
(
¿¿o p
)
¿¿p q
}
¿¿r s
;
¿¿s t
if
ÁÁ 
(
ÁÁ *
listParLevel3Level2Level1Dto
ÁÁ 0
.
ÁÁ0 1
Where
ÁÁ1 6
(
ÁÁ6 7
r
ÁÁ7 8
=>
ÁÁ9 ;
r
ÁÁ< =
.
ÁÁ= >
ParLevel3Level2
ÁÁ> M
.
ÁÁM N
ParLevel2_Id
ÁÁN Z
==
ÁÁ[ ]
i
ÁÁ^ _
.
ÁÁ_ `
Id
ÁÁ` b
)
ÁÁb c
.
ÁÁc d
Count
ÁÁd i
(
ÁÁi j
)
ÁÁj k
>
ÁÁl m
$num
ÁÁn o
)
ÁÁo p
{
ÂÂ 
groupSelecionado
ÃÃ $
.
ÃÃ$ %
Name
ÃÃ% )
=
ÃÃ* +
(
ÃÃ, -
GlobalConfig
ÃÃ- 9
.
ÃÃ9 :
Eua
ÃÃ: =
||
ÃÃ> @
GlobalConfig
ÃÃA M
.
ÃÃM N
Canada
ÃÃN T
)
ÃÃT U
?
ÃÃV W
$str
ÃÃX `
:
ÃÃa b
$str
ÃÃc o
;
ÃÃo p
opt
ÄÄ 
.
ÄÄ 
Group
ÄÄ 
=
ÄÄ 
groupSelecionado
ÄÄ  0
;
ÄÄ0 1
retorno
ÅÅ 
.
ÅÅ 
Insert
ÅÅ "
(
ÅÅ" #
counter
ÅÅ# *
,
ÅÅ* +
opt
ÅÅ, /
)
ÅÅ/ 0
;
ÅÅ0 1
counter
ÆÆ 
++
ÆÆ 
;
ÆÆ 
}
ÇÇ 
}
ÉÉ 
foreach
ËË 
(
ËË 
var
ËË 
i
ËË 
in
ËË 

listLevel2
ËË (
)
ËË( )
{
ÌÌ 
var
ÎÎ 
text
ÎÎ 
=
ÎÎ 
i
ÎÎ 
.
ÎÎ 
Name
ÎÎ !
;
ÎÎ! "
var
ÏÏ 
prop
ÏÏ 
=
ÏÏ 
i
ÏÏ 
.
ÏÏ 
Id
ÏÏ 
;
ÏÏ  
var
ÐÐ 
opt
ÐÐ 
=
ÐÐ 
new
ÐÐ 
SelectListItem
ÐÐ ,
(
ÐÐ, -
)
ÐÐ- .
{
ÐÐ/ 0
Text
ÐÐ1 5
=
ÐÐ6 7
i
ÐÐ8 9
.
ÐÐ9 :
Id
ÐÐ: <
.
ÐÐ< =
ToString
ÐÐ= E
(
ÐÐE F
)
ÐÐF G
+
ÐÐH I
$str
ÐÐJ O
+
ÐÐP Q
i
ÐÐR S
.
ÐÐS T
Name
ÐÐT X
,
ÐÐX Y
Value
ÐÐZ _
=
ÐÐ` a
i
ÐÐb c
.
ÐÐc d
Id
ÐÐd f
.
ÐÐf g
ToString
ÐÐg o
(
ÐÐo p
)
ÐÐp q
}
ÐÐr s
;
ÐÐs t
if
ÒÒ 
(
ÒÒ *
listParLevel3Level2Level1Dto
ÒÒ 0
.
ÒÒ0 1
Where
ÒÒ1 6
(
ÒÒ6 7
r
ÒÒ7 8
=>
ÒÒ9 ;
r
ÒÒ< =
.
ÒÒ= >
ParLevel3Level2
ÒÒ> M
.
ÒÒM N
ParLevel2_Id
ÒÒN Z
==
ÒÒ[ ]
i
ÒÒ^ _
.
ÒÒ_ `
Id
ÒÒ` b
)
ÒÒb c
.
ÒÒc d
Count
ÒÒd i
(
ÒÒi j
)
ÒÒj k
==
ÒÒl n
$num
ÒÒo p
)
ÒÒp q
{
ÓÓ 
opt
ÔÔ 
.
ÔÔ 
Group
ÔÔ 
=
ÔÔ 
group
ÔÔ  %
;
ÔÔ% &
retorno
ÕÕ 
.
ÕÕ 
Insert
ÕÕ "
(
ÕÕ" #
counter
ÕÕ# *
,
ÕÕ* +
opt
ÕÕ, /
)
ÕÕ/ 0
;
ÕÕ0 1
counter
ÖÖ 
++
ÖÖ 
;
ÖÖ 
}
×× 
}
ÙÙ !
DdlLevel2Vinculados
ÜÜ 
=
ÜÜ  !
retorno
ÜÜ" )
;
ÜÜ) *
}
ÞÞ 	
public
ää 
List
ää 
<
ää 
int
ää 
>
ää #
removerParHeaderField
ää .
{
ää/ 0
get
ää1 4
;
ää4 5
set
ää6 9
;
ää9 :
}
ää; <
public
åå 
List
åå 
<
åå 
int
åå 
>
åå $
listLevel2Corporativos
åå /
{
åå0 1
get
åå2 5
;
åå5 6
set
åå7 :
;
åå: ;
}
åå< =
public
ææ 
List
ææ 
<
ææ 
int
ææ 
>
ææ 
level2PorCompany
ææ )
{
ææ* +
get
ææ, /
;
ææ/ 0
set
ææ1 4
;
ææ4 5
}
ææ6 7
public
çç 
Nullable
çç 
<
çç 
int
çç 
>
çç 
level2Number
çç )
{
çç* +
get
çç, /
;
çç/ 0
set
çç1 4
;
çç4 5
}
çç6 7
public
èè 
Nullable
èè 
<
èè 
int
èè 
>
èè 
CompanyControl_Id
èè .
{
èè/ 0
get
èè1 4
;
èè4 5
set
èè6 9
;
èè9 :
}
èè; <
public
ìì 
bool
ìì %
IsRequiredMultipleValue
ìì +
{
ìì, -
get
ìì. 1
;
ìì1 2
set
ìì3 6
;
ìì6 7
}
ìì8 9
public
íí 
Nullable
íí 
<
íí 
int
íí 
>
íí 
hashKey
íí $
{
íí% &
get
íí' *
;
íí* +
set
íí, /
;
íí/ 0
}
íí1 2
public
ïï 
Nullable
ïï 
<
ïï 
int
ïï 
>
ïï 
ParScoreType_Id
ïï ,
{
ïï- .
get
ïï/ 2
;
ïï2 3
set
ïï4 7
;
ïï7 8
}
ïï9 :
public
ðð 
string
ðð 
DataInit
ðð 
{
ðð  
get
ðð! $
;
ðð$ %
set
ðð& )
;
ðð) *
}
ðð+ ,
}
ôô 
}õõ Ò	
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParLevel1XHeaderFieldDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class $
ParLevel1XHeaderFieldDTO )
:* +

EntityBase, 6
{ 
public 
int 
ParLevel1_Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
int 
ParHeaderField_Id $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public		 
bool		 
Active		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
true		+ /
;		/ 0
public 
ParHeaderFieldDTO  
parHeaderFieldDto! 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
ParHeaderFieldDTO  
ParHeaderField! /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
} 
} ¨
SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParMultipleValuesDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class  
ParMultipleValuesDTO %
:& '

EntityBase( 2
{ 
public 
int 
ParHeaderField_Id $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
string		 
Description		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
=		0 1
$str		2 4
;		4 5
public

 
decimal

 
PunishmentValue

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
bool 

Conformity 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
bool 
IsDefaultOption #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
false4 9
;9 :
} 
} Ý
NC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\Params\ParFrequencyDTO.cs
	namespace 	
DTO
 
. 
DTO 
. 
Params 
{ 
public 

class 
ParFrequencyDTO  
:! "

EntityBase# -
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
=		+ ,
true		- 1
;		1 2
}

 
} 
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\RoleJBSDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

RoleJBSDTO 
: 

EntityBase (
{ 
public 
int 
ScreenComponent_Id %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public		 
string		 
Role		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
ScreenComponentDTO

 !
ScreenComponent

" 1
{

2 3
get

4 7
;

7 8
set

9 <
;

< =
}

> ?
} 
} Â
CC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\RoleTypeDTO.cs
	namespace 	
DTO
 
. 
DTO 
{		 
public

 

class

 
RoleTypeDTO

 
:

 

EntityBase

 )
{ 
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
} 
} 
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\RoleSGQDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

RoleSGQDTO 
: 

EntityBase (
{ 
public 
int 
ScreenComponent_Id %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public		 
string		 
Role		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
ScreenComponentDTO

 !
ScreenComponent

" 1
{

2 3
get

4 7
;

7 8
set

9 <
;

< =
}

> ?
} 
} 
FC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\RoleUserSgqDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
RoleUserSgqDTO 
:  !

EntityBase" ,
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
bool		 
IsActive		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
}

 
} Ú
JC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ScreenComponentDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
ScreenComponentDTO #
:$ %

EntityBase& 0
{ 
public 
string 
HashKey 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
string		 
	Component		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
Nullable

 
<

 
int

 
>

 
Type

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
RoleTypeDTO 
RoleType #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} ±
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\EmpresaDTO.cs
	namespace 	
DTO
 
. 
DTO 
{		 
public

 

class

 

EmpresaDTO

 
{ 
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} 
BC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\UserSgqDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 

UserSgqDTO 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public		 
string		 
Name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
Nullable 
< 
System 
. 
DateTime '
>' (
	AcessDate) 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
System 
. 
DateTime 
AddDate &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
Nullable 
< 
System 
. 
DateTime '
>' (
	AlterDate) 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Phone 
{ 
get !
;! "
set# &
;& '
}( )
public 
Nullable 
< 
int 
> 
ParCompany_Id *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
IEnumerable 
< 
int 
> 
ListParCompany_Id  1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
IEnumerable 
< 
string !
>! "
ListRole# +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} Ä

SC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\VTVerificacaoTipificacaoDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class '
VTVerificacaoTipificacaoDTO ,
:- .
DataCollectionBase/ A
{ 
public 
int 

Sequencial 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
byte		 
Banda		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 
System

 
.

 
DateTime

 
DataHora

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
int 
	UnidadeId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Chave 
{ 
get !
;! "
set# &
;& '
}( )
public 
Nullable 
< 
bool 
> 
Status $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ¹
@C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\GetResources.cs
public 
static 
class 
GetResources  
{		 
public

 

static

 
DictionaryEntry

 !
getResource

" -
(

- .
string

. 4
value

5 :
)

: ;
{ 
System 
. 
	Resources 
. 
ResourceManager (
resourceManager) 8
=9 :
	Resources; D
.D E
ResourceE M
.M N
ResourceManagerN ]
;] ^
if 

( 
GlobalConfig 
. 
LanguageBrasil '
)' (
{ 	
Thread 
. 
CurrentThread  
.  !
CurrentCulture! /
=0 1
new2 5
CultureInfo6 A
(A B
GuardB G
.G H
LANGUAGE_PT_BRH V
)V W
;W X
Thread 
. 
CurrentThread  
.  !
CurrentUICulture! 1
=2 3
new4 7
CultureInfo8 C
(C D
GuardD I
.I J
LANGUAGE_PT_BRJ X
)X Y
;Y Z
} 	
else 
{ 	
Thread 
. 
CurrentThread  
.  !
CurrentCulture! /
=0 1
new2 5
CultureInfo6 A
(A B
$strB D
)D E
;E F
Thread 
. 
CurrentThread  
.  !
CurrentUICulture! 1
=2 3
new4 7
CultureInfo8 C
(C D
$strD F
)F G
;G H
} 	
var 
list 
= 
resourceManager "
." #
GetResourceSet# 1
(1 2
Thread 
. 
CurrentThread  
.  !
CurrentUICulture! 1
,1 2
true3 7
,7 8
false9 >
)> ?
;? @
var 
listRes 
= 
list 
. 
Cast 
<  
DictionaryEntry  /
>/ 0
(0 1
)1 2
;2 3
foreach 
( 
var 
r 
in 
listRes !
)! "
{   	
if!! 
(!! 
r!! 
.!! 
Key!! 
.!! 
ToString!! 
(!! 
)!!  
==!!! #
value!!$ )
)!!) *
return"" 
r"" 
;"" 
}## 	
return%% 
new%% 
DictionaryEntry%% "
(%%" #
)%%# $
;%%$ %
}&& 
}'' «
@C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\GlobalConfig.cs
	namespace 	
DTO
 
{ 
public 

class 
	SgqConfig 
{ 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
=

$ %
$num

& '
;

' (
public 
DateTime 
AddDate 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
DateTime0 8
.8 9
Now9 <
;< =
public 
DateTime 
? 
	AlterDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
;7 8
public 
int 
ActiveIn 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool !
recoveryPassAvaliable )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string  
urlPreffixAppColleta *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
string 
urlAppColleta #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
bool 
mockLoginEUA  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
MailFrom 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
MailPass 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
MailSSL 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
MailPort 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
MailSmtp 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
	MockEmail 
{ 
get  #
;# $
set% (
;( )
}* +
} 
public 

static 
class 
GlobalConfig $
{ 
public!! 
static!! 

Dictionary!!  
<!!  !
int!!! $
,!!$ %
string!!& ,
>!!, -
PaginaDoTablet!!. <
{!!= >
get!!? B
;!!B C
set!!D G
;!!G H
}!!I J
public"" 
static"" 
string"" 
UrlUpdateTelaTablet"" 0
{""1 2
get""3 6
;""6 7
set""8 ;
;""; <
}""= >
public## 
static## 
string## 
ParamsDisponiveis## .
{##/ 0
get##1 4
;##4 5
set##6 9
;##9 :
}##; <
public$$ 
static$$ 
bool$$ 
MockOn$$ !
{$$" #
get$$$ '
;$$' (
set$$) ,
;$$, -
}$$. /
public'' 
static'' 
bool'' 
Brasil'' !
{''" #
get''$ '
;''' (
set'') ,
;'', -
}''. /
public(( 
static(( 
bool(( 
Eua(( 
{((  
get((! $
;(($ %
set((& )
;(() *
}((+ ,
public)) 
static)) 
bool)) 
Canada)) !
{))" #
get))$ '
;))' (
set))) ,
;)), -
})). /
public** 
static** 
bool** 
Ytoara** !
{**" #
get**$ '
;**' (
set**) ,
;**, -
}**. /
public++ 
static++ 
bool++ 
Guarani++ "
{++# $
get++% (
;++( )
set++* -
;++- .
}++/ 0
public.. 
static.. 
bool.. 
LanguageBrasil.. )
{..* +
get.., /
;../ 0
set..1 4
;..4 5
}..6 7
public// 
static// 
bool// 
LanguageEUA// &
{//' (
get//) ,
;//, -
set//. 1
;//1 2
}//3 4
public22 
static22 
bool22 
mockLoginEUA22 '
{22( )
get22* -
;22- .
set22/ 2
;222 3
}224 5
public33 
static33 
int33 
Id33 
{33 
get33 "
;33" #
set33$ '
;33' (
}33) *
=33+ ,
$num33- .
;33. /
public44 
static44 
DateTime44 
AddDate44 &
{44' (
get44) ,
;44, -
set44. 1
;441 2
}443 4
=445 6
DateTime447 ?
.44? @
Now44@ C
;44C D
public55 
static55 
DateTime55 
?55 
	AlterDate55  )
{55* +
get55, /
;55/ 0
set551 4
;554 5
}556 7
=558 9
null55: >
;55> ?
public66 
static66 
int66 
ActiveIn66 "
{66# $
get66% (
;66( )
set66* -
;66- .
}66/ 0
public77 
static77 
bool77 !
recoveryPassAvaliable77 0
{771 2
get773 6
;776 7
set778 ;
;77; <
}77= >
public88 
static88 
string88  
urlPreffixAppColleta88 1
{882 3
get884 7
;887 8
set889 <
;88< =
}88> ?
public99 
static99 
string99 
urlAppColleta99 *
{99+ ,
get99- 0
;990 1
set992 5
;995 6
}997 8
public:: 
static:: 
string:: 
pathFTA:: $
{::% &
get::' *
;::* +
set::, /
;::/ 0
}::1 2
public== 
static== 
string== 
	emailPass== &
{==' (
get==) ,
;==, -
set==. 1
;==1 2
}==3 4
public>> 
static>> 
bool>> 
emailSSL>> #
{>>$ %
get>>& )
;>>) *
set>>+ .
;>>. /
}>>0 1
public?? 
static?? 
string?? 
	emailFrom?? &
{??' (
get??) ,
;??, -
set??. 1
;??1 2
}??3 4
public@@ 
static@@ 
int@@ 
	emailPort@@ #
{@@$ %
get@@& )
;@@) *
set@@+ .
;@@. /
}@@0 1
publicAA 
staticAA 
stringAA 
	emailSmtpAA &
{AA' (
getAA) ,
;AA, -
setAA. 1
;AA1 2
}AA3 4
publicBB 
staticBB 
boolBB 
	mockEmailBB $
{BB% &
getBB' *
;BB* +
setBB, /
;BB/ 0
}BB1 2
publicFF 
staticFF 
stringFF 
PrimeiraOptionFF +
{GG 	
getHH 
{II 
varJJ 
primeiraOptionJJ "
=JJ# $
stringJJ% +
.JJ+ ,
EmptyJJ, 1
;JJ1 2
ifKK 
(KK 
EuaKK 
)KK 
primeiraOptionLL "
=LL# $
$strLL% 0
;LL0 1
elseMM 
ifMM 
(MM 
BrasilMM 
)MM  
primeiraOptionNN "
=NN# $
$strNN% 3
;NN3 4
returnOO 
primeiraOptionOO %
;OO% &
}PP 
}QQ 	
publicSS 
staticSS 
stringSS 
	VinculadoSS &
{TT 	
getUU 
{VV 
varWW 
primeiraOptionWW "
=WW# $
stringWW% +
.WW+ ,
EmptyWW, 1
;WW1 2
ifXX 
(XX 
EuaXX 
)XX 
primeiraOptionYY "
=YY# $
$strYY% -
;YY- .
elseZZ 
ifZZ 
(ZZ 
BrasilZZ 
)ZZ  
primeiraOption[[ "
=[[# $
$str[[% 0
;[[0 1
return\\ 
primeiraOption\\ %
;\\% &
}]] 
}^^ 	
publicaa 
staticaa 
stringaa 
NaoVinculadoaa )
{bb 	
getcc 
{dd 
varee 
primeiraOptionee "
=ee# $
stringee% +
.ee+ ,
Emptyee, 1
;ee1 2
ifff 
(ff 
Euaff 
)ff 
primeiraOptiongg "
=gg# $
$strgg% /
;gg/ 0
elsehh 
ifhh 
(hh 
Brasilhh 
)hh  
primeiraOptionii "
=ii# $
$strii% 5
;ii5 6
returnjj 
primeiraOptionjj %
;jj% &
}kk 
}ll 	
publicss 
staticss 
boolss 
VerifyConfigss '
(ss' (
stringss( .
connectionStringss/ ?
)ss? @
{tt 	
ifuu 
(uu 
ActiveInuu 
>uu 
$numuu 
)uu 
returnvv 
truevv 
;vv 
usingxx 
(xx 
varxx 
dbxx 
=xx 
newxx 

ADOFactoryxx  *
.xx* +
Factoryxx+ 2
(xx2 3
connectionStringxx3 C
)xxC D
)xxD E
{yy 
varzz 
cfgzz 
=zz 
dbzz 
.zz 
SearchQueryzz (
<zz( )
	SgqConfigzz) 2
>zz2 3
(zz3 4
$strzz4 M
)zzM N
.zzN O
LastOrDefaultzzO \
(zz\ ]
)zz] ^
;zz^ _
if{{ 
({{ 
cfg{{ 
!={{ 
null{{ 
){{  
{|| 
ConfigWebSystem}} #
(}}# $
cfg}}$ '
)}}' (
;}}( )
if~~ 
(~~ 
ActiveIn~~  
>~~! "
$num~~# $
)~~$ %
return 
true #
;# $
}
 
}
 
return
 
false
 
;
 
}
 	
public
 
static
 
string
 
Verifica
 %
{
& '
get
( +
;
+ ,
set
- 0
;
0 1
}
2 3
public
 
static
 

Dictionary
  
<
  !
int
! $
,
$ %
string
& ,
>
, -
UsuariosUnidades
. >
{
? @
get
A D
;
D E
set
F I
;
I J
}
K L
public
 
static
 
void
 
ConfigWebSystem
 *
(
* +
	SgqConfig
+ 4
dto
5 8
)
8 9
{
 	
Verifica
 
=
 
string
 
.
 
Empty
 #
;
# $
SetAllFalse
 
(
 
)
 
;
 
switch
 
(
 
dto
 
.
 
ActiveIn
  
)
  !
{
 
case
 
$num
 
:
 
LanguageBrasil
 "
=
# $
true
% )
;
) *
Brasil
 
=
 
true
 !
;
! "
Verifica
 
+=
 
$str
  5
;
5 6
break
 
;
 
case
 
$num
 
:
 
LanguageEUA
 
=
  !
true
" &
;
& '
Eua
 
=
 
true
 
;
 
Verifica
 
+=
 
$str
  2
;
2 3
break
 
;
 
case
 
$num
 
:
 
LanguageEUA
   
=
    !
true
  " &
;
  & '
Canada
¡¡ 
=
¡¡ 
true
¡¡ !
;
¡¡! "
Verifica
¢¢ 
+=
¢¢ 
$str
¢¢  5
;
¢¢5 6
break
££ 
;
££ 
case
¤¤ 
$num
¤¤ 
:
¤¤ 
Ytoara
¥¥ 
=
¥¥ 
true
¥¥ !
;
¥¥! "
LanguageBrasil
§§ "
=
§§# $
true
§§% )
;
§§) *
Verifica
©© 
+=
©© 
$str
©©  5
;
©©5 6
break
ªª 
;
ªª 
case
«« 
$num
«« 
:
«« 
Guarani
¬¬ 
=
¬¬ 
true
¬¬ "
;
¬¬" #
LanguageBrasil
­­ "
=
­­# $
true
­­% )
;
­­) *
Verifica
®® 
+=
®® 
$str
®®  6
;
®®6 7
break
¯¯ 
;
¯¯ 
default
°° 
:
°° 
break
±± 
;
±± 
}
²² 
Id
´´ 
=
´´ 
dto
´´ 
.
´´ 
Id
´´ 
;
´´ 
AddDate
µµ 
=
µµ 
dto
µµ 
.
µµ 
AddDate
µµ !
;
µµ! "
	AlterDate
¶¶ 
=
¶¶ 
dto
¶¶ 
.
¶¶ 
	AlterDate
¶¶ %
;
¶¶% &
ActiveIn
·· 
=
·· 
dto
·· 
.
·· 
ActiveIn
·· #
;
··# $#
recoveryPassAvaliable
¸¸ !
=
¸¸" #
dto
¸¸$ '
.
¸¸' (#
recoveryPassAvaliable
¸¸( =
;
¸¸= >"
urlPreffixAppColleta
¹¹  
=
¹¹! "
dto
¹¹# &
.
¹¹& '"
urlPreffixAppColleta
¹¹' ;
;
¹¹; <
urlAppColleta
ºº 
=
ºº 
dto
ºº 
.
ºº  
urlAppColleta
ºº  -
;
ºº- .
mockLoginEUA
»» 
=
»» 
dto
»» 
.
»» 
mockLoginEUA
»» +
;
»»+ ,
	emailFrom
¼¼ 
=
¼¼ 
dto
¼¼ 
.
¼¼ 
MailFrom
¼¼ $
;
¼¼$ %
	emailPass
½½ 
=
½½ 
dto
½½ 
.
½½ 
MailPass
½½ $
;
½½$ %
emailSSL
¾¾ 
=
¾¾ 
dto
¾¾ 
.
¾¾ 
MailSSL
¾¾ "
;
¾¾" #
	emailSmtp
¿¿ 
=
¿¿ 
dto
¿¿ 
.
¿¿ 
MailSmtp
¿¿ $
;
¿¿$ %
	emailPort
ÀÀ 
=
ÀÀ 
dto
ÀÀ 
.
ÀÀ 
MailPort
ÀÀ $
;
ÀÀ$ %
	mockEmail
ÁÁ 
=
ÁÁ 
dto
ÁÁ 
.
ÁÁ 
	MockEmail
ÁÁ %
;
ÁÁ% &
pathFTA
ÂÂ 
=
ÂÂ 
$str
ÂÂ D
;
ÂÂD E
Verifica
ÆÆ 
+=
ÆÆ 
$str
ÆÆ 2
+
ÆÆ3 4#
recoveryPassAvaliable
ÆÆ5 J
.
ÆÆJ K
ToString
ÆÆK S
(
ÆÆS T
)
ÆÆT U
+
ÆÆV W
$str
ÆÆX \
;
ÆÆ\ ]
Verifica
ÇÇ 
+=
ÇÇ 
$str
ÇÇ 1
+
ÇÇ2 3"
urlPreffixAppColleta
ÇÇ4 H
+
ÇÇI J
$str
ÇÇK O
;
ÇÇO P
Verifica
ÈÈ 
+=
ÈÈ 
$str
ÈÈ *
+
ÈÈ+ ,
urlAppColleta
ÈÈ- :
+
ÈÈ; <
$str
ÈÈ= A
;
ÈÈA B
Verifica
ÉÉ 
+=
ÉÉ 
$str
ÉÉ )
+
ÉÉ* +
mockLoginEUA
ÉÉ, 8
+
ÉÉ9 :
$str
ÉÉ; ?
;
ÉÉ? @
Verifica
ÊÊ 
+=
ÊÊ 
$str
ÊÊ &
+
ÊÊ' (
	emailFrom
ÊÊ) 2
+
ÊÊ3 4
$str
ÊÊ5 9
;
ÊÊ9 :
Verifica
ËË 
+=
ËË 
$str
ËË &
+
ËË' (
	emailPass
ËË) 2
+
ËË3 4
$str
ËË5 9
;
ËË9 :
Verifica
ÌÌ 
+=
ÌÌ 
$str
ÌÌ %
+
ÌÌ& '
emailSSL
ÌÌ( 0
.
ÌÌ0 1
ToString
ÌÌ1 9
(
ÌÌ9 :
)
ÌÌ: ;
+
ÌÌ< =
$str
ÌÌ> B
;
ÌÌB C
Verifica
ÍÍ 
+=
ÍÍ 
$str
ÍÍ &
+
ÍÍ' (
	emailSmtp
ÍÍ) 2
+
ÍÍ3 4
$str
ÍÍ5 9
;
ÍÍ9 :
Verifica
ÎÎ 
+=
ÎÎ 
$str
ÎÎ &
+
ÎÎ' (
	emailPort
ÎÎ) 2
.
ÎÎ2 3
ToString
ÎÎ3 ;
(
ÎÎ; <
)
ÎÎ< =
+
ÎÎ> ?
$str
ÎÎ@ D
;
ÎÎD E
Verifica
ÏÏ 
+=
ÏÏ 
$str
ÏÏ &
+
ÏÏ' (
	mockEmail
ÏÏ) 2
.
ÏÏ2 3
ToString
ÏÏ3 ;
(
ÏÏ; <
)
ÏÏ< =
+
ÏÏ> ?
$str
ÏÏ@ D
;
ÏÏD E
Verifica
ÑÑ 
+=
ÑÑ 
$str
ÑÑ $
+
ÑÑ% &
AddDate
ÑÑ' .
.
ÑÑ. /
ToString
ÑÑ/ 7
(
ÑÑ7 8
)
ÑÑ8 9
+
ÑÑ: ;
$str
ÑÑ< @
;
ÑÑ@ A
Verifica
ÒÒ 
+=
ÒÒ 
$str
ÒÒ &
+
ÒÒ' (
	AlterDate
ÒÒ) 2
.
ÒÒ2 3
ToString
ÒÒ3 ;
(
ÒÒ; <
)
ÒÒ< =
+
ÒÒ> ?
$str
ÒÒ@ D
;
ÒÒD E
Verifica
ÓÓ 
+=
ÓÓ 
$str
ÓÓ 
+
ÓÓ  !
Id
ÓÓ" $
.
ÓÓ$ %
ToString
ÓÓ% -
(
ÓÓ- .
)
ÓÓ. /
+
ÓÓ0 1
$str
ÓÓ2 6
;
ÓÓ6 7
}
ÖÖ 	
private
ÛÛ 
static
ÛÛ 
void
ÛÛ 
SetAllFalse
ÛÛ '
(
ÛÛ' (
)
ÛÛ( )
{
ÜÜ 	
Id
ÞÞ 
=
ÞÞ 
$num
ÞÞ 
;
ÞÞ 
AddDate
ßß 
=
ßß 
DateTime
ßß 
.
ßß 
Now
ßß "
;
ßß" #
	AlterDate
àà 
=
àà 
null
àà 
;
àà 
Brasil
áá 
=
áá 
false
áá 
;
áá 
Eua
ââ 
=
ââ 
false
ââ 
;
ââ 
Canada
ãã 
=
ãã 
false
ãã 
;
ãã 
Ytoara
ää 
=
ää 
false
ää 
;
ää 
LanguageBrasil
åå 
=
åå 
false
åå "
;
åå" #
LanguageEUA
ææ 
=
ææ 
false
ææ 
;
ææ  
Guarani
çç 
=
çç 
false
çç 
;
çç 
ActiveIn
èè 
=
èè 
$num
èè 
;
èè #
recoveryPassAvaliable
éé !
=
éé" #
false
éé$ )
;
éé) *"
urlPreffixAppColleta
êê  
=
êê! "
string
êê# )
.
êê) *
Empty
êê* /
;
êê/ 0
urlAppColleta
ëë 
=
ëë 
string
ëë "
.
ëë" #
Empty
ëë# (
;
ëë( )
}
îî 	
}
ññ 
}óó É\
ZC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSet\ApontamentosDiariosResultSet.cs
public 
class (
ApontamentosDiariosResultSet )
{ 
public 

System 
. 
DateTime 
Data 
{  !
get" %
;% &
set' *
;* +
}, -
public		 

string		 
_Data		 
{		 
get		 
{		 
return		  &
Data		' +
.		+ ,
ToShortDateString		, =
(		= >
)		> ?
;		? @
}		g h
}		i j
public

 

string

 
_Hora

 
{

 
get

 
{

 
return

  &
Data

' +
.

+ ,
ToShortTimeString

, =
(

= >
)

> ?
;

? @
}

A B
}

C D
public 

string 
	Indicador 
{ 
get !
;! "
set# &
;& '
}( )
public 

string 
Monitoramento 
{  !
get" %
;% &
set' *
;* +
}, -
public 

string 
Tarefa 
{ 
get 
; 
set  #
;# $
}% &
public 

Nullable 
< 
decimal 
> 
Peso !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

string 
IntervaloMinimo !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

string 
IntervaloMaximo !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

string 
Lancado 
{ 
get 
;  
set! $
;$ %
}& '
public 

Nullable 
< 
bool 
> 
Conforme "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

string 
	_Conforme 
{ 
get !
{" #
return$ *
Conforme+ 3
.3 4
Value4 9
?: ;
GetResources< H
.H I
getResourceI T
(T U
$strU `
)` a
.a b
Valueb g
.g h
ToStringh p
(p q
)q r
:s t
GetResources	u 
.
 
getResource
 
(
 
$str
 
)
 
.
  
Value
  ¥
.
¥ ¦
ToString
¦ ®
(
® ¯
)
¯ °
;
° ±
}
± ²
}
³ ´
public 

Nullable 
< 
bool 
> 
NA 
{ 
get "
;" #
set$ '
;' (
}) *
public 

string 
_NA 
{ 
get 
{ 
return $
NA% '
.' (
Value( -
?. /
GetResources0 <
.< =
getResource= H
(H I
$strI S
)S T
.T U
ValueU Z
.Z [
ToString[ c
(c d
)d e
:f g
GetResourcesh t
.t u
getResource	u 
(
 
$str
 
)
 
.
 
Value
 
.
 
ToString
 
(
 
)
 
;
 
}
 
}
  
public 

Nullable 
< 
decimal 
> 
AV_Peso $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

Nullable 
< 
decimal 
> 
_AV_Peso %
{& '
get( +
{, -
return. 4
AV_Peso5 <
.< =
HasValue= E
?F G
AV_PesoH O
.O P
ValueP U
:V W
$numX Z
;Z [
}\ ]
}^ _
public 

Nullable 
< 
decimal 
> 
NC_Peso $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

Nullable 
< 
int 
> 
	Avaliacao "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

int 
Amostra 
{ 
get 
; 
set !
;! "
}# $
public   

Nullable   
<   
int   
>   

Sequencial   #
{  $ %
get  & )
;  ) *
set  + .
;  . /
}  0 1
public!! 

Nullable!! 
<!! 
int!! 
>!! 
Banda!! 
{!!  
get!!! $
;!!$ %
set!!& )
;!!) *
}!!+ ,
public"" 

int"" 
ResultLevel3Id"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
public## 

Nullable## 
<## 
int## 
>## 
HashKey##  
{##! "
get### &
;##& '
set##( +
;##+ ,
}##- .
public%% 

string%% 
Unidade%% 
{%% 
get%% 
;%%  
set%%! $
;%%$ %
}%%& '
public&& 

string&& 
Periodo&& 
{&& 
get&& 
;&&  
set&&! $
;&&$ %
}&&& '
public'' 

string'' 
Turno'' 
{'' 
get'' 
;'' 
set'' "
;''" #
}''$ %
public(( 

string(( 
Auditor(( 
{(( 
get(( 
;((  
set((! $
;(($ %
}((& '
public)) 

string)) 
	ValueText)) 
{)) 
get)) !
;))! "
set))# &
;))& '
}))( )
public** 

string** 
HeaderFieldList** !
{**" #
get**$ '
;**' (
set**) ,
;**, -
}**. /
public,, 

string,, 
Select,, 
(,, !
DataCarrierFormulario,, .
form,,/ 3
),,3 4
{-- 
var.. 
dtInit.. 
=.. 
form.. 
... 
_dataInicio.. %
...% &
ToString..& .
(... /
$str../ 9
)..9 :
;..: ;
var// 
dtF// 
=// 
form// 
.// 
_dataFim// 
.//  
ToString//  (
(//( )
$str//) 3
)//3 4
;//4 5
var11 

sqlUnidade11 
=11 
$str11 
;11 
var22 
	sqlLevel122 
=22 
$str22 
;22 
var33 
	sqlLevel233 
=33 
$str33 
;33 
var44 
	sqlLevel344 
=44 
$str44 
;44 
var55 

formatDate55 
=55 
$str55 
;55 
if77 

(77 
form77 
.77 
unitId77 
>77 
$num77 
)77 
{88 	

sqlUnidade99 
=99 
$str99 *
+99+ ,
form99- 1
.991 2
unitId992 8
;998 9
}:: 	
if<< 

(<< 
form<< 
.<< 
level1Id<< 
><< 
$num<< 
)<< 
{== 	
	sqlLevel1>> 
=>> 
$str>> )
+>>* +
form>>, 0
.>>0 1
level1Id>>1 9
;>>9 :
}?? 	
ifAA 

(AA 
formAA 
.AA 
level2IdAA 
>AA 
$numAA 
)AA 
{BB 	
	sqlLevel2CC 
=CC 
$strCC 3
+CC4 5
formCC6 :
.CC: ;
level2IdCC; C
;CCC D
}DD 	
ifFF 

(FF 
formFF 
.FF 
level3IdFF 
>FF 
$numFF 
)FF 
{GG 	
	sqlLevel3HH 
=HH 
$strHH )
+HH* +
formHH, 0
.HH0 1
level3IdHH1 9
;HH9 :
}II 	
ifKK 

(KK 
GlobalConfigKK 
.KK 
EuaKK 
)KK 
{LL 	

formatDateMM 
=MM 
$strMM P
;MMP Q
}NN 	
elseOO 
{PP 	

formatDateQQ 
=QQ 
$strQQ P
;QQP Q
}RR 	
returnTT 
$strTT <
+TT= >
$strUU =
+UU> ?
$strVV =
+VV> ?
$strWW =
+WW> ?
$strXX =
+XX> ?
$strYY =
+YY> ?
$strZZ =
+ZZ> ?
$str[[ =
+[[> ?
$str\\ =
+\\> ?
$str]] =
+]]> ?
$str^^ =
+^^> ?
$str__ =
+__> ?
$str`` =
+``> ?
$str	aa ª
+
aa« ¬
$strbb =
+bb> ?
$strcc =
+cc> ?
$strdd =
+dd> ?
$stree =
+ee> ?
$strff =
+ff> ?
$strgg =
+gg> ?
$strhh =
+hh> ?
$strii =
+ii> ?
$strjj =
+jj> ?
$strkk =
+kk> ?
$strll L
+llM N
$strmm F
+mmG H
$strnn F
+nnG H
$stroo =
+oo> ?
$strpp F
+ppG H
$strqq =
+qq> ?
$strrr F
+rrG H
$strss =
+ss> ?
$strtt F
+ttG H
$struu =
+uu> ?
$strvv F
+vvG H
$strww =
+ww> ?
$strxx F
+xxG H
$stryy =
+yy> ?
$strzz =
+zz> ?
$str{{ =
+{{> ?
$str|| =
+||> ?
$str}} =
+}}> ?
$str	~~ ¾
+
~~¿ À
$str F
+G H

formatDateI S
+T U
$strV Y
+Z [
$str
 8
+
9 :
$str
 V
+
W X
$str
 p
+
q r
$str
 j
+
k l
$str
 ]
+
^ _
$str
 y
+
z {
$str
 ^
+
_ `
$str
 2
+
3 4
$str
 B
+
C D
$str
 M
+
N O
$str
 g
+
h i
$str
 a
+
b c
$str
 U
+
V W
$str
 <
+
= >
$str
 
+
 
$str
 8
+
9 :
$str
 7
+
8 9
dtInit
: @
+
A B
$str
C R
+
S T
dtF
U X
+
Y Z
$str
[ d
+
e f

sqlUnidade
 
+
 
	sqlLevel1
 &
+
' (
	sqlLevel2
) 2
+
3 4
	sqlLevel3
5 >
;
> ?
}
 
} ä
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSet\ScorecardResultSet.cs
public 
class 
ScorecardResultSet 
{ 
public 

int 
? 
Cluster 
{ 
get 
; 
set "
;" #
}$ %
public 

string 
ClusterName 
{ 
get  #
;# $
set% (
;( )
}* +
public 

int 
? 
Regional 
{ 
get 
; 
set  #
;# $
}% &
public		 

string		 
RegionalName		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public 

int 
? 
ParCompanyId 
{ 
get "
;" #
set$ '
;' (
}) *
public 

string 
ParCompanyName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

int 
? 
TipoIndicador 
{ 
get  #
;# $
set% (
;( )
}* +
public 

string 
TipoIndicadorName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

int 
? 
Level1Id 
{ 
get 
; 
set  #
;# $
}% &
public 

string 

Level1Name 
{ 
get "
;" #
set$ '
;' (
}) *
public 

int 
? 
Criterio 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
CriterioName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

decimal 
? 
AV 
{ 
get 
; 
set !
;! "
}# $
public 

decimal 
? 
NC 
{ 
get 
; 
set !
;! "
}# $
public 

decimal 
? 
Pontos 
{ 
get  
;  !
set" %
;% &
}' (
public 

decimal 
? 
PontosIndicador #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

decimal 
? 
Meta 
{ 
get 
; 
set  #
;# $
}% &
public 

decimal 
? 
Real 
{ 
get 
; 
set  #
;# $
}% &
public 

decimal 
? 
PontosAtingidos #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

decimal 
? $
PontosAtingidosIndicador ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public   

decimal   
?   
	Scorecard   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
public"" 

string"" 
	TipoScore"" 
{"" 
get"" !
;""! "
set""# &
;""& '
}""( )
public$$ 

string$$ 
getSQLScorecard$$ !
($$! "
DateTime$$" *
dtInicio$$+ 3
,$$3 4
DateTime$$5 =
dtFim$$> C
,$$C D
int$$E H
	unidadeId$$I R
,$$R S
int$$T W
tipo$$X \
,$$\ ]
int$$^ a
clusterSelected_Id$$b t
)$$t u
{%% 
stringjj 

selectTipojj 
=jj 
$strjj ,
;jj, -
stringkk 
orderbykk 
=kk 
$strkk *
;kk* +
stringmm 
wheremm 
=mm 
$strmm 
;mm 
ifoo 

(oo
 
clusterSelected_Idoo 
>oo 
$numoo  !
)oo! "
{pp 	
whereqq 
=qq 
$strqq '
+qq( )
clusterSelected_Idqq* <
;qq< =
}rr 	
ifuu 

(uu 
tipouu 
==uu 
$numuu 
)uu 
{vv 	

selectTipoww 
=ww 
$str	ww 
;
ww 
orderbyxx 
=xx 
$strxx 
;xx 
}yy 	
string{{ 
sql{{ 
={{ 
$str{{ 
;{{ 
sql}} 
=}} 
$str}} 
+}} 
$str -
+. /
	unidadeId0 9
+: ;
$str	< £
+
¤ ¥
$str
 1
+
2 3
dtInicio
4 <
.
< =
ToString
= E
(
E F
$str
F P
)
P Q
+
R S
$strT ±
+² ³
$str
 1
+
2 3
dtFim
4 9
.
9 :
ToString
: B
(
B C
$str
C M
)
M N
+
O P
$strQ ®
+¯ °
$str
 1
+
2 3
$str
 '
+
( )
$str
 )
+
* +
$str
 "
+
# $
$str
 %
+
& '
$str
 
+
 
$str
 /
+
0 1
$str
  
+
! "
$str
 )
+
* +
$str
 8
+
9 :
$str ­
+® ¯
$str
 @
+
A B
$str
 ;
+
< =
$str
 ;
+
< =
$str
   4
+
  5 6
$str
¢¢ ;
+
¢¢< =
$str
££ -
+
££. /
$str
¤¤ U
+
¤¤V W
$str
¥¥ R
+
¥¥S T
$str
¦¦ /
+
¦¦0 1
$str
§§ <
+
§§= >
$str
¨¨ 4
+
¨¨5 6
$str°° 
+°° 
$str±± 
+±± 
$str²² 
+²² 
$str³³ 
+³³ 
$str´´ 
+´´ 
$strµµ 
+µµ 
$str¶¶ 
+¶¶ 
$str·· 
+·· 
$str¸¸ 
+¸¸ 
$str¹¹ 
+¹¹ 
$strºº 
+ºº 
$str»» 
+»» 
$str¼¼ 
+¼¼ 
$str½½ 
+½½ 
$str¾¾ 
+¾¾ 
$str¿¿ 
+¿¿ 
$strÀÀ 
+ÀÀ 
$strÁÁ 
+ÁÁ 
$strÂÂ 
+ÂÂ 
$strÃÃ 
+ÃÃ 
$strÄÄ 
+ÄÄ 
$strÅÅ 
+ÅÅ 
$strÆÆ 
+ÆÆ 
$strÇÇ 
+ÇÇ 
$strÈÈ 
+ÈÈ 
$strÉÉ 
+ÉÉ 
$strÊÊ 
+ÊÊ 
$strËË 
+ËË 
$strÌÌ 
+ÌÌ 
$strÍÍ 
+ÍÍ 
$strÎÎ 
+ÎÎ  
$strÏÏ 
+ÏÏ 
$strÐÐ 
+ÐÐ  
$strÑÑ 
+ÑÑ 
$strÒÒ 
+ÒÒ 
$strÓÓ 
+ÓÓ  
$strÔÔ 
+ÔÔ 
$strÕÕ 
+ÕÕ 
$strÖÖ 
+ÖÖ  
$str×× 
+×× 
$strØØ 
+ØØ 
$strÙÙ 
+ÙÙ  
$strÚÚ 
+ÚÚ 
$strÛÛ §
+ÛÛ¨ ©
$strÜÜ 
+ÜÜ  
$strÝÝ 
+ÝÝ 
$strÞÞ 
+ÞÞ 
$strßß 
+ßß  
$stràà 
+àà 
$stráá ¨
+áá© ª
$strââ 
+ââ  
$strãã 
+ãã 
$strää 
+ää 
$stråå 
+åå 
$strææ 
+ææ 
$strçç 
+çç 
$strèè 
+èè 
$stréé 
+éé 
$strêê 
+êê  
$strëë ¾
+ëë¿ À
$strìì 
+ìì 
$stríí 
+íí 
$strîî 
+îî 
$strïï 
+ïï 
$strðð 
+ðð 
$strññ 
+ññ 
$stròò 
+òò 
$stróó 
+óó 
$strôô 
+ôô 
$strõõ 
+õõ 
$ströö 
+öö 
$str÷÷ 
+÷÷ 
$strøø 
+øø 
$strùù 
+ùù 
$strúú 
+úú 
$strûû 
+ûû 
$strüü 
+üü 
$strýý 
+ýý 
$strþþ 
+þþ 
$strÿÿ 
+ÿÿ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str
 
+
 

selectTipo
 
+
 
$str  
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str  
+¡ ¢
$str 
+ 
$str ¤
+¥ ¦
$str ¾
+¿ À
$str ¥
+¦ §
$str 
+ 
$str ø
+ù ú
$str ò
+ó ô
$str   
+   
$str¡¡ 
+¡¡ 
$str¢¢ 
+¢¢ 
$str££ 
+££ 
$str¤¤ 
+¤¤ 
$str¥¥ 
+¥¥ 
$str¦¦ 
+¦¦ 
$str§§ 
+§§ 
$str¨¨ ò
+¨¨ó ô
$str©© 
+©© 
$strªª 
+ªª 
$str«« 
+«« 
$str¬¬ 
+¬¬ 
$str­­ 
+­­ 
$str®® 
+®® 
$str¯¯ þ
+¯¯ÿ 
$str°° 
+°° 
$str±± 
+±± 
$str²² 
+²² 
$str³³ ©
+³³ª «
$str´´ 
+´´ 
$strµµ 
+µµ 
$str¶¶ 
+¶¶ 
$str·· 
+·· 
$str¸¸ 
+¸¸ 
$str¹¹ 
+¹¹ 
$strºº 
+ºº 
$str»» 
+»» 
$str¼¼ 
+¼¼ 
$str½½ 
+½½ 
$str¾¾ 
+¾¾ 
$str¿¿ 
+¿¿ 
$strÀÀ 
+ÀÀ 
$strÁÁ þ
+ÁÁÿ 
$strÂÂ 
+ÂÂ 
$strÃÃ 
+ÃÃ 
$strÄÄ 
+ÄÄ 
$strÅÅ ©
+ÅÅª «
$strÆÆ 
+ÆÆ 
$strÇÇ 
+ÇÇ 
$strÈÈ 
+ÈÈ 
$strÉÉ 
+ÉÉ 
$strÊÊ 
+ÊÊ 
$strËË 
+ËË 
$strÌÌ 
+ÌÌ 
$strÍÍ 
+ÍÍ 
$strÎÎ ±
+ÎÎ² ³
$strÏÏ 
+ÏÏ 
$strÐÐ 
+ÐÐ 
$strÑÑ 
+ÑÑ 
$strÒÒ 
+ÒÒ 
$strÓÓ 
+ÓÓ 
$strÔÔ 
+ÔÔ 
$strÕÕ 
+ÕÕ 
$strÖÖ þ
+ÖÖÿ 
$str×× 
+×× 
$strØØ 
+ØØ 
$strÙÙ 
+ÙÙ 
$strÚÚ ©
+ÚÚª «
$strÛÛ 
+ÛÛ 
$strÜÜ 
+ÜÜ 
$strÝÝ 
+ÝÝ 
$strÞÞ 
+ÞÞ 
$strßß 
+ßß 
$stràà 
+àà 
$stráá 
+áá 
$strââ 
+ââ 
$strãã 
+ãã 
$strää 
+ää 
$stråå 
+åå 
$strææ 
+ææ 
$strçç 
+çç 
$strèè þ
+èèÿ 
$stréé 
+éé 
$strêê 
+êê 
$strëë 
+ëë 
$strìì ©
+ììª «
$stríí 
+íí 
$strîî 
+îî 
$strïï 
+ïï 
$strðð 
+ðð 
$strññ 
+ññ 
$stròò 
+òò 
$stróó 
+óó 
$strôô 
+ôô 
$strõõ 
+õõ 
$ströö 
+öö 
$str÷÷ 
+÷÷ 
$strøø 
+øø 
$strùù 
+ùù 
$strúú þ
+úúÿ 
$strûû 
+ûû 
$strüü 
+üü 
$strýý 
+ýý 
$strþþ ©
+þþª «
$strÿÿ 
+ÿÿ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+  ¡
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str   
+   
$str¡¡ 
+¡¡ 
$str¢¢ 
+¢¢ 
$str££ 
+££ 
$str¤¤ 
+¤¤ 
$str¥¥ 
+¥¥ 
$str¦¦ 
+¦¦ 
$str§§ 
+§§ 
$str¨¨ 
+¨¨ 
$str©© 
+©© 
$strªª 
+ªª 
$str«« 
+«« 
$str¬¬ 
+¬¬ 
$str­­ 
+­­ 
$str®® 
+®® 
$str¯¯ 
+¯¯ 
$str°° 
+°° 
$str±± 
+±± 
$str
²² 4
+
²²5 6
$str³³ 
+³³ 
$str´´ 
+´´ 
$strµµ 
+µµ 
$str¶¶ 
+¶¶ 
$str·· 
+·· 
$str¸¸ 
+¸¸ 
$str¹¹ 
+¹¹ 
$strºº 
+ºº 
$str»» 
+»» 
$str¼¼ 
+¼¼ 
$str½½ 
+½½ 
$str¾¾ 
+¾¾ 
$str¿¿ 
+¿¿ 
$strÀÀ 
+ÀÀ 
$strÁÁ 
+ÁÁ 
$strÂÂ 
+ÂÂ 
$strÃÃ 
+ÃÃ 
$strÄÄ 
+ÄÄ 
$strÅÅ 
+ÅÅ 
$strÆÆ 
+ÆÆ 
$strÇÇ 
+ÇÇ 
$strÈÈ 
+ÈÈ 
$strÉÉ 
+ÉÉ 
$strÊÊ 
+ÊÊ 
$strËË 
+ËË 
$strÌÌ 
+ÌÌ 
$strÍÍ 
+ÍÍ 
$strÎÎ 
+ÎÎ 
$strÏÏ 
+ÏÏ 
$strÐÐ 
+ÐÐ 
$strÑÑ 
+ÑÑ 
$strÒÒ 
+ÒÒ 
$strÔÔ 
+ÔÔ 
$strÕÕ 
+ÕÕ 
$strÖÖ 
+ÖÖ 
$str×× 
+×× 
$strØØ 
+ØØ 
$strÙÙ 
+ÙÙ 
$strÚÚ 
+ÚÚ 
$strÛÛ 
+ÛÛ 
$strÜÜ 
+ÜÜ 
$strÝÝ 
+ÝÝ 
$strÞÞ 
+ÞÞ 
$strßß 
+ßß 
$stràà 
+àà 
$strââ 
+ââ 
$strãã 
+ãã 
$strää 
+ää 
$stråå 
+åå 
$strææ 
+ææ 
$strçç 
+çç 
$strèè 
+èè 
$stréé 
+éé 
$strêê 
+êê 
$strëë 
+ëë 
$strìì 
+ìì 
$stríí 
+íí 
$strîî 
+îî 
$strïï 
+ïï 
$strðð 
+ðð 
$strññ 
+ññ 
$stròò 
+òò 
$stróó 
+óó 
$strôô 
+ôô 
$strõõ 
+õõ 
$ströö 
+öö 
$str÷÷ 
+÷÷ 
$strùù 
+ùù 
$strúú 
+úú 
$strûû 
+ûû 
$strüü 
+üü 
$strýý 
+ýý 
$strþþ 
+þþ 
$strÿÿ 
+ÿÿ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str   
+   
$str¡¡ 
+¡¡ 
$str¢¢ 
+¢¢ 
$str££ 
+££ 
$str¤¤ 
+¤¤ 
$str¥¥ 
+¥¥ 
$str¦¦ 
+¦¦ 
$str§§ 
+§§ 
$str¨¨ 
+¨¨ 
$strªª 
+ªª 
$str«« 
+«« 
$str¬¬ 
+¬¬ 
$str­­ 
+­­ 
$str®® 
+®® 
$str¯¯ 
+¯¯ 
$str°° 
+°° 
$str±± 
+±± 
$str²² 
+²² 
$str³³ 
+³³ 
$str´´ 
+´´ 
$strµµ 
+µµ 
$str¶¶ 
+¶¶ 
$str·· 
+·· 
$str¸¸ 
+¸¸ 
$str¹¹ 
+¹¹ 
$strºº 
+ºº 
$str»» 
+»» 
$str¼¼ 
+¼¼ 
$str¾¾ 
+¾¾ 
$str¿¿ 
+¿¿ 
$strÀÀ 
+ÀÀ 
$strÁÁ 
+ÁÁ 
$strÂÂ 
+ÂÂ 
$strÃÃ 
+ÃÃ 
$strÄÄ 
+ÄÄ 
$strÅÅ 
+ÅÅ 
$strÆÆ 
+ÆÆ 
$strÇÇ 
+ÇÇ 
$strÈÈ 
+ÈÈ 
$strÉÉ 
+ÉÉ  
$strÊÊ 
+ÊÊ 
$strËË 
+ËË 
$strÌÌ 
+ÌÌ  
$strÍÍ 
+ÍÍ 
$strÎÎ 
+ÎÎ 
$strÏÏ 
+ÏÏ 
$strÐÐ 
+ÐÐ 
$strÑÑ 
+ÑÑ  
$strÒÒ 
+ÒÒ  
$strÓÓ 
+ÓÓ 
$strÔÔ 
+ÔÔ 
$strÕÕ 
+ÕÕ  
$strÖÖ 
+ÖÖ 
$str×× 
+×× 
$strØØ 
+ØØ  
$strÙÙ 
+ÙÙ 
$strÚÚ 
+ÚÚ 
$strÛÛ 
+ÛÛ  
$strÜÜ 
+ÜÜ 
$strÝÝ ±
+ÝÝ² ³
$strÞÞ 
+ÞÞ  
$strßß 
+ßß 
$stràà 
+àà 
$stráá 
+áá  
$strââ 
+ââ 
$strãã 
+ãã 
$strää 
+ää  
$stråå 
+åå 
$strææ 
+ææ 
$strçç 
+çç  
$strèè 
+èè 
$stréé §
+éé¨ ©
$strêê 
+êê  
$strëë 
+ëë 
$strìì 
+ìì 
$stríí 
+íí  
$strîî 
+îî 
$strïï 
+ïï 
$strðð 
+ðð  
$strññ 
+ññ 
$stròò ¨
+òò© ª
$stróó 
+óó  
$strôô 
+ôô 
$strõõ 
+õõ 
$ströö 
+öö 
$str÷÷ 
+÷÷ 
$strøø 
+øø 
$strùù 
+ùù 
$strúú 
+úú 
$strûû 
+ûû 
$strüü 
+üü 
$strýý 
+ýý 
$strþþ 
+þþ 
$strÿÿ 
+ÿÿ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str 
+ 
$str   
+   
$str¡¡ 
+¡¡ 
$str¢¢ 
+¢¢  ¡
$str££ 
+££ 
$str¤¤ 
+¤¤ 
$str¥¥ 
+¥¥ 
$str¦¦ 
+¦¦ 
$str§§ 
+§§  
$str¨¨ 
+¨¨ 
$str©© 
+©© 
$strªª 
+ªª  
$str«« 
+«« 
$str¬¬ 
+¬¬ 
$str­­ 
+­­ 
$str®® 
+®® 
$str¯¯ 
+¯¯ 
$str°° 
+°° 
$str±± 
+±±  
$str²² 
+²²  
$str³³ 
+³³ 
$str´´ 
+´´  
$strµµ 
+µµ 
$str¶¶ 
+¶¶  
$str·· 
+·· 
$str¸¸ 
+¸¸  
$str¹¹ 
+¹¹ 
$strºº 
+ºº  
$str»» 
+»» 
$str¼¼ 
+¼¼  
$str½½ ¦
+½½§ ¨
$str¾¾ 
+¾¾  
$str¿¿ 
+¿¿ 
$strÀÀ 
+ÀÀ  
$strÁÁ 
+ÁÁ 
$strÂÂ 
+ÂÂ  ¡
$strÃÃ ¨
+ÃÃ© ª
$strÄÄ 
+ÄÄ  ¡
$strÅÅ 
+ÅÅ  
$strÆÆ 
+ÆÆ 
$strÇÇ 
+ÇÇ 
$strÈÈ 
+ÈÈ 
$strÉÉ 
+ÉÉ 
$strÊÊ 
+ÊÊ  
$strËË 
+ËË 
$strÌÌ ¨
+ÌÌ© ª
$strÍÍ 
+ÍÍ 
$str
ÎÎ 
+
ÎÎ 
where
ÎÎ 
+
ÎÎ 
$str
ÏÏ 
+
ÏÏ 
orderby
ÏÏ 
+
ÏÏ 
$strÏÏ 
+ÏÏ 
$str
ÐÐ *
;
ÐÐ* +
return
ÒÒ 
sql
ÒÒ 
;
ÒÒ 
}
ÓÓ 
public
×× 

string
×× %
SelectScorecardCompleto
×× )
(
××) *
DateTime
××* 2
dtInicio
××3 ;
,
××; <
DateTime
××= E
dtFim
××F K
,
××K L
int
××M P
	unidadeId
××Q Z
,
××Z [
int
××\ _
tipo
××` d
,
××d e
int
××f i 
clusterSelected_Id
××j |
)
××| }
{
ØØ 
string
ÙÙ 
sql
ÙÙ 
;
ÙÙ 
sql
ÛÛ 
=
ÛÛ 
getSQLScorecard
ÛÛ 
(
ÛÛ 
dtInicio
ÛÛ &
,
ÛÛ& '
dtFim
ÛÛ( -
,
ÛÛ- .
	unidadeId
ÛÛ/ 8
,
ÛÛ8 9
tipo
ÛÛ: >
,
ÛÛ> ? 
clusterSelected_Id
ÛÛ@ R
)
ÛÛR S
;
ÛÛS T
return
ÞÞ 
sql
ÞÞ 
;
ÞÞ 
}
àà 
}ââ Á
VC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSet\TabelaDinamicaResultados.cs
	namespace 	
DTO
 
. 
	ResultSet 
{ 
public 

class $
TabelaDinamicaResultados )
{ 
public 
List 
< 
Trs 
> 
trsMeio  
{! "
get# &
;& '
set( +
;+ ,
}- .
public

 
List

 
<

 
Ths

 
>

 
trsCabecalho1

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
List 
< 
Ths 
> 
trsCabecalho2 &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
List 
< 
Ths 
> 
trsCabecalho3 &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
List 
< 
Trs 
> 
footer 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
CallBackTableBody '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string !
CallBackTableEsquerda +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
string &
CallBackTableTituloColunas 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
} 
public 

class 
Trs 
{ 
public 
string 
name 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
coolspan 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< 
Tds 
> 
tdsEsquerda $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
< 
Tds 
> 

tdsDireita #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
public   

class   
Tds   
{!! 
public"" 
string"" 
valor"" 
{"" 
get"" !
;""! "
set""# &
;""& '
}""( )
public## 
string## 
click## 
{## 
get## !
;##! "
set### &
;##& '
}##( )
public$$ 
int$$ 
coolspan$$ 
{$$ 
get$$ !
;$$! "
set$$# &
;$$& '
}$$( )
}%% 
public'' 

class'' 
Ths'' 
{(( 
public)) 
string)) 
name)) 
{)) 
get))  
;))  !
set))" %
;))% &
}))' (
public** 
int** 
coolspan** 
{** 
get** !
;**! "
set**# &
;**& '
}**( )
public++ 
List++ 
<++ 
Ths++ 
>++ 
tds++ 
{++ 
get++ "
;++" #
set++$ '
;++' (
}++) *
},, 
}33 Ã
WC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSet\VisaoGeralDaAreaResultSet.cs
	namespace 	
DTO
 
. 
	ResultSet 
{ 
public 

class %
VisaoGeralDaAreaResultSet *
{ 
public 
DateTime 
date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
_date 
{ 
get !
{" #
return$ *
date+ /
./ 0
ToString0 8
(8 9
$str9 E
)E F
;F G
}H I
}J K
public

 
decimal

 
	scorecard

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 
regId 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
regName 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 

level1Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

level2Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

level3Name  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
level1Id 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
level2Id 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
level3Id 
{ 
get !
;! "
set# &
;& '
}( )
public 
decimal 
scorecardJbs #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
decimal 
scorecardJbsReg &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
companySigla "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
decimal 
companyScorecard '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
decimal 
procentagemNc $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
nc 
{ 
get 
;  
set! $
;$ %
}& '
public 
decimal 
av 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 

ChartTitle  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
} A
YC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\TableResults\TableResultsForDataTable.cs
	namespace 	
DTO
 
. 
TableResults 
{ 
public 

class $
TableResultsForDataTable )
{ 
public		 
string		 
Departamento		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 
string

 
Level01

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
string 
Unit 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Level02 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Level02name !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
avaliado 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Sample 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Shift 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Phase 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
AddDate 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
NotEvaluatedIs $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
Auditor 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
ConformedIs !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
	Level03Id 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Level03Name !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Value 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
	ValueText 
{  !
get" %
;% &
set' *
;* +
}, -
public $
TableResultsForDataTable '
(' (
List( ,
<, -#
ConsolidationLevel02DTO- D
>D E
dbDataF L
)L M
{ 	
} 	
public!! $
TableResultsForDataTable!! '
(!!' (
)!!( )
{"" 	
}## 	
public%% 
void%% '
RetornaCadaPertpertyEmArray%% /
<%%/ 0
T%%0 1
>%%1 2
(%%2 3
List%%3 7
<%%7 8
T%%8 9
>%%9 :
obj%%; >
)%%> ?
{&& 	
foreach'' 
('' 
var'' 
i'' 
in'' 
obj'' !
.''! "
GetType''" )
('') *
)''* +
.''+ ,
GetProperties'', 9
(''9 :
)'': ;
)''; <
{(( 
var)) 
teste)) !
=))" #
i))$ %
.))% &
Name))& *
+))+ ,
$str))- 3
+))4 5
i))6 7
.))7 8
GetValue))8 @
())@ A
i))A B
,))B C
null))D H
)))H I
+))J K
$str))L P
;))P Q
}66 
}99 	
public;; 
List;; 
<;; $
TableResultsForDataTable;; ,
>;;, -1
%DataCollectionReportsProcessedResults;;. S
(;;S T
List;;T X
<;;X Y#
ConsolidationLevel01DTO;;Y p
>;;p q
dbData;;r x
);;x y
{<< 	
var== 1
%ListaResultDataCollectionReportsTable== 5
===6 7
new==8 ;
List==< @
<==@ A$
TableResultsForDataTable==A Y
>==Y Z
(==Z [
)==[ \
;==\ ]
foreach?? 
(?? 
var?? 
conslL1??  
in??! #
dbData??$ *
)??* +
{@@ 
foreachAA 
(AA 
varAA 
conslL2AA $
inAA% '
conslL1AA( /
.AA/ 0 
ConsolidationLevel02AA0 D
)AAD E
{BB 
foreachCC 
(CC 
varCC  
level02CC! (
inCC) +
conslL2CC, 3
.CC3 4
CollectionLevel02CC4 E
)CCE F
{DD 
foreachEE 
(EE  !
varEE! $
level03EE% ,
inEE- /
level02EE0 7
.EE7 8
CollectionLevel03EE8 I
)EEI J
{FF 
varGG 
	resultSetGG  )
=GG* +
newGG, /$
TableResultsForDataTableGG0 H
(GGH I
)GGI J
{HH 
DepartamentoII  ,
=II- .
conslL1II/ 6
.II6 7

DepartmentII7 A
.IIA B
NameIIB F
,IIF G
Level01JJ  '
=JJ( )
conslL1JJ* 1
.JJ1 2
Level01JJ2 9
.JJ9 :
NameJJ: >
,JJ> ?
UnitKK  $
=KK% &
conslL1KK' .
.KK. /
UnitKK/ 3
.KK3 4
NameKK4 8
,KK8 9
Level02nameNN  +
=NN, -
conslL2NN. 5
.NN5 6
Level02NN6 =
.NN= >
NameNN> B
,NNB C
avaliadoOO  (
=OO) *
level02OO+ 2
.OO2 3
EvaluationNumberOO3 C
.OOC D
ToStringOOD L
(OOL M
)OOM N
,OON O
SamplePP  &
=PP' (
level02PP) 0
.PP0 1
SamplePP1 7
.PP7 8
ToStringPP8 @
(PP@ A
)PPA B
,PPB C
ShiftQQ  %
=QQ& '
level02QQ( /
.QQ/ 0
ShiftQQ0 5
.QQ5 6
ToStringQQ6 >
(QQ> ?
)QQ? @
,QQ@ A
PhaseRR  %
=RR& '
level02RR( /
.RR/ 0
PhaseRR0 5
.RR5 6
ToStringRR6 >
(RR> ?
)RR? @
,RR@ A
AddDateSS  '
=SS( )
level02SS* 1
.SS1 2
AddDateSS2 9
.SS9 :
ToStringSS: B
(SSB C
$strSSC O
)SSO P
,SSP Q
NotEvaluatedIsTT  .
=TT/ 0
level02TT1 8
.TT8 9
NotEvaluatedIsTT9 G
?TTH I
$strTTJ Y
:TTZ [
$strTT\ g
,TTg h
AuditorUU  '
=UU( )
level02UU* 1
.UU1 2
UserSgqUU2 9
.UU9 :
NameUU: >
,UU> ?
ConformedIsWW  +
=WW, -
level03WW. 5
.WW5 6
ConformedIsWW6 A
?WWB C
$strWWD M
:WWN O
$strWWP ]
,WW] ^
Level03NameYY  +
=YY, -
level03YY. 5
.YY5 6
Level03YY6 =
.YY= >
NameYY> B
,YYB C
ValueZZ  %
=ZZ& '
stringZZ( .
.ZZ. /
FormatZZ/ 5
(ZZ5 6
$strZZ6 >
,ZZ> ?
level03ZZ@ G
.ZZG H
ValueZZH M
)ZZM N
,ZZN O
	ValueText[[  )
=[[* +
level03[[, 3
.[[3 4
	ValueText[[4 =
}\\ 
;\\ 1
%ListaResultDataCollectionReportsTable__ A
.__A B
Add__B E
(__E F
	resultSet__F O
)__O P
;__P Q
}`` 
}aa 
}bb 
}dd 
returnee 1
%ListaResultDataCollectionReportsTableee 8
;ee8 9
}gg 	
}kk 
}ll É
@C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\ShiftDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
ShiftDTO 
: 

EntityBase &
{ 
[		 	

DataMember			 
]		 
public

 
string

 
Description

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
Name 
{ 
get  
{! "
return# )
$str* 1
+2 3
Description4 ?
;? @
}A B
}C D
public 
void 
ValidaShiftDTO "
(" #
)# $
{ 	
ValidaBaseEntity 
( 
) 
; 
string 
DescValidated  
;  !
Guard 
. 
CheckStringFull !
(! "
retorno" )
:) *
out+ .
DescValidated/ <
,< =
propName> F
:F G
$strH U
,U V
	requeridoW `
:` a
trueb f
,f g
valueh m
:m n
Descriptiono z
)z {
;{ |
Description 
= 
DescValidated '
;' (
} 	
} 
} Ô
?C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\SyncDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
SyncDTO 
{ 
public 
int 
	idUnidade 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
lockPattern !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
key 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
html 
{ 
get  
;  !
set" %
;% &
}' (
public 
List 
< 

RootObject 
> 
Root  $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
List 
< $
correctiveactioncomplete ,
>, -

naoprecisa. 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
public 
CollectionHtmlDTO  
CollectionHtml! /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
List 
< #
ConsolidationLevel01DTO +
>+ ,

ListToSave. 8
;8 9
public 
List 
< 
CorrectiveActionDTO '
>' (
ListToSaveCA) 5
;5 6
} 
public 

class 
NextnextRoot 
{ 
public 
string 
id 
{ 
get 
; 
set  #
;# $
}% &
public   
string   
	auditorid   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
public!! 
string!! 
@class!! 
{!! 
get!! "
;!!" #
set!!$ '
;!!' (
}!!) *
public"" 
string"" 
conform"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
public## 
string## 
date## 
{## 
get##  
;##  !
set##" %
;##% &
}##' (
public$$ 
string$$ 
	level03id$$ 
{$$  !
get$$" %
;$$% &
set$$' *
;$$* +
}$$, -
public%% 
string%% 

totalerror%%  
{%%! "
get%%# &
;%%& '
set%%( +
;%%+ ,
}%%- .
public&& 
string&& 
value&& 
{&& 
get&& !
;&&! "
set&&# &
;&&& '
}&&( )
public'' 
string'' 
	valueText'' 
{''  !
get''" %
;''% &
set''' *
;''* +
}'', -
public((  
CollectionLevel03DTO(( # 
collectionLevel03DTO(($ 8
{((9 :
get((; >
;((> ?
set((@ C
;((C D
}((E F
}** 
public,, 

class,, 
NextRoot,, 
{-- 
public.. 
string.. 
remove.. 
{.. 
get.. "
;.." #
set..$ '
;..' (
}..) *
public// 
string// 
id// 
{// 
get// 
;// 
set//  #
;//# $
}//% &
public00 
string00 
idcorrectiveaction00 (
{00) *
get00+ .
;00. /
set000 3
;003 4
}005 6
public11 
string11 
	auditorid11 
{11  !
get11" %
;11% &
set11' *
;11* +
}11, -
public22 
string22 

cattletype22  
{22! "
get22# &
;22& '
set22( +
;22+ ,
}22- .
public33 
string33 

chainspeed33  
{33! "
get33# &
;33& '
set33( +
;33+ ,
}33- .
public44 
string44 
@class44 
{44 
get44 "
;44" #
set44$ '
;44' (
}44) *
public55 
string55 #
consecutivefailurelevel55 -
{55. /
get550 3
;553 4
set555 8
;558 9
}55: ;
public66 
string66 #
consecutivefailuretotal66 -
{66. /
get660 3
;663 4
set665 8
;668 9
}66: ;
public77 
string77 
date77 
{77 
get77  
;77  !
set77" %
;77% &
}77' (
public88 
string88 
datetime88 
{88  
get88! $
;88$ %
set88& )
;88) *
}88+ ,
public99 
string99 
defects99 
{99 
get99  #
;99# $
set99% (
;99( )
}99* +
public:: 
string:: 
evaluate:: 
{::  
get::! $
;::$ %
set::& )
;::) *
}::+ ,
public;; 
string;; 
	level01id;; 
{;;  !
get;;" %
;;;% &
set;;' *
;;;* +
};;, -
public<< 
string<< 
	level02id<< 
{<<  !
get<<" %
;<<% &
set<<' *
;<<* +
}<<, -
public== 
string== 
	lotnumber== 
{==  !
get==" %
;==% &
set==' *
;==* +
}==, -
public>> 
string>> 
mudscore>> 
{>>  
get>>! $
;>>$ %
set>>& )
;>>) *
}>>+ ,
public?? 
string?? 
notavaliable?? "
{??# $
get??% (
;??( )
set??* -
;??- .
}??/ 0
public@@ 
string@@ 
period@@ 
{@@ 
get@@ "
;@@" #
set@@$ '
;@@' (
}@@) *
publicAA 
stringAA 
phaseAA 
{AA 
getAA !
;AA! "
setAA# &
;AA& '
}AA( )
publicBB 
stringBB 
reauditBB 
{BB 
getBB  #
;BB# $
setBB% (
;BB( )
}BB* +
publicCC 
stringCC 
reauditnumberCC #
{CC$ %
getCC& )
;CC) *
setCC+ .
;CC. /
}CC0 1
publicDD 
stringDD 
sampleDD 
{DD 
getDD "
;DD" #
setDD$ '
;DD' (
}DD) *
publicEE 
stringEE 
shiftEE 
{EE 
getEE !
;EE! "
setEE# &
;EE& '
}EE( )
publicFF 
stringFF 
startphasedateFF $
{FF% &
getFF' *
;FF* +
setFF, /
;FF/ 0
}FF1 2
publicGG 
stringGG 
	unidadeidGG 
{GG  !
getGG" %
;GG% &
setGG' *
;GG* +
}GG, -
publicHH 
ListHH 
<HH 
NextnextRootHH  
>HH  !
nextnextRootHH" .
{HH/ 0
getHH1 4
;HH4 5
setHH6 9
;HH9 :
}HH; <
}II 
publicKK 

classKK 

RootObjectKK 
{LL 
publicMM 
stringMM 
biasedunbiasedMM $
{MM% &
getMM' *
;MM* +
setMM, /
;MM/ 0
}MM1 2
publicNN 
stringNN 
@classNN 
{NN 
getNN "
;NN" #
setNN$ '
;NN' (
}NN) *
publicOO 
stringOO 
	completedOO 
{OO  !
getOO" %
;OO% &
setOO' *
;OO* +
}OO, -
publicPP 
stringPP 
completereauditPP %
{PP& '
getPP( +
;PP+ ,
setPP- 0
;PP0 1
}PP2 3
publicQQ 
ListQQ 
<QQ $
correctiveactioncompleteQQ ,
>QQ, -$
correctiveactioncompleteQQ. F
{QQG H
getQQI L
;QQL M
setQQN Q
;QQQ R
}QQS T
publicRR 
stringRR 
dateRR 
{RR 
getRR  
;RR  !
setRR" %
;RR% &
}RR' (
publicSS 
stringSS 
datetimeSS 
{SS  
getSS! $
;SS$ %
setSS& )
;SS) *
}SS+ ,
publicTT 
stringTT 
lastevaluateTT "
{TT# $
getTT% (
;TT( )
setTT* -
;TT- .
}TT/ 0
publicUU 
stringUU 

lastsampleUU  
{UU! "
getUU# &
;UU& '
setUU( +
;UU+ ,
}UU- .
publicVV 
stringVV 
	level01idVV 
{VV  !
getVV" %
;VV% &
setVV' *
;VV* +
}VV, -
publicWW 
stringWW 
more3defectsWW "
{WW# $
getWW% (
;WW( )
setWW* -
;WW- .
}WW/ 0
publicXX 
stringXX 
periodXX 
{XX 
getXX "
;XX" #
setXX$ '
;XX' (
}XX) *
publicYY 
stringYY 
reauditYY 
{YY 
getYY  #
;YY# $
setYY% (
;YY( )
}YY* +
publicZZ 
stringZZ 
reauditnumberZZ #
{ZZ$ %
getZZ& )
;ZZ) *
setZZ+ .
;ZZ. /
}ZZ0 1
public[[ 
string[[ 
shift[[ 
{[[ 
get[[ !
;[[! "
set[[# &
;[[& '
}[[( )
public\\ 
string\\ 
sidewitherros\\ #
{\\$ %
get\\& )
;\\) *
set\\+ .
;\\. /
}\\0 1
public]] 
string]] 
totalevaluate]] #
{]]$ %
get]]& )
;]]) *
set]]+ .
;]]. /
}]]0 1
public^^ 
string^^ 
totalreaudits^^ #
{^^$ %
get^^& )
;^^) *
set^^+ .
;^^. /
}^^0 1
public__ 
string__ 
	unidadeid__ 
{__  !
get__" %
;__% &
set__' *
;__* +
}__, -
public`` 
List`` 
<`` 
NextRoot`` 
>`` 
nextRoot`` &
{``' (
get``) ,
;``, -
set``. 1
;``1 2
}``3 4
publicaa 
stringaa 
Idaa 
{aa 
getaa 
;aa 
internalaa  (
setaa) ,
;aa, -
}aa. /
publiccc #
ConsolidationLevel01DTOcc &7
+ValidateAndCreateDtoConsolidationLevel01DTOcc' R
(ccR S
)ccS T
{dd 	
returnee 
newee #
ConsolidationLevel01DTOee .
(ee. /
thisee/ 3
)ee3 4
;ee4 5
}ff 	
publichh 
Listhh 
<hh 
CorrectiveActionDTOhh '
>hh' (
makeCAhh) /
(hh/ 0
)hh0 1
{ii 	
varjj 
CAjj 
=jj 
newjj 
Listjj 
<jj 
CorrectiveActionDTOjj 1
>jj1 2
(jj2 3
)jj3 4
;jj4 5
ifkk 
(kk 
thiskk 
.kk $
correctiveactioncompletekk -
.kk- .
IsNullkk. 4
(kk4 5
)kk5 6
)kk6 7
throwll 
newll 
ExceptionHelperll )
(ll) *
$strll* J
)llJ K
;llK L
foreachnn 
(nn 
varnn 
caTelann 
innn  "
thisnn# '
.nn' ($
correctiveactioncompletenn( @
)nn@ A
{oo 
varpp 
caTelatoAddpp 
=pp  !
newpp" %
CorrectiveActionDTOpp& 9
(pp9 :
)pp: ;
{qq 
idcorrectiveactionss &
=ss' (
Guardss) .
.ss. /
ConverteValorss/ <
<ss< =
intss= @
>ss@ A
(ssA B
caTelassB H
.ssH I
idcorrectiveactionssI [
,ss[ \
$strss] x
)ssx y
,ssy z
	AuditorIdtt 
=tt 
Guardtt  %
.tt% &
ConverteValortt& 3
<tt3 4
inttt4 7
>tt7 8
(tt8 9
caTelatt9 ?
.tt? @
	auditoridtt@ I
,ttI J
$strttK ]
)tt] ^
,tt^ _
DescriptionFailureuu &
=uu' (
Guarduu) .
.uu. /
ConverteValoruu/ <
<uu< =
stringuu= C
>uuC D
(uuD E
caTelauuE K
.uuK L
descriptionfailureuuL ^
,uu^ _
$struu` {
)uu{ |
,uu| }%
ImmediateCorrectiveActionvv -
=vv. /
Guardvv0 5
.vv5 6
ConverteValorvv6 C
<vvC D
stringvvD J
>vvJ K
(vvK L
caTelavvL R
.vvR S%
immediatecorrectiveactionvvS l
,vvl m
$str	vvn 
)
vv 
,
vv 
ProductDispositionww &
=ww' (
Guardww) .
.ww. /
ConverteValorww/ <
<ww< =
stringww= C
>wwC D
(wwD E
caTelawwE K
.wwK L
productdispositionwwL ^
,ww^ _
$strww` {
)ww{ |
,ww| }
PreventativeMeasurexx '
=xx( )
Guardxx* /
.xx/ 0
ConverteValorxx0 =
<xx= >
stringxx> D
>xxD E
(xxE F
caTelaxxF L
.xxL M
preventativemeasurexxM `
,xx` a
$strxxb ~
)xx~ 
,	xx 
SlaughterIdyy 
=yy  !
Guardyy" '
.yy' (
ConverteValoryy( 5
<yy5 6
intyy6 9
>yy9 :
(yy: ;
caTelayy; A
.yyA B
slaugthersignatureyyB T
,yyT U
$stryyV q
)yyq r
,yyr s
DateTimeSlaughter{{ %
={{& '
DateTime{{( 0
.{{0 1
Now{{1 4
,{{4 5
TechinicalId||  
=||! "
Guard||# (
.||( )
ConverteValor||) 6
<||6 7
int||7 :
>||: ;
(||; <
caTela||< B
.||B C
techinicalsignature||C V
,||V W
$str||X t
)||t u
,||u v
DateTimeTechinical~~ &
=~~' (
DateTime~~) 1
.~~1 2
Now~~2 5
,~~5 6
AuditStartTime
 "
=
# $
DateTime
% -
.
- .
Now
. 1
,
1 2"
DateCorrectiveAction
 (
=
) *
DateTime
+ 3
.
3 4
Now
4 7
}
 
;
 
if
 
(
 
caTela
 
.
 
Id
 
!=
  
null
! %
)
% &
if
 
(
 
caTela
 
.
 
Id
 !
.
! "
Length
" (
>
) *
$num
+ ,
)
, -
caTelatoAdd
 #
.
# $
Id
$ &
=
' (
int
) ,
.
, -
Parse
- 2
(
2 3
caTela
3 9
.
9 :
Id
: <
)
< =
;
= >
if
 
(
 
caTela
 
.
 !
CollectionLevel02Id
 .
!=
/ 1
null
2 6
)
6 7
if
 
(
 
caTela
 
.
 !
CollectionLevel02Id
 2
.
2 3
Length
3 9
>
: ;
$num
< =
)
= >
caTelatoAdd
 #
.
# $!
CollectionLevel02Id
$ 7
=
8 9
int
: =
.
= >
Parse
> C
(
C D
caTela
D J
.
J K!
CollectionLevel02Id
K ^
)
^ _
;
_ `
CA
 
.
 
Add
 
(
 
caTelatoAdd
 "
)
" #
;
# $
}
 
return
 
CA
 
;
 
}
 	
}
 
public
 

class
 &
correctiveactioncomplete
 )
{
 
public
 
string
 
	auditorid
 
{
  !
get
" %
;
% &
set
' *
;
* +
}
, -
public
 
string
 !
CollectionLevel02Id
 )
{
* +
get
, /
;
/ 0
set
1 4
;
4 5
}
6 7
public
 
string
 
@class
 
{
 
get
 "
;
" #
set
$ '
;
' (
}
) *
public
 
string
 
date
 
{
 
get
  
;
  !
set
" %
;
% &
}
' (
public
 
string
 
Id
 
{
 
get
 
;
 
set
  #
;
# $
}
% &
public
 
string
  
descriptionfailure
 (
{
) *
get
+ .
;
. /
set
0 3
;
3 4
}
5 6
public
 
string
  
idcorrectiveaction
 (
{
) *
get
+ .
;
. /
set
0 3
;
3 4
}
5 6
public
 
string
 '
immediatecorrectiveaction
 /
{
0 1
get
2 5
;
5 6
set
7 :
;
: ;
}
< =
public
   
string
   
	level01id
   
{
    !
get
  " %
;
  % &
set
  ' *
;
  * +
}
  , -
public
¡¡ 
string
¡¡ 
period
¡¡ 
{
¡¡ 
get
¡¡ "
;
¡¡" #
set
¡¡$ '
;
¡¡' (
}
¡¡) *
public
¢¢ 
string
¢¢ !
preventativemeasure
¢¢ )
{
¢¢* +
get
¢¢, /
;
¢¢/ 0
set
¢¢1 4
;
¢¢4 5
}
¢¢6 7
public
££ 
string
££  
productdisposition
££ (
{
££) *
get
££+ .
;
££. /
set
££0 3
;
££3 4
}
££5 6
public
¤¤ 
string
¤¤ 
shift
¤¤ 
{
¤¤ 
get
¤¤ !
;
¤¤! "
set
¤¤# &
;
¤¤& '
}
¤¤( )
public
¥¥ 
string
¥¥  
slaugthersignature
¥¥ (
{
¥¥) *
get
¥¥+ .
;
¥¥. /
set
¥¥0 3
;
¥¥3 4
}
¥¥5 6
public
¦¦ 
string
¦¦ !
techinicalsignature
¦¦ )
{
¦¦* +
get
¦¦, /
;
¦¦/ 0
set
¦¦1 4
;
¦¦4 5
}
¦¦6 7
public
§§ 
string
§§ 
	unidadeid
§§ 
{
§§  !
get
§§" %
;
§§% &
set
§§' *
;
§§* +
}
§§, -
}
¨¨ 
}©© ÿ
?C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\UnitDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
UnitDTO 
: 

EntityBase %
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public		 
int		 
Number		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public 
string 
Code 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Ip 
{ 
get 
; 
set  #
;# $
}% &
} 
} 
CC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\UnitUserDTO.cs
	namespace 	
DTO
 
. 
DTO 
{ 
public 

class 
UnitUserDTO 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
	UserSgqId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
UnitId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
? 
Role 
{ 
get 
; 
set  #
;# $
}% &
public

 
UnitDTO

 
Unit

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
} 
} :
?C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\DTO\UserDTO.cs
	namespace 	
DTO
 
. 
DTO 
{		 
public

 

class

 
UserDTO

 
:

 

EntityBase

 %
{ 
public 
virtual 
List 
< !
ParCompanyXUserSgqDTO 1
>1 2
ParCompanyXUserSgq3 E
{F G
getH K
;K L
setM P
;P Q
}R S
[ 	
StringLength	 
( 
$num 
) 
] 
[ 	
Display	 
( 
Name 
= 
$str $
)$ %
]% &
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
StringLength	 
( 
$num 
, 
MinimumLength '
=( )
$num* +
)+ ,
], -
[ 	
Display	 
( 
Name 
= 
$str $
)$ %
]% &
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
isTechnical 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
isSlaugther 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
[ 
] 
Roles 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
List 
< 
UnitUserDTO 
>  
UnitUser! )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
public   
bool   
isBrasil   
{   
get   "
;  " #
set  $ '
;  ' (
}  ) *
public!! 
Nullable!! 
<!! 
int!! 
>!! 
ParCompany_Id!! *
{!!+ ,
get!!- 0
;!!0 1
set!!2 5
;!!5 6
}!!7 8
public## 
DateTime## 
?## 
PasswordDate## %
{##& '
get##( +
;##+ ,
set##- 0
;##0 1
}##2 3
public%% 
bool%% 
ChangePassword%% "
{%%# $
get%%% (
;%%( )
set%%* -
;%%- .
}%%/ 0
=%%1 2
false%%3 8
;%%8 9
public** 
UserDTO** 
(** 
)** 
{++ 	
}-- 	
public44 
void44 
ValidaObjetoUserDTO44 '
(44' (
)44( )
{55 	
if77 
(77 
string77 
.77 
IsNullOrEmpty77 $
(77$ %
Name77% )
)77) *
&&77+ -
string77. 4
.774 5
IsNullOrEmpty775 B
(77B C
Password77C K
)77K L
)77L M
throw88 
new88 
ExceptionHelper88 )
(88) *
$str88* O
)88O P
;88P Q
Name99 
=99 
Regex99 
.99 
Replace99  
(99  !
Name99! %
,99% &
$str99' -
,99- .
$str99/ 1
)991 2
;992 3
SetName:: 
(:: 
Name:: 
):: 
;:: 
SetPassword;; 
(;; 
Password;;  
);;  !
;;;! "
}<< 	
publicCC 
voidCC 
SetNameCC 
(CC 
stringCC "
nameCC# '
)CC' (
{DD 	
GuardEE 
.EE 
ForNullOrEmptyEE  
(EE  !
nameEE! %
,EE% &
$strEE' B
)EEB C
;EEC D
GuardFF 
.FF 
CheckStringFullFF !
(FF! "
outFF" %
nameFF& *
,FF* +
$strFF, 6
,FF6 7
nameFF8 <
,FF< =
	requeridoFF> G
:FFG H
trueFFI M
,FFM N
mensagemFFO W
:FFW X
$strFFY t
)FFt u
;FFu v
}II 	
publicOO 
voidOO 
SetPasswordOO 
(OO  
stringOO  &
passOO' +
)OO+ ,
{PP 	
GuardQQ 
.QQ 
ForNullOrEmptyQQ  
(QQ  !
passQQ! %
,QQ% &
$strQQ' B
)QQB C
;QQC D
GuardRR 
.RR  
VerificaEspacoStringRR &
(RR& '
passRR' +
,RR+ ,
$strRR- c
)RRc d
;RRd e
GuardSS 
.SS 
CheckStringFullSS !
(SS! "
outSS" %
passSS& *
,SS* +
$strSS, 6
,SS6 7
passSS8 <
,SS< =
mensagemSS> F
:SSF G
$strSSH c
,SSc d
	requeridoSSe n
:SSn o
trueSSp t
)SSt u
;SSu v
}UU 	
publicWW 
boolWW 
appWW 
{WW 
getWW 
;WW 
setWW "
;WW" #
}WW$ %
publicZZ 
stringZZ 
ConfirmPasswordZZ %
{ZZ& '
getZZ( +
;ZZ+ ,
setZZ- 0
;ZZ0 1
}ZZ2 3
public[[ 
Nullable[[ 
<[[ 
System[[ 
.[[ 
DateTime[[ '
>[[' (
	AcessDate[[) 2
{[[3 4
get[[5 8
;[[8 9
set[[: =
;[[= >
}[[? @
public\\ 
string\\ 
Email\\ 
{\\ 
get\\ !
;\\! "
set\\# &
;\\& '
}\\( )
public]] 
string]] 
Phone]] 
{]] 
get]] !
;]]! "
set]]# &
;]]& '
}]]( )
public^^ 
bool^^ 
IsWeb^^ 
{^^ 
get^^ 
;^^  
set^^! $
;^^$ %
}^^& '
public__ 
IEnumerable__ 
<__ 
int__ 
>__ 
ListParCompany_Id__  1
{__2 3
get__4 7
;__7 8
set__9 <
;__< =
}__> ?
public`` 
IEnumerable`` 
<`` 
string`` !
>``! "
ListRole``# +
{``, -
get``. 1
;``1 2
set``3 6
;``6 7
}``8 9
publicaa 
boolaa 
IsActiveaa 
{aa 
getaa "
;aa" #
setaa$ '
;aa' (
}aa) *
}bb 
}cc ¨G
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\GenericReturn.cs
	namespace 	
DTO
 
. 
Helpers 
{ 
public 

class 
GenericReturn 
< 
T  
>  !
{ 
public 
string 
Mensagem 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
MensagemExcecao %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
T 
Retorno 
{ 
get 
; 
private  '
set( +
;+ ,
}- .
public 
string 
Inner 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
string 

StackTrace  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 
int 
IdSaved 
{ 
get  
;  !
set" %
;% &
}' (
public 
GenericReturn 
( 
) 
{ 	
} 	
public"" 
GenericReturn"" 
("" 
T"" 
obj"" "
)""" #
{## 	

SetRetorno$$ 
($$ 
obj$$ 
)$$ 
;$$ 
}%% 	
public++ 
GenericReturn++ 
(++ 
string++ #
	_mensagem++$ -
)++- .
{,, 	

SetMessage-- 
(-- 
	_mensagem--  
)--  !
;--! "
}.. 	
public55 
GenericReturn55 
(55 
string55 #
	_mensagem55$ -
,55- .
T55/ 0
obj551 4
)554 5
{66 	
Guard77 
.77 
ForNullOrEmpty77  
(77  !
	_mensagem77! *
,77* +
$str77, ^
)77^ _
;77_ `
Mensagem88 
=88 
	_mensagem88  
;88  !

SetRetorno:: 
(:: 
obj:: 
):: 
;:: 
};; 	
publicBB 
GenericReturnBB 
(BB 
	ExceptionBB &
_exBB' *
,BB* +
stringBB, 2
mensagemPadraoBB3 A
=BBB C
$strBBD F
)BBF G
{CC 	
SetMensagemExcecaoDD 
(DD 
_exDD "
,DD" #
mensagemPadraoDD$ 2
)DD2 3
;DD3 4
}EE 	
publicMM 
GenericReturnMM 
(MM 
	ExceptionMM &
_exMM' *
,MM* +
stringMM, 2
mensagemPadraoMM3 A
,MMA B
TMMC D
objMME H
)MMH I
{NN 	

SetRetornoOO 
(OO 
objOO 
)OO 
;OO 
SetMensagemExcecaoPP 
(PP 
_exPP "
,PP" #
mensagemPadraoPP$ 2
)PP2 3
;PP3 4
}QQ 	
public[[ 
void[[ 

SetRetorno[[ 
([[ 
T[[  
obj[[! $
)[[$ %
{\\ 	
if]] 
(]] 
obj]] 
.]] 
IsNull]] 
(]] 
)]] 
)]] 
throw^^ 
new^^ 
ExceptionHelper^^ )
(^^) *
$str^^* B
)^^B C
;^^C D
Retorno`` 
=`` 
obj`` 
;`` 
}aa 	
privategg 
voidgg 

SetMessagegg 
(gg  
stringgg  &
	_mensagemgg' 0
)gg0 1
{hh 	
Guardii 
.ii 
ForNullOrEmptyii  
(ii  !
	_mensagemii! *
,ii* +
$strii, ^
)ii^ _
;ii_ `
Mensagemjj 
=jj 
	_mensagemjj  
;jj  !
}kk 	
publicrr 
voidrr 
SetMensagemExcecaorr &
(rr& '
	Exceptionrr' 0
_exrr1 4
,rr4 5
stringrr6 <
mensagemPadraorr= K
)rrK L
{ss 	
vartt 
innerMessagett 
=tt 
$strtt !
;tt! "
varvv 
isExceptionHelpervv !
=vv" #
_exvv$ '
.vv' (
GetTypevv( /
(vv/ 0
)vv0 1
==vv2 4
typeofvv5 ;
(vv; <
ExceptionHelpervv< K
)vvK L
;vvL M
ifxx 
(xx 
!xx 
isExceptionHelperxx "
&&xx# %
_exxx& )
.xx) *
InnerExceptionxx* 8
!=xx9 ;
nullxx< @
)xx@ A
ifyy 
(yy 
_exyy 
.yy 
InnerExceptionyy &
.yy& '
GetTypeyy' .
(yy. /
)yy/ 0
==yy1 3
typeofyy4 :
(yy: ;
ExceptionHelperyy; J
)yyJ K
)yyK L
{zz 
_ex{{ 
={{ 
_ex{{ 
.{{ 
InnerException{{ ,
;{{, -
isExceptionHelper|| %
=||& '
_ex||( +
.||+ ,
GetType||, 3
(||3 4
)||4 5
==||6 8
typeof||9 ?
(||? @
ExceptionHelper||@ O
)||O P
;||P Q
}}} 
Mensagem 
= 
isExceptionHelper (
?) *
_ex+ .
.. /
Message/ 6
:7 8
mensagemPadrao9 G
;G H
MensagemExcecao
 
=
 
Mensagem
 &
+
' (
$str
) ,
+
- .
_ex
/ 2
.
2 3
Message
3 :
;
: ;
Inner
 
=
 
innerMessage
  
;
  !
CreateStackTrace
 
(
 
_ex
  
)
  !
;
! "
var
  
hasInnnerException
 "
=
# $
_ex
% (
.
( )
InnerException
) 7
;
7 8
var
 
counter
 
=
 
$num
 
;
 
while
 
(
  
hasInnnerException
 %
!=
& (
null
) -
)
- .
{
 
MensagemExcecao
 
+=
  "
$str
# 3
+
4 5
counter
6 =
+
> ?
$str
@ F
+
G H 
hasInnnerException
I [
.
[ \
Message
\ c
;
c d
Inner
 
+=
 
$str
 +
+
, -
counter
. 5
+
6 7
$str
8 =
+
> ? 
hasInnnerException
@ R
.
R S
InnerException
S a
;
a b
this
 
.
 

StackTrace
 
+=
  "
$str
# 7
+
8 9
counter
: A
+
B C
$str
D J
;
J K
CreateStackTrace
  
(
  ! 
hasInnnerException
! 3
)
3 4
;
4 5 
hasInnnerException
 "
=
# $ 
hasInnnerException
% 7
.
7 8
InnerException
8 F
;
F G
counter
 
++
 
;
 
}
 
}
 	
private
 
void
 
CreateStackTrace
 %
(
% &
	Exception
& /
_ex
0 3
)
3 4
{
 	
var
 
st
 
=
 
new
 

StackTrace
 #
(
# $
_ex
$ '
,
' (
true
) -
)
- .
;
. /
var
   
counter
   
=
   
$num
   
;
   
while
¡¡ 
(
¡¡ 
st
¡¡ 
.
¡¡ 
GetFrame
¡¡ 
(
¡¡ 
counter
¡¡ &
)
¡¡& '
!=
¡¡( *
null
¡¡+ /
)
¡¡/ 0
{
¢¢ 
var
££ 
frame
££ 
=
££ 
st
££ 
.
££ 
GetFrame
££ '
(
££' (
counter
££( /
)
££/ 0
;
££0 1

StackTrace
¤¤ 
+=
¤¤ 
$str
¤¤ )
+
¤¤* +
frame
¤¤, 1
.
¤¤1 2
	GetMethod
¤¤2 ;
(
¤¤; <
)
¤¤< =
.
¤¤= >
DeclaringType
¤¤> K
.
¤¤K L
Name
¤¤L P
;
¤¤P Q

StackTrace
¥¥ 
+=
¥¥ 
$str
¥¥ &
+
¥¥' (
frame
¥¥) .
.
¥¥. /
GetFileLineNumber
¥¥/ @
(
¥¥@ A
)
¥¥A B
;
¥¥B C

StackTrace
¦¦ 
+=
¦¦ 
$str
¦¦ "
;
¦¦" #
counter
§§ 
++
§§ 
;
§§ 
}
¨¨ 
}
©© 	
}
­­ 
}®® 
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\Helpers\ExceptionHelper.cs
[ 
Serializable 
( 
) 
] 
public 
class 
ExceptionHelper 
: 
System %
.% &
	Exception& /
{ 
public 

ExceptionHelper 
( 
) 
: 
base #
(# $
)$ %
{& '
}( )
public 

ExceptionHelper 
( 
string !
message" )
)) *
:+ ,
base- 1
(1 2
message2 9
)9 :
{; <
}= >
public 

ExceptionHelper 
( 
string !
message" )
,) *
System+ 1
.1 2
	Exception2 ;
inner< A
)A B
:C D
baseE I
(I J
messageJ Q
,Q R
innerS X
)X Y
{Z [
}\ ]
	protected 
ExceptionHelper 
( 
System $
.$ %
Runtime% ,
., -
Serialization- :
.: ;
SerializationInfo; L
infoM Q
,Q R
System 
. 
Runtime 
. 
Serialization $
.$ %
StreamingContext% 5
context6 =
)= >
{ 
} 
} î
AC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\Helpers\Guard.cs
	namespace 	
DTO
 
. 
Helpers 
{ 
public 

static 
class 
Guard 
{ 
public 
static 
String 
LANGUAGE_PT_BR +
=, -
$str. 5
;5 6
public 
static 
String 
LANGUAGE_EN_US +
=, -
$str. 5
;5 6
public 
static 
String 
LANGUAGE_DEFAULT -
=. /
$str0 9
;9 :
public 
static 
DateTime 
GetNextWeekday -
(- .
DateTime. 6
start7 <
,< =
	DayOfWeek> G
dayH K
)K L
{ 	
int 
	daysToAdd 
= 
( 
( 
int !
)! "
day" %
-& '
(( )
int) ,
), -
start- 2
.2 3
	DayOfWeek3 <
+= >
$num? @
)@ A
%B C
$numD E
;E F
return 
start 
. 
AddDays  
(  !
	daysToAdd! *
)* +
;+ ,
} 	
public!! 
static!! 
DateTime!! "
PrimeiroDiaMesAnterior!! 5
(!!5 6
DateTime!!6 >
data!!? C
)!!C D
{"" 	
if## 
(## 
data## 
.## 
Month## 
.## 
Equals## !
(##! "
$num##" #
)### $
)##$ %
{$$ 
return%% 
new%% 
DateTime%% #
(%%# $
data%%$ (
.%%( )
Year%%) -
-%%. /
$num%%0 1
,%%1 2
data%%3 7
.%%7 8
	AddMonths%%8 A
(%%A B
-%%B C
$num%%C D
)%%D E
.%%E F
Month%%F K
,%%K L
$num%%M N
)%%N O
;%%O P
}&& 
return'' 
new'' 
DateTime'' 
(''  
data''  $
.''$ %
Year''% )
,'') *
data''+ /
.''/ 0
	AddMonths''0 9
(''9 :
-'': ;
$num''; <
)''< =
.''= >
Month''> C
,''C D
$num''E F
)''F G
;''G H
}(( 	
public// 
static// 
void// !
CheckStringFullSimple// 0
(//0 1
string//1 7
name//8 <
,//< =
string//> D
proName//E L
)//L M
{00 	
var11 
nameValidado11 
=11 
$str11 !
;11! "
Guard22 
.22 
CheckStringFull22 !
(22! "
out22" %
nameValidado22& 2
,222 3
proName224 ;
,22; <
name22= A
,22A B
$str22C N
+22O P
proName22Q X
+22Y Z
$str22[ h
,22h i
true22j n
)22n o
;22o p
}33 	
public55 
static55 
string55 !
CheckStringFullSimple55 2
(552 3
string553 9
name55: >
)55> ?
{66 	
var77 
nameValidado77 
=77 
$str77 !
;77! "
Guard88 
.88 
CheckStringFull88 !
(88! "
out88" %
nameValidado88& 2
,882 3
$str884 :
,88: ;
name88< @
,88@ A
$str88B \
,88\ ]
true88^ b
)88b c
;88c d
return99 
nameValidado99 
;99  
}:: 	
public<< 
static<< 
DateTime<< 
Next<< #
(<<# $
this<<$ (
DateTime<<) 1
from<<2 6
,<<6 7
	DayOfWeek<<8 A
	dayOfWeek<<B K
)<<K L
{== 	
int>> 
start>> 
=>> 
(>> 
int>> 
)>> 
from>> !
.>>! "
	DayOfWeek>>" +
;>>+ ,
int?? 
target?? 
=?? 
(?? 
int?? 
)?? 
	dayOfWeek?? '
;??' (
if@@ 
(@@ 
target@@ 
<=@@ 
start@@ 
)@@  
targetAA 
+=AA 
$numAA 
;AA 
returnBB 
fromBB 
.BB 
AddDaysBB 
(BB  
targetBB  &
-BB' (
startBB) .
)BB. /
;BB/ 0
}CC 	
publicEE 
staticEE 
intEE 
GetUsuarioLogado_IdEE -
(EE- .
HttpContextBaseEE. =
filterContextEE> K
)EEK L
{FF 	
varGG 
userIdGG 
=GG 
$numGG 
;GG 

HttpCookieHH 
cookieHH 
=HH 
filterContextHH  -
.HH- .
RequestHH. 5
.HH5 6
CookiesHH6 =
.HH= >
GetHH> A
(HHA B
$strHHB T
)HHT U
;HHU V
ifII 
(II 
cookieII 
!=II 
nullII 
)II 
ifJJ 
(JJ 
!JJ 
stringJJ 
.JJ 
IsNullOrEmptyJJ )
(JJ) *
cookieJJ* 0
.JJ0 1
ValuesJJ1 7
[JJ7 8
$strJJ8 @
]JJ@ A
)JJA B
)JJB C
intKK 
.KK 
TryParseKK  
(KK  !
cookieKK! '
.KK' (
ValuesKK( .
[KK. /
$strKK/ 7
]KK7 8
.KK8 9
ToStringKK9 A
(KKA B
)KKB C
,KKC D
outKKE H
userIdKKI O
)KKO P
;KKP Q
returnMM 
userIdMM 
;MM 
}NN 	
publicjj 
staticjj 
decimaljj "
ConverteValorCalculadojj 4
(jj4 5
stringjj5 ;
valorStringjj< G
)jjG H
{kk 	
decimalll 
numberll 
;ll 
decimalmm 
retornomm 
;mm 
valorStringnn 
=nn 
valorStringnn %
.nn% &
ToUppernn& -
(nn- .
)nn. /
.nn/ 0
Replacenn0 7
(nn7 8
$charnn8 ;
,nn; <
$charnn= @
)nn@ A
;nnA B
ifoo 
(oo 
Decimaloo 
.oo 
TryParseoo  
(oo  !
valorStringoo! ,
,oo, -
outoo. 1
numberoo2 8
)oo8 9
)oo9 :
{pp 
retornoqq 
=qq 
numberqq  
;qq  !
}rr 
elsess 
{tt 
valorStringuu 
=uu 
valorStringuu )
.uu) *
ToUpperuu* 1
(uu1 2
)uu2 3
.uu3 4
Replaceuu4 ;
(uu; <
$charuu< ?
,uu? @
$charuuA D
)uuD E
;uuE F
doublevv 
v1vv 
=vv 
doublevv "
.vv" #
Parsevv# (
(vv( )
valorStringvv) 4
.vv4 5
Splitvv5 :
(vv: ;
$charvv; >
)vv> ?
[vv? @
$numvv@ A
]vvA B
,vvB C
CultureInfovvD O
.vvO P
InvariantCulturevvP `
)vv` a
;vva b
doubleww 
v2ww 
=ww 
doubleww "
.ww" #
Parseww# (
(ww( )
valorStringww) 4
.ww4 5
Splitww5 :
(ww: ;
$charww; >
)ww> ?
[ww? @
$numww@ A
]wwA B
)wwB C
;wwC D
varxx 
	resultadoxx 
=xx 
v1xx  "
*xx# $
Mathxx% )
.xx) *
Powxx* -
(xx- .
$numxx. 0
,xx0 1
v2xx2 4
)xx4 5
;xx5 6
retornoyy 
=yy 
Convertyy !
.yy! "
	ToDecimalyy" +
(yy+ ,
	resultadoyy, 5
,yy5 6
CultureInfoyy7 B
.yyB C
InvariantCultureyyC S
)yyS T
;yyT U
}{{ 
return}} 
retorno}} 
;}} 
}~~ 	
public
 
static
 
void
 
ParseDateToSql
 )
(
) *
string
* 0
date
1 5
,
5 6
ref
7 :
DateTime
; C
_dtvalue
D L
)
L M
{
 	
if
 
(
 
GlobalConfig
 
.
 
LanguageBrasil
 +
)
+ ,
DateTime
 
.
 
TryParseExact
 &
(
& '
date
' +
,
+ ,
$str
- 9
,
9 :
CultureInfo
; F
.
F G
InvariantCulture
G W
,
W X
DateTimeStyles
Y g
.
g h
None
h l
,
l m
out
n q
_dtvalue
r z
)
z {
;
{ |
if
 
(
 
GlobalConfig
 
.
 
LanguageEUA
 (
)
( )
DateTime
 
.
 
TryParseExact
 &
(
& '
date
' +
,
+ ,
$str
- 9
,
9 :
CultureInfo
; F
.
F G
InvariantCulture
G W
,
W X
DateTimeStyles
Y g
.
g h
None
h l
,
l m
out
n q
_dtvalue
r z
)
z {
;
{ |
}
 	
public
 
static
 
DateTime
 
ParseDateToSqlV2
 /
(
/ 0
string
0 6
date
7 ;
)
; <
{
 	
if
 
(
 
string
 
.
 
IsNullOrEmpty
 $
(
$ %
date
% )
)
) *
)
* +
return
 
DateTime
 
.
  
Now
  #
;
# $
var
 
_dtvalue
 
=
 
DateTime
 #
.
# $
Now
$ '
;
' (
if
¡¡ 
(
¡¡ 
GlobalConfig
¡¡ 
.
¡¡ 
LanguageBrasil
¡¡ +
)
¡¡+ ,
DateTime
¢¢ 
.
¢¢ 
TryParseExact
¢¢ &
(
¢¢& '
date
¢¢' +
,
¢¢+ ,
$str
¢¢- 9
,
¢¢9 :
CultureInfo
¢¢; F
.
¢¢F G
InvariantCulture
¢¢G W
,
¢¢W X
DateTimeStyles
¢¢Y g
.
¢¢g h
None
¢¢h l
,
¢¢l m
out
¢¢n q
_dtvalue
¢¢r z
)
¢¢z {
;
¢¢{ |
if
¤¤ 
(
¤¤ 
GlobalConfig
¤¤ 
.
¤¤ 
LanguageEUA
¤¤ (
)
¤¤( )
DateTime
¥¥ 
.
¥¥ 
TryParseExact
¥¥ &
(
¥¥& '
date
¥¥' +
,
¥¥+ ,
$str
¥¥- 9
,
¥¥9 :
CultureInfo
¥¥; F
.
¥¥F G
InvariantCulture
¥¥G W
,
¥¥W X
DateTimeStyles
¥¥Y g
.
¥¥g h
None
¥¥h l
,
¥¥l m
out
¥¥n q
_dtvalue
¥¥r z
)
¥¥z {
;
¥¥{ |
return
§§ 
_dtvalue
§§ 
;
§§ 
}
¨¨ 	
public
ªª 
enum
ªª 
CultureCurrent
ªª "
{
«« 	
BR
¬¬ 
,
¬¬ 
EUA
­­ 
,
­­ 
}
®® 	
;
®®	 

public
°° 
static
°° 
DateTime
°° 
ParseDateToSqlV2
°° /
(
°°/ 0
string
°°0 6
date
°°7 ;
,
°°; <
CultureCurrent
°°= K
culture
°°L S
)
°°S T
{
±± 	
if
¾¾ 
(
¾¾ 
string
¾¾ 
.
¾¾ 
IsNullOrEmpty
¾¾ $
(
¾¾$ %
date
¾¾% )
)
¾¾) *
)
¾¾* +
return
¿¿ 
DateTime
¿¿ 
.
¿¿  
Now
¿¿  #
;
¿¿# $
var
ÁÁ 
_dtvalue
ÁÁ 
=
ÁÁ 
DateTime
ÁÁ #
.
ÁÁ# $
Now
ÁÁ$ '
;
ÁÁ' (
if
ÃÃ 
(
ÃÃ 
culture
ÃÃ 
==
ÃÃ 
CultureCurrent
ÃÃ )
.
ÃÃ) *
BR
ÃÃ* ,
)
ÃÃ, -
DateTime
ÄÄ 
.
ÄÄ 
TryParseExact
ÄÄ &
(
ÄÄ& '
date
ÄÄ' +
,
ÄÄ+ ,
$str
ÄÄ- 9
,
ÄÄ9 :
CultureInfo
ÄÄ; F
.
ÄÄF G
InvariantCulture
ÄÄG W
,
ÄÄW X
DateTimeStyles
ÄÄY g
.
ÄÄg h
None
ÄÄh l
,
ÄÄl m
out
ÄÄn q
_dtvalue
ÄÄr z
)
ÄÄz {
;
ÄÄ{ |
if
ÆÆ 
(
ÆÆ 
culture
ÆÆ 
==
ÆÆ 
CultureCurrent
ÆÆ )
.
ÆÆ) *
EUA
ÆÆ* -
)
ÆÆ- .
DateTime
ÇÇ 
.
ÇÇ 
TryParseExact
ÇÇ &
(
ÇÇ& '
date
ÇÇ' +
,
ÇÇ+ ,
$str
ÇÇ- 9
,
ÇÇ9 :
CultureInfo
ÇÇ; F
.
ÇÇF G
InvariantCulture
ÇÇG W
,
ÇÇW X
DateTimeStyles
ÇÇY g
.
ÇÇg h
None
ÇÇh l
,
ÇÇl m
out
ÇÇn q
_dtvalue
ÇÇr z
)
ÇÇz {
;
ÇÇ{ |
return
ÉÉ 
_dtvalue
ÉÉ 
;
ÉÉ 
}
ÊÊ 	
public
ÌÌ 
static
ÌÌ 
DateTime
ÌÌ 
ParseDateToSqlV2
ÌÌ /
(
ÌÌ/ 0
string
ÌÌ0 6
date
ÌÌ7 ;
,
ÌÌ; <
string
ÌÌ= C
format
ÌÌD J
)
ÌÌJ K
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
string
ÎÎ 
.
ÎÎ 
IsNullOrEmpty
ÎÎ $
(
ÎÎ$ %
date
ÎÎ% )
)
ÎÎ) *
)
ÎÎ* +
return
ÏÏ 
DateTime
ÏÏ 
.
ÏÏ  
Now
ÏÏ  #
;
ÏÏ# $
var
ÑÑ 
_dtvalue
ÑÑ 
=
ÑÑ 
DateTime
ÑÑ #
.
ÑÑ# $
Now
ÑÑ$ '
;
ÑÑ' (
DateTime
ÓÓ 
.
ÓÓ 
TryParseExact
ÓÓ "
(
ÓÓ" #
date
ÓÓ# '
,
ÓÓ' (
format
ÓÓ) /
,
ÓÓ/ 0
CultureInfo
ÓÓ1 <
.
ÓÓ< =
InvariantCulture
ÓÓ= M
,
ÓÓM N
DateTimeStyles
ÓÓO ]
.
ÓÓ] ^
None
ÓÓ^ b
,
ÓÓb c
out
ÓÓd g
_dtvalue
ÓÓh p
)
ÓÓp q
;
ÓÓq r
return
ÕÕ 
_dtvalue
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
public
ØØ 
static
ØØ 
string
ØØ $
ConverteValorCalculado
ØØ 3
(
ØØ3 4
decimal
ØØ4 ;
valorDecimal
ØØ< H
)
ØØH I
{
ÙÙ 	
if
ÛÛ 
(
ÛÛ 
valorDecimal
ÛÛ 
==
ÛÛ 
$num
ÛÛ  !
)
ÛÛ! "
{
ÜÜ 
return
ÝÝ 
$str
ÝÝ 
;
ÝÝ  
}
ÞÞ 
int
àà 

dezElevado
àà 
=
àà 
$num
àà 
;
àà 
if
áá 
(
áá 
valorDecimal
áá 
>
áá 
$num
áá  
)
áá  !
{
ââ 
if
ãã 
(
ãã 
valorDecimal
ãã  
>
ãã! "
$num
ãã# %
)
ãã% &
{
ää 
while
åå 
(
åå 
valorDecimal
åå '
>
åå( )
$num
åå* ,
)
åå, -
{
ææ 
valorDecimal
çç $
=
çç% &
valorDecimal
çç' 3
/
çç4 5
$num
çç6 8
;
çç8 9

dezElevado
èè "
++
èè" $
;
èè$ %
}
éé 
}
êê 
else
ëë 
if
ëë 
(
ëë 
valorDecimal
ëë %
<
ëë& '
$num
ëë( )
)
ëë) *
{
ìì 
while
íí 
(
íí 
valorDecimal
íí '
<
íí( )
$num
íí* +
)
íí+ ,
{
îî 
valorDecimal
ïï $
=
ïï% &
valorDecimal
ïï' 3
*
ïï4 5
$num
ïï6 8
;
ïï8 9

dezElevado
ðð "
--
ðð" $
;
ðð$ %
}
ññ 
}
òò 
}
óó 
else
ôô 
{
õõ 
if
öö 
(
öö 
valorDecimal
öö  
<
öö! "
-
öö# $
$num
öö$ &
)
öö& '
{
÷÷ 
while
øø 
(
øø 
valorDecimal
øø '
<
øø( )
-
øø* +
$num
øø+ -
)
øø- .
{
ùù 
valorDecimal
úú $
=
úú% &
valorDecimal
úú' 3
/
úú4 5
$num
úú6 8
;
úú8 9

dezElevado
ûû "
++
ûû" $
;
ûû$ %
}
üü 
}
ýý 
else
þþ 
if
þþ 
(
þþ 
valorDecimal
þþ %
>
þþ& '
-
þþ( )
$num
þþ) *
)
þþ* +
{
ÿÿ 
while
 
(
 
valorDecimal
 '
>
( )
-
* +
$num
+ ,
)
, -
{
 
valorDecimal
 $
=
% &
valorDecimal
' 3
*
4 5
$num
6 8
;
8 9

dezElevado
 "
--
" $
;
$ %
}
 
}
 
}
 
var
 
	resultado
 
=
 
valorDecimal
 (
.
( )
ToString
) 1
(
1 2
$str
2 7
)
7 8
+
9 :
$str
; A
+
B C

dezElevado
D N
.
N O
ToString
O W
(
W X
)
X Y
;
Y Z
return
 
	resultado
 
;
 
}
 	
public
 
static
 
string
  
MesangemModelError
 /
(
/ 0
string
0 6
	fieldName
7 @
,
@ A
bool
B F
isSelecionado
G T
)
T U
{
 	
var
 
selecionado
 
=
 
isSelecionado
 +
?
, -
$str
. ;
:
< =
$str
> J
;
J K
return
 
$str
 
+
  !
	fieldName
" +
+
, -
$str
. ?
+
@ A
selecionado
B M
+
N O
$str
P S
;
S T
}
 	
public
 
static
 
bool
 
ConverteValor
 (
<
( )
T
) *
>
* +
(
+ ,
this
, 0
object
1 7
valor
8 =
,
= >
out
? B
T
C D
	resultado
E N
,
N O
T
P Q
valorPadrao
R ]
,
] ^
string
_ e
paramiterName
f s
)
s t
{
 	
try
 
{
 
	resultado
 
=
 
(
 
T
 
)
 
Convert
 &
.
& '

ChangeType
' 1
(
1 2
valor
2 7
,
7 8
typeof
9 ?
(
? @
T
@ A
)
A B
)
B C
;
C D
return
 
true
 
;
 
}
 
catch
 
(
 
	Exception
 
e
 
)
 
{
 
	resultado
   
=
   
valorPadrao
   '
;
  ' (
throw
¡¡ 
new
¡¡ 
ExceptionHelper
¡¡ )
(
¡¡) *
$str
¡¡* J
+
¡¡K L
valor
¡¡M R
.
¡¡R S
ToString
¡¡S [
(
¡¡[ \
)
¡¡\ ]
+
¡¡^ _
$str
¡¡` h
+
¡¡i j
typeof
¡¡k q
(
¡¡q r
T
¡¡r s
)
¡¡s t
+
¡¡u v
$str¡¡w 
+¡¡ 
paramiterName¡¡ 
,¡¡ 
e¡¡  
)¡¡  ¡
;¡¡¡ ¢
}
¢¢ 
}
££ 	
public
¥¥ 
static
¥¥ 
T
¥¥ 
ConverteValor
¥¥ %
<
¥¥% &
T
¥¥& '
>
¥¥' (
(
¥¥( )
this
¥¥) -
object
¥¥. 4
valor
¥¥5 :
)
¥¥: ;
{
¦¦ 	
return
§§ 
(
§§ 
T
§§ 
)
§§ 
Convert
§§ 
.
§§ 

ChangeType
§§ (
(
§§( )
valor
§§) .
,
§§. /
typeof
§§0 6
(
§§6 7
T
§§7 8
)
§§8 9
)
§§9 :
;
§§: ;
}
¨¨ 	
public
ªª 
static
ªª 
T
ªª 
ConverteValor
ªª %
<
ªª% &
T
ªª& '
>
ªª' (
(
ªª( )
this
ªª) -
object
ªª. 4
valor
ªª5 :
,
ªª: ;
T
ªª< =
valorPadrao
ªª> I
,
ªªI J
string
ªªK Q
paramiterName
ªªR _
)
ªª_ `
{
«« 	
try
¬¬ 
{
­­ 
return
®® 
(
®® 
T
®® 
)
®® 
Convert
®® !
.
®®! "

ChangeType
®®" ,
(
®®, -
valor
®®- 2
,
®®2 3
typeof
®®4 :
(
®®: ;
T
®®; <
)
®®< =
)
®®= >
;
®®> ?
}
¯¯ 
catch
°° 
(
°° 
	Exception
°° 
e
°° 
)
°° 
{
±± 
throw
²² 
new
²² 
ExceptionHelper
²² )
(
²²) *
$str
²²* J
+
²²K L
valor
²²M R
.
²²R S
ToString
²²S [
(
²²[ \
)
²²\ ]
+
²²^ _
$str
²²` h
+
²²i j
typeof
²²k q
(
²²q r
T
²²r s
)
²²s t
+
²²u v
$str²²w 
+²² 
paramiterName²² 
,²² 
e²²  
)²²  ¡
;²²¡ ¢
}
´´ 
}
µµ 	
public
·· 
static
·· 
T
·· 
ConverteValor
·· %
<
··% &
T
··& '
>
··' (
(
··( )
this
··) -
object
··. 4
valor
··5 :
,
··: ;
string
··< B
paramiterName
··C P
)
··P Q
{
¸¸ 	
try
¹¹ 
{
ºº 
return
»» 
(
»» 
T
»» 
)
»» 
Convert
»» !
.
»»! "

ChangeType
»»" ,
(
»», -
valor
»»- 2
,
»»2 3
typeof
»»4 :
(
»»: ;
T
»»; <
)
»»< =
)
»»= >
;
»»> ?
}
¼¼ 
catch
½½ 
(
½½ 
	Exception
½½ 
e
½½ 
)
½½ 
{
¾¾ 
throw
¿¿ 
new
¿¿ 
ExceptionHelper
¿¿ )
(
¿¿) *
$str
¿¿* J
+
¿¿K L
valor
¿¿M R
.
¿¿R S
ToString
¿¿S [
(
¿¿[ \
)
¿¿\ ]
+
¿¿^ _
$str
¿¿` i
+
¿¿j k
typeof
¿¿l r
(
¿¿r s
T
¿¿s t
)
¿¿t u
+
¿¿v w
$str¿¿x 
+¿¿ 
paramiterName¿¿ 
,¿¿ 
e¿¿  ¡
)¿¿¡ ¢
;¿¿¢ £
}
ÁÁ 
}
ÂÂ 	
public
ÈÈ 
static
ÈÈ 
string
ÈÈ 
AsString
ÈÈ %
(
ÈÈ% &
this
ÈÈ& *
object
ÈÈ+ 1
valor
ÈÈ2 7
)
ÈÈ7 8
{
ÉÉ 	
try
ÊÊ 
{
ËË 
return
ÌÌ 
Convert
ÌÌ 
.
ÌÌ 
ToString
ÌÌ '
(
ÌÌ' (
valor
ÌÌ( -
)
ÌÌ- .
;
ÌÌ. /
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
ExceptionHelper
ÎÎ "
)
ÎÎ" #
{
ÏÏ 
return
ÐÐ 
$str
ÐÐ 
;
ÐÐ 
}
ÑÑ 
}
ÒÒ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ "
CheckListNullOrEmpty
ÔÔ /
<
ÔÔ/ 0
T
ÔÔ0 1
>
ÔÔ1 2
(
ÔÔ2 3
List
ÔÔ3 7
<
ÔÔ7 8
T
ÔÔ8 9
>
ÔÔ9 :
result
ÔÔ; A
,
ÔÔA B
string
ÔÔC I
messsage
ÔÔJ R
)
ÔÔR S
{
ÕÕ 	
if
ÖÖ 
(
ÖÖ 
result
ÖÖ 
.
ÖÖ 
IsNull
ÖÖ 
(
ÖÖ 
)
ÖÖ 
)
ÖÖ  
throw
×× 
new
×× 
ExceptionHelper
×× )
(
××) *
messsage
××* 2
)
××2 3
;
××3 4
if
ÙÙ 
(
ÙÙ 
result
ÙÙ 
.
ÙÙ 
Count
ÙÙ 
==
ÙÙ 
$num
ÙÙ  !
)
ÙÙ! "
throw
ÚÚ 
new
ÚÚ 
ExceptionHelper
ÚÚ )
(
ÚÚ) *
messsage
ÚÚ* 2
)
ÚÚ2 3
;
ÚÚ3 4
}
ÛÛ 	
public
ÝÝ 
static
ÝÝ 
string
ÝÝ 
AsString
ÝÝ %
(
ÝÝ% &
this
ÝÝ& *
object
ÝÝ+ 1
valor
ÝÝ2 7
,
ÝÝ7 8
string
ÝÝ9 ?
valorPadrao
ÝÝ@ K
=
ÝÝL M
$str
ÝÝN P
)
ÝÝP Q
{
ÞÞ 	
try
ßß 
{
àà 
return
áá 
Convert
áá 
.
áá 
ToString
áá '
(
áá' (
valor
áá( -
)
áá- .
;
áá. /
}
ââ 
catch
ãã 
(
ãã 
ExceptionHelper
ãã "
)
ãã" #
{
ää 
return
åå 
valorPadrao
åå "
;
åå" #
}
ææ 
}
çç 	
public
éé 
static
éé 
bool
éé #
VerifyStringNullValue
éé 0
(
éé0 1
string
éé1 7
verify
éé8 >
)
éé> ?
{
êê 	
return
ëë 
!
ëë 
(
ëë 
verify
ëë 
!=
ëë 
null
ëë #
&&
ëë$ &
(
ëë' (
verify
ëë( .
.
ëë. /
Equals
ëë/ 5
(
ëë5 6
$str
ëë6 <
)
ëë< =
||
ëë> @
verify
ëëA G
.
ëëG H
Equals
ëëH N
(
ëëN O
$str
ëëO Z
)
ëëZ [
)
ëë[ \
)
ëë\ ]
;
ëë] ^
}
ìì 	
public
îî 
static
îî 
DateTime
îî 

AsDateTime
îî )
(
îî) *
this
îî* .
object
îî/ 5
valor
îî6 ;
)
îî; <
{
ïï 	
try
ðð 
{
ññ 
return
òò 
Convert
òò 
.
òò 

ToDateTime
òò )
(
òò) *
valor
òò* /
)
òò/ 0
;
òò0 1
}
óó 
catch
ôô 
(
ôô 
ExceptionHelper
ôô "
)
ôô" #
{
õõ 
return
öö 
DateTime
öö 
.
öö  
Now
öö  #
;
öö# $
}
÷÷ 
}
øø 	
public
úú 
static
úú 
DateTime
úú 

AsDateTime
úú )
(
úú) *
this
úú* .
object
úú/ 5
valor
úú6 ;
,
úú; <
DateTime
úú= E
valorPadrao
úúF Q
)
úúQ R
{
ûû 	
try
üü 
{
ýý 
return
þþ 
Convert
þþ 
.
þþ 

ToDateTime
þþ )
(
þþ) *
valor
þþ* /
)
þþ/ 0
;
þþ0 1
}
ÿÿ 
catch
 
(
 
ExceptionHelper
 "
)
" #
{
 
return
 
valorPadrao
 "
;
" #
}
 
}
 	
public
 
static
 
void
 
VerifyIfIsBool
 )
(
) *
bool
* .
	isIAmBool
/ 8
,
8 9
string
: @
propName
A I
)
I J
{
 	
if
 
(
 
	isIAmBool
 
.
 
GetType
 !
(
! "
)
" #
!=
$ &
typeof
' -
(
- .
bool
. 2
)
2 3
)
3 4
throw
 
new
 
	Exception
 #
(
# $
$str
$ 4
+
5 6
propName
7 ?
+
@ A
$str
B S
)
S T
;
T U
}
 	
public
 
static
 
DateTime
 

AsDateTime
 )
(
) *
this
* .
object
/ 5
valor
6 ;
,
; <
DateTime
= E
valorPadrao
F Q
,
Q R
IFormatProvider
S b
formato
c j
)
j k
{
 	
try
 
{
 
return
 
Convert
 
.
 

ToDateTime
 )
(
) *
valor
* /
,
/ 0
formato
1 8
)
8 9
;
9 :
}
 
catch
 
(
 
ExceptionHelper
 "
)
" #
{
 
return
 
valorPadrao
 "
;
" #
}
 
}
 	
public
 
static
 
bool
 
IsNull
 !
(
! "
this
" &
object
' -
value
. 3
)
3 4
{
 	
try
 
{
   
if
¡¡ 
(
¡¡ 
value
¡¡ 
==
¡¡ 
null
¡¡ !
)
¡¡! "
{
¢¢ 
return
££ 
true
££ 
;
££  
}
¤¤ 
return
¥¥ 
false
¥¥ 
;
¥¥ 
}
¦¦ 
catch
§§ 
(
§§ 
ExceptionHelper
§§ "
)
§§" #
{
¨¨ 
return
©© 
false
©© 
;
©© 
}
ªª 
}
«« 	
public
­­ 
static
­­ 
bool
­­ 
	IsNotNull
­­ $
(
­­$ %
this
­­% )
object
­­* 0
value
­­1 6
)
­­6 7
{
®® 	
try
¯¯ 
{
°° 
if
±± 
(
±± 
value
±± 
!=
±± 
null
±± !
)
±±! "
{
²² 
return
³³ 
true
³³ 
;
³³  
}
´´ 
return
µµ 
false
µµ 
;
µµ 
}
¶¶ 
catch
·· 
(
·· 
ExceptionHelper
·· "
)
··" #
{
¸¸ 
return
¹¹ 
false
¹¹ 
;
¹¹ 
}
ºº 
}
»» 	
public
ÇÇ 
static
ÇÇ 
void
ÇÇ 

verifyDate
ÇÇ %
<
ÇÇ% &
T
ÇÇ& '
>
ÇÇ' (
(
ÇÇ( )
T
ÇÇ) *
obj
ÇÇ+ .
,
ÇÇ. /
string
ÇÇ0 6
property
ÇÇ7 ?
)
ÇÇ? @
{
ÈÈ 	
try
ÉÉ 
{
ÊÊ 
if
ËË 
(
ËË 
obj
ËË 
.
ËË 
GetType
ËË 
(
ËË  
)
ËË  !
.
ËË! "
GetProperty
ËË" -
(
ËË- .
property
ËË. 6
)
ËË6 7
!=
ËË8 :
null
ËË; ?
)
ËË? @
{
ÌÌ 
var
ÍÍ 
result
ÍÍ 
=
ÍÍ  
obj
ÍÍ! $
.
ÍÍ$ %
GetType
ÍÍ% ,
(
ÍÍ, -
)
ÍÍ- .
.
ÍÍ. /
GetProperty
ÍÍ/ :
(
ÍÍ: ;
property
ÍÍ; C
)
ÍÍC D
.
ÍÍD E
GetValue
ÍÍE M
(
ÍÍM N
obj
ÍÍN Q
,
ÍÍQ R
null
ÍÍS W
)
ÍÍW X
;
ÍÍX Y
if
ÏÏ 
(
ÏÏ 
result
ÏÏ 
==
ÏÏ !
null
ÏÏ" &
)
ÏÏ& '
{
ÐÐ 
obj
ÑÑ 
.
ÑÑ 
GetType
ÑÑ #
(
ÑÑ# $
)
ÑÑ$ %
.
ÑÑ% &
GetProperty
ÑÑ& 1
(
ÑÑ1 2
property
ÑÑ2 :
)
ÑÑ: ;
.
ÑÑ; <
SetValue
ÑÑ< D
(
ÑÑD E
obj
ÑÑE H
,
ÑÑH I
DateTime
ÑÑJ R
.
ÑÑR S
Now
ÑÑS V
)
ÑÑV W
;
ÑÑW X
}
ÒÒ 
else
ÓÓ 
{
ÔÔ 
var
ÕÕ 
date
ÕÕ  
=
ÕÕ! "
(
ÕÕ# $
DateTime
ÕÕ$ ,
)
ÕÕ, -
result
ÕÕ- 3
;
ÕÕ3 4
if
×× 
(
×× 
date
××  
.
××  !
IsNull
××! '
(
××' (
)
××( )
)
××) *
{
ØØ 
obj
ÙÙ 
.
ÙÙ  
GetType
ÙÙ  '
(
ÙÙ' (
)
ÙÙ( )
.
ÙÙ) *
GetProperty
ÙÙ* 5
(
ÙÙ5 6
property
ÙÙ6 >
)
ÙÙ> ?
.
ÙÙ? @
SetValue
ÙÙ@ H
(
ÙÙH I
obj
ÙÙI L
,
ÙÙL M
DateTime
ÙÙN V
.
ÙÙV W
Now
ÙÙW Z
)
ÙÙZ [
;
ÙÙ[ \
}
ÚÚ 
else
ÛÛ 
{
ÜÜ 
if
ÝÝ 
(
ÝÝ  
date
ÝÝ  $
==
ÝÝ% '
DateTime
ÝÝ( 0
.
ÝÝ0 1
MinValue
ÝÝ1 9
)
ÝÝ9 :
obj
ÞÞ  #
.
ÞÞ# $
GetType
ÞÞ$ +
(
ÞÞ+ ,
)
ÞÞ, -
.
ÞÞ- .
GetProperty
ÞÞ. 9
(
ÞÞ9 :
property
ÞÞ: B
)
ÞÞB C
.
ÞÞC D
SetValue
ÞÞD L
(
ÞÞL M
obj
ÞÞM P
,
ÞÞP Q
DateTime
ÞÞR Z
.
ÞÞZ [
Now
ÞÞ[ ^
)
ÞÞ^ _
;
ÞÞ_ `
}
ßß 
}
àà 
}
áá 
}
ââ 
catch
ãã 
(
ãã 
	Exception
ãã 
)
ãã 
{
ää 
obj
åå 
.
åå 
GetType
åå 
(
åå 
)
åå 
.
åå 
GetProperty
åå )
(
åå) *
property
åå* 2
)
åå2 3
.
åå3 4
SetValue
åå4 <
(
åå< =
obj
åå= @
,
åå@ A
DateTime
ååB J
.
ååJ K
Now
ååK N
)
ååN O
;
ååO P
}
ææ 
}
çç 	
public
êê 
static
êê 
DateTime
êê ,
ConverteStringPateParaDateTime
êê =
(
êê= >
string
êê> D

dataString
êêE O
)
êêO P
{
ëë 	
return
ìì 
DateTime
ìì 
.
ìì 

ParseExact
ìì &
(
ìì& '

dataString
ìì' 1
,
ìì1 2
$str
ìì3 ?
,
ìì? @
CultureInfo
ììA L
.
ììL M
InvariantCulture
ììM ]
)
ìì] ^
;
ìì^ _
}
íí 	
public
õõ 
static
õõ 
string
õõ 
dataValidar
õõ (
(
õõ( )
string
õõ) /
data
õõ0 4
)
õõ4 5
{
öö 	
if
øø 
(
øø 
string
øø 
.
øø 
IsNullOrEmpty
øø $
(
øø$ %
data
øø% )
)
øø) *
)
øø* +
{
ùù 
return
ûû 
null
ûû 
;
ûû 
}
üü 
if
þþ 
(
þþ 
data
þþ 
.
þþ 
Length
þþ 
!=
þþ 
$num
þþ !
)
þþ! "
{
ÿÿ 
return
 
$str
 =
;
= >
}
 
try
 
{
 
DateTime
 
dataSelecionada
 (
=
) *
Convert
+ 2
.
2 3

ToDateTime
3 =
(
= >
data
> B
)
B C
;
C D
return
 
null
 
;
 
}
 
catch
 
{
 
return
 
$str
 
+
  
data
! %
+
& '
$str
( 4
;
4 5
}
 
}
 	
const
 
string
 
cryptoKey3DES
 "
=
# $
$str
% 7
;
7 8
public
 
static
 
string
 
Criptografar3DES
 -
(
- .
string
. 4
Message
5 <
)
< =
{
 	
try
 
{
   
byte
¡¡ 
[
¡¡ 
]
¡¡ 
Results
¡¡ 
=
¡¡  
null
¡¡! %
;
¡¡% &
System
¢¢ 
.
¢¢ 
Text
¢¢ 
.
¢¢ 
UTF8Encoding
¢¢ (
UTF8
¢¢) -
=
¢¢. /
new
¢¢0 3
System
¢¢4 :
.
¢¢: ;
Text
¢¢; ?
.
¢¢? @
UTF8Encoding
¢¢@ L
(
¢¢L M
)
¢¢M N
;
¢¢N O&
MD5CryptoServiceProvider
££ (
HashProvider
££) 5
=
££6 7
new
££8 ;&
MD5CryptoServiceProvider
££< T
(
££T U
)
££U V
;
££V W
byte
¤¤ 
[
¤¤ 
]
¤¤ 
TDESKey
¤¤ 
=
¤¤  
HashProvider
¤¤! -
.
¤¤- .
ComputeHash
¤¤. 9
(
¤¤9 :
UTF8
¤¤: >
.
¤¤> ?
GetBytes
¤¤? G
(
¤¤G H
cryptoKey3DES
¤¤H U
)
¤¤U V
)
¤¤V W
;
¤¤W X,
TripleDESCryptoServiceProvider
¥¥ .
TDESAlgorithm
¥¥/ <
=
¥¥= >
new
¥¥? B,
TripleDESCryptoServiceProvider
¥¥C a
(
¥¥a b
)
¥¥b c
;
¥¥c d
TDESAlgorithm
¦¦ 
.
¦¦ 
Key
¦¦ !
=
¦¦" #
TDESKey
¦¦$ +
;
¦¦+ ,
TDESAlgorithm
§§ 
.
§§ 
Mode
§§ "
=
§§# $

CipherMode
§§% /
.
§§/ 0
ECB
§§0 3
;
§§3 4
TDESAlgorithm
¨¨ 
.
¨¨ 
Padding
¨¨ %
=
¨¨& '
PaddingMode
¨¨( 3
.
¨¨3 4
PKCS7
¨¨4 9
;
¨¨9 :
byte
©© 
[
©© 
]
©© 
DataToEncrypt
©© $
=
©©% &
UTF8
©©' +
.
©©+ ,
GetBytes
©©, 4
(
©©4 5
Message
©©5 <
)
©©< =
;
©©= >
try
ªª 
{
«« 
ICryptoTransform
¬¬ $
	Encryptor
¬¬% .
=
¬¬/ 0
TDESAlgorithm
¬¬1 >
.
¬¬> ?
CreateEncryptor
¬¬? N
(
¬¬N O
)
¬¬O P
;
¬¬P Q
Results
­­ 
=
­­ 
	Encryptor
­­ '
.
­­' (!
TransformFinalBlock
­­( ;
(
­­; <
DataToEncrypt
­­< I
,
­­I J
$num
­­K L
,
­­L M
DataToEncrypt
­­N [
.
­­[ \
Length
­­\ b
)
­­b c
;
­­c d
}
®® 
finally
¯¯ 
{
°° 
TDESAlgorithm
±± !
.
±±! "
Clear
±±" '
(
±±' (
)
±±( )
;
±±) *
HashProvider
²²  
.
²²  !
Clear
²²! &
(
²²& '
)
²²' (
;
²²( )
}
³³ 
return
´´ 
Convert
´´ 
.
´´ 
ToBase64String
´´ -
(
´´- .
Results
´´. 5
)
´´5 6
;
´´6 7
}
µµ 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
e
¶¶ 
)
¶¶ 
{
·· 
new
¸¸ 
	CreateLog
¸¸ 
(
¸¸ 
new
¸¸ !
	Exception
¸¸" +
(
¸¸+ ,
$str
¸¸, S
,
¸¸S T
e
¸¸U V
)
¸¸V W
)
¸¸W X
;
¸¸X Y
return
¹¹ 
Message
¹¹ 
;
¹¹ 
}
ºº 
}
»» 	
public
½½ 
static
½½ 
string
½½ !
Descriptografar3DES
½½ 0
(
½½0 1
string
½½1 7
Message
½½8 ?
)
½½? @
{
¾¾ 	
try
¿¿ 
{
ÀÀ 
byte
ÁÁ 
[
ÁÁ 
]
ÁÁ 
Results
ÁÁ 
=
ÁÁ  
null
ÁÁ! %
;
ÁÁ% &
System
ÂÂ 
.
ÂÂ 
Text
ÂÂ 
.
ÂÂ 
UTF8Encoding
ÂÂ (
UTF8
ÂÂ) -
=
ÂÂ. /
new
ÂÂ0 3
System
ÂÂ4 :
.
ÂÂ: ;
Text
ÂÂ; ?
.
ÂÂ? @
UTF8Encoding
ÂÂ@ L
(
ÂÂL M
)
ÂÂM N
;
ÂÂN O&
MD5CryptoServiceProvider
ÃÃ (
HashProvider
ÃÃ) 5
=
ÃÃ6 7
new
ÃÃ8 ;&
MD5CryptoServiceProvider
ÃÃ< T
(
ÃÃT U
)
ÃÃU V
;
ÃÃV W
byte
ÄÄ 
[
ÄÄ 
]
ÄÄ 
TDESKey
ÄÄ 
=
ÄÄ  
HashProvider
ÄÄ! -
.
ÄÄ- .
ComputeHash
ÄÄ. 9
(
ÄÄ9 :
UTF8
ÄÄ: >
.
ÄÄ> ?
GetBytes
ÄÄ? G
(
ÄÄG H
cryptoKey3DES
ÄÄH U
)
ÄÄU V
)
ÄÄV W
;
ÄÄW X,
TripleDESCryptoServiceProvider
ÅÅ .
TDESAlgorithm
ÅÅ/ <
=
ÅÅ= >
new
ÅÅ? B,
TripleDESCryptoServiceProvider
ÅÅC a
(
ÅÅa b
)
ÅÅb c
;
ÅÅc d
TDESAlgorithm
ÆÆ 
.
ÆÆ 
Key
ÆÆ !
=
ÆÆ" #
TDESKey
ÆÆ$ +
;
ÆÆ+ ,
TDESAlgorithm
ÇÇ 
.
ÇÇ 
Mode
ÇÇ "
=
ÇÇ# $

CipherMode
ÇÇ% /
.
ÇÇ/ 0
ECB
ÇÇ0 3
;
ÇÇ3 4
TDESAlgorithm
ÈÈ 
.
ÈÈ 
Padding
ÈÈ %
=
ÈÈ& '
PaddingMode
ÈÈ( 3
.
ÈÈ3 4
PKCS7
ÈÈ4 9
;
ÈÈ9 :
byte
ÉÉ 
[
ÉÉ 
]
ÉÉ 
DataToDecrypt
ÉÉ $
=
ÉÉ% &
Convert
ÉÉ' .
.
ÉÉ. /
FromBase64String
ÉÉ/ ?
(
ÉÉ? @
Message
ÉÉ@ G
)
ÉÉG H
;
ÉÉH I
try
ÊÊ 
{
ËË 
ICryptoTransform
ÌÌ $
	Decryptor
ÌÌ% .
=
ÌÌ/ 0
TDESAlgorithm
ÌÌ1 >
.
ÌÌ> ?
CreateDecryptor
ÌÌ? N
(
ÌÌN O
)
ÌÌO P
;
ÌÌP Q
Results
ÍÍ 
=
ÍÍ 
	Decryptor
ÍÍ '
.
ÍÍ' (!
TransformFinalBlock
ÍÍ( ;
(
ÍÍ; <
DataToDecrypt
ÍÍ< I
,
ÍÍI J
$num
ÍÍK L
,
ÍÍL M
DataToDecrypt
ÍÍN [
.
ÍÍ[ \
Length
ÍÍ\ b
)
ÍÍb c
;
ÍÍc d
}
ÎÎ 
finally
ÏÏ 
{
ÐÐ 
TDESAlgorithm
ÑÑ !
.
ÑÑ! "
Clear
ÑÑ" '
(
ÑÑ' (
)
ÑÑ( )
;
ÑÑ) *
HashProvider
ÒÒ  
.
ÒÒ  !
Clear
ÒÒ! &
(
ÒÒ& '
)
ÒÒ' (
;
ÒÒ( )
}
ÓÓ 
return
ÔÔ 
UTF8
ÔÔ 
.
ÔÔ 
	GetString
ÔÔ %
(
ÔÔ% &
Results
ÔÔ& -
)
ÔÔ- .
;
ÔÔ. /
}
ÕÕ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
×× 
new
ØØ 
	CreateLog
ØØ 
(
ØØ 
new
ØØ !
	Exception
ØØ" +
(
ØØ+ ,
$str
ØØ, V
,
ØØV W
e
ØØX Y
)
ØØY Z
)
ØØZ [
;
ØØ[ \
return
ÙÙ 
Message
ÙÙ 
;
ÙÙ 
}
ÚÚ 
}
ÛÛ 	
public
áá 
static
áá 
string
áá 
EncryptStringAES
áá -
(
áá- .
string
áá. 4

cipherText
áá5 ?
)
áá? @
{
ââ 	
try
ãã 
{
ää 
var
åå 
keybytes
åå 
=
åå 
Encoding
åå '
.
åå' (
UTF8
åå( ,
.
åå, -
GetBytes
åå- 5
(
åå5 6
$str
åå6 H
)
ååH I
;
ååI J
var
ææ 
iv
ææ 
=
ææ 
Encoding
ææ !
.
ææ! "
UTF8
ææ" &
.
ææ& '
GetBytes
ææ' /
(
ææ/ 0
$str
ææ0 B
)
ææB C
;
ææC D
byte
èè 
[
èè 
]
èè 
encryptedbyte
èè $
=
èè% &"
EncryptStringToBytes
èè' ;
(
èè; <

cipherText
èè< F
,
èèF G
keybytes
èèH P
,
èèP Q
iv
èèR T
)
èèT U
;
èèU V
string
éé 
	encrypted
éé  
=
éé! "
Convert
éé# *
.
éé* +
ToBase64String
éé+ 9
(
éé9 :
encryptedbyte
éé: G
)
ééG H
;
ééH I
return
êê 
	encrypted
êê  
;
êê  !
}
ëë 
catch
ìì 
(
ìì 
	Exception
ìì 
)
ìì 
{
íí 
return
îî 

cipherText
îî !
;
îî! "
}
ïï 
}
ðð 	
public
òò 
static
òò 
string
òò 
DecryptStringAES
òò -
(
òò- .
string
òò. 4

cipherText
òò5 ?
)
òò? @
{
óó 	
try
ôô 
{
õõ 
var
öö 
keybytes
öö 
=
öö 
Encoding
öö '
.
öö' (
UTF8
öö( ,
.
öö, -
GetBytes
öö- 5
(
öö5 6
$str
öö6 H
)
ööH I
;
ööI J
var
÷÷ 
iv
÷÷ 
=
÷÷ 
Encoding
÷÷ !
.
÷÷! "
UTF8
÷÷" &
.
÷÷& '
GetBytes
÷÷' /
(
÷÷/ 0
$str
÷÷0 B
)
÷÷B C
;
÷÷C D
var
ùù 
	encrypted
ùù 
=
ùù 
Convert
ùù  '
.
ùù' (
FromBase64String
ùù( 8
(
ùù8 9

cipherText
ùù9 C
)
ùùC D
;
ùùD E
var
úú %
decriptedFromJavascript
úú +
=
úú, -$
DecryptStringFromBytes
úú. D
(
úúD E
	encrypted
úúE N
,
úúN O
keybytes
úúP X
,
úúX Y
iv
úúZ \
)
úú\ ]
;
úú] ^
return
ûû 
string
ûû 
.
ûû 
Format
ûû $
(
ûû$ %%
decriptedFromJavascript
ûû% <
)
ûû< =
;
ûû= >
}
üü 
catch
ýý 
(
ýý 
	Exception
ýý 
)
ýý 
{
þþ 
return
ÿÿ 

cipherText
ÿÿ !
;
ÿÿ! "
}
 
}
 	
private
 
static
 
byte
 
[
 
]
 "
EncryptStringToBytes
 2
(
2 3
string
3 9
	plainText
: C
,
C D
byte
E I
[
I J
]
J K
key
L O
,
O P
byte
Q U
[
U V
]
V W
iv
X Z
)
Z [
{
 	
if
 
(
 
	plainText
 
==
 
null
 !
||
" $
	plainText
% .
.
. /
Length
/ 5
<=
6 8
$num
9 :
)
: ;
{
 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$str
0 ;
)
; <
;
< =
}
 
if
 
(
 
key
 
==
 
null
 
||
 
key
 "
.
" #
Length
# )
<=
* ,
$num
- .
)
. /
{
 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$str
0 5
)
5 6
;
6 7
}
 
if
 
(
 
iv
 
==
 
null
 
||
 
iv
  
.
  !
Length
! '
<=
( *
$num
+ ,
)
, -
{
 
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$str
0 5
)
5 6
;
6 7
}
 
byte
 
[
 
]
 
	encrypted
 
;
 
using
 
(
 
var
 
rijAlg
 
=
 
new
  #
RijndaelManaged
$ 3
(
3 4
)
4 5
)
5 6
{
 
rijAlg
 
.
 
Mode
 
=
 

CipherMode
 (
.
( )
CBC
) ,
;
, -
rijAlg
 
.
 
Padding
 
=
  
PaddingMode
! ,
.
, -
PKCS7
- 2
;
2 3
rijAlg
 
.
 
FeedbackSize
 #
=
$ %
$num
& )
;
) *
rijAlg
 
.
 
Key
 
=
 
key
  
;
  !
rijAlg
 
.
 
IV
 
=
 
iv
 
;
 
var
 
	encryptor
 
=
 
rijAlg
  &
.
& '
CreateEncryptor
' 6
(
6 7
rijAlg
7 =
.
= >
Key
> A
,
A B
rijAlg
C I
.
I J
IV
J L
)
L M
;
M N
using
¢¢ 
(
¢¢ 
var
¢¢ 
	msEncrypt
¢¢ $
=
¢¢% &
new
¢¢' *
MemoryStream
¢¢+ 7
(
¢¢7 8
)
¢¢8 9
)
¢¢9 :
{
££ 
using
¤¤ 
(
¤¤ 
var
¤¤ 
	csEncrypt
¤¤ (
=
¤¤) *
new
¤¤+ .
CryptoStream
¤¤/ ;
(
¤¤; <
	msEncrypt
¤¤< E
,
¤¤E F
	encryptor
¤¤G P
,
¤¤P Q
CryptoStreamMode
¤¤R b
.
¤¤b c
Write
¤¤c h
)
¤¤h i
)
¤¤i j
{
¥¥ 
using
¦¦ 
(
¦¦ 
var
¦¦ "
	swEncrypt
¦¦# ,
=
¦¦- .
new
¦¦/ 2
StreamWriter
¦¦3 ?
(
¦¦? @
	csEncrypt
¦¦@ I
)
¦¦I J
)
¦¦J K
{
§§ 
	swEncrypt
©© %
.
©©% &
Write
©©& +
(
©©+ ,
	plainText
©©, 5
)
©©5 6
;
©©6 7
}
ªª 
	encrypted
«« !
=
««" #
	msEncrypt
««$ -
.
««- .
ToArray
««. 5
(
««5 6
)
««6 7
;
««7 8
}
¬¬ 
}
­­ 
}
®® 
return
°° 
	encrypted
°° 
;
°° 
}
±± 	
private
³³ 
static
³³ 
string
³³ $
DecryptStringFromBytes
³³ 4
(
³³4 5
byte
³³5 9
[
³³9 :
]
³³: ;

cipherText
³³< F
,
³³F G
byte
³³H L
[
³³L M
]
³³M N
key
³³O R
,
³³R S
byte
³³T X
[
³³X Y
]
³³Y Z
iv
³³[ ]
)
³³] ^
{
´´ 	
if
¶¶ 
(
¶¶ 

cipherText
¶¶ 
==
¶¶ 
null
¶¶ "
||
¶¶# %

cipherText
¶¶& 0
.
¶¶0 1
Length
¶¶1 7
<=
¶¶8 :
$num
¶¶; <
)
¶¶< =
{
·· 
throw
¸¸ 
new
¸¸ #
ArgumentNullException
¸¸ /
(
¸¸/ 0
$str
¸¸0 <
)
¸¸< =
;
¸¸= >
}
¹¹ 
if
ºº 
(
ºº 
key
ºº 
==
ºº 
null
ºº 
||
ºº 
key
ºº "
.
ºº" #
Length
ºº# )
<=
ºº* ,
$num
ºº- .
)
ºº. /
{
»» 
throw
¼¼ 
new
¼¼ #
ArgumentNullException
¼¼ /
(
¼¼/ 0
$str
¼¼0 5
)
¼¼5 6
;
¼¼6 7
}
½½ 
if
¾¾ 
(
¾¾ 
iv
¾¾ 
==
¾¾ 
null
¾¾ 
||
¾¾ 
iv
¾¾  
.
¾¾  !
Length
¾¾! '
<=
¾¾( *
$num
¾¾+ ,
)
¾¾, -
{
¿¿ 
throw
ÀÀ 
new
ÀÀ #
ArgumentNullException
ÀÀ /
(
ÀÀ/ 0
$str
ÀÀ0 5
)
ÀÀ5 6
;
ÀÀ6 7
}
ÁÁ 
string
ÅÅ 
	plaintext
ÅÅ 
=
ÅÅ 
null
ÅÅ #
;
ÅÅ# $
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 
rijAlg
ÉÉ 
=
ÉÉ 
new
ÉÉ  #
RijndaelManaged
ÉÉ$ 3
(
ÉÉ3 4
)
ÉÉ4 5
)
ÉÉ5 6
{
ÊÊ 
rijAlg
ÌÌ 
.
ÌÌ 
Mode
ÌÌ 
=
ÌÌ 

CipherMode
ÌÌ (
.
ÌÌ( )
CBC
ÌÌ) ,
;
ÌÌ, -
rijAlg
ÍÍ 
.
ÍÍ 
Padding
ÍÍ 
=
ÍÍ  
PaddingMode
ÍÍ! ,
.
ÍÍ, -
PKCS7
ÍÍ- 2
;
ÍÍ2 3
rijAlg
ÎÎ 
.
ÎÎ 
FeedbackSize
ÎÎ #
=
ÎÎ$ %
$num
ÎÎ& )
;
ÎÎ) *
rijAlg
ÐÐ 
.
ÐÐ 
Key
ÐÐ 
=
ÐÐ 
key
ÐÐ  
;
ÐÐ  !
rijAlg
ÑÑ 
.
ÑÑ 
IV
ÑÑ 
=
ÑÑ 
iv
ÑÑ 
;
ÑÑ 
var
ÔÔ 
	decryptor
ÔÔ 
=
ÔÔ 
rijAlg
ÔÔ  &
.
ÔÔ& '
CreateDecryptor
ÔÔ' 6
(
ÔÔ6 7
rijAlg
ÔÔ7 =
.
ÔÔ= >
Key
ÔÔ> A
,
ÔÔA B
rijAlg
ÔÔC I
.
ÔÔI J
IV
ÔÔJ L
)
ÔÔL M
;
ÔÔM N
try
ÖÖ 
{
×× 
using
ÙÙ 
(
ÙÙ 
var
ÙÙ 
	msDecrypt
ÙÙ (
=
ÙÙ) *
new
ÙÙ+ .
MemoryStream
ÙÙ/ ;
(
ÙÙ; <

cipherText
ÙÙ< F
)
ÙÙF G
)
ÙÙG H
{
ÚÚ 
using
ÛÛ 
(
ÛÛ 
var
ÛÛ "
	csDecrypt
ÛÛ# ,
=
ÛÛ- .
new
ÛÛ/ 2
CryptoStream
ÛÛ3 ?
(
ÛÛ? @
	msDecrypt
ÛÛ@ I
,
ÛÛI J
	decryptor
ÛÛK T
,
ÛÛT U
CryptoStreamMode
ÛÛV f
.
ÛÛf g
Read
ÛÛg k
)
ÛÛk l
)
ÛÛl m
{
ÜÜ 
using
ÞÞ !
(
ÞÞ" #
var
ÞÞ# &
	srDecrypt
ÞÞ' 0
=
ÞÞ1 2
new
ÞÞ3 6
StreamReader
ÞÞ7 C
(
ÞÞC D
	csDecrypt
ÞÞD M
)
ÞÞM N
)
ÞÞN O
{
ßß 
	plaintext
ââ  )
=
ââ* +
	srDecrypt
ââ, 5
.
ââ5 6
	ReadToEnd
ââ6 ?
(
ââ? @
)
ââ@ A
;
ââA B
}
ää 
}
ææ 
}
çç 
}
èè 
catch
éé 
{
êê 
	plaintext
ëë 
=
ëë 
$str
ëë  *
;
ëë* +
}
ìì 
}
íí 
return
ïï 
	plaintext
ïï 
;
ïï 
}
ðð 	
public
ôô 
static
ôô 
T
ôô 
DeserializaJson
ôô '
<
ôô' (
T
ôô( )
>
ôô) *
(
ôô* +
string
ôô+ 1
json
ôô2 6
)
ôô6 7
{
õõ 	
return
öö 
JsonConvert
öö 
.
öö 
DeserializeObject
öö 0
<
öö0 1
T
öö1 2
>
öö2 3
(
öö3 4
json
öö4 8
)
öö8 9
;
öö9 :
}
÷÷ 	
public
ùù 
static
ùù 
string
ùù 
ToJson
ùù #
(
ùù# $
object
ùù$ *
value
ùù+ 0
)
ùù0 1
{
úú 	
var
ûû 
settings
ûû 
=
ûû 
new
ûû $
JsonSerializerSettings
ûû 5
{
üü #
ReferenceLoopHandling
ýý %
=
ýý& '#
ReferenceLoopHandling
ýý( =
.
ýý= >
Ignore
ýý> D
}
þþ 
;
þþ 
return
 
JsonConvert
 
.
 
SerializeObject
 .
(
. /
value
/ 4
,
4 5

Formatting
6 @
.
@ A
Indented
A I
,
I J
settings
K S
)
S T
;
T U
}
 	
public
 
static
 
List
 
<
 
SelectListItem
 )
>
) * 
CreateDropDownList
+ =
<
= >
T
> ?
>
? @
(
@ A
IEnumerable
A L
<
L M
T
M N
>
N O

enumerable
P Z
)
Z [
{
 	
List
 
<
 
SelectListItem
 
>
  
retorno
! (
=
) *
new
+ .
List
/ 3
<
3 4
SelectListItem
4 B
>
B C
(
C D
)
D E
;
E F
var
 
defaultOption
 
=
 
GlobalConfig
  ,
.
, -
PrimeiraOption
- ;
;
; <
retorno
 
.
 
Insert
 
(
 
$num
 
,
 
new
 !
SelectListItem
" 0
(
0 1
)
1 2
{
3 4
Text
5 9
=
: ;
defaultOption
< I
,
I J
Value
K P
=
Q R
$str
S W
}
X Y
)
Y Z
;
Z [
var
 
counter
 
=
 
$num
 
;
 
foreach
 
(
 
var
 
i
 
in
 

enumerable
 (
)
( )
{
 
var
 
text
 
=
 
i
 
.
 
GetType
 $
(
$ %
)
% &
.
& '
GetProperty
' 2
(
2 3
$str
3 9
)
9 :
??
; =
i
> ?
.
? @
GetType
@ G
(
G H
)
H I
.
I J
GetProperty
J U
(
U V
$str
V c
)
c d
;
d e
var
 
prop
 
=
 
i
 
.
 
GetType
 $
(
$ %
)
% &
.
& '
GetProperty
' 2
(
2 3
$str
3 7
)
7 8
;
8 9
var
 
defaultSelected
 #
=
$ %
i
& '
.
' (
GetType
( /
(
/ 0
)
0 1
.
1 2
GetProperty
2 =
(
= >
$str
> O
)
O P
;
P Q
var
 

selectItem
 
=
  
new
! $
SelectListItem
% 3
(
3 4
)
4 5
{
6 7
Text
8 <
=
= >
text
? C
.
C D
GetValue
D L
(
L M
i
M N
)
N O
.
O P
ToString
P X
(
X Y
)
Y Z
,
Z [
Value
\ a
=
b c
prop
d h
.
h i
GetValue
i q
(
q r
i
r s
)
s t
.
t u
ToString
u }
(
} ~
)
~ 
} 
; 
if
 
(
 
defaultSelected
 #
!=
$ &
null
' +
&&
, .
(
/ 0
bool
0 4
)
4 5
defaultSelected
5 D
.
D E
GetValue
E M
(
M N
i
N O
)
O P
)
P Q

selectItem
 
.
 
Selected
 '
=
( )
true
* .
;
. /
retorno
 
.
 
Insert
 
(
 
counter
 &
,
& '

selectItem
( 2
)
2 3
;
3 4
counter
 
++
 
;
 
}
 
return
 
retorno
 
;
 
}
 	
public
 
static
 
void
 
forValueZero
 '
(
' (
int
( +
value
, 1
,
1 2
string
3 9
msg
: =
)
= >
{
 	
if
 
(
 
value
 
==
 
$num
 
)
 
throw
   
new
   
ExceptionHelper
   )
(
  ) *
msg
  * -
)
  - .
;
  . /
}
¡¡ 	
public
££ 
static
££ 
void
££ +
forValueZeroPredefinedMessage
££ 8
(
££8 9
int
££9 <
value
££= B
,
££B C
string
££D J
	paramName
££K T
)
££T U
{
¤¤ 	
if
¥¥ 
(
¥¥ 
value
¥¥ 
==
¥¥ 
$num
¥¥ 
)
¥¥ 
throw
¦¦ 
new
¦¦ 
ExceptionHelper
¦¦ )
(
¦¦) *
	paramName
¦¦* 3
+
¦¦4 5
$str
¦¦6 S
)
¦¦S T
;
¦¦T U
}
§§ 	
public
©© 
static
©© 
string
©© %
RetornaInsersaoRegistro
©© 4
<
©©4 5
T
©©5 6
>
©©6 7
(
©©7 8
List
©©8 <
<
©©< =
T
©©= >
>
©©> ?
ids
©©@ C
)
©©C D
where
©©E J
T
©©K L
:
©©M N

EntityBase
©©O Y
{
ªª 	
var
«« 
acao
«« 
=
«« 
$str
«« "
;
««" #
if
¬¬ 
(
¬¬ 
ids
¬¬ 
.
¬¬ 
Count
¬¬ 
>
¬¬ 
$num
¬¬ 
)
¬¬ 
{
­­ 
return
®® 
ids
®® 
.
®® 
Count
®®  
+
®®! "
$str
®®# 0
+
®®1 2
acao
®®3 7
+
®®8 9
$str
®®: I
;
®®I J
}
¯¯ 
else
°° 
if
±± 
(
±± 
ids
±± 
[
±± 
$num
±± 
]
±± 
.
±± 
Id
±± 
==
±±  
$num
±±! "
)
±±" #
return
²² 
$str
²² 7
;
²²7 8
else
³³ 
return
´´ 
$str
´´ 7
;
´´7 8
}
·· 	
public
¹¹ 
static
¹¹ 
void
¹¹ 
ForNullOrEmpty
¹¹ )
(
¹¹) *
string
¹¹* 0
value
¹¹1 6
,
¹¹6 7
string
¹¹8 >
mensagemErro
¹¹? K
)
¹¹K L
{
ºº 	
if
»» 
(
»» 
string
»» 
.
»» 
IsNullOrEmpty
»» $
(
»»$ %
value
»»% *
)
»»* +
)
»»+ ,
{
¼¼ 
throw
½½ 
new
½½ 
ExceptionHelper
½½ )
(
½½) *
mensagemErro
½½* 6
)
½½6 7
;
½½7 8
}
¾¾ 
}
¿¿ 	
public
ÉÉ 
static
ÉÉ 
void
ÉÉ 

ForValidId
ÉÉ %
(
ÉÉ% &
int
ÉÉ& )
id
ÉÉ* ,
,
ÉÉ, -
string
ÉÉ. 4
callerMethod
ÉÉ5 A
)
ÉÉA B
{
ÊÊ 	
if
ËË 
(
ËË 
!
ËË 
(
ËË 
id
ËË 
>=
ËË 
$num
ËË 
)
ËË 
)
ËË 
throw
ÌÌ 
new
ÌÌ 
ExceptionHelper
ÌÌ )
(
ÌÌ) *
$str
ÌÌ* M
+
ÌÌN O
callerMethod
ÌÌP \
)
ÌÌ\ ]
;
ÌÌ] ^
}
ÍÍ 	
public
ÓÓ 
static
ÓÓ 
void
ÓÓ %
AutoFillDateWithDateNow
ÓÓ 2
(
ÓÓ2 3
DateTime
ÓÓ3 ;
?
ÓÓ; <
date
ÓÓ= A
)
ÓÓA B
{
ÔÔ 	
if
ÕÕ 
(
ÕÕ 
date
ÕÕ 
.
ÕÕ 
IsNull
ÕÕ 
(
ÕÕ 
)
ÕÕ 
)
ÕÕ 
date
ÖÖ 
=
ÖÖ 
DateTime
ÖÖ 
.
ÖÖ  
Now
ÖÖ  #
;
ÖÖ# $
}
×× 	
public
ÙÙ 
static
ÙÙ 
void
ÙÙ 

ForValidFk
ÙÙ %
(
ÙÙ% &
string
ÙÙ& ,
propName
ÙÙ- 5
,
ÙÙ5 6
int
ÙÙ7 :
id
ÙÙ; =
)
ÙÙ= >
{
ÚÚ 	

ForValidFk
ÛÛ 
(
ÛÛ 
id
ÛÛ 
,
ÛÛ 
propName
ÛÛ #
+
ÛÛ$ %
$str
ÛÛ& 4
)
ÛÛ4 5
;
ÛÛ5 6
}
ÜÜ 	
public
ÞÞ 
static
ÞÞ 
void
ÞÞ 

ForValidFk
ÞÞ %
(
ÞÞ% &
int
ÞÞ& )
id
ÞÞ* ,
,
ÞÞ, -
string
ÞÞ. 4
mensagemErro
ÞÞ5 A
)
ÞÞA B
{
ßß 	
if
àà 
(
àà 
!
àà 
(
àà 
id
àà 
>
àà 
$num
àà 
)
àà 
)
àà 
throw
áá 
new
áá 
ExceptionHelper
áá )
(
áá) *
mensagemErro
áá* 6
)
áá6 7
;
áá7 8
}
ââ 	
public
éé 
static
éé 
void
éé 
ForNegative
éé &
(
éé& '
int
éé' *
number
éé+ 1
,
éé1 2
string
éé3 9
propName
éé: B
)
ééB C
{
êê 	
if
ëë 
(
ëë 
number
ëë 
<
ëë 
$num
ëë 
)
ëë 
throw
ìì 
new
ìì 
ExceptionHelper
ìì )
(
ìì) *
propName
ìì* 2
+
ìì3 4
$str
ìì5 S
)
ììS T
;
ììT U
}
íí 	
public
ïï 
static
ïï 
void
ïï 
ForNegative
ïï &
(
ïï& '
decimal
ïï' .
number
ïï/ 5
,
ïï5 6
string
ïï7 =
propName
ïï> F
)
ïïF G
{
ðð 	
if
ññ 
(
ññ 
number
ññ 
<
ññ 
$num
ññ 
)
ññ 
throw
òò 
new
òò 
ExceptionHelper
òò )
(
òò) *
propName
òò* 2
+
òò3 4
$str
òò5 S
)
òòS T
;
òòT U
}
óó 	
public
õõ 
static
õõ 
void
õõ 
ForNegative
õõ &
(
õõ& '
double
õõ' -
number
õõ. 4
,
õõ4 5
string
õõ6 <
propName
õõ= E
)
õõE F
{
öö 	
if
÷÷ 
(
÷÷ 
number
÷÷ 
<
÷÷ 
$num
÷÷ 
)
÷÷ 
throw
øø 
new
øø 
ExceptionHelper
øø )
(
øø) *
propName
øø* 2
+
øø3 4
$str
øø5 S
)
øøS T
;
øøT U
}
ùù 	
public
ûû 
static
ûû 
void
ûû 
ForNegative
ûû &
(
ûû& '
float
ûû' ,
number
ûû- 3
,
ûû3 4
string
ûû5 ;
propName
ûû< D
)
ûûD E
{
üü 	
if
ýý 
(
ýý 
number
ýý 
<
ýý 
$num
ýý 
)
ýý 
throw
þþ 
new
þþ 
ExceptionHelper
þþ )
(
þþ) *
propName
þþ* 2
+
þþ3 4
$str
þþ5 S
)
þþS T
;
þþT U
}
ÿÿ 	
public
 
static
 
void
 
ForMaiorQuer
 '
(
' (
int
( +
number
, 2
,
2 3
int
4 7
number2
8 ?
,
? @
string
A G
propName
H P
,
P Q
string
R X
	propName2
Y b
)
b c
{
 	
if
 
(
 
number
 
<
 
number2
  
)
  !
throw
 
new
 
ExceptionHelper
 )
(
) *
propName
* 2
+
3 4
$str
5 K
+
L M
	propName2
N W
+
X Y
$str
Z ]
)
] ^
;
^ _
}
 	
public
 
static
 
void
 
ForMaiorQuer
 '
(
' (
decimal
( /
number
0 6
,
6 7
decimal
8 ?
number2
@ G
,
G H
string
I O
propName
P X
,
X Y
string
Z `
	propName2
a j
)
j k
{
 	
if
 
(
 
number
 
<
 
number2
  
)
  !
throw
 
new
 
ExceptionHelper
 )
(
) *
propName
* 2
+
3 4
$str
5 K
+
L M
	propName2
N W
+
X Y
$str
Z ]
)
] ^
;
^ _
}
 	
public
 
static
 
void
 
ForMaiorQuer
 '
(
' (
double
( .
number
/ 5
,
5 6
double
7 =
number2
> E
,
E F
string
G M
propName
N V
,
V W
string
X ^
	propName2
_ h
)
h i
{
 	
if
 
(
 
number
 
<
 
number2
  
)
  !
throw
 
new
 
ExceptionHelper
 )
(
) *
propName
* 2
+
3 4
$str
5 K
+
L M
	propName2
N W
+
X Y
$str
Z ]
)
] ^
;
^ _
}
 	
public
 
static
 
void
 
ForMaiorQuer
 '
(
' (
float
( -
number
. 4
,
4 5
float
6 ;
number2
< C
,
C D
string
E K
propName
L T
,
T U
string
V \
	propName2
] f
)
f g
{
 	
if
 
(
 
number
 
<
 
number2
  
)
  !
throw
 
new
 
ExceptionHelper
 )
(
) *
propName
* 2
+
3 4
$str
5 K
+
L M
	propName2
N W
+
X Y
$str
Z ]
)
] ^
;
^ _
}
 	
public
¥¥ 
static
¥¥ 
void
¥¥ 
CheckStringFull
¥¥ *
(
¥¥* +
out
¥¥+ .
string
¥¥/ 5
retorno
¥¥6 =
,
¥¥= >
string
¥¥? E
propName
¥¥F N
,
¥¥N O
string
¥¥P V
value
¥¥W \
,
¥¥\ ]
string
¥¥^ d
mensagem
¥¥e m
=
¥¥n o
null
¥¥p t
,
¥¥t u
bool
¥¥v z
	requerido¥¥{ 
=¥¥ 
false¥¥ 
,
¦¦1 2
bool
¦¦3 7"
DuplicateWhiteEspace
¦¦8 L
=
¦¦M N
false
¦¦O T
,
¦¦T U
bool
¦¦V Z
WhiteSpacesStart
¦¦[ k
=
¦¦l m
false
¦¦n s
,
¦¦s t
bool
¦¦u y
WhiteSpacesEnd¦¦z 
=¦¦ 
false¦¦ 
)¦¦ 
{
§§ 	
if
©© 
(
©© 
string
©© 
.
©© 
IsNullOrEmpty
©© $
(
©©$ %
value
©©% *
)
©©* +
&&
©©, .
	requerido
©©/ 8
==
©©9 ;
true
©©< @
)
©©@ A
throw
ªª 
new
ªª 
ExceptionHelper
ªª )
(
ªª) *
mensagem
ªª* 2
??
ªª3 5
propName
ªª6 >
+
ªª? @
$str
ªªA W
)
ªªW X
;
ªªX Y
if
¬¬ 
(
¬¬ 
!
¬¬ 
string
¬¬ 
.
¬¬ 
IsNullOrEmpty
¬¬ %
(
¬¬% &
value
¬¬& +
)
¬¬+ ,
)
¬¬, -
{
­­ 
string
¯¯ 
compareValue
¯¯ #
=
¯¯$ %
value
¯¯& +
.
¯¯+ ,
ToLower
¯¯, 3
(
¯¯3 4
)
¯¯4 5
;
¯¯5 6
if
²² 
(
²² 
compareValue
²²  
==
²²! #
$str
²²$ /
||
²²0 2
compareValue
²²3 ?
==
²²@ B
$str
²²C I
||
²²J L
compareValue
²²M Y
==
²²Z \
$str
²²] n
)
²²n o
{
³³ 
throw
´´ 
new
´´ 
ExceptionHelper
´´ -
(
´´- .
$str
´´. A
+
´´B C
propName
´´D L
+
´´M N
$str
´´O [
)
´´[ \
;
´´\ ]
}
µµ #
RemoveEspacosEmString
¸¸ %
(
¸¸% &
value
¸¸& +
,
¸¸+ ,"
DuplicateWhiteEspace
¸¸- A
,
¸¸A B
WhiteSpacesStart
¸¸C S
,
¸¸S T
WhiteSpacesEnd
¸¸U c
)
¸¸c d
;
¸¸d e
}
¹¹ 
else
ºº 
{
»» 
value
½½ 
=
½½ 
null
½½ 
;
½½ 
}
¾¾ 
retorno
¿¿ 
=
¿¿ 
value
¿¿ 
;
¿¿ 
}
ÁÁ 	
public
ËË 
static
ËË 
string
ËË #
RemoveEspacosEmString
ËË 2
(
ËË2 3
string
ËË3 9
value
ËË: ?
,
ËË? @
bool
ËËA E"
DuplicateWhiteEspace
ËËF Z
=
ËË[ \
false
ËË] b
,
ËËb c
bool
ËËd h
WhiteSpacesStart
ËËi y
=
ËËz {
falseËË| 
,ËË 
boolËË 
WhiteSpacesEndËË 
=ËË 
falseËË 
)ËË 
{
ÌÌ 	
if
ÎÎ 
(
ÎÎ "
DuplicateWhiteEspace
ÎÎ $
==
ÎÎ% '
false
ÎÎ( -
)
ÎÎ- .
{
ÏÏ 
while
ÑÑ 
(
ÑÑ 
value
ÑÑ 
.
ÑÑ 
Contains
ÑÑ %
(
ÑÑ% &
$str
ÑÑ& *
)
ÑÑ* +
)
ÑÑ+ ,
{
ÒÒ 
value
ÔÔ 
=
ÔÔ 
value
ÔÔ !
.
ÔÔ! "
Replace
ÔÔ" )
(
ÔÔ) *
$str
ÔÔ* .
,
ÔÔ. /
$str
ÔÔ0 3
)
ÔÔ3 4
;
ÔÔ4 5
}
ÕÕ 
}
ÖÖ 
if
ÙÙ 
(
ÙÙ 
WhiteSpacesStart
ÙÙ  
==
ÙÙ! #
false
ÙÙ$ )
&&
ÙÙ* ,
WhiteSpacesEnd
ÙÙ- ;
==
ÙÙ< >
false
ÙÙ? D
)
ÙÙD E
{
ÚÚ 
value
ÜÜ 
=
ÜÜ 
value
ÜÜ 
.
ÜÜ 
Trim
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
;
ÜÜ$ %
}
ÝÝ 
else
ÞÞ 
{
ßß 
if
áá 
(
áá 
WhiteSpacesStart
áá $
==
áá% '
false
áá( -
)
áá- .
{
ââ 
value
ää 
=
ää 
value
ää !
.
ää! "
	TrimStart
ää" +
(
ää+ ,
)
ää, -
;
ää- .
}
åå 
if
çç 
(
çç 
WhiteSpacesEnd
çç "
==
çç# %
false
çç& +
)
çç+ ,
{
èè 
value
êê 
=
êê 
value
êê !
.
êê! "
TrimEnd
êê" )
(
êê) *
)
êê* +
;
êê+ ,
}
ëë 
}
ìì 
return
îî 
value
îî 
;
îî 
}
ïï 	
public
öö 
static
öö 
void
öö "
VerificaEspacoString
öö /
(
öö/ 0
string
öö0 6
value
öö7 <
,
öö< =
string
öö> D
message
ööE L
)
ööL M
{
÷÷ 	
if
øø 
(
øø 
string
øø 
.
øø  
IsNullOrWhiteSpace
øø )
(
øø) *
value
øø* /
)
øø/ 0
&&
øø1 3
value
øø4 9
.
øø9 :
Length
øø: @
>
øøA B
$num
øøC D
)
øøD E
throw
ùù 
new
ùù 
ExceptionHelper
ùù )
(
ùù) *
message
ùù* 1
)
ùù1 2
;
ùù2 3
}
ûû 	
public
ýý 
static
ýý 
bool
ýý 
InsideFrequency
ýý *
(
ýý* +
DateTime
ýý+ 3
currentDate
ýý4 ?
,
ýý? @
int
ýýA D
Frequency_Id
ýýE Q
)
ýýQ R
{
þþ 	
DateTime
ÿÿ 
	startDate
ÿÿ 
=
ÿÿ  
DateTime
ÿÿ! )
.
ÿÿ) *
Now
ÿÿ* -
.
ÿÿ- .
Date
ÿÿ. 2
;
ÿÿ2 3
DateTime
 
endDate
 
=
 
new
 "
DateTime
# +
(
+ ,
DateTime
, 4
.
4 5
Now
5 8
.
8 9
Year
9 =
,
= >
DateTime
? G
.
G H
Now
H K
.
K L
Month
L Q
,
Q R
DateTime
S [
.
[ \
Now
\ _
.
_ `
Day
` c
,
c d
$num
e g
,
g h
$num
i k
,
k l
$num
m o
)
o p
;
p q
DateTime
 
firstDayOfMonth
 $
=
% &
new
' *
DateTime
+ 3
(
3 4
DateTime
4 <
.
< =
Now
= @
.
@ A
Year
A E
,
E F
DateTime
G O
.
O P
Now
P S
.
S T
Month
T Y
,
Y Z
$num
[ \
)
\ ]
;
] ^
DateTime
 
lastDayOfMonth
 #
=
$ %
new
& )
DateTime
* 2
(
2 3
DateTime
3 ;
.
; <
Now
< ?
.
? @
Year
@ D
,
D E
DateTime
F N
.
N O
Now
O R
.
R S
Month
S X
,
X Y
$num
Z [
,
[ \
$num
] _
,
_ `
$num
a c
,
c d
$num
e g
)
g h
.
h i
	AddMonths
i r
(
r s
$num
s t
)
t u
.
u v
AddDays
v }
(
} ~
-
~ 
$num 
) 
; 
switch
 
(
 
Frequency_Id
  
)
  !
{
 
case
 
$num
 
:
 
if
 
(
 
currentDate
 #
>=
$ &
	startDate
' 0
&&
1 3
currentDate
4 ?
<=
@ B
endDate
C J
)
J K
{
 
return
 
true
 #
;
# $
}
 
break
 
;
 
case
 
$num
 
:
 
if
 
(
 
currentDate
 #
>=
$ &
	startDate
' 0
&&
1 3
currentDate
4 ?
<=
@ B
endDate
C J
)
J K
{
 
return
 
true
 #
;
# $
}
 
break
 
;
 
case
 
$num
 
:
 
if
 
(
 
currentDate
 #
>=
$ &
	startDate
' 0
&&
1 3
currentDate
4 ?
<=
@ B
endDate
C J
)
J K
{
 
return
 
true
 #
;
# $
}
 
break
 
;
 
case
 
$num
 
:
 
	startDate
 
=
 
	startDate
  )
.
) *
AddDays
* 1
(
1 2
-
2 3
(
3 4
int
4 7
)
7 8
	startDate
8 A
.
A B
	DayOfWeek
B K
)
K L
;
L M
endDate
 
=
 
	startDate
 '
.
' (
AddDays
( /
(
/ 0
$num
0 1
)
1 2
;
2 3
if
 
(
 
currentDate
 #
>=
$ &
firstDayOfMonth
' 6
&&
7 9
currentDate
: E
<=
F H
lastDayOfMonth
I W
)
W X
{
 
return
 
true
 #
;
# $
}
 
break
   
;
   
case
¡¡ 
$num
¡¡ 
:
¡¡ 
if
¢¢ 
(
¢¢ 
currentDate
¢¢ #
.
¢¢# $
Day
¢¢$ '
<=
¢¢( *
$num
¢¢+ -
)
¢¢- .
{
££ 
	startDate
¤¤ !
=
¤¤" #
firstDayOfMonth
¤¤$ 3
;
¤¤3 4
endDate
¥¥ 
=
¥¥  !
new
¥¥" %
DateTime
¥¥& .
(
¥¥. /
DateTime
¥¥/ 7
.
¥¥7 8
Now
¥¥8 ;
.
¥¥; <
Year
¥¥< @
,
¥¥@ A
DateTime
¥¥B J
.
¥¥J K
Now
¥¥K N
.
¥¥N O
Month
¥¥O T
,
¥¥T U
$num
¥¥V X
,
¥¥X Y
$num
¥¥Z \
,
¥¥\ ]
$num
¥¥^ `
,
¥¥` a
$num
¥¥b d
)
¥¥d e
;
¥¥e f
}
¦¦ 
else
§§ 
{
¨¨ 
	startDate
©© !
=
©©" #
new
©©$ '
DateTime
©©( 0
(
©©0 1
DateTime
©©1 9
.
©©9 :
Now
©©: =
.
©©= >
Year
©©> B
,
©©B C
DateTime
©©D L
.
©©L M
Now
©©M P
.
©©P Q
Month
©©Q V
,
©©V W
$num
©©X Z
)
©©Z [
;
©©[ \
endDate
ªª 
=
ªª  !
new
ªª" %
DateTime
ªª& .
(
ªª. /
DateTime
ªª/ 7
.
ªª7 8
Now
ªª8 ;
.
ªª; <
Year
ªª< @
,
ªª@ A
DateTime
ªªB J
.
ªªJ K
Now
ªªK N
.
ªªN O
Month
ªªO T
,
ªªT U
lastDayOfMonth
ªªV d
.
ªªd e
Day
ªªe h
,
ªªh i
$num
ªªj l
,
ªªl m
$num
ªªn p
,
ªªp q
$num
ªªr t
)
ªªt u
;
ªªu v
}
«« 
if
¬¬ 
(
¬¬ 
currentDate
¬¬ #
>=
¬¬$ &
firstDayOfMonth
¬¬' 6
&&
¬¬7 9
currentDate
¬¬: E
<=
¬¬F H
lastDayOfMonth
¬¬I W
)
¬¬W X
{
­­ 
return
®® 
true
®® #
;
®®# $
}
¯¯ 
break
°° 
;
°° 
case
±± 
$num
±± 
:
±± 
if
²² 
(
²² 
currentDate
²² #
>=
²²$ &
firstDayOfMonth
²²' 6
&&
²²7 9
currentDate
²²: E
<=
²²F H
lastDayOfMonth
²²I W
)
²²W X
{
³³ 
return
´´ 
true
´´ #
;
´´# $
}
µµ 
break
¶¶ 
;
¶¶ 
default
·· 
:
·· 
throw
¸¸ 
new
¸¸ 
ExceptionHelper
¸¸ -
(
¸¸- .
Frequency_Id
¸¸. :
+
¸¸; <
$str
¸¸= R
)
¸¸R S
;
¸¸S T
}
¹¹ 
return
ºº 
false
ºº 
;
ºº 
}
»» 	
}
½½ 
}¾¾ ö
KC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 
) 
]  
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str  
)  !
]! "
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *é
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSetGetCorrectiveAction.cs
	namespace 	
DTO
 
{ 
public 

class (
ResultSetGetCorrectiveAction -
{ 
public 
List 
< 
CorrectiveActionDTO '
>' (#
listCorrectiveActionDTO) @
{A B
getC F
;F G
setH K
;K L
}M N
}		 
}

 
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\DTO\ResultSetRelatorioColeta.cs
	namespace 	
DTO
 
{ 
public 

class $
ResultSetRelatorioColeta )
{ 
public 
List 
< 

Level01DTO 
> 
listResultLevel01  1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public		 
List		 
<		 #
ConsolidationLevel01DTO		 +
>		+ ,$
listConsolidationLevel01		- E
{		F G
get		H K
;		K L
set		M P
;		P Q
}		R S
public

 
List

 
<

 #
ConsolidationLevel02DTO

 +
>

+ ,$
listConsolidationLevel02

- E
{

F G
get

H K
;

K L
set

M P
;

P Q
}

R S
public 
List 
<  
CollectionLevel02DTO (
>( )$
listCollectionLevel02DTO* B
{C D
getE H
;H I
setJ M
;M N
}O P
public 
List 
<  
CollectionLevel03DTO (
>( )$
listCollectionLevel03DTO* B
{C D
getE H
;H I
setJ M
;M N
}O P
} 
} 