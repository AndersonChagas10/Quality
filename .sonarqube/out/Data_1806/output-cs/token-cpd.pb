˜
LC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 
)  
]  !
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str !
)! "
]" #
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *Û∂
RC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\ParamsRepository.cs
	namespace

 	
Data


 
.

 
Repositories

 
{ 
public 

class 
ParamsRepository !
:" #
IParamsRepository$ 5
{ 
	protected 
readonly 
SgqDbDevEntities +
db, .
;. /
public 
ParamsRepository 
(  
SgqDbDevEntities  0
Db1 3
)3 4
{ 	
db 
= 
Db 
; 
} 	
public"" 
void"" 
SaveParLevel1"" !
(""! "
	ParLevel1""" +
paramLevel1"", 7
,""7 8
List""9 =
<""= >
ParHeaderField""> L
>""L M
listaParHeadField""N _
,""_ `
List""a e
<""e f
ParLevel1XCluster""f w
>""w x#
listaParLevel1XCluster	""y è
,
""è ê
List
""ë ï
<
""ï ñ
int
""ñ ô
>
""ô ö
removerHeadField
""õ ´
,
""´ ¨
List
""≠ ±
<
""± ≤
ParCounterXLocal
""≤ ¬
>
""¬ √"
listaParCounterLocal
""ƒ ÿ
,
""ÿ Ÿ
List
""⁄ ﬁ
<
""ﬁ ﬂ(
ParNotConformityRuleXLevel
""ﬂ ˘
>
""˘ ˙!
listNonCoformitRule
""˚ é
,
""é è
List
""ê î
<
""î ï

ParRelapse
""ï ü
>
""ü †
reincidencia
""° ≠
,
""≠ Æ
List
""Ø ≥
<
""≥ ¥
ParGoal
""¥ ª
>
""ª º
listParGoal
""Ω »
)
""» …
{## 	
using$$ 
($$ 
var$$ 
ts$$ 
=$$ 
db$$ 
.$$ 
Database$$ '
.$$' (
BeginTransaction$$( 8
($$8 9
IsolationLevel$$9 G
.$$G H
ReadUncommitted$$H W
)$$W X
)$$X Y
{%% 
SalvaParLevel1'' 
('' 
paramLevel1'' *
)''* +
;''+ ,
if** 
(** "
listaParLevel1XCluster** *
!=**+ -
null**. 2
)**2 3
foreach++ 
(++ 
var++  
Level1XCluster++! /
in++0 2"
listaParLevel1XCluster++3 I
)++I J
SalvaLevel1XCluster,, +
(,,+ ,
Level1XCluster,,, :
,,,: ;
paramLevel1,,< G
.,,G H
Id,,H J
),,J K
;,,K L
if// 
(// 
listParGoal// 
!=//  "
null//# '
)//' (
foreach00 
(00 
var00  
goal00! %
in00& (
listParGoal00) 4
)004 5
	SalvaGoal11 !
(11! "
goal11" &
,11& '
paramLevel111( 3
.113 4
Id114 6
)116 7
;117 8
if44 
(44  
listaParCounterLocal44 (
!=44) +
null44, 0
)440 1
foreach55 
(55 
var55  
counterDoLevel155! 0
in551 3 
listaParCounterLocal554 H
)55H I%
SalvaCounterLocalDoLevel166 1
(661 2
paramLevel1662 =
,66= >
counterDoLevel166? N
)66N O
;66O P
if99 
(99 
listNonCoformitRule99 '
!=99( *
null99+ /
)99/ 0
foreach:: 
(:: 
var::  
nonCoformitRule::! 0
in::1 3
listNonCoformitRule::4 G
)::G H!
SaveNonConformityRule;; -
(;;- .
nonCoformitRule;;. =
,;;= >
paramLevel1;;? J
.;;J K
Id;;K M
);;M N
;;;N O
if>> 
(>> 
reincidencia>>  
!=>>! #
null>>$ (
)>>( )
foreach?? 
(?? 
var??  

parRelapse??! +
in??, .
reincidencia??/ ;
)??; <
SaveReincidencia@@ (
(@@( )

parRelapse@@) 3
,@@3 4
paramLevel1@@5 @
.@@@ A
Id@@A C
)@@C D
;@@D E
ifCC 
(CC 
listaParHeadFieldCC %
!=CC& (
nullCC) -
)CC- .
{DD 
foreachEE 
(EE 
varEE  
parHeadFieldEE! -
inEE. 0
listaParHeadFieldEE1 B
)EEB C
{FF 
varGG !
ListParMultipleValuesGG 1
=GG2 3
parHeadFieldGG4 @
.GG@ A
ParMultipleValuesGGA R
;GGR S
SalvaParHeadFieldHH )
(HH) *
parHeadFieldHH* 6
)HH6 7
;HH7 8
foreachJJ 
(JJ  !
varJJ! $
parMultipleValuesJJ% 6
inJJ7 9!
ListParMultipleValuesJJ: O
)JJO P"
SalvaParMultipleValuesKK 2
(KK2 3
parMultipleValuesKK3 D
,KKD E
parHeadFieldKKF R
.KKR S
IdKKS U
)KKU V
;KKV W
intMM "
idParLevel1HeaderFieldMM 2
;MM2 3!
ParLevel1XHeaderFieldNN - 
parLevel1HeaderFieldNN. B
;NNB C$
CriaParLevel1HeaderFieldOO 0
(OO0 1
paramLevel1OO1 <
,OO< =
parHeadFieldOO> J
,OOJ K
outOOL O"
idParLevel1HeaderFieldOOP f
,OOf g
outOOh k!
parLevel1HeaderField	OOl Ä
)
OOÄ Å
;
OOÅ Ç%
SalvaParLevel1HeaderFieldPP 1
(PP1 2"
idParLevel1HeaderFieldPP2 H
,PPH I 
parLevel1HeaderFieldPPJ ^
)PP^ _
;PP_ `
}QQ 
}RR 
InativaHeadFieldTT  
(TT  !
paramLevel1TT! ,
,TT, -
removerHeadFieldTT. >
)TT> ?
;TT? @
tsVV 
.VV 
CommitVV 
(VV 
)VV 
;VV 
}WW 
}XX 	
private\\ 
void\\ !
SaveNonConformityRule\\ *
(\\* +&
ParNotConformityRuleXLevel\\+ E
nonCoformitRule\\F U
,\\U V
int\\W Z
parLevel1Id\\[ f
)\\f g
{]] 	
if^^ 
(^^ 
nonCoformitRule^^ 
.^^  #
ParNotConformityRule_Id^^  7
>=^^8 :
$num^^; <
)^^< =
{__ 
nonCoformitRuleaa 
.aa  
ParCompany_Idaa  -
=aa. /
$numaa0 1
;aa1 2
nonCoformitRulecc 
.cc  
ParLevel1_Idcc  ,
=cc- .
parLevel1Idcc/ :
;cc: ;
ifee 
(ee 
nonCoformitRuleee #
.ee# $
Idee$ &
==ee' )
$numee* +
)ee+ ,
{ff 
dbgg 
.gg &
ParNotConformityRuleXLevelgg 1
.gg1 2
Addgg2 5
(gg5 6
nonCoformitRulegg6 E
)ggE F
;ggF G
}hh 
elseii 
{jj 
Guardkk 
.kk 

verifyDatekk $
(kk$ %
nonCoformitRulekk% 4
,kk4 5
$strkk6 A
)kkA B
;kkB C
dbll 
.ll &
ParNotConformityRuleXLevelll 1
.ll1 2
Attachll2 8
(ll8 9
nonCoformitRulell9 H
)llH I
;llI J
ifnn 
(nn 
nonCoformitRulenn '
.nn' (
ParCompany_Idnn( 5
==nn6 8
$numnn9 :
)nn: ;
nonCoformitRuleoo '
.oo' (
ParCompany_Idoo( 5
=oo6 7
nulloo8 <
;oo< =
dbqq 
.qq 
Entryqq 
(qq 
nonCoformitRuleqq ,
)qq, -
.qq- .
Stateqq. 3
=qq4 5
EntityStateqq6 A
.qqA B
ModifiedqqB J
;qqJ K
dbrr 
.rr 
Entryrr 
(rr 
nonCoformitRulerr ,
)rr, -
.rr- .
Propertyrr. 6
(rr6 7
err7 8
=>rr9 ;
err< =
.rr= >
AddDaterr> E
)rrE F
.rrF G

IsModifiedrrG Q
=rrR S
falserrT Y
;rrY Z
}ss 
dbtt 
.tt 
SaveChangestt 
(tt 
)tt  
;tt  !
}uu 
}vv 	
privateyy 
voidyy %
SalvaCounterLocalDoLevel1yy .
(yy. /
	ParLevel1yy/ 8
paramLevel1yy9 D
,yyD E
ParCounterXLocalyyF V
counterDoLevel1yyW f
)yyf g
{zz 	
counterDoLevel1{{ 
.{{ 
ParLevel1_Id{{ (
={{) *
paramLevel1{{+ 6
.{{6 7
Id{{7 9
;{{9 :
if}} 
(}} 
counterDoLevel1}} 
.}}  
Id}}  "
==}}# %
$num}}& '
)}}' (
{~~ 
db 
. 
ParCounterXLocal #
.# $
Add$ '
(' (
counterDoLevel1( 7
)7 8
;8 9
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
Guard
ÉÉ 
.
ÉÉ 

verifyDate
ÉÉ  
(
ÉÉ  !
counterDoLevel1
ÉÉ! 0
,
ÉÉ0 1
$str
ÉÉ2 =
)
ÉÉ= >
;
ÉÉ> ?
var
ÑÑ 
entry
ÑÑ 
=
ÑÑ 
db
ÑÑ 
.
ÑÑ 
ParCounterXLocal
ÑÑ /
.
ÑÑ/ 0
Attach
ÑÑ0 6
(
ÑÑ6 7
counterDoLevel1
ÑÑ7 F
)
ÑÑF G
;
ÑÑG H
db
ÖÖ 
.
ÖÖ 
Entry
ÖÖ 
(
ÖÖ 
counterDoLevel1
ÖÖ (
)
ÖÖ( )
.
ÖÖ) *
State
ÖÖ* /
=
ÖÖ0 1
EntityState
ÖÖ2 =
.
ÖÖ= >
Modified
ÖÖ> F
;
ÖÖF G
db
ÜÜ 
.
ÜÜ 
Entry
ÜÜ 
(
ÜÜ 
counterDoLevel1
ÜÜ (
)
ÜÜ( )
.
ÜÜ) *
Property
ÜÜ* 2
(
ÜÜ2 3
e
ÜÜ3 4
=>
ÜÜ5 7
e
ÜÜ8 9
.
ÜÜ9 :
AddDate
ÜÜ: A
)
ÜÜA B
.
ÜÜB C

IsModified
ÜÜC M
=
ÜÜN O
false
ÜÜP U
;
ÜÜU V
}
áá 
db
àà 
.
àà 
SaveChanges
àà 
(
àà 
)
àà 
;
àà 
}
ââ 	
private
ãã 
void
ãã 
SalvaParLevel1
ãã #
(
ãã# $
	ParLevel1
ãã$ -
paramLevel1
ãã. 9
)
ãã9 :
{
åå 	
if
çç 
(
çç 
paramLevel1
çç 
.
çç 
Id
çç 
==
çç !
$num
çç" #
)
çç# $
{
éé 
db
èè 
.
èè 
	ParLevel1
èè 
.
èè 
Add
èè  
(
èè  !
paramLevel1
èè! ,
)
èè, -
;
èè- .
}
êê 
else
ëë 
{
íí 
Guard
ìì 
.
ìì 

verifyDate
ìì  
(
ìì  !
paramLevel1
ìì! ,
,
ìì, -
$str
ìì. 9
)
ìì9 :
;
ìì: ;
db
îî 
.
îî 
	ParLevel1
îî 
.
îî 
Attach
îî #
(
îî# $
paramLevel1
îî$ /
)
îî/ 0
;
îî0 1
db
ïï 
.
ïï 
Entry
ïï 
(
ïï 
paramLevel1
ïï $
)
ïï$ %
.
ïï% &
State
ïï& +
=
ïï, -
EntityState
ïï. 9
.
ïï9 :
Modified
ïï: B
;
ïïB C
db
ññ 
.
ññ 
Entry
ññ 
(
ññ 
paramLevel1
ññ $
)
ññ$ %
.
ññ% &
Property
ññ& .
(
ññ. /
e
ññ/ 0
=>
ññ1 3
e
ññ4 5
.
ññ5 6
AddDate
ññ6 =
)
ññ= >
.
ññ> ?

IsModified
ññ? I
=
ññJ K
false
ññL Q
;
ññQ R
}
öö 
db
õõ 
.
õõ 
SaveChanges
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
private
ûû 
void
ûû $
SalvaParMultipleValues
ûû +
(
ûû+ ,
ParMultipleValues
ûû, =
parMultipleValues
ûû> O
,
ûûO P
int
ûûQ T
parHeadFieldId
ûûU c
)
ûûc d
{
üü 	
if
†† 
(
†† 
parMultipleValues
†† !
.
††! "
Description
††" -
==
††. 0
null
††1 5
)
††5 6
parMultipleValues
°° !
.
°°! "
Description
°°" -
=
°°. /
$str
°°0 2
;
°°2 3
parMultipleValues
¢¢ 
.
¢¢ 
ParHeaderField_Id
¢¢ /
=
¢¢0 1
parHeadFieldId
¢¢2 @
;
¢¢@ A
parMultipleValues
££ 
.
££ 
ParHeaderField
££ ,
=
££- .
null
££/ 3
;
££3 4
if
§§ 
(
§§ 
parMultipleValues
§§ !
.
§§! "
Id
§§" $
==
§§% '
$num
§§( )
)
§§) *
{
•• 
db
¶¶ 
.
¶¶ 
ParMultipleValues
¶¶ $
.
¶¶$ %
Add
¶¶% (
(
¶¶( )
parMultipleValues
¶¶) :
)
¶¶: ;
;
¶¶; <
}
ßß 
else
®® 
{
©© 
Guard
™™ 
.
™™ 

verifyDate
™™  
(
™™  !
parMultipleValues
™™! 2
,
™™2 3
$str
™™4 ?
)
™™? @
;
™™@ A
db
´´ 
.
´´ 
ParMultipleValues
´´ $
.
´´$ %
Attach
´´% +
(
´´+ ,
parMultipleValues
´´, =
)
´´= >
;
´´> ?
db
¨¨ 
.
¨¨ 
Entry
¨¨ 
(
¨¨ 
parMultipleValues
¨¨ *
)
¨¨* +
.
¨¨+ ,
State
¨¨, 1
=
¨¨2 3
EntityState
¨¨4 ?
.
¨¨? @
Modified
¨¨@ H
;
¨¨H I
db
≠≠ 
.
≠≠ 
Entry
≠≠ 
(
≠≠ 
parMultipleValues
≠≠ *
)
≠≠* +
.
≠≠+ ,
Property
≠≠, 4
(
≠≠4 5
e
≠≠5 6
=>
≠≠7 9
e
≠≠: ;
.
≠≠; <
AddDate
≠≠< C
)
≠≠C D
.
≠≠D E

IsModified
≠≠E O
=
≠≠P Q
false
≠≠R W
;
≠≠W X
}
ÆÆ 
db
ØØ 
.
ØØ 
SaveChanges
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
}
∞∞ 	
private
≤≤ 
void
≤≤ &
CriaParLevel1HeaderField
≤≤ -
(
≤≤- .
	ParLevel1
≤≤. 7
paramLevel1
≤≤8 C
,
≤≤C D
ParHeaderField
≤≤E S
parHeadField
≤≤T `
,
≤≤` a
out
≤≤b e
int
≤≤f i%
idParLevel1HeaderField≤≤j Ä
,≤≤Ä Å
out≤≤Ç Ö%
ParLevel1XHeaderField≤≤Ü õ$
parLevel1HeaderField≤≤ú ∞
)≤≤∞ ±
{
≥≥ 	$
idParLevel1HeaderField
¥¥ "
=
¥¥# $
$num
¥¥% &
;
¥¥& '
var
µµ '
verificaSeJaExisteVinculo
µµ )
=
µµ* +
db
µµ, .
.
µµ. /#
ParLevel1XHeaderField
µµ/ D
.
µµD E
FirstOrDefault
µµE S
(
µµS T
r
µµT U
=>
µµV X
r
µµY Z
.
µµZ [
ParHeaderField_Id
µµ[ l
==
µµm o
parHeadField
µµp |
.
µµ| }
Id
µµ} 
&&µµÄ Ç
rµµÉ Ñ
.µµÑ Ö
ParLevel1_IdµµÖ ë
==µµí î
paramLevel1µµï †
.µµ† °
Idµµ° £
)µµ£ §
;µµ§ •
if
∂∂ 
(
∂∂ '
verificaSeJaExisteVinculo
∂∂ )
!=
∂∂* ,
null
∂∂- 1
)
∂∂1 2$
idParLevel1HeaderField
∑∑ &
=
∑∑' ('
verificaSeJaExisteVinculo
∑∑) B
.
∑∑B C
Id
∑∑C E
;
∑∑E F"
parLevel1HeaderField
ππ  
=
ππ! "
new
ππ# &#
ParLevel1XHeaderField
ππ' <
(
ππ< =
)
ππ= >
{
∫∫ 
Id
ªª 
=
ªª $
idParLevel1HeaderField
ªª +
,
ªª+ ,
ParLevel1_Id
ºº 
=
ºº 
paramLevel1
ºº *
.
ºº* +
Id
ºº+ -
,
ºº- .
ParHeaderField_Id
ΩΩ !
=
ΩΩ" #
parHeadField
ΩΩ$ 0
.
ΩΩ0 1
Id
ΩΩ1 3
,
ΩΩ3 4
IsActive
ææ 
=
ææ 
true
ææ 
}
øø 
;
øø 
}
¿¿ 	
private
¬¬ 
void
¬¬ '
SalvaParLevel1HeaderField
¬¬ .
(
¬¬. /
int
¬¬/ 2$
idParLevel1HeaderField
¬¬3 I
,
¬¬I J#
ParLevel1XHeaderField
¬¬K `"
parLevel1HeaderField
¬¬a u
)
¬¬u v
{
√√ 	
if
ƒƒ 
(
ƒƒ $
idParLevel1HeaderField
ƒƒ &
==
ƒƒ' )
$num
ƒƒ* +
)
ƒƒ+ ,
{
≈≈ 
db
∆∆ 
.
∆∆ #
ParLevel1XHeaderField
∆∆ (
.
∆∆( )
Add
∆∆) ,
(
∆∆, -"
parLevel1HeaderField
∆∆- A
)
∆∆A B
;
∆∆B C
}
«« 
else
»» 
{
…… 
Guard
   
.
   

verifyDate
    
(
    !"
parLevel1HeaderField
  ! 5
,
  5 6
$str
  7 B
)
  B C
;
  C D
db
ÀÀ 
.
ÀÀ #
ParLevel1XHeaderField
ÀÀ (
.
ÀÀ( )
Attach
ÀÀ) /
(
ÀÀ/ 0"
parLevel1HeaderField
ÀÀ0 D
)
ÀÀD E
;
ÀÀE F
db
ÃÃ 
.
ÃÃ 
Entry
ÃÃ 
(
ÃÃ "
parLevel1HeaderField
ÃÃ -
)
ÃÃ- .
.
ÃÃ. /
State
ÃÃ/ 4
=
ÃÃ5 6
EntityState
ÃÃ7 B
.
ÃÃB C
Modified
ÃÃC K
;
ÃÃK L
db
ÕÕ 
.
ÕÕ 
Entry
ÕÕ 
(
ÕÕ "
parLevel1HeaderField
ÕÕ -
)
ÕÕ- .
.
ÕÕ. /
Property
ÕÕ/ 7
(
ÕÕ7 8
e
ÕÕ8 9
=>
ÕÕ: <
e
ÕÕ= >
.
ÕÕ> ?
AddDate
ÕÕ? F
)
ÕÕF G
.
ÕÕG H

IsModified
ÕÕH R
=
ÕÕS T
false
ÕÕU Z
;
ÕÕZ [
}
ŒŒ 
db
œœ 
.
œœ 
SaveChanges
œœ 
(
œœ 
)
œœ 
;
œœ 
}
–– 	
private
““ 
void
““ 
SalvaParHeadField
““ &
(
““& '
ParHeaderField
““' 5
parHeadField
““6 B
)
““B C
{
”” 	
if
‘‘ 
(
‘‘ 
parHeadField
‘‘ 
.
‘‘ 
Description
‘‘ (
==
‘‘) +
null
‘‘, 0
)
‘‘0 1
parHeadField
’’ 
.
’’ 
Description
’’ (
=
’’) *
$str
’’+ -
;
’’- .
parHeadField
÷÷ 
.
÷÷ 
ParMultipleValues
÷÷ *
=
÷÷+ ,
null
÷÷- 1
;
÷÷1 2
parHeadField
◊◊ 
.
◊◊ 
ParFieldType
◊◊ %
=
◊◊& '
null
◊◊( ,
;
◊◊, -
parHeadField
ÿÿ 
.
ÿÿ 
ParLevelDefiniton
ÿÿ *
=
ÿÿ+ ,
null
ÿÿ- 1
;
ÿÿ1 2
parHeadField
ŸŸ 
.
ŸŸ #
ParLevel1XHeaderField
ŸŸ .
=
ŸŸ/ 0
null
ŸŸ1 5
;
ŸŸ5 6
if
€€ 
(
€€ 
parHeadField
€€ 
.
€€ 
Id
€€ 
==
€€  "
$num
€€# $
)
€€$ %
{
‹‹ 
db
›› 
.
›› 
ParHeaderField
›› !
.
››! "
Add
››" %
(
››% &
parHeadField
››& 2
)
››2 3
;
››3 4
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
Guard
·· 
.
·· 

verifyDate
··  
(
··  !
parHeadField
··! -
,
··- .
$str
··/ :
)
··: ;
;
··; <
db
‚‚ 
.
‚‚ 
ParHeaderField
‚‚ !
.
‚‚! "
Attach
‚‚" (
(
‚‚( )
parHeadField
‚‚) 5
)
‚‚5 6
;
‚‚6 7
db
„„ 
.
„„ 
Entry
„„ 
(
„„ 
parHeadField
„„ %
)
„„% &
.
„„& '
State
„„' ,
=
„„- .
EntityState
„„/ :
.
„„: ;
Modified
„„; C
;
„„C D
db
‰‰ 
.
‰‰ 
Entry
‰‰ 
(
‰‰ 
parHeadField
‰‰ %
)
‰‰% &
.
‰‰& '
Property
‰‰' /
(
‰‰/ 0
e
‰‰0 1
=>
‰‰2 4
e
‰‰5 6
.
‰‰6 7
AddDate
‰‰7 >
)
‰‰> ?
.
‰‰? @

IsModified
‰‰@ J
=
‰‰K L
false
‰‰M R
;
‰‰R S
}
ÂÂ 
db
ÊÊ 
.
ÊÊ 
SaveChanges
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
private
ÈÈ 
void
ÈÈ !
SalvaLevel1XCluster
ÈÈ (
(
ÈÈ( )
ParLevel1XCluster
ÈÈ) :
Level1XCluster
ÈÈ; I
,
ÈÈI J
int
ÈÈK N
paramLevel1Id
ÈÈO \
)
ÈÈ\ ]
{
ÍÍ 	
Level1XCluster
ÎÎ 
.
ÎÎ 
ParLevel1_Id
ÎÎ '
=
ÎÎ( )
paramLevel1Id
ÎÎ* 7
;
ÎÎ7 8
Level1XCluster
ÏÏ 
.
ÏÏ 
	ParLevel1
ÏÏ $
=
ÏÏ% &
null
ÏÏ' +
;
ÏÏ+ ,
Level1XCluster
ÌÌ 
.
ÌÌ 

ParCluster
ÌÌ %
=
ÌÌ& '
null
ÌÌ( ,
;
ÌÌ, -
if
ÔÔ 
(
ÔÔ 
Level1XCluster
ÔÔ 
.
ÔÔ 
Id
ÔÔ !
==
ÔÔ" $
$num
ÔÔ% &
)
ÔÔ& '
{
 
db
ÒÒ 
.
ÒÒ 
ParLevel1XCluster
ÒÒ $
.
ÒÒ$ %
Add
ÒÒ% (
(
ÒÒ( )
Level1XCluster
ÒÒ) 7
)
ÒÒ7 8
;
ÒÒ8 9
}
ÚÚ 
else
ÛÛ 
{
ÙÙ 
Guard
ıı 
.
ıı 

verifyDate
ıı  
(
ıı  !
Level1XCluster
ıı! /
,
ıı/ 0
$str
ıı1 <
)
ıı< =
;
ıı= >
db
ˆˆ 
.
ˆˆ 
ParLevel1XCluster
ˆˆ $
.
ˆˆ$ %
Attach
ˆˆ% +
(
ˆˆ+ ,
Level1XCluster
ˆˆ, :
)
ˆˆ: ;
;
ˆˆ; <
db
˜˜ 
.
˜˜ 
Entry
˜˜ 
(
˜˜ 
Level1XCluster
˜˜ '
)
˜˜' (
.
˜˜( )
State
˜˜) .
=
˜˜/ 0
EntityState
˜˜1 <
.
˜˜< =
Modified
˜˜= E
;
˜˜E F
db
¯¯ 
.
¯¯ 
Entry
¯¯ 
(
¯¯ 
Level1XCluster
¯¯ '
)
¯¯' (
.
¯¯( )
Property
¯¯) 1
(
¯¯1 2
e
¯¯2 3
=>
¯¯4 6
e
¯¯7 8
.
¯¯8 9
AddDate
¯¯9 @
)
¯¯@ A
.
¯¯A B

IsModified
¯¯B L
=
¯¯M N
false
¯¯O T
;
¯¯T U
}
˘˘ 
db
˙˙ 
.
˙˙ 
SaveChanges
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 	
private
˝˝ 
void
˝˝ 
	SalvaGoal
˝˝ 
(
˝˝ 
ParGoal
˝˝ &
goal
˝˝' +
,
˝˝+ ,
int
˝˝- 0
paramLevel1Id
˝˝1 >
)
˝˝> ?
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
paramLevel1Id
ˇˇ 
>
ˇˇ 
$num
ˇˇ  !
)
ˇˇ! "
goal
ÄÄ 
.
ÄÄ 
ParLevel1_Id
ÄÄ !
=
ÄÄ" #
paramLevel1Id
ÄÄ$ 1
;
ÄÄ1 2
if
ÇÇ 
(
ÇÇ 
goal
ÇÇ 
.
ÇÇ 
ParCompany_Id
ÇÇ "
==
ÇÇ# %
-
ÇÇ& '
$num
ÇÇ' (
||
ÇÇ) +
goal
ÇÇ, 0
.
ÇÇ0 1
ParCompany_Id
ÇÇ1 >
==
ÇÇ? A
$num
ÇÇB C
)
ÇÇC D
goal
ÉÉ 
.
ÉÉ 
ParCompany_Id
ÉÉ "
=
ÉÉ# $
null
ÉÉ% )
;
ÉÉ) *
goal
ÖÖ 
.
ÖÖ 
	ParLevel1
ÖÖ 
=
ÖÖ 
null
ÖÖ !
;
ÖÖ! "
goal
ÜÜ 
.
ÜÜ 

ParCompany
ÜÜ 
=
ÜÜ 
null
ÜÜ "
;
ÜÜ" #
if
àà 
(
àà 
goal
àà 
.
àà 
Id
àà 
==
àà 
$num
àà 
)
àà 
{
ââ 
db
ää 
.
ää 
ParGoal
ää 
.
ää 
Add
ää 
(
ää 
goal
ää #
)
ää# $
;
ää$ %
}
ãã 
else
åå 
{
çç 
Guard
éé 
.
éé 

verifyDate
éé  
(
éé  !
goal
éé! %
,
éé% &
$str
éé' 2
)
éé2 3
;
éé3 4
db
èè 
.
èè 
ParGoal
èè 
.
èè 
Attach
èè !
(
èè! "
goal
èè" &
)
èè& '
;
èè' (
db
êê 
.
êê 
Entry
êê 
(
êê 
goal
êê 
)
êê 
.
êê 
State
êê $
=
êê% &
EntityState
êê' 2
.
êê2 3
Modified
êê3 ;
;
êê; <
db
ëë 
.
ëë 
Entry
ëë 
(
ëë 
goal
ëë 
)
ëë 
.
ëë 
Property
ëë '
(
ëë' (
e
ëë( )
=>
ëë* ,
e
ëë- .
.
ëë. /
AddDate
ëë/ 6
)
ëë6 7
.
ëë7 8

IsModified
ëë8 B
=
ëëC D
false
ëëE J
;
ëëJ K
}
íí 
db
ìì 
.
ìì 
SaveChanges
ìì 
(
ìì 
)
ìì 
;
ìì 
}
îî 	
private
ññ 
void
ññ 
SaveReincidencia
ññ %
(
ññ% &

ParRelapse
ññ& 0

parRelapse
ññ1 ;
,
ññ; <
int
ññ= @
parLevel1Id
ññA L
)
ññL M
{
óó 	

parRelapse
òò 
.
òò 
ParLevel1_Id
òò #
=
òò$ %
parLevel1Id
òò& 1
;
òò1 2
if
öö 
(
öö 

parRelapse
öö 
.
öö 
Id
öö 
==
öö  
$num
öö! "
)
öö" #
{
õõ 
db
úú 
.
úú 

ParRelapse
úú 
.
úú 
Add
úú !
(
úú! "

parRelapse
úú" ,
)
úú, -
;
úú- .
}
ùù 
else
ûû 
{
üü 
Guard
†† 
.
†† 

verifyDate
††  
(
††  !

parRelapse
††! +
,
††+ ,
$str
††- 8
)
††8 9
;
††9 :
db
°° 
.
°° 

ParRelapse
°° 
.
°° 
Attach
°° $
(
°°$ %

parRelapse
°°% /
)
°°/ 0
;
°°0 1
db
¢¢ 
.
¢¢ 
Entry
¢¢ 
(
¢¢ 

parRelapse
¢¢ #
)
¢¢# $
.
¢¢$ %
State
¢¢% *
=
¢¢+ ,
EntityState
¢¢- 8
.
¢¢8 9
Modified
¢¢9 A
;
¢¢A B
db
££ 
.
££ 
Entry
££ 
(
££ 

parRelapse
££ #
)
££# $
.
££$ %
Property
££% -
(
££- .
e
££. /
=>
££0 2
e
££3 4
.
££4 5
AddDate
££5 <
)
££< =
.
££= >

IsModified
££> H
=
££I J
false
££K P
;
££P Q
}
§§ 
db
•• 
.
•• 
SaveChanges
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 	
public
ÆÆ 
void
ÆÆ 
SaveParLevel2
ÆÆ !
(
ÆÆ! "
	ParLevel2
ÆÆ" +
paramLevel2
ÆÆ, 7
,
ÆÆ7 8
List
ÆÆ9 =
<
ÆÆ= >
ParLevel3Group
ÆÆ> L
>
ÆÆL M!
listaParLevel3Group
ÆÆN a
,
ÆÆa b
List
ÆÆc g
<
ÆÆg h
ParCounterXLocal
ÆÆh x
>
ÆÆx y#
listParCounterXLocalÆÆz é
,ÆÆé è
ListÆÆê î
<ÆÆî ï*
ParNotConformityRuleXLevelÆÆï Ø
>ÆÆØ ∞0
 listParamNotConformityRuleXLevelÆÆ± —
,ÆÆ— “
ListÆÆ” ◊
<ÆÆ◊ ÿ
ParEvaluationÆÆÿ Â
>ÆÆÂ Ê#
listParamEvaluationÆÆÁ ˙
,ÆÆ˙ ˚
ListÆÆ¸ Ä
<ÆÆÄ Å
	ParSampleÆÆÅ ä
>ÆÆä ã
listParamSampleÆÆå õ
,ÆÆõ ú
ListÆÆù °
<ÆÆ° ¢

ParRelapseÆÆ¢ ¨
>ÆÆ¨ ≠
listParRelapseÆÆÆ º
)ÆÆº Ω
{
ØØ 	
using
∞∞ 
(
∞∞ 
var
∞∞ 
ts
∞∞ 
=
∞∞ 
db
∞∞ 
.
∞∞ 
Database
∞∞ '
.
∞∞' (
BeginTransaction
∞∞( 8
(
∞∞8 9
IsolationLevel
∞∞9 G
.
∞∞G H
ReadUncommitted
∞∞H W
)
∞∞W X
)
∞∞X Y
{
±±  
AddUpdateParLevel2
≤≤ "
(
≤≤" #
paramLevel2
≤≤# .
)
≤≤. /
;
≤≤/ 0
db
≥≥ 
.
≥≥ 
SaveChanges
≥≥ 
(
≥≥ 
)
≥≥  
;
≥≥  !
if
µµ 
(
µµ .
 listParamNotConformityRuleXLevel
µµ 4
!=
µµ5 7
null
µµ8 <
)
µµ< =
foreach
∂∂ 
(
∂∂ 
var
∂∂  *
paramNotConformityRuleXLevel
∂∂! =
in
∂∂> @.
 listParamNotConformityRuleXLevel
∂∂A a
)
∂∂a b1
#AddUpdateParNotConformityRuleXLevel
∑∑ ;
(
∑∑; <*
paramNotConformityRuleXLevel
∑∑< X
,
∑∑X Y
$num
∑∑Z [
,
∑∑[ \
ParLevel2_Id
∑∑] i
:
∑∑i j
paramLevel2
∑∑k v
.
∑∑v w
Id
∑∑w y
)
∑∑y z
;
∑∑z {
if
ππ 
(
ππ !
listParamEvaluation
ππ '
.
ππ' (
	IsNotNull
ππ( 1
(
ππ1 2
)
ππ2 3
)
ππ3 4
foreach
∫∫ 
(
∫∫ 
var
∫∫  
paramEvaluation
∫∫! 0
in
∫∫1 3!
listParamEvaluation
∫∫4 G
)
∫∫G H$
AddUpdateParEvaluation
ªª .
(
ªª. /
paramEvaluation
ªª/ >
,
ªª> ?
paramLevel2
ªª@ K
.
ªªK L
Id
ªªL N
)
ªªN O
;
ªªO P
if
ΩΩ 
(
ΩΩ 
listParamSample
ΩΩ #
.
ΩΩ# $
	IsNotNull
ΩΩ$ -
(
ΩΩ- .
)
ΩΩ. /
)
ΩΩ/ 0
foreach
ææ 
(
ææ 
var
ææ  
paramSample
ææ! ,
in
ææ- /
listParamSample
ææ0 ?
)
ææ? @ 
AddUpdateParSample
øø *
(
øø* +
paramSample
øø+ 6
,
øø6 7
paramLevel2
øø8 C
.
øøC D
Id
øøD F
)
øøF G
;
øøG H
if
¡¡ 
(
¡¡ !
listaParLevel3Group
¡¡ '
!=
¡¡( *
null
¡¡+ /
)
¡¡/ 0
foreach
¬¬ 
(
¬¬ 
var
¬¬  
Level3Group
¬¬! ,
in
¬¬- /!
listaParLevel3Group
¬¬0 C
)
¬¬C D%
AddUpdateParLevel3Group
√√ /
(
√√/ 0
Level3Group
√√0 ;
,
√√; <
paramLevel2
√√= H
.
√√H I
Id
√√I K
)
√√K L
;
√√L M
if
≈≈ 
(
≈≈ "
listParCounterXLocal
≈≈ (
!=
≈≈) +
null
≈≈, 0
)
≈≈0 1
foreach
∆∆ 
(
∆∆ 
var
∆∆  
ParCounterXLocal
∆∆! 1
in
∆∆2 4"
listParCounterXLocal
∆∆5 I
)
∆∆I J'
AddUpdateParCounterXLocal
«« 1
(
««1 2
ParCounterXLocal
««2 B
,
««B C
paramLevel2
««D O
.
««O P
Id
««P R
)
««R S
;
««S T
if
…… 
(
…… 
listParRelapse
…… "
!=
……# %
null
……& *
)
……* +
foreach
   
(
   
var
    

ParRelapse
  ! +
in
  , .
listParRelapse
  / =
)
  = >!
AddUpdateParRelapse
ÀÀ +
(
ÀÀ+ ,

ParRelapse
ÀÀ, 6
,
ÀÀ6 7
paramLevel2
ÀÀ8 C
.
ÀÀC D
Id
ÀÀD F
)
ÀÀF G
;
ÀÀG H
db
ÕÕ 
.
ÕÕ 
SaveChanges
ÕÕ 
(
ÕÕ 
)
ÕÕ  
;
ÕÕ  !
ts
ŒŒ 
.
ŒŒ 
Commit
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 	
public
‘‘ 
void
‘‘  
AddUpdateParLevel2
‘‘ &
(
‘‘& '
	ParLevel2
‘‘' 0
paramLevel2
‘‘1 <
)
‘‘< =
{
’’ 	
if
◊◊ 
(
◊◊ 
paramLevel2
◊◊ 
.
◊◊ 
ParDepartment_Id
◊◊ ,
==
◊◊- /
null
◊◊0 4
)
◊◊4 5
{
ÿÿ 
paramLevel2
ŸŸ 
.
ŸŸ 
ParDepartment_Id
ŸŸ ,
=
ŸŸ- .
$num
ŸŸ/ 0
;
ŸŸ0 1
}
⁄⁄ 
if
€€ 
(
€€ 
paramLevel2
€€ 
.
€€ 
Id
€€ 
==
€€ !
$num
€€" #
)
€€# $
{
‹‹ 
db
›› 
.
›› 
	ParLevel2
›› 
.
›› 
Add
››  
(
››  !
paramLevel2
››! ,
)
››, -
;
››- .
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
Guard
·· 
.
·· 

verifyDate
··  
(
··  !
paramLevel2
··! ,
,
··, -
$str
··. 9
)
··9 :
;
··: ;
db
‚‚ 
.
‚‚ 
	ParLevel2
‚‚ 
.
‚‚ 
Attach
‚‚ #
(
‚‚# $
paramLevel2
‚‚$ /
)
‚‚/ 0
;
‚‚0 1
db
„„ 
.
„„ 
Entry
„„ 
(
„„ 
paramLevel2
„„ $
)
„„$ %
.
„„% &
State
„„& +
=
„„, -
EntityState
„„. 9
.
„„9 :
Modified
„„: B
;
„„B C
db
‰‰ 
.
‰‰ 
Entry
‰‰ 
(
‰‰ 
paramLevel2
‰‰ $
)
‰‰$ %
.
‰‰% &
Property
‰‰& .
(
‰‰. /
e
‰‰/ 0
=>
‰‰1 3
e
‰‰4 5
.
‰‰5 6
AddDate
‰‰6 =
)
‰‰= >
.
‰‰> ?

IsModified
‰‰? I
=
‰‰J K
false
‰‰L Q
;
‰‰Q R
}
ÂÂ 
}
ÊÊ 	
private
ËË 
void
ËË %
AddUpdateParLevel3Group
ËË ,
(
ËË, -
ParLevel3Group
ËË- ;
paramLevel3Group
ËË< L
,
ËËL M
int
ËËN Q
ParLevel2_Id
ËËR ^
)
ËË^ _
{
ÈÈ 	
paramLevel3Group
ÍÍ 
.
ÍÍ 
ParLevel2_Id
ÍÍ )
=
ÍÍ* +
ParLevel2_Id
ÍÍ, 8
;
ÍÍ8 9
if
ÎÎ 
(
ÎÎ 
paramLevel3Group
ÎÎ  
.
ÎÎ  !
Id
ÎÎ! #
==
ÎÎ$ &
$num
ÎÎ' (
)
ÎÎ( )
{
ÏÏ 
db
ÌÌ 
.
ÌÌ 
ParLevel3Group
ÌÌ !
.
ÌÌ! "
Add
ÌÌ" %
(
ÌÌ% &
paramLevel3Group
ÌÌ& 6
)
ÌÌ6 7
;
ÌÌ7 8
}
ÓÓ 
else
ÔÔ 
{
 
paramLevel3Group
ÒÒ  
.
ÒÒ  !
	ParLevel2
ÒÒ! *
=
ÒÒ+ ,
null
ÒÒ- 1
;
ÒÒ1 2
paramLevel3Group
ÚÚ  
.
ÚÚ  !
ParLevel3Level2
ÚÚ! 0
=
ÚÚ1 2
null
ÚÚ3 7
;
ÚÚ7 8
Guard
ÛÛ 
.
ÛÛ 

verifyDate
ÛÛ  
(
ÛÛ  !
paramLevel3Group
ÛÛ! 1
,
ÛÛ1 2
$str
ÛÛ3 >
)
ÛÛ> ?
;
ÛÛ? @
db
ÙÙ 
.
ÙÙ 
ParLevel3Group
ÙÙ !
.
ÙÙ! "
Attach
ÙÙ" (
(
ÙÙ( )
paramLevel3Group
ÙÙ) 9
)
ÙÙ9 :
;
ÙÙ: ;
db
ıı 
.
ıı 
Entry
ıı 
(
ıı 
paramLevel3Group
ıı )
)
ıı) *
.
ıı* +
State
ıı+ 0
=
ıı1 2
EntityState
ıı3 >
.
ıı> ?
Modified
ıı? G
;
ııG H
db
ˆˆ 
.
ˆˆ 
Entry
ˆˆ 
(
ˆˆ 
paramLevel3Group
ˆˆ )
)
ˆˆ) *
.
ˆˆ* +
Property
ˆˆ+ 3
(
ˆˆ3 4
e
ˆˆ4 5
=>
ˆˆ6 8
e
ˆˆ9 :
.
ˆˆ: ;
AddDate
ˆˆ; B
)
ˆˆB C
.
ˆˆC D

IsModified
ˆˆD N
=
ˆˆO P
false
ˆˆQ V
;
ˆˆV W
}
˜˜ 
}
¯¯ 	
private
˙˙ 
void
˙˙ 1
#AddUpdateParNotConformityRuleXLevel
˙˙ 8
(
˙˙8 9(
ParNotConformityRuleXLevel
˙˙9 S*
paramNotConformityRuleXLevel
˙˙T p
,
˙˙p q
int
˙˙r u
Level
˙˙v {
,
˙˙{ |
int˙˙} Ä
?˙˙Ä Å
ParLevel1_Id˙˙Ç é
=˙˙è ê
null˙˙ë ï
,˙˙ï ñ
int˙˙ó ö
?˙˙ö õ
ParLevel2_Id˙˙ú ®
=˙˙© ™
null˙˙´ Ø
,˙˙Ø ∞
int˙˙± ¥
?˙˙¥ µ
ParLevel3_Id˙˙∂ ¬
=˙˙√ ƒ
null˙˙≈ …
)˙˙…  
{
˚˚ 	*
paramNotConformityRuleXLevel
ÑÑ (
.
ÑÑ( )
ParLevel2_Id
ÑÑ) 5
=
ÑÑ6 7
ParLevel2_Id
ÑÑ8 D
;
ÑÑD E*
paramNotConformityRuleXLevel
àà (
.
àà( )
ParCompany_Id
àà) 6
=
àà7 8
$num
àà9 :
;
àà: ;
if
ââ 
(
ââ *
paramNotConformityRuleXLevel
ââ ,
.
ââ, -
Id
ââ- /
==
ââ0 2
$num
ââ3 4
)
ââ4 5
{
ää 
db
ãã 
.
ãã (
ParNotConformityRuleXLevel
ãã -
.
ãã- .
Add
ãã. 1
(
ãã1 2*
paramNotConformityRuleXLevel
ãã2 N
)
ããN O
;
ããO P
}
åå 
else
çç 
{
éé 
Guard
èè 
.
èè 

verifyDate
èè  
(
èè  !*
paramNotConformityRuleXLevel
èè! =
,
èè= >
$str
èè? J
)
èèJ K
;
èèK L
db
êê 
.
êê (
ParNotConformityRuleXLevel
êê -
.
êê- .
Attach
êê. 4
(
êê4 5*
paramNotConformityRuleXLevel
êê5 Q
)
êêQ R
;
êêR S
db
ëë 
.
ëë 
Entry
ëë 
(
ëë *
paramNotConformityRuleXLevel
ëë 5
)
ëë5 6
.
ëë6 7
State
ëë7 <
=
ëë= >
EntityState
ëë? J
.
ëëJ K
Modified
ëëK S
;
ëëS T
db
íí 
.
íí 
Entry
íí 
(
íí *
paramNotConformityRuleXLevel
íí 5
)
íí5 6
.
íí6 7
Property
íí7 ?
(
íí? @
e
íí@ A
=>
ííB D
e
ííE F
.
ííF G
AddDate
ííG N
)
ííN O
.
ííO P

IsModified
ííP Z
=
íí[ \
false
íí] b
;
ííb c
}
ìì 
}
îî 	
private
ññ 
void
ññ $
AddUpdateParEvaluation
ññ +
(
ññ+ ,
ParEvaluation
ññ, 9
parEvaluation
ññ: G
,
ññG H
int
ññI L
ParLevel2_Id
ññM Y
)
ññY Z
{
óó 	
parEvaluation
òò 
.
òò 
ParLevel2_Id
òò &
=
òò' (
ParLevel2_Id
òò) 5
;
òò5 6
if
üü 
(
üü 
parEvaluation
üü 
.
üü 
Id
üü  
==
üü! #
$num
üü$ %
)
üü% &
{
†† 
db
°° 
.
°° 
ParEvaluation
°°  
.
°°  !
Add
°°! $
(
°°$ %
parEvaluation
°°% 2
)
°°2 3
;
°°3 4
}
¢¢ 
else
££ 
{
§§ 
Guard
•• 
.
•• 

verifyDate
••  
(
••  !
parEvaluation
••! .
,
••. /
$str
••0 ;
)
••; <
;
••< =
db
¶¶ 
.
¶¶ 
ParEvaluation
¶¶  
.
¶¶  !
Attach
¶¶! '
(
¶¶' (
parEvaluation
¶¶( 5
)
¶¶5 6
;
¶¶6 7
db
ßß 
.
ßß 
Entry
ßß 
(
ßß 
parEvaluation
ßß &
)
ßß& '
.
ßß' (
State
ßß( -
=
ßß. /
EntityState
ßß0 ;
.
ßß; <
Modified
ßß< D
;
ßßD E
db
®® 
.
®® 
Entry
®® 
(
®® 
parEvaluation
®® &
)
®®& '
.
®®' (
Property
®®( 0
(
®®0 1
e
®®1 2
=>
®®3 5
e
®®6 7
.
®®7 8
AddDate
®®8 ?
)
®®? @
.
®®@ A

IsModified
®®A K
=
®®L M
false
®®N S
;
®®S T
}
©© 
db
™™ 
.
™™ 
SaveChanges
™™ 
(
™™ 
)
™™ 
;
™™ 
}
´´ 	
private
≠≠ 
void
≠≠  
AddUpdateParSample
≠≠ '
(
≠≠' (
	ParSample
≠≠( 1
	parSample
≠≠2 ;
,
≠≠; <
int
≠≠= @
ParLevel2_Id
≠≠A M
)
≠≠M N
{
ÆÆ 	
	parSample
ØØ 
.
ØØ 
ParLevel2_Id
ØØ "
=
ØØ# $
ParLevel2_Id
ØØ% 1
;
ØØ1 2
if
∂∂ 
(
∂∂ 
	parSample
∂∂ 
.
∂∂ 
Id
∂∂ 
==
∂∂ 
$num
∂∂  !
)
∂∂! "
{
∑∑ 
db
∏∏ 
.
∏∏ 
	ParSample
∏∏ 
.
∏∏ 
Add
∏∏  
(
∏∏  !
	parSample
∏∏! *
)
∏∏* +
;
∏∏+ ,
}
ππ 
else
∫∫ 
{
ªª 
Guard
ºº 
.
ºº 

verifyDate
ºº  
(
ºº  !
	parSample
ºº! *
,
ºº* +
$str
ºº, 7
)
ºº7 8
;
ºº8 9
db
ΩΩ 
.
ΩΩ 
	ParSample
ΩΩ 
.
ΩΩ 
Attach
ΩΩ #
(
ΩΩ# $
	parSample
ΩΩ$ -
)
ΩΩ- .
;
ΩΩ. /
db
ææ 
.
ææ 
Entry
ææ 
(
ææ 
	parSample
ææ "
)
ææ" #
.
ææ# $
State
ææ$ )
=
ææ* +
EntityState
ææ, 7
.
ææ7 8
Modified
ææ8 @
;
ææ@ A
}
¿¿ 
db
¡¡ 
.
¡¡ 
SaveChanges
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¬¬ 	
private
ƒƒ 
void
ƒƒ '
AddUpdateParCounterXLocal
ƒƒ .
(
ƒƒ. /
ParCounterXLocal
ƒƒ/ ?
parCounterXLocal
ƒƒ@ P
,
ƒƒP Q
int
ƒƒR U
ParLevel2_Id
ƒƒV b
)
ƒƒb c
{
≈≈ 	
parCounterXLocal
∆∆ 
.
∆∆ 
ParLevel2_Id
∆∆ )
=
∆∆* +
ParLevel2_Id
∆∆, 8
;
∆∆8 9
if
«« 
(
«« 
parCounterXLocal
««  
.
««  !
Id
««! #
==
««$ &
$num
««' (
)
««( )
{
»» 
db
…… 
.
…… 
ParCounterXLocal
…… #
.
……# $
Add
……$ '
(
……' (
parCounterXLocal
……( 8
)
……8 9
;
……9 :
}
   
else
ÀÀ 
{
ÃÃ 
Guard
ÕÕ 
.
ÕÕ 

verifyDate
ÕÕ  
(
ÕÕ  !
parCounterXLocal
ÕÕ! 1
,
ÕÕ1 2
$str
ÕÕ3 >
)
ÕÕ> ?
;
ÕÕ? @
db
ŒŒ 
.
ŒŒ 
ParCounterXLocal
ŒŒ #
.
ŒŒ# $
Attach
ŒŒ$ *
(
ŒŒ* +
parCounterXLocal
ŒŒ+ ;
)
ŒŒ; <
;
ŒŒ< =
db
œœ 
.
œœ 
Entry
œœ 
(
œœ 
parCounterXLocal
œœ )
)
œœ) *
.
œœ* +
State
œœ+ 0
=
œœ1 2
EntityState
œœ3 >
.
œœ> ?
Modified
œœ? G
;
œœG H
db
–– 
.
–– 
Entry
–– 
(
–– 
parCounterXLocal
–– )
)
––) *
.
––* +
Property
––+ 3
(
––3 4
e
––4 5
=>
––6 8
e
––9 :
.
––: ;
AddDate
––; B
)
––B C
.
––C D

IsModified
––D N
=
––O P
false
––Q V
;
––V W
}
—— 
}
““ 	
private
‘‘ 
void
‘‘ !
AddUpdateParRelapse
‘‘ (
(
‘‘( )

ParRelapse
‘‘) 3

parRelapse
‘‘4 >
,
‘‘> ?
int
‘‘@ C
ParLevel2_Id
‘‘D P
)
‘‘P Q
{
’’ 	

parRelapse
÷÷ 
.
÷÷ 
ParLevel2_Id
÷÷ #
=
÷÷$ %
ParLevel2_Id
÷÷& 2
;
÷÷2 3
if
◊◊ 
(
◊◊ 

parRelapse
◊◊ 
.
◊◊ 
Id
◊◊ 
==
◊◊  
$num
◊◊! "
)
◊◊" #
{
ÿÿ 
db
ŸŸ 
.
ŸŸ 

ParRelapse
ŸŸ 
.
ŸŸ 
Add
ŸŸ !
(
ŸŸ! "

parRelapse
ŸŸ" ,
)
ŸŸ, -
;
ŸŸ- .
}
⁄⁄ 
else
€€ 
{
‹‹ 
Guard
›› 
.
›› 

verifyDate
››  
(
››  !

parRelapse
››! +
,
››+ ,
$str
››- 8
)
››8 9
;
››9 :
db
ﬁﬁ 
.
ﬁﬁ 

ParRelapse
ﬁﬁ 
.
ﬁﬁ 
Attach
ﬁﬁ $
(
ﬁﬁ$ %

parRelapse
ﬁﬁ% /
)
ﬁﬁ/ 0
;
ﬁﬁ0 1
db
ﬂﬂ 
.
ﬂﬂ 
Entry
ﬂﬂ 
(
ﬂﬂ 

parRelapse
ﬂﬂ #
)
ﬂﬂ# $
.
ﬂﬂ$ %
State
ﬂﬂ% *
=
ﬂﬂ+ ,
EntityState
ﬂﬂ- 8
.
ﬂﬂ8 9
Modified
ﬂﬂ9 A
;
ﬂﬂA B
db
‡‡ 
.
‡‡ 
Entry
‡‡ 
(
‡‡ 

parRelapse
‡‡ #
)
‡‡# $
.
‡‡$ %
Property
‡‡% -
(
‡‡- .
e
‡‡. /
=>
‡‡0 2
e
‡‡3 4
.
‡‡4 5
AddDate
‡‡5 <
)
‡‡< =
.
‡‡= >

IsModified
‡‡> H
=
‡‡I J
false
‡‡K P
;
‡‡P Q
}
·· 
}
‚‚ 	
public
ÔÔ 
void
ÔÔ 
SaveParLevel3
ÔÔ !
(
ÔÔ! "
	ParLevel3
ÔÔ" +
paramLevel3
ÔÔ, 7
,
ÔÔ7 8
List
ÔÔ9 =
<
ÔÔ= >
ParLevel3Value
ÔÔ> L
>
ÔÔL M"
listParamLevel3Value
ÔÔN b
,
ÔÔb c
List
ÔÔd h
<
ÔÔh i

ParRelapse
ÔÔi s
>
ÔÔs t
listParRelapseÔÔu É
,ÔÔÉ Ñ
ListÔÔÖ â
<ÔÔâ ä
ParLevel3Level2ÔÔä ô
>ÔÔô ö%
parLevel3Level2pontosÔÔõ ∞
,ÔÔ∞ ±
intÔÔ≤ µ
level1IdÔÔ∂ æ
)ÔÔæ ø
{
 	
using
ÒÒ 
(
ÒÒ 
var
ÒÒ 
ts
ÒÒ 
=
ÒÒ 
db
ÒÒ 
.
ÒÒ 
Database
ÒÒ '
.
ÒÒ' (
BeginTransaction
ÒÒ( 8
(
ÒÒ8 9
IsolationLevel
ÒÒ9 G
.
ÒÒG H
ReadUncommitted
ÒÒH W
)
ÒÒW X
)
ÒÒX Y
{
ÚÚ 
db
ÛÛ 
.
ÛÛ 
Configuration
ÛÛ  
.
ÛÛ  !&
AutoDetectChangesEnabled
ÛÛ! 9
=
ÛÛ: ;
false
ÛÛ< A
;
ÛÛA B 
AddUpdateParLevel3
ÙÙ "
(
ÙÙ" #
paramLevel3
ÙÙ# .
)
ÙÙ. /
;
ÙÙ/ 0
db
ıı 
.
ıı 
SaveChanges
ıı 
(
ıı 
)
ıı  
;
ıı  !
if
˜˜ 
(
˜˜ "
listParamLevel3Value
˜˜ (
!=
˜˜) +
null
˜˜, 0
)
˜˜0 1
if
¯¯ 
(
¯¯ "
listParamLevel3Value
¯¯ ,
.
¯¯, -
Count
¯¯- 2
(
¯¯2 3
)
¯¯3 4
>
¯¯5 6
$num
¯¯7 8
)
¯¯8 9%
AddUpdateParLevel3Value
˘˘ /
(
˘˘/ 0"
listParamLevel3Value
˘˘0 D
,
˘˘D E
paramLevel3
˘˘F Q
.
˘˘Q R
Id
˘˘R T
)
˘˘T U
;
˘˘U V
if
˚˚ 
(
˚˚ 
listParRelapse
˚˚ "
!=
˚˚# %
null
˚˚& *
)
˚˚* +
foreach
¸¸ 
(
¸¸ 
var
¸¸  

parRelapse
¸¸! +
in
¸¸, .
listParRelapse
¸¸/ =
)
¸¸= >$
SaveReincidenciaLevel3
˝˝ .
(
˝˝. /

parRelapse
˝˝/ 9
,
˝˝9 :
paramLevel3
˝˝; F
.
˝˝F G
Id
˝˝G I
)
˝˝I J
;
˝˝J K
if
ˇˇ 
(
ˇˇ #
parLevel3Level2pontos
ˇˇ )
!=
ˇˇ* ,
null
ˇˇ- 1
)
ˇˇ1 2
if
ÄÄ 
(
ÄÄ #
parLevel3Level2pontos
ÄÄ -
.
ÄÄ- .
Count
ÄÄ. 3
(
ÄÄ3 4
)
ÄÄ4 5
>
ÄÄ6 7
$num
ÄÄ8 9
)
ÄÄ9 :&
AddUpdateParLevel3Level2
ÅÅ 0
(
ÅÅ0 1#
parLevel3Level2pontos
ÅÅ1 F
,
ÅÅF G
level1Id
ÅÅH P
)
ÅÅP Q
;
ÅÅQ R
db
ÉÉ 
.
ÉÉ 
SaveChanges
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
ts
ÑÑ 
.
ÑÑ 
Commit
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
private
àà 
void
àà $
SaveReincidenciaLevel3
àà +
(
àà+ ,

ParRelapse
àà, 6

parRelapse
àà7 A
,
ààA B
int
ààC F
ParLevel3_Id
ààG S
)
ààS T
{
ââ 	

parRelapse
ää 
.
ää 
ParLevel3_Id
ää #
=
ää$ %
ParLevel3_Id
ää& 2
;
ää2 3
if
åå 
(
åå 

parRelapse
åå 
.
åå 
Id
åå 
==
åå  
$num
åå! "
)
åå" #
{
çç 
db
éé 
.
éé 

ParRelapse
éé 
.
éé 
Add
éé !
(
éé! "

parRelapse
éé" ,
)
éé, -
;
éé- .
}
èè 
else
êê 
{
ëë 
Guard
íí 
.
íí 

verifyDate
íí  
(
íí  !

parRelapse
íí! +
,
íí+ ,
$str
íí- 8
)
íí8 9
;
íí9 :
db
ìì 
.
ìì 

ParRelapse
ìì 
.
ìì 
Attach
ìì $
(
ìì$ %

parRelapse
ìì% /
)
ìì/ 0
;
ìì0 1
db
îî 
.
îî 
Entry
îî 
(
îî 

parRelapse
îî #
)
îî# $
.
îî$ %
State
îî% *
=
îî+ ,
EntityState
îî- 8
.
îî8 9
Modified
îî9 A
;
îîA B
db
ïï 
.
ïï 
Entry
ïï 
(
ïï 

parRelapse
ïï #
)
ïï# $
.
ïï$ %
Property
ïï% -
(
ïï- .
e
ïï. /
=>
ïï0 2
e
ïï3 4
.
ïï4 5
AddDate
ïï5 <
)
ïï< =
.
ïï= >

IsModified
ïï> H
=
ïïI J
false
ïïK P
;
ïïP Q
}
ññ 
db
óó 
.
óó 
SaveChanges
óó 
(
óó 
)
óó 
;
óó 
}
òò 	
public
öö 
void
öö  
AddUpdateParLevel3
öö &
(
öö& '
	ParLevel3
öö' 0
paramLevel3
öö1 <
)
öö< =
{
õõ 	
if
úú 
(
úú 
paramLevel3
úú 
.
úú 
Id
úú 
==
úú !
$num
úú" #
)
úú# $
{
ùù 
db
ûû 
.
ûû 
	ParLevel3
ûû 
.
ûû 
Add
ûû  
(
ûû  !
paramLevel3
ûû! ,
)
ûû, -
;
ûû- .
}
üü 
else
†† 
{
°° 
Guard
¢¢ 
.
¢¢ 

verifyDate
¢¢  
(
¢¢  !
paramLevel3
¢¢! ,
,
¢¢, -
$str
¢¢. 9
)
¢¢9 :
;
¢¢: ;
db
££ 
.
££ 
	ParLevel3
££ 
.
££ 
Attach
££ #
(
££# $
paramLevel3
££$ /
)
££/ 0
;
££0 1
db
§§ 
.
§§ 
Entry
§§ 
(
§§ 
paramLevel3
§§ $
)
§§$ %
.
§§% &
State
§§& +
=
§§, -
EntityState
§§. 9
.
§§9 :
Modified
§§: B
;
§§B C
db
•• 
.
•• 
Entry
•• 
(
•• 
paramLevel3
•• $
)
••$ %
.
••% &
Property
••& .
(
••. /
e
••/ 0
=>
••1 3
e
••4 5
.
••5 6
AddDate
••6 =
)
••= >
.
••> ?

IsModified
••? I
=
••J K
false
••L Q
;
••Q R
}
¶¶ 
}
ßß 	
public
©© 
void
©© %
AddUpdateParLevel3Value
©© +
(
©©+ ,
List
©©, 0
<
©©0 1
ParLevel3Value
©©1 ?
>
©©? @
paramLevel3Value
©©A Q
,
©©Q R
int
©©S V
ParLevel3_Id
©©W c
)
©©c d
{
™™ 	
paramLevel3Value
´´ 
.
´´ 
ForEach
´´ $
(
´´$ %
r
´´% &
=>
´´' )
r
´´* +
.
´´+ ,
ParLevel3_Id
´´, 8
=
´´9 :
ParLevel3_Id
´´; G
)
´´G H
;
´´H I
if
≠≠ 
(
≠≠ 
paramLevel3Value
≠≠  
.
≠≠  !
Any
≠≠! $
(
≠≠$ %
r
≠≠% &
=>
≠≠' )
r
≠≠* +
.
≠≠+ ,
Id
≠≠, .
==
≠≠/ 1
$num
≠≠2 3
)
≠≠3 4
)
≠≠4 5
{
ÆÆ 
db
ØØ 
.
ØØ 
ParLevel3Value
ØØ !
.
ØØ! "
AddRange
ØØ" *
(
ØØ* +
paramLevel3Value
ØØ+ ;
.
ØØ; <
Where
ØØ< A
(
ØØA B
r
ØØB C
=>
ØØD F
r
ØØG H
.
ØØH I
Id
ØØI K
==
ØØL N
$num
ØØO P
)
ØØP Q
)
ØØQ R
;
ØØR S
}
∞∞ 
if
≤≤ 
(
≤≤ 
paramLevel3Value
≤≤  
.
≤≤  !
Any
≤≤! $
(
≤≤$ %
r
≤≤% &
=>
≤≤' )
r
≤≤* +
.
≤≤+ ,
Id
≤≤, .
>
≤≤/ 0
$num
≤≤1 2
)
≤≤2 3
)
≤≤3 4
{
≥≥ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
i
¥¥ 
in
¥¥ !
paramLevel3Value
¥¥" 2
.
¥¥2 3
Where
¥¥3 8
(
¥¥8 9
r
¥¥9 :
=>
¥¥; =
r
¥¥> ?
.
¥¥? @
Id
¥¥@ B
>
¥¥C D
$num
¥¥E F
)
¥¥F G
)
¥¥G H
{
µµ 
Guard
∂∂ 
.
∂∂ 

verifyDate
∂∂ $
(
∂∂$ %
i
∂∂% &
,
∂∂& '
$str
∂∂( 3
)
∂∂3 4
;
∂∂4 5
db
∑∑ 
.
∑∑ 
ParLevel3Value
∑∑ %
.
∑∑% &
Attach
∑∑& ,
(
∑∑, -
i
∑∑- .
)
∑∑. /
;
∑∑/ 0
db
∏∏ 
.
∏∏ 
Entry
∏∏ 
(
∏∏ 
i
∏∏ 
)
∏∏ 
.
∏∏  
State
∏∏  %
=
∏∏& '
EntityState
∏∏( 3
.
∏∏3 4
Modified
∏∏4 <
;
∏∏< =
db
ππ 
.
ππ 
Entry
ππ 
(
ππ 
i
ππ 
)
ππ 
.
ππ  
Property
ππ  (
(
ππ( )
e
ππ) *
=>
ππ+ -
e
ππ. /
.
ππ/ 0
AddDate
ππ0 7
)
ππ7 8
.
ππ8 9

IsModified
ππ9 C
=
ππD E
false
ππF K
;
ππK L
}
∫∫ 
}
ªª 
db
ΩΩ 
.
ΩΩ 
SaveChanges
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
}
ææ 	
private
¿¿ 
string
¿¿ 
VerificaNulo
¿¿ #
<
¿¿# $
T
¿¿$ %
>
¿¿% &
(
¿¿& '
T
¿¿' (
prop
¿¿) -
)
¿¿- .
{
¡¡ 	
return
¬¬ 
prop
¬¬ 
.
¬¬ 
IsNull
¬¬ 
(
¬¬ 
)
¬¬  
?
¬¬! "
$str
¬¬# )
:
¬¬* +
prop
¬¬, 0
.
¬¬0 1
ToString
¬¬1 9
(
¬¬9 :
)
¬¬: ;
;
¬¬; <
}
√√ 	
public
…… 
void
…… 
SaveVinculoL3L2L1
…… %
(
……% &
int
……& )
idLevel1
……* 2
,
……2 3
int
……4 7
idLevel2
……8 @
,
……@ A
int
……B E
idLevel3
……F N
,
……N O
int
……P S
?
……S T
userId
……U [
,
……[ \
int
……] `
?
……` a
	companyId
……b k
)
……k l
{
   	
using
ÀÀ 
(
ÀÀ 
var
ÀÀ 
ts
ÀÀ 
=
ÀÀ 
db
ÀÀ 
.
ÀÀ 
Database
ÀÀ '
.
ÀÀ' (
BeginTransaction
ÀÀ( 8
(
ÀÀ8 9
IsolationLevel
ÀÀ9 G
.
ÀÀG H
ReadUncommitted
ÀÀH W
)
ÀÀW X
)
ÀÀX Y
{
ÃÃ 
ParLevel2Level1
ÕÕ 
existenteL2L1
ÕÕ  -
;
ÕÕ- .
ParLevel3Level2
ŒŒ 
existenteL3L2
ŒŒ  -
;
ŒŒ- .#
ParLevel3Level2Level1
œœ %
existenteL3L2L1
œœ& 5
;
œœ5 6
ParLevel3Level2
–– 

salvarL3L2
––  *
;
––* +
ParLevel2Level1
—— 

salvarL2L1
——  *
;
——* +
UserSgq
““ 
user
““ 
;
““ 
if
‘‘ 
(
‘‘ 
userId
‘‘ 
>
‘‘ 
$num
‘‘ 
)
‘‘ 
{
’’ 
user
÷÷ 
=
÷÷ 
db
÷÷ 
.
÷÷ 
UserSgq
÷÷ %
.
÷÷% &
FirstOrDefault
÷÷& 4
(
÷÷4 5
r
÷÷5 6
=>
÷÷7 9
r
÷÷: ;
.
÷÷; <
Id
÷÷< >
==
÷÷? A
userId
÷÷B H
)
÷÷H I
;
÷÷I J
if
◊◊ 
(
◊◊ 
user
◊◊ 
.
◊◊ 
Role
◊◊ !
==
◊◊" $
null
◊◊% )
||
◊◊* ,
!
◊◊- .
user
◊◊. 2
.
◊◊2 3
Role
◊◊3 7
.
◊◊7 8
ToLowerInvariant
◊◊8 H
(
◊◊H I
)
◊◊I J
.
◊◊J K
Contains
◊◊K S
(
◊◊S T
$str
◊◊T [
.
◊◊[ \
ToLowerInvariant
◊◊\ l
(
◊◊l m
)
◊◊m n
)
◊◊n o
)
◊◊o p
	companyId
ÿÿ !
=
ÿÿ" #
user
ÿÿ$ (
.
ÿÿ( )
ParCompany_Id
ÿÿ) 6
;
ÿÿ6 7
}
⁄⁄ 
existenteL2L1
›› 
=
›› 
db
››  "
.
››" #
ParLevel2Level1
››# 2
.
››2 3
FirstOrDefault
››3 A
(
››A B
r
››B C
=>
››D F
r
››G H
.
››H I
ParLevel1_Id
››I U
==
››V X
idLevel1
››Y a
&&
››b d
r
››e f
.
››f g
ParLevel2_Id
››g s
==
››t v
idLevel2
››w 
&&››Ä Ç
r››É Ñ
.››Ñ Ö
ParCompany_Id››Ö í
==››ì ï
	companyId››ñ ü
)››ü †
;››† °
if
ﬂﬂ 
(
ﬂﬂ 
existenteL2L1
ﬂﬂ !
==
ﬂﬂ" $
null
ﬂﬂ% )
)
ﬂﬂ) *
{
‡‡ 

salvarL2L1
·· 
=
··  
new
··! $
ParLevel2Level1
··% 4
(
··4 5
)
··5 6
{
··7 8
ParLevel1_Id
··9 E
=
··F G
idLevel1
··H P
,
··P Q
ParLevel2_Id
··R ^
=
··_ `
idLevel2
··a i
,
··i j
AddDate
··k r
=
··s t
DateTime
··u }
.
··} ~
Now··~ Å
,··Å Ç
IsActive··É ã
=··å ç
true··é í
,··í ì
ParCompany_Id··î °
=··¢ £
	companyId··§ ≠
}··Æ Ø
;··Ø ∞
db
‚‚ 
.
‚‚ 
ParLevel2Level1
‚‚ &
.
‚‚& '
Add
‚‚' *
(
‚‚* +

salvarL2L1
‚‚+ 5
)
‚‚5 6
;
‚‚6 7
db
„„ 
.
„„ 
SaveChanges
„„ "
(
„„" #
)
„„# $
;
„„$ %
}
‰‰ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
existenteL2L1
ÂÂ &
.
ÂÂ& '
IsActive
ÂÂ' /
==
ÂÂ0 2
false
ÂÂ3 8
)
ÂÂ8 9
{
ÊÊ 
existenteL2L1
ÁÁ !
.
ÁÁ! "
IsActive
ÁÁ" *
=
ÁÁ+ ,
true
ÁÁ- 1
;
ÁÁ1 2
var
ËË 
old
ËË 
=
ËË 
db
ËË  
.
ËË  !
ParLevel2Level1
ËË! 0
.
ËË0 1
Find
ËË1 5
(
ËË5 6
existenteL2L1
ËË6 C
.
ËËC D
Id
ËËD F
)
ËËF G
;
ËËG H
var
ÈÈ 
entry
ÈÈ 
=
ÈÈ 
db
ÈÈ  "
.
ÈÈ" #
Entry
ÈÈ# (
(
ÈÈ( )
existenteL2L1
ÈÈ) 6
)
ÈÈ6 7
;
ÈÈ7 8
entry
ÍÍ 
.
ÍÍ 
CurrentValues
ÍÍ '
.
ÍÍ' (
	SetValues
ÍÍ( 1
(
ÍÍ1 2
existenteL2L1
ÍÍ2 ?
)
ÍÍ? @
;
ÍÍ@ A
db
ÏÏ 
.
ÏÏ 
SaveChanges
ÏÏ "
(
ÏÏ" #
)
ÏÏ# $
;
ÏÏ$ %
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
idLevel3
ÔÔ 
>
ÔÔ 
$num
ÔÔ  
)
ÔÔ  !
{
 
var
ÚÚ 
idL3L2
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
existenteL3L2
ÛÛ !
=
ÛÛ" #
db
ÛÛ$ &
.
ÛÛ& '
ParLevel3Level2
ÛÛ' 6
.
ÛÛ6 7
FirstOrDefault
ÛÛ7 E
(
ÛÛE F
r
ÛÛF G
=>
ÛÛH J
r
ÛÛK L
.
ÛÛL M
ParLevel3_Id
ÛÛM Y
==
ÛÛZ \
idLevel3
ÛÛ] e
&&
ÛÛf h
r
ÛÛi j
.
ÛÛj k
ParLevel2_Id
ÛÛk w
==
ÛÛx z
idLevel2ÛÛ{ É
&&ÛÛÑ Ü
rÛÛá à
.ÛÛà â
ParCompany_IdÛÛâ ñ
==ÛÛó ô
	companyIdÛÛö £
)ÛÛ£ §
;ÛÛ§ •
if
ÙÙ 
(
ÙÙ 
existenteL3L2
ÙÙ %
==
ÙÙ& (
null
ÙÙ) -
)
ÙÙ- .
{
ıı 

salvarL3L2
˜˜ "
=
˜˜# $
new
˜˜% (
ParLevel3Level2
˜˜) 8
(
˜˜8 9
)
˜˜9 :
{
˜˜; <
ParLevel2_Id
˜˜= I
=
˜˜J K
idLevel2
˜˜L T
,
˜˜T U
ParLevel3_Id
˜˜V b
=
˜˜c d
idLevel3
˜˜e m
,
˜˜m n
ParCompany_Id
˜˜o |
=
˜˜} ~
	companyId˜˜ à
,˜˜à â
IsActive˜˜ä í
=˜˜ì î
true˜˜ï ô
,˜˜ô ö
Weight˜˜õ °
=˜˜¢ £
$num˜˜§ •
}˜˜¶ ß
;˜˜ß ®
db
¯¯ 
.
¯¯ 
ParLevel3Level2
¯¯ *
.
¯¯* +
Add
¯¯+ .
(
¯¯. /

salvarL3L2
¯¯/ 9
)
¯¯9 :
;
¯¯: ;
db
˘˘ 
.
˘˘ 
SaveChanges
˘˘ &
(
˘˘& '
)
˘˘' (
;
˘˘( )
idL3L2
˙˙ 
=
˙˙  

salvarL3L2
˙˙! +
.
˙˙+ ,
Id
˙˙, .
;
˙˙. /
}
˚˚ 
else
¸¸ 
{
˝˝ 
idL3L2
˛˛ 
=
˛˛  
existenteL3L2
˛˛! .
.
˛˛. /
Id
˛˛/ 1
;
˛˛1 2
if
ÄÄ 
(
ÄÄ 
existenteL3L2
ÄÄ )
.
ÄÄ) *
IsActive
ÄÄ* 2
==
ÄÄ3 5
false
ÄÄ6 ;
)
ÄÄ; <
{
ÅÅ 
existenteL3L2
ÇÇ )
.
ÇÇ) *
IsActive
ÇÇ* 2
=
ÇÇ3 4
true
ÇÇ5 9
;
ÇÇ9 :
var
ÉÉ 
old
ÉÉ  #
=
ÉÉ$ %
db
ÉÉ& (
.
ÉÉ( )
ParLevel3Level2
ÉÉ) 8
.
ÉÉ8 9
Find
ÉÉ9 =
(
ÉÉ= >
existenteL3L2
ÉÉ> K
.
ÉÉK L
Id
ÉÉL N
)
ÉÉN O
;
ÉÉO P
var
ÑÑ 
entry
ÑÑ  %
=
ÑÑ& '
db
ÑÑ( *
.
ÑÑ* +
Entry
ÑÑ+ 0
(
ÑÑ0 1
existenteL3L2
ÑÑ1 >
)
ÑÑ> ?
;
ÑÑ? @
entry
ÖÖ !
.
ÖÖ! "
CurrentValues
ÖÖ" /
.
ÖÖ/ 0
	SetValues
ÖÖ0 9
(
ÖÖ9 :
existenteL3L2
ÖÖ: G
)
ÖÖG H
;
ÖÖH I
db
áá 
.
áá 
SaveChanges
áá *
(
áá* +
)
áá+ ,
;
áá, -
}
àà 
}
ää 
existenteL3L2L1
éé #
=
éé$ %
db
éé& (
.
éé( )#
ParLevel3Level2Level1
éé) >
.
éé> ?
FirstOrDefault
éé? M
(
ééM N
r
ééN O
=>
ééP R
r
ééS T
.
ééT U
ParLevel1_Id
ééU a
==
ééb d
idLevel1
éée m
&&
één p
r
ééq r
.
éér s!
ParLevel3Level2_Idéés Ö
==ééÜ à
idL3L2ééâ è
&&ééê í
rééì î
.ééî ï
ParCompany_Idééï ¢
==éé£ •
	companyIdéé¶ Ø
)ééØ ∞
;éé∞ ±
if
èè 
(
èè 
existenteL3L2L1
èè '
==
èè( *
null
èè+ /
)
èè/ 0
{
êê 
var
ëë 
salvarL3L2L1
ëë (
=
ëë) *
new
ëë+ .#
ParLevel3Level2Level1
ëë/ D
(
ëëD E
)
ëëE F
{
ëëG H
ParLevel1_Id
ëëI U
=
ëëV W
idLevel1
ëëX `
,
ëë` a 
ParLevel3Level2_Id
ëëb t
=
ëëu v
idL3L2
ëëw }
,
ëë} ~
ParCompany_Idëë å
=ëëç é
	companyIdëëè ò
,ëëò ô
Activeëëö †
=ëë° ¢
trueëë£ ß
}ëë® ©
;ëë© ™
db
íí 
.
íí #
ParLevel3Level2Level1
íí 0
.
íí0 1
Add
íí1 4
(
íí4 5
salvarL3L2L1
íí5 A
)
ííA B
;
ííB C
db
ìì 
.
ìì 
SaveChanges
ìì &
(
ìì& '
)
ìì' (
;
ìì( )
}
îî 
else
ïï 
if
ïï 
(
ïï 
existenteL3L2L1
ïï ,
.
ïï, -
Active
ïï- 3
==
ïï4 6
false
ïï7 <
)
ïï< =
{
ññ 
existenteL3L2L1
óó '
.
óó' (
Active
óó( .
=
óó/ 0
true
óó1 5
;
óó5 6
var
òò 
old
òò 
=
òò  !
db
òò" $
.
òò$ %#
ParLevel3Level2Level1
òò% :
.
òò: ;
Find
òò; ?
(
òò? @
existenteL3L2L1
òò@ O
.
òòO P
Id
òòP R
)
òòR S
;
òòS T
var
ôô 
entry
ôô !
=
ôô" #
db
ôô$ &
.
ôô& '
Entry
ôô' ,
(
ôô, -
existenteL3L2L1
ôô- <
)
ôô< =
;
ôô= >
entry
öö 
.
öö 
CurrentValues
öö +
.
öö+ ,
	SetValues
öö, 5
(
öö5 6
existenteL3L2L1
öö6 E
)
ööE F
;
ööF G
db
úú 
.
úú 
SaveChanges
úú &
(
úú& '
)
úú' (
;
úú( )
}
ùù 
ts
ûû 
.
ûû 
Commit
ûû 
(
ûû 
)
ûû 
;
ûû  
}
†† 
}
°° 
}
§§ 	
private
™™ 
void
™™ 
InativaCounter
™™ #
(
™™# $
	ParLevel1
™™$ -
paramLevel1
™™. 9
,
™™9 :
List
™™; ?
<
™™? @
int
™™@ C
>
™™C D
removeCounter
™™E R
)
™™R S
{
´´ 	
if
¨¨ 
(
¨¨ 
removeCounter
¨¨ 
!=
¨¨  
null
¨¨! %
)
¨¨% &
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
removeCounter
ÆÆ !
.
ÆÆ! "
Count
ÆÆ" '
>
ÆÆ( )
$num
ÆÆ* +
)
ÆÆ+ ,
{
ØØ 
foreach
∞∞ 
(
∞∞ 
var
∞∞  
	idCounter
∞∞! *
in
∞∞+ -
removeCounter
∞∞. ;
)
∞∞; <
{
±± 
var
≤≤ 
objetos
≤≤ #
=
≤≤$ %
db
≤≤& (
.
≤≤( )
ParCounterXLocal
≤≤) 9
.
≤≤9 :
Where
≤≤: ?
(
≤≤? @
r
≤≤@ A
=>
≤≤B D
r
≤≤E F
.
≤≤F G
Id
≤≤G I
==
≤≤J L
	idCounter
≤≤M V
)
≤≤V W
;
≤≤W X
foreach
¥¥ 
(
¥¥  !
var
¥¥! $!
marcarObjetoInativo
¥¥% 8
in
¥¥9 ;
objetos
¥¥< C
)
¥¥C D
{
µµ !
marcarObjetoInativo
∂∂ /
.
∂∂/ 0
IsActive
∂∂0 8
=
∂∂9 :
false
∂∂; @
;
∂∂@ A
Guard
∑∑ !
.
∑∑! "

verifyDate
∑∑" ,
(
∑∑, -!
marcarObjetoInativo
∑∑- @
,
∑∑@ A
$str
∑∑B M
)
∑∑M N
;
∑∑N O
db
∏∏ 
.
∏∏ 
ParCounterXLocal
∏∏ /
.
∏∏/ 0
Attach
∏∏0 6
(
∏∏6 7!
marcarObjetoInativo
∏∏7 J
)
∏∏J K
;
∏∏K L
db
ππ 
.
ππ 
Entry
ππ $
(
ππ$ %!
marcarObjetoInativo
ππ% 8
)
ππ8 9
.
ππ9 :
State
ππ: ?
=
ππ@ A
EntityState
ππB M
.
ππM N
Modified
ππN V
;
ππV W
db
∫∫ 
.
∫∫ 
Entry
∫∫ $
(
∫∫$ %!
marcarObjetoInativo
∫∫% 8
)
∫∫8 9
.
∫∫9 :
Property
∫∫: B
(
∫∫B C
e
∫∫C D
=>
∫∫E G
e
∫∫H I
.
∫∫I J
AddDate
∫∫J Q
)
∫∫Q R
.
∫∫R S

IsModified
∫∫S ]
=
∫∫^ _
false
∫∫` e
;
∫∫e f
db
ªª 
.
ªª 
SaveChanges
ªª *
(
ªª* +
)
ªª+ ,
;
ªª, -
}
ºº 
}
ææ 
}
øø 
}
¿¿ 
}
¡¡ 	
private
√√ 
void
√√ 
InativaHeadField
√√ %
(
√√% &
	ParLevel1
√√& /
paramLevel1
√√0 ;
,
√√; <
List
√√= A
<
√√A B
int
√√B E
>
√√E F
removerHeadField
√√G W
)
√√W X
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
removerHeadField
≈≈  
!=
≈≈! #
null
≈≈$ (
)
≈≈( )
{
∆∆ 
if
«« 
(
«« 
removerHeadField
«« $
.
««$ %
Count
««% *
>
««+ ,
$num
««- .
)
««. /
{
»» 
foreach
…… 
(
…… 
var
……  
idHeadField
……! ,
in
……- /
removerHeadField
……0 @
)
……@ A
{
   
var
ÀÀ 
objetos
ÀÀ #
=
ÀÀ$ %
db
ÀÀ& (
.
ÀÀ( )#
ParLevel1XHeaderField
ÀÀ) >
.
ÀÀ> ?
Where
ÀÀ? D
(
ÀÀD E
r
ÀÀE F
=>
ÀÀG I
r
ÀÀJ K
.
ÀÀK L
Id
ÀÀL N
==
ÀÀO Q
idHeadField
ÀÀR ]
)
ÀÀ] ^
;
ÀÀ^ _
foreach
ÕÕ 
(
ÕÕ  !
var
ÕÕ! $!
marcarObjetoInativo
ÕÕ% 8
in
ÕÕ9 ;
objetos
ÕÕ< C
)
ÕÕC D
{
ŒŒ !
marcarObjetoInativo
œœ /
.
œœ/ 0
IsActive
œœ0 8
=
œœ9 :
false
œœ; @
;
œœ@ A
Guard
–– !
.
––! "

verifyDate
––" ,
(
––, -!
marcarObjetoInativo
––- @
,
––@ A
$str
––B M
)
––M N
;
––N O
db
—— 
.
—— #
ParLevel1XHeaderField
—— 4
.
——4 5
Attach
——5 ;
(
——; <!
marcarObjetoInativo
——< O
)
——O P
;
——P Q
db
““ 
.
““ 
Entry
““ $
(
““$ %!
marcarObjetoInativo
““% 8
)
““8 9
.
““9 :
State
““: ?
=
““@ A
EntityState
““B M
.
““M N
Modified
““N V
;
““V W
db
”” 
.
”” 
Entry
”” $
(
””$ %!
marcarObjetoInativo
””% 8
)
””8 9
.
””9 :
Property
””: B
(
””B C
e
””C D
=>
””E G
e
””H I
.
””I J
AddDate
””J Q
)
””Q R
.
””R S

IsModified
””S ]
=
””^ _
false
””` e
;
””e f
db
‘‘ 
.
‘‘ 
SaveChanges
‘‘ *
(
‘‘* +
)
‘‘+ ,
;
‘‘, -
}
’’ 
}
◊◊ 
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
private
‹‹ 
void
‹‹ 
InativaCluster
‹‹ #
(
‹‹# $
	ParLevel1
‹‹$ -
paramLevel1
‹‹. 9
,
‹‹9 :
List
‹‹; ?
<
‹‹? @
int
‹‹@ C
>
‹‹C D
removerCluster
‹‹E S
)
‹‹S T
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
removerCluster
ﬁﬁ 
!=
ﬁﬁ !
null
ﬁﬁ" &
)
ﬁﬁ& '
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
removerCluster
‡‡ "
.
‡‡" #
Count
‡‡# (
>
‡‡) *
$num
‡‡+ ,
)
‡‡, -
{
·· 
foreach
‚‚ 
(
‚‚ 
var
‚‚  
	idCluster
‚‚! *
in
‚‚+ -
removerCluster
‚‚. <
)
‚‚< =
{
„„ 
var
‰‰ 
objetos
‰‰ #
=
‰‰$ %
db
‰‰& (
.
‰‰( )
ParLevel1XCluster
‰‰) :
.
‰‰: ;
Where
‰‰; @
(
‰‰@ A
r
‰‰A B
=>
‰‰C E
r
‰‰F G
.
‰‰G H
Id
‰‰H J
==
‰‰K M
	idCluster
‰‰N W
)
‰‰W X
;
‰‰X Y
foreach
ÊÊ 
(
ÊÊ  !
var
ÊÊ! $!
marcarObjetoInativo
ÊÊ% 8
in
ÊÊ9 ;
objetos
ÊÊ< C
)
ÊÊC D
{
ÁÁ !
marcarObjetoInativo
ËË /
.
ËË/ 0
IsActive
ËË0 8
=
ËË9 :
false
ËË; @
;
ËË@ A
Guard
ÈÈ !
.
ÈÈ! "

verifyDate
ÈÈ" ,
(
ÈÈ, -!
marcarObjetoInativo
ÈÈ- @
,
ÈÈ@ A
$str
ÈÈB M
)
ÈÈM N
;
ÈÈN O
db
ÍÍ 
.
ÍÍ 
ParLevel1XCluster
ÍÍ 0
.
ÍÍ0 1
Attach
ÍÍ1 7
(
ÍÍ7 8!
marcarObjetoInativo
ÍÍ8 K
)
ÍÍK L
;
ÍÍL M
db
ÎÎ 
.
ÎÎ 
Entry
ÎÎ $
(
ÎÎ$ %!
marcarObjetoInativo
ÎÎ% 8
)
ÎÎ8 9
.
ÎÎ9 :
State
ÎÎ: ?
=
ÎÎ@ A
EntityState
ÎÎB M
.
ÎÎM N
Modified
ÎÎN V
;
ÎÎV W
db
ÏÏ 
.
ÏÏ 
Entry
ÏÏ $
(
ÏÏ$ %!
marcarObjetoInativo
ÏÏ% 8
)
ÏÏ8 9
.
ÏÏ9 :
Property
ÏÏ: B
(
ÏÏB C
e
ÏÏC D
=>
ÏÏE G
e
ÏÏH I
.
ÏÏI J
AddDate
ÏÏJ Q
)
ÏÏQ R
.
ÏÏR S

IsModified
ÏÏS ]
=
ÏÏ^ _
false
ÏÏ` e
;
ÏÏe f
db
ÌÌ 
.
ÌÌ 
SaveChanges
ÌÌ *
(
ÌÌ* +
)
ÌÌ+ ,
;
ÌÌ, -
}
ÓÓ 
}
 
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
private
ıı 
void
ıı !
InativaReincidencia
ıı (
(
ıı( )
List
ıı) -
<
ıı- .
int
ıı. 1
>
ıı1 2 
removeReincidencia
ıı3 E
)
ııE F
{
ˆˆ 	
if
˜˜ 
(
˜˜  
removeReincidencia
˜˜ "
!=
˜˜# %
null
˜˜& *
)
˜˜* +
{
¯¯ 
if
˘˘ 
(
˘˘  
removeReincidencia
˘˘ &
.
˘˘& '
Count
˘˘' ,
>
˘˘- .
$num
˘˘/ 0
)
˘˘0 1
{
˙˙ 
foreach
˚˚ 
(
˚˚ 
var
˚˚  
idReincidencia
˚˚! /
in
˚˚0 2 
removeReincidencia
˚˚3 E
)
˚˚E F
{
¸¸ 
var
˝˝ 
objetos
˝˝ #
=
˝˝$ %
db
˝˝& (
.
˝˝( )

ParRelapse
˝˝) 3
.
˝˝3 4
Where
˝˝4 9
(
˝˝9 :
r
˝˝: ;
=>
˝˝< >
r
˝˝? @
.
˝˝@ A
Id
˝˝A C
==
˝˝D F
idReincidencia
˝˝G U
)
˝˝U V
;
˝˝V W
foreach
ˇˇ 
(
ˇˇ  !
var
ˇˇ! $!
marcarObjetoInativo
ˇˇ% 8
in
ˇˇ9 ;
objetos
ˇˇ< C
)
ˇˇC D
{
ÄÄ !
marcarObjetoInativo
ÅÅ /
.
ÅÅ/ 0
IsActive
ÅÅ0 8
=
ÅÅ9 :
false
ÅÅ; @
;
ÅÅ@ A
Guard
ÇÇ !
.
ÇÇ! "

verifyDate
ÇÇ" ,
(
ÇÇ, -!
marcarObjetoInativo
ÇÇ- @
,
ÇÇ@ A
$str
ÇÇB M
)
ÇÇM N
;
ÇÇN O
db
ÉÉ 
.
ÉÉ 

ParRelapse
ÉÉ )
.
ÉÉ) *
Attach
ÉÉ* 0
(
ÉÉ0 1!
marcarObjetoInativo
ÉÉ1 D
)
ÉÉD E
;
ÉÉE F
db
ÑÑ 
.
ÑÑ 
Entry
ÑÑ $
(
ÑÑ$ %!
marcarObjetoInativo
ÑÑ% 8
)
ÑÑ8 9
.
ÑÑ9 :
State
ÑÑ: ?
=
ÑÑ@ A
EntityState
ÑÑB M
.
ÑÑM N
Modified
ÑÑN V
;
ÑÑV W
db
ÖÖ 
.
ÖÖ 
Entry
ÖÖ $
(
ÖÖ$ %!
marcarObjetoInativo
ÖÖ% 8
)
ÖÖ8 9
.
ÖÖ9 :
Property
ÖÖ: B
(
ÖÖB C
e
ÖÖC D
=>
ÖÖE G
e
ÖÖH I
.
ÖÖI J
AddDate
ÖÖJ Q
)
ÖÖQ R
.
ÖÖR S

IsModified
ÖÖS ]
=
ÖÖ^ _
false
ÖÖ` e
;
ÖÖe f
db
ÜÜ 
.
ÜÜ 
SaveChanges
ÜÜ *
(
ÜÜ* +
)
ÜÜ+ ,
;
ÜÜ, -
}
áá 
}
ââ 
}
ää 
}
ãã 
}
åå 	
public
êê 
void
êê #
RemoveParLevel03Group
êê )
(
êê) *
int
êê* -
Id
êê. 0
)
êê0 1
{
ëë 	
var
íí 
parLevel3Group
íí 
=
íí  
db
íí! #
.
íí# $
ParLevel3Group
íí$ 2
.
íí2 3
Where
íí3 8
(
íí8 9
r
íí9 :
=>
íí; =
r
íí> ?
.
íí? @
Id
íí@ B
==
ííC E
Id
ííF H
)
ííH I
.
ííI J
FirstOrDefault
ííJ X
(
ííX Y
)
ííY Z
;
ííZ [
if
ìì 
(
ìì 
parLevel3Group
ìì 
!=
ìì !
null
ìì" &
)
ìì& '
{
îî 
parLevel3Group
ïï 
.
ïï 
IsActive
ïï '
=
ïï( )
false
ïï* /
;
ïï/ 0%
AddUpdateParLevel3Group
ññ '
(
ññ' (
parLevel3Group
ññ( 6
,
ññ6 7
parLevel3Group
ññ8 F
.
ññF G
ParLevel2_Id
ññG S
)
ññS T
;
ññT U
}
óó 
}
òò 	
public
öö 
void
öö 
SaveParLocal
öö  
(
öö  !
ParLocal
öö! )

paramLocal
öö* 4
)
öö4 5
{
õõ 	
if
úú 
(
úú 

paramLocal
úú 
.
úú 
Id
úú 
==
úú  
$num
úú! "
)
úú" #
{
ùù 
db
ûû 
.
ûû 
ParLocal
ûû 
.
ûû 
Add
ûû 
(
ûû  

paramLocal
ûû  *
)
ûû* +
;
ûû+ ,
}
üü 
else
†† 
{
°° 
Guard
¢¢ 
.
¢¢ 

verifyDate
¢¢  
(
¢¢  !

paramLocal
¢¢! +
,
¢¢+ ,
$str
¢¢- 8
)
¢¢8 9
;
¢¢9 :
db
££ 
.
££ 
ParLocal
££ 
.
££ 
Attach
££ "
(
££" #

paramLocal
££# -
)
££- .
;
££. /
db
§§ 
.
§§ 
Entry
§§ 
(
§§ 

paramLocal
§§ #
)
§§# $
.
§§$ %
State
§§% *
=
§§+ ,
EntityState
§§- 8
.
§§8 9
Modified
§§9 A
;
§§A B
db
•• 
.
•• 
Entry
•• 
(
•• 

paramLocal
•• #
)
••# $
.
••$ %
Property
••% -
(
••- .
e
••. /
=>
••0 2
e
••3 4
.
••4 5
AddDate
••5 <
)
••< =
.
••= >

IsModified
••> H
=
••I J
false
••K P
;
••P Q
}
¶¶ 
}
ßß 	
public
©© 
void
©© 
SaveParCounter
©© "
(
©©" #

ParCounter
©©# -
paramCounter
©©. :
)
©©: ;
{
™™ 	
if
´´ 
(
´´ 
paramCounter
´´ 
.
´´ 
Id
´´ 
==
´´  "
$num
´´# $
)
´´$ %
{
¨¨ 
db
≠≠ 
.
≠≠ 

ParCounter
≠≠ 
.
≠≠ 
Add
≠≠ !
(
≠≠! "
paramCounter
≠≠" .
)
≠≠. /
;
≠≠/ 0
}
ÆÆ 
else
ØØ 
{
∞∞ 
Guard
±± 
.
±± 

verifyDate
±±  
(
±±  !
paramCounter
±±! -
,
±±- .
$str
±±/ :
)
±±: ;
;
±±; <
db
≤≤ 
.
≤≤ 

ParCounter
≤≤ 
.
≤≤ 
Attach
≤≤ $
(
≤≤$ %
paramCounter
≤≤% 1
)
≤≤1 2
;
≤≤2 3
db
≥≥ 
.
≥≥ 
Entry
≥≥ 
(
≥≥ 
paramCounter
≥≥ %
)
≥≥% &
.
≥≥& '
State
≥≥' ,
=
≥≥- .
EntityState
≥≥/ :
.
≥≥: ;
Modified
≥≥; C
;
≥≥C D
db
¥¥ 
.
¥¥ 
Entry
¥¥ 
(
¥¥ 
paramCounter
¥¥ %
)
¥¥% &
.
¥¥& '
Property
¥¥' /
(
¥¥/ 0
e
¥¥0 1
=>
¥¥2 4
e
¥¥5 6
.
¥¥6 7
AddDate
¥¥7 >
)
¥¥> ?
.
¥¥? @

IsModified
¥¥@ J
=
¥¥K L
false
¥¥M R
;
¥¥R S
}
µµ 
}
∂∂ 	
public
∏∏ 
void
∏∏ "
SaveParCounterXLocal
∏∏ (
(
∏∏( )
ParCounterXLocal
∏∏) 9 
paramCounterXLocal
∏∏: L
)
∏∏L M
{
ππ 	
if
∫∫ 
(
∫∫  
paramCounterXLocal
∫∫ "
.
∫∫" #
Id
∫∫# %
==
∫∫& (
$num
∫∫) *
)
∫∫* +
{
ªª 
db
ºº 
.
ºº 
ParCounterXLocal
ºº #
.
ºº# $
Add
ºº$ '
(
ºº' ( 
paramCounterXLocal
ºº( :
)
ºº: ;
;
ºº; <
}
ΩΩ 
else
ææ 
{
øø 
Guard
¿¿ 
.
¿¿ 

verifyDate
¿¿  
(
¿¿  ! 
paramCounterXLocal
¿¿! 3
,
¿¿3 4
$str
¿¿5 @
)
¿¿@ A
;
¿¿A B
db
¡¡ 
.
¡¡ 
ParCounterXLocal
¡¡ #
.
¡¡# $
Attach
¡¡$ *
(
¡¡* + 
paramCounterXLocal
¡¡+ =
)
¡¡= >
;
¡¡> ?
db
¬¬ 
.
¬¬ 
Entry
¬¬ 
(
¬¬  
paramCounterXLocal
¬¬ +
)
¬¬+ ,
.
¬¬, -
State
¬¬- 2
=
¬¬3 4
EntityState
¬¬5 @
.
¬¬@ A
Modified
¬¬A I
;
¬¬I J
db
√√ 
.
√√ 
Entry
√√ 
(
√√  
paramCounterXLocal
√√ +
)
√√+ ,
.
√√, -
Property
√√- 5
(
√√5 6
e
√√6 7
=>
√√8 :
e
√√; <
.
√√< =
AddDate
√√= D
)
√√D E
.
√√E F

IsModified
√√F P
=
√√Q R
false
√√S X
;
√√X Y
}
ƒƒ 
}
≈≈ 	
public
«« 
void
«« 
SaveParRelapse
«« "
(
««" #

ParRelapse
««# -
paramRelapse
««. :
)
««: ;
{
»» 	
if
…… 
(
…… 
paramRelapse
…… 
.
…… 
Id
…… 
==
……  "
$num
……# $
)
……$ %
{
   
db
ÀÀ 
.
ÀÀ 

ParRelapse
ÀÀ 
.
ÀÀ 
Add
ÀÀ !
(
ÀÀ! "
paramRelapse
ÀÀ" .
)
ÀÀ. /
;
ÀÀ/ 0
}
ÃÃ 
else
ÕÕ 
{
ŒŒ 
Guard
œœ 
.
œœ 

verifyDate
œœ  
(
œœ  !
paramRelapse
œœ! -
,
œœ- .
$str
œœ/ :
)
œœ: ;
;
œœ; <
db
–– 
.
–– 

ParRelapse
–– 
.
–– 
Attach
–– $
(
––$ %
paramRelapse
––% 1
)
––1 2
;
––2 3
db
—— 
.
—— 
Entry
—— 
(
—— 
paramRelapse
—— %
)
——% &
.
——& '
State
——' ,
=
——- .
EntityState
——/ :
.
——: ;
Modified
——; C
;
——C D
db
““ 
.
““ 
Entry
““ 
(
““ 
paramRelapse
““ %
)
““% &
.
““& '
Property
““' /
(
““/ 0
e
““0 1
=>
““2 4
e
““5 6
.
““6 7
AddDate
““7 >
)
““> ?
.
““? @

IsModified
““@ J
=
““K L
false
““M R
;
““R S
}
‘‘ 
}
’’ 	
public
◊◊ 
void
◊◊ &
SaveParNotConformityRule
◊◊ ,
(
◊◊, -"
ParNotConformityRule
◊◊- A$
paramNotConformityRule
◊◊B X
)
◊◊X Y
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ $
paramNotConformityRule
ŸŸ &
.
ŸŸ& '
Id
ŸŸ' )
==
ŸŸ* ,
$num
ŸŸ- .
)
ŸŸ. /
{
⁄⁄ 
db
€€ 
.
€€ "
ParNotConformityRule
€€ '
.
€€' (
Add
€€( +
(
€€+ ,$
paramNotConformityRule
€€, B
)
€€B C
;
€€C D
}
‹‹ 
else
›› 
{
ﬁﬁ 
Guard
ﬂﬂ 
.
ﬂﬂ 

verifyDate
ﬂﬂ  
(
ﬂﬂ  !$
paramNotConformityRule
ﬂﬂ! 7
,
ﬂﬂ7 8
$str
ﬂﬂ9 D
)
ﬂﬂD E
;
ﬂﬂE F
db
‡‡ 
.
‡‡ "
ParNotConformityRule
‡‡ '
.
‡‡' (
Attach
‡‡( .
(
‡‡. /$
paramNotConformityRule
‡‡/ E
)
‡‡E F
;
‡‡F G
db
·· 
.
·· 
Entry
·· 
(
·· $
paramNotConformityRule
·· /
)
··/ 0
.
··0 1
State
··1 6
=
··7 8
EntityState
··9 D
.
··D E
Modified
··E M
;
··M N
db
‚‚ 
.
‚‚ 
Entry
‚‚ 
(
‚‚ $
paramNotConformityRule
‚‚ /
)
‚‚/ 0
.
‚‚0 1
Property
‚‚1 9
(
‚‚9 :
e
‚‚: ;
=>
‚‚< >
e
‚‚? @
.
‚‚@ A
AddDate
‚‚A H
)
‚‚H I
.
‚‚I J

IsModified
‚‚J T
=
‚‚U V
false
‚‚W \
;
‚‚\ ]
}
„„ 
}
‰‰ 	
public
ÊÊ 
void
ÊÊ ,
SaveParNotConformityRuleXLevel
ÊÊ 2
(
ÊÊ2 3(
ParNotConformityRuleXLevel
ÊÊ3 M*
paramNotConformityRuleXLevel
ÊÊN j
)
ÊÊj k
{
ÁÁ 	
if
ËË 
(
ËË *
paramNotConformityRuleXLevel
ËË ,
.
ËË, -
Id
ËË- /
==
ËË0 2
$num
ËË3 4
)
ËË4 5
{
ÈÈ 
db
ÍÍ 
.
ÍÍ (
ParNotConformityRuleXLevel
ÍÍ -
.
ÍÍ- .
Add
ÍÍ. 1
(
ÍÍ1 2*
paramNotConformityRuleXLevel
ÍÍ2 N
)
ÍÍN O
;
ÍÍO P
}
ÎÎ 
else
ÏÏ 
{
ÌÌ 
Guard
ÓÓ 
.
ÓÓ 

verifyDate
ÓÓ  
(
ÓÓ  !*
paramNotConformityRuleXLevel
ÓÓ! =
,
ÓÓ= >
$str
ÓÓ? J
)
ÓÓJ K
;
ÓÓK L
db
ÔÔ 
.
ÔÔ (
ParNotConformityRuleXLevel
ÔÔ -
.
ÔÔ- .
Attach
ÔÔ. 4
(
ÔÔ4 5*
paramNotConformityRuleXLevel
ÔÔ5 Q
)
ÔÔQ R
;
ÔÔR S
db
 
.
 
Entry
 
(
 *
paramNotConformityRuleXLevel
 5
)
5 6
.
6 7
State
7 <
=
= >
EntityState
? J
.
J K
Modified
K S
;
S T
db
ÒÒ 
.
ÒÒ 
Entry
ÒÒ 
(
ÒÒ *
paramNotConformityRuleXLevel
ÒÒ 5
)
ÒÒ5 6
.
ÒÒ6 7
Property
ÒÒ7 ?
(
ÒÒ? @
e
ÒÒ@ A
=>
ÒÒB D
e
ÒÒE F
.
ÒÒF G
AddDate
ÒÒG N
)
ÒÒN O
.
ÒÒO P

IsModified
ÒÒP Z
=
ÒÒ[ \
false
ÒÒ] b
;
ÒÒb c
}
ÚÚ 
}
ÛÛ 	
public
¯¯ 
void
¯¯ &
AddUpdateParLevel3Level2
¯¯ ,
(
¯¯, -
List
¯¯- 1
<
¯¯1 2
ParLevel3Level2
¯¯2 A
>
¯¯A B"
paramParLevel3Level2
¯¯C W
,
¯¯W X
int
¯¯Y \
?
¯¯\ ]
level1Id
¯¯^ f
=
¯¯g h
null
¯¯i m
)
¯¯m n
{
˘˘ 	
db
˙˙ 
.
˙˙ 
Configuration
˙˙ 
.
˙˙ #
ValidateOnSaveEnabled
˙˙ 2
=
˙˙3 4
false
˙˙5 :
;
˙˙: ;
if
˚˚ 
(
˚˚ 
level1Id
˚˚ 
.
˚˚ 
IsNull
˚˚ 
(
˚˚  
)
˚˚  !
)
˚˚! "
throw
¸¸ 
new
¸¸ 
	Exception
¸¸ #
(
¸¸# $
$str
¸¸$ ~
)
¸¸~ 
;¸¸ Ä
if
˛˛ 
(
˛˛ "
paramParLevel3Level2
˛˛ $
.
˛˛$ %
Any
˛˛% (
(
˛˛( )
r
˛˛) *
=>
˛˛+ -
r
˛˛. /
.
˛˛/ 0
Id
˛˛0 2
==
˛˛3 5
$num
˛˛6 7
)
˛˛7 8
)
˛˛8 9
{
ˇˇ 
db
ÄÄ 
.
ÄÄ 
ParLevel3Level2
ÄÄ "
.
ÄÄ" #
AddRange
ÄÄ# +
(
ÄÄ+ ,"
paramParLevel3Level2
ÄÄ, @
.
ÄÄ@ A
Where
ÄÄA F
(
ÄÄF G
r
ÄÄG H
=>
ÄÄI K
r
ÄÄL M
.
ÄÄM N
Id
ÄÄN P
==
ÄÄQ S
$num
ÄÄT U
)
ÄÄU V
)
ÄÄV W
;
ÄÄW X
db
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ 
(
ÅÅ 
)
ÅÅ  
;
ÅÅ  !
foreach
ÇÇ 
(
ÇÇ 
var
ÇÇ 
i
ÇÇ 
in
ÇÇ !"
paramParLevel3Level2
ÇÇ" 6
)
ÇÇ6 7
{
ÉÉ 
db
ÑÑ 
.
ÑÑ #
ParLevel3Level2Level1
ÑÑ ,
.
ÑÑ, -
Add
ÑÑ- 0
(
ÑÑ0 1
new
ÑÑ1 4#
ParLevel3Level2Level1
ÑÑ5 J
(
ÑÑJ K
)
ÑÑK L
{
ÑÑM N
ParCompany_Id
ÑÑO \
=
ÑÑ] ^
i
ÑÑ_ `
.
ÑÑ` a
ParCompany_Id
ÑÑa n
,
ÑÑn o
ParLevel1_Id
ÑÑp |
=
ÑÑ} ~
level1IdÑÑ á
.ÑÑá à!
GetValueOrDefaultÑÑà ô
(ÑÑô ö
)ÑÑö õ
,ÑÑõ ú"
ParLevel3Level2_IdÑÑù Ø
=ÑÑ∞ ±
iÑÑ≤ ≥
.ÑÑ≥ ¥
IdÑÑ¥ ∂
,ÑÑ∂ ∑
ActiveÑÑ∏ æ
=ÑÑø ¿
trueÑÑ¡ ≈
,ÑÑ≈ ∆
AddDateÑÑ« Œ
=ÑÑœ –
DateTimeÑÑ— Ÿ
.ÑÑŸ ⁄
NowÑÑ⁄ ›
}ÑÑﬁ ﬂ
)ÑÑﬂ ‡
;ÑÑ‡ ·
db
ÖÖ 
.
ÖÖ 
ParLevel2Level1
ÖÖ &
.
ÖÖ& '
Add
ÖÖ' *
(
ÖÖ* +
new
ÖÖ+ .
ParLevel2Level1
ÖÖ/ >
(
ÖÖ> ?
)
ÖÖ? @
{
ÖÖA B
ParCompany_Id
ÖÖC P
=
ÖÖQ R
i
ÖÖS T
.
ÖÖT U
ParCompany_Id
ÖÖU b
,
ÖÖb c
ParLevel2_Id
ÖÖd p
=
ÖÖq r
i
ÖÖs t
.
ÖÖt u
ParLevel2_IdÖÖu Å
,ÖÖÅ Ç
ParLevel1_IdÖÖÉ è
=ÖÖê ë
level1IdÖÖí ö
.ÖÖö õ!
GetValueOrDefaultÖÖõ ¨
(ÖÖ¨ ≠
)ÖÖ≠ Æ
,ÖÖÆ Ø
IsActiveÖÖ∞ ∏
=ÖÖπ ∫
trueÖÖª ø
,ÖÖø ¿
AddDateÖÖ¡ »
=ÖÖ…  
DateTimeÖÖÀ ”
.ÖÖ” ‘
NowÖÖ‘ ◊
}ÖÖÿ Ÿ
)ÖÖŸ ⁄
;ÖÖ⁄ €
}
ÜÜ 
db
áá 
.
áá 
SaveChanges
áá 
(
áá 
)
áá  
;
áá  !
}
àà 
else
ââ 
{
ää 
foreach
ãã 
(
ãã 
var
ãã 
i
ãã 
in
ãã !"
paramParLevel3Level2
ãã" 6
)
ãã6 7
{
åå 
Guard
çç 
.
çç 

verifyDate
çç $
(
çç$ %
i
çç% &
,
çç& '
$str
çç( 3
)
çç3 4
;
çç4 5
db
éé 
.
éé 
ParLevel3Level2
éé &
.
éé& '
Attach
éé' -
(
éé- .
i
éé. /
)
éé/ 0
;
éé0 1
db
èè 
.
èè 
Entry
èè 
(
èè 
i
èè 
)
èè 
.
èè  
State
èè  %
=
èè& '
EntityState
èè( 3
.
èè3 4
Modified
èè4 <
;
èè< =
db
êê 
.
êê 
Entry
êê 
(
êê 
i
êê 
)
êê 
.
êê  
Property
êê  (
(
êê( )
e
êê) *
=>
êê+ -
e
êê. /
.
êê/ 0
AddDate
êê0 7
)
êê7 8
.
êê8 9

IsModified
êê9 C
=
êêD E
false
êêF K
;
êêK L
if
íí 
(
íí 
i
íí 
.
íí 
IsActive
íí "
==
íí# %
false
íí& +
)
íí+ ,
{
ìì 
var
îî %
inativarParLevel3Level2
îî 3
=
îî4 5
db
îî6 8
.
îî8 9
ParLevel3Level2
îî9 H
.
îîH I
Include
îîI P
(
îîP Q
$str
îîQ h
)
îîh i
.
îîi j
FirstOrDefault
îîj x
(
îîx y
r
îîy z
=>
îî{ }
r
îî~ 
.îî Ä
IdîîÄ Ç
==îîÉ Ö
iîîÜ á
.îîá à
Idîîà ä
)îîä ã
.îîã å%
ParLevel3Level2Level1îîå °
.îî° ¢
FirstOrDefaultîî¢ ∞
(îî∞ ±
rîî± ≤
=>îî≥ µ
rîî∂ ∑
.îî∑ ∏
ParCompany_Idîî∏ ≈
==îî∆ »
iîî…  
.îî  À
ParCompany_IdîîÀ ÿ
)îîÿ Ÿ
;îîŸ ⁄
if
ïï 
(
ïï %
inativarParLevel3Level2
ïï 3
.
ïï3 4
	IsNotNull
ïï4 =
(
ïï= >
)
ïï> ?
)
ïï? @
{
ññ %
inativarParLevel3Level2
óó 3
.
óó3 4
Active
óó4 :
=
óó; <
false
óó= B
;
óóB C
Guard
òò !
.
òò! "

verifyDate
òò" ,
(
òò, -%
inativarParLevel3Level2
òò- D
,
òòD E
$str
òòF Q
)
òòQ R
;
òòR S
db
ôô 
.
ôô #
ParLevel3Level2Level1
ôô 4
.
ôô4 5
Attach
ôô5 ;
(
ôô; <%
inativarParLevel3Level2
ôô< S
)
ôôS T
;
ôôT U
db
öö 
.
öö 
Entry
öö $
(
öö$ %%
inativarParLevel3Level2
öö% <
)
öö< =
.
öö= >
State
öö> C
=
ööD E
EntityState
ööF Q
.
ööQ R
Modified
ööR Z
;
ööZ [
db
õõ 
.
õõ 
Entry
õõ $
(
õõ$ %%
inativarParLevel3Level2
õõ% <
)
õõ< =
.
õõ= >
Property
õõ> F
(
õõF G
e
õõG H
=>
õõI K
e
õõL M
.
õõM N
AddDate
õõN U
)
õõU V
.
õõV W

IsModified
õõW a
=
õõb c
false
õõd i
;
õõi j
var
ùù %
inativarParLevel2Level1
ùù  7
=
ùù8 9
db
ùù: <
.
ùù< =
ParLevel2Level1
ùù= L
.
ùùL M
FirstOrDefault
ùùM [
(
ùù[ \
r
ùù\ ]
=>
ùù^ `
r
ùùa b
.
ùùb c
ParCompany_Id
ùùc p
==
ùùq s
i
ùùt u
.
ùùu v
ParCompany_Idùùv É
&&ùùÑ Ü
rùùá à
.ùùà â
ParLevel2_Idùùâ ï
==ùùñ ò
iùùô ö
.ùùö õ
ParLevel2_Idùùõ ß
&&ùù® ™
rùù´ ¨
.ùù¨ ≠
ParLevel1_Idùù≠ π
==ùù∫ º'
inativarParLevel3Level2ùùΩ ‘
.ùù‘ ’
ParLevel1_Idùù’ ·
)ùù· ‚
;ùù‚ „
if
ûû 
(
ûû  %
inativarParLevel2Level1
ûû  7
.
ûû7 8
	IsNotNull
ûû8 A
(
ûûA B
)
ûûB C
)
ûûC D
{
üü %
inativarParLevel2Level1
††  7
.
††7 8
IsActive
††8 @
=
††A B
false
††C H
;
††H I
Guard
°°  %
.
°°% &

verifyDate
°°& 0
(
°°0 1%
inativarParLevel2Level1
°°1 H
,
°°H I
$str
°°J U
)
°°U V
;
°°V W
db
¢¢  "
.
¢¢" #
ParLevel2Level1
¢¢# 2
.
¢¢2 3
Attach
¢¢3 9
(
¢¢9 :%
inativarParLevel2Level1
¢¢: Q
)
¢¢Q R
;
¢¢R S
db
££  "
.
££" #
Entry
££# (
(
££( )%
inativarParLevel2Level1
££) @
)
££@ A
.
££A B
State
££B G
=
££H I
EntityState
££J U
.
££U V
Modified
££V ^
;
££^ _
db
§§  "
.
§§" #
Entry
§§# (
(
§§( )%
inativarParLevel2Level1
§§) @
)
§§@ A
.
§§A B
Property
§§B J
(
§§J K
e
§§K L
=>
§§M O
e
§§P Q
.
§§Q R
AddDate
§§R Y
)
§§Y Z
.
§§Z [

IsModified
§§[ e
=
§§f g
false
§§h m
;
§§m n
}
•• 
}
¶¶ 
db
®® 
.
®® 
SaveChanges
®® &
(
®®& '
)
®®' (
;
®®( )
}
©© 
}
¨¨ 
}
≠≠ 
db
∞∞ 
.
∞∞ 
SaveChanges
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
}
≤≤ 	
public
¥¥ 
void
¥¥ !
SaveParLevel3Level2
¥¥ '
(
¥¥' (
ParLevel3Level2
¥¥( 7
paramLevel3Level2
¥¥8 I
)
¥¥I J
{
µµ 	
using
∂∂ 
(
∂∂ 
var
∂∂ 
ts
∂∂ 
=
∂∂ 
db
∂∂ 
.
∂∂ 
Database
∂∂ '
.
∂∂' (
BeginTransaction
∂∂( 8
(
∂∂8 9
IsolationLevel
∂∂9 G
.
∂∂G H
ReadUncommitted
∂∂H W
)
∂∂W X
)
∂∂X Y
{
∑∑ 
var
∏∏ 
save
∏∏ 
=
∏∏ 
new
∏∏ 
List
∏∏ #
<
∏∏# $
ParLevel3Level2
∏∏$ 3
>
∏∏3 4
(
∏∏4 5
)
∏∏5 6
;
∏∏6 7
save
ππ 
.
ππ 
Add
ππ 
(
ππ 
paramLevel3Level2
ππ *
)
ππ* +
;
ππ+ ,&
AddUpdateParLevel3Level2
∫∫ (
(
∫∫( )
save
∫∫) -
)
∫∫- .
;
∫∫. /
db
ªª 
.
ªª 
SaveChanges
ªª 
(
ªª 
)
ªª  
;
ªª  !
ts
ºº 
.
ºº 
Commit
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 
}
ææ 	
public
¿¿ #
ParLevel2XHeaderField
¿¿ $!
SaveParHeaderLevel2
¿¿% 8
(
¿¿8 9#
ParLevel2XHeaderField
¿¿9 N"
parLevel2HeaderField
¿¿O c
)
¿¿c d
{
¡¡ 	
using
¬¬ 
(
¬¬ 
var
¬¬ 
ts
¬¬ 
=
¬¬ 
db
¬¬ 
.
¬¬ 
Database
¬¬ '
.
¬¬' (
BeginTransaction
¬¬( 8
(
¬¬8 9
IsolationLevel
¬¬9 G
.
¬¬G H
ReadUncommitted
¬¬H W
)
¬¬W X
)
¬¬X Y
{
√√ 
if
ƒƒ 
(
ƒƒ "
parLevel2HeaderField
ƒƒ (
.
ƒƒ( )
Id
ƒƒ) +
==
ƒƒ, .
$num
ƒƒ/ 0
)
ƒƒ0 1
{
≈≈ "
parLevel2HeaderField
∆∆ (
=
∆∆) *
db
∆∆+ -
.
∆∆- .#
ParLevel2XHeaderField
∆∆. C
.
∆∆C D
Add
∆∆D G
(
∆∆G H"
parLevel2HeaderField
∆∆H \
)
∆∆\ ]
;
∆∆] ^
}
«« 
else
»» 
{
…… "
parLevel2HeaderField
   (
.
  ( )
IsActive
  ) 1
=
  2 3
false
  4 9
;
  9 :
Guard
ÀÀ 
.
ÀÀ 

verifyDate
ÀÀ $
(
ÀÀ$ %"
parLevel2HeaderField
ÀÀ% 9
,
ÀÀ9 :
$str
ÀÀ; F
)
ÀÀF G
;
ÀÀG H
db
ÃÃ 
.
ÃÃ #
ParLevel2XHeaderField
ÃÃ ,
.
ÃÃ, -
Attach
ÃÃ- 3
(
ÃÃ3 4"
parLevel2HeaderField
ÃÃ4 H
)
ÃÃH I
;
ÃÃI J
db
ÕÕ 
.
ÕÕ 
Entry
ÕÕ 
(
ÕÕ "
parLevel2HeaderField
ÕÕ 1
)
ÕÕ1 2
.
ÕÕ2 3
State
ÕÕ3 8
=
ÕÕ9 :
EntityState
ÕÕ; F
.
ÕÕF G
Modified
ÕÕG O
;
ÕÕO P
db
ŒŒ 
.
ŒŒ 
Entry
ŒŒ 
(
ŒŒ "
parLevel2HeaderField
ŒŒ 1
)
ŒŒ1 2
.
ŒŒ2 3
Property
ŒŒ3 ;
(
ŒŒ; <
e
ŒŒ< =
=>
ŒŒ> @
e
ŒŒA B
.
ŒŒB C
AddDate
ŒŒC J
)
ŒŒJ K
.
ŒŒK L

IsModified
ŒŒL V
=
ŒŒW X
false
ŒŒY ^
;
ŒŒ^ _
}
œœ 
db
–– 
.
–– 
SaveChanges
–– 
(
–– 
)
––  
;
––  !
ts
—— 
.
—— 
Commit
—— 
(
—— 
)
—— 
;
—— 
}
““ 
return
”” "
parLevel2HeaderField
”” '
;
””' (
}
‘‘ 	
public
ÿÿ 
void
ÿÿ "
RemoveParLevel3Group
ÿÿ (
(
ÿÿ( )
ParLevel3Group
ÿÿ) 7
paramLevel03group
ÿÿ8 I
)
ÿÿI J
{
ŸŸ 	
Guard
⁄⁄ 
.
⁄⁄ 

verifyDate
⁄⁄ 
(
⁄⁄ 
paramLevel03group
⁄⁄ .
,
⁄⁄. /
$str
⁄⁄0 ;
)
⁄⁄; <
;
⁄⁄< =
db
€€ 
.
€€ 
ParLevel3Group
€€ 
.
€€ 
Attach
€€ $
(
€€$ %
paramLevel03group
€€% 6
)
€€6 7
;
€€7 8
db
‹‹ 
.
‹‹ 
Entry
‹‹ 
(
‹‹ 
paramLevel03group
‹‹ &
)
‹‹& '
.
‹‹' (
State
‹‹( -
=
‹‹. /
EntityState
‹‹0 ;
.
‹‹; <
Modified
‹‹< D
;
‹‹D E
db
›› 
.
›› 
Entry
›› 
(
›› 
paramLevel03group
›› &
)
››& '
.
››' (
Property
››( 0
(
››0 1
e
››1 2
=>
››3 5
e
››6 7
.
››7 8
AddDate
››8 ?
)
››? @
.
››@ A

IsModified
››A K
=
››L M
false
››N S
;
››S T
db
ﬂﬂ 
.
ﬂﬂ 
SaveChanges
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
‚‚ 
void
‚‚ 

ExecuteSql
‚‚ 
(
‚‚ 
string
‚‚ %
sql
‚‚& )
)
‚‚) *
{
„„ 	
db
‰‰ 
.
‰‰ 
Database
‰‰ 
.
‰‰ 
ExecuteSqlCommand
‰‰ )
(
‰‰) *
sql
‰‰* -
)
‰‰- .
;
‰‰. /
}
ÂÂ 	
public
ÁÁ 
void
ÁÁ 
SaveParCompany
ÁÁ "
(
ÁÁ" #

ParCompany
ÁÁ# -
paramCompany
ÁÁ. :
)
ÁÁ: ;
{
ËË 	
throw
ÈÈ 
new
ÈÈ %
NotImplementedException
ÈÈ -
(
ÈÈ- .
)
ÈÈ. /
;
ÈÈ/ 0
}
ÍÍ 	
}
ää 
}ãã ä
UC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\ParLevel3Repository.cs
	namespace 	
Data
 
. 
Repositories 
{ 
public 

class 
ParLevel3Repository $
:% & 
IParLevel3Repository' ;
{		 
	protected 
readonly 
SgqDbDevEntities +
db, .
;. /
public 
ParLevel3Repository "
(" #
SgqDbDevEntities# 3
Db4 6
)6 7
{ 	
db 
= 
Db 
; 
} 	
public 
List 
< 
ParLevel3Level2 #
># $$
GetLevel3VinculadoLevel2% =
(= >
int> A
idLevel1B J
)J K
{ 	
var 
query 
= 
string 
. 
Format %
(% &
$str	& Ú
,
Ú Û
idLevel1
Ù ¸
)
¸ ˝
;
˝ ˛
return   
db   
.   
Database   
.   
SqlQuery   '
<  ' (
ParLevel3Level2  ( 7
>  7 8
(  8 9
query  9 >
)  > ?
.  ? @
ToList  @ F
(  F G
)  G H
;  H I
}"" 	
}## 
}$$ æe
[C:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\RelatorioColetaRepository.cs
	namespace		 	
Data		
 
.		 
Repositories		 
{

 
public 

class %
RelatorioColetaRepository *
<* +
T+ ,
>, -
:. /
RepositoryBase0 >
<> ?
T? @
>@ A
,A B&
IRelatorioColetaRepositoryC ]
<] ^
T^ _
>_ `
wherea f
Tg h
:i j
classk p
{ 
public %
RelatorioColetaRepository (
(( )
SgqDbDevEntities) 9
Db: <
)< =
:> ?
base@ D
(D E
DbE G
)G H
{ 	
} 	
public 
IEnumerable 
< 
T 
> 
	GetByDate '
(' (!
DataCarrierFormulario( =
form> B
)B C
{ 	
throw++ 
new++ #
NotImplementedException++ -
(++- .
)++. /
;++/ 0
}-- 	
public33 
IEnumerable33 
<33 
CollectionLevel0233 ,
>33, -)
GetLastEntryCollectionLevel0233. K
(33K L
IEnumerable33L W
<33W X 
ConsolidationLevel0233X l
>33l m
cl233n q
,33q r"
DataCarrierFormulario	33s à
form
33â ç
)
33ç é
{44 	
IEnumerable55 
<55 
CollectionLevel0255 )
>55) *
lastResults55+ 6
;556 7
lastResults77 
=77 
db77 
.77 
CollectionLevel0277 .
.77. /
Where77/ 4
(774 5
r775 6
=>777 9
cl277: =
.77= >
Any77> A
(77A B
x77B C
=>77D F
x77G H
.77H I
Id77I K
==77L N
r77O P
.77P Q"
ConsolidationLevel02Id77Q g
)77g h
)77h i
;77i j
if99 
(99 
form99 
.99 
shift99 
>99 
$num99 
)99 
{:: 
lastResults;; 
=;; 
lastResults;; )
.;;) *
Where;;* /
(;;/ 0
r;;0 1
=>;;2 4
r;;5 6
.;;6 7
Shift;;7 <
==;;= ?
form;;@ D
.;;D E
shift;;E J
);;J K
;;;K L
}<< 
if>> 
(>> 
form>> 
.>> 
period>> 
>>> 
$num>> 
)>>  
{?? 
lastResults@@ 
=@@ 
lastResults@@ )
.@@) *
Where@@* /
(@@/ 0
r@@0 1
=>@@2 4
r@@5 6
.@@6 7
Period@@7 =
==@@> @
form@@A E
.@@E F
period@@F L
)@@L M
;@@M N
}AA 
ifCC 
(CC 
formCC 
.CC 
	auditorIdCC 
>CC  
$numCC! "
)CC" #
{DD 
lastResultsEE 
=EE 
lastResultsEE )
.EE) *
WhereEE* /
(EE/ 0
rEE0 1
=>EE2 4
rEE5 6
.EE6 7
	AuditorIdEE7 @
==EEA C
formEED H
.EEH I
	auditorIdEEI R
)EER S
;EES T
}FF 
returnHH 
lastResultsHH 
;HH 
}JJ 	
publicLL 
IEnumerableLL 
<LL 
CollectionLevel03LL ,
>LL, -)
GetLastEntryCollectionLevel03LL. K
(LLK L
IEnumerableLLL W
<LLW X
CollectionLevel02LLX i
>LLi j
cll2LLk o
,LLo p"
DataCarrierFormulario	LLq Ü
form
LLá ã
)
LLã å
{MM 	
varNN 
idsNN 
=NN 
newNN 
ListNN 
<NN 
intNN "
>NN" #
(NN# $
)NN$ %
;NN% &
foreachOO 
(OO 
varOO 
iOO 
inOO 
cll2OO "
)OO" #
idsPP 
.PP 
AddPP 
(PP 
iPP 
.PP 
IdPP 
)PP 
;PP 
varRR 
lastResultsRR 
=RR 
dbRR  
.RR  !
CollectionLevel03RR! 2
.RR2 3
WhereRR3 8
(RR8 9
rRR9 :
=>RR; =
idsRR> A
.RRA B
AnyRRB E
(RRE F
xRRF G
=>RRH J
xRRK L
==RRM O
rRRP Q
.RRQ R
CollectionLevel02IdRRR e
)RRe f
)RRf g
;RRg h
ifSS 
(SS 
formSS 
.SS 
hasErrosSS 
)SS 
{TT 
lastResultsUU 
=UU 
lastResultsUU )
.UU) *
WhereUU* /
(UU/ 0
rUU0 1
=>UU2 4
rUU5 6
.UU6 7
ValueUU7 <
>UU= >
$numUU? @
||UUA C
rUUD E
.UUE F
	ValueTextUUF O
.UUO P
LengthUUP V
>UUW X
$numUUY Z
)UUZ [
;UU[ \
}VV 
returnYY 
lastResultsYY 
;YY 
}ZZ 	
public\\ 
IEnumerable\\ 
<\\  
ConsolidationLevel02\\ /
>\\/ 0*
GetLastEntryConsildatedLevel02\\1 O
(\\O P
IEnumerable\\P [
<\\[ \ 
ConsolidationLevel01\\\ p
>\\p q
cl1\\r u
)\\u v
{]] 	
var^^ 
listResults^^ 
=^^ 
db^^  
.^^  ! 
ConsolidationLevel02^^! 5
.^^5 6
Where^^6 ;
(^^; <
r^^< =
=>^^> @
cl1^^A D
.^^D E
Any^^E H
(^^H I
x^^I J
=>^^K M
x^^N O
.^^O P
Id^^P R
==^^S U
r^^V W
.^^W X"
Level01ConsolidationId^^X n
)^^n o
)^^o p
;^^p q
return__ 
listResults__ 
;__ 
}`` 	
publicgg 
IEnumerablegg 
<gg  
ConsolidationLevel02gg /
>gg/ 0,
 GetEntryConsildatedLevel02ByDategg1 Q
(ggQ R!
DataCarrierFormularioggR g
formggh l
)ggl m
{hh 	
varii 
listResultsii 
=ii 
dbii  
.ii  ! 
ConsolidationLevel02ii! 5
.jj 
Wherejj 
(jj 
rjj 
=>jj 
DbFunctionsjj '
.jj' (
TruncateTimejj( 4
(jj4 5
rjj5 6
.jj6 7
AddDatejj7 >
)jj> ?
>=jj@ B
DbFunctionsjjC N
.jjN O
TruncateTimejjO [
(jj[ \
formjj\ `
.jj` a
_dataIniciojja l
)jjl m
&&kk 
DbFunctionskk *
.kk* +
TruncateTimekk+ 7
(kk7 8
rkk8 9
.kk9 :
AddDatekk: A
)kkA B
<=kkC E
DbFunctionskkF Q
.kkQ R
TruncateTimekkR ^
(kk^ _
formkk_ c
.kkc d
_dataFimkkd l
)kkl m
)kkm n
;kkn o
returnmm 
listResultsmm 
;mm 
}nn 	
publicqq 
IEnumerableqq 
<qq  
ConsolidationLevel01qq /
>qq/ 03
'GetEntryConsildatedLevel01ByDateAndUnitqq1 X
(qqX Y!
DataCarrierFormularioqqY n
formqqo s
)qqs t
{rr 	
IEnumerabless 
<ss  
ConsolidationLevel01ss ,
>ss, -
lastResultsss. 9
;ss9 :
lastResultstt 
=tt 
dbtt  
.tt  ! 
ConsolidationLevel01tt! 5
.tt5 6
Wherett6 ;
(tt; <
rtt< =
=>tt> @
DbFunctionsttA L
.ttL M
TruncateTimettM Y
(ttY Z
rttZ [
.tt[ \
AddDatett\ c
)ttc d
>=tte g
DbFunctionstth s
.tts t
TruncateTime	ttt Ä
(
ttÄ Å
form
ttÅ Ö
.
ttÖ Ü
_dataInicio
ttÜ ë
)
ttë í
&&uu 
DbFunctionsuu !
.uu! "
TruncateTimeuu" .
(uu. /
ruu/ 0
.uu0 1
AddDateuu1 8
)uu8 9
<=uu: <
DbFunctionsuu= H
.uuH I
TruncateTimeuuI U
(uuU V
formuuV Z
.uuZ [
_dataFimuu[ c
)uuc d
)uud e
;uue f
ifww 
(ww 
formww 
.ww 
unitIdww 
>ww 
$numww 
)ww  
lastResultsxx 
=xx 
lastResultsxx )
.xx) *
Wherexx* /
(xx/ 0
rxx0 1
=>xx2 4
rxx5 6
.xx6 7
UnitIdxx7 =
==xx> @
formxxA E
.xxE F
unitIdxxF L
)xxL M
;xxM N
ifzz 
(zz 
formzz 
.zz 
	auditorIdzz 
>zz  
$numzz! "
)zz" #
lastResults{{ 
={{ 
lastResults{{ )
.{{) *
Where{{* /
({{/ 0
r{{0 1
=>{{2 4
r{{5 6
.{{6 7 
ConsolidationLevel02{{7 K
.{{K L
Any{{L O
({{O P
cl2{{P S
=>{{S U
cl2{{U X
.{{X Y
CollectionLevel02{{Y j
.{{j k
Any{{k n
({{n o
cll2{{o s
=>{{s u
cll2{{u y
.{{y z
	AuditorId	{{z É
==
{{Ñ Ü
form
{{á ã
.
{{ã å
	auditorId
{{å ï
)
{{ï ñ
)
{{ñ ó
)
{{ó ò
;
{{ò ô
if}} 
(}} 
form}} 
.}} 
shift}} 
>}} 
$num}} 
)}} 
lastResults~~ 
=~~ 
lastResults~~ )
.~~) *
Where~~* /
(~~/ 0
r~~0 1
=>~~2 4
r~~5 6
.~~6 7 
ConsolidationLevel02~~7 K
.~~K L
Any~~L O
(~~O P
cl2~~P S
=>~~T V
cl2~~W Z
.~~Z [
CollectionLevel02~~[ l
.~~l m
Any~~m p
(~~p q
cll2~~q u
=>~~v x
cll2~~y }
.~~} ~
Shift	~~~ É
==
~~Ñ Ü
form
~~á ã
.
~~ã å
shift
~~å ë
)
~~ë í
)
~~í ì
)
~~ì î
;
~~î ï
if
ÄÄ 
(
ÄÄ 
form
ÄÄ 
.
ÄÄ 
period
ÄÄ 
>
ÄÄ 
$num
ÄÄ 
)
ÄÄ  
lastResults
ÅÅ 
=
ÅÅ 
lastResults
ÅÅ )
.
ÅÅ) *
Where
ÅÅ* /
(
ÅÅ/ 0
r
ÅÅ0 1
=>
ÅÅ2 4
r
ÅÅ5 6
.
ÅÅ6 7"
ConsolidationLevel02
ÅÅ7 K
.
ÅÅK L
Any
ÅÅL O
(
ÅÅO P
cl2
ÅÅP S
=>
ÅÅT V
cl2
ÅÅW Z
.
ÅÅZ [
CollectionLevel02
ÅÅ[ l
.
ÅÅl m
Any
ÅÅm p
(
ÅÅp q
cll2
ÅÅq u
=>
ÅÅv x
cll2
ÅÅy }
.
ÅÅ} ~
PeriodÅÅ~ Ñ
==ÅÅÖ á
formÅÅà å
.ÅÅå ç
periodÅÅç ì
)ÅÅì î
)ÅÅî ï
)ÅÅï ñ
;ÅÅñ ó
return
ÑÑ 
lastResults
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
àà 
IEnumerable
àà 
<
àà "
ConsolidationLevel01
àà /
>
àà/ 0.
 GetEntryConsildatedLevel01ByDate
àà1 Q
(
ààQ R#
DataCarrierFormulario
ààR g
form
ààh l
)
ààl m
{
ââ 	
var
ãã 
lastResults
ãã 
=
ãã 
db
ãã  
.
ãã  !"
ConsolidationLevel01
ãã! 5
.
ãã5 6
Where
ãã6 ;
(
ãã; <
r
ãã< =
=>
ãã> @
DbFunctions
ããB M
.
ããM N
TruncateTime
ããN Z
(
ããZ [
r
ãã[ \
.
ãã\ ]
AddDate
ãã] d
)
ããd e
>=
ããf h
DbFunctions
ããi t
.
ããt u
TruncateTimeããu Å
(ããÅ Ç
formããÇ Ü
.ããÜ á
_dataInicioããá í
)ããí ì
&&
åå 
DbFunctions
åå "
.
åå" #
TruncateTime
åå# /
(
åå/ 0
r
åå0 1
.
åå1 2
AddDate
åå2 9
)
åå9 :
<=
åå; =
DbFunctions
åå> I
.
ååI J
TruncateTime
ååJ V
(
ååV W
form
ååW [
.
åå[ \
_dataFim
åå\ d
)
ååd e
)
ååe f
;
ååf g
return
çç 
lastResults
çç 
;
çç 
}
éé 	
}
îî 
}ïï ∂â
ZC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\RepositoryBaseNoLazyLoad.cs
	namespace

 	
Data


 
.

 
Repositories

 
{ 
public 

class $
RepositoryBaseNoLazyLoad )
<) *
T* +
>+ ,
:- .
IDisposable/ :
,: ;%
IBaseRepositoryNoLazyLoad< U
<U V
TV W
>W X
whereY ^
T_ `
:a b
classc h
{ 
	protected 
readonly 
SgqDbDevEntities +
db, .
;. /
private 
DbSet 
< 
T 
> 
Entity 
{  !
get" %
{& '
return( .
db/ 1
.1 2
Set2 5
<5 6
T6 7
>7 8
(8 9
)9 :
;: ;
}< =
}> ?
public!! $
RepositoryBaseNoLazyLoad!! '
(!!' (
SgqDbDevEntities!!( 8
Db!!9 ;
)!!; <
{"" 	
db## 
=## 
Db## 
;## 
db$$ 
.$$ 
Configuration$$ 
.$$ 
LazyLoadingEnabled$$ /
=$$0 1
false$$2 7
;$$7 8
}&& 	
public(( 
void(( 
Refresh(( 
((( 
T(( 
obj(( !
)((! "
{)) 	
db** 
.** 
Entry** 
(** 
obj** 
)** 
.** 
Reload**  
(**  !
)**! "
;**" #
}++ 	
public// 
void// 
AddNotCommit//  
(//  !
T//! "
obj//# &
)//& '
{00 	

verifyDate11 
(11 
obj11 
,11 
$str11 %
)11% &
;11& '
Entity22 
.22 
Add22 
(22 
obj22 
)22 
;22 
}33 	
public55 
void55 
AddAllNotCommit55 #
(55# $
IEnumerable55$ /
<55/ 0
T550 1
>551 2
obj553 6
)556 7
{66 	
foreach77 
(77 
var77 
i77 
in77 
obj77 !
)77! "
{88 

verifyDate99 
(99 
i99 
,99 
$str99 '
)99' (
;99( )
Entity:: 
.:: 
Add:: 
(:: 
i:: 
):: 
;:: 
};; 
}<< 	
public>> 
void>> 
Add>> 
(>> 
T>> 
obj>> 
)>> 
{?? 	

verifyDate@@ 
(@@ 
obj@@ 
,@@ 
$str@@ %
)@@% &
;@@& '
EntityAA 
.AA 
AddAA 
(AA 
objAA 
)AA 
;AA 
CommitBB 
(BB 
)BB 
;BB 
}CC 	
publicEE 
voidEE 
AddAllEE 
(EE 
IEnumerableEE &
<EE& '
TEE' (
>EE( )
objEE* -
)EE- .
{FF 	
foreachGG 
(GG 
varGG 
iGG 
inGG 
objGG !
)GG! "
{HH 

verifyDateII 
(II 
iII 
,II 
$strII '
)II' (
;II( )
EntityJJ 
.JJ 
AddJJ 
(JJ 
iJJ 
)JJ 
;JJ 
}KK 
CommitLL 
(LL 
)LL 
;LL 
}MM 	
publicSS 
voidSS 
UpdateSS 
(SS 
TSS 
objSS  
)SS  !
{TT 	

verifyDateVV 
(VV 
objVV 
,VV 
$strVV '
)VV' (
;VV( )
EntityWW 
.WW 
AttachWW 
(WW 
objWW 
)WW 
;WW 
dbXX 
.XX 
EntryXX 
(XX 
objXX 
)XX 
.XX 
StateXX 
=XX  !
EntityStateXX" -
.XX- .
ModifiedXX. 6
;XX6 7
CommitYY 
(YY 
)YY 
;YY 
}ZZ 	
publicll 
voidll 
UpdateNotCommitll #
(ll# $
Tll$ %
objll& )
)ll) *
{mm 	

verifyDateoo 
(oo 
objoo 
,oo 
$stroo '
)oo' (
;oo( )
Entitypp 
.pp 
Attachpp 
(pp 
objpp 
)pp 
;pp 
dbqq 
.qq 
Entryqq 
(qq 
objqq 
)qq 
.qq 
Stateqq 
=qq  !
EntityStateqq" -
.qq- .
Modifiedqq. 6
;qq6 7
}rr 	
publictt 
voidtt  
AddOrUpdateNotCommittt (
(tt( )
Ttt) *
objtt+ .
)tt. /
{uu 	
ifvv 
(vv 
objvv 
.vv 
GetTypevv 
(vv 
)vv 
.vv 
GetPropertyvv )
(vv) *
$strvv* .
)vv. /
!=vv0 2
nullvv3 7
)vv7 8
{ww 
varxx 
idxx 
=xx 
(xx 
intxx 
)xx 
objxx !
.xx! "
GetTypexx" )
(xx) *
)xx* +
.xx+ ,
GetPropertyxx, 7
(xx7 8
$strxx8 <
)xx< =
.xx= >
GetValuexx> F
(xxF G
objxxG J
,xxJ K
nullxxL P
)xxP Q
;xxQ R
ifyy 
(yy 
idyy 
>yy 
$numyy 
)yy 
UpdateNotCommitzz #
(zz# $
objzz$ '
)zz' (
;zz( )
else{{ 
AddNotCommit||  
(||  !
obj||! $
)||$ %
;||% &
}}} 
}~~ 	
public
ÄÄ 
void
ÄÄ %
AddOrUpdateAllNotCommit
ÄÄ +
(
ÄÄ+ ,
IEnumerable
ÄÄ, 7
<
ÄÄ7 8
T
ÄÄ8 9
>
ÄÄ9 :
obj
ÄÄ; >
)
ÄÄ> ?
{
ÅÅ 	
foreach
ÇÇ 
(
ÇÇ 
var
ÇÇ 
i
ÇÇ 
in
ÇÇ 
obj
ÇÇ !
)
ÇÇ! ""
AddOrUpdateNotCommit
ÉÉ $
(
ÉÉ$ %
i
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 	
public
ÜÜ 
void
ÜÜ 
	UpdateAll
ÜÜ 
(
ÜÜ 
IEnumerable
ÜÜ )
<
ÜÜ) *
T
ÜÜ* +
>
ÜÜ+ ,
listObj
ÜÜ- 4
)
ÜÜ4 5
{
áá 	
foreach
àà 
(
àà 
var
àà 
i
àà 
in
àà 
listObj
àà %
)
àà% &
UpdateNotCommit
ââ 
(
ââ  
i
ââ  !
)
ââ! "
;
ââ" #
Commit
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 	
public
éé 
void
éé 
AddOrUpdate
éé 
(
éé  
T
éé  !
obj
éé" %
)
éé% &
{
èè 	
if
êê 
(
êê 
obj
êê 
.
êê 
GetType
êê 
(
êê 
)
êê 
.
êê 
GetProperty
êê )
(
êê) *
$str
êê* .
)
êê. /
!=
êê0 2
null
êê3 7
)
êê7 8
{
ëë 
var
íí 
id
íí 
=
íí 
(
íí 
int
íí 
)
íí 
obj
íí !
.
íí! "
GetType
íí" )
(
íí) *
)
íí* +
.
íí+ ,
GetProperty
íí, 7
(
íí7 8
$str
íí8 <
)
íí< =
.
íí= >
GetValue
íí> F
(
ííF G
obj
ííG J
,
ííJ K
null
ííL P
)
ííP Q
;
ííQ R
if
ìì 
(
ìì 
id
ìì 
>
ìì 
$num
ìì 
)
ìì 
Update
îî 
(
îî 
obj
îî 
)
îî 
;
îî  
else
ïï 
Add
ññ 
(
ññ 
obj
ññ 
)
ññ 
;
ññ 
}
óó 
}
òò 	
public
öö 
void
öö 
AddOrUpdateAll
öö "
(
öö" #
IEnumerable
öö# .
<
öö. /
T
öö/ 0
>
öö0 1
obj
öö2 5
)
öö5 6
{
õõ 	
foreach
úú 
(
úú 
var
úú 
i
úú 
in
úú 
obj
úú !
)
úú! "
AddOrUpdate
ùù 
(
ùù 
i
ùù 
)
ùù 
;
ùù 
}
ûû 	
public
¢¢ 
void
¢¢ 
Dettach
¢¢ 
(
¢¢ 
T
¢¢ 
obj
¢¢ !
)
¢¢! "
{
££ 	
db
§§ 
.
§§ 
Entry
§§ 
(
§§ 
obj
§§ 
)
§§ 
.
§§ 
State
§§ 
=
§§  !
EntityState
§§" -
.
§§- .
Detached
§§. 6
;
§§6 7
}
•• 	
public
©© 
T
©© 
First
©© 
(
©© 
)
©© 
{
™™ 	
return
´´ 
Entity
´´ 
.
´´ 
FirstOrDefault
´´ (
(
´´( )
)
´´) *
;
´´* +
}
¨¨ 	
public
ÆÆ 
IEnumerable
ÆÆ 
<
ÆÆ 
T
ÆÆ 
>
ÆÆ 
GetAll
ÆÆ $
(
ÆÆ$ %
)
ÆÆ% &
{
ØØ 	
var
∞∞ 
aaa
∞∞ 
=
∞∞ 
Entity
∞∞ 
.
∞∞ 
AsQueryable
∞∞ (
(
∞∞( )
)
∞∞) *
;
∞∞* +
return
≤≤ 
Entity
≤≤ 
.
≤≤ 
ToList
≤≤  
(
≤≤  !
)
≤≤! "
;
≤≤" #
}
≥≥ 	
public
µµ 
IEnumerable
µµ 
<
µµ 
T
µµ 
>
µµ  
GetAllAsNoTracking
µµ 0
(
µµ0 1
)
µµ1 2
{
∂∂ 	
var
∑∑ 
aaa
∑∑ 
=
∑∑ 
Entity
∑∑ 
.
∑∑ 
AsQueryable
∑∑ (
(
∑∑( )
)
∑∑) *
.
∑∑* +
AsNoTracking
∑∑+ 7
(
∑∑7 8
)
∑∑8 9
;
∑∑9 :
return
ππ 
Entity
ππ 
.
ππ 
ToList
ππ  
(
ππ  !
)
ππ! "
;
ππ" #
}
∫∫ 	
public
ºº 
T
ºº 
GetById
ºº 
(
ºº 
int
ºº 
id
ºº 
)
ºº  
{
ΩΩ 	
return
ææ 
Entity
ææ 
.
ææ 
Find
ææ 
(
ææ 
id
ææ !
)
ææ! "
;
ææ" #
}
øø 	
public
ŒŒ 
void
ŒŒ 
Delete
ŒŒ 
(
ŒŒ 
int
ŒŒ 
id
ŒŒ !
)
ŒŒ! "
{
œœ 	
Entity
–– 
.
–– 
Remove
–– 
(
–– 
GetById
–– !
(
––! "
id
––" $
)
––$ %
)
––% &
;
––& '
}
—— 	
public
”” 
void
”” 
Remove
”” 
(
”” 
T
”” 
obj
””  
)
””  !
{
‘‘ 	
Entity
’’ 
.
’’ 
Remove
’’ 
(
’’ 
obj
’’ 
)
’’ 
;
’’ 
}
÷÷ 	
public
ÿÿ 
void
ÿÿ 
RemoveAndCommit
ÿÿ #
(
ÿÿ# $
T
ÿÿ$ %
obj
ÿÿ& )
)
ÿÿ) *
{
ŸŸ 	
Entity
⁄⁄ 
.
⁄⁄ 
Remove
⁄⁄ 
(
⁄⁄ 
obj
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
Commit
€€ 
(
€€ 
)
€€ 
;
€€ 
}
‹‹ 	
public
ﬁﬁ 
void
ﬁﬁ 
	RemoveAll
ﬁﬁ 
(
ﬁﬁ 
IEnumerable
ﬁﬁ )
<
ﬁﬁ) *
T
ﬁﬁ* +
>
ﬁﬁ+ ,
obj
ﬁﬁ- 0
)
ﬁﬁ0 1
{
ﬂﬂ 	
foreach
‡‡ 
(
‡‡ 
var
‡‡ 
i
‡‡ 
in
‡‡ 
obj
‡‡ !
)
‡‡! "
Entity
·· 
.
·· 
Remove
·· 
(
·· 
i
·· 
)
··  
;
··  !
}
‚‚ 	
public
ÊÊ 
void
ÊÊ 
Commit
ÊÊ 
(
ÊÊ 
)
ÊÊ 
{
ÁÁ 	
try
ÍÍ 
{
ÎÎ 
db
ÏÏ 
.
ÏÏ 
SaveChanges
ÏÏ "
(
ÏÏ" #
)
ÏÏ# $
;
ÏÏ$ %
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ )
DbEntityValidationException
ÓÓ 2
e
ÓÓ3 4
)
ÓÓ4 5
{
ÔÔ 
foreach
ÚÚ 
(
ÚÚ 
var
ÚÚ  
i
ÚÚ! "
in
ÚÚ# %
e
ÚÚ& '
.
ÚÚ' ($
EntityValidationErrors
ÚÚ( >
)
ÚÚ> ?
{
ÛÛ 
Console
ÙÙ 
.
ÙÙ  
	WriteLine
ÙÙ  )
(
ÙÙ) *
$str
ÙÙ* x
,
ÙÙx y
i
ÙÙz {
.
ÙÙ{ |
EntryÙÙ| Å
.ÙÙÅ Ç
EntityÙÙÇ à
.ÙÙà â
GetTypeÙÙâ ê
(ÙÙê ë
)ÙÙë í
.ÙÙí ì
NameÙÙì ó
,ÙÙó ò
iÙÙô ö
.ÙÙö õ
EntryÙÙõ †
.ÙÙ† °
StateÙÙ° ¶
)ÙÙ¶ ß
;ÙÙß ®
foreach
ıı 
(
ıı  !
var
ıı! $
ve
ıı% '
in
ıı( *
i
ıı+ ,
.
ıı, -
ValidationErrors
ıı- =
)
ıı= >
{
ˆˆ 
Console
˜˜ #
.
˜˜# $
	WriteLine
˜˜$ -
(
˜˜- .
$str
˜˜. S
,
˜˜S T
ve
˜˜U W
.
˜˜W X
PropertyName
˜˜X d
,
˜˜d e
ve
˜˜f h
.
˜˜h i
ErrorMessage
˜˜i u
)
˜˜u v
;
˜˜v w
}
¯¯ 
}
˘˘ 
throw
˚˚ 
;
˚˚ 
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝  
ex
˝˝! #
)
˝˝# $
{
˛˛ 
throw
ˇˇ 
ex
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}
ÇÇ 	
public
ÑÑ 
void
ÑÑ 
Dispose
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
db
ÜÜ 
.
ÜÜ 
Dispose
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
private
ââ 
void
ââ 

verifyDate
ââ 
(
ââ  
T
ââ  !
obj
ââ" %
,
ââ% &
string
ââ' -
property
ââ. 6
)
ââ6 7
{
ää 	
try
ãã 
{
åå 
if
çç 
(
çç 
obj
çç 
.
çç 
GetType
çç 
(
çç  
)
çç  !
.
çç! "
GetProperty
çç" -
(
çç- .
property
çç. 6
)
çç6 7
!=
çç8 :
null
çç; ?
)
çç? @
{
éé 
var
èè 
date
èè 
=
èè 
(
èè  
DateTime
èè  (
)
èè( )
obj
èè) ,
.
èè, -
GetType
èè- 4
(
èè4 5
)
èè5 6
.
èè6 7
GetProperty
èè7 B
(
èèB C
property
èèC K
)
èèK L
.
èèL M
GetValue
èèM U
(
èèU V
obj
èèV Y
,
èèY Z
null
èè[ _
)
èè_ `
;
èè` a
if
êê 
(
êê 
date
êê 
.
êê 
IsNull
êê #
(
êê# $
)
êê$ %
)
êê% &
{
ëë 
obj
íí 
.
íí 
GetType
íí #
(
íí# $
)
íí$ %
.
íí% &
GetProperty
íí& 1
(
íí1 2
property
íí2 :
)
íí: ;
.
íí; <
SetValue
íí< D
(
ííD E
obj
ííE H
,
ííH I
DateTime
ííJ R
.
ííR S
Now
ííS V
)
ííV W
;
ííW X
}
ìì 
else
îî 
{
ïï 
if
ññ 
(
ññ 
date
ññ  
==
ññ! #
DateTime
ññ$ ,
.
ññ, -
MinValue
ññ- 5
)
ññ5 6
obj
óó 
.
óó  
GetType
óó  '
(
óó' (
)
óó( )
.
óó) *
GetProperty
óó* 5
(
óó5 6
property
óó6 >
)
óó> ?
.
óó? @
SetValue
óó@ H
(
óóH I
obj
óóI L
,
óóL M
DateTime
óóN V
.
óóV W
Now
óóW Z
)
óóZ [
;
óó[ \
}
òò 
}
ôô 
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
)
õõ 
{
úú 
obj
ùù 
.
ùù 
GetType
ùù 
(
ùù 
)
ùù 
.
ùù 
GetProperty
ùù )
(
ùù) *
property
ùù* 2
)
ùù2 3
.
ùù3 4
SetValue
ùù4 <
(
ùù< =
obj
ùù= @
,
ùù@ A
DateTime
ùùB J
.
ùùJ K
Now
ùùK N
)
ùùN O
;
ùùO P
}
ûû 
}
üü 	
public
°° 
void
°° !
RemoveByIdAndCommit
°° '
(
°°' (
int
°°( +
id
°°, .
)
°°. /
{
¢¢ 	
}
§§ 	
}
¨¨ 
}≠≠ éù
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\RepositoryBase.cs
	namespace 	
Data
 
. 
Repositories 
{ 
public 

class 
RepositoryBase 
<  
T  !
>! "
:# $
IDisposable% 0
,0 1
IBaseRepository2 A
<A B
TB C
>C D
whereE J
TK L
:M N
classO T
{ 
	protected 
readonly 
SgqDbDevEntities +
db, .
;. /
private 
DbSet 
< 
T 
> 
Entity 
{  !
get" %
{& '
return( .
db/ 1
.1 2
Set2 5
<5 6
T6 7
>7 8
(8 9
)9 :
;: ;
}< =
}> ?
public"" 
RepositoryBase"" 
("" 
SgqDbDevEntities"" .
Db""/ 1
)""1 2
{## 	
db$$ 
=$$ 
Db$$ 
;$$ 
}'' 	
public)) 
void)) 
Refresh)) 
()) 
T)) 
obj)) !
)))! "
{** 	
db++ 
.++ 
Entry++ 
(++ 
obj++ 
)++ 
.++ 
Reload++  
(++  !
)++! "
;++" #
},, 	
public00 
void00 
AddNotCommit00  
(00  !
T00! "
obj00# &
)00& '
{11 	

verifyDate22 
(22 
obj22 
,22 
$str22 %
)22% &
;22& '
Entity33 
.33 
Add33 
(33 
obj33 
)33 
;33 
}44 	
public66 
void66 
AddAllNotCommit66 #
(66# $
IEnumerable66$ /
<66/ 0
T660 1
>661 2
obj663 6
)666 7
{77 	
foreach88 
(88 
var88 
i88 
in88 
obj88 !
)88! "
{99 

verifyDate:: 
(:: 
i:: 
,:: 
$str:: '
)::' (
;::( )
Entity;; 
.;; 
Add;; 
(;; 
i;; 
);; 
;;; 
}<< 
}== 	
public?? 
void?? 
Add?? 
(?? 
T?? 
obj?? 
)?? 
{@@ 	

verifyDateAA 
(AA 
objAA 
,AA 
$strAA %
)AA% &
;AA& '
EntityBB 
.BB 
AddBB 
(BB 
objBB 
)BB 
;BB 
CommitCC 
(CC 
)CC 
;CC 
}DD 	
publicFF 
voidFF 
AddAllFF 
(FF 
IEnumerableFF &
<FF& '
TFF' (
>FF( )
objFF* -
)FF- .
{GG 	
foreachHH 
(HH 
varHH 
iHH 
inHH 
objHH !
)HH! "
{II 

verifyDateJJ 
(JJ 
iJJ 
,JJ 
$strJJ '
)JJ' (
;JJ( )
EntityKK 
.KK 
AddKK 
(KK 
iKK 
)KK 
;KK 
}LL 
CommitMM 
(MM 
)MM 
;MM 
}NN 	
publicTT 
voidTT 
UpdateTT 
(TT 
TTT 
objTT  
)TT  !
{UU 	

verifyDate[[ 
([[ 
obj[[ 
,[[ 
$str[[ '
)[[' (
;[[( )
Entity\\ 
.\\ 
Attach\\ 
(\\ 
obj\\ 
)\\ 
;\\ 
db]] 
.]] 
Entry]] 
(]] 
obj]] 
)]] 
.]] 
State]] 
=]]  !
EntityState]]" -
.]]- .
Modified]]. 6
;]]6 7
Commit^^ 
(^^ 
)^^ 
;^^ 
}__ 	
publicqq 
voidqq 
UpdateNotCommitqq #
(qq# $
Tqq$ %
objqq& )
)qq) *
{rr 	

verifyDatett 
(tt 
objtt 
,tt 
$strtt '
)tt' (
;tt( )
Entityuu 
.uu 
Attachuu 
(uu 
objuu 
)uu 
;uu 
dbvv 
.vv 
Entryvv 
(vv 
objvv 
)vv 
.vv 
Statevv 
=vv  !
EntityStatevv" -
.vv- .
Modifiedvv. 6
;vv6 7
}ww 	
publicyy 
voidyy  
AddOrUpdateNotCommityy (
(yy( )
Tyy) *
objyy+ .
)yy. /
{zz 	
if{{ 
({{ 
obj{{ 
.{{ 
GetType{{ 
({{ 
){{ 
.{{ 
GetProperty{{ )
({{) *
$str{{* .
){{. /
!={{0 2
null{{3 7
){{7 8
{|| 
var}} 
id}} 
=}} 
(}} 
int}} 
)}} 
obj}} !
.}}! "
GetType}}" )
(}}) *
)}}* +
.}}+ ,
GetProperty}}, 7
(}}7 8
$str}}8 <
)}}< =
.}}= >
GetValue}}> F
(}}F G
obj}}G J
,}}J K
null}}L P
)}}P Q
;}}Q R
if~~ 
(~~ 
id~~ 
>~~ 
$num~~ 
)~~ 
UpdateNotCommit #
(# $
obj$ '
)' (
;( )
else
ÄÄ 
AddNotCommit
ÅÅ  
(
ÅÅ  !
obj
ÅÅ! $
)
ÅÅ$ %
;
ÅÅ% &
}
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
void
ÖÖ %
AddOrUpdateAllNotCommit
ÖÖ +
(
ÖÖ+ ,
IEnumerable
ÖÖ, 7
<
ÖÖ7 8
T
ÖÖ8 9
>
ÖÖ9 :
obj
ÖÖ; >
)
ÖÖ> ?
{
ÜÜ 	
foreach
áá 
(
áá 
var
áá 
i
áá 
in
áá 
obj
áá !
)
áá! ""
AddOrUpdateNotCommit
àà $
(
àà$ %
i
àà% &
)
àà& '
;
àà' (
}
ââ 	
public
ãã 
void
ãã 
	UpdateAll
ãã 
(
ãã 
IEnumerable
ãã )
<
ãã) *
T
ãã* +
>
ãã+ ,
listObj
ãã- 4
)
ãã4 5
{
åå 	
foreach
çç 
(
çç 
var
çç 
i
çç 
in
çç 
listObj
çç %
)
çç% &
UpdateNotCommit
éé 
(
éé  
i
éé  !
)
éé! "
;
éé" #
Commit
êê 
(
êê 
)
êê 
;
êê 
}
ëë 	
public
ìì 
void
ìì 
AddOrUpdate
ìì 
(
ìì  
T
ìì  !
obj
ìì" %
)
ìì% &
{
îî 	
if
ïï 
(
ïï 
obj
ïï 
.
ïï 
GetType
ïï 
(
ïï 
)
ïï 
.
ïï 
GetProperty
ïï )
(
ïï) *
$str
ïï* .
)
ïï. /
!=
ïï0 2
null
ïï3 7
)
ïï7 8
{
ññ 
var
óó 
id
óó 
=
óó 
(
óó 
int
óó 
)
óó 
obj
óó !
.
óó! "
GetType
óó" )
(
óó) *
)
óó* +
.
óó+ ,
GetProperty
óó, 7
(
óó7 8
$str
óó8 <
)
óó< =
.
óó= >
GetValue
óó> F
(
óóF G
obj
óóG J
,
óóJ K
null
óóL P
)
óóP Q
;
óóQ R
if
òò 
(
òò 
id
òò 
>
òò 
$num
òò 
)
òò 
Update
ôô 
(
ôô 
obj
ôô 
)
ôô 
;
ôô  
else
öö 
Add
õõ 
(
õõ 
obj
õõ 
)
õõ 
;
õõ 
}
úú 
}
ùù 	
public
üü 
void
üü 
AddOrUpdate
üü 
(
üü  
T
üü  !
obj
üü" %
,
üü% &
bool
üü' +
useTransaction
üü, :
)
üü: ;
{
†† 	
using
°° 
(
°° 
var
°° 
ts
°° 
=
°° 
db
°° 
.
°° 
Database
°° '
.
°°' (
BeginTransaction
°°( 8
(
°°8 9
IsolationLevel
°°9 G
.
°°G H
ReadUncommitted
°°H W
)
°°W X
)
°°X Y
{
¢¢ 
if
££ 
(
££ 
obj
££ 
.
££ 
GetType
££ 
(
££  
)
££  !
.
££! "
GetProperty
££" -
(
££- .
$str
££. 2
)
££2 3
!=
££4 6
null
££7 ;
)
££; <
{
§§ 
var
•• 
id
•• 
=
•• 
(
•• 
int
•• !
)
••! "
obj
••" %
.
••% &
GetType
••& -
(
••- .
)
••. /
.
••/ 0
GetProperty
••0 ;
(
••; <
$str
••< @
)
••@ A
.
••A B
GetValue
••B J
(
••J K
obj
••K N
,
••N O
null
••P T
)
••T U
;
••U V
if
¶¶ 
(
¶¶ 
id
¶¶ 
>
¶¶ 
$num
¶¶ 
)
¶¶ 
Update
ßß 
(
ßß 
obj
ßß "
)
ßß" #
;
ßß# $
else
®® 
Add
©© 
(
©© 
obj
©© 
)
©©  
;
©©  !
}
™™ 
ts
´´ 
.
´´ 
Commit
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
public
ØØ 
void
ØØ 
AddOrUpdateAll
ØØ "
(
ØØ" #
IEnumerable
ØØ# .
<
ØØ. /
T
ØØ/ 0
>
ØØ0 1
obj
ØØ2 5
)
ØØ5 6
{
∞∞ 	
foreach
±± 
(
±± 
var
±± 
i
±± 
in
±± 
obj
±± !
)
±±! "
AddOrUpdate
≤≤ 
(
≤≤ 
i
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 	
public
∑∑ 
void
∑∑ 
Dettach
∑∑ 
(
∑∑ 
T
∑∑ 
obj
∑∑ !
)
∑∑! "
{
∏∏ 	
db
ππ 
.
ππ 
Entry
ππ 
(
ππ 
obj
ππ 
)
ππ 
.
ππ 
State
ππ 
=
ππ  !
EntityState
ππ" -
.
ππ- .
Detached
ππ. 6
;
ππ6 7
}
∫∫ 	
public
ææ 
T
ææ 
First
ææ 
(
ææ 
)
ææ 
{
øø 	
return
¿¿ 
Entity
¿¿ 
.
¿¿ 
FirstOrDefault
¿¿ (
(
¿¿( )
)
¿¿) *
;
¿¿* +
}
¡¡ 	
public
√√ 
IEnumerable
√√ 
<
√√ 
T
√√ 
>
√√ 
GetAll
√√ $
(
√√$ %
)
√√% &
{
ƒƒ 	
var
≈≈ 
aaa
≈≈ 
=
≈≈ 
Entity
≈≈ 
.
≈≈ 
AsQueryable
≈≈ (
(
≈≈( )
)
≈≈) *
;
≈≈* +
return
«« 
Entity
«« 
.
«« 
ToList
««  
(
««  !
)
««! "
;
««" #
}
»» 	
public
   
IEnumerable
   
<
   
T
   
>
    
GetAllAsNoTracking
   0
(
  0 1
)
  1 2
{
ÀÀ 	
var
ÃÃ 
aaa
ÃÃ 
=
ÃÃ 
Entity
ÃÃ 
.
ÃÃ 
AsQueryable
ÃÃ (
(
ÃÃ( )
)
ÃÃ) *
.
ÃÃ* +
AsNoTracking
ÃÃ+ 7
(
ÃÃ7 8
)
ÃÃ8 9
;
ÃÃ9 :
return
ŒŒ 
Entity
ŒŒ 
.
ŒŒ 
ToList
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
;
ŒŒ" #
}
œœ 	
public
—— 
T
—— 
GetById
—— 
(
—— 
int
—— 
id
—— 
)
——  
{
““ 	
return
”” 
Entity
”” 
.
”” 
Find
”” 
(
”” 
id
”” !
)
””! "
;
””" #
}
‘‘ 	
public
„„ 
void
„„ 
Delete
„„ 
(
„„ 
int
„„ 
id
„„ !
)
„„! "
{
‰‰ 	
Entity
ÂÂ 
.
ÂÂ 
Remove
ÂÂ 
(
ÂÂ 
GetById
ÂÂ !
(
ÂÂ! "
id
ÂÂ" $
)
ÂÂ$ %
)
ÂÂ% &
;
ÂÂ& '
}
ÊÊ 	
public
ËË 
void
ËË 
Remove
ËË 
(
ËË 
T
ËË 
obj
ËË  
)
ËË  !
{
ÈÈ 	
Entity
ÍÍ 
.
ÍÍ 
Remove
ÍÍ 
(
ÍÍ 
obj
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÌÌ 
void
ÌÌ 
RemoveAndCommit
ÌÌ #
(
ÌÌ# $
T
ÌÌ$ %
obj
ÌÌ& )
)
ÌÌ) *
{
ÓÓ 	
Entity
ÔÔ 
.
ÔÔ 
Remove
ÔÔ 
(
ÔÔ 
obj
ÔÔ 
)
ÔÔ 
;
ÔÔ 
Commit
 
(
 
)
 
;
 
}
ÒÒ 	
public
ÛÛ 
void
ÛÛ 
	RemoveAll
ÛÛ 
(
ÛÛ 
IEnumerable
ÛÛ )
<
ÛÛ) *
T
ÛÛ* +
>
ÛÛ+ ,
obj
ÛÛ- 0
)
ÛÛ0 1
{
ÙÙ 	
foreach
ıı 
(
ıı 
var
ıı 
i
ıı 
in
ıı 
obj
ıı !
)
ıı! "
Entity
ˆˆ 
.
ˆˆ 
Remove
ˆˆ 
(
ˆˆ 
i
ˆˆ 
)
ˆˆ  
;
ˆˆ  !
}
˜˜ 	
public
˚˚ 
void
˚˚ 
Commit
˚˚ 
(
˚˚ 
)
˚˚ 
{
¸¸ 	
try
ˇˇ 
{
ÄÄ 
db
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ "
(
ÅÅ" #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ )
DbEntityValidationException
ÉÉ 2
e
ÉÉ3 4
)
ÉÉ4 5
{
ÑÑ 
foreach
áá 
(
áá 
var
áá  
i
áá! "
in
áá# %
e
áá& '
.
áá' ($
EntityValidationErrors
áá( >
)
áá> ?
{
àà 
Console
ââ 
.
ââ  
	WriteLine
ââ  )
(
ââ) *
$str
ââ* x
,
ââx y
i
ââz {
.
ââ{ |
Entryââ| Å
.ââÅ Ç
EntityââÇ à
.ââà â
GetTypeâââ ê
(ââê ë
)ââë í
.ââí ì
Nameââì ó
,ââó ò
iââô ö
.ââö õ
Entryââõ †
.ââ† °
Stateââ° ¶
)ââ¶ ß
;ââß ®
foreach
ää 
(
ää  !
var
ää! $
ve
ää% '
in
ää( *
i
ää+ ,
.
ää, -
ValidationErrors
ää- =
)
ää= >
{
ãã 
Console
åå #
.
åå# $
	WriteLine
åå$ -
(
åå- .
$str
åå. S
,
ååS T
ve
ååU W
.
ååW X
PropertyName
ååX d
,
ååd e
ve
ååf h
.
ååh i
ErrorMessage
ååi u
)
ååu v
;
ååv w
}
çç 
}
éé 
throw
êê 
;
êê 
}
ëë 
catch
íí 
(
íí 
	Exception
íí  
ex
íí! #
)
íí# $
{
ìì 
throw
îî 
ex
îî 
;
îî 
}
ïï 
}
óó 	
public
ôô 
void
ôô 
Dispose
ôô 
(
ôô 
)
ôô 
{
öö 	
db
õõ 
.
õõ 
Dispose
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
private
ûû 
void
ûû 

verifyDate
ûû 
(
ûû  
T
ûû  !
obj
ûû" %
,
ûû% &
string
ûû' -
property
ûû. 6
)
ûû6 7
{
üü 	
try
†† 
{
°° 
if
¢¢ 
(
¢¢ 
obj
¢¢ 
.
¢¢ 
GetType
¢¢ 
(
¢¢  
)
¢¢  !
.
¢¢! "
GetProperty
¢¢" -
(
¢¢- .
property
¢¢. 6
)
¢¢6 7
!=
¢¢8 :
null
¢¢; ?
)
¢¢? @
{
££ 
var
§§ 
date
§§ 
=
§§ 
(
§§  
DateTime
§§  (
)
§§( )
obj
§§) ,
.
§§, -
GetType
§§- 4
(
§§4 5
)
§§5 6
.
§§6 7
GetProperty
§§7 B
(
§§B C
property
§§C K
)
§§K L
.
§§L M
GetValue
§§M U
(
§§U V
obj
§§V Y
,
§§Y Z
null
§§[ _
)
§§_ `
;
§§` a
if
•• 
(
•• 
date
•• 
.
•• 
IsNull
•• #
(
••# $
)
••$ %
)
••% &
{
¶¶ 
obj
ßß 
.
ßß 
GetType
ßß #
(
ßß# $
)
ßß$ %
.
ßß% &
GetProperty
ßß& 1
(
ßß1 2
property
ßß2 :
)
ßß: ;
.
ßß; <
SetValue
ßß< D
(
ßßD E
obj
ßßE H
,
ßßH I
DateTime
ßßJ R
.
ßßR S
Now
ßßS V
)
ßßV W
;
ßßW X
}
®® 
else
©© 
{
™™ 
if
´´ 
(
´´ 
date
´´  
==
´´! #
DateTime
´´$ ,
.
´´, -
MinValue
´´- 5
)
´´5 6
obj
¨¨ 
.
¨¨  
GetType
¨¨  '
(
¨¨' (
)
¨¨( )
.
¨¨) *
GetProperty
¨¨* 5
(
¨¨5 6
property
¨¨6 >
)
¨¨> ?
.
¨¨? @
SetValue
¨¨@ H
(
¨¨H I
obj
¨¨I L
,
¨¨L M
DateTime
¨¨N V
.
¨¨V W
Now
¨¨W Z
)
¨¨Z [
;
¨¨[ \
}
≠≠ 
}
ÆÆ 
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
)
∞∞ 
{
±± 
obj
≤≤ 
.
≤≤ 
GetType
≤≤ 
(
≤≤ 
)
≤≤ 
.
≤≤ 
GetProperty
≤≤ )
(
≤≤) *
property
≤≤* 2
)
≤≤2 3
.
≤≤3 4
SetValue
≤≤4 <
(
≤≤< =
obj
≤≤= @
,
≤≤@ A
DateTime
≤≤B J
.
≤≤J K
Now
≤≤K N
)
≤≤N O
;
≤≤O P
}
≥≥ 
}
¥¥ 	
public
∂∂ 
void
∂∂ !
RemoveByIdAndCommit
∂∂ '
(
∂∂' (
int
∂∂( +
id
∂∂, .
)
∂∂. /
{
∑∑ 	
}
ππ 	
public
ªª 
int
ªª 

ExecuteSql
ªª 
(
ªª 
string
ªª $
v
ªª% &
)
ªª& '
{
ºº 	
return
ΩΩ 
db
ΩΩ 
.
ΩΩ 
Database
ΩΩ 
.
ΩΩ 
ExecuteSqlCommand
ΩΩ /
(
ΩΩ/ 0
v
ΩΩ0 1
)
ΩΩ1 2
;
ΩΩ2 3
}
ææ 	
public
¿¿ 
List
¿¿ 
<
¿¿ 
T
¿¿ 
>
¿¿ 
ExecuteSqlQuery
¿¿ &
(
¿¿& '
string
¿¿' -
v
¿¿. /
)
¿¿/ 0
{
¡¡ 	
return
¬¬ 
db
¬¬ 
.
¬¬ 
Database
¬¬ 
.
¬¬ 
SqlQuery
¬¬ '
<
¬¬' (
T
¬¬( )
>
¬¬) *
(
¬¬* +
v
¬¬+ ,
)
¬¬, -
.
¬¬- .
ToList
¬¬. 4
(
¬¬4 5
)
¬¬5 6
;
¬¬6 7
}
√√ 	
}
ÀÀ 
}ÃÃ √<
PC:\Users\Note-pc\Source\Repos\ddd.bitbucket2\Data\Repositories\UserRepository.cs
	namespace 	
Data
 
. 
Repositories 
{ 
public		 

class		 
UserRepository		 
:		  !
RepositoryBase		" 0
<		0 1
UserSgq		1 8
>		8 9
,		9 :
IUserRepository		; J
{

 
public 
UserRepository 
( 
SgqDbDevEntities .
_db/ 2
)2 3
: 
base 
( 
_db 
) 
{ 	
db 
. 
Configuration 
. 
LazyLoadingEnabled /
=0 1
false2 7
;7 8
} 	
public 
UserSgq 
	GetByName  
(  !
string! '
Name( ,
), -
{ 	
return 
db 
. 
UserSgq 
. 
Include %
(% &
$str& :
): ;
.; <
Include< C
(C D
$strD N
)N O
.O P
FirstOrDefaultP ^
(^ _
r_ `
=>a c
rd e
.e f
Namef j
.j k
Equalsk q
(q r
Namer v
)v w
)w x
;x y
} 	
public 
bool  
UserNameIsCadastrado (
(( )
string) /
Name0 4
,4 5
int6 9
id: <
)< =
{ 	
return 
db 
. 
UserSgq 
. 
Any !
(! "
x" #
=>$ &
x' (
.( )
Id) +
!=, .
id/ 1
&&2 4
x5 6
.6 7
Name7 ;
==< >
Name? C
)C D
;D E
} 	
public 
void 
Salvar 
( 
UserSgq "
user# '
)' (
{ 	
AddOrUpdate 
( 
user 
) 
; 
Commit   
(   
)   
;   
}!! 	
public)) 
UserSgq)) 
AuthenticationLogin)) *
())* +
UserSgq))+ 2
user))3 7
)))7 8
{** 	
var++ 
pass++ 
=++ 
Guard++ 
.++ 
EncryptStringAES++ -
(++- .
user++. 2
.++2 3
Password++3 ;
)++; <
;++< =
var,, 
result,, 
=,, 
db,, 
.,, 
UserSgq,, #
.,,# $
Include,,$ +
(,,+ ,
$str,,, @
),,@ A
.,,A B
Include,,B I
(,,I J
$str,,J i
),,i j
.,,j k
Include,,k r
(,,r s
$str,,s }
),,} ~
.-- 
FirstOrDefault-- 
(--  
x--  !
=>--" $
x--% &
.--& '
Name--' +
.--+ ,
ToLower--, 3
(--3 4
)--4 5
.--5 6
Equals--6 <
(--< =
user--= A
.--A B
Name--B F
.--F G
ToLower--G N
(--N O
)--O P
)--P Q
&&--R T
x--U V
.--V W
Password--W _
.--_ `
Equals--` f
(--f g
pass--g k
)--k l
)--l m
;--m n
if// 
(// 
result// 
==// 
null// 
)// 
{00 
var11 
userByPassDecripted11 '
=11( )
db11* ,
.11, -
UserSgq11- 4
.114 5
Include115 <
(11< =
$str11= Q
)11Q R
.11R S
Include11S Z
(11Z [
$str11[ e
)11e f
.22 
FirstOrDefault22 #
(22# $
x22$ %
=>22& (
x22) *
.22* +
Name22+ /
.22/ 0
ToLower220 7
(227 8
)228 9
.229 :
Equals22: @
(22@ A
user22A E
.22E F
Name22F J
.22J K
ToLower22K R
(22R S
)22S T
)22T U
&&22V X
x22Y Z
.22Z [
Password22[ c
.22c d
Equals22d j
(22j k
user22k o
.22o p
Password22p x
)22x y
)22y z
;22z {
if44 
(44 
userByPassDecripted44 '
!=44( *
null44+ /
)44/ 0
{55 
userByPassDecripted66 '
.66' (
Password66( 0
=661 2
pass663 7
;667 8
Salvar77 
(77 
userByPassDecripted77 .
)77. /
;77/ 0
return88 
db88 
.88 
UserSgq88 %
.88% &
Include88& -
(88- .
$str88. B
)88B C
.88C D
Include88D K
(88K L
$str88L V
)88V W
.99 
FirstOrDefault99 '
(99' (
x99( )
=>99* ,
x99- .
.99. /
Name99/ 3
.993 4
ToLower994 ;
(99; <
)99< =
.99= >
Equals99> D
(99D E
user99E I
.99I J
Name99J N
.99N O
ToLower99O V
(99V W
)99W X
)99X Y
&&99Z \
x99] ^
.99^ _
Password99_ g
.99g h
Equals99h n
(99n o
pass99o s
)99s t
)99t u
;99u v
;99w x
}:: 
};; 
return<< 
result<< 
;<< 
}== 	
public?? 
List?? 
<?? 
UserSgq?? 
>?? 
GetAllUserByUnit?? -
(??- .
int??. 1
	unidadeId??2 ;
)??; <
{@@ 	
ifAA 
(AA 
	unidadeIdAA 
>AA 
$numAA 
)AA 
returnBB 
dbBB 
.BB 
UserSgqBB  
.BB  !
IncludeBB! (
(BB( )
$strBB) =
)BB= >
.BB> ?
IncludeBB? F
(BBF G
$strBBG Q
)BBQ R
.BBR S
WhereBBS X
(BBX Y
rBBY Z
=>BB[ ]
rBB^ _
.BB_ `
ParCompanyXUserSgqBB` r
.BBr s
AnyBBs v
(BBv w
xBBw x
=>BBy {
xBB| }
.BB} ~
ParCompany_Id	BB~ ã
==
BBå é
	unidadeId
BBè ò
)
BBò ô
)
BBô ö
.
BBö õ
ToList
BBõ °
(
BB° ¢
)
BB¢ £
;
BB£ §
elseCC 
returnDD 
dbDD 
.DD 
UserSgqDD !
.DD! "
IncludeDD" )
(DD) *
$strDD* >
)DD> ?
.DD? @
IncludeDD@ G
(DDG H
$strDDH R
)DDR S
.DDS T
ToListDDT Z
(DDZ [
)DD[ \
;DD\ ]
}EE 	
publicGG 
ListGG 
<GG 
UserSgqGG 
>GG 

GetAllUserGG '
(GG' (
)GG( )
{HH 	
returnII 
dbII 
.II 
UserSgqII 
.II 
IncludeII %
(II% &
$strII& :
)II: ;
.II; <
IncludeII< C
(IIC D
$strIID N
)IIN O
.IIO P
ToListIIP V
(IIV W
)IIW X
;IIX Y
}JJ 	
}LL 
}MM 