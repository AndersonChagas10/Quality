<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="auditor" xml:space="preserve">
    <value>Auditor</value>
  </data>
  <data name="authenticating" xml:space="preserve">
    <value>Authenticating...</value>
  </data>
  <data name="corrective_action_reports" xml:space="preserve">
    <value>Corrective Action Reports</value>
  </data>
  <data name="data_collection_reports" xml:space="preserve">
    <value>Data Collection Reports</value>
  </data>
  <data name="department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="evaluated" xml:space="preserve">
    <value>Evaluated</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="jbs_and_grt_aplication" xml:space="preserve">
    <value>JBS and GRT Application</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="log_in" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="log_out" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="please_sign_in" xml:space="preserve">
    <value>Please sign in</value>
  </data>
  <data name="reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="sign_in" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="period" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="shift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="april" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="august" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="december" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="february" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="january" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="july" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="june" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="march" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="may" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="november" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="october" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="september" xml:space="preserve">
    <value>September</value>
  </data>
  <data name="a" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="level1_name" xml:space="preserve">
    <value>Level 1 Name</value>
  </data>
  <data name="consolidation_type" xml:space="preserve">
    <value>Consolidation Type</value>
  </data>
  <data name="level1_description" xml:space="preserve">
    <value>Level 1 Description</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="alert_emissor" xml:space="preserve">
    <value>Alert emissor</value>
  </data>
  <data name="allow_create_and_or_edit_of_tasks" xml:space="preserve">
    <value>Allow create and/or edit of tasks</value>
  </data>
  <data name="allow_field_edition_of_the_header" xml:space="preserve">
    <value>Allow field edition of the header</value>
  </data>
  <data name="allow_specific_register_by_unit" xml:space="preserve">
    <value>Allow specific register by unit</value>
  </data>
  <data name="allow_the_edition_of_the_evaluation_number" xml:space="preserve">
    <value>Allow the edition of the evaluation number</value>
  </data>
  <data name="allow_the_edition_of_the_goal_of_the_level1_by_unit" xml:space="preserve">
    <value>Allow the edition of the goal of the indicator by unit</value>
  </data>
  <data name="allow_the_edition_of_the_sample_number" xml:space="preserve">
    <value>Allow the edition of the sample number</value>
  </data>
  <data name="allow_the_not_applicable_button_on_level2" xml:space="preserve">
    <value>Allow the not applicable button (NA) on level2</value>
  </data>
  <data name="frequency" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="level2_group" xml:space="preserve">
    <value>Level2 group</value>
  </data>
  <data name="save_button_on_level2" xml:space="preserve">
    <value>Save button on level 2</value>
  </data>
  <data name="consolidation_type_popover" xml:space="preserve">
    <value>Define the type of consolidation between patterns types. System counters will be based on the kind of consolidation.</value>
  </data>
  <data name="select_the_consolidation_type" xml:space="preserve">
    <value>Select the consolidation type</value>
  </data>
  <data name="level1_clusters" xml:space="preserve">
    <value>Level 1 Clusters</value>
  </data>
  <data name="level1_counter" xml:space="preserve">
    <value>Level 1 counter</value>
  </data>
  <data name="not_conformity_rule" xml:space="preserve">
    <value>Not conformity rule</value>
  </data>
  <data name="reaudit" xml:space="preserve">
    <value>Reaudit</value>
  </data>
  <data name="rule" xml:space="preserve">
    <value>Rule</value>
  </data>
  <data name="select" xml:space="preserve">
    <value>Select...</value>
  </data>
  <data name="show_level1_counters" xml:space="preserve">
    <value>Show level 1 counters</value>
  </data>
  <data name="value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="emit_warning" xml:space="preserve">
    <value>Emit warning</value>
  </data>
  <data name="goal_value" xml:space="preserve">
    <value>Goal value  (%)</value>
  </data>
  <data name="limited_number_of_evaluations" xml:space="preserve">
    <value>Número de Avaliações Limitado</value>
  </data>
  <data name="points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="register_total_evaluated" xml:space="preserve">
    <value>Register Total Evaluated</value>
  </data>
  <data name="standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="field_level" xml:space="preserve">
    <value>Field level</value>
  </data>
  <data name="field_level_popover" xml:space="preserve">
    <value>Define on which header (Level 1 or Level 2) the field will be inserted</value>
  </data>
  <data name="field_name" xml:space="preserve">
    <value>Field name</value>
  </data>
  <data name="header_fields" xml:space="preserve">
    <value>Header fields</value>
  </data>
  <data name="absent" xml:space="preserve">
    <value>Absent</value>
  </data>
  <data name="allow_the_audit_of_detached_level3" xml:space="preserve">
    <value>Allow the audit of detached level 3</value>
  </data>
  <data name="allow_the_audit_of_detached_level3_popover" xml:space="preserve">
    <value>Define se existirá um campo para gravar desvios não previstos.</value>
  </data>
  <data name="conform" xml:space="preserve">
    <value>Conform</value>
  </data>
  <data name="frequency_popover" xml:space="preserve">
    <value>Define the frequency that the level 2 will be audit, daily, weekly, etc.</value>
  </data>
  <data name="level2_group_popover" xml:space="preserve">
    <value>Define is there will be groups on level 2. If there is, create the list below.</value>
  </data>
  <data name="level2_name" xml:space="preserve">
    <value>Level 2 name</value>
  </data>
  <data name="level3_group" xml:space="preserve">
    <value>Level 3 Group</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="not_applicable_on_level_2" xml:space="preserve">
    <value>Not Applicable button on level 2</value>
  </data>
  <data name="not_applicable_on_level_2_popover" xml:space="preserve">
    <value>Define if there will be a not applicable button on level 2.</value>
  </data>
  <data name="not_conform" xml:space="preserve">
    <value>Not conform</value>
  </data>
  <data name="positive_value" xml:space="preserve">
    <value>Positive Value</value>
  </data>
  <data name="present" xml:space="preserve">
    <value>Present</value>
  </data>
  <data name="range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="recidivism" xml:space="preserve">
    <value>Recidivism</value>
  </data>
  <data name="rule_for_recidivism" xml:space="preserve">
    <value>Rule for recidivism</value>
  </data>
  <data name="save_button_on_level2_popover" xml:space="preserve">
    <value>Define if there will be a save button on level 2.</value>
  </data>
  <data name="save_button_on_level3" xml:space="preserve">
    <value>Save button on level 3</value>
  </data>
  <data name="save_button_on_level3_popover" xml:space="preserve">
    <value>Define if there will be a save button on level 3.</value>
  </data>
  <data name="select_the_frequency" xml:space="preserve">
    <value>Select the frequency</value>
  </data>
  <data name="type_of_data_entry" xml:space="preserve">
    <value>Type of data entry</value>
  </data>
  <data name="Weigth" xml:space="preserve">
    <value />
  </data>
  <data name="yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="allow_level2_group" xml:space="preserve">
    <value>Allow level 2 group</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="allow_level2_group_popover" xml:space="preserve">
    <value>Define if there will be level 2 groups on this level 1.</value>
  </data>
  <data name="allow_specific_register_by_unit_popover" xml:space="preserve">
    <value>Define if the the units can edit the level 1. If yes, the field "specific register" will show up to define which registers the units will be able to edit.</value>
  </data>
  <data name="has_alert" xml:space="preserve">
    <value>Emit alert</value>
  </data>
  <data name="has_alert_popover" xml:space="preserve">
    <value>Define is this level will emit alert. The rules of the alert will be defined after the link between level 2 and level 3.</value>
  </data>
</root>