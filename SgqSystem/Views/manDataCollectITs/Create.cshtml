@model Dominio.ManDataCollectIT

@{
    ViewBag.Title = "Create";
}
<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content" style="min-height: 650px;">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3>Coleta de Dados de Indicadores Técnicos</h3>
                <h4>Inserir</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                @{ Html.EnableClientValidation(false); }

                <div class="form-group">
                    @Html.Label("Data de Coleta", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReferenceDatetime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReferenceDatetime, "", new { @class = "text-danger" })
                    </div>
                </div>

                @{ Html.EnableClientValidation(true); }

                <div class="form-group hide">
                    @Html.LabelFor(model => model.UserSGQ_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserSGQ_Id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserSGQ_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Unidade", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ParCompany_Id, new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), Resources.Resource.select + "...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParCompany_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.Label("Periodicidade", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.parFrequency_id, new SelectList(ViewBag.listaParFrequency, "Id", "Name"), Resources.Resource.select + "...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.parFrequency_id, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.Label("Turno", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Shift, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Shift, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Descrição da Coleta", htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        <select id="dataType" name="dataType" class="form-control valid">
                            <option>001.KWH. Energia Eletrica - Concessionaria</option>
                            <option>002.M3. Agua</option>
                            <option>003.MCAL. Vapor</option>
                        </select>

                        @*@Html.EditorFor(model => model.dataType, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                <div class="form-group">
                    @Html.Label("Quantidade", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @*AmountData deve ser decimal e não nullable<decimal> para que o filtro funcione*@
                        @Html.TextBoxFor(model => model.AmountData, Model.AmountData.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.AmountData, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Comentários", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        
                        @Html.TextAreaFor(model => model.Comments, 5,5, new { @class = "form-control valid" })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })

                    </div>
                </div>
    

                <div class="form-group hide">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Resources.Resource.save" class="btn btn-default" />
                    </div>
                </div>
            </div>
                    }

        <div>
            @Html.ActionLink(Resources.Resource.back, "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>

<script>
    $(document).ready(function () {

        $('#AmountData').inputmask("decimal", { rightAlign: false });

        $('#ReferenceDatetime').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            'locale': {
                "format": "DD/MM/YYYY",
            }
        });

        $("#UserSGQ_Id").val(1);
        $("#IsActive").val(true);
    });
</script>