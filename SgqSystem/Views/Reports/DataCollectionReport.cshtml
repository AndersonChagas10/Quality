@model SgqSystem.ViewModels.FormularioParaRelatorioViewModel
@using Helper
@{
    ViewBag.Title = "Data Collection Reports";
    var url = Url.Action("Index", "Home");
    var urlTabelaRelatorio = Url.Action("GetEntryByDate", "api/RelatorioColeta");
}

@Styles.Render("~/Content/DataTables")

@*<link href="@Url.Content("~/Content/DataTables/css/jquery.dataTables.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/DataTables/css/buttons.dataTables.min.css")" rel="stylesheet" />*@

@Html.Partial("~/Views/Shared/_FormToQueryFullScreen.cshtml")

<div id="formBodyContent">
    @Html.Partial("~/Views/Shared/_mensagemObrigatorio.cshtml")
    <table id="results" class="display" cellspacing="0" style="width:100%"></table>
</div>

@section Scripts {

    @Scripts.Render("~/Scripts/GuardJs.js")
    @Scripts.Render("~/bundles/DataTables")

    <script type="text/javascript">

        var url1 = '@Html.Raw(@urlTabelaRelatorio)';
        var $btn = $('#btnSend');
        $('#simpleCallendar').hide().attr('disabled', true);

        $(document).ready(function () {
            $("#btnSend").click(function (e) {
                Send();
            });
        });

        function Send() {
            try {
                $btn.button('loading');
                $('#results').empty();
                ValidaDadosParaEnvio();
                //AJAX
                $.post(url1, enviar, function (r) {
                    var retornoArray = [];
                    var arrayItarator = r.Retorno;
                    TratarDados(retornoArray, arrayItarator);
                    GerarTabela(retornoArray);
                    $btn.button('reset');
                });
            } catch (e) {
                console.log(e);
                $btn.button('reset');
            }
        };
        function GerarTabela(retornoArray) {

            var table = $('#results').empty().DataTable({
                data: retornoArray,
                columns: [{ title: "Unit", mData: "Unit" },
                   { title: "Department", mData: "Departamento" },
                   { title: "Level01", mData: "Level01" },
                   { title: "Level02", mData: "Level02name" },
                   { title: "Evaluated", mData: "avaliado" },
                   { title: "Phase", mData: "Phase" },
                   { title: "Shift", mData: "Shift" },
                   { title: "Sample", mData: "Sample" },
                   { title: "Date", mData: "AddDate" },
                   { title: "NotEvaluated", mData: "NotEvaluatedIs" },
                   { title: "Level03", mData: "Level03Name" },
                   { title: "Is Conformed", mData: "ConformedIs" },
                   { title: "Value", mData: "Value" },
                   { title: "ValueText", mData: "ValueText" },
                ],
                //dom: 'Bfrtip',
                //buttons: [
                //   'copy', 'excel', 'pdf'
                //],
                //columnDefs: config.columnDefs,
                //bSort: true,
                //bAutoWidth: true,
                //bFilter: true,
                scrollX: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                pageLength: 10,
                //processing: true,
                loadingRecords: true,
                destroy: true,
                //paginate: true,
                //paging: true,
                info: true,
                //searching: true,
                //createdRow: config.createdRow,
                //fnDrawCallback: config.fnDrawCallback,
                initComplete: function () {
                    $('#loading').hide();
                    var oTable = $('#results').dataTable();
                    //$('#menu-toggle').trigger('click');
                    if (oTable.length > 0) {
                        oTable.fnAdjustColumnSizing();
                    }
                },
                //order: config.order || [[0, 'asc']],
                //serverSide: !config.serverSide == undefined || config.serverSide,
                //sPaginationType: 'full_numbers',
            });

            new $.fn.dataTable.Buttons(table, {
                buttons: [
                    {
                        extend: 'print',
                        customize: function (win) {
                            //$(win.document.body)
                            //    .css( 'font-size', '10pt' )
                            //    .prepend(
                            //        '<img src="http://datatables.net/media/images/logo-fade.png" style="position:absolute; top:0; left:0;" />'
                            //    );

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        },
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    //'excel',
                    'pdf',
                    'colvis',
                    //, 'print'
                    //{
                    //    text: 'Extra 1',
                    //    action: function (e, dt, node, conf) {
                    //        console.log('Button 1 clicked on');
                    //    }
                    //},
                    //{
                    //    text: 'Extra 2',
                    //    action: function (e, dt, node, conf) {
                    //        console.log('Button 2 clicked on');
                    //    }
                    //}
                ]
            });

            table.buttons(0, null).container().prependTo(
                table.table().container()
            );

        }
        function TratarDados(retornoArray, arrayItarator) {
            arrayItarator.ConsolidationLevel01.forEach(function (o, c) {

                o.collectionLevel02DTO.forEach(function (oo, cc) {

                    oo.collectionLevel03DTO.forEach(function (ooo, ccc) {
                        var retorno = {};

                        retorno['Departamento'] = o.Department.Name;
                        retorno['Level01'] = o.Level01.Name;
                        retorno['Unit'] = o.Unit.Name;

                        retorno['Level02'] = oo.Level02Id;
                        retorno['Level02name'] = oo.Name;
                        retorno['avaliado'] = oo.EvaluationNumber;
                        retorno['Sample'] = oo.Sample;
                        retorno['Shift'] = oo.Shift;
                        retorno['Phase'] = oo.Phase;
                        retorno['AddDate'] = new Date(oo.AddDate).toLocaleDateString();
                        retorno['NotEvaluatedIs'] = oo.NotEvaluatedIs;

                        retorno["ConformedIs"] = ooo.ConformedIs;
                        retorno["Level03Id"] = ooo.Level03Id;
                        retorno["Level03Name"] = ooo.Name;
                        retorno["Value"] = ooo.Value;
                        retorno["ValueText"] = ooo.ValueText;

                        retornoArray.push(retorno);
                    });

                });
            })
        }
        function ValidaDadosParaEnvio() {
            GuardJs.resetForValidation();
            GuardJs.CheckRangeDateTime(enviar.endDate, enviar.startDate, "Initial date", "End date");
            if (!GuardJs.isValid)
                return;
            GuardJs.esconderMensagem();
        }
        formControl.ShowAllFielsAndFullCallendar();

    </script>
}
