@model DTO.DTO.RoleUserSgqDTO
@{
    ViewBag.Title = Resources.Resource.new_role;
}

<div class="page-content-wrapper">
    <div class="page-content">
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <a href="@Url.Action("Index", "RoleUserSgq")">@Resources.Resource.roles</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource._novo</span>
                </li>
            </ul>
            <div class="page-toolbar">
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.new_role</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">

                            <div class="tab-pane active" id="setup_tab">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    @Html.HiddenFor(r => r.Id)

                                    <div class="form-group">
                                        @Html.Label(Resources.Resource.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label(Resources.Resource.description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Menus que Acessa", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.RoleUserSgqXItemMenuDTO, new MultiSelectList(ViewBag.listaItensMenu, "Id", "Name"), new { @class = "form-control", @multiple = "multiple" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label(Resources.Resource.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");
    navbarSelect("navbar15");

    $(document).on('switchChange.bootstrapSwitch', '#userSgqDto_UseActiveDirectory', function () {
        $(this).is(":checked") ? $('#userSgqDto_UseActiveDirectory').val(true) : $('#userSgqDto_UseActiveDirectory').val(false)
        setupAD();
    });

    function setupAD() {
        if ($('#userSgqDto_UseActiveDirectory').length > 0) {
            if ($('#userSgqDto_UseActiveDirectory').prop('checked')) {
                $('#passwordContainer').addClass('hide');
            } else {
                $('#passwordContainer').removeClass('hide');
            }
        }
    }

    $(document).on("click", "#btnSave", function () {

        var valid = true;

        if ($("#userSgqDto_FullName").val() == "") {
            openMessageModal(Resources('fullname_required'), '');
            return;
        }

        if ($("#userSgqDto_Name").val() == "") {
            openMessageModal(Resources('username_required'), '');
            return;
        }

        if ($("#userSgqDto_ListParCompany_Id").val().length == 0) {
            openMessageModal(Resources('select_one_company'), '');
            return;
        }

        if (!$('#passwordContainer').hasClass('hide')) {
            if ($("#userSgqDto_Password").val() == "") {
                openMessageModal(Resources('password_required'), '');
                return;
            }

            if ($("#userSgqDto_Password").val() != $("#userSgqDto_ConfirmPassword").val()) {
                openMessageModal(Resources('invalid_password'), '');
                return;
            }
        }

        $.post("@Url.Action("Save", "UserSgq")", $('form').serializeObject(), function (data) {

            if (data == "True") {
                openMessageModal(Resources('user_save_success'), '');
            } else {
                openMessageModal(Resources('repeated_username'), '');
            }

        })
    });

    $(document).ready(function () {

        $.fn.bootstrapSwitch.defaults.size = 'small';
        $.fn.bootstrapSwitch.defaults.onText = '@Resources.Resource.yes';
        $.fn.bootstrapSwitch.defaults.offText = '@Resources.Resource.no';
        $("[type='checkbox']").bootstrapSwitch();

        $("#RoleUserSgqXItemMenuDTO").select2();

    });

</script>

<script>
    $(document).ready(function () {
        closeLeftSidebar();
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
