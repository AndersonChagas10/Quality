@model Dominio.VolumeCepRecortes

@{
    var adicaoEdicao = "Cadastro";
    var ValorNbr = 0;
    if (Model != null)
    {
        ValorNbr = Model.NBR ?? 0;
        adicaoEdicao = "Edição";
    }
    ViewBag.Title = "CEP Matéria Prima - Volume";
}


<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                    <a href="@Url.Action("Index", "CepRecortes")">Volume de @Resources.Resource.cep_recortes</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@adicaoEdicao</span>
                </li>
            </ul>
            <div class="page-toolbar"></div>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.cep_recortes</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        @{ Html.EnableClientValidation(false); }

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @{ Html.EnableClientValidation(true); }

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCompany_id, "Unidade", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ParCompany_id", new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), Resources.Resource.select as string + "...", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParCompany_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Shift_Id, Resources.Resource.shift, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("Shift_Id", new SelectList(ViewBag.ShiftVolume, "Id", "Name"), Resources.Resource.all as string, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Shift_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParLevel1_id, "Indicador", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ParLevel1_id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParLevel1_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtdadeFamiliaProduto, "Número de famílias cadastradas", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.QtdadeFamiliaProduto, new { @class = "form-control", @disabled = "true" })
                                                @Html.ValidationMessageFor(model => model.QtdadeFamiliaProduto, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.HorasTrabalhadasPorDia, "Horas trabalhadas por dia", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.HorasTrabalhadasPorDia, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.HorasTrabalhadasPorDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtdadeMediaKgRecProdDia, "Quantidade Média em KG de Recortes Produzidos Diáriamente", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.QtdadeMediaKgRecProdDia, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.QtdadeMediaKgRecProdDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtdadeMediaKgRecProdHora, "Quantidade Média em KG de Recortes Produzidos Por Hora", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.QtdadeMediaKgRecProdHora, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.QtdadeMediaKgRecProdHora, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NBR, "NBR - Nível Geral de Inspeção Escolhido", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <select id="NBR" name="NBR" class="form-control valid">
                                                    <option value="-1">@Resources.Resource.select</option>
                                                    <option value="1">1</option>
                                                    <option value="2">2</option>
                                                    <option value="3">3</option>

                                                </select>

                                                @Html.ValidationMessageFor(model => model.NBR, "", new { @class = "text-danger" })

                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TotalKgAvaliaHoraProd, "Total em KG Para Avaliação Por Hora de Produção", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.TotalKgAvaliaHoraProd, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.TotalKgAvaliaHoraProd, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtadeTrabEsteiraRecortes, "Quantidade de Colaboradores Ou Esteiras de Recortes", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBox("QtadeTrabEsteiraRecortes", "1", new { @class = "form-control", @readOnly = "readOnly" })
                                                @Html.ValidationMessageFor(model => model.QtadeTrabEsteiraRecortes, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TotalAvaliaColaborEsteirHoraProd, "Total em KG Para Avaliação Por Colaborador/Esteira, Por Hora de Produção", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.TotalAvaliaColaborEsteirHoraProd, new { @class = "form-control", @readOnly = "readOnly" })
                                                @Html.ValidationMessageFor(model => model.TotalAvaliaColaborEsteirHoraProd, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TamanhoAmostra, "Tamanho de Cada Amostra (5KG)", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBox("TamanhoAmostra", "5", new { @class = "form-control", @readOnly = "readOnly" })
                                                @Html.ValidationMessageFor(model => model.TamanhoAmostra, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TotalAmostraAvaliaColabEsteiraHoraProd, "Total de Amostras Para Avaliação Por Colaborador/Esteira, Por Hora de Produção", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.TotalAmostraAvaliaColabEsteiraHoraProd, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.TotalAmostraAvaliaColabEsteiraHoraProd, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Avaliacoes, "Avaliações", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Avaliacoes, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.Avaliacoes, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amostras, "Amostras", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Amostras, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.Amostras, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Salvar" class="btn btn-primary" />
                                                @Html.ActionLink("Voltar para Volume de CEP Matéria Prima", "Index", null, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
<script>

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");
    navbarSelect("navbar7");

    $('#HorasTrabalhadasPorDia').on('blur, keyup', function () {
        $('#Avaliacoes').val($(this).val());
        $('#avaliacaoHidden').val($(this).val());
    });

    $('#HorasTrabalhadasPorDia, #QtdadeMediaKgRecProdDia').on('blur, keyup', function () {
        $('#QtdadeMediaKgRecProdHora').val(Math.round(($('#QtdadeMediaKgRecProdDia').val() / $('#HorasTrabalhadasPorDia').val())));
        CalcularAmostras();
    });

    function CalcularAmostras() {

        $.get("../api/NQA/getNQA/" + $('#NBR').val() + "/" + $('#QtdadeMediaKgRecProdHora').val() + "", function (r) {

            $('#TotalKgAvaliaHoraProd').val(r);
            $('#TotalAvaliaColaborEsteirHoraProd').val(r);

            var resultadoSeiLaDoQue = ($('#TotalAvaliaColaborEsteirHoraProd').val() / $('#TamanhoAmostra').val());
            $('#TotalAmostraAvaliaColabEsteiraHoraProd').val(Math.round(resultadoSeiLaDoQue));
            $('#TotalAmostraAvaliaColabEsteiraHoraProdHidden').val(Math.round(resultadoSeiLaDoQue));
            $('#Amostras').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));
            $('#amostraHidden').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));

        });
    }

    $('#QtdadeMediaKgRecProdHora, #NBR').on('input', function () {

        CalcularAmostras();

    });

    $('#QtadeTrabEsteiraRecortes, #TotalKgAvaliaHoraProd').on('input', function () {

        $('#TotalAvaliaColaborEsteirHoraProd').val(($('#TotalKgAvaliaHoraProd').val() / $('#QtadeTrabEsteiraRecortes').val()));
        $('#TotalAvaliaColaborEsteirHoraProdHidden').val(($('#TotalKgAvaliaHoraProd').val() / $('#QtadeTrabEsteiraRecortes').val()));
        $('#TotalAvaliaColaborEsteirHoraProd').val($('#TotalKgAvaliaHoraProd').val());

        var resultadoSeiLaDoQue = ($('#TotalAvaliaColaborEsteirHoraProd').val() / $('#TamanhoAmostra').val());
        $('#TotalAmostraAvaliaColabEsteiraHoraProd').val(Math.round(resultadoSeiLaDoQue));
        $('#TotalAmostraAvaliaColabEsteiraHoraProdHidden').val(Math.round(resultadoSeiLaDoQue));
        $('#Amostras').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));
        $('#amostraHidden').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));

    });

    $('#TotalAvaliaColaborEsteirHoraProd, #TamanhoAmostra').on('blur, keyup', function () {

        var resultadoSeiLaDoQue = ($('#TotalAvaliaColaborEsteirHoraProd').val() / $('#TamanhoAmostra').val());
        $('#TotalAmostraAvaliaColabEsteiraHoraProd').val(Math.round(resultadoSeiLaDoQue));
        $('#TotalAmostraAvaliaColabEsteiraHoraProdHidden').val(Math.round(resultadoSeiLaDoQue));
        $('#Amostras').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));
        $('#amostraHidden').val(Math.ceil((Math.round(resultadoSeiLaDoQue)) * $('#QtadeTrabEsteiraRecortes').val() / $('#QtdadeFamiliaProduto').val()));

    });

    $(document).ready(function () {

        $('#QtdadeFamiliaProduto').val("");

        $('#ParCompany_id').on('change', function () {
            if ($('#ParCompany_id').val() > 0) {
                $.post('@Url.Action("GetVolumeRecortes", "api/Volume")' + "/" + $('#ParCompany_id').val(), {}, function (r) {
                    $('#QtdadeFamiliaProduto').val(r);
                    applyMath();
                    CalcularAmostras();
                });
            } else {
                $('#QtdadeFamiliaProduto').val("");
            }
        });

        $('#ParCompany_id').change();

        $('#HorasTrabalhadasPorDia').inputmask("integer", { rightAlign: false, min: 0, max: 24 });
        $('#QtdadeMediaKgRecProdDia').inputmask("integer", { rightAlign: false });
        $('#QtadeTrabEsteiraRecortes').inputmask("integer", { rightAlign: false });
        $('#TotalAvaliaColaborEsteirHoraProd').inputmask("integer", { rightAlign: false });
        $('#EditorFor').inputmask("integer", { rightAlign: false });
        $('#TamanhoAmostra').inputmask("integer", { rightAlign: false });

        $('#Data').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            'locale': {
                "format": "DD/MM/YYYY"
            }
        });

        $('#Avaliacoes').val($('#HorasTrabalhadasPorDia').val());
        $('#Amostras').val($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val());
        $('#TamanhoAmostra').trigger('input');
        $('#TamanhoAmostra').trigger('input');

        try {
            $('#NBR').val(@Html.Raw(Json.Encode(ValorNbr))).change();

        } catch (e) {

        }

        closeLeftSidebar();

    });

    function applyMath() {

        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val() / $('#QtdadeFamiliaProduto').val() / $('#QtdadeFamiliaProduto').val()));
        $('#amostraHidden').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));
        if (("" + $('#Amostras').val()).length <= 0) $('#Amostras').val(0);
        if ((""+$('#amostraHidden').val()).length <= 0) $('#amostraHidden').val(0);
    }

</script>
