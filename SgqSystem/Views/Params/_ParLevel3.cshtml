@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@using DTO

@{
    ViewBag.Title = "ParLeve3";
    //  var url = Url.Action("AddUpdateLevel3", "api/ParamsApi"); //URL relativa
    //  var urlGetLevel1 = Url.Action("GetParLevel3ById", "api/ParamsApi"); //URL relativa
}
<div id="newLevel3Modal">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-lg-12">

                <table class="table-erp">
                    <tr class="row hide">
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Id), @Html.Label("Id (para testes)"), Table.PosicaoLabel.top)
                    </tr>
                    <tr class="row">

                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Name, htmlAttributes: new { @class = "form-control input-sm" })
                         , @Html.Label(Resources.Resource.level3_name)
                         , Table.PosicaoLabel.top
                         , error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel3Dto.Name, null, new { @class = "text-danger" }), classTd: "col-sm-6")

                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Description, htmlAttributes: new { @class = "form-control input-sm" })
                         , @Html.Label(Resources.Resource.level3_description)
                         , Table.PosicaoLabel.top
                         , error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel3Dto.Description, null, new { @class = "text-danger" }), classTd: "col-sm-6")


                    </tr>

                    <tr class="row" style="display:none;">
                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel3Dto.HasTakePhoto, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.take_photo), Table.PosicaoLabel.left, null, null)
                    </tr>

                    <tr class="row">
                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel3Dto.IsActive, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.is_active), Table.PosicaoLabel.left, null, null)
                    </tr>
                </table>


                @{
                    Model.levelControl = 3;
                }

                @*<div id="reincidencia">
                        @Html.Partial("_ReincidenciaXLevel", Model)
                    </div>*@
                @Html.HiddenFor(r => r.paramsDto.parLevel3Dto.hasVinculo)

                @if (Model.paramsDto.parLevel3Dto.hasVinculo)
                {
                    <div id="level3_required_level1_level2" class="hide">
                        @Html.Partial("_TipoDadosEntrada", Model)
                        @Html.Partial("_AvaliacaoAmostraLevel3", Model)
                    </div>

                    @Html.Partial("_Peso", Model)
                }

                <button type="button" id="btnSaveNewLevel3" data-loading-text="@Resources.Resource.saving_the_level3" onclick="indexParamsLevel3.enviarDadosParaApi();" class="btn btn-info margin-button">@Resources.Resource.save_level3</button>
            </div>
        </div>
        <!-- Modal -->
                    <div class="modal fade" id="modalPositiveNegative" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-dialog  modal-sm" role="document">
                            <div class="modal-content">
                                <div class="modal-header modal-header-gray">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title" id="myModalLabel">@Resources.Resource.positive_negative</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-xs-12">@Resources.Resource.positive_value</div>
                                        <div class="col-xs-12">
                                            <input class="form-control input-sm" id="modalInputPositive" />
                                        </div>
                                        <div class="col-xs-12">@Resources.Resource.negative_value</div>
                                        <div class="col-xs-12">
                                            <input class="form-control input-sm" id="modalInputNegative" />
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resource.close</button>
                                    <button type="button" class="btn btn-primary" onclick="clicModalBinarioSave()">@Resources.Resource.save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.paramsDto.parLevel3Value.Id)

        <!-- Modal -->
                    <div class="modal fade" id="modalUnidadeMedida" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-dialog  modal-sm" role="document">
                            <div class="modal-content">
                                <div class="modal-header modal-header-gray">
                                    <button type="button" class="close" id="fechar" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title" id="myModalLabel">@Resources.Resource.measurement_unit</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-xs-12">@Resources.Resource.measurement_unit</div>
                                        <div class="col-xs-12">
                                            <input class="form-control input-sm" id="modalInputMeasurementUnit" />
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resource.close</button>
                                    <button type="button" class="btn btn-primary" onclick="UpdateUnidadeMedidas();">@Resources.Resource.save</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    }

</div>
<script>

    var config = @Html.Raw(Json.Encode(GlobalConfig.Eua));

    function UpdateUnidadeMedidas() {
        var valor = $("#modalInputMeasurementUnit").val();
        $.get(urlSaveMeassurementUnit,{valor: valor}, function(r) {
            $('#selectUnidadeDeMedidas').append('<option value="' + r.Id + '">' + r.Name + '</option>');
            $('#selectUnidadeDeMedidas').val(r.Id).change();
            $("#modalInputMeasurementUnit").val('');
            $('#fechar').modal('hide');
            $('#modalUnidadeMedida').hide();
        });
    }

    /*Vinculo Level3Level2*/
    function saveLevel3Level2() {

        /*Level2*/
        var idLevel2 = $('#paramsDto_parLevel2Dto_Id').val();
        if (idLevel2 == undefined || idLevel2 <= 0 || idLevel2 == null) {
            openMessageModal(Resources('warning'), Resources('select_the_level2'));
            //alert("É necessario selecionar o level 2");
            return;
        }

        /*Level3*/
        var idLevel3 = $('#paramsDto_parLevel3Dto_Id').val();
        if (idLevel3 == undefined || idLevel3 <= 0 || idLevel3 == null) {
            openMessageModal(Resources('warning'), Resources('select_the_level3'));
            //alert("É necessario selecionar o level 3");
            return;
        }

        var peso = 0;
        var groupoLevel2 = 0;

        $.get(vinculoL2L3 + '/' + idLevel2 + '/' + idLevel3 + '/' + peso + '/' + groupoLevel2 + '/', function (obj, responseText, xhr) {
            if (obj != null) {
                openMessageModal(Resources('done'), Resources('level2_linked_to_level3_successfully') +" #" + obj.Id);
                //alert("Vinculado L3 com L2 ID: " + obj.Id);
                UpdateSelect2Level3(idLevel2, undefined, function(){$('#parLevel3Select2').trigger('change');});
            }
            initialFormLevel3 = $($('form')[2]).clone();

        });

    }



    var grouLevel2Selected = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel3Dto.groupLevel2Selected));
    //var
    var hasPeso = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel3Dto.pesoDoVinculo));
    $('#paramsDto_parLevel3Dto_pesoDoVinculo').val(hasPeso);

    $('#pesoDefinido').html(hasPeso).show();
    $('#painelPeso').show();

    var urlLowPerm = '@Url.Action("AlteraVinculoLevel3", "api/ParamsApi")';

    $(document).ready(function () {

        if(config){
            $('#reincidencia').hide();
        }

        if(!hasperm){
            disableEvry();
        }

        var modalPontos = $('#modalPontos').detach();
        $('body > #modalPontos').remove();
        modalPontos.appendTo('body');
        if(grouLevel2Selected > 0){
            $('#paramsDto_parLevel3Dto_listGroupsLevel2').val(grouLevel2Selected)
        }
        updateAllTables();

        $('[data-toggle="popover"]').popover();

        level3Value.carregaDadosDoDb();

        $('[data-toggle="popover"]').popover();

        ///initialize form
        initialFormLevel3 = $($('form')[2]).clone();
    });

</script>
