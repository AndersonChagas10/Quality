@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@{
    ViewBag.Title = "ParLeve3";
    //  var url = Url.Action("AddUpdateLevel3", "api/ParamsApi"); //URL relativa
    //  var urlGetLevel1 = Url.Action("GetParLevel3ById", "api/ParamsApi"); //URL relativa
}
<div id="newLevel3Modal">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-lg-12">
                <table class="table-erp">
                    <tr class="row hide">
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Id), @Html.Label("Id (para testes)"), Table.PosicaoLabel.top)
                    </tr>
                    <tr class="row">
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Name, htmlAttributes: new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level3_name), Table.PosicaoLabel.top)
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.Description, htmlAttributes: new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level3_description), Table.PosicaoLabel.top)
                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3InputType_Id", Model.paramsDdl.DdlParLevel3InputType, htmlAttributes: new { @class = "form-control input-sm", @id = "selectTipoInput" }), @Html.Label(Resources.Resource.data_type_entry), Table.PosicaoLabel.top)
                    </tr>
                    <tr class="row ParIntervalos" style="display: none;">
                        @Table.GerarColunaButton(@Html.DropDownList("paramsDto.parLevel3Value.ParMeasurementUnit_Id", Model.paramsDdl.DdlParMeasurementUnit, htmlAttributes: new { @class = "form-control input-sm", @id = "selectUnidadeDeMedidas" }), @Html.Label(Resources.Resource.measurement_unit), Table.PosicaoLabel.top, button: "<button type='button' id='btnUnidadeMedida' class='btn btn-primary btn-sm'><i class='fa fa-external-link' aria-hidden='true'></i></button>")
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Value.IntervalMin, htmlAttributes: new { id = "parLevel3Value_IntervalMin", @class = "form-control input-sm" }), @Html.Label(Resources.Resource.minimum_range), Table.PosicaoLabel.top)
                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel3Value.IntervalMax, htmlAttributes: new { id = "parLevel3Value_IntervalMax", @class = "form-control input-sm" }), @Html.Label(Resources.Resource.maximum_range), Table.PosicaoLabel.top)
                        <td style="display: none;">
                            <label>@Resources.Resource.values_between</label>
                            <select class="form-control input-sm" id="parIntervalosType" name="paramsDto.parLevel3Value.AcceptableValueBetween"></select>
                        </td>
                    </tr>
                    <tr class="row" style="display:none;padding:10px;">
                        <td colspan="3">
                            *
                            <span id="ParIntervalosLabel"></span>
                        </td>
                    </tr>
                    <tr class="row ParBinarios" style="display: none;">
                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3BoolTrue_Id", Model.paramsDdl.DdlParLevel3BoolTrue, htmlAttributes: new { @class = "form-control input-sm", @id = "selectConforme" }), @Html.Label(Resources.Resource.positive_value), Table.PosicaoLabel.top)
                        @Table.GerarColunaButton(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3BoolFalse_Id", Model.paramsDdl.DdlParLevel3BoolFalse, htmlAttributes: new { @class = "form-control input-sm", @id = "selectNaoConforme" }), @Html.Label(Resources.Resource.negative_value), Table.PosicaoLabel.top, button: "<button type='button' id='btnPositiveNegative' class='btn btn-primary btn-sm'><i class='fa fa-external-link' aria-hidden='true'></i></button>")
                    </tr>
                </table>

                <div class="panel-group accordion" id="level3_repetition_accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level3_repetition_accordion" href="#level3_repetition_collapse" aria-expanded="false"> @Resources.Resource.repetition</a>
                            </h4>
                        </div>
                        <div id="level3_repetition_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                            <div class="panel-body">
                                <table class="table-erp">
                                    <tbody>
                                        <tr class="row">
                                            @Table.GerarColuna(
                                                @Html.TextBox("inputNumeroNC", null, htmlAttributes: new { @class = "form-control input-sm", @type = "number", @Id = "l3InputNumeroNC" })
                                                , @Html.Label(Resources.Resource.number_nc)
                                                , Table.PosicaoLabel.top)

                                            @Table.GerarColuna(
                                                @Html.TextBox("inputVigencia", null, htmlAttributes: new { @class = "form-control input-sm", @type = "number", @Id = "l3InputVigencia" })
                                                , @Html.Label(Resources.Resource.validation)
                                                , Table.PosicaoLabel.top)

                                            @Table.GerarColunaButton(
                                                @Html.DropDownList("selectFrequenciaReincidencia", Model.paramsDdl.DdlFrequency, htmlAttributes: new { @Id = "l3SelectFrequenciaReincidencia", @class = "form-control input-sm" })
                                                , @Html.Label(Resources.Resource.frequency)
                                                , Table.PosicaoLabel.top
                                                , button: "<button type=\"button\" class=\"btn btn-primary btn-sm\" id=\"l3BtnAddFrequenciaReincidencia\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>")
                                        </tr>
                                    </tbody>
                                </table>
                                <table class="table-erp table table-condensed" id="l3TableRepetition">
                                    <thead>
                                        <tr>
                                            <td>@Resources.Resource.rule</td>
                                            <td>@Resources.Resource.number_nc</td>
                                            <td>@Resources.Resource.validation</td>
                                            <td colspan="2">@Resources.Resource.frequency</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr id="RegraReincidenciaGroup" class="example"></tr>
                                        @if (Model.paramsDto.parLevel3Dto.listParRelapseDto != null)
                                        {
                                            int i = 0;
                                            foreach (var rp in Model.paramsDto.parLevel3Dto.listParRelapseDto)
                                            {
                                                i++;
                                                <tr id="@rp.Id" class="existent">
                                                    <td>Regra @i</td>
                                                    <td>@rp.NcNumber</td>
                                                    <td>@rp.EffectiveLength</td>
                                                    <td>@rp.parFrequency.Name</td>
                                                    <td>
                                                        @Html.Hidden("paramsDto.parLevel3Dto.removeReincidencia", rp.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                        <button type="button" class="btn btn-danger btn-xs pull-right" onclick="l3RemoveReincidencia($(this))" id="btnRemoverFrequenciaReincidencia"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="painelPeso" class="panel panel-default" style="padding: 0px 16px; display:none;">
                    <h5>
                        <b>@Resources.Resource.defined_weight: </b>
                        <label id="pesoDefinido"></label>
                    </h5>
                </div>

                <button type="button" id="btnSaveNewLevel3" data-loading-text="@Resources.Resource.saving_the_level3" onclick="indexParamsLevel3.enviarDadosParaApi();" class="btn btn-danger margin-button">@Resources.Resource.save_level3</button>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="modalPositiveNegative" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog  modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">@Resources.Resource.positive_negative</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-xs-12">@Resources.Resource.positive_value</div>
                            <div class="col-xs-12">
                                <input class="form-control input-sm" id="modalInputPositive" />
                            </div>
                            <div class="col-xs-12">@Resources.Resource.negative_value</div>
                            <div class="col-xs-12">
                                <input class="form-control input-sm" id="modalInputNegative" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">@Resources.Resource.save</button>
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.paramsDto.parLevel3Value.Id)

        <!-- Modal -->
        <div class="modal fade" id="modalUnidadeMedida" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog  modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">@Resources.Resource.measurement_unit</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-xs-12">@Resources.Resource.measurement_unit</div>
                            <div class="col-xs-12">
                                <input class="form-control input-sm" id="modalInputMeasurementUnit" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">@Resources.Resource.save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade" id="modalPontos" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Resources.Resource.weight</h4>
                        <small>@Resources.Resource.inform_the_weight_of_the_level3</small>
                    </div>
                    <div class="modal-body">
                        @Html.TextBoxFor(m => m.paramsDto.parLevel3Dto.pesoDoVinculo, new { @class = "form-control input-sm" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" onclick="saveLevel3Level2()" id="savePontos">@Resources.Resource.attach</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resource.back</button>
                    </div>
                </div>

            </div>
        </div>


    }


</div>
<script>

    var hasPeso = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel3Dto.pesoDoVinculo));
    $('#paramsDto_parLevel3Dto_pesoDoVinculo').val(hasPeso);

    $('#pesoDefinido').html(hasPeso).show();
    $('#painelPeso').show();

    /*Reincidencia*/
    var counterReincidencial3 = 0;
    function l3RemoveReincidencia(e) {
        e.parents('tr').find('input[type="hidden"]').attr("disabled", false).attr("name", e.parents('tr').find('input[type="hidden"]').attr('name') + "[" + counterReincidencial3 + "]");
        e.parents('tr').hide();
        counterReincidencial3++;
        console.log(e.parents('tr'));
        updateAllTables();
    }

    $('#l3BtnAddFrequenciaReincidencia').click(function (e) {

        e.preventDefault();
        if($('#l3SelectFrequenciaReincidencia :selected').val() <= 0){
            alert('É necessário selecionar a Frequência');
            return;
        }

        if($('#l3InputNumeroNC').val().length <= 0){
            alert('É necessário informar o Número de NC');
            return;
        }

        if($('#l3InputVigencia').val().length <= 0){
            alert('É necessário selecionar a Vigência');
            return;
        }

        var NcNumber = $('#l3InputNumeroNC').val();
        var Vigencia = $('#l3InputVigencia').val();
        var idFrequencia = $('#l3SelectFrequenciaReincidencia').val()
        var includeItem = true;

        if (includeItem == true) {
            var indexValue = $('#l3TableRepetition tbody tr').not('.existent').length -1;

            var inputHidden = '<input class="counterRegraReincidenciaClass" type="hidden" name="paramsDto.parLevel3Dto.listParRelapseDto[' + indexValue + '].NcNumber" value="' + NcNumber + '" />' +
                              '<input class="LocalLevel3Class" type="hidden" name="paramsDto.parLevel3Dto.listParRelapseDto[' + indexValue + '].EffectiveLength" value="' + Vigencia + '" />' +
                              '<input class="LocalLevel3Class" type="hidden" name="paramsDto.parLevel3Dto.listParRelapseDto[' + indexValue + '].ParFrequency_Id" value="' + idFrequencia + '" />';

            var elemento = $('<tr><td>' + 'Regra ' + (indexValue + 1) + " </td><td> " + NcNumber + " </td><td> " + Vigencia + " </td><td> " + $('#l3SelectFrequenciaReincidencia option:selected').text() + inputHidden + '</td><td><button type="button" class="btn btn-danger btn-xs pull-right" onclick="RemoverReincidencia($(this));"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>' + '</td><tr>');
            $('#l3TableRepetition > tbody').append(elemento[0]);
            $('#l3SelectFrequenciaReincidencia').prop('selectedIndex', 0);
            $('#l3InputNumeroNC, #l3InputVigencia').val("");
            $('#l3InputNumeroNC').focus();

            updateAllTables();
        }

    });
    /*Fim Reincidencia*/

    $('#modalPontos').appendTo('body');

    $('#btnUnidadeMedida').click(function (e) {
        $('#modalUnidadeMedida').modal({ backdrop: false });
    });

    $('#btnPositiveNegative').click(function (e) {
        $('#modalPositiveNegative').modal({ backdrop: false });
    });

    $(document).on('input', '#parLevel3Value_IntervalMax', function (e) {
        
        changeCombo();
      
    });

    $(document).on('input', '#parLevel3Value_IntervalMin', function (e) {
        
        changeCombo();
      
    });

    function changeCombo(){
        //se os dois campos estão nulos
        parIntervalosTypeCreate();        
    }

    function level03ValueIntervalWriter(valueMin, valueMax) {
        return "O valor aceitável deve ser menor que " + valueMin + " e maior que " + valueMax;
    }
    //$(document).on('input', '#parLevel3Value_IntervalMax', function (e) {
    //    parIntervalosTypeCreate();

    //    //se os dois campos estão nulos
    //    if($(this).val() == "" && $('#parLevel3Value_IntervalMin').val() == "")
    //    {
    //        //ocultamos
    //        $('#ParIntervalosLabel').text("").parents('tr').fadeIn();
    //        return true;
    //    }
    //        //se o primeiro campo está vazio e o segundo não
    //    else if($(this).val() == "" && $('#parLevel3Value_IntervalMin').val() != "")
    //    {
    //        $('#parLevel3Value_IntervalMin').trigger('input');
    //        return true;
    //    }
    //        //Se o segundo campo está vazio
    //    else if($('#parLevel3Value_IntervalMin').val() == "")
    //    {
    //        $('#ParIntervalosLabel').text("O valor aceitável deve ser igual ou menor que " + $(this).val()).parents('tr').fadeIn();
    //    }
    //        //se os dois campos estão preenchidos
    //    else
    //    {
    //        $('#ParIntervalosLabel').text(level03ValueIntervalWriter($('#parLevel3Value_IntervalMin').val(), $(this).val())).parents('tr').fadeIn();
    //    }
    //});
   
    function parIntervalosTypeCreate() {

        var value = "";
        if($('#selectUnidadeDeMedidas :selected').val() > 0)
            value = $('#selectUnidadeDeMedidas :selected').text();

        if ($("#parLevel3Value_IntervalMin").val() == "" && !$("#parLevel3Value_IntervalMax").val() == "") {
            var options =''
                "<option value='0'>" +
                    "O valor aceitável deve ser igual ou maior que " + $("#parLevel3Value_IntervalMax").val()+" "+ value+
                "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();

        }

        else if (!$("#parLevel3Value_IntervalMin").val() == "" && $("#parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>" +
                    "O valor aceitável deve ser igual ou maior que " + $("#parLevel3Value_IntervalMin").val()+" "+ value+
                "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();

        }

        else if (!$("#parLevel3Value_IntervalMin").val() == "" && !$("#parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>" +
                    "O valor e aceitavel quando esta entre " + $("#parLevel3Value_IntervalMin").val() + " e " + $("#parLevel3Value_IntervalMax").val() +" "+ value+
                "</option>" +
                "<option value='1'>" +
                    "O valor e aceitavel quando e menor que " + $("#parLevel3Value_IntervalMin").val() + " ou maior que " + $("#parLevel3Value_IntervalMax").val() +" "+ value+
                "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();
        } else {
            $("#parIntervalosType").parents("td").hide();
        }
    }
    $('#selectTipoInput').change(function () {

        if ($("#selectTipoInput option:selected").val() == "-1") {

            $('#selectNaoConforme').val(-1)
            $('#selectConforme').val(-1)
            $('#selectUnidadeDeMedidas').val(-1)
            $('#paramsDto_parLevel3Value_IntervalMin, #paramsDto_parLevel3Value_IntervalMax').val("")

            $('.ParIntervalos').hide();
            $('.ParBinarios').hide();
        }

        //Binários
        if ($("#selectTipoInput option:selected").val() == "1") {
            $('.ParIntervalos').hide();
            $('.ParBinarios').fadeIn();
            $('#selectUnidadeDeMedidas').val(-1);
            $('#paramsDto_parLevel3Value_IntervalMin').val("");
            $('#paramsDto_parLevel3Value_IntervalMax').val("");
            $('#parIntervalosType').empty().parents('td').hide();
        }
        //Intervalos
        if ($("#selectTipoInput option:selected").val() == "3") {
            $('.ParBinarios').hide();
            $('.ParIntervalos').fadeIn();
            $('#selectConforme').val(-1);
            $('#selectNaoConforme').val(-1);
        }
    });

    $('#selectTipoInput').change();

    $('#btnAddFrequenciaReincidenciaLevel3').click(function (e) {
    
        e.preventDefault();
    
        var NcNumber = $('#inputNumeroNCLevel3').val();
        var Vigencia = $('#inputVigenciaLevel3').val();
        var idFrequencia = $('#selectFrequenciaReincidenciaLevel3').val()
        var includeItem = true;
    
        if (includeItem == true) {
            var indexValue = $('#tableRepetitionLevel3 tbody tr').length;
    
            var inputHidden = '<input class="counterRegraReincidenciaClass" type="hidden" name="paramsDto.listParRelapseDto[' + indexValue + '].NcNumber" value="' + NcNumber + '" />' +
                              '<input class="LocalLevel3Class" type="hidden" name="paramsDto.listParRelapseDto[' + indexValue + '].EffectiveLength" value="' + Vigencia + '" />' +
                              '<input class="LocalLevel3Class" type="hidden" name="paramsDto.listParRelapseDto[' + indexValue + '].ParFrequency_Id" value="' + idFrequencia + '" />';
    
            var elemento = $('<tr><td>' + 'Regra ' + (indexValue + 1) + " </td><td> " + NcNumber + " </td><td> " + Vigencia + " </td><td> " + $('#selectFrequenciaReincidenciaLevel3 option:selected').text() + inputHidden + '</td><td><button type="button" class="btn btn-danger btn-xs pull-right" id="btnRemoverFrequenciaReincidenciaLevel3"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>' + '</td><tr>');
            $('#tableRepetitionLevel3 tbody').append(elemento);
            $('#selectFrequenciaReincidenciaLevel3').prop('selectedIndex', 0);
            $('#inputNumeroNCLevel3, #inputVigencia').val("");
            $('#inputNumeroNCLevel3').focus();
    
            updateAllTables();
        }
    
    });

    $(document).ready(function () {

        updateAllTables();

        $('[data-toggle="popover"]').popover();

        ///initialize form
        initialFormLevel3 = $($('form')[2]).clone();

        $('[data-toggle="popover"]').popover();
    });

</script>
