@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@using DTO
<!--MODAL-->

<div id="newEditCabecalho">
    @using (Html.BeginForm())
    {
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <table class="table-erp">
                        <tbody>
                            <tr>
                                @Table.GerarColuna(@Html.DropDownList("headerLevel", Model.paramsDdl.DdlparLevelDefinition, Model.paramsDto.parHeaderFieldDto.ParLevelDefiniton.Name, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.field_level), Table.PosicaoLabel.top, @Html.ErrorManual("nivelCampoCabecalho", "O Nível do Campo deve ser selecionado"), null)
                                @Table.GerarColuna(@Html.DisplayFor(m => m.paramsDto.parHeaderFieldDto.ParFieldType.Description), @Html.Label(Resources.Resource.type), Table.PosicaoLabel.top, @Html.ErrorManual("tipoCampoCabecalho", "O campo Tipo deve ser selecionado para Nível do Campo"), null)
                                @Table.GerarColuna(@Html.TextBoxFor(m => Model.paramsDto.parHeaderFieldDto.Name, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.field_name), Table.PosicaoLabel.top, @Html.ErrorManual("nomeCampoCabecalho", "O campo Nome deve ser preenchido para Nível do Campo"), null)
                                @Table.GerarColunaCheckbox(@Html.EditorFor(m => m.paramsDto.parHeaderFieldDto.LinkNumberEvaluetion, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.link_number_evaluation), Table.PosicaoLabel.top, null, null)
                            </tr>
                            @if (@Model.paramsDto.parHeaderFieldDto.ParFieldType.Id == 1)
                            {
                                foreach (var i in Model.paramsDto.parHeaderFieldDto.ParMultipleValues)
                                {
                                    @Table.GerarColuna(@Html.EditorFor(r => i.Description, new { htmlAttributes = new { @value = 0, @type = "text", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.option), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaNameCabecalho", "O campo Opção deve ser preenchido para o Cabeçalho."), null)
                                    @Table.GerarColunaButton(@Html.EditorFor(r => i.PunishmentValue, new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.punishment_value), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaPunishmentValueCabecalho", "O campo Punição/Premiação deve ser selecionado para o Cabeçalho."), button: "<button class='btn btn-primary btn-sm' type='button'><i class='fa fa-plus' aria-hidden='true'></i></button>")
                                }
                            }
                            @if (@Model.paramsDto.parHeaderFieldDto.ParFieldType.Id == 3)
                            {
                                foreach (var i in Model.paramsDto.parHeaderFieldDto.ParMultipleValues)
                                {
                                <tr class="row" id="positivo">
                                    <td>
                                        @Table.GerarColuna(@Html.EditorFor(r => i.Description, new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.punishment_value), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaPunishmentValueCabecalho", "O campo Punição/Premiação deve ser selecionado para o Cabeçalho."))
                                        @Html.ErrorManual("punishmentNameCabecalho1", "O campo Nome deve ser preechido para o Cabecalho.")
                                    </td>
                                    <td>
                                        @Table.GerarColunaButton(@Html.EditorFor(r => i.PunishmentValue, new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.punishment_value), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaPunishmentValueCabecalho", "O campo Punição/Premiação deve ser selecionado para o Cabeçalho."), button: "<button class='btn btn-primary btn-sm' type='button'><i class='fa fa-plus' aria-hidden='true'></i></button>")
                                        @Html.ErrorManual("punishmentValueCabecalho1", "O campo Punição/Premiação deve ser selecionado para o Cabecalho.")
                                    </td>
                                </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>
<script language="javascript" type="text/javascript">
    var config = @Html.Raw(Json.Encode(GlobalConfig.Eua));


</script>
