@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{
    var level = Model.levelControl;
    var id = "level" + Model.levelControl + "_reincidencia_accordion";
    var id2 = "#level" + Model.levelControl + "__reincidencia_accordion";
    var id3 = "#level" + Model.levelControl + "__reincidencia_collapse";
    var id4 = "level" + Model.levelControl + "__reincidencia_collapse";
    var click = "ReincidenciaL" + Model.levelControl + ".adiciona()";
}
@*Reincidencia*@
<div class="panel-group accordion" id="@id">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="@id2" href="@id3" aria-expanded="false"> @Resources.Resource.repetition</a>
            </h4>
        </div>
        <div id="@id4" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">
                <table class="table-erp" id="camposRencidencia">
                    <tbody>
                        <tr class="row">
                            @Table.GerarColuna(@Html.TextBox("inputNumeroNC", null, htmlAttributes: new { @class = "form-control input-sm", @type = "number" })
                                                , @Html.Label(Resources.Resource.number_nc)
                                                , Table.PosicaoLabel.top)
                            @Table.GerarColuna(@Html.TextBox("inputVigencia", null, htmlAttributes: new { @class = "form-control input-sm", @type = "number"  })
                                                , @Html.Label(Resources.Resource.validation)
                                                , Table.PosicaoLabel.top)
                            @Table.GerarColunaButton(@Html.DropDownList("selectFrequenciaReincidencia", Model.paramsDdl.DdlFrequency, htmlAttributes: new {  @class = "form-control input-sm" })
                                                , @Html.Label(Resources.Resource.frequency)
                                                , Table.PosicaoLabel.top
                                                , button: "<button type=\"button\" id=\"\" onclick=\"" + @click + "; \" class=\"btn btn-primary btn-sm\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>")
                        </tr>
                    </tbody>
                </table>

                <table id="tableReincidencia" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Reincidencia:">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.number_nc</th>
                            <th>@Resources.Resource.validation</th>
                            <th>@Resources.Resource.rule</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
        </div>
    </div>
</div>


<script>

    var levelControl = @Html.Raw(Json.Encode(@Model.levelControl));
    function atribuiLevelDivCounter (){

        var paramsDto = @Html.Raw(Json.Encode(@Model.paramsDto));
        var levelDomain;
        var listSalvo;

        if(levelControl == 1){
            levelDomain = "newLevel1Modal";
            listSalvo = paramsDto.parLevel1Dto.listParRelapseDto;//
            ReincidenciaL1 = getCounterObject(levelDomain, listSalvo);//
            ReincidenciaL1.carregaDadosDoDb();//
        }
        if(levelControl == 2){
            levelDomain = "newLevel2Modal";
            listSalvo = paramsDto.parLevel2Dto.listParRelapseDto;//
            ReincidenciaL2 = getCounterObject(levelDomain, listSalvo);//
            ReincidenciaL2.carregaDadosDoDb();//
        }
        if(levelControl == 3){
            levelDomain = "newLevel3Modal";
            listSalvo = paramsDto.parLevel3Dto.listParRelapseDto;//
            ReincidenciaL3 = getCounterObject(levelDomain, listSalvo);//
            ReincidenciaL3.carregaDadosDoDb();//
        }
    }

    atribuiLevelDivCounter();
    function getCounterObject (levelDomain, listSalvo) {
        return {
            /*Setup*/
            levelControl: levelControl,
            level: levelDomain,
            listObjSalvo: listSalvo,
            idTable: 'tableReincidencia',//
            tdsNames: ['NcNumber',  'EffectiveLength', 'parFrequencyName',  'btn'],//
            getObjAdd: function(isEdit, obj){
                if(isEdit != undefined){
                    obj.ParFrequency_Id = $('#' + isEdit + ' #selectFrequenciaReincidencia :selected').val();
                    obj.parFrequencyName = $('#' + isEdit + ' #selectFrequenciaReincidencia :selected').text();
                    obj.NcNumber = $('#' + isEdit + ' #inputNumeroNC').val();
                    obj.EffectiveLength = $('#' + isEdit + ' #inputVigencia').val();
                    return obj;
                }else{
                    return {/*Objeto*/
                        ParFrequency_Id: $('#' + this.level + ' #selectFrequenciaReincidencia :selected').val(),
                        parFrequencyName: $('#' + this.level + ' #selectFrequenciaReincidencia :selected').text(),
                        NcNumber: $('#' + this.level + ' #inputNumeroNC').val(),
                        EffectiveLength: $('#' + this.level + ' #inputVigencia').val(),
                        IsActive: true,
                    };
                }
            },
            veifyAdd: function(isEdit) {
                var seletorTato = !!isEdit ? isEdit : this.level;
                /*Valida se pode criar o objeto*/
                if($('#' + seletorTato + ' #selectFrequenciaReincidencia :selected').val() <= 0){
                    alert("Por favor selecione a frequência.");
                    return;
                }

                if($('#' + seletorTato + ' #inputNumeroNC').val().replace(/[^0-9.]/g, '') == ""){
                    alert("Por preencha o numero de não conformidades.");
                    return;
                }

                if($('#' + seletorTato + ' #inputVigencia').val().replace(/[^0-9.]/g, '') == ""){
                    alert("Por favor preencha a vigência.");
                    return;
                }
            },
            incluiNoObjetoParaSubmit: function(dados){

                var level = this.levelControl;
                $('#' + this.level + ' #' + this.idTable + ' > tbody > tr ').each(function(c, obj){

                    var o = $(obj).data();
                    //#edit
                    if((o.Id != null || o.Id != undefined) && o.Id > 0){
                        dados["paramsDto.parLevel" + level + "Dto.listParRelapseDto[" + c + "].Id"] = o.Id;
                    }

                    dados["paramsDto.parLevel" + level + "Dto.listParRelapseDto[" + c + "].ParFrequency_Id"] = o.ParFrequency_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listParRelapseDto[" + c + "].NcNumber"] = o.NcNumber;
                    dados["paramsDto.parLevel" + level + "Dto.listParRelapseDto[" + c + "].EffectiveLength"] = o.EffectiveLength;
                    dados["paramsDto.parLevel" + level + "Dto.listParRelapseDto[" + c + "].IsActive"] = o.IsActive;
                    //
                });

            },
            carregaDadosDoDb: function(){
                var id = this.level + ' #' + this.idTable;
                var tdNamess = this.tdsNames;
                if( this.listObjSalvo != null){ /*Carrega regras de NC*/
                    this.listObjSalvo.forEach(function(o, c){
                        o["parFrequencyName"] = o.parFrequency.Name;
                        crudNxN.adiciona(o,  id, tdNamess);
                    });
                }
            },
            /*Fim Setup*/
            adiciona: function() {
                this.veifyAdd();
                var object = this.getObjAdd();
                crudNxN.adiciona(object, this.level + ' #' + this.idTable, this.tdsNames);
            },
        };
    }

</script>