@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@{
    ViewBag.Title = "ParLeve2";
    var url = Url.Action("AddUpdateLevel2", "api/ParamsApi"); //URL relativa
    var urlGetLevel1 = Url.Action("GetParLevel2ById", "api/ParamsApi"); //URL relativa
    var urlHeaderLevel2 = Url.Action("AddRemoveParHeaderLevel2", "api/ParamsApi"); //URL relativa
    Model.levelControl = 2;



}
<div id="newLevel2Modal">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-lg-12">

                <table class="table-erp">
                    <tbody>

                        <tr class="row hide">
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Id, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level2), Table.PosicaoLabel.top, null, null)
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parEvaluationDto.ParCompany_Id, htmlAttributes: new { @Value = "1", @class = "" }), @Html.Label(Resources.Resource.level2), Table.PosicaoLabel.top, null, null)
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parSampleDto.ParCompany_Id, htmlAttributes: new { @Value = "1", @class = "" }), @Html.Label(Resources.Resource.level2), Table.PosicaoLabel.top, null, null)
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parNotConformityRuleXLevelDto.ParCompany_Id, htmlAttributes: new { @Value = "1" }), @Html.Label(Resources.Resource.level2), Table.PosicaoLabel.top, null, null)
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parNotConformityRuleXLevelDto.Level, htmlAttributes: new { @Value = "2" }), @Html.Label(Resources.Resource.level2), Table.PosicaoLabel.top, null, null)
                        </tr>

                        <tr class="row">
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Name, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level2_name), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel2Dto.Name, null, new { @class = "text-danger" }))
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Description, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level2_description), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel2Dto.Description, null, new { @class = "text-danger" }))
                        </tr>

                        <tr class="row">
                            @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel2Dto.ParDepartment_Id", Model.paramsDdl.DdlParDepartment, htmlAttributes: new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.department), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel2Dto.ParDepartment_Id, null, new { @class = "text-danger" }))
                            @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel2Dto.ParFrequency_Id", Model.paramsDdl.DdlFrequency, htmlAttributes: new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.frequency), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel2Dto.ParFrequency_Id, null, new { @class = "text-danger" }))
                        </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel2Dto.IsEmptyLevel3, new { @class = "make-switch checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_audit_of_detached_level3), Table.PosicaoLabel.left, null, Resources.Resource.allow_the_audit_of_detached_level3_popover)
                        </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel2Dto.HasShowLevel03, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.show_group_on_level3), Table.PosicaoLabel.left, null, null)
                        </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel2Dto.HasGroupLevel3, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.has_group_on_level3), Table.PosicaoLabel.left, null, null)
                        </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel2Dto.HasSampleTotal, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.has_sample_total), Table.PosicaoLabel.left, null, null)
                        </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel2Dto.IsActive, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.is_active), Table.PosicaoLabel.left, null, null)
                        </tr>

                    </tbody>
                </table>
                
                @Html.Partial("_AvaliacaoAmostra", Model)

                @if (Model.paramsDto.parLevel2Dto.cabecalhosInclusos != null)
                {
                    if (Model.paramsDto.parLevel2Dto.cabecalhosInclusos.Count > 0)
                    {
                        <div class="panel-group accordion" id="level2_header_accordion">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level2_header_accordion" href="#level2_header_collapse" aria-expanded="false"> @Resources.Resource.headers</a>
                                    </h4>
                                </div>
                                <div id="level2_header_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                    <div class="panel-body">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <th style="width:50%">Nome do Cabeçalho</th>
                                                    <th style="width:50%">Mostrar nesse nível?</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var parLevel1XHeaderField in Model.paramsDto.parLevel2Dto.cabecalhosInclusos)
                                                {
                                                    var added = 0;
                                                    <tr>
                                                        <td>@parLevel1XHeaderField.ParHeaderField.Name</td>
                                                        <td>
                                                            @if (Model.paramsDto.parLevel2Dto.cabecalhosExclusos.Count == 0)
                                                            {
                                                                <button type="button" class="btn btn-danger btn-sm" onclick="HeaderLevel2.Add(@parLevel1XHeaderField.ParHeaderField_Id, $(this));"><i class="fa fa-times"></i>  Não</button>
                                                            }
                                                            else
                                                            {
                                                                foreach (var parLevel2XHeaderField in Model.paramsDto.parLevel2Dto.cabecalhosExclusos)
                                                                {
                                                                    if (parLevel1XHeaderField.ParHeaderField.Id == parLevel2XHeaderField.ParHeaderField_Id)
                                                                    {
                                                                        added = 1;
                                                                        <button type="button" class="btn btn-primary btn-sm" onclick="HeaderLevel2.Remove(@parLevel2XHeaderField.Id, $(this));"><i class="fa fa-check"></i>  Sim</button>
                                                                    }
                                                                }
                                                                if (added == 0)
                                                                {
                                                                    <button type="button" class="btn btn-danger btn-sm" onclick="HeaderLevel2.Add(@parLevel1XHeaderField.ParHeaderField_Id, $(this));"><i class="fa fa-times"></i>  Não</button>
                                                                }
                                                            }
                                                        </td>

                                                    </tr>
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }

                @Html.Partial("_GroupXLevel", Model)

                @*/*Regra de alerta*/*@
                <div class="panel-group accordion" id="level2_nc_accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level2_nc_accordion" href="#level2_nc_collapse" aria-expanded="false"> @Resources.Resource.alert_rule</a>
                            </h4>
                        </div>
                        <div id="level2_nc_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                            <div class="panel-body">
                                <table class="table-erp">
                                    <tbody>
                                        <tr class="row">
                                            @Html.HiddenFor(m => m.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.Id)
                                            @Table.GerarColuna(
         @Html.DropDownList("paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.ParNotConformityRule_Id", Model.paramsDdl.DdlParNotConformityRule, htmlAttributes: new { @class = "form-control input-sm", @id = "selectNotConformityRule" })
         , @Html.Label(Resources.Resource.not_conformity_rule)
         , Table.PosicaoLabel.top)
                                            @Table.GerarColuna(
         @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.Value, htmlAttributes: new { @class = "form-control input-sm", type = "number", min = "0" })
         , @Html.Label(Resources.Resource.value), Table.PosicaoLabel.top)
                                            @Table.GerarColunaCheckbox(
             @Html.EditorFor(model => model.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.IsReaudit, new { @class = "make-switch checkbox-erp" })
             , @Html.Label(Resources.Resource.reaudit), Table.PosicaoLabel.top, button: "<button type='button' class='btn btn-primary btn-sm'  onclick='RegraNcL2.adiciona();'><i class='fa fa-plus' aria-hidden='true'></i></button>")

                                        </tr>
                                    </tbody>
                                </table>

                                <table id="tableRegraNc" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Regra de Alerta:">
                                    <thead>
                                        <tr>
                                            <th>Regra de Não conformidade</th>
                                            <th>Valor</th>
                                            <th>Reauditoria</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                </div>

                @Html.Partial("_ReincidenciaXLevel", Model)

                @Html.Partial("_CounterXLevel", Model)

                <button type="button" id="btnSaveNewLevel2" data-loading-text="@Resources.Resource.saving_the_level2" onclick="indexParamsLevel2.enviarDadosParaApi();" class="btn btn-warning">@Resources.Resource.save_level2</button>
            </div>
        </div>
    }
</div>

<script>

    var _PermiteEditarVinculoComTarefa = @Html.Raw(Json.Encode(Model.paramsDto.parLevel2Dto._PermiteEditarVinculoComTarefa));

    var urlHeaderLevel2 = '@Html.Raw(@urlHeaderLevel2)';

    var HeaderLevel2 = {
        object: {
            Id: 0,
            ParLevel1_Id : $('#paramsDto_parLevel1Dto_Id').val(),
            ParLevel2_Id : $('#paramsDto_parLevel2Dto_Id').val(),
            ParHeaderField_Id : 0,
            Active : 1
        },
        Add: function(idHeader, button){
            HeaderLevel2.object.ParHeaderField_Id = idHeader;
            HeaderLevel2.object.Id = 0;

            $.post(urlHeaderLevel2, HeaderLevel2.object, function(r){
                var btn = "<button type='button' class='btn btn-primary btn-sm' onclick='HeaderLevel2.Remove(\""+r.Id+"\", $(this));'><i class='fa fa-check'></i>  Sim</button>";

                $(button).replaceWith(btn);
            });
        },
        Remove: function(idHeaderLevel2, button){
            HeaderLevel2.object.Id = idHeaderLevel2;
            $.post(urlHeaderLevel2, HeaderLevel2.object, function(r){
                var btn = "<button type='button' class='btn btn-danger btn-sm' onclick='HeaderLevel2.Add(\""+r.ParHeaderField_Id+"\", $(this));'><i class='fa fa-times'></i>  Não</button>";

                $(button).replaceWith(btn);
            });
        }
    }

    var RegraNcL2 = {

        /*Setup*/
        level: 'ParLevel2',
        listObjSalvo: @Html.Raw(Json.Encode(@Model.paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto)),
        tdsNames: ['ParNotConformityRule_Name', 'Value', 'IsReauditShowTable', 'btn'],
        adiciona: function() {
            /*Valida se pode criar o objeto*/
            if($('#' + RegraNcL2.level + ' #selectNotConformityRule :selected').val() <= 0){
                alert("Por favor Selecione Regra de Não conformidade.");
                return;
            }

            if($('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val().replace(/[^0-9.]/g, '') == ""){
                alert("É necessário preencher o campo Valor da Regra de alerta.");
                return;
            }

            /*Cria o objeto*/
            var object = {/*Objeto*/
                ParNotConformityRule_Id: $('#' + RegraNcL2.level + ' #selectNotConformityRule :selected').val(),
                ParNotConformityRule_Name: $('#' + RegraNcL2.level + ' #selectNotConformityRule :selected').text(),
                Value: $('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val().replace(/[^0-9.]/g, ''),
                IsReaudit: $('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_IsReaudit').is(":checked"),
                IsReauditShowTable: $('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_IsReaudit').is(":checked") ? "Sim" : "Não",
                IsActive: true,
                //btn: crudNxN.btnRemove + crudNxN.btnEdit,
            }

            /*Conclui*/
            crudNxN.adiciona(object, RegraNcL2.level + ' #tableRegraNc', RegraNcL2.tdsNames);
        },
        incluiNoObjetoParaSubmit: function(dados){

            $('#' + RegraNcL2.level + ' #tableRegraNc > tbody > tr ').each(function(c, obj){

                var o = $(obj).data();

                if((o.Id != null || o.Id != undefined) && o.Id > 0){
                    dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].Id"] = o.Id;
                }

                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].ParNotConformityRule_Id"] = o.ParNotConformityRule_Id;
                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].ParNotConformityRule_Name"] = o.ParNotConformityRule_Name;
                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].Value"] = o.Value;
                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].IsReaudit"] = o.IsReaudit;
                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].IsReauditShowTable"] = o.IsReauditShowTable;
                dados["paramsDto.parLevel2Dto.listParNotConformityRuleXLevelDto[" + c + "].IsActive"] = o.IsActive;

            });

        },/*Ok*/
        carregaDadosDoDb: function(){
            if( RegraNcL2.listObjSalvo != null){ /*Carrega regras de NC*/
                RegraNcL2.listObjSalvo.forEach(function(o, c){
                    o["IsReauditShowTable"] = o.IsReaudit ? "Sim" : "Não";
                    o["ParNotConformityRule_Name"] = o.ParNotConformityRule.Name;
                    crudNxN.adiciona(o, RegraNcL2.level + ' #tableRegraNc', RegraNcL2.tdsNames);
                });
            }
        },/*Ok*/

    };

    $('#paramsDto_parLevel2Dto_HasGroupLevel3').on('switchChange.bootstrapSwitch', function (event, state) {
        if (state) {
            $('#level2_GroupLevel_accordion').fadeIn();
        } else {
            $('#level2_GroupLevel_accordion').fadeOut();
        }
    });


    $('#BtnAddContadorMonitoramento').click(function (e) {

        e.preventDefault();

        var idCounter = $('#selectCounter').val();
        var idLocal = $('#selectLocal').val();

        var includeItem = true;


        if (includeItem == true) {
            var indexValue = $('.counterLevel2Class').length;

            var inputHidden = '<input class="counterLevel2Class" type="hidden" name="paramsDto.listParCounterXLocalDto[' + indexValue + '].ParCounter_Id" value="' + idCounter + '" />' +
                                '<input class="LocalLevel2Class" type="hidden" name="paramsDto.listParCounterXLocalDto[' + indexValue + '].ParLocal_Id" value="' + idLocal + '" />';


            var elemento = $('<div class="HederLevel2Group" style="margin-left:30px">' + $('#selectCounter option:selected').text() + " | " + $('#selectLocal option:selected').text() + inputHidden + '<button type="button" class="btn btn-danger btn-sm pull-right" id="btnRemoveHeaderGroup"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>' + '</div>');
            $('td#HederLevel2Group').append(elemento);
            $('#selectCounter,  #selectLocal').prop('selectedIndex', 0);

            updateAllTables();
        }

    });


    $('#btnParLevel03GroupInsert').click(function (e) {
        e.preventDefault();

        var inputs = $('input[name="paramsDto.parLevel3GroupDto.Name"]');
        var input = $('#inputParLevel03Name');

        var includeItem = true;

        inputs.each(function (e) {

            if ($(this).val() == input.val()) {
                openMessageModal("Alerta", "Já cadastrou esse grupo para o input");
                //alert('Já cadastrou esse grupo para o input');
                includeItem = false;
                return false;
            }

        });
        if (includeItem == true) {
            var indexValue = $('.groupLevel03Class').length;

            var inputHidden = '<input class="groupLevel03Class" type="hidden" name="paramsDto.listParLevel3GroupDto[' + indexValue + '].Name" value="' + input.val() + '" />'

            var elemento = $('<tr class="hide"><td>' + input.val() + inputHidden + '</td><td><button type="button" class=\"btn btn-danger btn-xs pull-right\" id="btnRemoveLevel3Group"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button></td></tr>');

            $('#tableLevel3Group').append(elemento);

            if ($('select[name="paramsDto.parLevel2Selected"]').val() > 0) {
                var dados = $('#newLevel2Modal > form').serializeObject();
                $.post(AddLevel3Group, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                    if (objetoReturn.paramsDto.parLevel2Dto.Id > 0) {
                        elemento.removeClass('hide');
                        input.val("");

                    }
                });
            }
            else {
                elemento.removeClass('hide');
                input.val("");
            }

        }

        input.focus();

        updateAllTables();

    });

    /*Reincidencia*/
    var counterReincidencial2 = 0;
    function l2RemoveReincidencia(e) {
        e.parents('tr').find('input[type="hidden"]').attr("disabled", false).attr("name", e.parents('tr').find('input[type="hidden"]').attr('name') + "[" + counterReincidencial2 + "]");
        e.parents('tr').hide();
        counterReincidencial2++;
        console.log(e.parents('tr'));
        updateAllTables();
    }

    $('#l2BtnAddFrequenciaReincidencia').click(function (e) {

        e.preventDefault();
        if($('#l2SelectFrequenciaReincidencia :selected').val() <= 0){
            openMessageModal("Alerta", "É necessário selecionar a Frequência");
            //alert('É necessário selecionar a Frequência');
            return;
        }

        if($('#l2InputNumeroNC').val().length <= 0){
            openMessageModal("Alerta", "É necessário informar o Número de NC");
            //alert('É necessário informar o Número de NC');
            return;
        }

        if($('#l2InputVigencia').val().length <= 0){
            openMessageModal("Alerta", "É necessário selecionar a Vigência");
            //alert('É necessário selecionar a Vigência');
            return;
        }

        var NcNumber = $('#l2InputNumeroNC').val();
        var Vigencia = $('#l2InputVigencia').val();
        var idFrequencia = $('#l2SelectFrequenciaReincidencia').val()
        var includeItem = true;

        if (includeItem == true) {
            var indexValue = $('#l2TableRepetition tbody tr').not('.existent').length -1;

            var inputHidden = '<input class="counterRegraReincidenciaClass" type="hidden" name="paramsDto.parLevel2Dto.listParRelapseDto[' + indexValue + '].NcNumber" value="' + NcNumber + '" />' +
                              '<input class="LocalLevel2Class" type="hidden" name="paramsDto.parLevel2Dto.listParRelapseDto[' + indexValue + '].EffectiveLength" value="' + Vigencia + '" />' +
                              '<input class="LocalLevel2Class" type="hidden" name="paramsDto.parLevel2Dto.listParRelapseDto[' + indexValue + '].ParFrequency_Id" value="' + idFrequencia + '" />';

            var elemento = $('<tr><td>' + 'Regra ' + (indexValue + 1) + " </td><td> " + NcNumber + " </td><td> " + Vigencia + " </td><td> " + $('#l2SelectFrequenciaReincidencia option:selected').text() + inputHidden + '</td><td><button type="button" class="btn btn-danger btn-xs pull-right" onclick="RemoverReincidencia($(this));"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>' + '</td><tr>');
            $('#l2TableRepetition > tbody').append(elemento[0]);
            $('#l2SelectFrequenciaReincidencia').prop('selectedIndex', 0);
            $('#l2InputNumeroNC, #l2InputVigencia').val("");
            $('#l2InputNumeroNC').focus();

            updateAllTables();
        }

    });
    /*Fim Reincidencia*/

    $(document).on('click', '#btnRemoveLevel3Group', function (e) {
        e.preventDefault();
        $(this).parents('.level03Group').remove();

        updateAllTables();
    });

    $(document).ready(function () {
     
        defaults();
        loadSelect2();

        if ($('input[name="paramsDto.parLevel2Dto.HasGroupLevel3"]').is(':checked')) {
            $('#level2_group_accordion').fadeIn();
        }

        updateAllTables();

        $('[data-toggle="popover"]').popover();

        var pesoDoVinculoSelecionado = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel2Dto.pesoDoVinculoSelecionado));

        $('#pesoDefinido').html(pesoDoVinculoSelecionado);
        $('#paramsDto_parLevel3Dto_pesoDoVinculo').html(pesoDoVinculoSelecionado);

        ///initialize form
        initialFormLevel2 = $($('form')[1]).clone();

        RegraNcL2.carregaDadosDoDb();

        $('[data-toggle="popover"]').popover();

        if ($('#paramsDto_parLevel2Dto_HasGroupLevel3').is(':checked')) {
            $('#level2_GroupLevel_accordion').fadeIn();
        } else {
            $('#level2_GroupLevel_accordion').fadeOut();
        }

        if( $('#paramsDto_parLevel1Dto_Id').val() > 0 &&  $('#paramsDto_parLevel2Dto_Id').val() > 0){
            $.post(checkVinculoL1L2 + "/" + $('#paramsDto_parLevel1Dto_Id').val() + "/" + $('#paramsDto_parLevel2Dto_Id').val(), function(r) {
                //if(_PermiteEditarVinculoComTarefa){
                    if(!r){
                        $('#desVinculoLevel1').hide();
                    }else{
                        $('#desVinculoLevel1').show();
                    }
                //}
            }).fail(function (e, h, x) {
                //closeLoader();
                console.log(e);
                console.log(h);
                console.log(x);
            });
        }

        //if(_PermiteEditarVinculoComTarefa){
        //    $('#vinculoLevel1').hide();
        //    $('#desVinculoLevel1').hide();
        //}else{
        //    $('#vinculoLevel1').show();
        //    $('#desVinculoLevel1').show();
        //}

    });

</script>