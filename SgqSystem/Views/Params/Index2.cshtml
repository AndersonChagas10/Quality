@model SgqSystem.ViewModels.ParamsViewModel
@{
    ViewBag.Title = "ParLeve2";
    var url = Url.Action("AddUpdateLevel2", "api/ParamsApi"); //URL relativa
    var urlGetLevel1 = Url.Action("GetParLevel1ById", "api/ParamsApi"); //URL relativa
}

<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index2</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm())
    {
        @Html.Label("Id (para testes)");
        @Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Id);

        <div id="divCadastroMonitoramentos" style="display: table; border: 1px solid #ccc;">
        
        <div style="padding: 5px; display:inline-table;">
            <b>Nome :</b>
            @Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Name, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
        </div>
        <br>
        <div style="padding: 5px; display:inline-table;">
            <b>Descrição :</b>
            @Html.TextBoxFor(m => m.paramsDto.parLevel2Dto.Description, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
        </div>
            <div id="corpoIndicador" style="display:block; margin-top: 10px;">

                <table>

                    <tbody>
                          <tr>
                            <td>
                                <b>Departamento</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Frequencia.')">
                            </td>
                            <td>
                                @Html.DropDownList("paramsDto.parLevel2Dto.ParDepartment_Id", Model.paramsDdl.DdlParDepartment, htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectFrequencia" })
                                @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                            <option>Selecione o tipo de consolidacao</option>
                            <option>por Tarefa (level 3)</option>
                            <option>por monitormento (level 2)</option>
                            <option>por outros</option>
                            </select>*@
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <b>Frequencia</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Frequencia.')">
                            </td>
                            <td>
                                @Html.DropDownList("paramsDto.parLevel2Dto.ParFrequency_Id", Model.paramsDdl.DdlFrequency, htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectFrequencia" })
                                @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                            <option>Selecione o tipo de consolidacao</option>
                            <option>por Tarefa (level 3)</option>
                            <option>por monitormento (level 2)</option>
                            <option>por outros</option>
                            </select>*@
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <b>Permite lancamento de tarefa avulso</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                            </td>
                            <td>
                                <label class="on-off">
                                    @Html.EditorFor(model => model.paramsDto.parLevel2Dto.IsEmptyLevel3)
                                    <span><a></a></span>
                                </label>
                            </td>


                        </tr>
                        <tr>
                            <td>
                                <b>Mostra tarefas abaixo do Monitoramento</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                            </td>
                            <td>
                                <label class="on-off">
                                    @Html.EditorFor(model => model.paramsDto.parLevel2Dto.HasShowLevel03)
                                    <span><a></a></span>
                                </label>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <b>Agrupador de Tarefas USA </b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                            </td>
                            <td>
                                <label class="on-off">
                                    @Html.EditorFor(model => model.paramsDto.parLevel2Dto.HasGroupLevel3)
                                    <span><a></a></span>
                                </label>
                            </td>

                        </tr>
                        
                        <tr>
                            <td colspan="2">
                                <b>Grupo</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">                           
                                @Html.TextBox("inputParLevel03Name", null, htmlAttributes: new { @Id = "inputParLevel03Name", @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
                                <button id="btnParLevel03GroupInsert">Ok</button>
                            </td>
                        </tr>   
                        <tr>
                            <td colspan="2" id="Level03Group"></td>
                        </tr>
                        <tr style="height:100px;">
                           
                            <td>
                                <b>Mostrar contadores do Monitoramento</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                            </td>
                            <td>

                                <table>
                                    <tr>
                                        <td>Contador do Indicador:</td>
                                        <td>@Html.DropDownList("selectCounter", Model.paramsDdl.DdlParCounter_Level2, htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectCounter" })</td>
                                    </tr>
                                    <tr>
                                        <td>Local:</td>
                                        <td>@Html.DropDownList("selectLocal", Model.paramsDdl.DdlParLocal_Level2, htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectLocal" })</td>
                                    </tr>
                                </table>
                                <button id="BtnAddContadorMonitoramento" style="float:right;">Add</button>
                            </td>

                        </tr>
                        <tr>
                            <td colspan="2" id="HederLevel2Group"></td>
                        </tr>
                    </tbody>

                </table>

            </div>
            <div style="width: 100%; float: left;">
                <input type="button" value="Salvar o Indicador" onclick="indexParamsLevel2.enviarDadosParaApi();" style="font-size: small; padding: 10px; font-weight: bold;">
            </div>
        </div>

    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script>
        var url1 = '@Html.Raw(url)';
    /*
      Serializa objeto usando bind de property Name
      $('form').serializeObject();
    */
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };


    /*Inicio Submit Level1*/
    var indexParamsLevel2 = {

        enviarDadosParaApi: function (e) {
            var dados = $('form').serializeObject();

            $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                console.log(objetoReturn);
                console.log(statusmessage);
                console.log(respostaCompleta);
            });

        },
    }
    $('#BtnAddContadorMonitoramento').click(function (e) {
       
        e.preventDefault();

        var idCounter = $('#selectCounter').val();
        var idLocal = $('#selectLocal').val();
        
        var includeItem = true;

      
        if(includeItem == true)
        {
            var indexValue = $('.counterLevel2Class').length;

            var inputHidden = '<input class="counterLevel2Class" type="hidden" name="paramsDto.listParLevel3GroupDto[' + indexValue + '].Name" value="' + idCounter + '" />' +
                              '<input class="LocalLevel2Class" type="hidden" name="paramsDto.listParLevel3GroupDto[' + indexValue + '].Name" value="' + idLocal + '" />';


            var elemento = $('<div class="HederLevel2Group" style="margin-left:30px">' + $('#selectCounter option:selected').text() + " | " + $('#selectLocal option:selected').text() + inputHidden + '<button id="btnRemoveHeaderGroup">X</button>' + '</div>');
            $('td#HederLevel2Group').append(elemento);
            $('#selectCounter,  #selectLocal').prop('selectedIndex', 0);
        }



    });

    $('#btnParLevel03GroupInsert').click(function (e) {

        e.preventDefault();

        var inputs = $('input[name="paramsDto.parLevel3GroupDto.Name"]');
        var input = $('#inputParLevel03Name');

        var includeItem = true;

        inputs.each(function (e) {

            if ($(this).val() == input.val()) {
                alert('Já cadastrou esse grupo para o input');
                includeItem = false;
                return false;
            }

        });
        if (includeItem == true) {
            var indexValue = $('.groupLevel03Class').length;

            var inputHidden = '<input class="groupLevel03Class" type="hidden" name="paramsDto.listParLevel3GroupDto[' + indexValue + '].Name" value="' + input.val() + '" />'
            var elemento = $('<div class="level03Group" style="margin-left:30px">' + input.val() + inputHidden + '<button id="btnRemoveLevel3Group">X</button>' + '</div>');
            $('td#Level03Group').append(elemento);
            input.val("");
        }
        input.focus();


    });


    $(document).on('click', '#btnRemoveLevel3Group', function (e) {
        e.preventDefault();
        $(this).parents('.level03Group').remove();
    });
    /*Fim Submit Level1*/

    </script>
</body>
</html>
