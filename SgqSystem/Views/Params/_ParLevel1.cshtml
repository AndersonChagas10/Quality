@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@using DTO
<!--MODAL-->

<div id="newLevel1Modal">
    @using (Html.BeginForm())
    {

        <div class="row">
            <div class="col-lg-12">
                <table class="table-erp">
                    <tbody>
                        <tr class="row hide">
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Id, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.id), Table.PosicaoLabel.top, null, null)
                            @Table.GerarColuna(@Html.EditorFor(m => m.paramsDto.parLevel1Dto.hashKey, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.id), Table.PosicaoLabel.top, null, null)
                        </tr>
                        <tr class="row">
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Name, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level1_name), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel1Dto.Name, null, new { @class = "text-danger" }))
                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Description, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.level1_description), Table.PosicaoLabel.top, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel1Dto.Description, null, new { @class = "text-danger" }))
                        </tr>

                        @*@if (!GlobalConfig.Eua)
                        {*@
                            <tr class="row">
                                @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel1Dto.ParConsolidationType_Id", Model.paramsDdl.DdlParConsolidation, new { @class = "form-control input-sm", @id = "selectConsolidacao" })
                                       , @Html.Label(Resources.Resource.consolidation_type)
                                       , Table.PosicaoLabel.top
                                       , info: Resources.Resource.consolidation_type_popover
                                       , error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel1Dto.ParConsolidationType_Id, null, new { @class = "text-danger" }))
                                @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel1Dto.ParFrequency_Id", Model.paramsDdl.DdlFrequency, htmlAttributes: new { @class = "form-control input-sm", @id = "selectFrequencia" }), @Html.Label(Resources.Resource.frequency), Table.PosicaoLabel.top, info: Resources.Resource.frequency_popover, error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel1Dto.ParFrequency_Id, null, new { @class = "text-danger" }))
                            </tr>

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasSaveLevel2, new { @class = "make-switch checkbox-erp" }), @Html.Label(Resources.Resource.save_button_on_level2), Table.PosicaoLabel.left, null, Resources.Resource.save_button_on_level2_popover)
                            <td>
                                @*<p style="color:red; font-weight:bold;">ERRO!</p>*@
                            </td>
                        </tr>
                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasNoApplicableLevel2, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.not_applicable_on_level_2), Table.PosicaoLabel.left, null, Resources.Resource.not_applicable_on_level_2_popover)
                            <td>
                                @*<p style="color:red; font-weight:bold;">ERRO!</p>*@
                            </td>
                        </tr>
                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasAlert, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.has_alert), Table.PosicaoLabel.left, null, Resources.Resource.has_alert_popover)
                        </tr>

                        @if (!GlobalConfig.Eua)
                        {
                            <tr class="row">
                                @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.haveRealTimeConsolidation, new { @class = "form-control checkbox-erp" }), @Html.Label(@Resources.Resource.has_real_time_consolidation), Table.PosicaoLabel.left, null, Resources.Resource.defines_consolidation_indicator)
                            </tr>
                            <tr class="row RealTimeConsolitationUpdate padding-left" style="display:none">
                                @Table.GerarColunaCheckbox(@Html.TextBox("paramsDto.parLevel1Dto.RealTimeConsolitationUpdate", Model.paramsDto.parLevel1Dto.RealTimeConsolitationUpdate, new { @class = "form-control checkbox-erp integer" }), @Html.Label(Resources.Resource.time_interval_consolidation, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, Resources.Resource.time_interval_above_item)
                            </tr>
                        }

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasGroupLevel2, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.has_group_level2), Table.PosicaoLabel.left, null, Resources.Resource.has_group_level2)
                        </tr>
                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecific, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_specific_register_by_unit), Table.PosicaoLabel.left, null, Resources.Resource.allow_specific_register_by_unit_popover)
                        </tr>
                        <tr class="row groupCadastroEspecificoUnidade padding-left hidden" style="display:none">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificHeaderField, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_field_edition_of_the_header, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr class="row groupCadastroEspecificoUnidade padding-left" style="display:none">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberEvaluetion, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_evaluation_number, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr class="row groupCadastroEspecificoUnidade padding-left" style="display:none">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberSample, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_sample_number, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr class="row groupCadastroEspecificoUnidade padding-left" style="display:none">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificLevel3, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_level3_connection, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, Resources.Resource.allow_the_edition_of_the_level3_connection_popover)
                        </tr>
                        <tr class="row groupCadastroEspecificoUnidade padding-left" style="display:none">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificGoal, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_goal_of_the_level1_by_unit, new { @class = "padding-left" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr class="row">
                            <!-- Table.GerarColunaRadioButton(Html.Label(Resources.Resource.standard), Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsRuleConformity, "true", new { class = "icheck" }), Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsRuleConformity, "false", new { class = "icheck" }), Resources.Resource.conform, Resources.Resource.not_conform, Table.PosicaoLabel.top, null, null)-->
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsRuleConformity, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.standard, new { @class = "" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr id="registerTotalEv"class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsFixedEvaluetionNumber, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.register_total_evaluated, new { @class = "" }), Table.PosicaoLabel.left, null, null)
                        </tr>
                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsLimitedEvaluetionNumber, new { @class = "form-control checkbox-erp", @checked = "checked" }), @Html.Label(Resources.Resource.limited_number_of_evaluations), Table.PosicaoLabel.left, null, null)
                        </tr>

                        @if (!GlobalConfig.Eua)
                        {
                            <tr class="row">
                                @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasCompleteEvaluation, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.hascompleteevaluation), Table.PosicaoLabel.left, null, null)
                            </tr>
                        }

                        <tr class="row">
                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsActive, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.is_active), Table.PosicaoLabel.left, null, null)
                        </tr>

                        @*<tr class="row">
                                @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsActive, new { @class = "form-control checkbox-erp", @checked = "" }), @Html.Label(Resources.Resource.is_active), Table.PosicaoLabel.left, null, null)
                            </tr>*@

                    </tbody>
                </table>

                @{
                    Model.levelControl = 1;
                }

                @*Clusters*@
                @Html.Partial("_ClusterXLevel", Model)

                @*Meta*@
                @Html.Partial("_Meta", Model)

                @*Cabecalhos*@
                <div class="panel-group accordion" id="level1_header_accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_header_accordion" href="#level1_header_collapse" aria-expanded="false"> @Resources.Resource.header_fields </a>
                            </h4>
                        </div>
                        <div id="level1_header_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                            <div class="panel-body">
                                @*Obj cabecalho*@
                                <table id="CamposDoCabecalho" class="table-erp">
                                    <tbody>
                                        <tr class="row">
                                            @Table.GerarColuna(@Html.DropDownList("headerLevel", Model.paramsDdl.DdlparLevelDefinition, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.field_level), Table.PosicaoLabel.top, @Html.ErrorManual("nivelCampoCabecalho", "O Nível do Campo deve ser selecionado"), null)
                                            @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parHeaderFieldDto.Name, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.field_name), Table.PosicaoLabel.top, @Html.ErrorManual("nomeCampoCabecalho", "O campo Nome deve ser preenchido para Nível do Campo"), null)
                                            @Table.GerarColuna(@Html.DropDownList("parFieldType", Model.paramsDdl.DdlParFieldType, new { @class = "form-control input-sm" }), @Html.Label(Resources.Resource.type), Table.PosicaoLabel.top, @Html.ErrorManual("tipoCampoCabecalho", "O campo Tipo deve ser selecionado para Nível do Campo"), null)
                                            @Table.GerarColunaCheckbox(@Html.EditorFor(m => m.paramsDto.parHeaderFieldDto.LinkNumberEvaluetion, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.link_number_evaluation), Table.PosicaoLabel.top, null, null)
                                        </tr>
                                    </tbody>
                                </table>
                                @*Obj cabecalho inputs para: multipla escolha, binario*@
                                <div id="allObjCamposCabecalho">

                                    @*Multipla Escolha*@
                                    <div id="objMultiplaEscolha" style="display:none;">
                                        <table id="tblOpcaoMultiplaEscolha">
                                            <tbody>
                                                <tr class="row">
                                                    @Table.GerarColuna(@Html.Editor("objMultiplaEscolhaName", new { htmlAttributes = new { @value = 0, @type = "text", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.option), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaNameCabecalho", "O campo Opção deve ser preenchido para o Cabeçalho."), null)
                                                    @Table.GerarColunaButton(@Html.Editor("objMultiplaEscolhaPunishmentValue", new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.punishment_value), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaPunishmentValueCabecalho", "O campo Punição/Premiação deve ser selecionado para o Cabeçalho."), button: "<button class='btn btn-primary btn-sm' type='button' id='btnIncluirMultiplaEscolha' onclick='Cabecalhos.IncluirMultiplaEscolha();'><i class='fa fa-plus' aria-hidden='true'></i></button>")

                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                    @*Binario*@
                                    <div id="objBinario" style="display:none;">
                                        <table id="tblBinario">
                                            <tbody>
                                                <tr class="row">
                                                    <td class="td-erp"></td>
                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.value))
                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.punishment_value), Resources.Resource.punishment_value_popover)
                                                </tr>
                                                <tr class="row" id="positivo">
                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.positive))
                                                    <td>
                                                        <input type="text" id="objBinarioPunishmentName1" class="form-control input-sm">
                                                        @Html.ErrorManual("punishmentNameCabecalho1", "O campo Nome deve ser preechido para o Cabecalho.")
                                                    </td>
                                                    <td>
                                                        <input type="number" id="objBinarioPunishmentValue1" class="form-control input-sm" value="0">
                                                        @Html.ErrorManual("punishmentValueCabecalho1", "O campo Punição/Premiação deve ser selecionado para o Cabecalho.")
                                                    </td>
                                                </tr>
                                                <tr class="row" id="negativo">
                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.negative))
                                                    <td>
                                                        <input type="text" id="objBinarioPunishmentName2" class="form-control input-sm">
                                                        @Html.ErrorManual("punishmentNameCabecalho2", "O campo Nome deve ser preechido para o Cabecalho.")
                                                    </td>
                                                    <td>
                                                        <input type="number" id="objBinarioPunishmentValue2" class="form-control input-sm" value="0">
                                                        @Html.ErrorManual("punishmentValueCabecalho2", "O campo Punição/Premiação deve ser selecionado para o Cabecalho.")
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-primary btn-sm margin-button" type="button" id="btnIncluirCluster" onclick="Cabecalhos.IncluirBinario();"><i class="fa fa-plus" aria-hidden="true"></i></button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                    @*Obj Texto*@
                                    <div id="objTexto" style="display:none;">
                                        @*@Table.GerarColuna(@Html.Editor("objTextoName", new { htmlAttributes = new { @value = 0, @type = "text", @style = "max-width: 200px;", @class = "form-control input-erp" } }), @Html.Label(Resources.Resource.option), Table.PosicaoLabel.top, @Html.ErrorManual("objTextoName", "*"), null)*@
                                        <input class="btn btn-primary btn-sm margin-button" type="button" value="Incluir Campo Texto" id="btnIncluirTexto" onclick="Cabecalhos.IncluirSalvarTexto();" />
                                    </div>

                                    @*Obj Numerico*@
                                    <div id="objNumerico" style="display:none;">
                                        <input class="btn btn-primary btn-sm margin-button" type="button" value="Incluir Campo Numerico" id="btnIncluirNumerico" onclick="Cabecalhos.IncluirSalvarNumerico();" />
                                    </div>

                                    @*Obj Data*@
                                    <div id="objData" style="display:none;">
                                        <input class="btn btn-primary btn-sm margin-button" type="button" value="Incluir Campo Data" id="btnIncluirData" onclick="Cabecalhos.IncluirSalvarTexto(true);" />
                                    </div>

                                    @*Obj Hora*@
                                    <div id="objHora" style="display:none;">
                                        teste
                                        <input class="btn btn-primary btn-sm margin-button" type="button" value="Incluir Campo Hora" id="btnIncluirHora" onclick="Cabecalhos.IncluirSalvarTexto(true);" />
                                    </div>

                                    @*Obj Hora*@
                                    <div id="objIntegracoes" style="display:none;">
                                        <input class="btn btn-primary btn-sm margin-button" type="button" value="Incluir Campo Integrações" id="btnIncluirIntegracoes" onclick="Cabecalhos.IncluirSalvarIntegracoes(true);" />
                                    </div>

                                    @*tabela cabecalho itens inputados*@
                                    <div id="divCamposCabecalhoIncluidos" style="display:none;">
                                        <table id="camposCabecalhoIncluidos" class="">
                                            <thead>
                                                <tr>
                                                    @*<th>Cod.</th>*@
                                                    <th>@Resources.Resource.field_level</th>
                                                    <th>@Resources.Resource.name</th>
                                                    <th>@Resources.Resource.linked</th>
                                                    <th>@Resources.Resource.type</th>
                                                    <th>@Resources.Resource.options</th>
                                                    <th>@Resources.Resource.value</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                            <tfoot>
                                                <tr>
                                                    @*<th></th>*@
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>


                                    @*Btn salvar cabecalho*@
                                    <div style="width: 100%; float: left;" id="btnIncluirCabecalho">
                                        <input type="button" class="btn btn-primary btn-sm margin-button" id="salvarCabecalho" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                        <div id="salvarCabecalho1Div">
                                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsRequiredMultipleValue, new { @class = "form-control checkbox-erp" }), @Html.Label("É Obrigatório: ", new { @class = "padding-left" }), Table.PosicaoLabel.left, null, null, null)
                                            <input type="button" class="btn btn-primary btn-sm margin-button" id="salvarCabecalho1" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                        </div>
                                        <input type="button" class="btn btn-primary btn-sm margin-button" id="salvarCabecalho2" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                        <input type="button" class="btn btn-primary btn-sm margin-button" id="salvarCabecalho3" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                    </div>

                                    @*Cabecalho Preview Edicao*@
                                    <div id="cabecalhoPreviewEDICAO" class="table">

                                        <div id="alteracao" style="padding: 8px;">


                                        </div>
                                    </div>


                                    @*Cabecalho Preview inclusao*@
                                    <div id="cabecalhoPreview" class="table">
                                        <table id="tableCabecalhosPreview" class="table">
                                            <thead>
                                                <tr>
                                                    <th style="width:20%">@Resources.Resource.field_level</th>
                                                    <th style="width:20%">@Resources.Resource.name</th>
                                                    <th style="width:15%">@Resources.Resource.type</th>
                                                    <th style="width:10%">@Resources.Resource.preview</th>
                                                    <th style="width:5%"></th>
                                                    <th style="width:15%">@Resources.Resource.required</th>
                                                    <th style="width:15%">@Resources.Resource.pattern</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.paramsDto.parLevel1Dto.cabecalhosInclusos != null)
                                                {
                                                    foreach (var parLevel1XHeaderField in Model.paramsDto.parLevel1Dto.cabecalhosInclusos)
                                                    {

                                                        <tr class="alteracao">
                                                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 1)
                                                            {
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>

                                                                    @Html.DropDownList("DropDownList", parLevel1XHeaderField.ParHeaderField.DropDownList, htmlAttributes: new { @class = "form-control input-sm fixed-width", @id = parLevel1XHeaderField.ParHeaderField.Id })
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @disabled = "disabled" })
                                                                </td>

                                                            }


                                                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 3)
                                                            {
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    @foreach (var radioOpt in parLevel1XHeaderField.ParHeaderField.ParMultipleValues)
                                                                    {
                                                                        <label>@radioOpt.Name</label>
                                                                        @Html.RadioButton("removerParHeaderField", true, new { @class = "" });
                                                                    }
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                                                            }

                                                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 4)
                                                            {
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    @Html.TextBox("a", null, new { @class = "fixed-width form-control input-sm" })
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                                                            }

                                                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 5)
                                                            {
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    <input type="number" class="fixed-width form-control input-sm" />
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                                                            }
                                                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 6)
                                                            {
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    <input type="text" class="dataInput active form-control input-sm">
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                                                            }
                                                            <td>
                                                                <button type="button" class="btn btn-danger btn-xs" onclick="Cabecalhos.RemoveCabecalhoEDICAO($(this));"><i class="fa fa-times"></i></button>
                                                            </td>
                                                            <td>
                                                                <select id="parLevel1XHeaderField_ParHeaderField_IsRequired" class="form-control input-sm" onchange="Cabecalhos.SetRequired($(this), @parLevel1XHeaderField.ParHeaderField.Id);">
                                                                    @if (parLevel1XHeaderField.ParHeaderField.IsRequired != null)
                                                                    {
                                                                        if (parLevel1XHeaderField.ParHeaderField.IsRequired.Value)
                                                                        {
                                                                            <option value="0">@Resources.Resource.no</option>
                                                                            <option value="1" selected>@Resources.Resource.yes</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="0" selected>@Resources.Resource.no</option>
                                                                            <option value="1">@Resources.Resource.yes</option>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="0" selected>@Resources.Resource.no</option>
                                                                        <option value="1">@Resources.Resource.yes</option>
                                                                    }
                                                                </select>
                                                            </td>
                                                            <td>
                                                                @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 1)
                                                                {
                                                                    <div class="input-group">
                                                                        <div class="input-group-btn">
                                                                            <select class="form-control input-sm" id="@parLevel1XHeaderField.ParHeaderField_Id">
                                                                                <option value="0" selected>Nenhum</option>
                                                                                @foreach (var radioOpt in parLevel1XHeaderField.ParHeaderField.ParMultipleValues)
                                                                                {
                                                                                    if (radioOpt.IsDefaultOption == true)
                                                                                    {
                                                                                        <option value="@radioOpt.Id" selected>@radioOpt.Name</option>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <option value="@radioOpt.Id">@radioOpt.Name</option>
                                                                                    }
                                                                                }
                                                                            </select>
                                                                            <button type="button" onclick="Cabecalhos.SetMultipleDefault($(this));" class="btn btn-default btn-sm"><i class="fa fa-check" aria-hidden="true"></i></button>
                                                                        </div>
                                                                    </div>
                                                                }

                                                            </td>



                                                        </tr>
                                                    }
                                                }

                                            </tbody>
                                            <tfoot>

                                            </tfoot>
                                        </table>

                                        <div id="textPreview"></div>
                                        <div id="numericPreview"></div>
                                        <div id="multiplePreview"></div>
                                        <div id="binPreview"></div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.Partial("_CounterXLevel", Model)

                @*Regra de NC*@
                <div class="panel-group accordion" id="level1_nc_accordion">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_nc_accordion" href="#level1_nc_collapse" aria-expanded="false"> @Resources.Resource.alert_rule</a>
                            </h4>
                        </div>
                        <div id="level1_nc_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                            <div class="panel-body">
                                <table class="table-erp">
                                    <tbody>
                                        <tr class="row">
                                            @Html.HiddenFor(m => m.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.Id)
                                            @Table.GerarColuna(
                                    @Html.DropDownList("paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.ParNotConformityRule_Id", Model.paramsDdl.DdlParNotConformityRule, htmlAttributes: new { @class = "form-control input-sm", @id = "selectNotConformityRule" })
                                    , @Html.Label(Resources.Resource.not_conformity_rule)
                                    , Table.PosicaoLabel.top)
                                            @Table.GerarColuna(
                                    @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.Value, htmlAttributes: new { @class = "form-control input-sm", type = "number", min = "0" })
                                    , @Html.Label(Resources.Resource.value), Table.PosicaoLabel.top)
                                            @Table.GerarColunaCheckbox(
                                    @Html.EditorFor(model => model.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto.IsReaudit, new { @class = "make-switch checkbox-erp" })
                                    , @Html.Label(Resources.Resource.reaudit), Table.PosicaoLabel.top, button: "<button type='button' class='btn btn-primary btn-sm' onclick='RegraNcL1.adiciona();'><i class='fa fa-plus' aria-hidden='true'></i></button>")

                                        </tr>
                                    </tbody>
                                </table>

                                <table id="tableRegraNc" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Regra de Alerta:">
                                    <thead>
                                        <tr>
                                            <th>@Resources.Resource.not_conformity_rule</th>
                                            <th>@Resources.Resource.value</th>
                                            <th>@Resources.Resource.reaudit</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                </div>

                @Html.Partial("_ReincidenciaXLevel", Model)


                <button type="button" data-loading-text="@Resources.Resource.saving_the_level1" id="btnSaveNewLevel1" onclick="indexParamsLevel1.enviarDadosParaApi();" class="btn btn-primary">@Resources.Resource.save_level1</button>
            </div>
        </div>
                    }
</div>


<script>
    
    var config = @Html.Raw(Json.Encode(GlobalConfig.Eua));
    
    $(document).ready(function() {
        if(config){
            $('#registerTotalEv').hide();
            if($('#level1Title').html().indexOf("New") > -1){
                $('#level1Title').html("Level 1");
            }
        }
    })

    $('#paramsDto_parLevel1Dto_IsSpecific').on('switchChange.bootstrapSwitch', function (event, state) {
        if (state) {
            $('.groupCadastroEspecificoUnidade').fadeIn();
        } else {
            $('.groupCadastroEspecificoUnidade').fadeOut();
        }
    });

    $('#paramsDto_parLevel1Dto_haveRealTimeConsolidation').on('switchChange.bootstrapSwitch', function (event, state) {
        if (state) {
            $('.RealTimeConsolitationUpdate').fadeIn();
        } else {
            $('.RealTimeConsolitationUpdate').fadeOut();
        }
    });



    var Cabecalhos = {
        SetMultipleDefault: function(elem){
            var idMultiple = $(elem).siblings('select').children('option:selected').val();
            var idHeader = $(elem).siblings('select').attr('id');
            $.post(urlSetDefaultCCAB + "/" + idHeader+"/"+idMultiple, function(r){
                console.log(r);
                if(r){
                    if(r.IsDefaultOption == true){
                        openMessageModal("@Resources.Resource.success", r.Name+" se tornou o valor padrão.");
                    }else{
                        openMessageModal("@Resources.Resource.success", "@Resources.Resource.there_id_not_a_pattern_value");
                    }
                }
            });
        },
        SetRequired: function(e, id){
            $.post(urlSetRequiredCCAB + "/" + id+"/"+parseInt($(e).val()), function(r){
                if(r){
                    $(e).empty().append("<option value='0'>"+"@Resources.Resource.no"+"</option><option value='1' selected>"+@Resources.Resource.yes+"</option>");
                }else{
                    $(e).empty().append("<option value='0' selected>"+"@Resources.Resource.no" + "</option><option value='1'>"+@Resources.Resource.yes+"</option>");
                }
            });
        },
        BtnExcluir:  function(){ return '<button type="button" class="btn btn-danger btn-xs" name="" onclick="Cabecalhos.RemoverDaTabela($(this), ' + Cabecalhos.ParMultiplaEscolhaOpcoes.length + ');"><i class="fa fa-times"></i></button>'; },
        BtnExcluir2: function(){ return '<button type="button" class="btn btn-danger btn-xs" name="" onclick="Cabecalhos.RemoverDaTabela($(this), ' + Cabecalhos.ParBinario.length +', true);"><i class="fa fa-times"></i></button>'; },
      
        ListaDeCabecalhos: [],

        listParHeaderFieldDto: [],

        ValidaCamposCabecalho: function (isValid) {

            if ($('#headerLevel option:selected').val() == -1) {
                $('#nivelCampoCabecalho').show();
                isValid = false;
            }

            if ($('#parFieldType option:selected').val() == -1) {
                $('#tipoCampoCabecalho').show();
                isValid = false;
            }

            if ($('#paramsDto_parHeaderFieldDto_Name').val().length == 0) {
                $('#nomeCampoCabecalho').show();
                isValid = false;
            }

            return isValid;
        },
        tableMultiplaEscolha: $('#camposCabecalhoIncluidos').DataTable({
            info: false,
            searching: false,
            paging: false,
            ordering: true,
        }),
        hideAllObj: function () {

            /*Esconde campos*/
            $('#objMultiplaEscolha').hide();
            $('#objBinario').hide();
            $('#salvarCabecalho').hide().val('');
            $('#btnIncluirCabecalho input').hide();
            $('#btnIncluirTexto').hide();
            $('#btnIncluirNumerico').hide();
            $('#btnIncluirData').hide();
            $('#btnIncluirHora').hide();
            $('#btnIncluirIntegracoes').hide();
            $('#salvarCabecalho1Div').hide();
            $('#objIntegracoes').hide();

            /*Esconde mensagens*/
            Cabecalhos.EscondeMensagemValidacaoCabecalho();
        },
        EscondeMensagemValidacaoCabecalho: function () {
            $('#nivelCampoCabecalho').hide();
            $('#tipoCampoCabecalho').hide();
            $('#nomeCampoCabecalho').hide();

            $('#multiplaEscolhaNameCabecalho').hide();
            $('#multiplaEscolhaPunishmentValueCabecalho').hide();
            $('#punishmentNameCabecalho1').hide();
            $('#punishmentNameCabecalho2').hide();
            $('#punishmentValueCabecalho1').hide();
            $('#punishmentValueCabecalho2').hide();
        },
        TipoChange: function () {

            var escolhaSelecionada = parseInt($('#parFieldType option:selected').val());
            Cabecalhos.hideAllObj();
            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            Cabecalhos.ParMultiplaEscolhaOpcoes = [];
            Cabecalhos.ParBinario = [];

            switch (escolhaSelecionada) {
                case 1: //Multipla Escolha
                    Cabecalhos.ShowMutiplaEscolha();
                    break;
                case 2:
                    Cabecalhos.ShowIntergacoes();
                    break;
                case 3: //Binario
                    Cabecalhos.ShowBinario();
                    break;
                case 4: //Texto
                    Cabecalhos.ShowTexto();
                    break;
                case 5:
                    Cabecalhos.ShowNumerico();
                    break;
                case 6:
                    Cabecalhos.ShowData();
                    break;
                case 7:
                    Cabecalhos.ShowHora();
                    break;
                default:
                    Cabecalhos.hideAllObj();
            }
        },

        //Integracoes
        ShowIntergacoes: function() {
            $('#objIntegracoes').show();
        },

        //MULTIPLA ESCOLHA
        Counter: 0,
        ParMultiplaEscolhaOpcoes: [],
        ValidaMultiplaEscolha: function (isValid) {

            var isValid = true;
            isValid = Cabecalhos.ValidaCamposCabecalho(isValid);

            if ($('#objMultiplaEscolhaName').val().length == 0) {
                $('#multiplaEscolhaNameCabecalho').show();
                isValid = false;
            }

            if ($('#objMultiplaEscolhaPunishmentValue').val().length == 0) {
                $('#multiplaEscolhaPunishmentValueCabecalho').show();
                isValid = false;
            }

            return isValid;
        },
        ShowMutiplaEscolha: function () {
            $('#objMultiplaEscolha').show();
            $('#btnIncluirCabecalho input').hide();
            $('#salvarCabecalho1').val('Salvar ' + $('#parFieldType option:selected').text());

            if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7)
                $('#salvarCabecalho1').fadeOut();
            else
                $('#salvarCabecalho1').fadeIn();

        },
        IncluirMultiplaEscolha: function (e) {

            /*Valida se os campos estão preenchidos*/
            if (Cabecalhos.ValidaMultiplaEscolha() == false) {
                setTimeout(Cabecalhos.EscondeMensagemValidacaoCabecalho, 10000);
                return;
            }

            var cod = "?";
            var nivelDoCampo = $('#headerLevel option:selected').text();
            var nivelDoCampoVal = $('#headerLevel option:selected').val();

            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var vinculado = $('#paramsDto_parHeaderFieldDto_LinkNumberEvaluetion').is(':checked') ? "Sim" : "Não";
            var tipo = $('#parFieldType option:selected').text();
            var tipoVal = $('#parFieldType option:selected').val();
            var opcoes = $('#objMultiplaEscolhaName').val();
            var valor = $('#objMultiplaEscolhaPunishmentValue').val();
            var obj = '<button type="button" class="btn btn-danger btn-xs" name="" onclick="Cabecalhos.RemoverDaTabela($(this), ' + Cabecalhos.ParMultiplaEscolhaOpcoes.length + ');"><i class="fa fa-times"></i></button>';//Btn excluir;


            /*Obj*/
            Cabecalhos.ParMultiplaEscolhaOpcoes.push({
                //'Id': ' ',
                'Name': opcoes,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParFieldType_Id': tipoVal,
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'IsDefaultOption' : false,
                'PunishmentValue': valor
            });

            /*Table*/
            Cabecalhos.tableMultiplaEscolha.row.add([
               //cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               opcoes,
               valor,
               obj
            ]).draw(false);

            $('#divCamposCabecalhoIncluidos').show();

            $('#objMultiplaEscolhaName').val('');
            $('#objMultiplaEscolhaPunishmentValue').val('0');

            if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7){
                $('#salvarCabecalho1Div').fadeOut();
                $('#salvarCabecalho1').fadeOut();
            }
            else{
                $('#salvarCabecalho1Div').fadeIn();
                $('#salvarCabecalho1').fadeIn();
            }

            updateAllTables();

            //var tempData = Cabecalhos.ParMultipleValues;
            //tempData.Id =
            //tempData.Name = opcoes
            //tempData.Description = ''
            //tempData.ParHeaderField_Id =  '0',
            //tempData.PunishmentValue = valor
            //tempData.ParHeaderField_Id = tipoVal

            //Cabecalhos.ParHeaderField.ParMultipleValues.push(ParMultipleValues)

        },
        SalvaMultiplaEscolha: function () {

            /* <tr><th>Nível do campo</th></tr>
            <tr><th>Nome</th></tr>
            <tr><th>Tipo</th></tr>
            <tr><th>Preview</th></tr>
            <tr><th></th></tr>*/

            var example = '<tr><td>' + $('#headerLevel :selected').text() + '</td>' // Nivel
            example += '<td id=""><label class="fixed-width"> ' + $('#paramsDto_parHeaderFieldDto_Name').val() + '</label></td>' + // nome
                       '<td id=""><label class="fixed-width"> ' + $('#parFieldType :selected').text() + '</label></td>' + // Tipo
                          '<td><select class="" id="" name="" class="form-control input-sm fixed-width" >' + //Preview
                          '<option value="-1">Selecione...</option> ';
            Cabecalhos.ParMultiplaEscolhaOpcoes.forEach(function (o, c) {
                example += '<option value="1">' + o.Name + '</option>';
            });
            example += '</select>';

            /*Cria inputs para objeto: */
            var obj1 = Cabecalhos.ParMultiplaEscolhaOpcoes[0]
            for (var key in obj1 ) {
                if(key == "Name")
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].' + key + '"     value="' + $('#paramsDto_parHeaderFieldDto_Name').val() + '" />';
                else
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].' + key + '"     value="' + obj1[key] + '" />';
            }
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"                value="true" />';

            Cabecalhos.ParMultiplaEscolhaOpcoes.forEach(function (o, counter) {
                /*Cria inputs para objeto: */
                for (var key in o) {
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].' + key + '"     value="' + o[key] + '" />';
                }
            });

            example += '</td>'
            example += '<td>&nbsp;' + Cabecalhos.BtnExcluir() + '</td></tr>';//Btn excluir


            $('#tableCabecalhosPreview').append(example);

            /*Limpa formulario Header*/
            $('#paramsDto_parHeaderFieldDto_Name').val('');
            $('#objMultiplaEscolhaName').val('');
            $('#objMultiplaEscolhaPunishmentValue').val('0');
            $('#parFieldType').val('-1').trigger('change');
            $('#headerLevel').val('-1').trigger('change');
            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            Cabecalhos.ParMultiplaEscolhaOpcoes = [];

            updateAllTables();
        },

        //BINARIO
        CounterParBinario: 0,
        ParBinario: [],
        ValidaBinario: function () {

            var isValid = true;
            isValid = Cabecalhos.ValidaCamposCabecalho(isValid);

            if ($('#objBinarioPunishmentName1').val().length == 0) {
                $('#punishmentNameCabecalho1').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentName2').val().length == 0) {
                $('#punishmentNameCabecalho2').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentValue1').val().length == 0) {
                $('#punishmentValueCabecalho1').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentValue2').val().length == 0) {
                $('#punishmentValueCabecalho2').show();
                isValid = false;
            }

            return isValid;

        },
        IncluirBinario: function (e) {

            /*Valida se os campos estão preenchidos*/
            if (Cabecalhos.ValidaBinario() == false) {
                setTimeout(Cabecalhos.EscondeMensagemValidacaoCabecalho, 10000);
                return;
            }
            if($('#headerLevel option:selected').val() == -1){
                openMessageModal("@Resources.Resource.warning", "@Resources.Resource.select_the_header_level");
                //alert('Selecione o Nivel do Cabecalho')
                return;
            }

            var cod = "?";
            var nivelDoCampo = $('#headerLevel option:selected').text();
            var nivelDoCampoVal = $('#headerLevel option:selected').val();
            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var vinculado = $('#paramsDto_parHeaderFieldDto_LinkNumberEvaluetion').is(':checked') ? "Sim" : "Não";
            var tipo = $('#parFieldType option:selected').text();
            var tipoVal = $('#parFieldType option:selected').val();

            var nameObjBinario1 = $('#objBinarioPunishmentName1').val();
            var nameObjBinario2 = $('#objBinarioPunishmentName2').val();
            var valorObjBinario1 = $('#objBinarioPunishmentValue1').val();
            var valorObjBinario2 = $('#objBinarioPunishmentValue2').val();

            var obj = '<input type="button" class="btn btn-danger btn-xs" name="" value="x" onclick="Cabecalhos.RemoverDaTabela($(this), ' + Cabecalhos.ParBinario.length + ', true);" />';//Btn excluir;

            /*Obj1*/
            Cabecalhos.ParBinario.push({
                'Name': nameObjBinario1,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'ParFieldType_Id': tipoVal,
                'PunishmentValue': valorObjBinario1,
                'Conformity': true
            });

            var obj2 = '<input type="button" class="btn btn-danger btn-xs" name="" value="x" onclick="Cabecalhos.RemoverDaTabela($(this), ' + Cabecalhos.ParBinario.length + ', true);" />';//Btn excluir;

            /*Obj2*/
            Cabecalhos.ParBinario.push({
                'Name': nameObjBinario2,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'ParFieldType_Id': tipoVal,
                'PunishmentValue': valorObjBinario2,
                'Conformity': false
            });

            Cabecalhos.tableMultiplaEscolha.row.add([
               //cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               nameObjBinario1,
               valorObjBinario1,
               obj
            ]).draw(false);

            Cabecalhos.tableMultiplaEscolha.row.add([
               //cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               nameObjBinario2,
               valorObjBinario2,
               obj2
            ]).draw(false);

            if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7)
                $('#salvarCabecalho2').fadeOut();
            else
                $('#salvarCabecalho2').fadeIn();

            $('#divCamposCabecalhoIncluidos').show();

            $('#objBinarioPunishmentName1').val('');
            $('#objBinarioPunishmentName2').val('');
            $('#objBinarioPunishmentValue1').val('0');
            $('#objBinarioPunishmentValue2').val('0');

            updateAllTables();
        },
        ShowBinario: function () {
            $('#objBinario').show();
            $('#btnIncluirCabecalho input').hide();
            $('#salvarCabecalho2').val('Salvar ' + $('#parFieldType option:selected').text()).show();

            if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7)
                $('#salvarCabecalho2').fadeOut();
            else
                $('#salvarCabecalho2').fadeIn();
        },
        SalvaBinario: function () {

            var fieldType = $('#parFieldType option:selected').val();
            var example = '<tr><td>' + $('#headerLevel :selected').text() + '</td>' // Nivel
            example += '<td id=""><label class="fixed-width"> ' + $('#paramsDto_parHeaderFieldDto_Name').val() + '</label></td>' + // nome
                       '<td id=""><label class="fixed-width"> ' + $('#parFieldType :selected').text() + '</label></td>' ; // Tipo
            //var example = '<div><label class="on-off fixed-width">';
            //example += '<label>' + $('#paramsDto_parHeaderFieldDto_Name').val() + ':&nbsp;</label>';
            /*Cria preview*/
            example += '<td>';
            Cabecalhos.ParBinario.forEach(function (o, c) {
                example += o.Name;
                var a = c == 0 ? 'checked = "checked"' : '';
                var b = c == 0 ? "true" : "false";
                example += '<input disable="disabled" ' + a + ' type="radio" value="' + b + '" >'
            });
            //example += '</label>';
            /*Cria Hiddens*/
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + $('#parFieldType option:selected').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Name"                   value="' + $('#paramsDto_parHeaderFieldDto_Name').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Description"            value="" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParLevelDefinition_Id"  value="' + Cabecalhos.ParBinario[0].ParLevelDefinition_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"  value="' + Cabecalhos.ParBinario[0].ParFieldType_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].LinkNumberEvaluetion"   value="' + $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked') + '"/>';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"               value="true" />';
            Cabecalhos.ParBinario.forEach(function (o, counter) {
                /*Cria inputs para objeto: */
                for (var key in o) {
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].' + key.toString() + '"     value="' + o[key].toString() + '" />';
                }
            });
            example += '</td>';

            example += '<td>&nbsp;' + Cabecalhos.BtnExcluir2() + '</td></tr>';//Btn excluir

            $('#tableCabecalhosPreview').append(example);

            /*Limpa formulario Header*/
            $('#paramsDto_parHeaderFieldDto_Name').val('');

            $('#objBinarioPunishmentName1').val('');
            $('#objBinarioPunishmentName2').val('');
            $('#objBinarioPunishmentValue1').val('0');
            $('#objBinarioPunishmentValue2').val('0');

            $('#headerLevel').val('-1').trigger('change');
            $('#parFieldType').val('-1').trigger('change');

            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            $('#objBinario').hide();
            $('#salvarCabecalho2').hide();
            Cabecalhos.ParBinario = [];

            updateAllTables();
        },

        //TEXTO
        ShowTexto: function () {
            $('#btnIncluirTexto').show();
            $('#objTexto').show();
            $('#btnIncluirCabecalho input').hide();
        },
        IncluirSalvarTexto: function (isData) {

            if($('#headerLevel option:selected').val() == -1){
                openMessageModal("@Resources.Resource.warning", "@Resources.Resource.select_the_header_level");
                //alert('Selecione o Nivel do Cabecalho')
                return;
            }


            if($('#paramsDto_parHeaderFieldDto_Name').val().length == 0){
                openMessageModal("Alerta", "Digite o nome para o Campo Texto");
                //alert('Digite o nome para o Campo Texto');
                return;
            }

            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var nivelCabecalho = $('#headerLevel option:selected').val();
            var tipo = $('#parFieldType option:selected').val();
            var linkedNumberEvaluation = $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked');

            Cabecalhos.AtualizaPreviewCampotexto({
                Name: nome,
                Nivel: nivelCabecalho,
                Type: tipo,
                IsRemoved: false,
                Description: "",
                Link: linkedNumberEvaluation,
                isDataDefined: isData
            });

            updateAllTables();

        },
        AtualizaPreviewCampotexto: function (o) {

            var example = '<tr><td>' + $('#headerLevel :selected').text() + '</td>' // Nivel
            example += '<td id=""><label class="fixed-width"> ' + $('#paramsDto_parHeaderFieldDto_Name').val() + '</label></td>' + // nome
                       '<td id=""><label class="fixed-width"> ' + $('#parFieldType :selected').text() + '</label></td>' ; // Tipo
            //var example = '<div>';
            //example += '<label> ' + o.Name + ' </label>&nbsp;';//Label
            example += '<td>';
            if(o.isDataDefined){
                example += '<input type="text" class="dataInput form-control input-sm fixed-width"/>';//Input Date
            }else{
                example += '<input type="text" class="form-control input-sm fixed-width" />';//Input
            }

            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + o.Type + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Name"                   value="' + o.Name + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Description"            value="' + o.Description + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParLevelDefinition_Id"  value="' + o.Nivel + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].LinkNumberEvaluetion"   value="' + o.Link + '"/>';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"               value="true" />';
            example += '</td>';

            example += '<td>';
            example += '&nbsp;' +  Cabecalhos.BtnExcluir();
            //example += '</div>';
            example += '</td>';

            $('#tableCabecalhosPreview').append(example);

            if (o.isDataDefined) {
                SingleCallendar.IntiFullCallendarByClass('dataInput');
            }

        },
        ExcluirCampoTexto: function (e) {
            e.parent().remove();
            updateAllTables();
        },

        //INTEGRAÇÕES
        ShowIntegracoes: function () {
            $('#btnIncluirNumerico').show();
            $('#objNumerico').show();
            $('#btnIncluirCabecalho input').hide();
        },

        //NUMERICO
        ShowNumerico: function () {
            $('#btnIncluirNumerico').show();
            $('#objNumerico').show();
            $('#btnIncluirCabecalho input').hide();
        },
        IncluirSalvarNumerico: function () {

            if($('#headerLevel option:selected').val() == -1){
                openMessageModal("@Resources.Resource.warning", "@Resources.Resource.select_the_header_level");
                //lert('Selecione o Nivel do Cabecalho');
                return;
            }

            if($('#paramsDto_parHeaderFieldDto_Name').val().length == 0){
                openMessageModal("@Resources.Resource.warning", "@Resources.Resource.fill_the_numeric_field_name");
                //alert('Digite o nome para o Campo Numerico');
                return;
            }

            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var nivelCabecalho = $('#headerLevel option:selected').val();
            var tipo = $('#parFieldType option:selected').val();
            var linkedNumberEvaluation = $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked');

            Cabecalhos.AtualizaPreviewCampoNumerico({
                Name: nome,
                Nivel: nivelCabecalho,
                Type: tipo,
                IsRemoved: false,
                Description: "",
                Link: linkedNumberEvaluation
            });

            updateAllTables();

        },
        AtualizaPreviewCampoNumerico: function (o) {

            var example = '<tr><td>' + $('#headerLevel :selected').text() + '</td>' // Nivel
            example += '<td id=""><label class="fixed-width"> ' + $('#paramsDto_parHeaderFieldDto_Name').val() + '</label></td>' + // nome
                       '<td id=""><label class="fixed-width"> ' + $('#parFieldType :selected').text() + '</label></td>' ; // Tipo

            //var example = '<div>';
            //example += '<label> ' + o.Name + ' </label>&nbsp;';//Label
            example += '<td>';
            example += '<input class="form-control input-sm fixed-width" type="number" />';//Input

            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + o.Type + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Name"                   value="' + o.Name + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Description"            value="' + o.Description + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParLevelDefinition_Id"  value="' + o.Nivel + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].LinkNumberEvaluetion"   value="' + o.Link + '"/>';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"               value="true" />';
            example += '</td>';
            example += '<td>';
            example += '&nbsp;' + Cabecalhos.BtnExcluir();
            //example += '</div>';
            example += '</td>';
            $('#tableCabecalhosPreview').append(example);
        },
        ExcluirCampoTexto: function (e) {
            e.parent().remove();
        },

        //DATA
        ShowData: function () {
            $('#btnIncluirCabecalho input').hide();
            $('#objData').show();
            $('#btnIncluirData').show();
        },

        //HORA
        ShowHora: function () {
            $('#btnIncluirCabecalho input').hide();
            $('#objHora').show();
            $('#btnIncluirHora').show();
        },

        UpdateCabecalhos: function () {
            //.not('#textPreview').not('#numericPreview')
            Cabecalhos.Counter = 0;
            var objects = $('#tableCabecalhosPreview > tbody > tr').not('.alteracao')
            objects.each(function (c, o) {

                if($(o).find('select').length){
                    var hasDefaultSelected  = $(o).find('select :selected').text();
                    var hasDefaultSelectedIndex  = $(o).find('select')[0].selectedIndex;
                    if(hasDefaultSelectedIndex > 0){
                        if($(o).find('td:eq(3) #jaExisteSelected').length == 0){
                            $(o).find('td:eq(3)').append($('<input type="hidden" id="jaExisteSelected" value="'+ hasDefaultSelected +'" name="paramsDto.listParHeaderFieldDto[~].DefaultOption" />'))
                        }
                    }
                }

                $(o).find('input[type=hidden]').each(function (cc, oo) {

                    var parte1 = oo.name.split('[')[0];
                    var parte2 = oo.name.split(']')[1];
                    if (oo.name.split(']').length > 2)
                        parte2 += ']' + oo.name.split(']')[2]; //MOCK

                    var tempName = parte1 + '[' + Cabecalhos.Counter + ']' + parte2;
                    oo.name = tempName;

                });

                Cabecalhos.Counter++;
            });
        },

        //EDIÇÃO
        CounterRemoveCabecalhoEDICAO: 0,
        RemoveCabecalhoEDICAO: function (e) {
            e.parents('tr').find('input[type="hidden"]').attr("disabled", false).attr("name", e.parents('tr').find('input[type="hidden"]').attr('name') + "[" + Cabecalhos.CounterRemoveCabecalhoEDICAO + "]");
            e.parents('tr').hide();
            Cabecalhos.CounterRemoveCabecalhoEDICAO++;
            console.log(e.parents('tr'));
            updateAllTables();
        },

        RemoverDaTabela: function(e, indexValueOfArray, isBinario){
            if(indexValueOfArray != undefined && isBinario == undefined){
                //Cabecalhos.ParMultiplaEscolhaOpcoes.splice(indexValueOfArray,1);

                if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7)
                    $('#salvarCabecalho2').fadeOut();
                else
                    $('#salvarCabecalho2').fadeIn();

            }

            if(indexValueOfArray != undefined && isBinario != undefined){
                //Cabecalhos.ParBinario.splice(indexValueOfArray,1);

                if($(camposCabecalhoIncluidos).find('tbody > tr:first > td').attr('colspan') == 7)
                    $('#salvarCabecalho1').fadeOut();
                else
                    $('#salvarCabecalho1').fadeIn();

            }
            e.parents('tr').remove();

            if(Cabecalhos.tableMultiplaEscolha.rows()[0].length == 0){
                $('#camposCabecalhoIncluidos').hide();
            }

            updateAllTables();



        },

        ////INCLUSÃO
        //RemoveCabecalhoINCLUSAO: function (e) {
        //    e.parent().remove();
        //},
    }

    var RegraNcL1 = {

        /*Setup*/
        level: 'ParLevel1',
        listObjSalvo: @Html.Raw(Json.Encode(@Model.paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto)),
        tdsNames: ['ParNotConformityRule_Name', 'Value', 'IsReauditShowTable', 'btn'],
        adiciona: function() {
            /*Valida se pode criar o objeto*/
            if($('#' + RegraNcL1.level + ' #selectNotConformityRule :selected').val() <= 0){
                openMessageModal("@Resources.Resource.select_not_conformity_rule");
                return;
            }

            if($('#' + RegraNcL1.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val().replace(/[^0-9.]/g, '') == ""){
                openMessageModal("@Resources.Resource.fill_the_alert_rule_value");
                return;
            }

            /*Cria o objeto*/
            var object = {/*Objeto*/
                ParNotConformityRule_Id: $('#' + RegraNcL1.level + ' #selectNotConformityRule :selected').val(),
                ParNotConformityRule_Name: $('#' + RegraNcL1.level + ' #selectNotConformityRule :selected').text(),
                Value: $('#' + RegraNcL1.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val().replace(/[^0-9.]/g, ''),
                IsReaudit: $('#' + RegraNcL1.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_IsReaudit').is(":checked"),
                IsReauditShowTable: $('#' + RegraNcL1.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_IsReaudit').is(":checked") ? "Sim" : "Não",
                IsActive: true,
                //btn: crudNxN.btnRemove + crudNxN.btnEdit,
            }

            /*Conclui*/
            crudNxN.adiciona(object, RegraNcL1.level + ' #tableRegraNc', RegraNcL1.tdsNames);
        },
        incluiNoObjetoParaSubmit: function(dados){

            $('#' + RegraNcL1.level + ' #tableRegraNc > tbody > tr ').each(function(c, obj){

                var o = $(obj).data();

                if((o.Id != null || o.Id != undefined) && o.Id > 0){
                    dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].Id"] = o.Id;
                }

                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].ParNotConformityRule_Id"] = o.ParNotConformityRule_Id;
                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].ParNotConformityRule_Name"] = o.ParNotConformityRule_Name;
                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].Value"] = o.Value;
                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].IsReaudit"] = o.IsReaudit;
                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].IsReauditShowTable"] = o.IsReauditShowTable;
                dados["paramsDto.parLevel1Dto.listParNotConformityRuleXLevelDto[" + c + "].IsActive"] = o.IsActive;

            });

        },/*Ok*/
        carregaDadosDoDb: function(){
            if( RegraNcL1.listObjSalvo != null){ /*Carrega regras de NC*/
                RegraNcL1.listObjSalvo.forEach(function(o, c){
                    o["IsReauditShowTable"] = o.IsReaudit ? "Sim" : "Não";
                    o["ParNotConformityRule_Name"] = o.ParNotConformityRule.Name;
                    crudNxN.adiciona(o, RegraNcL1.level + ' #tableRegraNc', RegraNcL1.tdsNames);
                });
            }
        },/*Ok*/

    };

    $('#salvarCabecalho1').on('click', Cabecalhos.SalvaMultiplaEscolha);
    $('#salvarCabecalho2').on('click', Cabecalhos.SalvaBinario);

    Cabecalhos.hideAllObj();
    $('#parFieldType').on('change', Cabecalhos.TipoChange);
    $('#paramsDto_parHeaderFieldDto_ParFieldType_Id').on('change', Cabecalhos.TipoChange);

    var counterReincidencia = 0;
    function removeReincidencia(e) {
        e.parents('tr').find('input[type="hidden"]').attr("disabled", false).attr("name", e.parents('tr').find('input[type="hidden"]').attr('name') + "[" + counterReincidencia + "]");
        e.parents('tr').hide();
        counterReincidencia++;
        console.log(e.parents('tr'));
        updateAllTables();
    }

    $('#l1BtnAddFrequenciaReincidencia').click(function (e) {

        if($('#l1SelectFrequenciaReincidencia :selected').val() <= 0)
        {
            openMessageModal("@Resources.Resource.warning", "@Resources.Resource.select_the_frequency");
            //alert('É necessário selecionar a Frequência');
            return;
        }

        if($('#l1InputNumeroNC').val().length <= 0)
        {

            openMessageModal("@Resources.Resource.warning", "@Resources.Resource.select_the_header_level");
            //alert('Selecione o Nivel do Cabecalho');
            return;
        }

        if($('#l1InputVigencia').val().length <= 0)
        {

            openMessageModal("@Resources.Resource.warning", "É necessário selecionar a Vigência");
            //alert('É necessário selecionar a Vigência');
            return;
        }

        var NcNumber = $('#l1InputNumeroNC').val();
        var Vigencia = $('#l1InputVigencia').val();
        var idFrequencia = $('#l1SelectFrequenciaReincidencia').val()
        var includeItem = true;

        if (includeItem == true) {
            var indexValue = $('#l1TableRepetition tbody tr').not('.existent').length -1;

            var inputHidden = '<input class="counterRegraReincidenciaClass" type="hidden" name="paramsDto.parLevel1Dto.listParRelapseDto[' + indexValue + '].NcNumber" value="' + NcNumber + '" />' +
                              '<input class="LocalLevel2Class" type="hidden" name="paramsDto.parLevel1Dto.listParRelapseDto[' + indexValue + '].EffectiveLength" value="' + Vigencia + '" />' +
                              '<input class="LocalLevel2Class" type="hidden" name="paramsDto.parLevel1Dto.listParRelapseDto[' + indexValue + '].ParFrequency_Id" value="' + idFrequencia + '" />';

            var elemento = $('<tr><td>' + 'Regra ' + (indexValue + 1) + " </td><td> " + NcNumber + " </td><td> " + Vigencia + " </td><td> " + $('#l1SelectFrequenciaReincidencia option:selected').text() + inputHidden + '</td><td><button type="button" class="btn btn-danger btn-xs pull-right" onclick="RemoverReincidencia($(this));"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>' + '</td><tr>');
            $('#l1TableRepetition > tbody').append(elemento[0]);
            $('#l1SelectFrequenciaReincidencia').prop('selectedIndex', 0);
            $('#l1InputNumeroNC, #l1InputVigencia').val("");
            $('#l1InputNumeroNC').focus();

            updateAllTables();
        }

    });

    function RemoverReincidencia(e, isAlter){
        if(isAlter){
            e.parents()
        }else{
            e.parents('tr').remove();
        }
    }


    $(document).ready(function () {

        defaults();
        loadSelect2();

        $('#paramsDto_parLevel1Dto_IsRuleConformity[value="false"]').trigger('click');
        $('#paramsDto_parLevel1Dto_IsFixedEvaluetionNumber[value="true"]').trigger('click');

        //Guard.mascaraInteger('#VolumeAnimais');

        if($('#paramsDto_parLevel1Dto_IsSpecific').is(':checked'))
            $('.groupCadastroEspecificoUnidade').fadeIn();

        if($('#paramsDto_parLevel1Dto_haveRealTimeConsolidation').is(':checked'))
            $('.RealTimeConsolitationUpdate').fadeIn();

        updateAllTables();

        $('[data-toggle="popover"]').popover();

        SingleCallendar.IntiFullCallendarByClass('dataInput');

        var parNotConformityRuleXLevelDto = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel1Dto.parNotConformityRuleXLevelDto));
        if(parNotConformityRuleXLevelDto.ParNotConformityRule_Id > 0)
            $('#newLevel1Modal').find('#selectNotConformityRule').val(parNotConformityRuleXLevelDto.ParNotConformityRule_Id).change();

        $('#newLevel1Modal').find('#paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val(parNotConformityRuleXLevelDto.Value)

        //Geral.TableShow();
        ///initialize form

        $('[data-toggle="popover"]').popover();

        RegraNcL1.carregaDadosDoDb();


        setTimeout(function(){
            reloadPopovers();
            initialFormLevel1 = $($('form')[0]).clone();
        }, 3000);

        $('input[name="paramsDto.parLevel1Dto.IsRuleConformity"]:first').prop("checked", true);

        try {

            var IsRuleConformity = @Html.Raw(Json.Encode(Model.paramsDto.parLevel1Dto.IsRuleConformity));
            var IsSpecificNumberEvaluetion = @Html.Raw(Json.Encode(Model.paramsDto.parLevel1Dto.IsSpecificNumberEvaluetion));
            console.log("IsRuleConformity: " + IsRuleConformity);
            console.log("IsSpecificNumberEvaluetion: " + IsSpecificNumberEvaluetion);

            /*Seta as 2 fdp pra false*/
            $('#paramsDto_parLevel1Dto_IsFixedEvaluetionNumber').bootstrapSwitch('toggleState');


        } catch (e) {
            console.log(e);
        }

    });

</script>
