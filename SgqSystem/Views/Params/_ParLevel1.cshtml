@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>




<!--MODAL-->

<div id="newLevel1Modal" class="modal fade" tabindex="-1" role="dialog">
    @using (Html.BeginForm())
    {
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
                    <h4 class="modal-title">New Level 1</h4>
                </div>
                <div class="modal-body modal-scroll">
                    <div class="row">
                        <div class="col-lg-12">
                            <table class="table-erp">
                                <tbody>
                                    <tr class="row">
                                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Id, new { @class = "form-control input-erp" }), @Html.Label(Resources.Resource.id), Table.PosicaoLabel.top, null, null)
                                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Name, new { @class = "form-control input-erp" }), @Html.Label(Resources.Resource.level1_name), Table.PosicaoLabel.top, null, null)
                                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Description, new { @class = "form-control input-erp" }), @Html.Label(Resources.Resource.level1_description), Table.PosicaoLabel.top, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel1Dto.ParConsolidationType_Id", Model.paramsDdl.DdlParConsolidation, new { @class = "form-control input-erp", @id = "selectConsolidacao" }), @Html.Label(Resources.Resource.consolidation_type), Table.PosicaoLabel.top, null, Resources.Resource.consolidation_type_popover)
                                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel1Dto.ParFrequency_Id", Model.paramsDdl.DdlFrequency, htmlAttributes: new { @class = "form-control input-erp", @id = "selectFrequencia" }), @Html.Label(Resources.Resource.frequency), Table.PosicaoLabel.top, null, Resources.Resource.frequency_popover)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasSaveLevel2, new { @class = "make-switch checkbox-erp" }), @Html.Label(Resources.Resource.save_button_on_level2), Table.PosicaoLabel.left, null, Resources.Resource.save_button_on_level2_popover)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasNoApplicableLevel2, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.not_applicable_on_level_2), Table.PosicaoLabel.left, null, Resources.Resource.not_applicable_on_level_2_popover)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasAlert, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.has_alert), Table.PosicaoLabel.left, null, Resources.Resource.has_alert_popover)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecific, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_specific_register_by_unit), Table.PosicaoLabel.left, null, Resources.Resource.allow_specific_register_by_unit_popover)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificHeaderField, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_field_edition_of_the_header), Table.PosicaoLabel.left, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberEvaluetion, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_evaluation_number), Table.PosicaoLabel.left, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColuna(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberSample, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_sample_number), Table.PosicaoLabel.top, null, null)
                                        @Table.GerarColuna(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificLevel3, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.save_button_on_level3), Table.PosicaoLabel.top, null, Resources.Resource.save_button_on_level3_popover)
                                        @Table.GerarColuna(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificGoal, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.allow_the_edition_of_the_goal_of_the_level1_by_unit), Table.PosicaoLabel.top, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaRadioButton(@Html.Label(Resources.Resource.standard), @Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsRuleConformity, "true", new { @class = "icheck" }), @Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsRuleConformity, "false", new { @class = "icheck" }), Resources.Resource.conform, Resources.Resource.not_conform, Table.PosicaoLabel.top, null, null)

                                        @Table.GerarColunaRadioButton(@Html.Label(Resources.Resource.register_total_evaluated), @Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsFixedEvaluetionNumber, "true", new { @class = "radio-erp" }), @Html.RadioButtonFor(model => model.paramsDto.parLevel1Dto.IsFixedEvaluetionNumber, "false", new { @class = "radio-erp" }), Resources.Resource.permanent, Resources.Resource.variable, Table.PosicaoLabel.top, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsLimitedEvaluetionNumber, new { @class = "form-control checkbox-erp" }), @Html.Label(Resources.Resource.limited_number_of_evaluations), Table.PosicaoLabel.left, null, null)
                                    </tr>
                                    <tr class="row">
                                        @Table.GerarColunaLabel(@Html.Label(Resources.Resource.show_level1_counters))
                                    </tr>
                                </tbody>
                            </table>

                            <div class="panel-group accordion" id="level1_cluster_accordion">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h4 class="panel-title">
                                            <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_cluster_accordion" href="#level1_cluster_collapse" aria-expanded="false"> @Resources.Resource.clusters </a>
                                        </h4>
                                    </div>
                                    <div id="level1_cluster_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                        <div class="panel-body">
                                            <table class="table-erp">
                                                <tbody>
                                                    <tr class="row">
                                                        @Table.GerarColuna(@Html.DropDownList("valueCluster", Model.paramsDdl.DdlparCluster, new { @class = "form-control input-erp" }), @Html.Label(Resources.Resource.level1_clusters), Table.PosicaoLabel.top)
                                                        @Table.GerarColuna(@Html.Editor("pontosCluster", new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-erp" } }), @Html.Label(Resources.Resource.cluster_points), Table.PosicaoLabel.top, null, null)
                                                        <td><input class="btn btn-primary btn-sm" type="button" value="Incluir Cluster" id="btnIncluirCluster" onclick="Cluster.IncluirCluster();" /></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            @*Tabela de Cluster Incluidos*@
                                            <table id="clusterIncluidos" class="table table-condensed table-responsive no-margin margin-top" style="display:none">
                                                <thead>
                                                    <tr>
                                                        <th>@Resources.Resource.cluster_name</th>
                                                        <th>@Resources.Resource.cluster_points</th>
                                                        <th>@Resources.Resource.cluster_edit_delete</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr id="clusters"></tr>
                                                    <tr id="clustersVazia" style="display:none">
                                                        <td id="nomeCluster"></td>
                                                        <td id="pontosCluster"></td>
                                                        <td id="alterarCluster">
                                                            <input type="button" class="btn btn-primary btn-sm" value="@Resources.Resource.edit" id="btnAlterarCluster" />
                                                            <input type="button" class="btn btn-danger btn-sm" value="@Resources.Resource.delete" id="btnExcluirCluster" />
                                                        </td>
                                                    </tr>
                                                    @if (Model.paramsDto.parLevel1Dto.clustersInclusos != null)
                                                    {
                                                        foreach (var i in Model.paramsDto.parLevel1Dto.clustersInclusos)
                                                        {
                                                            <tr id="editar">
                                                                <td id="">@i.ParCluster.Name</td>
                                                                <td id="">@i.Points.ToString("#")</td>
                                                                <td id="editarCluster">
                                                                    @*<input type="button" value="Alterar" id="Cluster.btnEDITARCluster" />*@
                                                                    <input type="button" value="x" onclick="Cluster.btnINATIVARLevel1XCluster($(this))" />
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParCluster", i.Id, htmlAttributes: new { @disabled = "disabled" })
                                                                    @Html.Hidden("clusterId", i.Id, htmlAttributes: new { @disabled = "disabled", @id = "clusterId" })

                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="panel-group accordion" id="level1_header_accordion">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h4 class="panel-title">
                                            <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_header_accordion" href="#level1_header_collapse" aria-expanded="false"> @Resources.Resource.header_fields </a>
                                        </h4>
                                    </div>
                                    <div id="level1_header_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                        <div class="panel-body">
                                            @*Obj cabecalho*@
                                            <table id="CamposDoCabecalho" class="table-erp">
                                                <tbody>
                                                    <tr class="row">
                                                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parHeaderFieldDto.ParLevelDefinition_Id", Model.paramsDdl.DdlparLevelDefinition, new { @class = "form-control input-erp" }), @Html.Label("Nível do Campo"), Table.PosicaoLabel.top, @Html.ErrorManual("nivelCampoCabecalho", "O Nível do Campo deve ser selecionado"), null)
                                                        @Table.GerarColuna(@Html.TextBoxFor(m => m.paramsDto.parHeaderFieldDto.Name, new { @class = "form-control input-erp" }), @Html.LabelFor(m => m.paramsDto.parHeaderFieldDto.Name), Table.PosicaoLabel.top, @Html.ErrorManual("nomeCampoCabecalho", "O campo Nome deve ser preenchido para Nível do Campo"), null)
                                                        @Table.GerarColuna(@Html.DropDownList("parFieldType", Model.paramsDdl.DdlParFieldType, new { @class = "form-control input-erp" }), @Html.Label("Tipo"), Table.PosicaoLabel.top, @Html.ErrorManual("tipoCampoCabecalho", "O campo Tipo deve ser selecionado para Nível do Campo"), null)
                                                        @Table.GerarColunaCheckbox(@Html.EditorFor(m => m.paramsDto.parHeaderFieldDto.LinkNumberEvaluetion, new { @class = "form-control checkbox-erp" }), @Html.LabelFor(m => m.paramsDto.parHeaderFieldDto.LinkNumberEvaluetion), Table.PosicaoLabel.top, null, null)
                                                    </tr>
                                                </tbody>
                                            </table>
                                            @*Obj cabecalho inputs para: multipla escolha, binario*@
                                            <div id="allObjCamposCabecalho">

                                                @*Multipla Escolha*@
                                                <div id="objMultiplaEscolha" style="display:none;">
                                                    <table id="tblOpcaoMultiplaEscolha">
                                                        <tbody>
                                                            <tr class="row">
                                                                @Table.GerarColuna(@Html.Editor("objMultiplaEscolhaName", new { htmlAttributes = new { @value = 0, @type = "text", @style = "max-width: 200px;", @class = "form-control input-erp" } }), @Html.Label(Resources.Resource.option), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaNameCabecalho", "O campo Opção deve ser preenchido para o Cabeçalho."), null)
                                                                @Table.GerarColuna(@Html.Editor("objMultiplaEscolhaPunishmentValue", new { htmlAttributes = new { @value = 0, @type = "number", @style = "max-width: 200px;", @class = "form-control input-erp" } }), @Html.Label(Resources.Resource.punishment_value), Table.PosicaoLabel.top, @Html.ErrorManual("multiplaEscolhaPunishmentValueCabecalho", "O campo Punição/Premiação deve ser selecionado para o Cabeçalho."), null)
                                                                <td><input class="btn btn-primary btn-sm" type="button" value="Incluir opção" id="btnIncluirMultiplaEscolha" onclick="Cabecalhos.IncluirMultiplaEscolha();" /></td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>

                                                @*Binario*@
                                                <div id="objBinario" style="display:none;">
                                                    <table id="tblBinario">
                                                        <tbody>
                                                            <tr>
                                                                <td></td>
                                                                @Table.GerarColunaLabel(@Html.Label(Resources.Resource.value))
                                                                @Table.GerarColunaLabel(@Html.Label(Resources.Resource.punishment_value), Resources.Resource.punishment_value_popover)
                                                            </tr>
                                                            <tr id="positivo">
                                                                <td>
                                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.positive))
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="objBinarioPunishmentName1">
                                                                    @Html.ErrorManual("punishmentNameCabecalho1", "O campo Nome deve ser preechido para o Cabecalho.")
                                                                </td>
                                                                <td>
                                                                    <input type="number" id="objBinarioPunishmentValue1" style="width: 50px;">
                                                                    @Html.ErrorManual("punishmentValueCabecalho1", "O campo Punição/Premiação deve ser selecionado para o Cabecalho.")
                                                                </td>
                                                            </tr>
                                                            <tr id="negativo">
                                                                <td>
                                                                    @Table.GerarColunaLabel(@Html.Label(Resources.Resource.negative))
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="objBinarioPunishmentName2">
                                                                    @Html.ErrorManual("punishmentNameCabecalho2", "O campo Nome deve ser preechido para o Cabecalho.")
                                                                </td>
                                                                <td>
                                                                    <input type="number" id="objBinarioPunishmentValue2" style="width: 50px;">
                                                                    @Html.ErrorManual("punishmentValueCabecalho2", "O campo Punição/Premiação deve ser selecionado para o Cabecalho.")
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <input type="button" value="Incluir opção" id="btnIncluirCluster" onclick="Cabecalhos.IncluirBinario();" />
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>

                                                @*tabela cabecalho itens inputados*@
                                                <div id="divCamposCabecalhoIncluidos" style="display:none;">
                                                    <table id="camposCabecalhoIncluidos">
                                                        <thead>
                                                            <tr>
                                                                <th>Cod.</th>
                                                                <th>Nivel do campo</th>
                                                                <th>Nome</th>
                                                                <th>Vinculado</th>
                                                                <th>Tipo</th>
                                                                <th>Opções</th>
                                                                <th>Valor</th>
                                                                <th>

                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tfoot>
                                                            <tr>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                                <th></th>
                                                            </tr>
                                                        </tfoot>
                                                    </table>
                                                </div>


                                                @*Btn salvar cabecalho*@
                                                <div style="width: 100%; float: left;" id="btnIncluirCabecalho">
                                                    <input type="button" class="btn btn-primary btn-sm" id="salvarCabecalho" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                                    <input type="button" class="btn btn-primary btn-sm" id="salvarCabecalho1" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                                    <input type="button" id="salvarCabecalho2" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                                    <input type="button" id="salvarCabecalho3" value="" onclick=";" style="font-size: small; padding: 10px; font-weight: bold;">
                                                </div>

                                                @*Cabecalho Preview*@
                                                <div id="cabecalhoPreview">
                                                    <div id="alteracao">
                                                        @if (Model.paramsDto.parLevel1Dto.cabecalhosInclusos != null)
                                                        {
                                                            foreach (var parLevel1XHeaderField in Model.paramsDto.parLevel1Dto.cabecalhosInclusos)
                                                            {
                                                                @*Drop Down carregada do DB*@
                                                                if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 1)
                                                                {
                                                                    <div>
                                                                        <label>@parLevel1XHeaderField.ParHeaderField.Name </label>
                                                                        @Html.DropDownList("DropDownList", parLevel1XHeaderField.ParHeaderField.DropDownList, htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = parLevel1XHeaderField.ParHeaderField.Id })
                                                                        @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.ParHeaderField.Id, htmlAttributes: new { @disabled = "disabled" })
                                                                        <input type="button" value="x" onclick="Cabecalhos.RemoveCabecalhoEDICAO($(this));" />
                                                                    </div>
                                                        }

                                                        @*Radio button carregada do DB*@
                                                        if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 3)
                                                        {
                                                                    <div>
                                                                        @foreach (var radioOpt in parLevel1XHeaderField.ParHeaderField.ParMultipleValues)
                                                                        {
                                                                            <label>@radioOpt.Name</label>
                                                                            @Html.RadioButton("removerParHeaderField", true);
                                                                        }
                                                                        @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.ParHeaderField.Id, htmlAttributes: new { @disabled = "disabled" })
                                                                        <input type="button" value="x" onclick="Cabecalhos.RemoveCabecalhoEDICAO($(this));" />
                                                                    </div>
                                                                }

                                                            }
                                                        }




                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>



                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnCloseNewLevel1Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="button" id="btnSaveNewLevel1Modal" onclick="indexParamsLevel1.enviarDadosParaApi();" class="btn btn-primary" value="Save level 1" />
                </div>
            </div>
        </div>
    }
</div>

<link href="~/Content/DataTables/jquery.dataTables.min.css" rel="stylesheet" />

<script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>

<script>

    ///initialize switches
    $.fn.bootstrapSwitch.defaults.size = 'mini';
    $.fn.bootstrapSwitch.defaults.onText = '@Resources.Resource.yes';
    $.fn.bootstrapSwitch.defaults.offText = '@Resources.Resource.no';
    $(".check-box").bootstrapSwitch();

</script>

<script>

    // $(document).ready(function () {
    var Cluster = {
        Counter: 0,
        EventoDdlClusters: function () {
            $('#valueCluster').on('change', function () {
                if ($('#valueCluster option:selected').val() == -1) {
                    $('#btnIncluirCluster').hide();
                } else {
                    $('#btnIncluirCluster').show();
                }
            });
        },
        IncluirCluster: function () {

            /*Valida cluster name*/
            if ($('#valueCluster option:selected').val() == -1) {
                $('#valueClusterSelected').show();
                setTimeout(function () { $('#valueClusterSelected').hide(); }, 10000)
                return;
            }

            /*Valida cluster pontos*/
            if ($('#pontosCluster').val().length == 0) {
                $('#pontosCluster').val('0');
            }

            /**/
            var $this = $('#clustersVazia'), $parentTR = $this.closest('tr');

            /**/
            var novaTr = $parentTR.clone()
            var idCluster = $('#valueCluster option:selected').val();
            var nomeCluster = $('#valueCluster option:selected').text();
            var pontosCluster = $('#pontosCluster').val();

            /**/
            novaTr.find('#nomeCluster').append(nomeCluster +
                ' <input type="hidden" name="paramsDto.parLevel1XClusterDto[].ParCluster_Id" value="' + idCluster + '" />' +
                '<input type="hidden" name="paramsDto.parLevel1XClusterDto[].Points" value="' + pontosCluster + '" />');
            novaTr.find('#pontosCluster').append(pontosCluster)
            novaTr.find('#btnAlterarCluster').attr('id', novaTr.find('#btnAlterarCluster').attr('id') + idCluster);
            novaTr.find('#btnExcluirCluster').attr('id', novaTr.find('#btnExcluirCluster').attr('id') + idCluster);
            novaTr.attr('id', '');

            //$("#tableid tbody:last").append(
            novaTr.insertAfter($parentTR);
            novaTr.show();

            //Cluster.EventoAlterar(novaTr.find('#btnAlterarCluster' + idCluster).attr('id'), idCluster);
            Cluster.EventoRemove(novaTr.find('#btnExcluirCluster' + idCluster).attr('id'), idCluster);
            Cluster.Index++;

            $('#valueCluster').val(-1);
            $('#pontosCluster').val("");
            $('#valueCluster option[value=' + idCluster + ']').attr('disabled', true)
            //Cluster.Counter++;
            Cluster.VerificaShowTable();
        },
        VerificaShowTable: function () {
            if ($('#clusterIncluidos > tbody > tr').length > 2) {
                $('#clusterIncluidos').show();
            } else {
                $('#clusterIncluidos').hide();
            }
        },
        EventoRemove: function (btnSelector, idCluster) {
            $('#' + btnSelector).click(function () {
                $('#valueCluster option[value=' + idCluster + ']').attr('disabled', false);
                $(this).parents('tr').first().remove();
                Cluster.VerificaShowTable();
            });
        },
        EventoAlterar: function (btnSelector, idCluster) {
            $('#' + btnSelector).click(function () {
                //$(this).parents('tr').first().remove();
                alert('Nao implmentado');
            });
        },
        UpdateCounter: function () {
            Cluster.Counter = 0;
            $('#clusterIncluidos > tbody > tr').not('#clustersVazia, #clusters, #editar').each(function (c, o) {
                $(o).find('td:first').each(function (cc, oo) {
                    $(oo).find('input').each(function (ccc, ooo) {
                        var parte1 = ooo.name.split('[')[0];
                        var parte2 = ooo.name.split(']')[1];
                        var tempName = parte1 + '[' + Cluster.Counter + ']' + parte2;
                        ooo.name = tempName;
                    });
                    Cluster.Counter++;
                });
            });
        },

        CounterRemoveClusterEDICAO: 0,
        btnINATIVARLevel1XCluster: function (e) {
            var nameNovo = e.parent().find('input[type="hidden"]').attr("name") + "[" + Cluster.CounterRemoveClusterEDICAO + "]";
            e.parent().find('input[type="hidden"]').attr("disabled", false).attr("name", nameNovo);
            e.parents('tr').hide();
            Cluster.CounterRemoveClusterEDICAO++;
            console.log(e.parents('tr'));
        },
        verificaClustersJsIncluidosParaDesabilitar: function () {

            $('#valueCluster option[value=' + idCluster + ']').attr('disabled', true)
        },
    }

    var Cabecalhos = {

        ValidaCamposCabecalho: function (isValid) {

            if ($('#headerLevel option:selected').val() == -1) {
                $('#nivelCampoCabecalho').show();
                isValid = false;
            }

            if ($('#parFieldType option:selected').val() == -1) {
                $('#tipoCampoCabecalho').show();
                isValid = false;
            }

            if ($('#paramsDto_parHeaderFieldDto_Name').val().length == 0) {
                $('#nomeCampoCabecalho').show();
                isValid = false;
            }

            return isValid;
        },
        tableMultiplaEscolha: $('#camposCabecalhoIncluidos').DataTable({
            info: false,
            searching: false,
            paging: false,
            ordering: true,
        }),
        hideAllObj: function () {

            /*Esconde campos*/
            $('#objMultiplaEscolha').hide();
            $('#objBinario').hide();
            $('#salvarCabecalho').hide().val('');
            $('#btnIncluirCabecalho input').hide();

            /*Esconde mensagens*/
            Cabecalhos.EscondeMensagemValidacaoCabecalho();
        },
        EscondeMensagemValidacaoCabecalho: function () {
            $('#nivelCampoCabecalho').hide();
            $('#tipoCampoCabecalho').hide();
            $('#nomeCampoCabecalho').hide();

            $('#multiplaEscolhaNameCabecalho').hide();
            $('#multiplaEscolhaPunishmentValueCabecalho').hide();
            $('#punishmentNameCabecalho1').hide();
            $('#punishmentNameCabecalho2').hide();
            $('#punishmentValueCabecalho1').hide();
            $('#punishmentValueCabecalho2').hide();
        },
        TipoChange: function () {

            var escolhaSelecionada = parseInt($('#parFieldType option:selected').val());
            Cabecalhos.hideAllObj();
            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            Cabecalhos.ParMultiplaEscolhaOpcoes = [];
            Cabecalhos.ParBinario = [];
            switch (escolhaSelecionada) {
                case 1: //Multipla Escolha
                    Cabecalhos.ShowMutiplaEscolha();
                    break;
                case 2:
                    break;
                case 3: //Binario
                    Cabecalhos.ShowBinario();
                    break;
                case 4:
                    break;
                case 5:
                    break;
                default:
                    Cabecalhos.hideAllObj();
            }
        },

        //MULTIPLA ESCOLHA
        Counter: 0,
        ParMultiplaEscolhaOpcoes: [],
        ValidaMultiplaEscolha: function (isValid) {

            var isValid = true;
            isValid = Cabecalhos.ValidaCamposCabecalho(isValid);

            if ($('#objMultiplaEscolhaName').val().length == 0) {
                $('#multiplaEscolhaNameCabecalho').show();
                isValid = false;
            }

            if ($('#objMultiplaEscolhaPunishmentValue').val().length == 0) {
                $('#multiplaEscolhaPunishmentValueCabecalho').show();
                isValid = false;
            }

            return isValid;
        },
        IncluirMultiplaEscolha: function (e) {

            /*Valida se os campos estão preenchidos*/
            if (Cabecalhos.ValidaMultiplaEscolha() == false) {
                setTimeout(Cabecalhos.EscondeMensagemValidacaoCabecalho, 10000);
                return;
            }

            var cod = "?";
            var nivelDoCampo = $('#headerLevel option:selected').text();
            var nivelDoCampoVal = $('#headerLevel option:selected').val();

            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var vinculado = $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked') ? "Sim" : "Não";
            var tipo = $('#parFieldType option:selected').text();
            var tipoVal = $('#parFieldType option:selected').val();
            var opcoes = $('#objMultiplaEscolhaName').val();
            var valor = $('#objMultiplaEscolhaPunishmentValue').val();
            var obj = '<input type="button" value="excluir" id=' + nome + tipo + ' />';
            /*Obj*/
            Cabecalhos.ParMultiplaEscolhaOpcoes.push({
                'Name': opcoes,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParFieldType_Id': tipoVal,
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'PunishmentValue': valor
            });

            Cabecalhos.tableMultiplaEscolha.row.add([
               cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               opcoes,
               valor,
               obj
            ]).draw(false);

            $('#divCamposCabecalhoIncluidos').show();

            $('#objMultiplaEscolhaName').val('');
            $('#objMultiplaEscolhaPunishmentValue').val('0');

        },
        ShowMutiplaEscolha: function () {
            $('#objMultiplaEscolha').show();
            $('#btnIncluirCabecalho input').hide();
            $('#salvarCabecalho1').val('Salvar ' + $('#parFieldType option:selected').text()).show();
        },
        SalvaMultiplaEscolha: function () {

            var example = '<div id=""><label> ' + $('#paramsDto_parHeaderFieldDto_Name').val() + '</label>' +
                            '<select class="" id="" name="" style="padding: 2px;">' +
                            '<option value="-1">Selecione...</option> ';

            Cabecalhos.ParMultiplaEscolhaOpcoes.forEach(function (o, c) {
                example += '<option value="1">' + o.Name + '</option>';
            });

            example += '</select>';
            /*Cria inputs para objeto: */
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + $('#parFieldType option:selected').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Name"                   value="' + $('#paramsDto_parHeaderFieldDto_Name').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Description"            value="" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParLevelDefinition_Id"  value="' + Cabecalhos.ParMultiplaEscolhaOpcoes[0].ParLevelDefinition_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + Cabecalhos.ParMultiplaEscolhaOpcoes[0].ParFieldType_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].LinkNumberEvaluetion"   value="' + $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked') + '"/>';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"               value="true" />';

            Cabecalhos.ParMultiplaEscolhaOpcoes.forEach(function (o, counter) {
                /*Cria inputs para objeto: */
                for (var key in o) {
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].' + key.toString() + '"     value="' + o[key].toString() + '" />';
                }
            });

            example += '</div>'

            $('#cabecalhoPreview').append(example);

            /*Limpa formulario Header*/
            $('#paramsDto_parHeaderFieldDto_Name').val('');

            $('#objMultiplaEscolhaName').val('');
            $('#objMultiplaEscolhaPunishmentValue').val('0');

            $('#parFieldType').val('-1').trigger('change');
            $('#headerLevel').val('-1').trigger('change');

            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            Cabecalhos.ParMultiplaEscolhaOpcoes = [];
        },

        //BINARIO
        CounterParBinario: 0,
        ParBinario: [],
        ValidaBinario: function () {

            var isValid = true;
            isValid = Cabecalhos.ValidaCamposCabecalho(isValid);

            if ($('#objBinarioPunishmentName1').val().length == 0) {
                $('#punishmentNameCabecalho1').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentName2').val().length == 0) {
                $('#punishmentNameCabecalho2').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentValue1').val().length == 0) {
                $('#punishmentValueCabecalho1').show();
                isValid = false;
            }

            if ($('#objBinarioPunishmentValue2').val().length == 0) {
                $('#punishmentValueCabecalho2').show();
                isValid = false;
            }

            return isValid;

        },
        IncluirBinario: function (e) {

            /*Valida se os campos estão preenchidos*/
            if (Cabecalhos.ValidaBinario() == false) {
                setTimeout(Cabecalhos.EscondeMensagemValidacaoCabecalho, 10000);
                return;
            }

            var cod = "?";
            var nivelDoCampo = $('#headerLevel option:selected').text();
            var nivelDoCampoVal = $('#headerLevel option:selected').val();
            var nome = $('#paramsDto_parHeaderFieldDto_Name').val();
            var vinculado = $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked') ? "Sim" : "Não";
            var tipo = $('#parFieldType option:selected').text();
            var tipoVal = $('#parFieldType option:selected').val();

            var nameObjBinario1 = $('#objBinarioPunishmentName1').val();
            var valorObjBinario1 = $('#objBinarioPunishmentValue1').val();
            var nameObjBinario2 = $('#objBinarioPunishmentName2').val();
            var valorObjBinario2 = $('#objBinarioPunishmentValue2').val();
            var obj = '<input type="button" value="excluir" id=' + nome + tipo + ' />';
            /*Obj1*/
            Cabecalhos.ParBinario.push({
                'Name': nameObjBinario1,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'ParFieldType_Id': tipoVal,
                'PunishmentValue': valorObjBinario1,
                'Conformity': true
            });

            /*Obj2*/
            Cabecalhos.ParBinario.push({
                'Name': nameObjBinario2,
                'ParHeaderField_Id': '0',
                'Description': '',
                'ParLevelDefinition_Id': nivelDoCampoVal,
                'ParFieldType_Id': tipoVal,
                'PunishmentValue': valorObjBinario2,
                'Conformity': false
            });

            Cabecalhos.tableMultiplaEscolha.row.add([
               cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               nameObjBinario1,
               valorObjBinario1,
               obj
            ]).draw(false);

            Cabecalhos.tableMultiplaEscolha.row.add([
               cod,
               nivelDoCampo,
               nome,
               vinculado,
               tipo,
               nameObjBinario2,
               valorObjBinario2,
               obj
            ]).draw(false);

            $('#divCamposCabecalhoIncluidos').show();

            $('#objBinarioPunishmentName1').val('');
            $('#objBinarioPunishmentName2').val('');
            $('#objBinarioPunishmentValue1').val('0');
            $('#objBinarioPunishmentValue2').val('0');
        },
        ShowBinario: function () {
            $('#objBinario').show();
            $('#btnIncluirCabecalho input').hide();
            $('#salvarCabecalho2').val('Salvar ' + $('#parFieldType option:selected').text()).show();
        },
        SalvaBinario: function () {
            var fieldType = $('#parFieldType option:selected').val();
            var example = '<div><label class="on-off">';

            /*Cria preview*/
            Cabecalhos.ParBinario.forEach(function (o, c) {
                example += o.Name;
                var a = c == 0 ? 'checked = "checked"' : '';
                var b = c == 0 ? "true" : "false";
                example += '<input disable="disabled" ' + a + ' type="radio" value="' + b + '" >'
            });

            example += '</label>';
            /*Cria Hiddens*/
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"        value="' + $('#parFieldType option:selected').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Name"                   value="' + $('#paramsDto_parHeaderFieldDto_Name').val() + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].Description"            value="" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParLevelDefinition_Id"  value="' + Cabecalhos.ParBinario[0].ParLevelDefinition_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].ParFieldType_Id"  value="' + Cabecalhos.ParBinario[0].ParFieldType_Id + '" />';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].LinkNumberEvaluetion"   value="' + $('#paramsDto_parLevel1Dto_IsLimitedEvaluetionNumber').is(':checked') + '"/>';
            example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].IsActive"               value="true" />';

            Cabecalhos.ParBinario.forEach(function (o, counter) {
                /*Cria inputs para objeto: */
                for (var key in o) {
                    example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].' + key.toString() + '"     value="' + o[key].toString() + '" />';
                }
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].ParHeaderField_Id"     value="' + o.ParHeaderField_Id + '" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].Name"                  value="' + o.Name + '" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].Description"           value="' + o.Description + '" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].PunishmentValue"       value="' + o.PunishmentValue + '" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].Conformity"            value="' + o.Conformity + '" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].IsActive"              value="true" />';
                //example += '<input type="hidden"  name="paramsDto.listParHeaderFieldDto[~].parMultipleValuesDto[' + counter + '].ParLevelDefinition_Id" value="' + o.ParLevelDefinition_Id + '" />';
            });
            example += '</div>';

            $('#cabecalhoPreview').append(example);

            /*Limpa formulario Header*/
            $('#paramsDto_parHeaderFieldDto_Name').val('');

            $('#objBinarioPunishmentName1').val('');
            $('#objBinarioPunishmentName2').val('');
            $('#objBinarioPunishmentValue1').val('0');
            $('#objBinarioPunishmentValue2').val('0');

            $('#headerLevel').val('-1').trigger('change');
            $('#parFieldType').val('-1').trigger('change');

            Cabecalhos.tableMultiplaEscolha.clear().draw();
            $('#divCamposCabecalhoIncluidos').hide();
            $('#objBinario').hide();
            $('#salvarCabecalho2').hide();
            Cabecalhos.ParBinario = [];
        },

        //TEXTO


        //INTEGRAÇÕES


        //NUMERICO


        //DATA


        UpdateCabecalhos: function () {
            Cabecalhos.Counter = 0;
            $('#cabecalhoPreview > div').not("#alteracao").each(function (c, o) {
                $(o).find('input[type=hidden]').each(function (cc, oo) {
                    var parte1 = oo.name.split('[')[0];
                    var parte2 = oo.name.split(']')[1];
                    if (oo.name.split(']').length > 2)
                        parte2 += ']' + oo.name.split(']')[2]; //MOCK

                    var tempName = parte1 + '[' + Cabecalhos.Counter + ']' + parte2;
                    oo.name = tempName;
                });
                Cabecalhos.Counter++;
            });
        },

        //EDIÇÃO
        CounterRemoveCabecalhoEDICAO: 0,
        RemoveCabecalhoEDICAO: function (e) {
            e.parent().find('input[type="hidden"]').attr("disabled", false);
            e.parent().hide();
            var nameNovo = e.parent().find('input[type="hidden"]').attr("name") + "[" + Cabecalhos.CounterRemoveCabecalhoEDICAO + "]";
            e.parent().find('input[type="hidden"]').attr("name", nameNovo)
            Cabecalhos.CounterRemoveCabecalhoEDICAO++;
            console.log(e.parent());
        },

        //INCLUSÃO
        RemoveCabecalhoINCLUSAO: function (e) {
            e.parent().remove();
        },
    }

    $('#salvarCabecalho1').on('click', Cabecalhos.SalvaMultiplaEscolha);
    $('#salvarCabecalho2').on('click', Cabecalhos.SalvaBinario);

    Cluster.EventoDdlClusters();
    Cabecalhos.hideAllObj();
    $('#parFieldType').on('change', Cabecalhos.TipoChange);
    $('#paramsDto_parHeaderFieldDto_ParFieldType_Id').on('change', Cabecalhos.TipoChange);
    // });

    Cluster.VerificaShowTable();

</script>