@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{
    var level = Model.levelControl;
    var name = "PesoL3";
    var id = "level" + Model.levelControl + "_" + name + "_accordion";
    var id2 = "#level" + Model.levelControl + "__" + name + "_accordion";
    var id3 = "#level" + Model.levelControl + "__" + name + "_collapse";
    var id4 = "level" + Model.levelControl + "__" + name + "_collapse";
    var click = name + ".adiciona($(this))";

    for (int i = 0; i < Model.paramsDto.parLevel3Dto.listLevel3Level2.Count(); i++)
    {
        Model.paramsDto.parLevel3Dto.listLevel3Level2[i].ParLevel3 = null;
        Model.paramsDto.parLevel3Dto.listLevel3Level2[i].ParLevel2 = null;
    }
}

<div class="panel-group accordion" id="@id">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="@id2" href="@id3" aria-expanded="false">@Resources.Resource.weight</a>
            </h4>
        </div>
        <div id="@id4" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">

                <table class="table-erp" id="">

                    <tbody>
                        <tr>

                            @Table.GerarColuna(@Html.DropDownList("pesoCompany", Model.paramsDdl.DdlParCompany, htmlAttributes: new { @class = "form-control input-sm", @id = "pesoCompany" })
                                , @Html.Label(Resources.Resource.company as string)
                                , Table.PosicaoLabel.top)
                            @Table.GerarColuna(@Html.TextBox("peso", "", htmlAttributes: new { @class = "form-control input-sm", @id = "peso", @mask = "numerica" })
                               , @Html.Label(Resources.Resource.inform_the_weight_of_the_level3 as string)
                               , Table.PosicaoLabel.top)

                            @Table.GerarColunaCheckbox(@Html.EditorFor(model => model.paramsDto.parLevel3Level2.IsKnockout, new { @class = "make -switch checkbox-erp", @id = "pesoIsKnockout" })
                            , @Html.Label("Is Critical"), Table.PosicaoLabel.top)

                            @Table.GerarColunaButton(@Html.DropDownList("pesoGroupLevel2", new SelectList(Model.paramsDto.parLevel3Dto.listGroupsLevel2, dataValueField: "Id", dataTextField: "Name"), Resources.Resource.select as string + "...", new { @class = "form-control input-sm", @id = "pesoGroupLevel2" })
                               , @Html.Label(Resources.Resource.level2_group as string)
                               , Table.PosicaoLabel.top
                               , button: "<button type='button' class='btn btn-primary btn-sm' onclick='" + @click + "' id=''>" + Resources.Resource.attach as string + "</button>")

                        </tr>
                    </tbody>
                </table>

                <table id="tablePeso" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar peso:">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.company</th>
                            <th>@Resources.Resource.weight</th>
                            <th>Is Critical</th>
                            <th>@Resources.Resource.group</th>
                            <th class="options"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
        </div>
    </div>
</div>


<script>

    var levelControl = @Html.Raw(Json.Encode(@Model.levelControl));

    function atribuiVariavelPeso (){

        var paramsDto = @Html.Raw(Json.Encode(@Model.paramsDto.parLevel3Dto.listLevel3Level2));
        var levelDomain;
        var listSalvo;

        if(levelControl == 3){
            levelDomain = "newLevel3Modal";
            listSalvo = paramsDto;//
            PesoL3 = getCounterObject(levelDomain, listSalvo);//
            PesoL3.carregaDadosDoDb();//
        }

    }

    atribuiVariavelPeso();

    function getCounterObject(levelDomain, listSalvo) {
        return {
            
            /*Setup*/
            levelControl: levelControl,
            level: levelDomain,
            listObjSalvo: listSalvo,
            idTable: 'tablePeso',//
            tdsNames: ['companyName', 'Weight', 'IsKnockout', 'groupName', 'btn'],
            getObjAdd: function(isEdit, obj){

                if(isEdit != undefined){

                    var compName =  $('#' + isEdit + ' #pesoCompany :selected').text();
                    var compVal = $('#' + isEdit + ' #pesoCompany :selected').val();
                    var groupName =  $('#' + isEdit + ' #pesoGroupLevel2 :selected').text();
                    var groupVal = $('#' + isEdit + ' #pesoGroupLevel2 :selected').val();

                    if(compVal == 0 || compVal == "-1" || compVal == "0" || compVal == -1 || compVal == undefined){
                        compName = "Todos";
                    }

                    if(groupVal == 0 || groupVal == "-1" || groupVal == "0" || groupVal == -1 || groupVal == undefined){
                        groupName = "";
                    }

                    obj.Weight = $('#' + isEdit + ' #peso').val();
                    obj.IsKnockout = $('#' + isEdit + ' #paramsDto_parLevel3Level2_IsKnockout').is(":checked");
                    obj.ParCompany_Id = compVal;
                    obj.companyName = compName;
                    obj.ParLevel3Group_Id = groupVal;
                    obj.groupName = groupName;
                    obj.ParLevel2_Id = $('#paramsDto_parLevel2Dto_Id').val();
                    obj.ParLevel3_Id = $('#paramsDto_parLevel3Dto_Id').val();

                    return obj;

                }else{

                    var compName =  $('#' + this.level + ' #pesoCompany :selected').text();
                    var compVal = $('#' + this.level + ' #pesoCompany :selected').val();
                    var groupName =  $('#' + this.level + ' #pesoGroupLevel2 :selected').text();
                    var groupVal = $('#' + this.level + ' #pesoGroupLevel2 :selected').val();

                    if(compVal == 0 || compVal == "-1" || compVal == "0" || compVal == -1){
                        compName = "Todos";
                    }

                    if(groupVal == 0 || groupVal == "-1" || groupVal == "0" || groupVal == -1){
                        groupName = "";
                    }

                    return {/*Objeto*/
                        Weight: $('#' + this.level + ' #peso').val(),
                        IsKnockout: $('#' + this.level + ' #paramsDto_parLevel3Level2_IsKnockout').is(":checked"), //paramsDto_parLevel3Level2_IsKnockout
                        ParCompany_Id  :  compVal,
                        ParLevel2_Id  : $('#paramsDto_parLevel2Dto_Id').val(),
                        ParLevel3_Id  : $('#paramsDto_parLevel3Dto_Id').val(),
                        companyName  :  compName,
                        ParLevel3Group_Id  :  groupVal,
                        groupName  :  groupName,
                        IsActive: true
                    }

                }

            },
            veifyAdd: function(isEdit) {

                var seletorTato = !!isEdit ? isEdit : this.level;

                /*Valida se pode criar o objeto*/
                if($('#' + seletorTato + ' #peso').val().length == 0){
                    openMessageModal("@Resources.Resource.required_field", "@Resources.Resource.inform_the_weight_of_the_level3")
                    return false;
                }

                /*Verifica Unidade*/
                var companySelected = $('#' + seletorTato + ' #pesoCompany :selected').val();
                var exist = $.grep($('#tablePeso  tbody  tr  td:nth-child(1)'), function(o, c){
                    if(companySelected == -1){
                        return $(o).parent().data().ParCompany_Id == 0 || $(o).parent().data().ParCompany_Id == -1 || $(o).parent().data().ParCompany_Id == null
                    }
                    return $(o).parent().data().ParCompany_Id == companySelected;
                });

                if(!!isEdit){/*Edição*/

                } else {/*Inclusão*/
                    if(exist.length){
                        var display = $('#' + seletorTato + ' #pesoCompany :selected').text();
                        if(companySelected == -1)
                            display= "@Resources.Resource.all";

                        openMessageModal("@Resources.Resource.data_already_register_on_company " + display + ".", "")
                        return false;
                    }
                }

                return true;
            },
            incluiNoObjetoParaSubmit: function(dados){

                var level = this.levelControl;
                $('#' + this.level + ' #' + this.idTable + ' > tbody > tr ').each(function(c, obj){

                    var o = $(obj).data();
                    //#edit
                    if((o.Id != null || o.Id != undefined) && o.Id > 0){
                        dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].Id"] = o.Id;
                    }

                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].Weight"] = o.Weight;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].IsKnockout"] = o.IsKnockout;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].ParCompany_Id"] = o.ParCompany_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].ParLevel2_Id"] = o.ParLevel2_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].ParLevel3_Id"] = o.ParLevel3_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].ParLevel3Group_Id"] = o.ParLevel3Group_Id;
                    //dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].ParLevel2_Id"] = o.ParLevel2_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Level2[" + c + "].IsActive"] = o.IsActive;

                });

            },
            carregaDadosDoDb: function(){
                var id = this.level + ' #' + this.idTable;
                var tdNamess = this.tdsNames;
                if( this.listObjSalvo != null){ /*Carrega regras de NC*/
                    this.listObjSalvo.forEach(function(o, c){
                        if(o.ParCompany != null){
                            o['companyName'] = o.ParCompany.Name;
                        }else{
                            o['companyName'] = "@Resources.Resource.all";
                        }

                        if(o.ParLevel3Group != null){
                            o['groupName'] = o.ParLevel3Group.Name;
                        }else{
                            o['groupName'] = "";
                        }

                        crudNxN.adiciona(o,  id, tdNamess);
                    });
                }
            },
            /*Fim Setup*/
            adiciona: function (e) {
                
                if(this.veifyAdd()){
                    var object = this.getObjAdd();
                    crudNxN.adiciona(object, this.level + ' #' + this.idTable, this.tdsNames);
                }
            },
        };
    }

    $(document).ready(function () {
        $('#peso').inputmask("mascaraNumericaPositivaNegativa");
        //GuardJs.mascaraPorcentegem('#percentVal')
    });

</script>