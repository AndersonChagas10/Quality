@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{
}
<div class="panel-group accordion" id="level3_data_type_accordion">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level3_data_type_accordion" href="#level3_data_type_collapse" aria-expanded="false"> @Resources.Resource.data_type_entry</a>
            </h4>
        </div>
        <div id="level3_data_type_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">

                <table class="table-erp">
                    <tr class="row">
                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3InputType_Id", Model.paramsDdl.DdlParLevel3InputType, htmlAttributes: new { @class = "form-control input-sm", @id = "selectTipoInput" })
                                         , @Html.Label(Resources.Resource.data_type_entry)
                                         , Table.PosicaoLabel.top
                                         , error: @Html.ValidationMessageFor(m => m.paramsDto.parLevel3Value.ParLevel3InputType_Id, null, new { @class = "text-danger" }), colspan: 3)
                    </tr>
                </table>
                <table class="table-erp">
                    <tr class="row">
                        @*<tr class="row VinculoParLevel alert-info" style="">
                                <td class="td-erp" colspan="0">
                                    <label for="paramsDto.parLevel1Selected">@Resources.Resource.level1</label>
                                    <div>
                                        @Html.DropDownList("paramsDto.parLevel1Selected", Model.paramsDdl.DdlparLevel1, htmlAttributes: new { @class = "form-control select2", @id = "parLevel1Select2", style = "width: 100%" })
                                    </div>
                                </td>
                                <td class="td-erp">
                                    <label for="paramsDto.parLevel2Selected">@Resources.Resource.level2</label>
                                    <div>
                                        @Html.DropDownList("paramsDto.parLevel2Selected", Model.paramsDdl.DdlparLevel2, htmlAttributes: new { @class = "form-control select2", @id = "parLevel2Select2", style = "width: 100%" })
                                    </div>
                                </td>
                            </tr>*@
                    <tr class="row ParIntervalos" style="display: none;">
                        @Table.GerarColunaButton(@Html.DropDownList("paramsDto.parLevel3Value.ParMeasurementUnit_Id", Model.paramsDdl.DdlParMeasurementUnit, htmlAttributes: new { @class = "form-control input-sm", @id = "selectUnidadeDeMedidas" }), @Html.Label(Resources.Resource.measurement_unit), Table.PosicaoLabel.top, button: "<button type='button' id='btnUnidadeMedida' class='btn btn-primary btn-sm'><i class='fa fa-external-link' aria-hidden='true'></i></button>", style: "min-width:100px")
                        @Table.GerarColuna(@Html.TextBox("paramsDto.parLevel3Value.IntervalMin", Model.paramsDto.parLevel3Value.IntervalMin.Value, new { @Id = "parLevel3Value_IntervalMin", @class = "form-control input-sm maskDecimal" }), @Html.Label(Resources.Resource.minimum_range), Table.PosicaoLabel.top, style: "min-width:100px")
                        @Table.GerarColuna(@Html.TextBox("paramsDto.parLevel3Value.IntervalMax", Model.paramsDto.parLevel3Value.IntervalMax.Value, new { @Id = "parLevel3Value_IntervalMax", @class = "form-control input-sm maskDecimal" }), @Html.Label(Resources.Resource.maximum_range), Table.PosicaoLabel.top, style: "min-width:100px")
                        <td style="display: none;">
                            <label>@Resources.Resource.values_between</label>
                            <select class="form-control input-sm" id="parIntervalosType" name="paramsDto.parLevel3Value.AcceptableValueBetween"></select>
                        </td>
                    </tr>
                    <tr class="row" style="display:none;padding:10px;">
                        <td colspan="3">
                            *
                            <span id="ParIntervalosLabel"></span>
                        </td>
                    </tr>

                    <tr class="row ParBinarios" style="display: none;">
                        @Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3BoolTrue_Id", Model.paramsDdl.DdlParLevel3BoolTrue, htmlAttributes: new { @class = "form-control input-sm", @id = "selectConforme" }), @Html.Label(Resources.Resource.positive_value), Table.PosicaoLabel.top, style: "width:50%")
                        @Table.GerarColunaButton(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3BoolFalse_Id", Model.paramsDdl.DdlParLevel3BoolFalse, htmlAttributes: new { @class = "form-control input-sm", @id = "selectNaoConforme" }), @Html.Label(Resources.Resource.negative_value), Table.PosicaoLabel.top, button: "<button type='button' id='btnPositiveNegative' class='btn btn-primary btn-sm'><i class='fa fa-external-link' aria-hidden='true'></i></button>", style: "width:50%")
                        @*@Table.GerarColuna(@Html.DropDownList("paramsDto.parLevel3Value.ParLevel3BoolFalse_Id", Model.paramsDdl.DdlParLevel3BoolFalse, htmlAttributes: new { @class = "form-control input-sm", @id = "selectNaoConforme" }), @Html.Label(Resources.Resource.negative_value), Table.PosicaoLabel.top)*@
                    </tr>
                </table>
                <table class="table-erp">
                    <tr class="row" id="companyValueL3">
                        @Table.GerarColunaButton(@Html.DropDownList("paramsDto.parLevel3Value.ParCompany_Id", Model.paramsDdl.DdlParCompany, htmlAttributes: new { @class = "form-control input-sm", @id = "selectUnidadeParL3Value" }), @Html.Label(Resources.Resource.company), Table.PosicaoLabel.top
                                            , button: "<button type='button' id='btnSaveCounter' onclick='level3Value.adiciona(); ' class='btn btn-primary btn-sm'><i class='fa fa-plus' aria-hidden='true'></i></button>")
                    </tr>
                </table>

                <table id="tableLevel3Value" class="table table-condensed table-responsive no-margin margin-top" nameModal="@Resources.Resource.edit_input_data_type">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.data_type_entry</th>
                            <th>@Resources.Resource.level1</th>
                            <th>@Resources.Resource.level2</th>
                            <th>@Resources.Resource.company</th>
                            <th>@Resources.Resource.measurement_unit</th>
                            <th>@Resources.Resource.minimum_range</th>
                            <th>@Resources.Resource.maximum_range</th>
                            <th>@Resources.Resource.values_between</th>
                            <th>@Resources.Resource.negative_value</th>
                            <th>@Resources.Resource.positive_value</th>
                            <th style="min-width: 80px;max-width: 80px;">@Resources.Resource.action</th>
                        </tr>
                    </thead>
                    <tbody style="font-size:xx-small;"></tbody>
                </table>

            </div>
        </div>
    </div>
</div>

<script>
    var levelParamsDTO = @Html.Raw(Json.Encode(@Model.paramsDto));

    var level3Value = {
        /*Setup*/
        levelControl: 3,
        level: "newLevel3Modal",
        listObjSalvo: levelParamsDTO.parLevel3Dto.listLevel3Value,
        idTable: 'tableLevel3Value',//
        tdsNames: ['ParLevel3InputType_Name', 'ParLevel1_Name', 'ParLevel2_Name', 'ParCompany_Name', 'ParMeasurementUnit_Name', 'IntervalMin', 'IntervalMax', 'AcceptableValueBetween_Name', 'ParLevel3BoolFalse_Name', 'ParLevel3BoolTrue_Name', 'btn'],
        getObjAdd: function (isEdit, obj) {

            var preseletor = "";
            if (isEdit != undefined) {
                preseletor = isEdit;
            } else {
                preseletor = level3Value.level;
            }

            var companyName = $('#' + preseletor + ' #selectUnidadeParL3Value :selected').text();
            var companyValue = $('#' + preseletor + ' #selectUnidadeParL3Value :selected').val();

            var parLevel1Id = $(' #parLevel1Select2 :selected').val();
            var parLevel1Name = $(' #parLevel1Select2 :selected').text();

            var parLevel2Id = $(' #parLevel2Select2 :selected').val();
            var parLevel2Name = $(' #parLevel2Select2 :selected').text();

            var selectTipoInputName = $('#' + preseletor + ' #selectTipoInput :selected').text();
            var selectTipoInput = $('#' + preseletor + ' #selectTipoInput :selected').val();
            var selectNaoConformeName = $('#' + preseletor + ' #selectNaoConforme :selected').text();
            var selectNaoConforme = $('#' + preseletor + ' #selectNaoConforme :selected').val();
            var selectConformeName = $('#' + preseletor + ' #selectConforme :selected').text();
            var selectConforme = $('#' + preseletor + ' #selectConforme :selected').val();

            var selectUnidadeDeMedidasName = $('#' + preseletor + ' #selectUnidadeDeMedidas :selected').text(); //Unidade de Medida
            var selectUnidadeDeMedidas = $('#' + preseletor + ' #selectUnidadeDeMedidas :selected').val();
            var parIntervalosTypeName = $('#' + preseletor + ' #parIntervalosType :selected').text(); //Valores entre
            var parIntervalosType = $('#' + preseletor + ' #parIntervalosType :selected').val();
            var parLevel3Value_IntervalMin = $('#' + preseletor + ' #parLevel3Value_IntervalMin').val(); //Limite Inferior
            var parLevel3Value_IntervalMax = $('#' + preseletor + ' #parLevel3Value_IntervalMax').val(); //Limite Superior

            if (parLevel1Id == -1) {
                parLevel1Id = null;
                parLevel1Name = "@Resources.Resource.all";
            }

            if (parLevel2Id == -1) {
                parLevel2Id = null;
                parLevel2Name = "@Resources.Resource.all";
            }

            if (companyValue == -1) {
                companyValue = null;
                companyName = "@Resources.Resource.all";
            }

            if (selectTipoInput == 2 || selectTipoInput == 3 || selectTipoInput == 4 || selectTipoInput == 5) {
                selectConformeName = "";
                selectNaoConformeName = "";
            }

            if (selectTipoInput == 1) {
                selectUnidadeDeMedidasName = "";
                parLevel3Value_IntervalMin = "";
                parLevel3Value_IntervalMax = "";
                parIntervalosTypeName = "";
            }

            if (selectTipoInput == 5) {
                selectUnidadeDeMedidasName = "";
                selectNaoConforme = "";
                selectConforme = "";
                selectUnidadeDeMedidas = "";
            }

            if (isEdit != undefined) {

                obj.ParCompany_Name = companyName;
                obj.ParCompany_Id = companyValue;
                obj.IsActive = true;

                //Bin
                //obj.ParLevel3InputType_Name = selectTipoInputName;
                //obj.ParLevel3InputType_Id =   selectTipoInput;
                obj.ParLevel3BoolFalse_Name = selectNaoConformeName;
                obj.ParLevel3BoolFalse_Id = selectNaoConforme;
                obj.ParLevel3BoolTrue_Name = selectConformeName;
                obj.ParLevel3BoolTrue_Id = selectConforme;

                //Intervalos
                obj.ParMeasurementUnit_Name = selectUnidadeDeMedidasName;
                obj.ParMeasurementUnit_Id = selectUnidadeDeMedidas;
                obj.AcceptableValueBetween_Name = parIntervalosTypeName;
                obj.AcceptableValueBetween = parseInt(parIntervalosType) ? true : false;
                obj.IntervalMin = parLevel3Value_IntervalMin;
                obj.IntervalMax = parLevel3Value_IntervalMax;

                //obj.ParLevel1_Id =                      parLevel1Id;
                //obj.ParLevel1_Name =                    parLevel1Name;
                //obj.ParLevel2_Id =                      parLevel2Id;
                //obj.ParLevel2_Name =                    parLevel2Name;

                return obj;

            } else {

                return {

                    ParCompany_Name: companyName,
                    ParCompany_Id: companyValue,
                    IsActive: true,

                    //Bin
                    ParLevel3InputType_Name: selectTipoInputName,
                    ParLevel3InputType_Id: selectTipoInput,
                    ParLevel3BoolFalse_Name: selectNaoConformeName,
                    ParLevel3BoolFalse_Id: selectNaoConforme,
                    ParLevel3BoolTrue_Name: selectConformeName,
                    ParLevel3BoolTrue_Id: selectConforme,

                    //Intervalos
                    ParMeasurementUnit_Name: selectUnidadeDeMedidasName,
                    ParMeasurementUnit_Id: selectUnidadeDeMedidas,
                    AcceptableValueBetween_Name: parIntervalosTypeName,
                    AcceptableValueBetween: parseInt(parIntervalosType) ? true : false,
                    IntervalMin: parLevel3Value_IntervalMin,
                    IntervalMax: parLevel3Value_IntervalMax,
                    IsActive: true,

                    ParLevel1_Id: parLevel1Id,
                    ParLevel1_Name: parLevel1Name,
                    ParLevel2_Id: parLevel2Id,
                    ParLevel2_Name: parLevel2Name,
                };
            }
        },
        veifyAdd: function (isEdit) {
            var seletorTato = !!isEdit ? isEdit : level3Value.level;
            /*Valida se pode criar o objeto*/

            if ($('#' + seletorTato + ' #selectTipoInput :selected').val() == 1) { // Binario
                if ($('#' + seletorTato + ' #selectConforme :selected').val() <= 0) {
                    openMessageModal(Resources('required_field_was_not_filled'), Resources('select_positive_value_for_binary_field'));
                    return false;
                } else if ($('#' + seletorTato + ' #selectNaoConforme :selected').val() <= 0) {
                    openMessageModal(Resources('required_field_was_not_filled'), Resources('select_negative_value_for_binary_field'));
                    return false;
                }
            } // Intervalo ou Calculado.
            else if ($('#' + seletorTato + ' #selectTipoInput :selected').val() == 3 || $('#' + seletorTato + ' #selectTipoInput :selected').val() == 4) {
                if ($('#' + seletorTato + ' #selectUnidadeDeMedidas :selected').val() <= 0) {
                    openMessageModal(Resources('required_field_was_not_filled'), Resources('select_the_measurement_unit'));
                    return false;
                }
            }

            /*Verifica Unidade*/
            var companySelected = $('#' + seletorTato + ' #selectUnidadeParL3Value :selected').val();//
            var display = $('#' + seletorTato + ' #selectUnidadeParL3Value :selected').text();//

            var level1Selected = $(' #parLevel1Select2 :selected').val();//
            var displayLevel1Selected = $(' #parLevel1Select2 :selected').text();//

            var level2Selected = $(' #parLevel2Select2 :selected').val();//
            var displayLevel2Selected = $(' #parLevel2Select2 :selected').text();//

            function verify(data) {
                return (data == 0 || data == -1 || data == null) ? 1 : 0;
            }

            var exist = $.grep($('#tableLevel3Value  tbody  tr  td:nth-child(1)'), function (o, c) {//
                var count = 0;
                if (companySelected == -1) {
                    count += verify($(o).parent().data().ParCompany_Id);
                } else {
                    count += $(o).parent().data().ParCompany_Id == companySelected ? 1 : 0;
                }

                if (level1Selected == -1) {
                    count += verify($(o).parent().data().ParLevel1_Id);
                } else {
                    count += $(o).parent().data().ParLevel1_Id == level1Selected ? 1 : 0;
                }

                if (level2Selected == -1) {
                    count += verify($(o).parent().data().ParLevel2_Id);
                } else {
                    count += $(o).parent().data().ParLevel2_Id == level2Selected ? 1 : 0;
                }

                if (count == 3)
                    return true;
                return false;
            });

            if (!!isEdit) {/*Edição*/

            } else {/*Inclusão*/
                if (exist.length) {

                    if (companySelected == -1)
                        display = "@Resources.Resource.all";

                    openMessageModal(Resources('data_already_register_on_company') + " " + display + ".", "")
                    return false;

                }
            }


            return true;
        },
        incluiNoObjetoParaSubmit: function (dados) {

            var level = level3Value.levelControl;
            $('#' + level3Value.level + ' #' + level3Value.idTable + ' > tbody > tr ').each(function (c, obj) {

                var o = $(obj).data();
                //#edit
                if ((o.Id != null || o.Id != undefined) && o.Id > 0) {
                    dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].Id"] = o.Id;
                }

                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParCompany_Id"] = o.ParCompany_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParLevel3InputType_Id"] = o.ParLevel3InputType_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParLevel3BoolFalse_Id"] = o.ParLevel3BoolFalse_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParLevel3BoolTrue_Id"] = o.ParLevel3BoolTrue_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParMeasurementUnit_Id"] = o.ParMeasurementUnit_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].AcceptableValueBetween"] = o.AcceptableValueBetween;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].IntervalMin"] = o.IntervalMin;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].IntervalMinCalculado"] = o.IntervalMin;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParLevel1_Id"] = o.ParLevel1_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].ParLevel2_Id"] = o.ParLevel2_Id;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].IntervalMax"] = o.IntervalMax;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].IntervalMaxCalculado"] = o.IntervalMax;
                dados["paramsDto.parLevel" + level + "Dto.listLevel3Value[" + c + "].IsActive"] = o.IsActive;
                //
            });

        },
        carregaDadosDoDb: function () {
            //console.log(o["IntervalMin"] );
            var id = level3Value.level + ' #' + level3Value.idTable;
            var tdNamess = level3Value.tdsNames;
            if (level3Value.listObjSalvo != null) { /*Carrega regras de NC*/
                level3Value.listObjSalvo.forEach(function (o, c) {
                    console.log('aquii');
                    o["ParLevel3InputType_Name"] = o.ParLevel3InputType.Name;

                    if (o.ParCompany_Id > 0)
                        o["ParCompany_Name"] = o.ParCompany.Name;
                    else
                        o["ParCompany_Name"] = "@Resources.Resource.all";

                    if (o.ParLevel1_Id > 0)
                        o["ParLevel1_Name"] = o.ParLevel1.Id + " - " + o.ParLevel1.Name;
                    else
                        o["ParLevel1_Name"] = "@Resources.Resource.all";

                    if (o.ParLevel2_Id > 0)
                        o["ParLevel2_Name"] = o.ParLevel2.Id + " - " + o.ParLevel2.Name;
                    else
                        o["ParLevel2_Name"] = "@Resources.Resource.all";
                    console.log(o["ParLevel2_Name"]);
                    console.log(o["ParLevel1_Name"]);

                    if (o.ParLevel3InputType_Id == 1) {
                        o["ParLevel3BoolFalse_Name"] = o.ParLevel3BoolFalse.Name;
                        o["ParLevel3BoolTrue_Name"] = o.ParLevel3BoolTrue.Name;
                        o["ParMeasurementUnit_Name"] = "";
                        o["AcceptableValueBetween_Name"] = "";
                        o["IntervalMin"] = "";
                        o["IntervalMax"] = "";
                    } else if (o.ParLevel3InputType_Id == 2) {
                        o["ParMeasurementUnit_Name"] = "";
                        o["ParLevel3BoolFalse_Name"] = "";
                        o["ParLevel3BoolTrue_Name"] = "";
                        o["AcceptableValueBetween_Name"] = o.AcceptableValueBetween == 0 ? "@Resources.Resource.value_is_acceptable_between " + o.IntervalMin + " @Resources.Resource.and " + o.IntervalMax : " @Resources.Resource.value_is_acceptable_less_than " + o.IntervalMin + " @Resources.Resource.or_greater_than " + o.IntervalMax;
                    } else if (o.ParLevel3InputType_Id == 3) {
                        o["IntervalMin"] = o.IntervalMin == null ? "" : o.IntervalMin;
                        o["IntervalMax"] = o.IntervalMax == null ? "" : o.IntervalMax;
                        o["ParMeasurementUnit_Name"] = o.ParMeasurementUnit.Name;
                        o["ParLevel3BoolFalse_Name"] = "";
                        o["ParLevel3BoolTrue_Name"] = "";
                        o["AcceptableValueBetween_Name"] = o.IntervalMin == null ? "@Resources.Resource.acceptable_value_less_than " + o.IntervalMax :
                            (o.IntervalMax == null ? "@Resources.Resource.acceptable_value_equal_or_greater_than " + o.IntervalMin :
                            (o.AcceptableValueBetween == 0 ? "@Resources.Resource.value_is_acceptable_between " + o.IntervalMin + " @Resources.Resource.and " + o.IntervalMax : " @Resources.Resource.value_is_acceptable_less_than " + o.IntervalMin + " @Resources.Resource.or_greater_than " + o.IntervalMax))

                    } else if (o.ParLevel3InputType_Id == 4) {
                        o["ParMeasurementUnit_Name"] = o.ParMeasurementUnit.Name;
                        o["ParLevel3BoolFalse_Name"] = "";
                        o["ParLevel3BoolTrue_Name"] = "";
                        o["AcceptableValueBetween_Name"] = o.AcceptableValueBetween == 0 ? "@Resources.Resource.value_is_acceptable_between " + o.IntervalMinCalculado + " @Resources.Resource.and " + o.IntervalMaxCalculado : " @Resources.Resource.value_is_acceptable_less_than " + o.IntervalMinCalculado + " @Resources.Resource.or_greater_than " + o.IntervalMaxCalculado;
                        o["IntervalMin"] = o.IntervalMin == null ? "" : o.IntervalMin;
                        o["IntervalMinCalculado"] = o.IntervalMinCalculado == null ? "" : o.IntervalMinCalculado;
                        o["IntervalMax"] = o.IntervalMax == null ? "" : o.IntervalMax;
                        o["IntervalMaxCalculado"] = o.IntervalMaxCalculado == null ? "" : o.IntervalMaxCalculado;
                    } else if (o.ParLevel3InputType_Id == 5) {
                        o["ParMeasurementUnit_Name"] = "";
                        o["ParLevel3BoolFalse_Name"] = "";
                        o["ParLevel3BoolTrue_Name"] = "";
                        o["AcceptableValueBetween_Name"] = "";
                        o["IntervalMin"] = "";
                        o["IntervalMinCalculado"] = "";
                        o["IntervalMax"] = "";
                        o["IntervalMaxCalculado"] = "";
                    }
                    //o["AcceptableValueBetween_Name"] = o.ParCriticalLevel.Name;

                    if ((o.ParLevel1_Id == null
                        || o.ParLevel1_Id == "-1"
                        || o.ParLevel1_Id == $('#parLevel1Select2 :selected').val())
                        &&
                        (o.ParLevel2_Id == null
                        || o.ParLevel2_Id == "-1"
                        || o.ParLevel2_Id == $('#parLevel2Select2 :selected').val()))
                        crudNxN.adiciona(o, id, tdNamess);
                });
            }
        },
        /*Fim Setup*/
        adiciona: function (e) {
            if (level3Value.veifyAdd()) {
                var object = level3Value.getObjAdd();
                crudNxN.adiciona(object, level3Value.level + ' #' + level3Value.idTable, level3Value.tdsNames);
            }
        },
    };


    $('#btnUnidadeMedida').click(function (e) {
        $('#modalUnidadeMedida').modal({ backdrop: false });
    });

    $('#btnPositiveNegative').click(function (e) {
        $('#modalPositiveNegative').modal({ backdrop: false });
    });

    $(document).on('input', '#parLevel3Value_IntervalMax', function (e) {

        changeCombo();

    });

    $(document).on('input', '#parLevel3Value_IntervalMin', function (e) {

        changeCombo();

    });

    function changeCombo(){
        //se os dois campos estão nulos
        parIntervalosTypeCreate();
        CorrigirLarguraColunas();
    }
    function changeComboEdit(){
        //se os dois campos estão nulos
        parIntervalosTypeCreateEdit();
    }
    function level03ValueIntervalWriter(valueMin, valueMax) {
        return Resources('acceptable_value_less_than') + " " + valueMin + " " + Resources('and_greater_than') + " " + valueMax;
    }

    function parIntervalosTypeCreate() {

        var value = "";
        if($('#selectUnidadeDeMedidas :selected').val() > 0)
            value = $('#selectUnidadeDeMedidas :selected').text();

        if ($("#parLevel3Value_IntervalMin").val() == "" && !$("#parLevel3Value_IntervalMax").val() == "") {
            var options = "<option value='0'>" +
                Resources('acceptable_value_equal_or_greater_than')
                + " "
                + $("#parLevel3Value_IntervalMax").val() + " " + value +
            "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();

        }

        else if (!$("#parLevel3Value_IntervalMin").val() == "" && $("#parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>" +
                    Resources('acceptable_value_equal_or_greater_than')
                    + " "
                    + $("#parLevel3Value_IntervalMin").val() + " " + value +
                "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();

        }

        else if (!$("#parLevel3Value_IntervalMin").val() == "" && !$("#parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>"
                    + Resources('value_is_acceptable_between')
                    + " " + $("#parLevel3Value_IntervalMin").val()
                    + " " + Resources('and')
                    + " " + $("#parLevel3Value_IntervalMax").val() + " " + value +
                "</option>" +
                "<option value='1'>"
                    + Resources('value_is_acceptable_less_than')
                    + " " + $("#parLevel3Value_IntervalMin").val()
                    + " " + Resources('or_greater_than')
                    + " " + $("#parLevel3Value_IntervalMax").val() + " " + value+
                "</option>";

            $('#parIntervalosType').empty();
            $('#parIntervalosType').append(options);
            $("#parIntervalosType").parents("td").show();
        } else {
            $("#parIntervalosType").parents("td").hide();
        }
    }

    function parIntervalosTypeCreateEdit() {

        var value = "";
        if($('#crudNxNEdit #selectUnidadeDeMedidas :selected').val() > 0)
            value = $('#crudNxNEdit #selectUnidadeDeMedidas :selected').text();

        if ($("#crudNxNEdit #parLevel3Value_IntervalMin").val() == "" && !$("#crudNxNEdit #parLevel3Value_IntervalMax").val() == "") {
            var options = "<option value='0'>" +
                Resources('acceptable_value_equal_or_greater_than')
                + " " + $("#crudNxNEdit #parLevel3Value_IntervalMax").val()+" "+ value+
            "</option>";

            $('#crudNxNEdit #parIntervalosType').empty();
            $('#crudNxNEdit #parIntervalosType').append(options);
            $("#crudNxNEdit #parIntervalosType").parents("td").show();

        }

        else if (!$("#crudNxNEdit #parLevel3Value_IntervalMin").val() == "" && $("#crudNxNEdit #parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>" +
                    Resources('acceptable_value_equal_or_greater_than')
                    + " "
                    + $("#crudNxNEdit #parLevel3Value_IntervalMin").val() + "  " + value +
                "</option>";

            $('#crudNxNEdit #parIntervalosType').empty();
            $('#crudNxNEdit #parIntervalosType').append(options);
            $("#crudNxNEdit #parIntervalosType").parents("td").show();

        }

        else if (!$("#crudNxNEdit #parLevel3Value_IntervalMin").val() == "" && !$("#crudNxNEdit #parLevel3Value_IntervalMax").val() == "") {
            var options =
                "<option value='0'>" +
                    Resources('value_is_acceptable_between')
                    + "&nbsp;" + $("#crudNxNEdit #parLevel3Value_IntervalMin").val()
                    + " " + Resources('and')
                    + " " + $("#crudNxNEdit #parLevel3Value_IntervalMax").val() +" "+ value+
                "</option>" +
                "<option value='1'>" +
                    Resources('value_is_acceptable_less_than')
                    + " "+ $("#crudNxNEdit #parLevel3Value_IntervalMin").val()
                    + " " + Resources('and_greater_than')
                    + " " + $("#crudNxNEdit #parLevel3Value_IntervalMax").val()
                    + " " + value +
                "</option>";

            $('#crudNxNEdit #parIntervalosType').empty();
            $('#crudNxNEdit #parIntervalosType').append(options);
            $("#crudNxNEdit #parIntervalosType").parents("td").show();
        } else {
            $("#crudNxNEdit #parIntervalosType").parents("td").hide();
        }
    }

    $('#selectTipoInput').change(function () {

        if ($("#selectTipoInput option:selected").val() == "-1") {

            $('#selectNaoConforme').val(-1)
            $('#selectConforme').val(-1)
            $('#selectUnidadeDeMedidas').val(-1)
            $('#paramsDto_parLevel3Value_IntervalMin, #paramsDto_parLevel3Value_IntervalMax').val("")

            $('.ParIntervalos').hide();
            $('.ParBinarios').hide();

            $('#companyValueL3').hide();
        }

        //Binários
        if ($("#selectTipoInput option:selected").val() == "1") {
            resetaParIntervalos();
            resetaParBinarios();
            resetaParDefeitos();
            $('.ParIntervalos').hide();
            $('.ParBinarios').fadeIn();
            $('#companyValueL3').fadeIn();
        }

        //Numero de defeitos
        if ($("#selectTipoInput option:selected").val() == "2") {
            resetaParIntervalos();
            resetaParDefeitos();
            resetaParBinarios();
            $('#parLevel3Value_IntervalMin').inputmask("numeric",  {
                allowMinus: true
            });
            $('#parLevel3Value_IntervalMax').inputmask("numeric",  {
                allowMinus: true
            });

            $('.ParBinarios').hide();

            //Hidden Unit Medida
            //Colocar value 1 no campo Unit Medida
            $('#level3_data_type_collapse > div > table.table-erp > tbody > tr.row.ParIntervalos > td:nth-child(1)').hide()
            $('#selectUnidadeDeMedidas').val(-2);
            //Hidden Limite inferior
            //Colocar 0 no Limite Inferior
            $('#level3_data_type_collapse > div > table.table-erp > tbody > tr.row.ParIntervalos > td:nth-child(2)').hide()
            $('#parLevel3Value_IntervalMin').val(0);

            $('.ParIntervalos').fadeIn();
        }

        //Intervalos
        if ($("#selectTipoInput option:selected").val() == "3") {
            resetaParIntervalos();
            resetaParBinarios();
            resetaParDefeitos();
            $('#parLevel3Value_IntervalMin').inputmask("numeric",  {
                //radixPoint: ".",
                //groupSeparator: ",",
                //groupSize: 3,
                //digits: 2,
                //autoGroup: true,
                //allowPlus: true,
                allowMinus: true
            });
            $('#parLevel3Value_IntervalMax').inputmask("numeric",  {
                //radixPoint: ".",
                //groupSeparator: ",",
                //groupSize: 3,
                //digits: 2,
                //autoGroup: true,
                //allowPlus: true,
                allowMinus: true
            });
            $('.ParBinarios').hide();
            $('.ParIntervalos').fadeIn();
        }

        if ($("#selectTipoInput option:selected").val() == "4") {
            resetaParIntervalos();
            resetaParBinarios();
            resetaParDefeitos();
            GuardJs.mascaraCampoCalculado('#parLevel3Value_IntervalMin');
            GuardJs.mascaraCampoCalculado('#parLevel3Value_IntervalMax');
            $('.ParBinarios').hide();
            $('.ParIntervalos').fadeIn();
        }

        if ($("#selectTipoInput option:selected").val() == "5") {
            resetaParIntervalos();
            resetaParBinarios();
            resetaParDefeitos();
            GuardJs.mascaraCampoCalculado('#parLevel3Value_IntervalMin');
            GuardJs.mascaraCampoCalculado('#parLevel3Value_IntervalMax');
            $('.ParBinarios').hide();
            $('.ParIntervalos').hide();
            $('#companyValueL3').show();
        }

        CorrigirLarguraColunas();

    });

    function resetaParCalculado(){
        $('#selectUnidadeParL3Value').val(-1);
        $('#ParCalculado_IntervalMin').val("");
        $('#ParCalculado_IntervalMax').val("");
        $('#selectUnidadeDeMedidas').val(-1);
    }

    function resetaParIntervalos(){
        $('#selectUnidadeDeMedidas').val(-1);
        $('#parLevel3Value_IntervalMin').val("");
        $('#parLevel3Value_IntervalMax').val("");
        $('#parIntervalosType').empty().parents('td').hide();
    }

    function resetaParBinarios(){
        $('#selectConforme').val(-1);
        $('#selectNaoConforme').val(-1);
        $('#companyValueL3').fadeIn();
    }

    function resetaParDefeitos(){
        $('#selectUnidadeDeMedidas').val(-1);
        $('#level3_data_type_collapse > div > table.table-erp > tbody > tr.row.ParIntervalos > td:nth-child(1)').show()
        $('#level3_data_type_collapse > div > table.table-erp > tbody > tr.row.ParIntervalos > td:nth-child(2)').show()
        $('#parLevel3Value_IntervalMin').val("");
        $('#parLevel3Value_IntervalMax').val("");
        $('#parIntervalosType').empty().parents('td').hide();
    }

    $('#selectTipoInput').change();

    function clicModalBinarioSave() {

        var valInpPos = $('#modalInputPositive').val();
        var valInpNeg =  $('#modalInputNegative').val();

        if(!valInpPos.length){
            alert("Valor invalido para:", "Valor Positivo");
            return;
        }

        if(!valInpNeg.length){
            alert(Resources('invalid_value_for'), Resources('positive_value'));
            return;
        }

        var dados = {nameTrue : valInpPos, nameFalse : valInpNeg}
        $.post(urlSaveBinaryImputType, dados, function (r) {

            try {

                $('#selectConforme').append('<option value="' + r.True.Id + '">' + r.True.Name + '</option>');
                $('#selectNaoConforme').append('<option value="' + r.False.Id + '">' + r.False.Name + '</option>');

                $('#selectConforme').val(r.True.Id).change();
                $('#selectNaoConforme').val(r.False.Id).change();

                $('#modalInputPositive').val("");
                $('#modalInputNegative').val("");

                $('#modalPositiveNegative').modal("hide");

            } catch (e) {
                console.log(e);
            }
        }).fail(function (e, h, x) {

        });
    };

    function CorrigirLarguraColunas(){
        var $colunasVisiveis = $('#level3_data_type_collapse > div > table:nth-child(2) > tbody > tr.row.ParIntervalos td:visible');
        var tdWidth = 100/$colunasVisiveis.length;
        $colunasVisiveis.each(function(i,o){
            $(o).css('width',tdWidth+"%");
        });
    }

</script>