@model SgqSystem.ViewModels.ParamsViewModel
@{
    Layout = null;
}
<div id="ediCab">
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label(Resources.Resource.field_level as string)
                    @Html.DropDownListFor(m => m.paramsDto.parHeaderFieldDto.ParLevelDefinition_Id, Model.paramsDdl.DdlparLevelDefinition, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label(Resources.Resource.type as string)
                    @Html.DropDownListFor(m => m.paramsDto.parHeaderFieldDto.ParFieldType_Id, Model.paramsDdl.DdlParFieldType, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label(Resources.Resource.field_name as string)
                    @Html.TextBoxFor(m => Model.paramsDto.parHeaderFieldDto.Name, new { @class = "form-control" })
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Model.paramsDto.parHeaderFieldDto.Description))
            {
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.Label(Resources.Resource.description as string)
                        @Html.HiddenFor(m => Model.paramsDto.parHeaderFieldDto.Description, new { @class = "hide" })
                        @{ Model.paramsDto.parHeaderFieldDto.Description = SgqSystem.Helpers.CommonData.PutSpaceBeforeCapitalLetter(Model.paramsDto.parHeaderFieldDto.Description.Replace("|", "")); }
                        @Html.TextBox("DestriptionParHeaderField", Model.paramsDto.parHeaderFieldDto.Description, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                            }
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label(Resources.Resource.link_number_evaluation as string)
                    @Html.CheckBoxFor(m => m.paramsDto.parHeaderFieldDto.LinkNumberEvaluetion, new { @class = "" })
                </div>
            </div>
        </div>
                            if (Model.paramsDto.parHeaderFieldDto.ParFieldType.Id == 1)
                            {
                                <div id="multiplaEscolha">
                                    @foreach (var i in Model.paramsDto.parHeaderFieldDto.ParMultipleValues)
                                    {
                                        @Html.EditorFor(r => i.Id, new { htmlAttributes = new { @value = 0, @type = "text", @style = "max-width: 0px;visibility:hidden;" } })

                                        <div class="row">
                                            <div class="col-xs-4">
                                                <div class="form-group">
                                                    @Html.Label(Resources.Resource.option as string)
                                                    @Html.EditorFor(r => i.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            <div class="col-xs-4">
                                                <div class="form-group">
                                                    @Html.Label(Resources.Resource.punishment_value as string)
                                                    @Html.TextBoxFor(r => i.PunishmentValue, i.PunishmentValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-xs-4">
                                                <div class="form-group">
                                                    @Html.Label(Resources.Resource.is_active as string)
                                                    @Html.CheckBoxFor(r => i.IsActive, new { @value = i.IsActive, @class = "make-switch checkbox-erp" })
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            if (Model.paramsDto.parHeaderFieldDto.ParFieldType.Id == 3)
                            {
                                <div id="binario">
                                    @{int contador = 0; }
                                    @foreach (var i in Model.paramsDto.parHeaderFieldDto.ParMultipleValues)
                                    {
                                        @Html.EditorFor(r => i.Id, new { htmlAttributes = new { @type = "text", @style = "max-width: 0px;visibility:hidden;" } })
                                        <div id="binario">
                                            <div class="row">
                                                <div class="col-xs-5">
                                                    <div class="form-group">
                                                        <span class="hidden">@{ contador += 1; } </span>
                                                        @Html.Label(Resources.Resource.option as string)
                                                        @Html.EditorFor(r => i.Name, new { htmlAttributes = new { @class = "form-control", @id=$"{contador}_Name"} })
                                                    </div>
                                                </div>
                                                <div class="col-xs-5">
                                                    <div class="form-group">
                                                        @Html.Label(Resources.Resource.punishment_value as string)
                                                        @Html.TextBoxFor(r => i.PunishmentValue, i.PunishmentValue.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), new { @class = "form-control", @id = $"{contador}_PunishmentValue" })                                                                                                          
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.EditorFor(r => i.IsActive, new { htmlAttributes = new { @style = "max-width:0px; visibility:hidden;" } })
                                        </div>
                                    }
                                </div>
                            }
                            <div>
                                <button type="button" id="adicionar" onclick="addValores()" class="btn btn-primary" style="margin-top:30px;">@Resources.Resource.add</button>
                            </div>
                            }
</div>
@section Scripts {
    <script>
        $(function () {
            $('#paramsDto_parHeaderFieldDto_LinkNumberEvaluetion').bootstrapToggle();
        })
    </script>
}