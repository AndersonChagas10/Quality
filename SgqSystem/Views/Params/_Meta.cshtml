@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{
    var level = Model.levelControl;
    var name = "Meta";
    var id = "level" + Model.levelControl + "_" + name + "_accordion";
    var id2 = "#level" + Model.levelControl + "__" + name + "_accordion";
    var id3 = "#level" + Model.levelControl + "__" + name + "_collapse";
    var id4 = "level" + Model.levelControl + "__" + name + "_collapse";
    var click = "MetaL" + Model.levelControl + ".adiciona($(this))";
}

<div class="panel-group accordion" id="@id">
    <div class="panel panel-warning">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="@id2" href="@id3" aria-expanded="false"> @Resources.Resource.goal</a>
            </h4>
        </div>
        <div id="@id4" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">
                <h5>
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#modalManagerMeta">@Resources.Resource.to_manager</button>
                    @Resources.Resource.active_goals
                </h5>
                @*<table class="table-erp" id="">
                        <tbody>
                            <tr>
                                @Table.GerarColuna(@Html.DropDownList("metaCompany", Model.paramsDdl.DdlParCompany, htmlAttributes: new { @class = "form-control input-sm", @id = "metaCompany" })
                                    , @Html.Label(Resources.Resource.company)
                                    , Table.PosicaoLabel.top)

                                @Table.GerarColunaButton(@Html.TextBox("percentVal", "", htmlAttributes: new { @id = "percentVal", @class = "form-control input-sm" })
                                    , @Html.Label(Resources.Resource.goal_value)
                                    , Table.PosicaoLabel.top
                                    , button: "<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick='" + @click + ";' id=\"\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>")
                            </tr>
                        </tbody>
                    </table>*@

                <div class="alert alert-info" id="withoutMetaActive">
                    <strong>@Resources.Resource.without @Resources.Resource.active_goals</strong>
                </div>

                <table id="tableMetaActive" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Meta:">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.company</th>
                            <th>@Resources.Resource.effectiveDate</th>
                            <th>@Resources.Resource.percentage</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
        </div>
    </div>

    <!--Modal Gerenciar-->
    <div class="container">
        <div class="modal fade" id="modalManagerMeta" tabindex="-1" role="dialog" aria-labelledby="" data-backdrop="static">
            <div class="modal-dialog" style="max-width:90%;  min-width:70%" role="document">
                <div class="modal-content">
                    <div class="modal-header modal-header-gray">

                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" class="times">&times;</span></button>

                        <h4 class="modal-title" id="Header">@Resources.Resource.management</h4>
                    </div>
                    <div class="modal-body" id="body">
                        <table class="table-erp" id="">

                            <tbody>
                                <tr>

                                    @Table.GerarColuna(@Html.DropDownList("metaCompany", Model.paramsDdl.DdlParCompany, htmlAttributes: new { @class = "form-control input-sm", @id = "metaCompany" })
                                , @Html.Label(Resources.Resource.company)
                                , Table.PosicaoLabel.top)

                                    @Table.GerarColuna(@Html.Editor("effectiveDateMeta", new { htmlAttributes = new { @value = 0, @type = "date", @class = "form-control input-sm" } }), @Html.Label(Resources.Resource.effectiveDate), Table.PosicaoLabel.top)

                                    @Table.GerarColunaButton(@Html.TextBox("percentVal", "", htmlAttributes: new { @id = "percentVal", @class = "form-control input-sm" })
                                , @Html.Label(Resources.Resource.goal_value)
                                , Table.PosicaoLabel.top
                                , button: "<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick='" + @click + ";' id=\"\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>")

                                </tr>
                            </tbody>
                        </table>

                        <table id="tableMeta" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Meta:">
                            <thead>
                                <tr>
                                    <th>@Resources.Resource.company</th>
                                    <th>@Resources.Resource.effectiveDate</th>
                                    <th>@Resources.Resource.percentage</th>
                                    <th class="options"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" id="Fechar" data-dismiss="modal">@Resources.Resource.close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<script>


    var emptyEffectiveDate = "-";
    var levelControl = @Html.Raw(Json.Encode(@Model.levelControl));

    function atribuiVariavelMeta (){

        var paramsDto = @Html.Raw(Json.Encode(@Model.paramsDto));
        var levelDomain;
        var listSalvo;

        if(levelControl == 1){
            levelDomain = "newLevel1Modal";
            listSalvo = paramsDto.parLevel1Dto.listParGoalLevel1;//
            MetaL1 = getCounterObject(levelDomain, listSalvo);//
            MetaL1.carregaDadosDoDb();//

            $('#modalManagerMeta').on('hidden.bs.modal', function () {
                // do something…
                MetaL1.atualizaLista();
            })
        }

    }

    atribuiVariavelMeta();

    function getCounterObject (levelDomain, listSalvo) {
        return {
            /*Setup*/
            levelControl: levelControl,
            level: levelDomain,
            listObjSalvo: listSalvo,
            idTable: 'tableMeta',//
            listObjActive: [],
            idTableActive: 'tableMetaActive',
            tdsNames: ['companyName', 'EffectiveDate', 'PercentValue', 'btn'],
            getObjAdd: function(isEdit, obj){
                if(isEdit != undefined){
                    obj.PercentValue = $('#' + isEdit + ' #percentVal').val();
                    obj.ParCompany_Id = $('#' + isEdit + ' #metaCompany :selected').val();

                    if(obj.ParCompany_Id == "0" || obj.ParCompany_Id == "-1"){
                        compName = "@Resources.Resource.all";
                    }else{
                        obj.companyName = $('#' + isEdit + ' #metaCompany :selected').text();
                    }
                    obj.EffectiveDate = $('#' + isEdit + ' #effectiveDateMeta').val();
                    return obj;
                }else{
                    var compName =  $('#' + this.level + ' #metaCompany :selected').text();
                    var compVal = $('#' + this.level + ' #metaCompany :selected').val();
                    if(compVal == 0 || compVal == "-1" || compVal == "0" || compVal == -1){
                        compName = "@Resources.Resource.all";
                    }

                    return {/*Objeto*/
                        PercentValue    : $('#' + this.level + ' #percentVal').val(),
                        ParCompany_Id  :  compVal,
                        companyName  :  compName,
                        IsActive: true,
                        EffectiveDate: $('#' + this.level + ' #effectiveDateMeta').val(),
                    }
                }
            },
            veifyAdd: function(isEdit) {
                var seletorTato = !!isEdit ? isEdit : this.level;
                /*Valida se pode criar o objeto*/
                if($('#' + seletorTato + ' #percentVal').val().length == 0){
                    openMessageModal("@Resources.Resource.required_fields_unfilled"+":", "@Resources.Resource.goal_value","")
                    return false;
                }

                var $effectiveDate = $('#' + seletorTato + ' #effectiveDateMeta').val();
                if($effectiveDate.replace(/[^0-9.]/g, '') == ""){
                    openMessageModal("@Resources.Resource.invalid_value_for \"@Resources.Resource.effectiveDate\"","");
                    return false;
                }

                /*Verifica Unidade*/
                var companySelected = $('#' + seletorTato + ' #metaCompany :selected').val();
                var exist = $.grep($('#tableMeta  tbody  tr  td:nth-child(1)'), function(o, c){
                    if(companySelected == -1){
                        return ($(o).parent().data().ParCompany_Id == 0
                            || $(o).parent().data().ParCompany_Id == -1
                            || $(o).parent().data().ParCompany_Id == null)
                            && new Date($(o).parent().data().EffectiveDate).getTime() == new Date($effectiveDate).getTime()
                    }
                    return $(o).parent().data().ParCompany_Id == companySelected
                        && new Date($(o).parent().data().EffectiveDate).getTime() == new Date($effectiveDate).getTime()
                });

                if(exist.length){
                    var display = $('#' + seletorTato + ' #metaCompany :selected').text();
                    if(companySelected == -1)
                        display= "@Resources.Resource.all";

                    openMessageModal("@Resources.Resource.data_already_register_on_company"+" " + display + ".", "")
                    return false;
                }

                return true;
            },
            incluiNoObjetoParaSubmit: function(dados){

                var level = this.levelControl;
                $('#' + this.level + ' #' + this.idTable + ' > tbody > tr ').each(function(c, obj){

                    var o = $(obj).data();
                    //#edit
                    if((o.Id != null || o.Id != undefined) && o.Id > 0){
                        dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].Id"] = o.Id;
                    }

                    if(o.EffectiveDate.length < 8){
                        dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].EffectiveDate"]  = null;
                    }else{
                        dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].EffectiveDate"] = o.EffectiveDate;
                    }

                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].PercentValue"] = o.PercentValue;
                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].ParCompany_Id"] = o.ParCompany_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].IsActive"] = o.IsActive;

                });

            },
            atualizaLista: function(){
                $('#'+this.idTableActive+" tbody").empty();
                var dados = $('#newLevel1Modal > form').serializeObject();
                this.listObjActive = [];
                //this.incluiNoObjetoParaSubmit(dados);

                var level = this.levelControl;
                $('#' + this.level + ' #' + this.idTable + ' > tbody > tr ').each(function(c, obj){

                    //regra para evitar duplicidade considerando a ultima data, desta forma resolve-se o rpoblema de mostrar na tela
                    //Ajustar layout
                    //Verificar z-index modal

                    var o = $(obj).data();
                    //debugger
                    if(o.IsActive && (o.EffectiveDate == emptyEffectiveDate || new Date(o.EffectiveDate).getTime() <= new Date().getTime())){
                        var index = -1;
                        $(MetaL1.listObjActive).each(function(i,g){
                            if(o.companyName == g.companyName){
                                if(o.EffectiveDate == emptyEffectiveDate && o.EffectiveDate == g.EffectiveDate){
                                    index = i;
                                    return;
                                } else if(o.EffectiveDate == emptyEffectiveDate || new Date(o.EffectiveDate).getTime() <= new Date(g.EffectiveDate).getTime()){
                                    index = -2;
                                    return;
                                } else if(o.EffectiveDate != emptyEffectiveDate &&
                                    (new Date(o.EffectiveDate).getTime() > new Date(g.EffectiveDate).getTime()
                                    || g.EffectiveDate == emptyEffectiveDate)){
                                    index = i;
                                    return;
                                }
                            }
                        });

                        if(index >= 0){
                            MetaL1.listObjActive.splice(index, 1);
                            index = -1;
                        }

                        if(index == -1)
                            MetaL1.listObjActive.push(o);
                    }
                });

                $(MetaL1.listObjActive).each(function(i,o){
                    $('#'+MetaL1.idTableActive+" tbody").append(
                                '<tr><td>'+o.companyName+'</td>'+
                                '<td>'+o.EffectiveDate+'</td>'+
                                '<td>'+o.PercentValue+'</td></tr>'
                            );
                });
                
                if($('#'+this.idTableActive+' tbody tr').length > 0){
                    $('#'+this.idTableActive).attr('style','');
                    $('#withoutMetaActive').attr('style','display:none;');
                }else{
                    $('#'+this.idTableActive).attr('style','display:none;');
                    $('#withoutMetaActive').attr('style','');
                }
                
                this.atualizarDataLista();

            },
            carregaDadosDoDb: function(){
                var id = this.level + ' #' + this.idTable;
                var tdNamess = this.tdsNames;
                if( this.listObjSalvo != null){ /*Carrega regras de NC*/
                    this.listObjSalvo.forEach(function(o, c){
                        if(o.ParCompany != null){
                            o['companyName'] = o.ParCompany.Name;
                        }else{
                            o['companyName'] = "@Resources.Resource.all";
                        }
                        if(o.EffectiveDate != null)
                            o["EffectiveDate"] = moment(new Date(parseInt(o.EffectiveDate.substr(6)))).format("YYYY-MM-DD");
                        else
                            o["EffectiveDate"] = emptyEffectiveDate;
                        o['PercentValue'] = o.PercentValue;
                        crudNxN.adiciona(o,  id, tdNamess);
                    });
                }

                this.atualizaLista();
            },
            /*Fim Setup*/
            adiciona: function(e) {
                if(this.veifyAdd()){
                    var object = this.getObjAdd();
                    crudNxN.adiciona(object, this.level + ' #' + this.idTable, this.tdsNames);

                    $('#' + this.level + ' #percentVal').val('');
                    $('#' + this.level + ' #metaCompany').val('');
                    $('#' + this.level + ' #effectiveDateMeta').val('');

                    this.atualizarDataLista();
                }
            },
            atualizarDataLista: function(){
                ConverterData('#'+this.idTable,2);
                $('#'+this.idTable).find('button[onclick="crudNxN.funcEdit($(this));"]').remove();
                ConverterData('#'+this.idTableActive,2);
            }
        };
    }

    $(document).ready(function () {
        GuardJs.mascaraNumerica("#percentVal");
    });

</script>