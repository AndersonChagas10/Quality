@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{
    var level = Model.levelControl;
    var name = "Meta";
    var id = "level" + Model.levelControl + "_" + name + "_accordion";
    var id2 = "#level" + Model.levelControl + "__" + name + "_accordion";
    var id3 = "#level" + Model.levelControl + "__" + name + "_collapse";
    var id4 = "level" + Model.levelControl + "__" + name + "_collapse";
    var click = "MetaL" + Model.levelControl + ".adiciona($(this))";
}

<div class="panel-group accordion" id="@id">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="@id2" href="@id3" aria-expanded="false"> @Resources.Resource.goal</a>
            </h4>
        </div>
        <div id="@id4" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
            <div class="panel-body">

                <table class="table-erp" id="">

                    <tbody>
                        <tr>

                            @Table.GerarColuna(@Html.DropDownList("metaCompany", Model.paramsDdl.DdlParCompany, htmlAttributes: new { @class = "form-control input-sm", @id = "metaCompany" })
                                , @Html.Label(Resources.Resource.company)
                                , Table.PosicaoLabel.top)

                          
                            @Table.GerarColunaButton(@Html.TextBox("percentVal", "", htmlAttributes: new { @id = "percentVal", @class = "form-control input-sm" })
                                , @Html.Label(Resources.Resource.goal_value)
                                , Table.PosicaoLabel.top
                                , button: "<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick='" + @click + ";' id=\"\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></button>")

                        </tr>
                    </tbody>
                </table>

                <table id="tableMeta" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Meta:">
                    <thead>
                        <tr>
                            <th>@Resources.Resource.company</th>
                            <th>@Resources.Resource.percentage</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

            </div>
        </div>
    </div>
</div>


<script>

    var levelControl = @Html.Raw(Json.Encode(@Model.levelControl));

    function atribuiVariavelMeta (){

        var paramsDto = @Html.Raw(Json.Encode(@Model.paramsDto));
        var levelDomain;
        var listSalvo;

        if(levelControl == 1){
            levelDomain = "newLevel1Modal";
            listSalvo = paramsDto.parLevel1Dto.listParGoalLevel1;//
            MetaL1 = getCounterObject(levelDomain, listSalvo);//
            MetaL1.carregaDadosDoDb();//
        }

    }

    atribuiVariavelMeta();
    
    function getCounterObject (levelDomain, listSalvo) {
        return {
            /*Setup*/
            levelControl: levelControl,
            level: levelDomain,
            listObjSalvo: listSalvo,
            idTable: 'tableMeta',//
            tdsNames: ['companyName', 'PercentValue', 'btn'],
            getObjAdd: function(isEdit, obj){
                if(isEdit != undefined){
                    obj.PercentValue = $('#' + isEdit + ' #percentVal').val();
                    obj.ParCompany_Id = $('#' + isEdit + ' #metaCompany :selected').val();
                    obj.companyName = $('#' + isEdit + ' #metaCompany :selected').text();
                    return obj;
                }else{
                    var compName =  $('#' + this.level + ' #metaCompany :selected').text();
                    var compVal = $('#' + this.level + ' #metaCompany :selected').val();
                    if(compVal == 0 || compVal == "-1" || compVal == "0" || compVal == -1){
                        compName = "Todos";
                    }

                    return {/*Objeto*/
                        PercentValue    : $('#' + this.level + ' #percentVal').val(),
                        ParCompany_Id  :  compVal,
                        companyName  :  compName,
                        IsActive: true
                    }
                }
            },
            veifyAdd: function(isEdit) {
                var seletorTato = !!isEdit ? isEdit : this.level;
                /*Valida se pode criar o objeto*/
                if($('#' + seletorTato + ' #percentVal').val().length == 0){
                    openMessageModal("@Resources.Resource.required_fields_unfilled"+":", "@Resources.Resource.goal_value")
                    return false;
                }

                /*Verifica Unidade*/
                var companySelected = $('#' + seletorTato + ' #metaCompany :selected').val();
                var exist = $.grep($('#tableMeta  tbody  tr  td:nth-child(1)'), function(o, c){
                    if(companySelected == -1){
                        return $(o).parent().data().ParCompany_Id == 0 || $(o).parent().data().ParCompany_Id == -1 || $(o).parent().data().ParCompany_Id == null
                    }
                    return $(o).parent().data().ParCompany_Id == companySelected;
                });

                if(!!isEdit){/*Edição*/
                   
                } else {/*Inclusão*/
                    if(exist.length){
                        var display = $('#' + seletorTato + ' #metaCompany :selected').text();
                        if(companySelected == -1)
                            display= "Todas";

                        openMessageModal("@Resources.Resource.data_already_register_on_company"+" " + display + ".", "")
                        return false;
                    }
                }

                return true;
            },
            incluiNoObjetoParaSubmit: function(dados){

                var level = this.levelControl;
                $('#' + this.level + ' #' + this.idTable + ' > tbody > tr ').each(function(c, obj){

                    var o = $(obj).data();
                    //#edit
                    if((o.Id != null || o.Id != undefined) && o.Id > 0){
                        dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].Id"] = o.Id;
                    }
                 
                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].PercentValue"] = o.PercentValue;
                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].ParCompany_Id"] = o.ParCompany_Id;
                    dados["paramsDto.parLevel" + level + "Dto.listParGoalLevel1[" + c + "].IsActive"] = o.IsActive;

                });

            },
            carregaDadosDoDb: function(){
                var id = this.level + ' #' + this.idTable;
                var tdNamess = this.tdsNames;
                if( this.listObjSalvo != null){ /*Carrega regras de NC*/
                    this.listObjSalvo.forEach(function(o, c){
                        if(o.ParCompany != null){
                            o['companyName'] = o.ParCompany.Name;
                        }else{
                            o['companyName'] = "Todas";
                        }
                        //console.log(o);
                        o['PercentValue'] = o.PercentValue;
                        crudNxN.adiciona(o,  id, tdNamess);
                    });
                }
            },
            /*Fim Setup*/
            adiciona: function(e) {
                if(this.veifyAdd()){
                    var object = this.getObjAdd();
                    crudNxN.adiciona(object, this.level + ' #' + this.idTable, this.tdsNames);
                }
            },
        };
    }

    $(document).ready(function () {
        GuardJs.mascaraNumerica("#percentVal");
    });

</script>