@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers

@{

    ViewBag.Title = Resources.Resource.customization;
    //URL relativa
    var url1 = Url.Action("AddUpdateLevel1", "api/ParamsApi");
    var url2 = Url.Action("AddUpdateLevel2", "api/ParamsApi");
    var url3 = Url.Action("AddUpdateLevel3", "api/ParamsApi");
    var urlGetLevel1 = Url.Action("GetParLevel1ById", "api/ParamsApi");
    var urlGetLevel2 = Url.Action("GetParLevel2ById", "api/ParamsApi");
    var urlGetLevel3 = Url.Action("GetParLevel3ById", "api/ParamsApi");
    var vinculoL2L3 = Url.Action("AddVinculoL3L2", "api/ParamsApi");
    var vinculoL1L2 = Url.Action("AddVinculoL1L2", "api/ParamsApi");

    var removeLevel3Group = Url.Action("RemoveParLevel3Group", "api/ParamsApi");
    var AddLevel3Group = Url.Action("AddUpdateParLevel3Group", "api/ParamsApi");

    var urlHome = Url.Action("Index", "Home");

}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content" style="min-height: 650px;">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE TITLE-->
        <h1 class="page-title">
            @Resources.Resource.customization
        </h1>
        <!-- END PAGE TITLE-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@urlHome">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource.customization</span>
                </li>
            </ul>
            <div class="page-toolbar">
                <div id="dashboard-report-range" class="pull-right tooltips btn btn-fit-height green">
                    <i class="fa fa-calendar"></i>&nbsp;
                    <span class="thin uppercase" id="currentDate"></span>&nbsp;
                </div>
            </div>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.customization</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">
                                <div class="row">
                                    <div class="col-xs-3">
                                        <button class="btn btn-primary btn-block" id="btnNewLevel1">@Resources.Resource.new_level1</button>
                                    </div>
                                    <div class="col-xs-9">
                                        @Html.DropDownList("paramsDto.parLevel1Selected", Model.paramsDdl.DdlparLevel1, htmlAttributes: new { @class = "form-control select2", @id = "parLevel1Select2" })
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level1_accordion">
                                    <div class="panel panel-info">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_accordion" href="#level1_collapse" aria-expanded="false" id="level1Title">  </a>
                                            </h4>
                                        </div>
                                        <div id="level1_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel1">
                                                    @Html.Partial("~/Views/Params/_ParLevel1.cshtml", Model)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-3">
                                        <button class="btn btn-warning btn-block" id="btnNewLevel2">@Resources.Resource.new_level2</button>
                                    </div>
                                    <div class="col-xs-9" id="partialSelectLevel2">
                                        @Html.Partial("~/Views/Params/_SelectBoxLevel2.cshtml", Model)
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level2_accordion">
                                    <div class="panel panel-warning">
                                        <div class="panel-heading">
                                            <div class="row panel-title">
                                                <div class="col-xs-8">
                                                    <h4 class="panel-title">
                                                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level2_accordion" href="#level2_collapse" aria-expanded="false" id="level2Title"> @Resources.Resource.level2 </a>
                                                    </h4>
                                                </div>
                                                <div class="col-xs-4">
                                                    <button id="vinculoLevel1" class="btn btn-warning pull-right" style="height: 42px;" title="Vincular ao Level 1"><span class="glyphicon glyphicon-link"></span></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="level2_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel2">
                                                    @Html.Partial("~/Views/Params/_ParLevel2.cshtml", Model)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-3">
                                        <button class="btn btn-danger btn-block" id="btnNewLevel3">@Resources.Resource.new_level3</button>
                                    </div>
                                    <div class="col-xs-9" id="partialSelectLevel3">
                                        @Html.Partial("~/Views/Params/_SelectBoxLevel3.cshtml", Model)
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level3_accordion">
                                    <div class="panel panel-danger">

                                        <div class="panel-heading">

                                            <div class="row panel-title">
                                                <div class="col-xs-8">
                                                    <h4 class="panel-title">
                                                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level3_accordion" href="#level3_collapse" aria-expanded="false" id="level3Title"> @Resources.Resource.level3 </a>
                                                    </h4>
                                                </div>
                                                <div class="col-xs-4">
                                                    <button id="vinculoLevel2" class="btn btn-danger pull-right" style="height: 42px;" title="Vincular ao Level 2" onclick="saveLevel3Level2()"><span class="glyphicon glyphicon-link"></span></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="level3_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel3">
                                                    @Html.Partial("~/Views/Params/_ParLevel3.cshtml", Model)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>

<!-- Modal Edição  crudNxN -->
@Html.Partial("_crudNxNModal")

<script>
    /*
        Serializa objeto usando bind de property Name
        $('form').serializeObject();
    */
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");

    navbarSelect("navbar1");

    function openMessageModal(title, content) {

        var mensagem = $('#messageModal');

        mensagem.children('.head').html(title);
        mensagem.children('.body').html(content);
        $('#overlay').fadeIn("fast");
        $('#btnMessageOk').fadeIn("fast");

        mensagem.fadeIn("fast");

        setTimeout(function(){
            $('#overlay').fadeOut("slow");
            $('#btnMessageOk').fadeOut("slow");
            mensagem.fadeOut("slow");
        }, 2000);
      

    }

    $('#btnMessageOk').click(function(){
        $('#overlay').fadeOut("fast");
        var mensagem = $('#messageModal');
        mensagem.fadeOut("fast");
    });

    ///initialize switches

    function defaults() {
        $.fn.bootstrapSwitch.defaults.size = 'small';
        $.fn.bootstrapSwitch.defaults.onText = '@Resources.Resource.yes';
        $.fn.bootstrapSwitch.defaults.offText = '@Resources.Resource.no';
        $(".check-box").bootstrapSwitch();
    }

    function loadSelect2(){
        $.fn.select2.defaults.set("theme", "classic");
        $('.select2').css("max-height","400px");
        $('.select2').select2({matcher: modelMatcher});
        $('.select2-container .select2-selection--single').css('height', '34px');
        $('.select2-container--classic .select2-selection--single .select2-selection__rendered').css('line-height', '34px');
        $('.select2-container--classic .select2-selection--single .select2-selection__arrow').css('height', '32px');
    }

    function modelMatcher (params, data) {
        data.parentText = data.parentText || "";

        // Always return the object if there is nothing to compare
        if ($.trim(params.term) === '') {
            return data;
        }

        // Do a recursive check for options with children
        if (data.children && data.children.length > 0) {
            // Clone the data object if there are children
            // This is required as we modify the object to remove any non-matches
            var match = $.extend(true, {}, data);

            // Check each child of the option
            for (var c = data.children.length - 1; c >= 0; c--) {
                var child = data.children[c];
                child.parentText += data.parentText + " " + data.text;

                var matches = modelMatcher(params, child);

                // If there wasn't a match, remove the object in the array
                if (matches == null) {
                    match.children.splice(c, 1);
                }
            }

            // If any children matched, return the new object
            if (match.children.length > 0) {
                return match;
            }

            // If there were no matching children, check just the plain object
            return modelMatcher(params, match);
        }

        // If the typed-in term matches the text of this term, or the text from any
        // parent term, then it's a match.
        var original = (data.parentText + ' ' + data.text).toUpperCase();
        var term = params.term.toUpperCase();


        // Check if the text contains the term
        if (original.indexOf(term) > -1) {
            return data;
        }

        // If it doesn't contain the term, don't return anything
        return null;
    }

    var t1 = @Html.Raw(Json.Encode(@Resources.Resource.new_level1));
    var t2 = @Html.Raw(Json.Encode(@Resources.Resource.new_level2));
    var t3 = @Html.Raw(Json.Encode(@Resources.Resource.new_level3));

    $('#level1Title').text(t1);
    $('#level2Title').text(t2);
    $('#level3Title').text(t3);
    
    $('#btnNewLevel1').click(function () {
        $('#parLevel1Select2').val('-1').trigger('select2:select').change();
        $('#level1_collapse').collapse('show');
        $('#paramsDto_parLevel1Dto_Name').focus();
    });

    $('#btnNewLevel2').click(function () {
        $('#parLevel2Select2').val('-1').trigger('select2:select').change();
        $('#level2_collapse').collapse('show');
        $('#paramsDto_parLevel2Dto_Name').focus();
    });

    $('#btnNewLevel3').click(function () {
        $('#parLevel3Select2').val('-1').trigger('select2:select').change();
        $('#level3_collapse').collapse('show');
        $('#paramsDto_parLevel3Dto_Name').focus();
    });

    var monthNames = [
        '@Resources.Resource.january',
        '@Resources.Resource.february',
        '@Resources.Resource.march',
        '@Resources.Resource.april',
        '@Resources.Resource.may',
        '@Resources.Resource.june',
        '@Resources.Resource.july',
        '@Resources.Resource.august',
        '@Resources.Resource.september',
        '@Resources.Resource.october',
        '@Resources.Resource.november',
        '@Resources.Resource.december'];

    closeLeftSidebar();

    function twoDigits(str) {
        str = ("000" + str).slice(-2);
        return str;
    }

    function watcher() {

        var date = new Date();
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        var hour = date.getHours();
        var minute = date.getMinutes();
        var second = date.getSeconds();

        $("#currentDate").text(twoDigits(day) + ' @Resources.Resource.of ' + monthNames[monthIndex] + ' @Resources.Resource.of ' + year + ' ' + twoDigits(hour) + ':' + twoDigits(minute) + ':' + twoDigits(second));

        setTimeout(watcher, 1000);
    }

    watcher();

    var url1 = '@Html.Raw(@url1)';
    var url2 = '@Html.Raw(@url2)';
    var url3 = '@Html.Raw(@url3)';
    var AddLevel3Group = '@Html.Raw(@AddLevel3Group)';

    var Geral = {
        TableShow: function(tableId, listEmpty){
            if(!listEmpty){
                $(tableId).hide();
            }else{
                $(tableId).show();
            }
        }
    }

    function dirtForm(oldForm, newForm){
        var o = oldForm.serialize().toString();
        var n = newForm.serialize().toString();
        if (o != n) {
            return true;
        }
        return false;
    }

    //$.fn.isDirty = function () {
    //    var a = this.serializeArray();
    //    for(var i = 0; i < a.length; i++){
    //        if (a[i].value != "" && a[i].value != "0" && a[i].value != 0
    //            && a[i].value != "-1" && a[i].value != -1
    //            && a[i].value != "false" && a[i].value != "true") {
    //            //break;
    //            return true;
    //        }
    //    }
    //    return false;
    //};

    //$.fn.dirty = false;

    var parLevel1Empty = $('#ParLevel1 > form').clone();
    var parLevel2Empty = $('#ParLevel2 > form').clone();
    var parLevel3Empty = $('#ParLevel3 > form').clone();

    var urlGetLevel1 = '@Html.Raw(@urlGetLevel1)';
    var urlGetLevel2 = '@Html.Raw(@urlGetLevel2)';
    var urlGetLevel3 = '@Html.Raw(@urlGetLevel3)';

    var removeLevel3Group = '@Html.Raw(@removeLevel3Group)';

    //Loader estava aqui//

    /*LEVEL 1*/
    var indexParamsLevel1 = {
        new_level1: @Html.Raw(Json.Encode(@Resources.Resource.new_level1)),
        saving_the_level1: @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level1)),
        loading_the_level1: @Html.Raw(Json.Encode(@Resources.Resource.loading)),

        enviarDadosParaApi: function (e) {

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            if ($('#newLevel1Modal > form').valid()) {

                var $btn = $('#btnSaveNewLevel1');
                $btn.button('loading');

                Cabecalhos.UpdateCabecalhos();
                //CounterLevel1.UpdateCounters();
                var dados = $('#newLevel1Modal > form').serializeObject();
                RegraNcL1.incluiNoObjetoParaSubmit(dados);
                ContadoresL1.incluiNoObjetoParaSubmit(dados);
                ReincidenciaL1.incluiNoObjetoParaSubmit(dados);
                ClusterL1.incluiNoObjetoParaSubmit(dados);
                MetaL1.incluiNoObjetoParaSubmit(dados);
                //openLoader();

                $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {

                    //closeLoader();
                    $btn.button('reset');
                    if (objetoReturn.paramsDto.parLevel1Dto.Id > 0) {
                        indexParamsLevel1.GetLevel1(objetoReturn.paramsDto.parLevel1Dto.Id, true);
                        openMessageModal("Alerta", statusmessage);
                    }

                }).fail(function (e, h, x) {
                    //closeLoader();
                    try {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                    } catch (e) {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("Alerta", "Não foi possivel concluir a ação.");
                        console.log(e);
                    }
                });
            }

        },/*Envia os dados referentes ao level1 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {

            var previous = $('#parLevel1Select2 option:selected').val();

            $('#parLevel1Select2')
                .on('focus', function () {
                    previous = $('#parLevel1Select2 option:selected').val();
                })
                .on("change", function (e) {
                    indexParamsLevel2.resetaForm();
                    indexParamsLevel3.resetaForm();
                    if(dirtForm($(initialFormLevel1), $($('form')[0]))){
                        openConfirm(
                            'Existem dados que não foram salvos. Deseja continuar?',
                            function(){
                                indexParamsLevel1.selectLevel1();
                            },
                            function(){
                                //e.preventDefault();
                                $('#parLevel1Select2').val(previous);
                                closeConfirm();
                                return;
                            });
                    }else{
                        indexParamsLevel1.selectLevel1();
                    }
                })

        },/*Inicializa os eventos do select "focus" e "change", no change reseta form level2 e level3, também no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel1: function(){

            closeConfirm();
            var valorSelecionado = $('#parLevel1Select2 option:selected').val();

            if (valorSelecionado == "") {/*Reseta Form*/
                indexParamsLevel1.resetaForm();
            } else {
                indexParamsLevel1.GetLevel1(valorSelecionado);
            }

        },/*Executa ao selecionar um level1*/
        GetLevel1: function(id, isSave) {
            //openLoader();
            $.get('GetParLevel1ById/' + id, function (obj, responseText, xhr) {
                if (obj != null) {
                    $('#ParLevel1').empty();
                    $('#ParLevel1').append(xhr.responseText);
                    UpdateSelect2Level2(id);
                }

                if (id > 0) {
                    $('#level1Title').text('#' + $('#paramsDto_parLevel1Dto_Id').val() + ' - ' + $('#paramsDto_parLevel1Dto_Name').val());
                }
                else {
                    $('#level1Title').text(indexParamsLevel1.new_level1);
                }

                if(!!isSave){
                    /*Atualiza Select*/
                    var retornoId = $('#paramsDto_parLevel1Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel1Dto_Name').val();
                    if ($("#parLevel1Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel1Select2 option:selected").text() != retornoName) {
                            $("#parLevel1Select2 option:selected").text(retornoId + ' - ' + retornoName);
                        }
                    } else {
                        $("#parLevel1Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel1Select2").val(retornoId)
                    }
                }

                updateAllTables();
                initialFormLevel1 = $($('form')[0]).clone();

                reloadPopovers();

                /*Reseta Validação*/
                indexParamsLevel1.resetaValidacao();

                //closeLoader();
            });

        },/*Busca dados do level1 na API*/
        resetaValidacao: function(){

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

        },
        resetaForm: function() {
            $('#ParLevel1').empty();
            $('#ParLevel1').append(parLevel1Empty);
            $('#level1Title').text(indexParamsLevel1.new_level1);
            initialFormLevel1 = $($('form')[0]).clone();
            //closeLoader();
        },
        resetDdlLevel3Level2: function(){
            $('#parLevel2Select2').val('-1');
            indexParamsLevel2.GetLevel2('-1');
            $('#parLevel3Select2').val('-1');
            indexParamsLevel3.GetLevel2('-1');
        }
    }


    /*LEVEL 2*/
    var indexParamsLevel2 = {

        new_level2: @Html.Raw(Json.Encode(@Resources.Resource.new_level2)),
        loading_the_level2 : @Html.Raw(Json.Encode(@Resources.Resource.loading)),
        saving_the_level2 : @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level2)),
        removing_the_level3_group : @Html.Raw(Json.Encode(@Resources.Resource.removing_the_level3_group)),

        enviarDadosParaApi: function (e) {

            $('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val("0");

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            if ($('#newLevel2Modal > form').valid()) {
                //Cabecalhos.UpdateCabecalhos();
                //Cluster.UpdateCounter();
                //CounterLevel2.UpdateCounters();
                var dados = $('#newLevel2Modal > form').serializeObject();
                RegraNcL2.incluiNoObjetoParaSubmit(dados);
                ContadoresL2.incluiNoObjetoParaSubmit(dados);
                ReincidenciaL2.incluiNoObjetoParaSubmit(dados);
                GroupL2.incluiNoObjetoParaSubmit(dados);
                AvAm2.incluiNoObjetoParaSubmit(dados);
                //openLoader(indexParamsLevel2.saving_the_level2);
                $.post(url2, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                    //closeLoader();
                    var $btn = $('#btnSaveNewLevel2');
                    $btn.button('loading');

                    if (objetoReturn.paramsDto.parLevel2Dto.Id > 0) {
                        indexParamsLevel2.GetLevel2(objetoReturn.paramsDto.parLevel2Dto.Id, $('#paramsDto_parLevel3Dto_Id').val(), true)
                        openMessageModal("Alerta", statusmessage);
                    }
                }).fail(function (e, h, x) {
                    try {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                    } catch (e) {
                        $btn.button('reset');
                        closeLoader();
                        openMessageModal("Alerta", "Não foi possivel concluir a ação.");
                        console.log(e);
                    }
                });
            }

        },/*Envia os dados referentes ao level2 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {
            var previous = $('#parLevel2Select2 option:selected').val();
            $('#parLevel2Select2')
                .on('focus', function () {
                    previous = $('#parLevel2Select2 option:selected').val();
                })
                .on("change", function (e) {
                    indexParamsLevel3.resetaForm();
                    if(dirtForm($(initialFormLevel2), $($('form')[1]))){
                        openConfirm(
                            'Existem dados que não foram salvos. Deseja continuar?',
                            function(){
                                indexParamsLevel2.selectLevel2();
                            },
                            function(){
                                $('#parLevel2Select2').val(previous);
                                closeConfirm();
                            });
                    }else{
                        indexParamsLevel2.selectLevel2();
                    }
                });

            closeConfirm();
        },/*Inicializa os eventos do select "focus" e "change", no change reseta form level3,  também no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel2: function(){

            closeConfirm();

            var valorSelecionado = $('#parLevel2Select2 option:selected').val();

            if (valorSelecionado == "") {
                indexParamsLevel2.resetaForm();
            }
            else {
                indexParamsLevel2.GetLevel2(valorSelecionado, $('#paramsDto_parLevel3Dto_Id').val());
            }

            indexParamsLevel2.resetaValidacao();

        },/*Executa ao selecionar um level2*/
        GetLevel2: function(thislevel2Id, thislevel3Id, isSave) {
            //openLoader(indexParamsLevel2.loading_the_level2);
            $.get('GetParLevel2ById',{  level2Id: thislevel2Id, level3Id: thislevel3Id}, function (obj, responseText, xhr) {

                if (obj != null) {
                    $('#ParLevel2').empty();
                    $('#ParLevel2').append(xhr.responseText);
                    UpdateSelect2Level3(thislevel2Id);
                }

                if (thislevel2Id > 0) {
                    $('#level2Title').text('#' + $('#paramsDto_parLevel2Dto_Id').val() + ' - ' + $('#paramsDto_parLevel2Dto_Name').val());
                } else {
                    $('#level2Title').text(indexParamsLevel2.new_level2);
                }

                if(!!isSave){
                    var retornoId = $('#paramsDto_parLevel2Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel2Dto_Name').val();
                    /*Atualiza Select2*/
                    if ($("#parLevel2Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel2Select2 option:selected").text() != retornoName) {
                            $("#parLevel2Select2 option:selected").text(retornoId + ' - ' + retornoName);
                        }
                    } else {
                        $("#parLevel2Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel2Select2").val(retornoId)
                    }
                }

                initialFormLevel2 = $($('form')[1]).clone();

                reloadPopovers();

                indexParamsLevel2.resetaValidacao();

                //closeLoader();
            });

        },/*Busca dados do level2 na API*/
        removeLevel3Group: function(e, element){
            //openLoader(removing_the_level3_group);
            $.post(removeLevel3Group + '/' + element.attr('id'), function (obj, responseText, xhr) {
                //closeLoader();
                if (obj != null) {

                    element.remove();
                }
            });
        },
        resetaForm: function() {
            $('#parLevel2Select2').val('-1');
            indexParamsLevel2.GetLevel2('-1');
            initialFormLevel2 = $($('form')[1]).clone();

            //$('#ParLevel2').empty();
            //$('#ParLevel2').append(parLevel2Empty);
            //$('#level2Title').text(indexParamsLevel2.new_level2);
            //initialFormLevel2 = $($('form')[1]).clone();
            ////closeLoader();
        },
        resetaValidacao: function(){
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
        }
    }


    /*LEVEL 3*/
    var indexParamsLevel3 = {
        new_level3: @Html.Raw(Json.Encode(@Resources.Resource.new_level3)),
        loading_the_level3: @Html.Raw(Json.Encode(@Resources.Resource.loading)),
        saving_the_level3: @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level3)),


        enviarDadosParaApi: function (e) {
            $('#selectTipoInput').val(-1).change();
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            //if($('#selectTipoInput :selected').val() == 1){//Binario
            //    if($('#selectConforme :selected').val() <= 0){
            //        openMessageModal("Um campo obrgatório não foi preenchido:", "Por favor selecione o valor positivo para o campo binario.");
            //        return;
            //    }else if($('#selectNaoConforme :selected').val() <= 0){
            //        openMessageModal("Um campo obrgatório não foi preenchido:", "Por favor selecione o valor negativo para o campo binario.");
            //        return;
            //    }

            //}else{

            //}

            if ($('#newLevel3Modal > form').valid()) {
                //Cabecalhos.UpdateCabecalhos();
                //Cluster.UpdateCounter();
                //Counter.UpdateCounters();
                var dados = $('#newLevel3Modal > form').serializeObject();

                ReincidenciaL3.incluiNoObjetoParaSubmit(dados);
                level3Value.incluiNoObjetoParaSubmit(dados);

                if(dados['paramsDto.parLevel3Value.IntervalMax'] != undefined && dados['paramsDto.parLevel3Value.IntervalMax'] != null)
                    dados['paramsDto.parLevel3Value.IntervalMax'] = dados['paramsDto.parLevel3Value.IntervalMax'].replace(',', '.');

                if(dados['paramsDto.parLevel3Value.IntervalMin'] != undefined && dados['paramsDto.parLevel3Value.IntervalMin'] != null)
                    dados['paramsDto.parLevel3Value.IntervalMin'] = dados['paramsDto.parLevel3Value.IntervalMin'].replace(',', '.');

                try {
                    PesoL3.incluiNoObjetoParaSubmit(dados);
                } catch (e) {
                    console.log(e)
                    console.log("Exceção controlada, se o level 3 não possui vinculo desconsidere esta mensagem, caso possua entre em contato com o suporte da aplicação.")
                }
                //openLoader(indexParamsLevel3.saving_the_level3);
                var $btn = $('#btnSaveNewLevel3');
                $.post(url3, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                    //closeLoader();

                    $btn.button('loading');

                    if (objetoReturn.paramsDto.parLevel3Dto.Id > 0) {
                        indexParamsLevel3.GetLevel3(objetoReturn.paramsDto.parLevel3Dto.Id, $('#paramsDto_parLevel2Dto_Id').val(), true);
                        openMessageModal("Alerta", statusmessage);
                    }

                    initialFormLevel3 = $($('form')[2]).clone();

                }).fail(function (e, h, x) {
                    try {
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                        closeLoader();
                    } catch (e) {
                        $btn.button('reset');
                        closeLoader();
                        openMessageModal("Alerta", "Não foi possivel concluir a ação.");
                        console.log(e);
                    }
                });

            }

        },/*Envia os dados referentes ao level3 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {
            var previous = $('#parLevel3Select2 option:selected').val();
            $('#parLevel3Select2')
                .on('focus', function () {
                    previous = $('#parLevel3Select2 option:selected').val();
                })
                .on("change", function (e) {

                    if(dirtForm($(initialFormLevel3), $($('form')[2]))){
                        openConfirm(
                            'Existem dados que não foram salvos. Deseja continuar?',
                            function(){
                                indexParamsLevel3.selectLevel3();
                            },
                            function(){
                                $('#parLevel3Select2').val(previous).change();
                                closeConfirm();
                            });
                    }else{
                        indexParamsLevel3.selectLevel3();
                    }
                });

        },/*Inicializa os eventos do select "focus" e "change", no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel3: function(){

            closeConfirm();
            var valorSelecionado = $('#parLevel3Select2 option:selected').val();
            var valorSelecionadoLevel2 = $('#parLevel2Select2 :selected').val();

            if (valorSelecionado == "") {
                indexParamsLevel3.resetForm();
            } else {
                indexParamsLevel3.GetLevel3(valorSelecionado, valorSelecionadoLevel2);
            }

            indexParamsLevel3.resetValidacao();

            initialFormLevel3 = $($('form')[2]).clone();
        },/*Executa ao selecionar um level3*/
        GetLevel3: function(valorSelecionado, valorSelecionadoLevel2, isSave) {
            //openLoader(indexParamsLevel3.loading_the_level3);
            $.get('GetParLevel3ById', { id: valorSelecionado, idParLevel2: valorSelecionadoLevel2 }, function (obj, responseText, xhr) {
                //closeLoader();
                if (obj != null) {
                    $('#ParLevel3').empty();
                    $('#ParLevel3').append(xhr.responseText);
                    indexParamsLevel3.resetValidacao();
                }
                if (valorSelecionado > 0) {
                    $('#level3Title').text('#' + $('#paramsDto_parLevel3Dto_Id').val() + ' - ' + $('#paramsDto_parLevel3Dto_Name').val());
                } else {
                    $('#level3Title').text(indexParamsLevel3.new_level3);
                }

                if(!!isSave){
                    /*Atualiza Select*/
                    var retornoId = $('#paramsDto_parLevel3Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel3Dto_Name').val();
                    if ($("#parLevel3Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel3Select2 option:selected").text() != retornoName) {
                            $("#parLevel3Select2 option:selected").text(retornoId + ' - ' + retornoName);
                            //$('#parLevel3Select2').select2();
                        }
                    } else {
                        $("#parLevel3Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel3Select2").val(retornoId);
                    }
                }

                reloadPopovers();
                defaults();
                initialFormLevel3 = $($('form')[2]).clone();

            });
        },/*Busca dados do level3 na API*/
        resetValidacao: function(){
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
        },
        resetaForm: function(){
            $('#parLevel3Select2').val('-1');
            indexParamsLevel3.GetLevel3('-1');
            initialFormLevel3 = $($('form')[2]).clone();

            //$('#ParLevel3').empty();
            //$('#ParLevel3').append(parLevel3Empty);
            //$('#level3Title').text(indexParamsLevel3.newLevel3);
            //initialFormLevel3 = $($('form')[2]).clone();
            //closeLoader();
        }
    }

    indexParamsLevel1.selectNormal();
    indexParamsLevel2.selectNormal();
    indexParamsLevel3.selectNormal();


    /*Vincula Level 3 ao level2*/
    var vinculoL1L2 = '@Html.Raw(@vinculoL1L2)';
    $('#vinculoLevel1').on('click', function (e) {

        var idLevel1 = $('#paramsDto_parLevel1Dto_Id').val();
        var idLevel2 = $('#paramsDto_parLevel2Dto_Id').val();//Verifico se tenho um level2 salvo
        var idLevel3 = $('#paramsDto_parLevel3Dto_Id').val();//Verifico se tenho um level2 salvo
        var level2Selecionado = $('#parLevel2Select2 option:selected');
        var idLevel3Level2 = 0;

        if (idLevel1 <= 0) {
            openMessageModal("Alerta", "É necessario selecionar um indicador para realizar este vínculo.");
            //alert("É necessario selecionar um level 1 para realizar este vinculo.");
            return;
        }

        if (idLevel2 <= 0) {
            openMessageModal("Alerta", "É necessario selecionar um monitoramento para realizar este vínculo.");
            //alert("É necessario selecionar um level 2 para realizar este vinculo.");
            return;
        }

        if (idLevel3 <= 0) {
            openMessageModal("Alerta", "É necessario selecionar uma tarefa para realizar este vínculo.");
            //alert("É necessario selecionar um level 3 realizar este vinculo.");
            return;
        }


        $.get(vinculoL1L2 + '/' + idLevel1 + '/' + idLevel2 + '/' + idLevel3, function (obj, responseText, xhr) {
            if (obj != null) {
                console.log(obj);

                var ids = $.map(obj, function(val,index) {                    
                    var str = val.Id;
                    return str;
                }).join(", ");  

                openMessageModal("Feito!", "Monitoramento e Tarefa vinculados ao Indicador com sucesso! #" +  ids);
                //alert("Vinculado L3 com L2 ID: " + obj.Id);
                UpdateSelect2Level2(idLevel1);
            }
            initialFormLevel3 = $($('form')[2]).clone();
        }).fail(function (e, h, x) {
            openMessageModal("Alerta", e.responseJSON.Message);
            //alert(e.responseJSON.Message); // or whatever
        });

    });

    var vinculoL2L3 = '@Html.Raw(@vinculoL2L3)';

    function UpdateSelect2Level2(idLevel1, idNewLevel2, callback) {
        //$('#parLevel2Select2').select2("destroy").remove();
        var selecionado = $('#parLevel2Select2 :selected').val();
        $('#partialSelectLevel2').load('UpdateSelectLevel2?id=' + idLevel1, function () {
            indexParamsLevel2.selectNormal();
            if (selecionado > 0) {
                $('#parLevel2Select2').val(selecionado);
            }
            if (idNewLevel2 != undefined) {
                $('#parLevel2Select2').val(idNewLevel2);
            }
            if(callback != undefined)
                callback();
        });
    }

    var selecione = @Html.Raw(Json.Encode(Resources.Resource.select))
    function UpdateSelect2Level3(idLevel2, idNewLevel3, callback) {
        //$('#parLevel3Select2').select2("destroy")
        var selecionado = $('#parLevel3Select2 :selected').val();
        $('#partialSelectLevel3').load('UpdateSelectLevel3?id=' + idLevel2, function () {

            indexParamsLevel3.selectNormal();
            if (selecionado > 0) {
                $('#parLevel3Select2').val(selecionado);
            }
            else{
                var id = GroupL2.level + ' #' + GroupL2.idTable;
                var tdNamess = this.tdsNames;
                $('#paramsDto_parLevel3Dto_listGroupsLevel2').empty();
                $('#paramsDto_parLevel3Dto_listGroupsLevel2').append('<option value="-1">' + selecione + '</option>');
                if( GroupL2.listObjSalvo != null){ /*Existem Grupos*/
                    GroupL2.listObjSalvo.forEach(function(o, c){
                        $('#paramsDto_parLevel3Dto_listGroupsLevel2').append('<option value=' + o.Id + '>' + o.Name + '</option>');
                    });
                }
            }
            if (idNewLevel3 != undefined) {
                $('#parLevel3Select2').val(idNewLevel3);
            }
            if(callback != undefined)
                callback();

            initialFormLevel3 = $($('form')[2]).clone();
        });
    }

    $('.table-erp tbody tr').mouseenter(function (e) {
        $('.table-erp tbody tr').removeClass('hover');
        $(this).addClass('hover');
    });
    $('.table-erp tbody tr').mouseleave(function (e) {
        $('.table-erp tbody tr').removeClass('hover');
    });

    var initialFormLevel1 = null;
    var initialFormLevel2 = null;
    var initialFormLevel3 = null;

    $(document).ready(function () {
        reloadPopovers();

        //initialFormLevel1 = $('form')[0];
        //initialFormLevel2 = $('form')[1];
        //initialFormLevel3 = $('form')[2];
    });

    $( document ).ajaxStart(function() {
        openLoader("@Resources.Resource.please_wait"+"...");
    });

    $(document).ajaxError(function myErrorHandler(event, xhr, ajaxOptions, thrownError) {
        closeLoader();
        openMessageModal('Não foi possivel completar a requisição de dados.', '');
    });

    $( document ).ajaxStop(function() {
        closeLoader();
    });


    timeoutAjax = 20000;
    if(window.location.host.indexOf("localhost") != -1){
        timeoutAjax = 500000;
    }
    $.ajaxSetup({

        timeout: timeoutAjax //Time in milliseconds
    });

</script>
