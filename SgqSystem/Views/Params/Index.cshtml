@model SgqSystem.ViewModels.ParamsViewModel
@using SgqSystem.Helpers
@using DTO
@{

    ViewBag.Title = Resources.Resource.customization;
    //URL relativa
    var url1 = Url.Action("AddUpdateLevel1", "api/ParamsApi");
    var url2 = Url.Action("AddUpdateLevel2", "api/ParamsApi");
    var url3 = Url.Action("AddUpdateLevel3", "api/ParamsApi");
    var urlGetLevel1 = Url.Action("GetParLevel1ById", "api/ParamsApi");
    var urlGetLevel2 = Url.Action("GetParLevel2ById", "api/ParamsApi");
    var urlGetLevel3 = Url.Action("GetParLevel3ById", "api/ParamsApi");
    var vinculoL2L3 = Url.Action("AddVinculoL3L2", "api/ParamsApi");
    var vinculoL1L2 = Url.Action("AddVinculoL1L2", "api/ParamsApi");
    var checkVinculoL1L2 = Url.Action("VerificaShowBtnRemVinculoL1L2", "api/ParamsApi");
    var desvinculoVinculoL1L2 = Url.Action("RemVinculoL1L2", "api/ParamsApi");
    var urlSetRequiredCCAB = Url.Action("SetRequiredCCAB", "api/ParamsApi");
    var urlSetDefaultCCAB = Url.Action("SetDefaultCCAB", "api/ParamsApi");
    var urlSaveMeassurementUnit = Url.Action("AddUnidadeDeMedida", "api/ParamsApi");
    var urlAttCabecalho = Url.Action("atualizaCabecalho", "api/ParamsApi");
    var removeLevel3Group = Url.Action("RemoveParLevel3Group", "api/ParamsApi");
    var AddLevel3Group = Url.Action("AddUpdateParLevel3Group", "api/ParamsApi");
    var urlEditCabecalho = @Url.Action("EditParHeaderField", "Params");

    var urlHome = Url.Action("Index", "Home");

}

@*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content" style="min-height: 650px;">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE TITLE-->
        <h1 class="page-title">
            @Resources.Resource.customization
        </h1>
        <!-- END PAGE TITLE-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@urlHome">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource.customization</span>
                </li>
            </ul>
            @*<div class="page-toolbar">
                    <div id="dashboard-report-range" class="pull-right tooltips btn btn-fit-height green">
                        <i class="fa fa-calendar"></i>&nbsp;
                        <span class="thin uppercase" id="currentDate"></span>&nbsp;
                    </div>
                </div>*@
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.customization</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">
                                <div class="row">
                                    <div class="col-xs-3">
                                        @*@if (!GlobalConfig.Eua)
                                            {*@
                                        <button class="btn btn-primary btn-block" id="btnNewLevel1">@Resources.Resource.new_level1</button>
                                        @*}*@
                                    </div>
                                    <div class="col-xs-9">
                                        @Html.DropDownList("paramsDto.parLevel1Selected", Model.paramsDdl.DdlparLevel1, htmlAttributes: new { @class = "form-control select2", @id = "parLevel1Select2", style = "width: 100%" })
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level1_accordion">
                                    <div class="panel panel-info">
                                        <div class="panel-heading">
                                            <h4 class="panel-title">
                                                <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level1_accordion" href="#level1_collapse" aria-expanded="false" id="level1Title">  </a>
                                            </h4>
                                        </div>
                                        <div id="level1_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel1">

                                                    @*@if (!GlobalConfig.Eua)
                                                        {*@
                                                    @Html.Partial("~/Views/Params/_ParLevel1.cshtml", Model)
                                                    @*}*@

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-3">
                                        <button class="btn btn-warning btn-block" id="btnNewLevel2">@Resources.Resource.new_level2</button>
                                    </div>
                                    <div class="col-xs-9" id="partialSelectLevel2">
                                        @Html.Partial("~/Views/Params/_SelectBoxLevel2.cshtml", Model)
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level2_accordion">
                                    <div class="panel panel-warning">
                                        <div class="panel-heading">
                                            <div class="row panel-title">
                                                <div class="col-xs-8">
                                                    <h4 class="panel-title">
                                                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level2_accordion" href="#level2_collapse" aria-expanded="false" id="level2Title"> @Resources.Resource.level2 </a>
                                                    </h4>
                                                </div>
                                                <div class="col-xs-4">
                                                    <button id="vinculoLevel1" class="btn btn-warning pull-right " style="height: 42px;" title="Vincular todos os níveis selecionados"><span class="glyphicon glyphicon-link"></span></button>
                                                    @*<button id="desVinculoLevel1" class="btn btn-warning pull-right " style="height: 42px; display:none" title="Vincular ao Level 1"><i class="fa fa-chain-broken" aria-hidden="true"></i></button>*@
                                                </div>
                                            </div>
                                        </div>
                                        <div id="level2_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel2">
                                                    @Html.Partial("~/Views/Params/_ParLevel2.cshtml", Model)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-3">
                                        <button class="btn btn-danger btn-block" id="btnNewLevel3">@Resources.Resource.new_level3</button>
                                    </div>
                                    <div class="col-xs-9" id="partialSelectLevel3">
                                        @Html.Partial("~/Views/Params/_SelectBoxLevel3.cshtml", Model)
                                    </div>
                                    <hr />
                                </div>
                                <div class="panel-group accordion" id="level3_accordion">
                                    <div class="panel panel-danger">

                                        <div class="panel-heading">

                                            <div class="row panel-title">
                                                <div class="col-xs-8">
                                                    <h4 class="panel-title">
                                                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#level3_accordion" href="#level3_collapse" aria-expanded="false" id="level3Title"> @Resources.Resource.level3 </a>
                                                    </h4>
                                                </div>
                                                <div class="col-xs-4">
                                                    @*<button id="vinculoLevel2" class="btn btn-danger pull-right" style="height: 42px;" title="Vincular ao Level 2" onclick="saveLevel3Level2()"><span class="glyphicon glyphicon-link"></span></button>*@
                                                    <button id="desviculol3l2" class="btn btn-danger pull-right" style="height: 42px;" title="Desvincular do Level 2" onclick="desvincularL3L2()"><i class="fa fa-chain-broken" aria-hidden="true"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="level3_collapse" class="panel-collapse collapse" aria-expanded="false" style="height: 0px;">
                                            <div class="panel-body">
                                                <div id="ParLevel3">
                                                    @Html.Partial("~/Views/Params/_ParLevel3.cshtml", Model)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>

<!-- Modal Edição  crudNxN -->
@Html.Partial("_crudNxNModal")

<!--Modal Edição Cabeçalho-->
<div class="container">
    <div class="modal fade" id="modalEdicaoCabecalho" tabindex="-1" role="dialog" aria-labelledby="" data-backdrop="static">
        <div class="modal-dialog" style="max-width:90%;  min-width:70%" role="document">
            <div class="modal-content">
                <div class="modal-header">

                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" class="times">&times;</span></button>

                    <h4 class="modal-title" id="Header">ID: Header</h4>
                </div>
                <div class="modal-body" id="body">
                    ID: Body
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-default" id="Fechar" data-dismiss="modal" style="display:none">Fechar</button>

                </div>
            </div>
        </div>
    </div>
</div>

<script>

    var hasperm = @Html.Raw(Json.Encode(ViewBag.IsAdmin));
    var unitId = @Html.Raw(Json.Encode(ViewBag.CompanyId));

    function reloadPopovers(){
        $(".popovers").attr("data-toggle", "popover");
        $("[data-toggle=popover]").popover();
    }

    function updateAllTables(){
        $('table').each(function (e) {
            if ($(this).children('tbody').children('tr').not(".example").length > 0) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });

        $('#paramsDto_parHeaderFieldDto_Description').parents('td').hide();
    }

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");

    navbarSelect("navbar1");

    ///initialize switches

    function defaults() {
        $.fn.bootstrapSwitch.defaults.size = 'small';
        $.fn.bootstrapSwitch.defaults.onText = '@Resources.Resource.yes';
        $.fn.bootstrapSwitch.defaults.offText = '@Resources.Resource.no';
        $(".check-box").bootstrapSwitch();

        $('#paramsDto_parLevel1Dto_IsRuleConformity').bootstrapSwitch('onText', '@Resources.Resource.conform');
        $('#paramsDto_parLevel1Dto_IsRuleConformity').bootstrapSwitch('offText', '@Resources.Resource.not_conform');
    }

    function loadSelect2(){
        $('.select2').select2({matcher: modelMatcher});
        TraduzirSelecione();
    }

    function modelMatcher (params, data) {
        data.parentText = data.parentText || "";

        // Always return the object if there is nothing to compare
        if ($.trim(params.term) === '') {
            return data;
        }

        // Do a recursive check for options with children
        if (data.children && data.children.length > 0) {
            // Clone the data object if there are children
            // This is required as we modify the object to remove any non-matches
            var match = $.extend(true, {}, data);

            // Check each child of the option
            for (var c = data.children.length - 1; c >= 0; c--) {
                var child = data.children[c];
                child.parentText += data.parentText + " " + data.text;

                var matches = modelMatcher(params, child);

                // If there wasn't a match, remove the object in the array
                if (matches == null) {
                    match.children.splice(c, 1);
                }
            }

            // If any children matched, return the new object
            if (match.children.length > 0) {
                return match;
            }

            // If there were no matching children, check just the plain object
            return modelMatcher(params, match);
        }

        // If the typed-in term matches the text of this term, or the text from any
        // parent term, then it's a match.
        var original = (data.parentText + ' ' + data.text).toUpperCase();
        var term = params.term.toUpperCase();


        // Check if the text contains the term
        if (original.indexOf(term) > -1) {
            return data;
        }

        // If it doesn't contain the term, don't return anything
        return null;
    }

    function desvincularL3L2(){
        var l1Id = $('#paramsDto_parLevel1Dto_Id').val();
        var l2Id = $('#paramsDto_parLevel2Dto_Id').val();
        var l3Id = $('#paramsDto_parLevel3Dto_Id').val();

        if(l1Id > 0 && l2Id > 0 && l3Id > 0){
            $.post('@Url.Action("RemVinculoL2L3", "api/ParamsApi")' + '/' + l1Id + '/' + l2Id + '/' + l3Id + '/' + unitId, {}, function(r) {
                openMessageModal(r, '');
            });
        }else{
            openMessageModal('É necessário selecionar um vinculo completo para realizar esta ação', '');
        }

    }

    var t1 = @Html.Raw(Json.Encode(@Resources.Resource.new_level1));
    var t2 = @Html.Raw(Json.Encode(@Resources.Resource.new_level2));
    var t3 = @Html.Raw(Json.Encode(@Resources.Resource.new_level3));

    $('#level1Title').text(t1);
    $('#level2Title').text(t2);
    $('#level3Title').text(t3);

    $('#btnNewLevel1').click(function () {
        $('#parLevel1Select2').val('-1').trigger('select2:select').change();
        $('#level1_collapse').collapse('show');
        $('#paramsDto_parLevel1Dto_Name').focus();
    });

    $('#btnNewLevel2').click(function () {
        $('#parLevel2Select2').val('-1').trigger('select2:select').change();
        $('#level2_collapse').collapse('show');
        $('#paramsDto_parLevel2Dto_Name').focus();
    });

    $('#btnNewLevel3').click(function () {
        $('#parLevel3Select2').val('-1').trigger('select2:select').change();
        $('#level3_collapse').collapse('show');
        $('#paramsDto_parLevel3Dto_Name').focus();
    });

    var monthNames = [
        '@Resources.Resource.january',
        '@Resources.Resource.february',
        '@Resources.Resource.march',
        '@Resources.Resource.april',
        '@Resources.Resource.may',
        '@Resources.Resource.june',
        '@Resources.Resource.july',
        '@Resources.Resource.august',
        '@Resources.Resource.september',
        '@Resources.Resource.october',
        '@Resources.Resource.november',
        '@Resources.Resource.december'];

    function twoDigits(str) {
        str = ("000" + str).slice(-2);
        return str;
    }

    function watcher() {

        var date = new Date();
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        var hour = date.getHours();
        var minute = date.getMinutes();
        var second = date.getSeconds();

        $("#currentDate").text(twoDigits(day) + ' @Resources.Resource.of ' + monthNames[monthIndex] + ' @Resources.Resource.of ' + year + ' ' + twoDigits(hour) + ':' + twoDigits(minute) + ':' + twoDigits(second));

        setTimeout(watcher, 1000);
    }

    watcher();

    var url1 = '@Html.Raw(@url1)';
    var url2 = '@Html.Raw(@url2)';
    var url3 = '@Html.Raw(@url3)';
    var desvinculoVinculoL1L2 = '@Html.Raw(@desvinculoVinculoL1L2)';
    var checkVinculoL1L2 = '@Html.Raw(@checkVinculoL1L2)';
    var urlSetRequiredCCAB = @Html.Raw(Json.Encode(urlSetRequiredCCAB));
    var urlSetDefaultCCAB = @Html.Raw(Json.Encode(urlSetDefaultCCAB));

    var AddLevel3Group = '@Html.Raw(@AddLevel3Group)';

    var Geral = {
        TableShow: function(tableId, listEmpty){
            if(!listEmpty){
                $(tableId).hide();
            }else{
                $(tableId).show();
            }
        }
    }

    function dirtForm(oldForm, newForm){
        var o = oldForm.serialize().toString();
        var n = newForm.serialize().toString();
        //if (o != n) {
        //    return true;
        //}
        return false;
    }

    //$.fn.isDirty = function () {
    //    var a = this.serializeArray();
    //    for(var i = 0; i < a.length; i++){
    //        if (a[i].value != "" && a[i].value != "0" && a[i].value != 0
    //            && a[i].value != "-1" && a[i].value != -1
    //            && a[i].value != "false" && a[i].value != "true") {
    //            //break;
    //            return true;
    //        }
    //    }
    //    return false;
    //};

    //$.fn.dirty = false;

    var parLevel1Empty = $('#ParLevel1 > form').clone();
    var parLevel2Empty = $('#ParLevel2 > form').clone();
    var parLevel3Empty = $('#ParLevel3 > form').clone();

    var urlSaveMeassurementUnit = '@Html.Raw(@urlSaveMeassurementUnit)';
    var urlGetLevel1 = '@Html.Raw(@urlGetLevel1)';
    var urlGetLevel2 = '@Html.Raw(@urlGetLevel2)';
    var urlGetLevel3 = '@Html.Raw(@urlGetLevel3)';

    var removeLevel3Group = '@Html.Raw(@removeLevel3Group)';

    //Loader estava aqui//
    var gc = @Html.Raw(Json.Encode(GlobalConfig.Eua));
    /*LEVEL 1*/
    var indexParamsLevel1 = {
        new_level1: @Html.Raw(Json.Encode(@Resources.Resource.new_level1)),
        saving_the_level1: @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level1)),
        loading_the_level1: @Html.Raw(Json.Encode(@Resources.Resource.loading)),

        enviarDadosParaApi: function (e) {

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            if ($('#newLevel1Modal > form').valid()) {

                var $btn = $('#btnSaveNewLevel1');
                $btn.button('loading');

                Cabecalhos.UpdateCabecalhos();
                //CounterLevel1.UpdateCounters();
                var dados = $('#newLevel1Modal > form').serializeObject();
                RegraNcL1.incluiNoObjetoParaSubmit(dados);
                ContadoresL1.incluiNoObjetoParaSubmit(dados);
                ReincidenciaL1.incluiNoObjetoParaSubmit(dados);
                ClusterL1.incluiNoObjetoParaSubmit(dados);
                MetaL1.incluiNoObjetoParaSubmit(dados);
                dados["paramsDto.parLevel1Dto.IsRuleConformity"] = $('#paramsDto_parLevel1Dto_IsRuleConformity').bootstrapSwitch('state');
                dados["paramsDto.parLevel1Dto.IsSpecificNumberEvaluetion"] = $('#paramsDto_parLevel1Dto_IsFixedEvaluetionNumber').bootstrapSwitch('state');
                //openLoader();

                dados["paramsDto.level1Selected"] = $('#parLevel1Select2').val();
                dados["paramsDto.level2Selected"] = $('#parLevel2Select2').val();
                dados["paramsDto.level3Selected"] = $('#parLevel3Select2').val();

                $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {

                    //closeLoader();
                    $btn.button('reset');
                    if (objetoReturn.paramsDto.parLevel1Dto.Id > 0) {
                        indexParamsLevel1.GetLevel1(objetoReturn.paramsDto.parLevel1Dto.Id, true);
                        openMessageModal("Alerta", statusmessage);
                    }

                }).fail(function (e, h, x) {
                    //closeLoader();
                    try {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                    } catch (e) {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("@Resources.Resource.warning", "@Resources.Resource.cannot_finish_action");
                        console.log(e);
                    }
                });
            }

        },/*Envia os dados referentes ao level1 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {

            var previous = $('#parLevel1Select2 option:selected').val();

            $('#parLevel1Select2')
                .on('focus', function () {
                    previous = $('#parLevel1Select2 option:selected').val();
                })
                .on("change", function (e) {
                    indexParamsLevel2.resetaForm();
                    indexParamsLevel3.resetaForm();
                    if(dirtForm($(initialFormLevel1), $($('form')[0]))){
                        openConfirm(
                            '@Resources.Resource.data_not_saved_continue',
                            function(){
                                indexParamsLevel1.selectLevel1();
                            },
                            function(){
                                //e.preventDefault();
                                $('#parLevel1Select2').val(previous);
                                closeConfirm();
                                return;
                            });
                    }else{
                        indexParamsLevel1.selectLevel1();
                    }
                })

        },/*Inicializa os eventos do select "focus" e "change", no change reseta form level2 e level3, também no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel1: function(){

            closeConfirm();
            var valorSelecionado = $('#parLevel1Select2 option:selected').val();

            if (valorSelecionado == "") {/*Reseta Form*/
                //if(!gcEua)
                indexParamsLevel1.resetaForm();
            } else {
                indexParamsLevel1.GetLevel1(valorSelecionado);
            }

        },/*Executa ao selecionar um level1*/
        GetLevel1: function(id, isSave) {
            //openLoader();
            $.get('GetParLevel1ById/' + id, function (obj, responseText, xhr) {
                if (obj != null) {
                    $('#ParLevel1').empty();
                    $('#ParLevel1').append(xhr.responseText);
                    UpdateSelect2Level2(id);
                }

                if (id > 0) {
                    $('#level1Title').text('#' + $('#paramsDto_parLevel1Dto_Id').val() + ' - ' + $('#paramsDto_parLevel1Dto_Name').val());
                }
                else {
                    $('#level1Title').text(indexParamsLevel1.new_level1);
                }

                if(!!isSave){
                    /*Atualiza Select*/
                    var retornoId = $('#paramsDto_parLevel1Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel1Dto_Name').val();
                    if ($("#parLevel1Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel1Select2 option:selected").text() != retornoName) {
                            $("#parLevel1Select2 option:selected").text(retornoId + ' - ' + retornoName);
                        }
                    } else {
                        $("#parLevel1Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel1Select2").val(retornoId)
                    }
                }

                updateAllTables();

                reloadPopovers();

                /*Reseta Validação*/
                indexParamsLevel1.resetaValidacao();

                initialFormLevel1 = $($('form')[0]).clone();
                //closeLoader();
            });

        },/*Busca dados do level1 na API*/
        resetaValidacao: function(){

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

        },
        resetaForm: function() {
            $('#ParLevel1').empty();
            $('#ParLevel1').append(parLevel1Empty);
            $('#level1Title').text(indexParamsLevel1.new_level1);
            initialFormLevel1 = $($('form')[0]).clone();
            //closeLoader();
        },
        resetDdlLevel3Level2: function(){
            $('#parLevel2Select2').val('-1');
            indexParamsLevel2.GetLevel2('-1');
            $('#parLevel3Select2').val('-1');
            indexParamsLevel3.GetLevel2('-1');
        }
    }


    /*LEVEL 2*/
    var indexParamsLevel2 = {

        new_level2: @Html.Raw(Json.Encode(@Resources.Resource.new_level2)),
        loading_the_level2 : @Html.Raw(Json.Encode(@Resources.Resource.loading)),
        saving_the_level2 : @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level2)),
        removing_the_level3_group : @Html.Raw(Json.Encode(@Resources.Resource.removing_the_level3_group)),

        enviarDadosParaApi: function (e) {

            $('#' + RegraNcL2.level + ' #paramsDto_parLevel1Dto_parNotConformityRuleXLevelDto_Value').val("0");

            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            if ($('#newLevel2Modal > form').valid()) {
                //Cabecalhos.UpdateCabecalhos();
                //Cluster.UpdateCounter();
                //CounterLevel2.UpdateCounters();
                var dados = $('#newLevel2Modal > form').serializeObject();

                dados["paramsDto.level1Selected"] = $('#parLevel1Select2').val();
                dados["paramsDto.level2Selected"] = $('#parLevel2Select2').val();
                dados["paramsDto.level3Selected"] = $('#parLevel3Select2').val();

                RegraNcL2.incluiNoObjetoParaSubmit(dados);
                //HeaderL2.incluiNoObjetoParaSubmit(dados);
                ContadoresL2.incluiNoObjetoParaSubmit(dados);
                ReincidenciaL2.incluiNoObjetoParaSubmit(dados);
                GroupL2.incluiNoObjetoParaSubmit(dados);
                AvAm2.incluiNoObjetoParaSubmit(dados);
                //openLoader(indexParamsLevel2.saving_the_level2);
                $.post(url2, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                    //closeLoader();
                    var $btn = $('#btnSaveNewLevel2');
                    $btn.button('loading');

                    if (objetoReturn.paramsDto.parLevel2Dto.Id > 0) {
                        indexParamsLevel2.GetLevel2(objetoReturn.paramsDto.parLevel2Dto.Id, $('#paramsDto_parLevel3Dto_Id').val(), true)
                        openMessageModal("Alerta", statusmessage);
                    }
                }).fail(function (e, h, x) {
                    try {
                        closeLoader();
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                    } catch (e) {
                        $btn.button('reset');
                        closeLoader();
                        openMessageModal("Alerta", "Não foi possivel concluir a ação.");
                        console.log(e);
                    }
                });
            }

        },/*Envia os dados referentes ao level2 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {
            var previous = $('#parLevel2Select2 option:selected').val();
            $('#parLevel2Select2')
                .on('focus', function () {
                    previous = $('#parLevel2Select2 option:selected').val();
                })
                .on("change", function (e) {
                    indexParamsLevel3.resetaForm();
                    if(dirtForm($(initialFormLevel2), $($('form')[1]))){
                        openConfirm(
                            '@Resources.Resource.data_not_saved_continue',
                            function(){
                                indexParamsLevel2.selectLevel2();
                            },
                            function(){
                                $('#parLevel2Select2').val(previous);
                                closeConfirm();
                            });
                    }else{
                        indexParamsLevel2.selectLevel2();
                    }
                });

            closeConfirm();
        },/*Inicializa os eventos do select "focus" e "change", no change reseta form level3,  também no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel2: function(){

            closeConfirm();

            var valorSelecionado = $('#parLevel2Select2 option:selected').val();

            if (valorSelecionado == "") {
                indexParamsLevel2.resetaForm();
            }
            else {
                indexParamsLevel2.GetLevel2(valorSelecionado, $('#paramsDto_parLevel3Dto_Id').val(), false, $('#paramsDto_parLevel1Dto_Id').val());
            }

            indexParamsLevel2.resetaValidacao();

        },/*Executa ao selecionar um level2*/
        GetLevel2: function(thislevel2Id, thislevel3Id, isSave, thislevel1Id) {
            thislevel1Id = !thislevel1Id ? '0' : thislevel1Id;
            $.get('GetParLevel2ById',{  level2Id: thislevel2Id, level3Id: thislevel3Id, level1Id: thislevel1Id}, function (obj, responseText, xhr) {

                if (obj != null) {
                    $('#ParLevel2').empty();
                    $('#ParLevel2').append(xhr.responseText);
                    UpdateSelect2Level3(thislevel2Id);
                }

                if (thislevel2Id > 0) {
                    $('#level2Title').text('#' + $('#paramsDto_parLevel2Dto_Id').val() + ' - ' + $('#paramsDto_parLevel2Dto_Name').val());
                } else {
                    $('#level2Title').text(indexParamsLevel2.new_level2);
                }

                if(!!isSave){
                    var retornoId = $('#paramsDto_parLevel2Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel2Dto_Name').val();
                    /*Atualiza Select2*/
                    if ($("#parLevel2Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel2Select2 option:selected").text() != retornoName) {
                            $("#parLevel2Select2 option:selected").text(retornoId + ' - ' + retornoName);
                        }
                    } else {
                        $("#parLevel2Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel2Select2").val(retornoId)
                    }
                }

                initialFormLevel2 = $($('form')[1]).clone();

                reloadPopovers();

                indexParamsLevel2.resetaValidacao();

                //closeLoader();
            });

        },/*Busca dados do level2 na API*/
        removeLevel3Group: function(e, element){
            //openLoader(removing_the_level3_group);
            $.post(removeLevel3Group + '/' + element.attr('id'), function (obj, responseText, xhr) {
                //closeLoader();
                if (obj != null) {

                    element.remove();
                }
            });
        },
        resetaForm: function() {
            $('#parLevel2Select2').val('-1');
            indexParamsLevel2.GetLevel2('-1');
            initialFormLevel2 = $($('form')[1]).clone();

            //$('#ParLevel2').empty();
            //$('#ParLevel2').append(parLevel2Empty);
            //$('#level2Title').text(indexParamsLevel2.new_level2);
            //initialFormLevel2 = $($('form')[1]).clone();
            ////closeLoader();
        },
        resetaValidacao: function(){
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
        }
    }


    /*LEVEL 3*/
    var indexParamsLevel3 = {
        new_level3: @Html.Raw(Json.Encode(@Resources.Resource.new_level3)),
        loading_the_level3: @Html.Raw(Json.Encode(@Resources.Resource.loading)),
        saving_the_level3: @Html.Raw(Json.Encode(@Resources.Resource.saving_the_level3)),


        enviarDadosParaApi: function (e) {
            $('#selectTipoInput').val(-1).change();
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");

            if ($('#newLevel3Modal > form').valid()) {

                var dados = $('#newLevel3Modal > form').serializeObject();

                ReincidenciaL3.incluiNoObjetoParaSubmit(dados);
                level3Value.incluiNoObjetoParaSubmit(dados);

                dados["paramsDto.level1Selected"] = $('#parLevel1Select2').val();
                dados["paramsDto.level2Selected"] = $('#parLevel2Select2').val();
                dados["paramsDto.level3Selected"] = $('#parLevel3Select2').val();

                if(dados['paramsDto.parLevel3Value.IntervalMax'] != undefined && dados['paramsDto.parLevel3Value.IntervalMax'] != null)
                    dados['paramsDto.parLevel3Value.IntervalMax'] = dados['paramsDto.parLevel3Value.IntervalMax'].replace(',', '.');

                if(dados['paramsDto.parLevel3Value.IntervalMin'] != undefined && dados['paramsDto.parLevel3Value.IntervalMin'] != null)
                    dados['paramsDto.parLevel3Value.IntervalMin'] = dados['paramsDto.parLevel3Value.IntervalMin'].replace(',', '.');

                try {
                    PesoL3.incluiNoObjetoParaSubmit(dados);
                } catch (e) {
                    console.log(e)
                    console.log("Exceção controlada, se o level 3 não possui vinculo desconsidere esta mensagem, caso possua entre em contato com o suporte da aplicação.")
                }
                //openLoader(indexParamsLevel3.saving_the_level3);
                var $btn = $('#btnSaveNewLevel3');
                $.post(url3, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                    //closeLoader();

                    $btn.button('loading');

                    if (objetoReturn.paramsDto.parLevel3Dto.Id > 0) {
                        indexParamsLevel3.GetLevel3(objetoReturn.paramsDto.parLevel3Dto.Id, $('#paramsDto_parLevel2Dto_Id').val(), true);
                        openMessageModal("Alerta", statusmessage);
                    }

                    initialFormLevel3 = $($('form')[2]).clone();

                }).fail(function (e, h, x) {
                    try {
                        $btn.button('reset');
                        openMessageModal("Alerta", e.responseJSON.Message);
                        closeLoader();
                    } catch (e) {
                        $btn.button('reset');
                        closeLoader();
                        openMessageModal("Alerta", "Não foi possivel concluir a ação.");
                        console.log(e);
                    }
                });

            }

        },/*Envia os dados referentes ao level3 para a API, apos isto realiza um get no seu ID e, CASO INSERÇÃO, atualiza a dropDown*/
        selectNormal: function () {
            var previous = $('#parLevel3Select2 option:selected').val();
            $('#parLevel3Select2')
                .on('focus', function () {
                    previous = $('#parLevel3Select2 option:selected').val();
                })
                .on("change", function (e) {

                    if(dirtForm($(initialFormLevel3), $($('form')[2]))){
                        openConfirm(
                            '@Resources.Resource.data_not_saved_continue',
                            function(){
                                indexParamsLevel3.selectLevel3();
                            },
                            function(){
                                $('#parLevel3Select2').val(previous).change();
                                closeConfirm();
                            });
                    }else{
                        indexParamsLevel3.selectLevel3();
                    }
                });

        },/*Inicializa os eventos do select "focus" e "change", no change existe as opções para o modal e validação de form caso haja alterações não salvas*/
        selectLevel3: function(){

            closeConfirm();
            var valorSelecionado = $('#parLevel3Select2 option:selected').val();
            var valorSelecionadoLevel2 = $('#parLevel2Select2 :selected').val();

            if (valorSelecionado == "") {
                indexParamsLevel3.resetForm();
            } else {
                indexParamsLevel3.GetLevel3(valorSelecionado, valorSelecionadoLevel2);
            }

            indexParamsLevel3.resetValidacao();

            initialFormLevel3 = $($('form')[2]).clone();
        },/*Executa ao selecionar um level3*/
        GetLevel3: function(valorSelecionado, valorSelecionadoLevel2, isSave) {
            //openLoader(indexParamsLevel3.loading_the_level3);
            $.get('GetParLevel3ById', { id: valorSelecionado, idParLevel2: valorSelecionadoLevel2 }, function (obj, responseText, xhr) {
                //closeLoader();
                if (obj != null) {
                    $('#ParLevel3').empty();
                    $('#ParLevel3').append(xhr.responseText);
                    indexParamsLevel3.resetValidacao();
                }
                if (valorSelecionado > 0) {
                    $('#level3Title').text('#' + $('#paramsDto_parLevel3Dto_Id').val() + ' - ' + $('#paramsDto_parLevel3Dto_Name').val());
                } else {
                    $('#level3Title').text(indexParamsLevel3.new_level3);
                }

                if(!!isSave){
                    /*Atualiza Select*/
                    var retornoId = $('#paramsDto_parLevel3Dto_Id').val();
                    var retornoName = $('#paramsDto_parLevel3Dto_Name').val();
                    if ($("#parLevel3Select2 option:selected").val() == retornoId) {
                        if ($("#parLevel3Select2 option:selected").text() != retornoName) {
                            $("#parLevel3Select2 option:selected").text(retornoId + ' - ' + retornoName);
                            //$('#parLevel3Select2').select2();
                        }
                    } else {
                        $("#parLevel3Select2").append("<option value=" + retornoId + "> " + retornoId + ' - ' + retornoName + " </option>")
                        $("#parLevel3Select2").val(retornoId);
                    }
                }


                reloadPopovers();
                defaults();
                initialFormLevel3 = $($('form')[2]).clone();

            });
        },/*Busca dados do level3 na API*/
        resetValidacao: function(){
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
            $("form").each(function () { $.data($(this)[0], 'validator', false); });
            $.validator.unobtrusive.parse("form");
        },
        resetaForm: function(){
            $('#parLevel3Select2').val('-1');
            indexParamsLevel3.GetLevel3('-1');
            initialFormLevel3 = $($('form')[2]).clone();

            //$('#ParLevel3').empty();
            //$('#ParLevel3').append(parLevel3Empty);
            //$('#level3Title').text(indexParamsLevel3.newLevel3);
            //initialFormLevel3 = $($('form')[2]).clone();
            //closeLoader();
        }
    }

    indexParamsLevel1.selectNormal();
    indexParamsLevel2.selectNormal();
    indexParamsLevel3.selectNormal();


    /*Vincula Level 3 ao level2*/
    var vinculoL1L2 = '@Html.Raw(@vinculoL1L2)';
    $('#vinculoLevel1').on('click', function (e) {

        var idLevel1 = $('#paramsDto_parLevel1Dto_Id').val();
        var idLevel2 = $('#paramsDto_parLevel2Dto_Id').val();//Verifico se tenho um level2 salvo
        var idLevel3 = $('#paramsDto_parLevel3Dto_Id').val();//Verifico se tenho um level2 salvo
        var level2Selecionado = $('#parLevel2Select2 option:selected');
        var idLevel3Level2 = 0;

        if (idLevel1 <= 0) {
            openMessageModal("@Resources.Resource.alert", "@Resources.Resource.select", "@Resources.Resource.select_audit_first");
            //alert("É necessario selecionar um level 1 para realizar este vinculo.");
            return;
        }

        if (idLevel2 <= 0) {
            openMessageModal("@Resources.Resource.alert", "@Resources.Resource.select_monitoring_first");
            //alert("É necessario selecionar um level 2 para realizar este vinculo.");
            return;
        }

        if (idLevel3 <= 0) {
            openMessageModal("@Resources.Resource.alert", "@Resources.Resource.select_task_first");
            //alert("É necessario selecionar um level 3 realizar este vinculo.");
            return;
        }


        $.get(vinculoL1L2 + '/' + idLevel1 + '/' + idLevel2 + '/' + idLevel3 + '/' + getCookie('webControlCookie')[0].split('=')[1], function (obj, responseText, xhr) {
            if (obj != null) {
                console.log(obj);

                var ids = $.map(obj, function(val,index) {
                    var str = val.Id;
                    return str;
                }).join(", ");

                openMessageModal("@Resources.Resource.done", "@Resources.Resource.monitoring_task_linked_indicator_successfully" +  ids);
                //alert("Vinculado L3 com L2 ID: " + obj.Id);
                $('#desVinculoLevel1').show();
                UpdateSelect2Level2(idLevel1);
                UpdateSelect2Level3(idLevel2, undefined, function(){$('#parLevel3Select2').trigger('change');});
            }
            initialFormLevel3 = $($('form')[2]).clone();
        }).fail(function (e, h, x) {
            $('#desVinculoLevel1').hide();
            openMessageModal("Alerta", e.responseJSON.Message);
            //alert(e.responseJSON.Message); // or whatever
        });

    });


    var vinculoL2L3 = '@Html.Raw(@vinculoL2L3)';

    function UpdateSelect2Level2(idLevel1, idNewLevel2, callback) {
        //$('#parLevel2Select2').select2("destroy").remove();
        var selecionado = $('#parLevel2Select2 :selected').val();
        $('#partialSelectLevel2').load('UpdateSelectLevel2?id=' + idLevel1, function () {
            indexParamsLevel2.selectNormal();
            if (selecionado > 0) {
                $('#parLevel2Select2').val(selecionado);
            }
            if (idNewLevel2 != undefined) {
                $('#parLevel2Select2').val(idNewLevel2);
            }
            if(callback != undefined)
                callback();
        });
    }

    var selecione = @Html.Raw(Json.Encode(Resources.Resource.select))
    function UpdateSelect2Level3(idLevel2, idNewLevel3, callback) {
        //$('#parLevel3Select2').select2("destroy")
        var selecionado = $('#parLevel3Select2 :selected').val();
        var selecionadoLevel1 = $('#paramsDto_parLevel1Dto_Id').val();
        $('#partialSelectLevel3').load('UpdateSelectLevel3?id=' + idLevel2 + "&level1Id=" + selecionadoLevel1, function () {

            indexParamsLevel3.selectNormal();
            if (selecionado > 0) {
                $('#parLevel3Select2').val(selecionado);
            }
            else{
                var id = GroupL2.level + ' #' + GroupL2.idTable;
                var tdNamess = this.tdsNames;
                $('#paramsDto_parLevel3Dto_listGroupsLevel2').empty();
                $('#paramsDto_parLevel3Dto_listGroupsLevel2').append('<option value="-1">' + selecione + '</option>');
                if( GroupL2.listObjSalvo != null){ /*Existem Grupos*/
                    GroupL2.listObjSalvo.forEach(function(o, c){
                        $('#paramsDto_parLevel3Dto_listGroupsLevel2').append('<option value=' + o.Id + '>' + o.Name + '</option>');
                    });
                }
            }
            if (idNewLevel3 != undefined) {
                $('#parLevel3Select2').val(idNewLevel3);
            }
            if(callback != undefined)
                callback();

            initialFormLevel3 = $($('form')[2]).clone();
        });
    }

    $('.table-erp tbody tr').mouseenter(function (e) {
        $('.table-erp tbody tr').removeClass('hover');
        $(this).addClass('hover');
    });
    $('.table-erp tbody tr').mouseleave(function (e) {
        $('.table-erp tbody tr').removeClass('hover');
    });

    var initialFormLevel1 = null;
    var initialFormLevel2 = null;
    var initialFormLevel3 = null;

    $(document).ready(function () {

        if(config){
            $('#level1Title').html("Level 1");
        }

        if(!hasperm){
            $('#btnNewLevel1').hide();
            $('#btnNewLevel2').hide();
            $('#btnNewLevel3').hide();
            disableEvry();
        }

        reloadPopovers();

        $('#desVinculoLevel1').on('click', function() {

            if($('#paramsDto_parLevel1Dto_Id').val() > 0 && $('#paramsDto_parLevel2Dto_Id').val() > 0){

                $.post(desvinculoVinculoL1L2 + "/" + $('#paramsDto_parLevel1Dto_Id').val() + "/" + $('#paramsDto_parLevel2Dto_Id').val(), function(r) {
                    if(r){
                        openMessageModal($('#paramsDto_parLevel2Dto_Name').val() + " foi desvinculado de: " + $('#paramsDto_parLevel1Dto_Name').val() + ".")
                        $('#desVinculoLevel1').hide();
                    }else{
                        $('#desVinculoLevel1').show();
                        openMessageModal("Não foi possível remover o vínculo entre: " + $('#paramsDto_parLevel2Dto_Name').val() + " e: " + $('#paramsDto_parLevel1Dto_Name').val() + ".")
                    }
                }).fail(function (e, h, x) {
                    closeLoader();
                    $('#desVinculoLevel1').show();
                    try {
                        openMessageModal("Alerta", e.responseJSON.Message);
                    } catch (e) {
                        openMessageModal("Não foi possível remover o vínculo entre: " + $('#paramsDto_parLevel2Dto_Name').val() + " e: " + $('#paramsDto_parLevel1Dto_Name').val() + ".")
                        console.log(e);
                    }
                });

            }else{



            }




        });

        initialFormLevel1 = $('form')[0];
        initialFormLevel2 = $('form')[1];
        initialFormLevel3 = $('form')[2];

        TraduzirSelecione();


    });

    function TraduzirVinculados(){

        $('.select2-results__group').each(
            function (index){
                if($('.select2-results__group')[index].innerHTML == "Vinculado:"){
                    $('.select2-results__group')[index].innerHTML = "@Resources.Resource.yes";
                }else if($('.select2-results__group')[index].innerHTML == "Não vinculado:"){
                    $('.select2-results__group')[index].innerHTML = "@Resources.Resource.no";
                }
            })
    }

    function TraduzirSelecione(){

        $('.select2-selection__rendered:visible').each(

                function (index) {

                    try {
                        if($($('.select2-selection__rendered:visible')[index]).attr('title') == "@Resources.Resource.select" || $($('.select2-selection__rendered:visible')[index]).attr('title') == "...") {
                            $($('.select2-selection__rendered:visible')[index]).attr('title',"@Resources.Resource.select");
                        }

                        $('.select2-selection__rendered:visible')[index].innerHTML = $($('.select2-selection__rendered:visible')[index]).attr('title');

                    } catch(err) {

                    }


                }
            )

        $('select').each(

                function (index) {

                    try {
                        $('select')[index].children[0].innerHTML = "@Resources.Resource.select";
                    } catch(err) {

                    }


                }
            )

    }

    $( document ).ajaxStart(function() {
        openLoader("@Resources.Resource.please_wait"+"...");
    });

    $(document).ajaxError(function myErrorHandler(event, xhr, ajaxOptions, thrownError) {
        closeLoader();
        openMessageModal('Não foi possivel completar a requisição de dados.', '');
    });

    $( document ).ajaxStop(function() {
        closeLoader();

    });

    function disableEvry() {

        var l1 = $('#paramsDto_parLevel1Dto_Id').val();
        var l2 = $('#paramsDto_parLevel2Dto_Id').val();
        var l3 = $('#paramsDto_parLevel3Dto_Id').val();
        if(l1 > 0 && l2 > 0 && l3 > 0){
            $('#vinculoLevel1').attr('disabled', false);
        }
        $('#btnSaveNewLevel1').attr('disabled', true);
        $.post('@Url.Action("GetAutorizacoes", "api/ParamsApi")' + '/' + l1 + '/' + l2 + '/' + l3, function(r){

            $('input, select').not("#crudNxNEdit, #parLevel1Select2, #parLevel2Select2, #parLevel3Select2").attr("readonly", true);
            $(':checkbox').bootstrapSwitch('readonly',true);
            $('#desviculol3l2').attr("disabled", true);
            $('#crudNxNEdit').find('input, select').attr("readonly", false);
            $('#crudNxNEdit').find('button').attr("readonly", false);

            $('#paramsDto_parLevel2Dto_ParDepartment_Id option').not(':selected').remove();
            $('#paramsDto_parLevel2Dto_ParFrequency_Id option').not(':selected').remove();

            /*Level2*/
            if(r._PermiteEditarNumeroDeAv){
                $('#btnSaveNewLevel2').attr('disabled', false);
                /*Libera os campos para AV AM*/
                $('#level2_AvAmostra_accordion').find('input, select, button').attr("readonly", false);
                $('#avAmCompany').find('option').not('[value='+ unitId + ']').remove();

                /*habilita Edicao do AV AM*/
                $('#tableAvAm > tbody > tr').each(function() {
                    if($(this).data().companyId != unitId)
                        $(this).find('input, select, button').attr("disabled", true);
                });

            }else{
                $('#btnSaveNewLevel2').attr('disabled', true);
            }

            /*Level3*/
            if (r._PermiteEditarVinculoComTarefa) {
                $('#btnSaveNewLevel3').attr('disabled', false);
                /*Libera os campos para Tipos de dados de entrada*/
                $('#level3_data_type_accordion').find('input, select, button').attr("readonly", false);
                $('#selectTipoInput').on('change', function() {
                    $('#level3_data_type_accordion').find('input, select, button').attr("readonly", false);
                });
                $('#level3_accordion').find('input').attr("readonly", true);
                $('#selectUnidadeParL3Value').find('option').not('[value='+ unitId + ']').remove();

                $('#level3__PesoL3_collapse > div > table.table-erp > tbody > tr > td:nth-child(3) > div > span > button').attr('disabled', true);
                $('#level3_PesoL3_accordion').find('input, select').attr("readonly", false);
                $('#pesoCompany').find('option').not('[value='+ unitId + ']').remove();

                /*habilita Edicao do Tipos de dados de entrada*/
                $('#tableLevel3Value > tbody > tr').each(function() {
                    if($(this).data().ParCompany_Id != unitId)
                        $(this).find('input, select, button').attr("disabled", true);
                });

                /*habilita Edicao do Peso*/
                $('#tablePeso > tbody > tr').each(function() {
                    if($(this).data().ParCompany_Id != unitId){
                        $(this).find('input, select, button').attr("disabled", true);
                    }
                });
            }else{
                $('#btnSaveNewLevel3').attr('disabled', true);
            }

        });


    }

    if(window.location.host.indexOf("localhost") != -1){
        timeoutAjax = 500000;
    }
    
    timeoutAjax = 900000;
    $.ajaxSetup({

        timeout: timeoutAjax //Time in milliseconds
    });

    var config = @Html.Raw(Json.Encode(GlobalConfig.Eua));

    var urlAttCabecalho = '@Html.Raw(@urlAttCabecalho)';
    var idpar = 0;
    var idfieldType;
    var idLvl1;
    var indexCabecalho ={
        enviarDadosParaApi : function (e) {
            var dados = $('#ediCab > form').serializeObject();
            dados['paramsDto.parHeaderFieldDto.ParFieldType_Id'] = idfieldType;
            dados['paramsDto.parHeaderFieldDto.Id'] = idpar;
            if (dados['paramsDto.parHeaderFieldDto.ParFieldType_Id'] == 1 || dados['paramsDto.parHeaderFieldDto.ParFieldType_Id'] == 3) {
                var tam = dados['i.Id'].length;
                var count = 0;
                var ar = [];

                if($.isArray(dados['i.Id'])){

                    // -- Gambiarra para conseguir trabalhar com checkbox do razor
                    // -- Condicional para verificar e tratar a String de retorno do razor
                    var contAct =0;
                    while (count < tam) {
                        var act = dados['i.IsActive'][contAct];
                        if(act == "True" || act == "False" || act == "true"){
                            act = "True";
                            contAct = contAct + 2;
                        }else
                            contAct++;
                        // -- --
                        ar.push({ Id: dados['i.Id'][count], Name: dados['i.Name'][count], ParHeaderField_Id : idpar, PunishmentValue: dados['i.PunishmentValue'][count], IsActive: act});
                        count++;
                    }
                }else{
                    if($.isArray(dados['i.IsActive']))
                        act = "True";
                    else
                        act = "false";
                    ar.push({ Id: dados['i.Id'], Name: dados['i.Name'], ParHeaderField_Id : idpar, PunishmentValue: dados['i.PunishmentValue'], IsActive: act});
                }
                if(controle > 0 ){
                    if(dados['paramsDto.parHeaderFieldDto.ParFieldType_Id'] == 1){
                        count = 0;
                        while(count < controle){
                            var name = 'adName'+count;
                            var punish = 'adValue'+count;
                            ar.push({Name: $('#'+name).val(), PunishmentValue: $('#'+punish).val(), ParHeaderField_Id : idpar, IsActive: "True"});
                            count++;
                        }
                        controle =0;
                    }
                }
                dados['paramsDto.parHeaderFieldDto.ParMultipleValues'] = ar;
            }
            console.log(dados);
            $.post(urlAttCabecalho, dados, function (objetoReturn, statusmessage) {
                if (idLvl1 > 0) {
                    indexParamsLevel1.GetLevel1(idLvl1, true);
                    openMessageModal("Alerta", statusmessage);
                    idLvl1 = 0 ;
                    $('#modalEdicaoCabecalho').modal('hide');
                }

            }).fail(function (e, h, x) {
                //closeLoader();
                try {
                    closeLoader();
                    openMessageModal("Alerta", e.responseJSON.Message);
                } catch (e) {
                    closeLoader();
                    openMessageModal("@Resources.Resource.warning", "@Resources.Resource.cannot_finish_action");
                    console.log(e);
                }
            });
        }
    }
    var EditCabecalho = '@Html.Raw(@urlEditCabecalho)';
    function ModalEdicaoCabecalho(title, idpH,idL1, idFT) {
        idpar = idpH;
        idfieldType = idFT;
        idLvl1 = idL1;
        $('#modalEdicaoCabecalho').modal();
        $('#modalEdicaoCabecalho').find('.modal-body').empty();
        $('#Header').html("Edição de Cabeçalho");

        $.get(EditCabecalho, { id: idpar, idLevel1: idL1 }, function (r) {
            $('#modalEdicaoCabecalho').find('.modal-body').empty().append(r);
            $('#paramsDto_parHeaderFieldDto_ParFieldType_Id').attr('disabled', true);
            if($('#paramsDto_parHeaderFieldDto_ParFieldType_Id').val() == 1)
                $('#adicionar').show();
            else
                $('#adicionar').hide();a
        });

        $('#Fechar').show();
        $('#Salvar').hide();
        ///*Fim Botões*/

    }
    var controle = 0;
    function addValores() {
        var divAdd = '<div class="row" id="row'+controle+'"><div class="col-md-1"';
        divAdd += '<label>Option</label><br /></div><div class="col-md-2">';
        divAdd += '<input class="input-sm form-control" id="adName'+controle+'" />';
        divAdd += '</div>';
        divAdd += '<div class="col-md-2">';
        divAdd += '<label>Value</label><br /></div><div class="col-md-2">';
        divAdd += '<input class="input-sm form-control" id="adValue'+controle+'">';
        divAdd += '</div><div class="col-md-2">';
        divAdd += '<button class="btn btn-danger" id="rem'+controle+'" type="button" onclick="removeCampoNovo('+controle+')">Remover Novo Campo</button></div>'
        divAdd += '</div>';
        $('#multiplaEscolha').append(divAdd);
        controle++;
    }
    function removeCampoNovo(idCampo){
        $('#row'+idCampo).remove();
        while(idCampo < controle){
            var idNovo = idCampo;
            idCampo++;
            $('#adName'+idCampo).attr({'id':'adName'+idNovo});
            $('#adValue'+idCampo).attr({'id':'adValue'+idNovo});
            idCampo++;
        }
        controle--;
    }

</script>