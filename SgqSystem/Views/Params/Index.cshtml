@model SgqSystem.ViewModels.ParamsViewModel
@{
    ViewBag.Title = "ParLeve1";
    var url = Url.Action("AddUpdateLevel1", "api/ParamsApi"); //URL relativa
}


@using (Html.BeginForm())
{
    @Html.LinkVoltar("back", "Voltando")
    @Html.Label("Id (para testes)");
    @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Id);

    <div id="divCadastroIndicadores" style="display: table; border: 1px solid #ccc;">

        <div style="padding: 5px; display:inline-table;">
            <b>Nome do Indicador:</b>
            @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Name, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
        </div>
        <br>
        <div style="padding: 5px; display:inline-table;">
            <b>Descrição do Indicador:</b>
            @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Description, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
        </div>

        <div id="corpoIndicador" style="display: block; margin-top: 10px;">

            <table>
                <tbody>
                    <tr>
                        <td>
                            <b>Tipo de consolidação</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Definir o tipo da consolidação dentre os tipos padrões. Contadores do sistema serão baseados no tipo da consolidação.')">
                        </td>
                        <td>
                            @*@Html.DropDownList("example.SelectedElement", Model., "Select one", htmlAttributes: new { @class = "form-control", @style = "padding: 2px;" })*@
                            @Html.DropDownList("paramsDto.parLevel1Dto._ParConsolidationType_Id", Model.DdlParConsolidation, "Selecione o tipo de consolidacao", htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectConsolidacao" })
                            @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                                    <option>Selecione o tipo de consolidacao</option>
                                    <option>por Tarefa (level 3)</option>
                                    <option>por monitormento (level 2)</option>
                                    <option>por outros</option>
                                </select>*@
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Frequencia</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Frequencia.')">
                        </td>
                        <td>
                            @*@Html.DropDownList("example.SelectedElement", Model., "Select one", htmlAttributes: new { @class = "form-control", @style = "padding: 2px;" })*@
                            @Html.DropDownList("paramsDto.parLevel1Dto._ParFrequency_Id", Model.DdlFrequency, "Selecione a frequência", htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectFrequencia" })
                            @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                                    <option>Selecione o tipo de consolidacao</option>
                                    <option>por Tarefa (level 3)</option>
                                    <option>por monitormento (level 2)</option>
                                    <option>por outros</option>
                                </select>*@
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Botão de salvar nos monitoramentos</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SaveLevel2)
                                <span><a></a></span>
                            </label>
                        </td>


                    </tr>

                    <tr>
                        <td>
                            <b>Botão Não Aplicado (N/A) nos monitoramentos</b> <span class="labelUSA">(USA)</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão de N/A no level 2 para quando os mesmos não se aplicarem à auditoria')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.NoApplicableLevel2)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Agrupador de Monitoramentos</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.GroupLevel2)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Emite Alerta</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.Alert)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Permite cadastro especifico por unidade</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.Specific)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Permite editar campos do cabeçalho</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificHeaderField)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Permite editar numeros de avaliação</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificNumberEvaluetion)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Permite editar numeros de amostras</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificNumberSample)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <td>
                            <b>Permite editar vínculo com tarefas</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificLevel3)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>


                    <tr>
                        <td>
                            <b>Permite editar metodo indicador por unidade</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                        </td>
                        <td>
                            <label class="on-off">
                                @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificGoal)
                                <span><a></a></span>
                            </label>
                        </td>
                    </tr>

                </tbody>
            </table>

          
            @*<div id="divCadastroEspecifico" style="margin: 5px; border: 0px solid #ccc; padding: 2px; background-color:#eee; display: none;">

                    <div style="border: 0px #ccc solid; display: block; padding: 2px; font-size: small; font-weight: bold;">
                        Cadastros especificos
                    </div>

                    <table border="1" cellspacing="0" style="border:#eee;">
                        <tbody>
                            <tr>
                                <td>
                                    Permite editar campos do cabeçalho <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se as unidades terão a possibilidade de editar/criar campos dos cabeçalhos')">
                                </td>
                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="cbEspecificoEditarCampos">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    Permite editar número de avaliações <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se as unidades terão a possibilidade de alterar o número de avaliações')">
                                </td>

                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="cbEspecificoEditarNumAv">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    Permite editar numero de amostras <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se as unidades terão a possibilidade de alterar o número de amostras')">
                                </td>

                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="cbEspecificoEditarNumAm">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    Permite editar vínculo com tarefas <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se as unidades poderão editar/criar os vínculos com as tarefas')">
                                </td>

                                <td>

                                    <label class="on-off">
                                        <input type="checkbox" id="cbEspecificoEditarTar3">
                                        <span><a></a></span>
                                    </label>

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    Permite editar meta do indicador por unidade <input class="btQuestion" type="button" value="?" onclick="getAlerta('Permite a unidade modificar a meta deste indicador')">
                                </td>

                                <td>

                                    <label class="on-off">
                                        <input type="checkbox" id="cbEspecificoEditarMetaUn">
                                        <span><a></a></span>
                                    </label>

                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>

                <div id="divCadastroClusterIndicadores" style="margin: 5px; border: 0px solid #ccc; padding: 2px; background-color:#eee;">

                    <div style="border: 0px #ccc solid; display: block; padding: 2px; font-size: small; font-weight: bold;">
                        Clusters do indicador
                    </div>

                    <table border="1" cellspacing="0px" style="border:#eee;">
                        <tbody>
                            <tr>
                                <td>
                                    <b>Cluster</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Seleciona, dentro dos cadastros prévios, um ou mais clusters aos quais o indicador (level 1) fará parte')">
                                </td>
                                <td>
                                    <select id="selectCluster" style="padding: 3px;">
                                        <option>Selecione o Cluster</option>
                                        <option>Abate</option>
                                        <option>Desossa</option>
                                        <option>Abate e Desossa</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Critério</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se o indicador contará conformidades ou não conformidades para efeito de cálculo e análise.')">
                                </td>
                                <td>

                                    Nao Conforme
                                    <input type="button" value="?" onclick="getAlerta('Tem que se manter abaixo da meta (Menor)')">
                                    <input type="radio" id="radioNaoConforme" name="radioCriterio" checked="">
                                    <br>
                                    Conforme
                                    <input type="button" value="?" onclick="getAlerta('Tem que se manter acima da meta (Maior)')">
                                    <input type="radio" id="radioConforme" name="radioCriterio">

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Valor da Meta (%)</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define o valor da meta em porcentagem')">
                                </td>
                                <td>
                                    <input type="number" max="100" min="0" style="width: 50px;" id="meta">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Pontos</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define quantos pontos do scorecard este indicador disputará.')">
                                </td>
                                <td>
                                    <input type="number" max="100" min="0" style="width: 50px;" id="pontos">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Emitir Alerta</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se este indicador acionará alertas. As regras do alerta serão definidas posteriormente no vínculo entre Tarefa e Monitoramento')">
                                </td>
                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="checkEmitirAlerta">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Cadastro do Total Avaliado</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se o total de avaliados será fixo, segue o padrão que será cadastrado no monitoramento, ou variável, necessitará um cadastro periódico (varia de acordo com a produção)')">
                                </td>
                                <td>

                                    Fixo
                                    <input type="button" value="?" onclick="getAlerta('Conforme cadastro de monitoramentos')">
                                    <input type="radio" id="radioFixo" name="radioTotalAV" checked="">
                                    <br>
                                    Variável
                                    <input type="button" value="?" onclick="getAlerta('Conforme cadastro periódico (Varia de acordo com o volume de produção ou produto produzido)')">
                                    <input type="radio" id="radioNaoVariavel" name="radioTotalAV">

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Número de Avaliações Limitado</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se a quantidade de avaliações a ser feita é fixa, de acordo com o cadastrado, ou o usuário poderá realizar avaliações além das planejadas.')">
                                </td>
                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="checkAvLimitado">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                        </tbody>
                    </table>


                    <input type="button" value="Salvar" onclick="setListaCluster(selectCluster.value, selectCluster.value, radioConforme.checked, meta.value, pontos.value, checkEmitirAlerta.checked, radioFixo.checked, checkAvLimitado.checked ); ListaClusterIndicador('divListaClusters');">


                    <div id="divListaClusters"></div>

                </div>

                <div id="divCadastroCamposIndicadores" style="margin: 5px; border: 0px solid #ccc; padding: 2px; background-color:#eee;">

                    <div style="border: 0px #ccc solid; display: block; padding: 2px; font-size: small; font-weight: bold;">
                        Campos do cabeçalho
                    </div>

                    <table border="1" cellspacing="0" style="border:#eee;">
                        <tbody>
                            <tr>
                                <td>
                                    <b>Nível do Campo</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define em qual cabeçalho (Monitoramento ou Tarefa) o campo será inserido')">
                                </td>
                                <td>
                                    Cabeçalho do Monitoramento <input type="radio" name="radioNivelCampo" id="radioLevel2" value="Level2" checked="">
                                    <br>
                                    Cabeçalho da Tarefa <input type="radio" name="radioNivelCampo" id="radioLevel3" value="Level3">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Nome do Campo</b>
                                </td>
                                <td>
                                    <input type="text" id="txtCampo">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Vinculado ao número de avaliações e amostras</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se o número de avaliações e amostras são vinculados ao campo a ser criado.\n\n Exemplo: número de avaliações e amostras são diferentes dependendo do produto, para Acém, 10 avaliações com 10 amostras cada e para picanha, 10 avaliações com 15 amostras cada.')">
                                </td>
                                <td>
                                    <label class="on-off">
                                        <input type="checkbox" id="cbAvAm">
                                        <span><a></a></span>
                                    </label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <b>Tipo</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se o campo do cabeçalho é de múltipla escolha, binário, integração com o sistema, data, texto ou numérico.\n\nCaso seja múltipla escolha ou binário, definir as opções, caso seja integração com o sistema, definir qual a fonte da integração.')">
                                </td>

                                <script>

                                    function setDivCamposCabecalho(option)
                                    {

                                        onlyHideDiv('divMultEscolha');
                                        onlyHideDiv('divBinario');
                                        onlyHideDiv('divIntegracoes');

                                        switch(option)
                                        {
                                            case 'Multipla escolha': onlyShowDiv('divMultEscolha');
                                                    break;
                                            case 'Integracoes': onlyShowDiv('divIntegracoes');
                                                    break;
                                            case 'Binario': onlyShowDiv('divBinario');
                                                    break;
                                        }
                                    }

                                    var vetorListaDeCampos = new Array();
                                    vetorListaDeCampos[0] = "Multipla escolha";
                                    vetorListaDeCampos[1] = "Integracoes";
                                    vetorListaDeCampos[2] = "Binario";
                                    vetorListaDeCampos[3] = "Texto";
                                    vetorListaDeCampos[4] = "Numerico";


                                    var mult = new Array(new Array());

                                    mult[0] = ["Cod.","Valor do Campo", "Punicao"];


                                </script>

                                <td>
                                    <select id="selectTipoCampo" onchange="setDivCamposCabecalho(this.value);">
                                        <option value="">Selecione o Tipo</option>
                                        <option value="Multipla escolha">Multipla escolha</option>
                                        <option value="Integracoes">Integracoes</option>
                                        <option value="Binario">Binario</option>
                                        <option value="Texto">Texto</option>
                                        <option value="Numerico">Numerico</option>
                                        <option value="Data">Data</option>
                                    </select>
                                </td>
                            </tr>

                            <tr>
                                <td colspan="2">

                                    <div id="divMultEscolha" style="display: none;">

                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        Opção
                                                    </td>
                                                    <td>
                                                        Punição/Premiação <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define o valor de punição e/ou premiação atribuído às opções conforme o cadastro anterior')">
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <div id="divTipoCampo">

                                                            <input type="text" id="txtOpcao">
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <input type="number" id="nBPunicao" style="width: 50px;">
                                                        <input type="button" value="+" onclick="setVetorMult(mult, txtOpcao.value, 'divMultEscolhaCampos', 'mult', nBPunicao.value);">
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>

                                        <div id="divMultEscolhaCampos"></div>
                                    </div>

                                    <div id="divBinario" style="display: none;">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td></td>
                                                    <td>Valor</td>
                                                    <td>Punição/Premiação <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define o valor de punição e/ou premiação atribuído às opções conforme o cadastro anterior')"></td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Positivo
                                                    </td>
                                                    <td>
                                                        <input type="text" id="txtBinConforme">
                                                    </td>
                                                    <td>
                                                        <input type="number" id="nBPunicaoBinPositivo" style="width: 50px;">
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Negativo
                                                    </td>
                                                    <td>
                                                        <input type="text" id="txtBinNaoConforme">
                                                    </td>
                                                    <td>
                                                        <input type="number" id="nBPunicaoBinNegativo" style="width: 50px;">
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div id="divIntegracoes" style="display: none;">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        Produtos
                                                    </td>
                                                    <td>
                                                        <input type="radio" name="radioIntegracoes" id="radioIntProdutos" value="Produtos">
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Usuarios
                                                    </td>
                                                    <td>
                                                        <input type="radio" name="radioIntegracoes" id="radioIntUsuarios" value="Usuarios">
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Equipamentos
                                                    </td>
                                                    <td>
                                                        <input type="radio" name="radioIntegracoes" id="radioIntEquipamentos" value="Equipamentos">
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>

                    <script>

                            var camposCabecalho = new Array(new Array());

                            camposCabecalho[0] = ["Cod.","Nivel do campo", "Nome do Campo", "Vinculado", "Tipo", "Opcoes", "Valor pun/prem"];

                            var vetorCamposCabecalho = new Array();

                            function setVetorCamposCabecalho(c1,c2,c3,c4,c5)
                            {

                                var v = c4;
                                var tabela = "";

                                switch(c3)
                                {
                                    case 'Multipla escolha':


                                        v = mult;

                                        tabela += "<table>";

                                        tabela += "<tr><td>Cod.</td><td>Nome</td><td>Pun/Prem</td></tr>";

                                        for(var i = 1; i < v.length; i++)
                                        {
                                            tabela += "<tr><td>" + v[i][0] + "</td><td>" + v[i][1] + "</td><td>" + v[i][2] + "</td></tr>";
                                        }

                                        tabela += "</table>";

                                        break;

                                    case 'Integracoes':

                                        if(radioIntProdutos.checked == true)
                                        {
                                            tabela += radioIntProdutos.value;
                                        }

                                        if(radioIntUsuarios.checked == true)
                                        {
                                            tabela += radioIntUsuarios.value;
                                        }

                                        if(radioIntEquipamentos.checked == true)
                                        {
                                            tabela += radioIntEquipamentos.value;
                                        }

                                        break;

                                    case 'Binario':
                                        tabela += txtBinConforme.value + " | " + txtBinNaoConforme.value;
                                        break;

                                    case 'Texto':
                                        break;

                                    case 'Numerico':
                                        break;

                                }

                                if(radioLevel2.checked == true)
                                {
                                    vetorCamposCabecalho[0] = radioLevel2.value;
                                }

                                if(radioLevel3.checked == true)
                                {
                                    vetorCamposCabecalho[0] = radioLevel3.value;
                                }

                                vetorCamposCabecalho[1] = c1;
                                vetorCamposCabecalho[2] = c2;
                                vetorCamposCabecalho[3] = c3;
                                vetorCamposCabecalho[4] = tabela;
                                vetorCamposCabecalho[5] = c5;
                            }

                    </script>

                    <input type="button" value="Salvar" onclick="setVetorCamposCabecalho(txtCampo.value, cbAvAm.checked, selectTipoCampo.value, vetorListaDeCampos, nBPunicao.value); setVetorCabecalho(camposCabecalho, vetorCamposCabecalho, 'divCamposFeitos', 'camposCabecalho');">

                    <br>

                    <div id="divCamposFeitos"></div>

                </div>*@

            <div style="width: 100%; float: left;">
                <input type="button" value="Salvar o Indicador" onclick="indexParamsLevel1.enviarDadosParaApi();" style="font-size: small; padding: 10px; font-weight: bold;">
            </div>

        </div>

    </div>
}



<script>

    var url1 = '@Html.Raw(@url)';

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    var indexParamsLevel1 = {
        enviarDadosParaApi: function (e) {
            var dados = $('form').serializeObject();
            $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                console.log(objetoReturn);
                console.log(statusmessage);
                console.log(respostaCompleta);
            });
        }
    }

</script>