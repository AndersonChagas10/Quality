<style>
    #tabelaAgendamento td {
        white-space: nowrap;
    }

    #tabelaAgendamento input {
        width: 140px;
    }
</style>

<table id="tableAvAm" class="table table-condensed table-responsive no-margin margin-top" nameModal="Editar Avaliação e Amostra:">
    <thead>
        <tr>
            <th>Valor</th>
            <th>Peso</th>
            <th>Cor</th>
            <th class="options"></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div class="modal fade" id="modalAgendamento" role="dialog">
    <div class="modal-dialog modal-lg vertical-align-center">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Agendamento</h4>
            </div>
            <div class="modal-body">
                <input class="hidden" data-column="inpAvaliacaoId" />
                <div style="overflow:auto;">
                    <table id="tabelaAgendamento" style="display:block !important;max-width: 100%;" class="table table-condensed no-margin margin-top">
                        <thead>
                            <tr>
                                <th>Valor</th>
                                <th>Peso</th>
                                <th>Cor</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSalvar" class="btn btn-success">Salvar</button>
                <button type="button" data-dismiss="modal" onclick="LimpaCampos()" class="btn btn-default">Fechar</button>
            </div>
        </div>
        

    </div>
<script>
    //variaveis globais
    var botaoAgendamento = '';
    var valorAvaliacao = '';
    var listaAgendamento = [];
    var ParLevel3_Id = '';

    $("#modalAgendamento").on('close', function () {
        console.log('model fechado');
        ContadorLinhas();
    });

    function abrirmodalAgendamento(linha) {
        debugger
        $("#tabelaAgendamento tbody").html("");
        $("#tabelaAgendamento").attr('style', '');
        var obj = $(linha).parents('tr').data();
        ParLevel3_Id = obj.Id;
        valorAvaliacao = obj.evaluationNumber;
        botaoAgendamento = linha;
        $('#modalAgendamento').modal('show');
        var id = obj.Id;
        $.ajax({
            url: '@Url.Content("~")' + 'api/AgendamentoApi/Get/' + id,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                for (i = obj.IntervalMin; i <= obj.IntervalMax; i++) {
                    var valor = i;
                    var teste = data.find((item) => item.Valor == valor);

                    if (teste != null) {
                        MontaNovaLinha(teste, valor);
                    } else {
                       
                        MontaNovaLinha(null, valor);
                    }
                }
            },
            error: function (request, error) {
                alert("Request: " + JSON.stringify(request));
            }
        });
    }

    function LimpaCampos() {
        $("[data-column=inpInicio]").val("");
        $("[data-column=inpTermino]").val("");
    }


    function DeletaLinha(data, linha) {
        $(linha).html('tr').remove();
    }

    function ContadorLinhas() {
        var tamanho = $("#tabelaAgendamento tbody").find('tr').length;

        if (tamanho <= 1) {
            $(botaoAgendamento).removeClass('btn-success').addClass('btn-default');
            $('#paramsDto_parLevel2Dto_ParFrequency_Id').prop('disabled', false);
        } else {
            $(botaoAgendamento).removeClass('btn-default').addClass('btn-success');
            $('#paramsDto_parLevel2Dto_ParFrequency_Id').prop('disabled', true);
        }
    }

    function MontaNovaLinha(data, valor) {
        $("#tabelaAgendamento tbody").append("<tr>"
            + '<td><input type="number" min="0" class="input-sm notAllowNegative" data-column="inpValor" disabled="disabled" /></td>'
            + '<td><input type="number" min="0" class="input-sm notAllowNegative" data-column="inpPeso" /></td>'
            + '<td><input type="color" name="favcolor" value = "#ff0000"  class="input-sm" data-column="inpCor" /></td>'
            + '<td class="hidden"> <input data-column="inpParLevel3Value_Id" class="hidden" /></td>'
            + '<td class="hidden"> <input data-column="inpId" class="hidden" /></td>'
            // + '<td>  <button type="button" title="Adicionar na lista" class="btn btn-primary btn-sm fa fa-plus"" id="btnSalvarAgendamento"></button> <button type="button" onclick="deletarRegistro(this)" class="btn btn-danger btn-sm fa fa-times hidden btnDeletarAgendamento"></button></td>'
            + "</tr>");

        //$("[data-column=inpTipoAgendamento]").val($("#paramsDto_parLevel2Dto_ParFrequency_Id [selected]").text());

        if (data != null && data != undefined) {
            $("#tabelaAgendamento tbody tr:last").data(data);
            $("#tabelaAgendamento tbody tr:last").find('[data-column="inpValor"]').val(valor);
            $("#tabelaAgendamento tbody tr:last").find('[data-column="inpPeso"]').val(data.Peso);
            $("#tabelaAgendamento tbody tr:last").find('[data-column="inpCor"]').val(data.Cor);
            $("#tabelaAgendamento tbody tr:last").find('[data-column=inpParLevel3Value_Id]').val(ParLevel3_Id);
            $("#tabelaAgendamento tbody tr:last").find('[data-column=inpId]').val(data.Id);
            //$("#tabelaAgendamento tbody tr:last").find("#btnSalvarAgendamento").removeClass('btn-primary fa fa-plus').addClass('btn-success fa fa-pencil-square-o').text('').addClass('hidden');
            //if (data.Id > 0) {
            //    $("#tabelaAgendamento tbody tr:last").find('[data-column=inpId]').val(data.Id);
            //}
        } else {
            $("#tabelaAgendamento tbody tr:last").find('[data-column="inpValor"]').val(valor);
            $("#tabelaAgendamento tbody tr:last").find('[data-column=inpParLevel3Value_Id]').val(ParLevel3_Id);
        }
    }


    function EditaLinha(data, linha) {
        if (!!data && data.Id > 0) {
            $(linha).data(data);
            $(linha).find('[data-column=inpInicio]').val(data.Inicio);
            $(linha).find('[data-column=inpTermino]').val(data.Fim);
            $(linha).find('[data-column=inpAvaliacao]').val(data.Av);
            $(linha).find('[data-column=inpId]').val(data.Id);
            $(linha).find("#btnSalvarAgendamento").removeClass('btn-primary fa fa-plus').addClass('btn-success fa fa-pencil-square-o').text('');
            $(linha).find(".btnDeletarAgendamento").removeClass('hidden');
            $(linha).find("[data-column=slAgendamento]").val(data.Shift_Id);
        }
    }

    //function deletarRegistro(data) {
    //    var linha = $(data).parents('tr');
    //    var form = {
    //        Inicio: $(linha).data()['Inicio'],
    //        Fim: $(linha).data()['Fim'],
    //        Av: $(linha).data()['Av'],
    //        Shift_Id: $(linha).data()['Shift_Id'],
    //        ParEvaluation_Id: $(linha).data()['ParEvaluation_Id'],
    //        Id: $(linha).data()['Id'],
    //        IsDeletar: !$(linha).data()['IsDeletar']
    //    };
    //    $(linha).data(form);
    //    $(linha).find(".btnDeletarAgendamento").removeClass('btn-danger').addClass('btn-default');
    //    @*$.ajax({
    //        url: '@Url.Content("~")' + 'api/AgendamentoApi/Delete',
    //        type: 'DELETE',
    //        data: form,
    //        dataType: 'json',
    //        success: function (data) {
    //            DeletaLinha(data, linha);
    //            ContadorLinhas();
    //            openMessageModal("Registro deletado com sucesso",null);
    //        },
    //        error: function (request, error) {
    //            alert("Request: " + JSON.stringify(request));
    //        }
    //    });*@
    //}

    $("#modalAgendamento").on('input', '[data-column="inpPeso"]', function () {
        if (parseInt($(this).val()) < 0 || parseInt($(this).val()) > 100) {
            $(this).addClass('alert-danger');
        } else {
            $(this).removeClass('alert-danger');
        }
    });

    $("#modalAgendamento").on('click', "#btnSalvar", function () {
        var listaTabelaAgendamento = [];
        var contadorErros = 0;
        listaTabelaAgendamento = $("#tabelaAgendamento tbody tr");
        debugger
        listaTabelaAgendamento.each(function (index, item) {
            form = {
                Valor: $(item).find("[data-column=inpValor]").val(),
                Peso: $(item).find("[data-column=inpPeso]").val(),
                Cor: $(item).find("[data-column=inpCor]").val(),
                ParLevel3Value_Id: $('input[data-column="inpParLevel3Value_Id"]').val(),
                Id: $(item).find("[data-column=inpId]").val()
            };
            debugger
            if (parseInt(form.Peso) < 0 || form.Peso === "" || parseInt(form.Peso) === "NaN" || parseInt(form.Peso) > 100) {
                contadorErros++;
            }
            if (form.Cor === null || form.Cor === "" || form.Cor === "NaN") {
                contadorErros++;
            }

            listaAgendamento.push(form);
        });
  
        if (contadorErros <= 0) {
            $.ajax({
                url: '@Url.Content("~")' + 'api/AgendamentoApi/Post',
                type: 'POST',
                data: JSON.stringify(listaAgendamento),
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    listaAgendamento = [];
                    openMessageModal("Dados salvos com sucesso", null);

                    $('#modalAgendamento').modal('hide');
                    ContadorLinhas();
                },
                error: function (request, error) {
                    listaAgendamento = [];
                    ContadorLinhas();
                    alert("Request: " + JSON.stringify(request));
                }
            });
        } else {
            openMessageModal("Campos obrigatórios Peso e Cor possuem valores inválidos.", null);
        }

    });

    //$("#modalAgendamento").on('input', '[ data-column=inpPeso]', function () {
    //    let tabela = $('#tabelaAgendamento tbody tr').not(':first');
    //    $(tabela).find('[data-column=inpPeso]').each(function (i, o) {
    //        var self = o;
    //        var peso = $(self).parents("tr").find('[data-column=inpPeso]').val();
    //        //var turno = $(self).parents("tr").find('[data-column=slAgendamento]').val();

    //        //let isDuplicated = $.grep(tabela, (o) => {
    //        //    return avaliacao == $(o).find('[data-column=inpAvaliacao]').val()
    //        //        && turno == $(o).find('[data-column=slAgendamento]').val();
    //        //});
    //        //$(self).removeClass('alert-danger');

    //        if (peso > 0 || peso < 100) {
    //            $(self).addClass('alert-danger');
    //        } else {
    //            $(self).removeClass('alert-danger');
    //        }
    //        //if (isDuplicated.length > 1) {
    //        //    $(self).addClass('alert-danger');
    //        //}

    //    });
    //});

    $("#modalAgendamento").on('change', '[data-column=slAgendamento]', function () {
        let tabela = $('#tabelaAgendamento tbody tr').not(':first');
        $(tabela).find('[data-column=inpAvaliacao]').each(function (i, o) {
            var self = o;
            var avaliacao = $(self).parents("tr").find('[data-column=inpAvaliacao]').val();
            var turno = $(self).parents("tr").find('[data-column=slAgendamento]').val();

            let isDuplicated = $.grep(tabela, (o) => {
                return avaliacao == $(o).find('[data-column=inpAvaliacao]').val()
                    && turno == $(o).find('[data-column=slAgendamento]').val();
            });
            $(self).removeClass('alert-danger');
            if (isDuplicated.length > 1) {
                $(self).addClass('alert-danger');
            }

        });
    });

    $("#modalAgendamento").on('click', "#btnSalvarAgendamento", function () {

        var linha = $(this).parent().parent();
        var inicio = $(linha).find('[data-column=inpInicio]').val();
        var termino = $(linha).find('[data-column=inpTermino]').val();
        var avaliacao = $(linha).find('[data-column=inpAvaliacao]').val();
        var formato = $("#paramsDto_parLevel2Dto_ParFrequency_Id [selected]").text();
        var turno = $('[data-column="slAgendamento"] :selected').val();

        //Validar preenchido
        if (!camposIsValid(avaliacao, inicio, termino, turno)) {
            return false;
        }

        if (!frequenciaIsValid(formato, parseInt(inicio), parseInt(termino))) {
            openMessageModal("Intervalo de frequência inválido", null);
            return false;
        }

        var isEdit = !!$(this).parents('tr').data()['Id'];
        if (valorAvaliacao >= $(linha).find("[data-column=inpAvaliacao]").val()) {

            var form = {
                Inicio: $(linha).find("[data-column=inpInicio]").val(),
                Fim: $(linha).find("[data-column=inpTermino]").val(),
                Av: $(linha).find("[data-column=inpAvaliacao]").val(),
                Shift_Id: $(linha).find("[data-column=slAgendamento]").val(),
                ParEvaluation_Id: $(linha).find("[data-column=inpAvaliacaoId]").val(),
                Id: $(linha).find("[data-column=inpId]").val()
            };
            MontaNovaLinha(form, isEdit);
            $(linha).find('input:enabled').val('');


        } else {
            openMessageModal('Valor da avaliação maior do que o permitido!', null);
        }
    });

    function camposIsValid(peso, cor) {
        if (peso == null || peso == undefined || peso < 0 || peso === "") {
            openMessageModal("O campo Peso deve ser preechido", null);
            return false;
        }

        if (cor == null || cor == undefined || cor < 0 || cor === "") {
            openMessageModal("O campo Cor deve ser preechido", null);
            return false;
        }

        //let tabela = $('#tabelaAgendamento tbody tr').not(':first');

        //let isDuplicated = $.grep(tabela, (o) => {
        //    return turno == $(o).find('[data-column="slAgendamento"] :selected').val() &&
        //        avaliacao == $(o).find('[data-column=inpAvaliacao]').val();

        //}).length > 0;

        //if (isDuplicated) {
        //    openMessageModal("Já existe um agendamento para esta avaliação ou turno", null);
        //    return false;
        //}
        return true;
    }

</script>
