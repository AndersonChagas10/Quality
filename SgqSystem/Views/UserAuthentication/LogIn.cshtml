@model SgqService.ViewModels.UserViewModel
@using SgqSystem.Helpers
@using DTO
@{
    ViewBag.Title = Resources.Resource.log_in as string;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var urlRecPassword = @Url.Action("PasswordRecovery", "UserAuthentication");
    var urlBuscaEmail = @Url.Action("buscaEmail", "UserAuthentication");
    var urlEnviaEmail = @Url.Action("enviaEmail", "UserAuthentication");
    //Model.IsWeb = true;
    var Ytoara = GlobalConfig.Ytoara;
}
@using (Html.BeginForm())
{
    <div class="login">
        <div class="head"><br /><img src="@DicionarioEstaticoGlobal.DicionarioEstaticoHelpers.systemLogo" /><br /></div>
        <div class="form-signin panel panel-primary">
            <h2 class="form-signin-heading panel-heading">@Resources.Resource.please_sign_in</h2>
            <div class="panel-body">
                <label for="inputUserName" class="sr-only">@Resources.Resource.username</label>
                <input type="text" id="inputUserName" class="form-control" placeholder="@Resources.Resource.username" required="" autofocus="" name="Name">
                <label for="inputPassword" class="sr-only">@Resources.Resource.password</label>
                <input type="password" id="inputPassword" class="form-control" placeholder="@Resources.Resource.password" required="" name="Password">
                @Html.HiddenFor(r => r.IsWeb)
                @*<span id="errMsg"></span>*@

                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, Resources.Resource.username_or_password_are_incorrect as string, new { @class = "alert alert-danger" })

                <button class="btn btn-md btn-primary marginTop10" type="submit" data-loading-text="Authenticating..." id="btnLogin">@Resources.Resource.sign_in</button>
                @if (!GlobalConfig.Eua)
                {
                    <button type="button" class="btn btn-sm btn-success marginTop10" style="float:right;" id="RecPassword" onclick="ModalRecuperaSenha('Recuperar Senha');" data-toggle="modal">@Resources.Resource.forgotPass ?</button>
                }
            </div>
        </div>

        <div class="foot">
            <img src="@DicionarioEstaticoGlobal.DicionarioEstaticoHelpers.systemLogoFooter" />
        </div>

    </div>
}

<!--Modal Recupera Senha-->
<div class="container">
    <div class="modal fade" id="modalRecPassword" tabindex="-1" role="dialog" aria-labelledby="" data-backdrop="static">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header modal-header-gray">

                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true" class="times">&times;</span></button>

                    <h4 class="modal-title" id="Header">ID: Header</h4>
                </div>
                <div class="modal-body" id="body">
                    ID: Body
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-default" id="Fechar" data-dismiss="modal" style="display:none">Fechar</button>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">

        HideMenuLayout();

        var RecPassword = '@Html.Raw(@urlRecPassword)';
        var BuscaEmail = '@Html.Raw(@urlBuscaEmail)';
        var EnviaEmail = '@Html.Raw(@urlEnviaEmail)';
        var userId = 0;

        function ModalRecuperaSenha(title) {

            $('#modalRecPassword').modal();
            $('#modalRecPassword').find('.modal-body').empty();
            $('#Header').html("Recuperar Senha");

            $.get(RecPassword, function (r) {
                $('#modalRecPassword').find('.modal-body').empty().append(r);
                $('#btnSendEmail');
            });

            $('#Fechar').show();
            ///*Fim Botões*/
        }
        var recSenha = {
            enviarDados: function (e) {
                var dado = $('#userName').val();
                if (dado != null && dado != "") {
                    $.get(BuscaEmail, { nome: dado }, function (objetoReturn, statusmessage) {
                        if (objetoReturn.Email != null) {
                            userId = objetoReturn.Id;
                            $('#btnGetDados').hide();
                            $('#btnSendEmail').show();
                            $('#userEmail').val(objetoReturn.Email);
                            recSenha.enviarEmail();
                        } else {
                            $('#modalRecPassword').modal().hide();
                            openMessageModal("Usuário sem Email Cadastrado", null);
                        }
                    }).fail(function (e, h, x) {
                        //closeLoader();
                        try {
                            closeLoader();
                            id = 0;
                            openMessageModal("Alerta", e.responseJSON.Message);
                        } catch (e) {
                            closeLoader();
                            openMessageModal("@Html.Raw(@Resources.Resource.warning as string)", "@Html.Raw(Resources.Resource.cannot_finish_action as string)");
                            console.log(e);
                        }
                    });
                } else {
                    //Gambiarra Level 12323123
                    $('#modalRecPassword').modal().hide();
                    openMessageModal("Insira um Email Válido", null);
                    setTimeout(function () {
                        $('#modalRecPassword').modal().show();
                    }, 2000);

                }
            },
            enviarEmail: function (e) {
                if (userId > 0) {
                    $.post(EnviaEmail, { idUser: userId }, function (objetoReturn, statusmessage) {
                        if (objetoReturn) {
                            openMessageModal("Senha enviada para o email!");
                            $('#modalRecPassword').modal().hide();
                            $('.modal-backdrop').hide();
                            userId = 0;
                        } else
                            openMessageModal("Erro na Requisição de Senha!");

                    }).fail(function (e, h, x) {
                        //closeLoader();
                        try {
                            closeLoader();
                            openMessageModal("Alerta", e.responseJSON.Message);
                        } catch (e) {
                            closeLoader();
                            openMessageModal("@Html.Raw(Resources.Resource.warning as string)", "@Html.Raw(Resources.Resource.cannot_finish_action as string)");
                            console.log(e);
                        }
                    });
                }
            }
        }

        //$(document).ready(function () {
        //    //Função que limita o máximo de caracteres no password
        //    var maxLen = 7;
        //    $('#inputPassword').keyup(function (event) {
        //        var Length = $("#inputPassword").val().length;
        //        var AmountLeft = maxLen - Length;
        //        $('#txt-length-left').html(AmountLeft);
        //        if (Length > maxLen) {
        //            if (event.which != 8) {
        //                $('#inputPassword').val($('#inputPassword').val().slice(0, -1));
        //                $('#errMsg').text('A senha contém no máximo 7 caracteres');
        //                return false;
        //            }
        //        } else {
        //            $('#errMsg').text('')
        //        }
        //    });
        //});

    </script>
}
