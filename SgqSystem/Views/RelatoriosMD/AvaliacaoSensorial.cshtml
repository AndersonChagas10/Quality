@{
    ViewBag.Title = "Avaliação Sensorial";
}

<style>
    .red {
        background-color: red;
    }

    .yellow {
        background-color: yellow;
    }

    .green {
        background-color: green;
    }

    #cabecalho tr td {
        /*font-weight:bold;*/
        font-size: 8px;
    }

    .fontCenter {
        text-align: center;
        vertical-align: middle;
    }

    #cabecalho tr td strong {
        font-weight: bold;
        font-size: 12px;
    }
</style>

<div class="page-content-wrapper">
    <div class="page-content">

        @Html.Partial("~/Views/Shared/_FormToQueryFullScreen.cshtml")

        <div id="formBodyContent">

            @Html.Partial("~/Views/Shared/_mensagemObrigatorio.cshtml")

            <div class="col-xs-12">

                <div id="loader"></div>

                <div class="portlet light bordered" hidden>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">

                            </div>
                        </div>
                        <button class="btn btn-primary" id="btnPrint">@Resources.Resource.print</button>
                        <br />
                        <br />
                        <div style="display:none">
                            <div id="contentHeader">
                                <table border="1" cellspacing="0" cellpadding="1" style="width:100%;font-family: 'Century Gothic', CenturyGothic, AppleGothic, sans-serif; font-size:12px;">
                                    <tbody>
                                        <tr>
                                            <td rowspan="3" width="120px" align="center"><img id="printImagemCabecalhoLeft" src="../Imagens/logo-jbs.png" width="80px"></td>
                                            <td id="printTitulo" align="center" style="font-family: 'Century Gothic', CenturyGothic, AppleGothic, sans-serif; font-size:20px;"></td>
                                            <td rowspan="3" width="120px" align="center"><img id="printImagemCabecalhoRight" src="../Imagens/logo-gq.png" width="80px"></td>
                                        </tr>
                                        <tr>
                                            <td><b>Elaborador:</b> <span id="printElaborador"></span></td>
                                        </tr>
                                        <tr>
                                            <td><b>Aprovador:</b> <span id="printAprovador"></span></td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                        </div>

                        <div id="contentFooter" style="display:none">
                            <div>
                                <strong id="printCodigoRodape"></strong>
                            </div>
                        </div>

                        <div id="contentBody">
                            <table class="table table-bordered" id="cabecalho">
                                <tbody>
                                    <tr>
                                        <td colspan="3">Data de Produção:<br /><strong id="dataProducao"></strong></td>
                                        <td colspan="4">Produto:<br /><strong id="produto"></strong></td>
                                        <td colspan="3">Turno:<br /><strong id="shiftId"></strong></td>
                                    </tr>
                                    <tr class="fontCenter">
                                        <td colspan="10">Grau e Direção da Diferença com Relação ao Padrão</td>
                                    </tr>
                                    <tr class="fontCenter">
                                        <td></td>
                                        <td>Qualidade Não McD</td>
                                        <td>Diferença Significativa</td>
                                        <td>Marginal</td>
                                        <td>Ligeira Diferença</td>
                                        <td>Igual ao PADRÂO</td>
                                        <td>Ligeira Diferença</td>
                                        <td>Marginal</td>
                                        <td>Diferença Significativa</td>
                                        <td>Qualidade Não McD</td>
                                    </tr>
                                    <tr class="fontCenter">
                                        <td colspan="5"><<< MENOS QUE <<<</td>
                                        <td colspan="5">>>> MAIS QUE >>></td>
                                    </tr>
                                    <tr class="fontCenter">
                                        <td>Pontuação Sensorial</td>
                                        <td class="red">1</td>
                                        <td class="red">2</td>
                                        <td class="yellow">3</td>
                                        <td class="yellow">4</td>
                                        <td class="green">5</td>
                                        <td class="yellow">6</td>
                                        <td class="yellow">7</td>
                                        <td class="red">8</td>
                                        <td class="red">9</td>
                                    </tr>
                                    <tr class="fontCenter">
                                        <td>% QI</td>
                                        <td>0%</td>
                                        <td>25%</td>
                                        <td>60%</td>
                                        <td>85%</td>
                                        <td>100%</td>
                                        <td>85%</td>
                                        <td>60%</td>
                                        <td>25%</td>
                                        <td>0%</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script src="~/Scripts/Print/printGRT.js"></script>

    <script>

        var $btn = $('#btnSend');
        $('button').button({ loadingText: '@Resources.Resource.loading...' });
        var urlGet = '@Html.Raw(Url.Action("Get", "api/AvaliacaoSensorial"))';
        var siglaUnidade = "";
        exibeTodosLevels = false; //Variavel global para não exibir os monitoramentos sem que selecione o indicador
        let elaborador = "";
        let aprovador = "";
        let nomeRelatorio = "";

        $(document).ready(function () {

            closeLeftSidebar();

            $(".sidebar-toggler").removeClass("hide");
            $(".page-sidebar-wrapper").removeClass("hide");

            $('#simpleCallendar input[type="text"]').val(start.format());

            $('#unitId').children('option:first').remove();
            $('#level1Id').children('option:first').remove();
            $('#level2Id').children('option:first').remove();
            $('#shift').children('option:first').remove();

            $('#level1Id').prop("disabled", true);
            $('#level1Id').select2("destroy");

            setTimeout(function () {

                $('#level1Id option[value="number:70"]').attr('selected', 'selected');
                $('#level1Id').trigger("change");
                $('select').select2();

            }, 2000);

            formControl.showSimpleDate();
            formControl.showLevel1();
            formControl.showUnit();
            formControl.showShift();
            formControl.showNumeroAvaliacao();

            $('#showLevel1 > div:nth-child(3)').hide();

            $("#btnSend").click(function (e) {

                Send(true);

            });

            $('.portlet').hide();

            $('#tipoVisao').trigger('change');

        });

        function Send(toggle) {

            $('#level1Id').trigger("change");

            $('#shift').trigger("change");

            if (formIsValid()) {

                $btn.button('loading');

                $('.portlet').hide();

                EasyAjax(urlGet, enviar, GeraRelatorio, "loader", toggle);

            }
        }

        function GeraRelatorio(obj) {

            $('.portlet').hide();

            cleanData();

            if (obj.Coletas === null || obj.Coletas.length <= 0) {

                GuardJs.exibirMensagemAlerta(Resources("no_data_to_show"));

            } else {

                $('.portlet').show();

                $('.cabecalho2').remove();

                PreencherCabecalho(obj.Cabecalhos);

                $('#shiftId').html(obj.Shift);

                let tamanhoAmostra = Math.max.apply(null, [...new Set(obj.Coletas.map(obj => obj.Amostra))]);
                
                for (let i = 0; i <= tamanhoAmostra; i = i + 9) {

                    let inicio = i;
                    let fim = i + 9;

                    if (fim > obj.Coletas.length) {
                        fim = obj.Coletas.length;
                    }

                    let coletas = obj.Coletas.filter((obj) => obj.Amostra > inicio && obj.Amostra < fim)

                    let conteudoTabela = "";

                    conteudoTabela += PreencherAmostras(coletas);

                    conteudoTabela += PreencherCorpo(coletas);

                    conteudoTabela += PreencherPontuacaoGeral(coletas);

                    $('<table class="table table-bordered cabecalho2"><tbody>' + conteudoTabela + '</tbody></table>').insertAfter($('#contentBody > table:last'));

                }

                $('.portlet').show();
            }
        }

        function cleanData() {

            $('#dataProducao').html("");
            $('#produto').html("");
            $('#shiftId').html("");

        }

        function PreencherCabecalho(cabecalhos) {

            let dataProducao = [];
            let produto = [];

            cabecalhos.forEach((o) => {

                switch (o.Id) {

                    //Ids dos cabeçalhos de data produção e produto
                    case 1197:
                        dataProducao.push(o.Value);
                        break;

                    case 1196:
                        produto.push(o.Value);
                        break;

                    default:
                }
            })

            $('#dataProducao').html(dataProducao.join(" ,"));
            $('#produto').html(produto.join(" ,"));
        }

        function PreencherAmostras(coletas) {            

            let amostras = [...new Set(coletas.map(obj => obj.Amostra))];

            //let maxInterval = coletas.map(r => r.Interval).map(r => r.split(",").map(Number).length).reduce((a, b) => { return Math.max(a, b) })

            let maxInterval = 0;

            let trAmostra =`<tr>
                                <td colspan="${maxInterval + 2}">Amostras (lotes)</td>`;

            amostras.forEach((item) => {
                trAmostra += `<td>${item}</td>`;
            });
                
            trAmostra += "</tr>";

            return trAmostra;
        }

        function PreencherCorpo(array) {

            let levels3_Id = [...new Set(array.map(item => item.ParLevel3_Id))];
            let levels3 = [...new Set(array.map(item => item.ParLevel3))];

            let conteudoTabela = "";

            //let maxInterval = array.map(r => r.Interval).map(r => r.split(",").map(Number).length).reduce((a, b) => { return Math.max(a, b) })

            levels3_Id.forEach((level3, index) => {

                let newLevel3Group = [...new Set(array.filter(item => item.ParLevel3_Id == level3).map(item => item.Level3Group))][0];

                if (!newLevel3Group) {

                    conteudoTabela +=
                        `<tr>
                            <td colspan="2">${levels3[index]}</td>`;

                } else {

                    conteudoTabela +=
                        `<tr>
                            <td>${newLevel3Group}</td>
                            <td>${levels3[index]}</td>`;
                }


                let coletasByLevel3 = array.filter(item => item.ParLevel3_Id == level3);

                let coletas = array.filter(item => item.ParLevel3_Id == level3 && item.Interval)

                //let Interval = "";

                //if (coletas.length > 0) {

                //    Interval = [...new Set(coletas.map(item => item.Interval))][0].split(",");
                //}

                //if (Interval) {

                //    for (var i = 0; i <= maxInterval - 1; i++) {
                //        debugger
                //        if (Interval && i < Interval.length) {
                //            conteudoTabela += `<td>${Interval[i]}</td>`;
                //        } else {
                //            conteudoTabela += `<td></td>`;
                //        }
                //    }

                //} else {

                //    conteudoTabela += `<td colspan="${maxInterval}"></td>`;;
                //}

                coletasByLevel3.forEach((item) => {

                    let td;

                    if (!item.IsNotEvaluate) {
                        if (item.ParLevel3InputType_Id != 10) {
                            td = `<td>${item.Value}</td>`;
                        } else {
                            td = `<td>${item.Value} %</td>`;
                        }

                    } else {
                        td = `<td>N/A</td>`;
                    }

                    conteudoTabela += td;

                });

            });

            conteudoTabela += `</tr>`;

            return conteudoTabela

        }

        function PreencherPontuacaoGeral(array) {

            let amostras = [...new Set(array.map(obj => obj.Amostra))]

            let arrPontuacaoGeralByAmostra = [];

            //let maxInterval = array.map(r => r.Interval).map(r => r.split(",").map(Number).length).reduce((a, b) => { return Math.max(a, b) });

            let maxInterval = 0;

            array = array.filter(r => r.ParLevel3InputType_Id != 10);

            amostras.forEach((item) => {

                let arrValueByAmostra = [];

                arrValueByAmostra = array.filter(o => o.Amostra == item).map(o => o.Value);

                arrPontuacaoGeralByAmostra.push(CalculaPontuacaoGeral(arrValueByAmostra));

            });

            let tr = `<tr><td colspan="${maxInterval + 2}">Índice de Qualidade do Produto</td>`;

            arrPontuacaoGeralByAmostra.forEach((o) => {
                tr += `<td>${o} %</td>`;
            });

            tr += "</tr>";

            return tr;

        }

        function CalculaPontuacaoGeral(array) {

            let attributes = array;

            //declare attribute and point counter
            let noOf5 = 0
            let noOf4and6 = 0
            let noOf3and7 = 0
            let noOf2and8 = 0
            let noOf1and9 = 0
            let noOfElem = 0
            let addPoint5_85 = 0
            let addPoint5_60 = 0
            let addPoint4and6 = 0
            let CategoryScore_calc = 0

            for (i = 0; i < attributes.length; i++) {

                if (attributes[i] == 1 || attributes[i] == 9) {
                    noOf1and9 = noOf1and9 + 1
                } else if (attributes[i] == 2 || attributes[i] == 8) {
                    noOf2and8 = noOf2and8 + 1
                } else if (attributes[i] == 3 || attributes[i] == 7) {
                    noOf3and7 = noOf3and7 + 1
                } else if (attributes[i] == 4 || attributes[i] == 6) {
                    noOf4and6 = noOf4and6 + 1
                } else if (attributes[i] == 5) {
                    noOf5 = noOf5 + 1
                }

            }

            noOfElem = 1 > (noOf4and6 + noOf3and7 + noOf5 - 1) ? 1 : (noOf4and6 + noOf3and7 + noOf5 - 1)

            addPoint5_85 = (10 * noOf5 / noOfElem)
            addPoint5_60 = (20 * noOf5 / noOfElem)
            addPoint4and6 = (10 * noOf4and6 / noOfElem)

            if (noOf1and9 > 0) {
                CategoryScore_calc = 0
            }
            else if (noOf2and8 > 0) {
                CategoryScore_calc = 25
            }
            else if (noOf3and7 > 0) {
                CategoryScore_calc = 60 + addPoint5_60 + addPoint4and6
            }
            else if (noOf4and6 > 0) {
                CategoryScore_calc = 85 + addPoint5_85
            }
            else if (noOf5 = 0) {
                CategoryScore_calc = 0
            }
            else {
                CategoryScore_calc = 100
            }

            //imprimir na tela
            return Math.round(CategoryScore_calc)
        }

        function formIsValid() {

            GuardJs.esconderMensagem();

            if (enviar['endDate'] == null || enviar['endDate'] == undefined || enviar['endDate'] == "") {
                GuardJs.exibirMensagemAlerta(Resources("select_the_period_first"));
                return false;

            } else if (enviar['level1Id'] == null || enviar['level1Id'] == undefined || enviar['level1Id'] == "" || enviar['level1Id'] <= 0 || isNaN(enviar['level1Id'])) {
                GuardJs.exibirMensagemAlerta(Resources("select_the_level1"));
                return false;

            } else if (enviar['level2Id'] == null || enviar['level2Id'] == undefined || enviar['level2Id'] == "" || enviar['level2Id'] <= 0 || isNaN(enviar['level2Id'])) {
                GuardJs.exibirMensagemAlerta(Resources("select_the_level2"));
                return false;

            } else if (enviar['shift'] == null || enviar['shift'] == undefined || enviar['shift'] == "" || enviar['shift'] <= 0)
            {
                GuardJs.exibirMensagemAlerta(Resources("select_the_shift"));
                return false;

            }else if (enviar['unitId'] == null || enviar['unitId'] == undefined || enviar['unitId'] == "" || enviar['unitId'] <= 0) {
                GuardJs.exibirMensagemAlerta(Resources("select_the_unit_first"));
                return false;

            } else if (!enviar.avaliacao) {
                GuardJs.exibirMensagemAlerta("O campo Número da Avaliação é obrigatório");
                return false;
            }
            else {
                return true;
            }

        }

        $('body').on('click', '#btnPrint', function () {

            if (elaborador == null) {
                elaborador = "";
            }

            if (aprovador == null) {
                aprovador = "";
            }

            if (nomeRelatorio == null) {
                nomeRelatorio = "";
            }

            PrepararImpressao(
                nomeRelatorio,
                elaborador + " - " + "/" + siglaUnidade,
                aprovador + " - " + "/" + siglaUnidade,
                "RGQ-504-GQU-001/05 Aprov. Em 02/05/2018",
                'contentBody',
                "../Imagens/logo-jbs.png",
                "../Imagens/logo-gq.png");
        });

        function PrepararImpressao(titulo, elaborador, aprovador, codigoRodape, idBody, imagemCabecalhoLeft, imagemCabecalhoRight) {

            $('#printTitulo').html(titulo);
            $("#printElaborador").html(elaborador);
            $("#printAprovador").html(aprovador);
            $("#printCodigoRodape").html(codigoRodape);
            $("#printImagemCabecalhoLeft").attr('src', imagemCabecalhoLeft);
            $("#printImagemCabecalhoRight").attr('src', imagemCabecalhoRight);
            printGRT.Inicializar(
                {
                    headerHtml: document.getElementById('contentHeader').innerHTML,
                    bodyHtml: document.getElementById(idBody).innerHTML,
                    footerHtml: document.getElementById('contentFooter').innerHTML,
                    numberMarginRight: 25,
                    numberMarginBottom: 25,
                    renderTableMargin: 0,
                    pageMarginHeader: "25px 25px 10px 25px",
                    pageMarginFooter: "10px 25px 25px 25px",
                    pageMarginBody: "0 25px 0 25px"
                }
            );

            printGRT.Imprimir();

            $('#divRenderPrint').remove();
        }

    </script>
}

