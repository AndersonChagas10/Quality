@model Dominio.VolumeVacuoGRD

@{
    ViewBag.Title = "CEP Vácuo GRD - Volume";
}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                    <a href="@Url.Action("Index", "VacuoGRDs")">Volume do @Resources.Resource.vacuo_grd</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>Edição</span>
                </li>
            </ul>
            <div class="page-toolbar"></div>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.vacuo_grd</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">

                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.Id)
                                        @Html.HiddenFor(model => model.AddDate)

                                        @{ Html.EnableClientValidation(false); }

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Data, new { htmlAttributes = Model.Data?.Date < DateTime.Now.Date ? (object)new { @class = "form-control", @readonly = "readonly" } : new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @{ Html.EnableClientValidation(true); }
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCompany_id, "Unidade", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.ParCompany_id, new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), Resources.Resource.select + "...", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParCompany_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Shift_Id, Resources.Resource.shift, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(model => model.Shift_Id, new SelectList(ViewBag.ShiftVolume, "Id", "Name"), Resources.Resource.all, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Shift_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.HorasTrabalhadasPorDia, "Horas trabalhadas por dia", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.HorasTrabalhadasPorDia, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.HorasTrabalhadasPorDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AmostraPorDia, "Amostras por dia", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <select id="AmostraPorDia" name="AmostraPorDia" class="form-control valid">
                                                    <option value="60">60</option>
                                                    <option value="120">120</option>
                                                    <option value="240">240</option>
                                                    <option value="450">450</option>
                                                    <option value="900">900</option>
                                                    <option value="1800">1800</option>
                                                </select>

                                                <script>

                                                    var amostraSelecionada = @Html.Raw(Json.Encode(Model.AmostraPorDia));

                                                    $('#AmostraPorDia').val(amostraSelecionada).change()

                                                </script>

                                                @Html.ValidationMessageFor(model => model.AmostraPorDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtdadeFamiliaProduto, "Número de familias cadastradas", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.QtdadeFamiliaProduto, new { @class = "form-control", @readonly = true })
                                                @Html.ValidationMessageFor(model => model.QtdadeFamiliaProduto, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Avaliacoes, "Avaliações", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Avaliacoes, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.Avaliacoes, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amostras, "Amostras por Avaliação", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Amostras, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                                @Html.ValidationMessageFor(model => model.Amostras, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Salvar" class="btn btn-primary" />
                                                @Html.ActionLink("Voltar para Volume de CEP Vácuo GRD", "Index", null, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                            }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
<script>

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");
    navbarSelect("navbar7");

    $(document).ready(function () {

        $('#QtdadeFamiliaProduto').val("");

        $('#ParCompany_id').on('change', function () {
            if ($('#ParCompany_id').val() > 0) {
                $.post('@Url.Action("GetVolumeGRD", "api/Volume")' + "/" +  $('#ParCompany_id').val(), {}, function (r) {
                    $('#QtdadeFamiliaProduto').val(r);
                    applyMath();
                });
            }else{
                $('#QtdadeFamiliaProduto').val("");
            }
        });

        $('#ParCompany_id').change();

        var parcompany = @Html.Raw(Json.Encode(Model.ParCompany_id));
        if(parcompany != undefined && parcompany != null && parcompany > 0){
            $('#ParCompany_id').val(parcompany).change();
        }

        $('#HorasTrabalhadasPorDia').inputmask("integer", { rightAlign: false , min:0 , max: 24});
        $('#QtdadeFamiliaProduto').inputmask("integer", { rightAlign: false });

        $('#Data').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            'locale': {
                "format": "DD/MM/YYYY",
            }
        })

        $('#Avaliacoes').val($('#HorasTrabalhadasPorDia').val());
        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));

        var data = "@Model.Data.Value.Date.ToString("dd/MM/yyyy")";
        $('#Data').val(data);

        closeLeftSidebar();

    });

    function habilitar() {

        $('#Avaliacoes').attr('disabled', false)
        $('#Amostras').attr('disabled', false)
        $('#Data').attr('disabled', false)
    }

    $('#HorasTrabalhadasPorDia').on('blur, keyup', function () {
        $('#Avaliacoes').val($(this).val());
        $('#avaliacaoHidden').val($(this).val());
        applyMath();
    });

    $('#AmostraPorDia, #QtdadeFamiliaProduto').on('input', function () {
        applyMath();
    });

    $(document).ready(function () {
        $('#HorasTrabalhadasPorDia').inputmask("integer", { rightAlign: false , min:0 , max: 24});
        $('#QtdadeFamiliaProduto').inputmask("integer", { rightAlign: false });

        if(!$('#Data').attr('readonly')){
            $('#Data').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                'locale': {
                    "format": "DD/MM/YYYY",
                }
            })
        }
        $('#Avaliacoes').val($('#HorasTrabalhadasPorDia').val());
        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));

        var data = "@Model.Data.Value.Date.ToString("dd/MM/yyyy")";
        $('#Data').val(data);
    });

    //TASK FORCE
    function applyMath() {

        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));
        $('#amostraHidden').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));
        if (("" + $('#Amostras').val()).length <= 0) $('#Amostras').val(0);
        if ((""+$('#amostraHidden').val()).length <= 0) $('#amostraHidden').val(0);
    }

</script>
