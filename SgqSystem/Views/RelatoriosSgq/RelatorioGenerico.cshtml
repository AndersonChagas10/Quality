
@{
    ViewBag.Title = "Relatorio do BI";
    //var urlGet = Url.Action("GetRelatorio", "RelatorioGenericoApi");
    var urlGet = Url.Action("getTabela", "api/RelatorioGenerico");
}

<script src="~/Scripts/smart-table.min.js"></script>


<div class="page-content" style="min-height: 600px;">

    @*<div ng-controller="safeCtrl">

            <button type="button" ng-click="addRandomItem(row)" class="btn btn-sm btn-success">
                <i class="glyphicon glyphicon-plus">
                </i> Add random item
            </button>

            <table st-table="displayedCollection" st-safe-src="rowCollection" class="table table-striped">
                <thead>
                    <tr>
                        <th st-sort="firstName">first name</th>
                        <th st-sort="lastName">last name</th>
                        <th st-sort="birthDate">birth date</th>
                        <th st-sort="balance">balance</th>
                    </tr>
                    <tr>
                        <th colspan="5"><input st-search="" class="form-control" placeholder="global search ..." type="text" /></th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="row in displayedCollection">
                        <td>{{row.firstName}}</td>
                        <td>{{row.lastName}}</td>
                        <td>{{row.birthDate}}</td>
                        <td>{{row.balance}}</td>
                        <td>
                            <button type="button" ng-click="removeItem(row)" class="btn btn-sm btn-danger">
                                <i class="glyphicon glyphicon-remove-circle">
                                </i>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>

        </div>

        <div ng-controller="sortCtrl">

            <table st-table="rowCollection" class="table table-striped">
                <thead>
                    <tr>
                        <th st-sort="getters.firstName">first name</th>
                        <th st-sort="lastName">last name</th>
                        <th st-sort="birthDate">birth date</th>
                        <th st-sort="balance" st-skip-natural="true">balance</th>
                        <th>email</th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="row in rowCollection">
                        <td>{{row.firstName | uppercase}}</td>
                        <td>{{row.lastName}}</td>
                        <td>{{row.birthDate | date}}</td>
                        <td>{{row.balance | currency}}</td>
                        <td><a ng-href="mailto:{{row.email}}">email</a></td>
                    </tr>
                </tbody>
            </table>

        </div>*@



    <div ng-controller="MainCtrl">

        <table class="table table-striped" ng-app="sgqSystem">
            <thead>
                <tr>
                    <th ng-repeat="x in header">{{x}}</th>
                </tr>
                @*<tr>
                        <th colspan="50"><input st-search="" class="form-control" placeholder="Buscar Tudo ..." type="text" /></th>
                    </tr>*@
            </thead>
            @*<tfoot>
                    <tr>
                        <th ng-repeat="x in header">{{x}}</th>
                    </tr>
                </tfoot>*@
            <tbody>
                <tr ng-repeat="body in bodies">
                    <td ng-repeat="x in body">{{x}}</td>
                </tr>
            </tbody>
        </table>

        {{header }}
        {{bodies }}

    </div>

</div>


<script type="text/javascript">

    //Angular


    app.controller('MainCtrl', ['$scope', '$http', '$compile', function ($scope, $http, $compile) {
        //$scope.header = [];
        //$scope.bodies = {};

        //fazer ajax
        $http({
            method: 'POST',
            data: {},
            url: @Html.Raw(Json.Encode(urlGet)),
        }).then(function (retorno) {

            //$scope.table = [{
            //    Title: "C1",
            //    Data: ["teste1, teste2, teste3"]
            //}, {
            //    Title: "C2",
            //    Data: ["teste11, teste21, teste31"]
            //}];
            $scope.header = retorno.data.header;
            $scope.bodies = retorno.data.body;

        }, function (error) {
            console.log(error);
        });

    }]);

    //app.controller('sortCtrl', ['$scope', '$filter', function (scope, filter) {
    //    scope.rowCollection = [
    //        {firstName: 'Laurent', lastName: 'Renard', birthDate: new Date('1987-05-21'), balance: 102, email: 'whatever@gmail.com'},
    //        {firstName: 'Blandine', lastName: 'Faivre', birthDate: new Date('1987-04-25'), balance: -2323.22, email: 'oufblandou@gmail.com'},
    //        {firstName: 'Francoise', lastName: 'Frere', birthDate: new Date('1955-08-27'), balance: 42343, email: 'raymondef@gmail.com'}
    //    ];

    //    scope.getters={
    //        firstName: function (value) {
    //            //this will sort by the length of the first name string
    //            return value.firstName.length;
    //        }
    //    }
    //}]);

    //app.controller('safeCtrl', ['$scope', function ($scope) {

    //    var firstnames = ['Laurent', 'Blandine', 'Olivier', 'Max'];
    //    var lastnames = ['Renard', 'Faivre', 'Frere', 'Eponge'];
    //    var dates = ['1987-05-21', '1987-04-25', '1955-08-27', '1966-06-06'];
    //    var id = 1;

    //    function generateRandomItem(id) {

    //        var firstname = firstnames[Math.floor(Math.random() * 3)];
    //        var lastname = lastnames[Math.floor(Math.random() * 3)];
    //        var birthdate = dates[Math.floor(Math.random() * 3)];
    //        var balance = Math.floor(Math.random() * 2000);

    //        return {
    //            id: id,
    //            firstName: firstname,
    //            lastName: lastname,
    //            birthDate: new Date(birthdate),
    //            balance: balance
    //        }
    //    }

    //    $scope.rowCollection = [];

    //    for (id; id < 5; id++) {
    //        $scope.rowCollection.push(generateRandomItem(id));
    //    }

    //    //add to the real data holder
    //    $scope.addRandomItem = function addRandomItem() {
    //        $scope.rowCollection.push(generateRandomItem(id));
    //        id++;
    //    };

    //    //remove to the real data holder
    //    $scope.removeItem = function removeItem(row) {
    //        var index = $scope.rowCollection.indexOf(row);
    //        if (index !== -1) {
    //            $scope.rowCollection.splice(index, 1);
    //        }
    //    }
    //}]);

</script>
