
@{

    Layout = "~\\Views\\RelatoriosSgq\\_FilterReports.cshtml";

    ViewBag.Title = "Formulário";

    ViewBag.ShowIndicadorMER = true;
    ViewBag.ShowRangeDate = true;
    ViewBag.ShowParCompany = true;

    //var url = Url.Action("Index", "Home");

}

@section NovoFiltro {
    @if (ViewBag.ShowIndicadorMER == true)
    {
        <div class="col-sm-12">
            <div class="form-group">
                <label><strong>Indicador</strong></label>
                <select class="form-control" name="ShowIndicador_Id" id="ShowIndicador_Id">
                    <option value="112">Monitoramento - MER</option>
                    <option value="127">Verificação - Identificação, remoção, segregação e destinação do material especificado de risco (MER)</option>
                </select>
            </div>
        </div>
    }
}

@section Content {
    <style>

        footer {
            font-size: 12px;
            color: black;
        }

        .panel-info {
            border-color: #999;
        }

            .panel-info > .panel-heading {
                background-color: #ccc;
                border-color: #999;
                color: #333;
            }

        .chart-inner {
            position: absolute;
            width: 100%;
            height: 100%;
        }

        #CustomPopover {
            z-index: 1040;
            border-width: 2px;
            padding: 8px;
            border-radius: 2px !important;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            position: absolute;
            background: white;
        }

            #CustomPopover .btn {
                margin-left: 1px;
                margin-right: 1px;
            }

        .geral-note {
            padding: 2px;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background-color: #ebe9e8;
            text-align: center;
            width: 60%;
            margin: auto;
            margin-bottom: 10px;
        }

        #tituloDesdobramento {
            text-align: center;
            font-size: 20px;
        }

        img {
            border-radius: 4px;
            padding: 7px;
            width: 150px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        #cabecalho td {
            border: 3px solid #ddd;
            padding: 2px;
            height: 15px !important;
        }
    </style>

    <div class="page-content-wrapper">
        <button class="btn btn-primary" id="btnPrint">@Resources.Resource.print</button>
        <br />
        <div class="page-content">



            <div class="loader" hidden></div>
            <div class="alert alert-info" role="alert" id="mensagemSemDados" hidden> Sem dados. </div>

            <div class="container-fluid">
                <div id="cabecalhoDiv" class="row" hidden>
                    <table id="cabecalho" class="table table-bordered">
                        <tr>
                            <td rowspan="3" class="col-xs-2">
                                <img height="90" class="img-responsive" src="~/Imagens/JBS_logo.jpg" />
                            </td>

                            <td style="text-align:center; font-weight:bold;"><text id="tdNomeRelatorio"></text></td>

                            <td rowspan="3" class="col-xs-2">
                                <img height="90" width="120" src="~/Imagens/novoLogoFriboi.PNG" />
                            </td>
                        </tr>
                        <tr>
                            <td><strong>Elaborador:</strong> <text id="tdElaborador"></text></td>
                        </tr>
                        <tr>
                            <td><strong>Aprovador:</strong> <text id="tdAprovador"></text></td>
                        </tr>
                    </table>
                    <div>
                        Data: ____/____/____
                    </div>
                </div>

                <div class="row" id="corpoPagina">
                    <div id="pivot-table">

                    </div>
                    <br /><br /><br />
                    <footer id="rodape" hidden>
                        <div class="row">
                            <div class="col-xs-4" style="text-align:center">
                                _________________________________
                                <br />
                                Monitor da GQ
                            </div>

                            <div class="col-xs-4" style="text-align:center">
                                _________________________________
                                <br />
                                Supervisor do Setor
                            </div>

                            <div class="col-xs-4" style="text-align:center">
                                _________________________________
                                <br />
                                Supervisor da GQ
                            </div>
                        </div>

                    </footer>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="~/Scripts/Print/printGRT.js"></script>
    <script>
        let urlBuscaDados = '@Html.Raw(Url.Action("Get", "api/Formularios"))';

        $('button').button({ loadingText: '@Resources.Resource.loading...' });
        var $btn = $('#btnSend');

        $('body').on('click', '#btnPrint', function () {
            $('#printTitulo').html("Relatório Verificação MER");
            $("#printElaborador").html("Thais");
            $("#printAprovador").html("Camila");

            printGRT.Inicializar({

                headerHtml: document.getElementById('cabecalhoDiv').innerHTML,
                bodyHtml: document.getElementById('corpoPagina').innerHTML,
                numberMarginRight: 25,
                numberMarginBottom: 25,
                renderTableMargin: 0,
                pageMarginHeader: "25px 25px 10px 25px",
                pageMarginFooter: "10px 25px 25px 25px",
                pageMarginBody: "0 25px 0 25px"

            });

            printGRT.Imprimir();

            $('#divRenderPrint').remove();
        });

        function enviarFiltro() {

            window.scrollTo(0, 0);

            if (!$("#divFilterReports").is(":hidden"))
                toggleDivFilterReports();

            $btn.button('loading');
            $(".loader").show();


            $("#rodape").hide();
            $("#cabecalhoDiv").hide();
            $("#pivot-table").hide();

            $.ajax({
                data: JSON.stringify(objFiltro),
                url: urlBuscaDados,
                type: 'POST',
                contentType: "application/json",
                success: function (data) {
                    debugger
                    $btn.button('reset');
                    $(".loader").hide();

                    if (data.Resultado.length > 0) {
                        $("#rodape").show();
                        $("#cabecalhoDiv").show();
                        $("#tdElaborador").text(data.Elaborador[0]["Elaborador"]);
                        $("#tdAprovador").text(data.Aprovador);
                        $("#tdNomeRelatorio").text(data.RelatorioName[0]["NomeRelatorio"]);
                        $("#pivot-table").show();
                        montaTabelaDinamica(data.Resultado);
                    } else {
                        $("#mensagemSemDados").show();
                    }

                },
                timeout: 600000,
                contentType: "APPLICATION/JSON; CHARSET=UTF-8",
                error: function (a, b, c) {
                    $(".loader").hide();
                    console.log(a);
                    console.log(b);
                    console.log(c);
                }
            });

        }
        function montaTabelaDinamica(data) {

            var cabecalhos = [
                "AV",
            ];

            var linhas = [
                "Itens Verificados",
                "Setor",
            ];

            var valores = [
                //"AV com Peso",
                //"NC com Peso",
                "Hora",
                "Resultado",
                "Visto",
            ]

            var obj = [];
            var qtdMockColuna = 1;
            var qtdMockLinha = 2;
            for (var i = 0; i <= 200; i++) {
                obj.push(
                    {
                        "cotoco": "Cotoco " + Math.round(Math.random() * qtdMockColuna),
                        cabecalho2: "Setor " + Math.round(Math.random() * qtdMockColuna),
                        cabecalho3: "Unidade " + Math.round(Math.random() * qtdMockColuna),
                        cabecalho4: "Turno " + Math.round(Math.random() * qtdMockColuna),
                        cabecalho5: "Av " + Math.round(Math.random() * qtdMockColuna),
                        linha1: "Cluster " + Math.round(Math.random() * qtdMockLinha),
                        linha2: "Função " + Math.round(Math.random() * qtdMockLinha),
                        linha3: "Amostra " + Math.round(Math.random() * qtdMockLinha),
                        linha4: "Cabecalho " + Math.round(Math.random() * qtdMockLinha),
                        'Valor X': Math.round(Math.random() * 50),
                        'Valor Y': Math.round(Math.random() * 50),
                        'Valor Z': Math.round(Math.random() * 50),
                        'Nao Conforme': Math.round(Math.random() * 1) == 0 ? 'C' : 'NC'
                    }
                );
            }
            obj = data;

            var element = document.getElementById('pivot-table');

            var matrizColunas = { lista: [] };
            var matrizLinhas = { lista: [] };
            for (var i = 0; i < obj.length; i++) {
                montarArvoreDeDados(obj[i], matrizColunas, cabecalhos, 0, cabecalhos.length - 1);
                montarArvoreDeDados(obj[i], matrizLinhas, linhas, 0, linhas.length - 1);
            }

            function montarArvoreDeDados(objeto, matriz, lista, indexAtual, indexMaximo) {
                var nomeDoNivel = lista[indexAtual];
                var valorCabecalho = objeto[nomeDoNivel];

                var itemAtual = {};
                itemAtual.nivel = nomeDoNivel;
                itemAtual.titulo = valorCabecalho;
                itemAtual.lista = [];

                if (matriz.lista) {
                    itemDaLista = matriz.lista.filter((item) => item.titulo == valorCabecalho)
                    if (itemDaLista.length == 0) {
                        matriz.lista.push(itemAtual); //Adicionado como filho
                    } else {
                        itemAtual = itemDaLista[0]; //Já existe na lista de filhos
                    }
                    //}else if(){
                    //	matriz[valorCabecalho] = itemAtual; //Vai ser criado
                } else {
                    itemAtual = matriz[valorCabecalho]; //Já existe na lista
                }

                if (indexAtual < indexMaximo) {
                    var resultado = montarArvoreDeDados(objeto, itemAtual, lista, ++indexAtual, indexMaximo);
                }
                return matriz;
            }

            //console.log(matrizColunas);
            //console.table(matrizColunas);
            //console.log(matrizLinhas);
            //console.table(matrizLinhas);

            function montaQuantidadeDeSpan(itemMatriz) {
                if (!itemMatriz.filhos) {
                    itemMatriz.span = itemMatriz.lista.length;
                }

                for (var i = 0; i < itemMatriz.lista.length; i++) {
                    var item = itemMatriz.lista[i];
                    var span = montaQuantidadeDeSpan(item);
                    if (span > 1) {
                        itemMatriz.span += span - 1;
                    }
                }

                return itemMatriz.span;

            }

            var colspanTotal = 0;
            for (var i = 0; i < matrizColunas.lista.length; i++) {
                var item = matrizColunas.lista[i];
                montaQuantidadeDeSpan(item);
                if (item.span == 0) {
                    item.span = 1;
                }
                colspanTotal += item.span;
            }
            console.log(matrizColunas);
            console.log(colspanTotal);

            var rowspanTotal = 0;
            for (var i = 0; i < matrizLinhas.lista.length; i++) {
                var item = matrizLinhas.lista[i];
                montaQuantidadeDeSpan(item);
                rowspanTotal += item.span;
            }
            console.log(matrizLinhas);
            console.log(rowspanTotal);

            var htmlTable = "";
            htmlTable += "<table class='table table-bordered table-striped'>";

            /***INICIO: MONTA COLUNAS HTML **********************************************/
            var matrizHtmlColunas = [];
            function montaColunas(itemMatriz, indexAtual, indexMaximo, atributos) {
                var html;

                if (!atributos) {
                    atributos = "";
                }
                atributos += " " + itemMatriz.nivel + "='" + itemMatriz.titulo + "'";

                if (indexAtual == indexMaximo) {
                    html = '<th ' + atributos + ' colspan="' + valores.length + '">';
                } else {
                    html = '<th colspan="' + (itemMatriz.span * valores.length) + '">';
                }
                html += itemMatriz.titulo + '</th>';

                if (!matrizHtmlColunas[indexAtual]) {
                    matrizHtmlColunas.push(html);
                } else {
                    matrizHtmlColunas[indexAtual] += html;
                }

                ++indexAtual;
                for (var i = 0; i < itemMatriz.lista.length; i++) {
                    var item = itemMatriz.lista[i];
                    montaColunas(item, indexAtual, indexMaximo, atributos);
                }
            }

            for (var i = 0; i < matrizColunas.lista.length; i++) {
                var item = matrizColunas.lista[i];
                montaColunas(item, 0, cabecalhos.length - 1);
            }
            console.log(matrizColunas);

            for (var i = 0; i < matrizHtmlColunas.length; i++) {
                htmlTable += "<tr>";
                if (i == 0) {
                    htmlTable += "<th colspan='" + linhas.length + "' rowspan='" + (cabecalhos.length) + "'></th>";
                }
                htmlTable += matrizHtmlColunas[i];
                htmlTable += "</tr>";
            }
            /***FIM: MONTA COLUNAS HTML **********************************************/
            htmlTable += "<tr>";
            for (var i = 0; i < colspanTotal; i++) {
                for (var j = 0; j < linhas.length; j++) {
                    htmlTable += "<th>" + linhas[j] + "</th>";
                }
            }
            for (var i = 0; i < colspanTotal; i++) {
                for (var j = 0; j < valores.length; j++) {
                    htmlTable += "<th>" + valores[j] + "</th>";
                }
            }
            htmlTable += "</tr>";

            /***INICIO: MONTA LINHAS HTML **********************************************/
            var matrizHtmlLinhas = [];
            function montaLinhas(itemMatriz, numeroLinha, indexAtual, indexMaximo, atributos) {
                var html;

                if (!atributos) {
                    atributos = "";
                }
                atributos += " " + itemMatriz.nivel + "='" + itemMatriz.titulo + "'";

                if (indexAtual == indexMaximo) {
                    html = '<th ' + atributos + '>';
                } else if (itemMatriz.span > 1) {
                    html = '<th rowspan="' + itemMatriz.span + '">';
                } else {
                    html = '<th>';
                }
                html += itemMatriz.titulo + '</th>';

                if (!matrizHtmlLinhas[numeroLinha]) {
                    matrizHtmlLinhas.push(html);
                } else {
                    matrizHtmlLinhas[numeroLinha] += html;
                }

                if (indexAtual == indexMaximo) {
                    numeroLinha++;
                } else {
                    ++indexAtual;
                    for (var i = 0; i < itemMatriz.lista.length; i++) {
                        var item = itemMatriz.lista[i];
                        numeroLinha = montaLinhas(item, numeroLinha, indexAtual, indexMaximo, atributos);
                    }
                }
                return numeroLinha;

            }

            var numeroLinha = 0;
            for (var i = 0; i < matrizLinhas.lista.length; i++) {
                var item = matrizLinhas.lista[i];
                numeroLinha = montaLinhas(item, numeroLinha, 0, linhas.length - 1);
            }

            for (var i = 0; i < matrizHtmlLinhas.length; i++) {
                htmlTable += "<tr>";
                htmlTable += matrizHtmlLinhas[i];
                for (var j = 0; j < colspanTotal; j++) {
                    for (var z = 0; z < valores.length; z++) {
                        htmlTable += "<td data-value='" + valores[z] + "'></td>";
                    }
                }
                htmlTable += "</tr>";
            }
            /***FIM: MONTA LINHAS HTML **********************************************/

            htmlTable += "</table>";
            document.querySelector('#pivot-table').innerHTML = htmlTable;


            /***INICIO: MONTA VALORES HTML **********************************************/
            var listaTds = document.querySelector('#pivot-table > table').getElementsByTagName('td');

            var listaObj = [...obj];
            var ultimoObjeto = undefined;
            for (var i = 0; i < listaTds.length; i++) {
                var td = listaTds[i];
                var cellIndex = td.cellIndex;
                var rowIndex = td.parentNode.rowIndex;

                var numeroObjeto = (cellIndex - td.parentNode.getElementsByTagName('th').length);
                var atributos = {};
                var attrColuna = document.querySelector("#pivot-table > table > tbody > tr:nth-child(" + cabecalhos.length + ") > th:nth-child(" + (1 + Math.floor(numeroObjeto / valores.length)) + ")").attributes;
                for (var j = 0; j < attrColuna.length; j++) {
                    atributos[attrColuna[j].name] = attrColuna[j].value;
                }
                var linha = document.querySelector("#pivot-table > table > tbody > tr:nth-child(" + (rowIndex + 1) + ")").getElementsByTagName('th');
                var attrLinha = linha[linha.length - 1].attributes;
                for (var j = 0; j < attrLinha.length; j++) {
                    atributos[attrLinha[j].name] = attrLinha[j].value;
                }

                var objAtributos = Object.keys(atributos);
                for (var j = 0; j < listaObj.length; j++) {
                    var deuMatch = true;
                    if (!ultimoObjeto) {
                        for (var z = 0; z < objAtributos.length; z++) {
                            if (listaObj[j][objAtributos[z]] && atributos[objAtributos[z]] != listaObj[j][objAtributos[z]]) {
                                deuMatch = false;
                                break;
                            }
                        }
                    }
                    if (deuMatch) {
                        ultimoObjeto = listaObj[j];
                        td.innerHTML = ultimoObjeto[td.getAttribute("data-value")];
                        if (((1 + numeroObjeto) % valores.length) == 0) {
                            ultimoObjeto = undefined;
                            listaObj.splice(j, 1);
                        }
                        break;
                    }
                }
            }
        }
        /***FIM: MONTA VALORES HTML **********************************************/
    </script>
}
