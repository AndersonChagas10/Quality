
@{

    Layout = "~\\Views\\RelatoriosSgq\\_FilterReports.cshtml";

    ViewBag.Title = "Formulário";

    ViewBag.ShowIndicadorMER = false;
    ViewBag.ShowLinkedFilters = false;
    //ViewBag.ShowCurrentDate = true;
    //ViewBag.ShowParCompany = true;

    //var url = Url.Action("Index", "Home");

}

@section NovoFiltro {
    @if (ViewBag.ShowIndicadorMER == true)
    {
        <div class="col-sm-12">
            <div class="form-group">
                <label><strong>Indicador</strong></label>
                <select class="form-control" name="ShowIndicador_Id" id="ShowIndicador_Id">
                    <option value="1">Monitoramento - MER</option>
                    <option value="127">Verificação - Identificação, remoção, segregação e destinação do material especificado de risco (MER)</option>
                </select>
            </div>
        </div>
    }
}

@section Content {
    <style>

        footer {
            font-size: 12px;
            color: black;
        }

        .panel-info {
            border-color: #999;
        }

            .panel-info > .panel-heading {
                background-color: #ccc;
                border-color: #999;
                color: #333;
            }

        .chart-inner {
            position: absolute;
            width: 100%;
            height: 100%;
        }

        #CustomPopover {
            z-index: 1040;
            border-width: 2px;
            padding: 8px;
            border-radius: 2px !important;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            position: absolute;
            background: white;
        }

            #CustomPopover .btn {
                margin-left: 1px;
                margin-right: 1px;
            }

        .geral-note {
            padding: 2px;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background-color: #ebe9e8;
            text-align: center;
            width: 60%;
            margin: auto;
            margin-bottom: 10px;
        }

        #tituloDesdobramento {
            text-align: center;
            font-size: 20px;
        }

        img {
            border-radius: 4px;
            padding: 7px;
            width: 150px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        #cabecalho td {
            border: 3px solid #ddd;
            padding: 2px;
            height: 15px !important;
        }

    </style>

    <div class="page-content-wrapper">
        <button class="btn btn-primary" id="btnPrint">@Resources.Resource.print</button>
        <br />
        <div class="page-content">

            <input id="rodapeCodigo" class="hidden" />

            <div class="loader" hidden></div>
            <div class="alert alert-info" role="alert" id="mensagemSemDados" hidden> Sem dados. </div>
            @Html.Partial("~/Views/Shared/_mensagemObrigatorio.cshtml")

            <div class="container-fluid">
                <div id="cabecalhoDiv" class="row" hidden>
                    <table id="cabecalho" class="table table-bordered">
                        <tr>
                            <td rowspan="3" class="col-xs-2">
                                <img height="90" width="120" src="~/Imagens/novoLogoFriboi2.PNG" />
                            </td>

                            <td style="text-align:center; font-weight:bold;"><text id="tdNomeRelatorio"></text></td>

                            <td rowspan="3" class="col-xs-2">
                                <img height="90" class="img-responsive" src="~/Imagens/novoLogoFriboi.PNG" />
                            </td>
                        </tr>
                        <tr>
                            <td><strong>Elaborador:</strong> <text id="tdElaborador"></text></td>
                        </tr>
                        <tr>
                            <td><strong>Aprovador:</strong> <text id="tdAprovador"></text></td>
                        </tr>
                    </table>
                    <div>
                        Unidade: <text id="unidadeColeta"></text>
                    </div>
                </div>

                <div class="row" id="corpoPagina">
                    <div id="print-table-pivot-table" style="width: 790px !important;"></div>
                    <div id="pivot-table" style="overflow-x:auto">

                    </div>
                    <br /><br /><br />
                    <footer id="rodape" hidden>
                        <div class="row">
                            <div class="col-xs-6" style="text-align:center">
                                _________________________________
                                <br />
                                Supervisor do Setor
                            </div>

                            <div class="col-xs-6" style="text-align:center">
                                _________________________________
                                <br />
                                Supervisor da GQ
                            </div>
                        </div>
                    </footer>

                </div>

            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="~/Scripts/Print/printGRT.js"></script>

    <script>
        let urlBuscaDados = '@Html.Raw(Url.Action("Get", "api/Formularios"))';

        $('button').button({ loadingText: '@Resources.Resource.loading...' });
        var $btn = $('#btnSend');

       // $('[name="parCompany_Ids"]').parent().find('label strong').append('<span style="color:red;font-size:20px"> *</span>');

        $('body').off('click').on('click', '#btnPrint', function () {
            $('#printTitulo').html($("#tdNomeRelatorio").text());
            $("#printElaborador").html($("#tdElaborador").text());
            $("#printAprovador").html($("#tdAprovador").text());

            /*
            dpi is the pixel density or dots per inch.
            96 dpi means there are 96 pixels per inch.
            1 inch is equal to 2.54 centimeters.

            1 inch = 2.54 cm
            dpi = 96 px / in
            96 px / 2.54 cm
            */
            var idTabelaOriginal = 'table-pivot-table';
            var idFormatadoParaImpressao = 'print-table-pivot-table';
            var config = {
	            startWidth: 0,
	            startTHCount: -1,
	            startTHRowsCount: -1,
	            maxWidthInCentimeter: (96/2.54) * 21,
	            startCells: [],
	            valuesCells: []
            }
            remontarTabela(idTabelaOriginal,idFormatadoParaImpressao,config);
            ajustarTabela(idFormatadoParaImpressao, idFormatadoParaImpressao, config);
            $('#' + idTabelaOriginal).addClass('hide');
            document.body.setAttribute("style", "background-color:#fff !important;");

         setTimeout(function () {
            printGRT.Inicializar({

                headerHtml: document.getElementById('cabecalhoDiv').innerHTML,
                bodyHtml: document.getElementById('corpoPagina').innerHTML,
                footerHtml: $("#rodapeCodigo").text(),
                numberMarginRight: 25,
                numberMarginBottom: 25,
                renderTableMargin: 0,
                pageMarginHeader: "25px 25px 10px 25px",
                pageMarginFooter: "10px 25px 25px 25px",
                pageMarginBody: "0 25px 0 25px"

            });

            printGRT.Imprimir();

        },150);

            setTimeout(function () {
                document.body.setAttribute("style", "");
                $('#' + idTabelaOriginal).removeClass('hide');
                document.getElementById(idFormatadoParaImpressao).innerHTML = "";
                //$("#print-table-pivot-table").remove();

                $('#divRenderPrint').remove();
            },300);

            
        });

        function enviarFiltro() {
            var itensNaoRespondidos = validaObrigatorios();
            if (itensNaoRespondidos.length > 0) {
                $(itensNaoRespondidos).map(function (i, o) {
                    GuardJs.exibirMensagemAlerta("o campo " + o + " é obrigatorio");
                    $("#rodape").hide();
                    $("#cabecalhoDiv").hide();
                    $("#pivot-table").hide();
                });

            } else {
                window.scrollTo(0, 0);

                if (!$("#divFilterReports").is(":hidden"))
                    toggleDivFilterReports();

                    $btn.button('loading');
                    $(".loader").show();

                    GuardJs.exibirMensagemAlerta("Caso o relatório demore para ser carregado é devido a busca estar sendo realizada nas unidades vinculadas ao usuário!");

                    $("#mensagemSemDados").hide();
                   // GuardJs.esconderMensagem();

                    $("#rodape").hide();
                    $("#cabecalhoDiv").hide();
                    $("#pivot-table").hide();
                    $.ajax({
                        data: JSON.stringify(objFiltro),
                        url: urlBuscaDados,
                        type: 'POST',
                        contentType: "application/json",
                        success: function (data) {

                            $btn.button('reset');
                            $(".loader").hide();
                            if (data.Resultado.length > 0) {

                                $("#mensagemSemDados").hide();
                                $("#pivot-table").show();
                                GuardJs.esconderMensagem();
                                $("#rodape").show();
                                $("#cabecalhoDiv").show();
                                $("#tdAprovador").text(data.Aprovador);
                                $("#tdElaborador").text(data.Elaborador);
                                $("#rodapeCodigo").text(data.CodigoRelatorio);
                                $("#tdNomeRelatorio").text(data.RelatorioName);

                                var arrayUnidadesNome = $.map(data.Resultado, function (o, i) {
                                    return o.unidade;
                                });

                                var arrayUnidadesNomeFiltrada = arrayUnidadesNome.filter((item, index) => arrayUnidadesNome.indexOf(item) === index);

                                $("#unidadeColeta").text(arrayUnidadesNomeFiltrada.join(','));

                                montaLayout(data.ParReportLayoutXReportXUser);
                                montaTabelaDinamica(data.Resultado, data.ParReportLayoutXReportXUser);
                            } else {
                                $("#mensagemSemDados").show();
                                GuardJs.esconderMensagem();
                            }

                        },
                        timeout: 600000,
                        contentType: "APPLICATION/JSON; CHARSET=UTF-8",
                        error: function (a, b, c) {
                            $(".loader").hide();
                            console.log(a);
                            console.log(b);
                            console.log(c);
                        }
                    });
            }
        }

        var cabecalhos = [];
        var linhas = [];
        var valores = [];

        function montaLayout(layout) {

            cabecalhos = $.map(layout, function (o, i) {
                if (o.LayoutLevel == 1)
                    return o.Value;
            });

            linhas = $.map(layout, function (o, i) {
                if (o.LayoutLevel == 2)
                    return o.Value;
            });

            valores = $.map(layout, function (o, i) {
                if (o.LayoutLevel == 3)
                    return o.Value;
            });

        }

        function montaTabelaDinamica(data, layout) {

            var obj = [];

            obj = data;

            var element = document.getElementById('pivot-table');

            var matrizColunas = { lista: [] };
            var matrizLinhas = { lista: [] };
            for (var i = 0; i < obj.length; i++) {
                montarArvoreDeDados(obj[i], matrizColunas, cabecalhos, 0, cabecalhos.length - 1);
                montarArvoreDeDados(obj[i], matrizLinhas, linhas, 0, linhas.length - 1);
            }

            function montarArvoreDeDados(objeto, matriz, lista, indexAtual, indexMaximo) {
                var nomeDoNivel = lista[indexAtual];
                var valorCabecalho = objeto[nomeDoNivel];

                var itemAtual = {};
                itemAtual.nivel = nomeDoNivel;
                itemAtual.titulo = valorCabecalho.replace("'", "´");
                itemAtual.lista = [];

                if (matriz.lista) {
                    itemDaLista = matriz.lista.filter((item) => item.titulo.replace("'", "´") == valorCabecalho.replace("'", "´"))
                    if (itemDaLista.length == 0) {
                        matriz.lista.push(itemAtual); //Adicionado como filho
                    } else {
                        itemAtual = itemDaLista[0]; //Já existe na lista de filhos
                    }
                } else {
                    itemAtual = matriz[valorCabecalho]; //Já existe na lista
                }

                if (indexAtual < indexMaximo) {
                    var resultado = montarArvoreDeDados(objeto, itemAtual, lista, ++indexAtual, indexMaximo);
                }
                return matriz;
            }

            function montaQuantidadeDeSpan(itemMatriz) {
                if (!itemMatriz.filhos) {
                    itemMatriz.span = itemMatriz.lista.length;
                }

                for (var i = 0; i < itemMatriz.lista.length; i++) {
                    var item = itemMatriz.lista[i];
                    var span = montaQuantidadeDeSpan(item);
                    if (span > 1) {
                        itemMatriz.span += span - 1;
                    }
                }

                return itemMatriz.span;

            }

            var colspanTotal = 0;
            for (var i = 0; i < matrizColunas.lista.length; i++) {
                var item = matrizColunas.lista[i];
                montaQuantidadeDeSpan(item);
                if (item.span == 0) {
                    item.span = 1;
                }
                colspanTotal += item.span;
            }
            console.log(matrizColunas);
            console.log(colspanTotal);

            var rowspanTotal = 0;
            for (var i = 0; i < matrizLinhas.lista.length; i++) {
                var item = matrizLinhas.lista[i];
                montaQuantidadeDeSpan(item);
                rowspanTotal += item.span;
            }
            console.log(matrizLinhas);
            console.log(rowspanTotal);

            var htmlTable = "";
            htmlTable += "<table class='table table-bordered table-striped' id='table-pivot-table'>";

            /***INICIO: MONTA COLUNAS HTML **********************************************/
            var matrizHtmlColunas = [];
            function montaColunas(itemMatriz, indexAtual, indexMaximo, atributos) {
                var html;

                if (!atributos) {
                    atributos = "";
                }
                atributos += " " + itemMatriz.nivel + "='" + itemMatriz.titulo + "'";

                if (indexAtual == indexMaximo) {
                    html = '<th ' + atributos + ' colspan="' + valores.length + '">';
                } else {
                    html = '<th colspan="' + (itemMatriz.span * valores.length) + '">';
                }

                var apelido = $(layout).map(function (i, o) {
                    if (itemMatriz.nivel == o.Value) {
                        if (o.NickName != "" && o.NickName != null)
                            return o.NickName;
                        else
                            return itemMatriz.titulo;
                    }
                });

                html += apelido[0] + '</th>';

                if (!matrizHtmlColunas[indexAtual]) {
                    matrizHtmlColunas.push(html);
                } else {
                    matrizHtmlColunas[indexAtual] += html;
                }

                ++indexAtual;
                for (var i = 0; i < itemMatriz.lista.length; i++) {
                    var item = itemMatriz.lista[i];
                    montaColunas(item, indexAtual, indexMaximo, atributos);
                }
            }

            for (var i = 0; i < matrizColunas.lista.length; i++) {
                var item = matrizColunas.lista[i];
                montaColunas(item, 0, cabecalhos.length - 1);
            }
            console.log(matrizColunas);

            for (var i = 0; i < matrizHtmlColunas.length; i++) {
                htmlTable += "<tr>";
                if (i == 0) {
                    htmlTable += "<th colspan='" + linhas.length + "' rowspan='" + (cabecalhos.length) + "'></th>";
                }
                htmlTable += matrizHtmlColunas[i];
                htmlTable += "</tr>";
            }
            /***FIM: MONTA COLUNAS HTML **********************************************/
            htmlTable += "<tr>";

            for (var j = 0; j < linhas.length; j++) {

                //validação para trocar o value pelo nickname se for diferente de vazio
                var apelido = $(layout).map(function (i, o) {
                    if (linhas[j] == o.Value) {
                        if (o.NickName != "" && o.NickName != null)
                            return o.NickName;
                        else
                            return o.Value;
                    }
                });

                htmlTable += "<th>" + apelido[0] + "</th>";
            }

            for (var i = 0; i < colspanTotal; i++) {
                for (var j = 0; j < valores.length; j++) {

                    //validação para trocar o value pelo nickname se for diferente de vazio
                    var apelido = $(layout).map(function (i, o) {
                        if (valores[j] == o.Value) {
                            if (o.NickName != "" && o.NickName != null)
                                return o.NickName;
                            else
                                return o.Value;
                        }
                    });

                    htmlTable += "<th>" + apelido[0] + "</th>";
                }
            }
            htmlTable += "</tr>";

            /***INICIO: MONTA LINHAS HTML **********************************************/
            var matrizHtmlLinhas = [];
            function montaLinhas(itemMatriz, numeroLinha, indexAtual, indexMaximo, atributos, qtdColunasAnterior) {
                var html;

                if (!atributos) {
                    atributos = "";
                }
                atributos += " " + itemMatriz.nivel + "='" + itemMatriz.titulo + "'";

                if (indexAtual == indexMaximo) {
                    html = '<th ' + atributos + '>';
                //} else if (itemMatriz.span > 1) {
                  //  html = '<th rowspan="' + itemMatriz.span + '">';
                } else {
                    html = '<th>';
                }
                html += itemMatriz.titulo + '</th>';

                if (!matrizHtmlLinhas[numeroLinha]) {
                    var htmlTemp = "";
                    for (var p = 0; p < qtdColunasAnterior; p++) {
                        htmlTemp += "<th>&nbsp;</th>";
                    }
                    matrizHtmlLinhas.push(htmlTemp + html);
                } else {
                    matrizHtmlLinhas[numeroLinha] += html;
                }

                qtdColunasAnterior++;

                if (indexAtual == indexMaximo) {
                    numeroLinha++;
                } else {
                    ++indexAtual;
                    for (var i = 0; i < itemMatriz.lista.length; i++) {
                        var item = itemMatriz.lista[i];
                        numeroLinha = montaLinhas(item, numeroLinha, indexAtual, indexMaximo, atributos, qtdColunasAnterior);
                    }
                }
                return numeroLinha;

            }

            var numeroLinha = 0;
            for (var i = 0; i < matrizLinhas.lista.length; i++) {
                var item = matrizLinhas.lista[i];
                numeroLinha = montaLinhas(item, numeroLinha, 0, linhas.length - 1, undefined,0);
            }

            for (var i = 0; i < matrizHtmlLinhas.length; i++) {
                htmlTable += "<tr>";
                htmlTable += matrizHtmlLinhas[i];
                for (var j = 0; j < colspanTotal; j++) {
                    for (var z = 0; z < valores.length; z++) {
                        htmlTable += "<td data-value='" + valores[z] + "'></td>";
                    }
                }
                htmlTable += "</tr>";
            }
            /***FIM: MONTA LINHAS HTML **********************************************/

            htmlTable += "</table>";
            document.querySelector('#pivot-table').innerHTML = htmlTable;


            /***INICIO: MONTA VALORES HTML **********************************************/
            var listaTds = document.querySelector('#pivot-table > table').getElementsByTagName('td');

            var listaObj = [...obj];
            var ultimoObjeto = undefined;
            var ultimaPosicaoDoObjeto = 0;
            for (var i = 0; i < listaTds.length; i++) {
                var td = listaTds[i];
                var cellIndex = td.cellIndex;
                var rowIndex = td.parentNode.rowIndex;
                var numeroObjeto = (cellIndex - td.parentNode.getElementsByTagName('th').length);
                var atributos = {};
                var attrColuna = document.querySelector("#pivot-table  > table > tbody > tr:nth-child(" + cabecalhos.length + ") > th:nth-child(" + (1 + Math.floor(numeroObjeto / valores.length)) + ")").attributes;
                for (var j = 0; j < attrColuna.length; j++) {
                    atributos[attrColuna[j].name] = attrColuna[j].value;
                }
                var linha = document.querySelector("#pivot-table > table > tbody > tr:nth-child(" + (rowIndex + 1) + ")").getElementsByTagName('th');
                var attrLinha = linha[linha.length - 1].attributes;
                for (var j = 0; j < attrLinha.length; j++) {
                    atributos[attrLinha[j].name] = attrLinha[j].value;
                }
                var objAtributos = Object.keys(atributos);
                for (var j = 0; j < listaObj.length; j++) {
                    var deuMatch = true;
                    if (!ultimoObjeto) {
                        for (var z = 0; z < objAtributos.length; z++) {
                            if (listaObj[j][objAtributos[z].replace(/-/gi, ' ')] && atributos[objAtributos[z]].replace(/[^\w\s]/gi, '') != listaObj[j][objAtributos[z].replace(/-/gi, ' ')].replace(/[^\w\s]/gi, '')) {
                                deuMatch = false;
                                break;
                            }
                        }
                    }
                    if (deuMatch) {
                        if (!ultimoObjeto) {
                            ultimaPosicaoDoObjeto = j;
                        }
                        ultimoObjeto = listaObj[ultimaPosicaoDoObjeto];
                        td.innerHTML = ultimoObjeto[td.getAttribute("data-value")];

                        if (td.getAttribute("data-value") == "resultado"
                            && parseFloat(ultimoObjeto["nc"]) > 0 && ultimoObjeto["resultado"] != "NA") {
                            td.style.backgroundColor = "black";
                            td.setAttribute('style', "background-color: black !important;  color: white !important; font-weight: bold !important;");
                        }

                        if (((1 + numeroObjeto) % valores.length) == 0) {
                            ultimoObjeto = undefined;
                            listaObj.splice(ultimaPosicaoDoObjeto, 1);
                        }
                        break;
                    }
                }
            }
        }
        /***FIM: MONTA VALORES HTML **********************************************/

        var tamanhoFonte = 8;
        function remontarTabela(id,idParaRemontar,config){
	        var pivotTable = document.getElementById(id);
	        var linhas = pivotTable.getElementsByTagName("tr");
	        var rowspanFim = 1;
	        var rowspanInicio = 0;
	        var htmlCellRowspan = "";

	        var htmlTable = "<table class='table table-bordered'>";
	        for(var i = 0; i < linhas.length; i++){
		        htmlTable += "<tr>";
		        var quantidadeColspan = 0;
		        for(var j = 0; j < linhas[i].childNodes.length; j++){
			        var celula = linhas[i].childNodes[j];

			        if(i <= rowspanFim-1 && j == 0){
				        htmlTable += htmlCellRowspan;
                    }

                    var style = ajustarEstiloDaCelula(celula);

			        var htmlCell = "";
			        if(celula.getAttribute("colspan")){
				        var colspan = parseInt(celula.getAttribute("colspan"));
                        quantidadeColspan += colspan

                        for (var z = 0; z < colspan; z++){
                            var width = 150;
                            if (celula.offsetWidth < width) {
                                width = celula.offsetWidth;
                            }
					        htmlCell += "<"+celula.tagName+" style='padding:2px;width:"+width+"px !important;"+style+";font-size:"+tamanhoFonte+"pt !important'>"+celula.innerHTML+"</"+celula.tagName+">";
				        }

				        if(config.startTHCount == -1){
					        config.startTHCount = colspan;
				        }
			        }else{
				        quantidadeColspan++;
				        htmlCell += "<"+celula.tagName+" style='padding:2px;"+style+";font-size:"+tamanhoFonte+"pt !important;'>"+celula.innerHTML+"</"+celula.tagName+">";
			        }
			        htmlTable += htmlCell;

			        if(celula.getAttribute("rowspan")){
				        htmlCellRowspan = htmlCell;
				        rowspanInicio = i;
				        rowspanFim = rowspanInicio + parseInt(celula.getAttribute("rowspan"));
				        if(config.startTHRowsCount == -1){
					        config.startTHRowsCount = parseInt(celula.getAttribute("rowspan"));
				        }
			        }

		        }
		        htmlTable += "</tr>";
	        }
	        htmlTable += "</table>";
	        document.getElementById(idParaRemontar).innerHTML = htmlTable;
        }

        function ajustarTabela(id,idParaRemontar,config){
	        var isConfigured = false;
	        var pivotTable = document.getElementById(id);
	        var linhas = pivotTable.getElementsByTagName("tr");

	        for(var i = 0; i < linhas.length; i++){
		        var countTable = 0;
		        var currentWidth = 0;
		        for(var j = 0; j < linhas[i].childNodes.length; j++){
                    var celula = linhas[i].childNodes[j];

                    var style = ajustarEstiloDaCelula(celula);

			        var htmlCelula = "";
			        if((j+1) > config.startTHCount || (i+1) > config.startTHRowsCount){
				        if(celula.tagName == "TH"){
					        htmlCelula = "<"+celula.tagName+" style='font-size:9pt;padding:2px;width:"+celula.offsetWidth+"px !important;"+style+";font-size:"+tamanhoFonte+"pt !important;'>"+celula.innerHTML+"</"+celula.tagName+">";
				        }else{
					        htmlCelula = "<"+celula.tagName+" style='font-size:9pt;padding:2px;"+style+";font-size:"+tamanhoFonte+"pt !important;'>"+celula.innerHTML+"</"+celula.tagName+">";
				        }
			        //}else if(i == 0 && j == 0){
				    //    htmlCelula = "<"+celula.tagName+" colspan='"+config.startTHCount+"' rowspan='"+config.startTHRowsCount+"'></"+celula.tagName+">";
			        }else{
				        htmlCelula = "<"+celula.tagName+" style='border:0px !important;"+style+";font-size:"+tamanhoFonte+"pt !important;'></"+celula.tagName+">";
			        }

			        if((j+1) <= config.startTHCount){
				        currentWidth += celula.offsetWidth;
				        //Registra qual a largura que inicialmente é utilizada
				        if(!isConfigured && (j+1) == config.startTHCount){
					        isConfigured = true;
					        config.startWidth = currentWidth;
				        }
				        config.startCells[i] = (config.startCells[i] == undefined? '' : config.startCells[i])+htmlCelula;
				        if(isConfigured){
					        currentWidth = 0;
				        }
			        }else if((j+1) >  config.startTHCount){
				        //Calcula valores
				        if((config.startWidth + currentWidth + celula.offsetWidth) > config.maxWidthInCentimeter){
                            currentWidth = 0;

					        countTable++;
				        }
				        currentWidth += celula.offsetWidth;

				        if(!config.valuesCells[i]){
					        config.valuesCells[i] = [];
				        }

				        config.valuesCells[i][countTable] = (config.valuesCells[i][countTable] == undefined? '' : config.valuesCells[i][countTable])+htmlCelula;
			        }
		        }
	        }

	        document.getElementById(idParaRemontar).innerHTML = "";
	        var htmlTable = [];
	        for(var i = 0; i < config.valuesCells.length; i++){
		        for(var j = 0; j < config.valuesCells[i].length; j++){
			        if(i == 0){ //avoid-break-page
				        htmlTable[j] = "<table class='table table-bordered' style='font-size:"+tamanhoFonte+"pt !important;'>";
			        }
			        htmlTable[j] += "<tr>";
			        htmlTable[j] += config.startCells[i];
			        htmlTable[j] += config.valuesCells[i][j];
			        htmlTable[j] += "</tr>";

			        if((i+1) == config.valuesCells.length){
				        htmlTable[j] += "</table>";
				        document.getElementById(idParaRemontar).insertAdjacentHTML( 'beforeend', htmlTable[j]);
			        }
		        }
	        }

        }

        function ajustarEstiloDaCelula(celula) {
            var style = "";
            if (!!celula.style.backgroundColor) {
                style += "background-color:" + celula.style.backgroundColor + " !important;";
            }
            if (!!celula.style.color) {
                style += "color:" + celula.style.color + " !important;";
            }
            return style;
        }
    </script>
}
