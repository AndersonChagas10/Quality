@model SgqService.ViewModels.FormularioParaRelatorioViewModel
@{
    Layout = "_FilterReports.cshtml";
    ViewBag.Title = Resources.Resource.daily_apointments; //"Apontamentos Diarios";

    ViewBag.pivotTable = true;
    ViewBag.ShowCurrentDate = false;
    ViewBag.ShowRangeDate = true;

    ViewBag.ShowParClusterGroup = true;

    ViewBag.ShowParStructure2 = true;

    ViewBag.ShowParStructure3 = true;

    ViewBag.ShowUserSgqAuditor = true;

    ViewBag.ShowParStructure = false;
    ViewBag.ShowParCompany = true;
    ViewBag.ShowShift = false;
    ViewBag.ShowParDepartment = true;
    ViewBag.ShowParSecao = true;
    ViewBag.ShowParCargo = true;
    ViewBag.ShowParLevel1 = true;
    ViewBag.ShowParLevel2 = true;
    ViewBag.ShowParLevel3 = true;
    ViewBag.ShowParCluster = true;

    ViewBag.ShowUserCompanies = true; //Exibe somente as unidades do usuário no filtro

    var urlGet = Url.Action("GetApontamentosDiariosRH", "api/ApontamentosDiarios");
    var urlSave = Url.Action("SaveRH", "api/ApontamentosDiarios");
    var urlSaveHeader = Url.Action("SaveCabecalhoGeral", "api/ApontamentosDiarios");
    var urlLogTrack = Url.Action("Get", "api/LogTrack");
    var urlLogTrackHeaderField = Url.Action("GetHeaderFieldGeralByResult_Level3", "api/LogTrack");
    var urlEditCabecalho = Url.Action("EditCabecalhoGeralRH", "api/ApontamentosDiarios");
}

@section Content {

    @Html.Partial("~/Views/RelatoriosSgq/_ResultLevel3Edit.cshtml")
    @Html.Partial("~/Views/RelatoriosSgq/_LogTrackHistory.cshtml")
    <div id="divApontamentosDiarios"></div>
    <div id="divTable">
        <table id="resultsApontamentos" class="table table-striped"></table>
        <div id="PivotTable" class="display" style="display:none"></div>
    </div>

    @Html.Partial("~/Views/RelatoriosSgq/_PivotTable.cshtml")
}


@section Scripts {

    <script>
        var dataEdit;
        var urlGet = '@Html.Raw(@urlGet)';
        var RoleUser = @Html.Raw(Json.Encode(ViewBag.Roles));
        var urlSave = '@Html.Raw(@urlSave)';
        var urlSaveHeader = '@Html.Raw(@urlSaveHeader)';
        var urlLogTrack = '@Html.Raw(@urlLogTrack)';
        var urlLogTrackHeaderField = '@Html.Raw(@urlLogTrackHeaderField)';
        var urlEditCabecalho = '@Html.Raw(@urlEditCabecalho)';
        var tableEdit;

        function enviarFiltro() {
            openLoader('Aguarde...');
            $('#resultsApontamentos').empty();
            $('#divApontamentosDiarios').empty();

            $('#divTable').hide();

            $.ajax({
                url: urlGet,
                type: 'post',
                data: JSON.stringify(objFiltro),
                dataType: "JSON",
                contentType: "APPLICATION/JSON; CHARSET=UTF-8",
                beforeSend: function () {
                }
            })
                .done(function (data) {
                GerarTabela(data);
                closeLoader();
            })
            .fail(function (jqXHR, textStatus, msg) {
                console.log(msg);
                preencheRetornoGrafico("Ocorreu um erro ao buscar os dados. Erro: " + msg);
                closeLoader();
            });
        }

        function preencheRetornoGrafico(msg) {
            $('#divApontamentosDiarios').html("<div class='alert alert-info'>" + msg + "</div>");
        }

        function GerarTabela(retornoArray) {
            
            if (retornoArray == null || retornoArray.length == 0) {

                preencheRetornoGrafico(@Html.Raw(Json.Encode(Resources.Resource.no_appointments_in_this_period)))
            }

            else {

                $('#tabelaAnaliticoButtons').show();
                //Regra para habilitar o botão de edição somente para quem contiver as roles 366 e 346 e Admin
                var regraEdit = false;

                //var roles = $.grep(getCookie('webControlCookie'), function (a, b) {
                //    return a.indexOf('roles') != -1;
                //})[0].split('=')[1].split(',');

                var roles = @Html.Raw(Json.Encode(ViewBag.UserRoles));

                roles = roles.split(",");

                var role = roles.find(function(e) {
                    return e === 'Admin';
                });

                if (RoleUser.indexOf("366") >= 0 || RoleUser.indexOf("346") >= 0 || RoleUser.indexOf("1885") >= 0 || role == 'Admin') {
                    regraEdit = true ;
                }else{
                    regraEdit = false;
                }

                //Fim Regra
                var Tipo1 = {};
                var Tipo2 = {};

                if (retornoArray[0].HashKey == 1 || retornoArray[0].HashKey == 5) {

                    Tipo1 = { title: "@Resources.Resource.sequential", mData: "Sequencial" };
                    Tipo2 = { title: "@Resources.Resource.side_banda", mData: "Banda" };
                } else {
                    Tipo1 = { title: "@Resources.Resource.evaluation", mData: "Avaliacao" };
                    Tipo2 = { title: "@Resources.Resource.sample", mData: "Amostra" };
                }

                $('#divTable').show();

                var colunas =
                    [
                        {
                            title: "@Resources.Resource.edit", mData: null, mRender: function (data, type, full) {
                                if (data.ParLevel3InputType_Id == 11) {
                                    return '<button class="btn btn-link custom-button" disabled style="cursor: not-allowed;">' + "@Resources.Resource.edit" + '</button>';
                                } else {
                                    return '<button id="edit" data-ParLevel3InputType_Id="' + data.ParLevel3InputType_Id + '" class="btn btn-link custom-button" data-toggle="modal" data-target="#myModal">' + "@Resources.Resource.edit" + '</button>';
                                }
                            }, "visible": regraEdit
                        },
                        {
                            title: "@Resources.Resource.edit" + "Cabeçalho", mData: null, mRender: function (data, type, full) {
                                if (data.HeaderFieldListL1 != "" || data.HeaderFieldListL2 != "" || data.HeaderFieldListL3 != "") {
                                    return '<button id="editHeader" data-ParLevel3InputType_Id="' + data.ParLevel3InputType_Id + '" class="btn btn-link custom-button" data-toggle="modal" data-target="#myModalHeader">' + "@Resources.Resource.edit" + 'Cabeçalho </button>';
                                } else {
                                    return null;
                                }
                            }, "visible": regraEdit
                        },
                        { title: "@Resources.Resource.unit", mData: "Unidade" },
                        { title: "Cluster", mData: "ClusterName" },
                        //{ title: "@Resources.Resource.cluster", mData: "Processo" },
                        //{ title: "@Resources.Resource.shift", mData: "Turno" },
                        //{ title: "@Resources.Resource.period", mData: "Periodo" },
                        { title: "@Resources.Resource.frequency", mData: "Frequencia" },
                        { title: "@Resources.Resource.user", mData: "Auditor" },
                        { title: "@Resources.Resource.date", mData: "_Data" },
                        { title: "@Resources.Resource.time", mData: "_Hora" },
                        { title: "@Resources.Resource.costcenter", mData: "CentroCusto" },
                        { title: "@Resources.Resource.department", mData: "Secao" },
                        { title: "@Resources.Resource.company_group", mData: "GrupoEmpresa" },
                        { title: "@Resources.Resource.structure", mData: "regional" },
                        { title: "@Resources.Resource.cluster_group1", mData: "GrupoCluster" },
                        { title: "Cargo", mData: "Cargo" },
                        { title: "@Resources.Resource.audit", mData: "Indicador" },
                        { title: "@Resources.Resource.monitoring", mData: "Monitoramento" },
                        { title: "@Resources.Resource.task", mData: "Tarefa" },
                        { title: "@Resources.Resource.weight", mData: "Peso" },
                        {
                            title: "@Resources.Resource.min_interval", mData: "IntervaloMinimo", mRender: function (data, type, full) {

                                if (isNaN(parseFloat(data))) {

                                    return data;

                                } else {

                                    return data.toString().match(/^-?\d+(\.\d{1,2})?/g)[0];
                                }

                            }
                        },
                        {
                            title: "@Resources.Resource.max_interval ", mData: "IntervaloMaximo", mRender: function (data, type, full) {

                                if (isNaN(parseFloat(data))) {

                                    return data;

                                } else {

                                    return data.toString().match(/^-?\d+(\.\d{1,2})?/g)[0];
                                }

                            }
                        },
                        { title: "@Resources.Resource.value", mData: "Lancado" },
                        { title: "@Resources.Resource.textfield", mData: "ValueText" },
                        { title: "@Resources.Resource.deviation ?", mData: "_Conforme" },
                        { title: "@Resources.Resource.weighted_defects", mData: "NC_Peso" },
                        { title: "@Resources.Resource.Qualification_Group", mData: "Qualification_Group"},
                        { title: "@Resources.Resource.na ?", mData: "_NA" },
                        { title: "@Resources.Resource.weighted_ev", mData: "AV_Peso" },
                        Tipo1,
                        Tipo2,
                        { title: "@Resources.Resource.header_fields_l1", mData: "HeaderFieldListL1", "width": "50%" },
                        { title: "@Resources.Resource.header_fields_l2", mData: "HeaderFieldListL2", "width": "50%" },
                        { title: "@Resources.Resource.header_fields_l3", mData: "HeaderFieldListL3", "width": "50%" },
                        //{ title: "@Resources.Resource.platform", mData: "Platform", "width": "50%" },
                        { title: "@Resources.Resource.add_date", mData: "_AddDate", "width": "50%" },
                        {
                            title: "@Resources.Resource.type ", mData: "Type", mRender: function (data, type, full) {

                                if (data == "2") {
                                    return '@Resources.Resource.retroactive';
                                } else if (data == "3") {
                                    return '@Resources.Resource.anticipated';
                                } else if (data == "4") {
                                    return '@Resources.Resource.import';
                                } else if (data == '1') {
                                    return '@Resources.Resource.edited';
                                } else {
                                    return '@Resources.Resource.normal';
                                }
                            }
                        },
                        {

                            title: "Histórico Resultado", mData: null, mRender: function (data, type, full) {
                                return full.HasHistoryResult_Level3 ?
                                    '<button class="btn btn-info btn-sm" id="viewHistory" class="btn btn-link custom-button" height="60" style="width:80px;"  data-toggle="modal" data-target="#modalLogTrackHistory">' + "Visualizar" + '</button>'
                                    :
                                    '<button class="btn btn-default btn-sm" disabled="" title="Não há edições" style="width:80px;">-</button>';
                            }
                        },
                        {

                            title: "Histórico Cabeçalho", mData: null, mRender: function (data, type, full) {
                                return full.HasHistoryHeaderField ?
                                    '<button class="btn btn-success btn-sm" id="viewHeaderFieldHistory" class="btn btn-link custom-button" height="60" style="width:80px;"  data-toggle="modal" data-target="#modalLogTrackHistory">' + "Visualizar" + '</button>'
                                    :
                                    '<button class="btn btn-default btn-sm" disabled="" title="Não há edições" style="width:80px;">-</button>';
                            }
                        }
                    ];

                var initDatatable = function () {

                    $('#loading').hide();
                    setTimeout(function (e) {
                        var oTable = $('#resultsApontamentos').dataTable();
                        if (oTable.length > 0) {
                            oTable.fnAdjustColumnSizing();
                            tableEdit = $('.dataTable').DataTable();
                        }
                    }, 100);

                    $('#resultsApontamentos tbody').on('click', 'button#edit', function (data) {
                        
                        dataEdit = table.row($(this).parents('tr')).data();
                        $('#myModal #changeConform').empty();
                        $("#myModal #Level3Name").empty();
                        $('.alertTextIsRequired').addClass('hide');
                        $('#myModal #estName').html(dataEdit.Unidade + " > " + dataEdit.Indicador + " > " + dataEdit.Monitoramento + " > " + dataEdit.Tarefa);

                        if (dataEdit.ParLevel3InputType_Id != 10 && dataEdit.ParLevel3InputType_Id != null) {
                            $('#myModal #ResultLevel3_Id').val(dataEdit.ResultLevel3Id);
                            $('#myModal #changeConform').append(montaHtmlEdicao(dataEdit));
                            $("#botaoSalvar").show();
                        } else {
                            $("#myModal #Level3Name").append("<div class='alert alert-warning' id='mensagemErro'>O item selecionado possui vínculos de resultado. A edição está desabilitada.</div>");
                            $("#botaoSalvar").hide();
                        }
                    });

                    $('#resultsApontamentos tbody').on('click', 'button#viewHistory', function (data) {

                        dataEdit = table.row($(this).parents('tr')).data();

                        var tableLogTrack = $('#modalLogTrackHistory .modal-body');
                        $(tableLogTrack).html('');

                        $.get(urlLogTrack + "/Result_Level3/" + dataEdit.ResultLevel3Id, function (r) {

                            var htmlHead = "<thead><tr>";
                            htmlHead += "<th></th>";
                            htmlHead += "<th>Data Alteração</th>";
                            htmlHead += "<th>Quem</th>";
                            htmlHead += "<th>Resultado</th>";
                            htmlHead += "<th>Valor</th>";
                            htmlHead += "<th>Valor do Texto</th>";
                            htmlHead += "<th>Não avaliado</th>";
                            htmlHead += "<th>Tipo Motivo</th>";
                            htmlHead += "<th>Motivo</th>";
                            htmlHead += "</tr></thead>";

                            var htmlBody = "";
                            var quantidadeNaLista = r.length;
                            r.splice(0, 0, r[r.length - 1]);
                            r = r.slice(0, -1);
                            
                            $.each(r, function (i, o) {

                                if (i == 0) {
                                    htmlBody += "<tr style='background-color:#ddd;' title='Original'>";
                                    htmlBody += "<td>Original</td>";
                                } else if(i == 1){
                                    htmlBody += "<tr style='background-color:#5cb85c;' title='Atual'>";
                                    htmlBody += "<td>Edição "+(quantidadeNaLista-i)+"</td>";
                                } else {
                                    htmlBody += "<tr>";
                                    htmlBody += "<td>Edição "+(quantidadeNaLista-i)+"</td>";
                                }

                                htmlBody += "<td>"+o.addDate+"</td>";
                                htmlBody += "<td>"+o.userSgq_Name+"</td>";
                                htmlBody += "<td>"+(o.obj.IsConform ? "Conforme" : "Não Conforme")+"</td>";
                                htmlBody += "<td>" + (o.obj.Value == null || o.obj.Value == undefined ? "" : o.obj.Value ) +"</td>";
                                htmlBody += "<td>"+(o.obj.ValueText == null || o.obj.ValueText == undefined ? "" : o.obj.ValueText)+"</td>";
                                htmlBody += "<td>"+(o.obj.IsNotEvaluate ? "Não Avaliado" : "Avaliado")+"</td>";
                                htmlBody += "<td>"+o.parReason+"</td>";
                                htmlBody += "<td>"+o.motivo+"</td>";
                                htmlBody += "</tr>";
                            });

                            var tableHtml = "<table>"+htmlHead+"<tbody>"+htmlBody+"</tbody>"+"</table>"
                            $(tableLogTrack).html(tableHtml);

                            $(tableLogTrack).find('table').dataTable({
                                "ordering": false,
                                "pageLength": 25,
                                "scrollX": true,
                                "initComplete": function (settings, json) {
                                    setTimeout(function () {$.fn.dataTable.tables({ visible: true, api: true }).columns.adjust(); },500)
                                }
                            } );

                        })
                    });

                    $('#resultsApontamentos tbody').on('click', 'button#viewHeaderFieldHistory', function (data) {

                        var dataEdit = table.row($(this).parents('tr')).data();

                        var tableLogTrack = $('#modalLogTrackHistory .modal-body');
                        $(tableLogTrack).html('');
                        
                        $.get(urlLogTrackHeaderField + "/" + dataEdit.ResultLevel3Id, function (r) {

                            var htmlHead = "<thead><tr>";
                            htmlHead += "<th></th>";
                            htmlHead += "<th>Data Alteração</th>";
                            htmlHead += "<th>Quem</th>";
                            htmlHead += "<th>Nome Cabeçalho</th>";
                            htmlHead += "<th>Valor</th>";
                            htmlHead += "<th>Tipo Motivo</th>";
                            htmlHead += "<th>Motivo</th>";
                            htmlHead += "</tr></thead>";

                            var htmlBody = "";
                            var logTrack = r;
                            var original = [];
                            var atual = [];
                            var passado = [];

                            $.each(r, function (i, o) {
                                var existeNaListaAtual = $.grep(atual, function (o2, i2) { return o2.obj.Id == o.obj.Id }).length;
                                var quantidadeExistenteNaLista = $.grep(logTrack, function (o2, i2) { return o2.obj.Id == o.obj.Id }).length;
                                o.numeroDaEdicao = quantidadeExistenteNaLista - existeNaListaAtual - 1;
                                if (!(o.motivo.length > 0)) {
                                    original.push(o);
                                } else if (existeNaListaAtual == 0) {
                                    atual.push(o);
                                } else {
                                    passado.push(o);
                                }
                            });
                            
                            var htmlCorpo = function (o) {
                                var html = "<td>" + o.addDate + "</td>";
                                html += "<td>" + o.userSgq_Name + "</td>";
                                html += "<td>" + o.obj.ParHeaderField_Name + "</td>";
                                html += "<td>" + (!!o.obj.ParHeaderField_ValueName ? o.obj.ParHeaderField_ValueName : o.obj.Value) + (!!o.obj.FullName ? ( " - " + o.obj.FullName) : "")  + "</td>";
                                html += "<td>" + o.parReason + "</td>";
                                html += "<td>" + o.motivo + "</td>";
                                return html;
                            }

                            $.each(original, function (i, o) {
                                htmlBody += "<tr style='background-color:#ddd;' title='Original'>";
                                htmlBody += "<td>Original</td>";
                                htmlBody += htmlCorpo(o);
                                htmlBody += "</tr>";
                            });

                            $.each(atual, function (i, o) {
                                htmlBody += "<tr style='background-color:#5cb85c;' title='Atual'>";
                                htmlBody += "<td>Edição " + o.numeroDaEdicao + "</td>";
                                htmlBody += htmlCorpo(o);
                                htmlBody += "</tr>";
                            });

                            $.each(passado, function (i, o) {
                                htmlBody += "<tr>";
                                htmlBody += "<td>Edição " + o.numeroDaEdicao + "</td>";
                                htmlBody += htmlCorpo(o);
                                htmlBody += "</tr>";
                            });

                            var tableHtml = "<table>" + htmlHead + "<tbody>" + htmlBody + "</tbody>" + "</table>"
                            $(tableLogTrack).html(tableHtml);

                            $(tableLogTrack).find('table').dataTable({
                                "ordering": false,
                                "pageLength": 25,
                                "scrollX": true,
                                "initComplete": function (settings, json) {
                                    setTimeout(function () { $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust(); }, 500)
                                }
                            });

                        })
                    })
                    
                }

                var table = datatableGRT.Inicializar({
                    idTabela: "resultsApontamentos",
                    listaDeDados: retornoArray,
                    colunaDosDados: colunas,
                    numeroLinhasNaTabela: 25,
                    aplicarResponsividade: true,
                    tamanhosDoMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "-"]],
                    loadingRecords: true,
                    destroy: true,
                    info: true,
                    initComplete: initDatatable,
                    createdRow: function (row, data, index) {
                    }
                });
            }

        }

        function makeArrayData(arr) {
            var arrayData = [];
            $(arr).each(function () {
                arrayData.push(this);
            });
            return arrayData;
        }

        $("#tabela").on('click', function () {
                $("#PivotTable").css("display", "none");
                $("#resultsApontamentos_wrapper").css("display","block");
         });

        $("#pivot-table").on('click', function () {
            $('#divFilterReports').addClass('hide');
            $('#divReportContent').attr('class', 'col-sm-12');
            $('#btnToggleDivFilterReports').text('> Mostrar Filtros');
            var arrayData = makeArrayData($('#resultsApontamentos').DataTable().rows({ search: 'applied', page: 'all' }).data());
            $("#resultsApontamentos_wrapper").css("display", "none");
            CarregaPivotTable(arrayData, "PivotTable");
            $("#PivotTable").css("display", "block");
        });

        function SaveHeaderField() {
	
            let objToSave = [];
            let isValid = false;
			
            $('form#divEditHeader input, form#divEditHeader select').each(function (i, o) {
				
                let CollectionLevel2XParHeaderField_Id = $(o).attr("CollectionLevel2XParHeaderField_Id");
                let CollectionLevel2_Id = $(o).attr("CollectionLevel2_Id");
                let ParHeaderField_Id = $(o).attr("ParHeaderField_Id");
                let ParHeaderField_Name = $(o).attr("ParHeaderField_Name");
                let ParFieldType_Id = $(o).attr("ParFieldType_Id");
                let Evaluation = $(o).attr("Evaluation");
                let Sample = $(o).attr("Sample");
                let Value = $(o).val();
                let IsRequired = JSON.parse($(o).attr("IsRequired"));
				
                $(o).css("background-color", "");
				
                if (IsRequired && !Value) {
                    $(o).focus();
                    $(o).css("background", "#ffb7b7");
                    isValid = false;
                    return false;
                }
                objToSave.push({
					
                    "Id": CollectionLevel2XParHeaderField_Id,
                    "CollectionLevel2_Id": CollectionLevel2_Id,
                    "ParHeaderFieldGeral_Id": ParHeaderField_Id,
                    "ParHeaderField_Name": ParHeaderField_Name,
                    "ParFieldType_Id": ParFieldType_Id,
                    "Evaluation": Evaluation,
                    "Sample": Sample,
                    "Value": Value
                });
                isValid = true;
            });
			
            if (isValid) {
				
                var selectParReasonEdit = $('select[name="selectParReasonEdit"]:visible').val();
                var textareaParReasonEdit = $('textarea[name="textareaParReasonEdit"]:visible').val();
                //$('select[name="selectParReasonEdit"]:visible').attr('style','border:0px;');
				
                $('textarea[name="textareaParReasonEdit"]:visible').attr('style','');
                $('.alertParReasonEditIsRequired').addClass('hide');
				
                if (selectParReasonEdit.length <= 0 || textareaParReasonEdit.length < 1) {
					
                    $('.alertParReasonEditIsRequired').removeClass('hide');
                    //$('select[name="selectParReasonEdit"]:visible').attr('style','border:1px solid red;');
                    $('textarea[name="textareaParReasonEdit"]:visible').attr('style','border:1px solid red;');
                    return;
					
                }
				
                $.post(urlSaveHeader,
                    {
                        "HeaderField": objToSave,
                        "UserSgq_Id": @Html.Raw(ViewBag.UserId),
                        "ParReason_Id": selectParReasonEdit,
                        "Motivo": textareaParReasonEdit
                    },
                    function (IsSaved) {
                    if (IsSaved) {
						
                        $('textarea[name="textareaParReasonEdit"]:visible').val('');
                        openMessageModal(Resources('done'), Resources('registry_alter_success'));
                        $('#myModalHeader').modal('hide');
						
                    } else {
						
                        openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));
						
                    }
                }).fail(function (r, x, e) {
					
                    console.log(r);
                    console.log(x);
                    console.log(e);
                    openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));
					
                });
            }
        }

        //Metodo para editar cabeçalhos
        $(document).on('click', '#resultsApontamentos tbody button#editHeader', function (data) {
            
            var data = tableEdit.row($(this).parents('tr')).data();
            
            //escondeMensagemVazio();

            $.post(urlEditCabecalho + "/" + data.ResultLevel3Id, function (r) {

                $('#divEditHeader').empty();

                $('#myModalHeader #estName').html("");
                $('#myModalHeader #ResultLevel3_Id').val(data.ResultLevel3Id);
                r = JSON.parse(r);

                if (r.length > 0) {

                    r.forEach(function (o) {

                        let html = "";
                        switch (o.HeaderFieldGeral.ParFieldType_Id) {
                            case 1:
                                html =
                                    `<div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                <div class="form-group header" name="" style="margin-bottom: 4px;">
                                                    <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                    <select class="form-control input-sm ddl" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" idpai="0" linknumberevaluetion="false" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                        <option value="">Selecione...</option>`

                                if (o.Values) {

                                    o.Values.forEach(function (oo) {

                                        let selected = '';

                                        if (oo.Id == o.ValueSelected)
                                            selected = 'selected="selected"';

                                        html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';
                                    });

                                }

                                html += `</select> <label class="">
                                                    </label>
                                                </div>
                                            </div>`;
                                break;

                            case 2:
                                    html =
                                        `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                        <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                            <label class="font-small labelHeaderField labelHeaderFieldIntegracao">${o.HeaderFieldGeral.Name}</label>
                                                            <select class="form-control input-sm " CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" linknumberevaluetion="true" style="border: 1px solid rgb(167, 176, 24);" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                                <option value="">Selecione...</option>`

                                    if (o.Values) {

                                        o.Values.forEach(function (oo) {

                                            let selected = '';

                                            if (oo.Id == o.ValueSelected)
                                                selected = 'selected="selected"';

                                            html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';
                                        });
                                    }

                                    html += `</select>
                                              </div>
                                                    </div>`;
                                break;
                            case 3:

                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                      <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                        <select class="form-control input-sm" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParHeaderField_Name="${o.HeaderFieldGeral.Id}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" linknumberevaluetion="false" IsRequired="${o.HeaderFieldGeral.IsRequired}">`;

                                if (o.Values) {

                                    o.Values.forEach(function (oo) {

                                        let selected = '';

                                        if (oo.Id == o.ValueSelected)
                                            selected = 'selected="selected"';

                                        html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';

                                    });

                                }

                                html += `</select>
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                break;
                            case 4:

                                if (o.ValueSelected == null)
                                    o.ValueSelected = "";

                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                        <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                            <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                            <input class="form-control input-sm" type="text" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                            <label class=""></label>
                                                        </div>
                                                    </div>`;

                                break;

                            case 5:

                                if (o.ValueSelected == null)
                                    o.ValueSelected = "";

                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                        <input class="form-control input-sm" type="number" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                break;

                            case 6:

                                if (o.ValueSelected == null)
                                    o.ValueSelected = "";

                                html = `<div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div class="form-group" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                            <input class="form-control input-sm" type="date" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                            <label class=""></label>
                                                        </div>
                                                    </div>`;
                                break;

                            case 7:

                                if (o.ValueSelected == null)
                                    o.ValueSelected = "";

                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                        <input class="form-control input-sm" type="time" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderFieldGeral.IsRequired}">
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                break;

                            case 12:
                                
                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                      <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderFieldGeral.Name}</label>
                                                        <select class="form-control input-sm" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderFieldGeral_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderFieldGeral.Id}" ParHeaderField_Name="${o.HeaderFieldGeral.Name}" ParHeaderField_Name="${o.HeaderFieldGeral.Id}" ParFieldType_Id="${o.HeaderFieldGeral.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" linknumberevaluetion="false" IsRequired="${o.HeaderFieldGeral.IsRequired}">`;

                                if (o.Values) {

                                    o.Values.forEach(function (oo) {

                                        let selected = '';

                                        if (oo.Id == o.ValueSelected)
                                            selected = 'selected="selected"';

                                        html += '<option value="' + oo.Id + '" ' + selected + '>' + oo.Name + '</option>';

                                    });

                                }

                                html += `</select>
                                                    </div>
                                                </div>`;

                                break;

                            default:
                        }

                        $('#myModalHeader #estNameHeader').html(data.Unidade + " > " + data.Indicador + " > " + data.Monitoramento);

                        $('#divEditHeader').append(html);

                    });
                } else {
                    exibeMensagemVazio(Resources('no_data_to_show'));
                }
            });
        });

        function SalvarResultLevel3Header() {
            
            var dadosResultLevel3 = {};
            var isColetaDCA = (!!$('#numeroDeDefeitos').length && !!$('#sample').attr('value'));
            if (isColetaDCA) {
                var sample = parseInt($('#sample').attr('value'));
                var value = parseInt($('#numeroDeDefeitos').val());
                if (value > sample) {
                    openMessageModal("O numero de defeitos não pode ser maior que o numero avaliado.")
                    return;
                } else {
                    dadosResultLevel3["Value"] = $('#numeroDeDefeitos').val();
                }
            }
            dadosResultLevel3["Id"] = $('#myModalHeader #ResultLevel3_Id').val()
            dadosResultLevel3["IsNotEvaluate"] = $('#IsEvaluated').is(':checked');

            if ($('#decimal').length)
                dadosResultLevel3["Value"] = $('#decimal').val() + "x10^" + $('#precisao').val();
            if ($('#numeroDeDefeitos').length)
                dadosResultLevel3["Value"] = $('#numeroDeDefeitos').val();
            if ($('#intervaloValor').length)
                dadosResultLevel3["Value"] = $('#intervaloValor').val();
            if ($('#texto').length){
                dadosResultLevel3["ValueText"] = $('#texto').val();
                if(dadosResultLevel3.ValueText == ""){
                    dadosResultLevel3.IsNotEvaluate = true;
                }
            }
            //verifica se o valor inserido é maior que o permitido, se for, a flag isconform fica falsa e salva como nao conforme
            if (parseInt(dadosResultLevel3["Value"]) <= parseInt($("#intervalMax").text()) && parseInt(dadosResultLevel3["Value"]) >= parseInt($("#intervalMin").text()))
                dadosResultLevel3["IsConform"] = $('#conform').is(':checked');
            else
                dadosResultLevel3["IsConform"] = false;
            if ($("#intervalMax").text() == "" && $("#intervalMin").text() == "")
                dadosResultLevel3["IsConform"] = $('#conform').is(':checked');

            var selectParReasonEdit = $('select[name="selectParReasonEdit"]:visible').val();
            var textareaParReasonEdit = $('textarea[name="textareaParReasonEdit"]:visible').val();
            dadosResultLevel3["Motivo"] = textareaParReasonEdit;

            $('textarea[name="textareaParReasonEdit"]:visible').attr('style','');
                $('.alertParReasonEditIsRequired').addClass('hide');
            if (selectParReasonEdit.length <= 0 || textareaParReasonEdit.length < 1) {
                $('.alertParReasonEditIsRequired').removeClass('hide');
                $('textarea[name="textareaParReasonEdit"]:visible').attr('style','border:1px solid red;');
                return;
            }

            $.post(urlSaveHeader + "/" + @Html.Raw(ViewBag.UserId) + "/" + selectParReasonEdit, dadosResultLevel3, function (r, x, e) {
                $('textarea[name="textareaParReasonEdit"]:visible').val('');
                $("#myModal").modal('hide');
                openMessageModal(Resources('done'), Resources('registry_alter_success')); //"Feito", "Registro alterado com sucesso. (por favor atualize a tabela de apontamentos diários).");
            }).fail(function (r, x, e) {
                console.log(r);
                console.log(x);
                console.log(e);
                openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));//"Impossível realizar a ação: ", "Não foi possível atualizar o resultado.");
            });
        }

        function montaHtmlEdicao(o) {
            html = '<div>';
            var inputTypeId = o.ParLevel3InputType_Id;
            if (inputTypeId == 2 || inputTypeId == 3 || inputTypeId == 4 || inputTypeId == 7 || inputTypeId == 8 || inputTypeId == 9 || inputTypeId == 15) {
                var intervalMax = o.IntervaloMaximo == null ? "Sem intervalo máximo" : parseFloat(o.IntervaloMaximo.replace(',', '.'));
                var intervalMin = o.IntervaloMinimo == null ? "Sem intervalo mínimo" : parseFloat(o.IntervaloMinimo.replace(',', '.'));
                var valorAtual = o.Lancado == null ? "Sem valor atual" : parseFloat(o.Lancado.replace(',', '.'));
                html += "<label'> @Resources.Resource.max_interval : </label> " +
                    "<label id='intervalMax'>"+ intervalMax +"</label>" +
                    "<br>" +
                    "<label'> @Resources.Resource.min_interval : </label>" +
                    "<label id='intervalMin'>"+ intervalMin +"</label>" +
                    "<br>" +
                    "<label>  @Resources.Resource.current_value : </label>" +
                    "<label>&nbsp"+ valorAtual +"</label>" +
                    "<br>" +
                    "<label>  @Resources.Resource.new_value : </label>" +
                    "<input type='number' id='inputValor' class='form-control' value="+ valorAtual +" />" +
                    "<br>";
            }
            if (inputTypeId == 6 || inputTypeId == 9 || inputTypeId == 15) {
                var valueText = o.ValueText == "" || o.ValueText == "undefined" || o.ValueText == null ? "Sem valor atual" : o.ValueText;
                html += "<label> @Resources.Resource.current_value (Campo Texto) : </label>&nbsp" + valueText +
                    "<br>" +
                    "<label> @Resources.Resource.new_value (Campo Texto) : </label>" +
                    "<input type='text' id='texto' class='form-control text' value='" + o.ValueText + "' />"
            }
            if (inputTypeId == 5 || inputTypeId == 11) {
                var currentValue = o.Lancado == "" || o.Lancado == "undefined" || o.Lancado == null ? "Sem valor atual" : o.Lancado;
                var valueText = o.Lancado == "" || o.Lancado == "undefined" || o.Lancado == null ? "" : o.Lancado;
                html += "<label> @Resources.Resource.current_value : </label>&nbsp" + currentValue +
                    "<br>" +
                    "<label> @Resources.Resource.new_value : </label>" +
                    "<input type='text' id='inputValor' class='form-control text' value='" + valueText + "' />"
            }
            if (inputTypeId == 13) {
                var valueText = o.Lancado == "" || o.Lancado == "undefined" || o.Lancado == null ? "Sem valor atual" : o.Lancado;
                html += "<label> @Resources.Resource.current_value : </label>&nbsp" + valueText +
                    "<br>" +
                    "<label> @Resources.Resource.new_value : </label>" +
                    "<input type='date' id='inputValor' class='form-control text' value='" + o.Lancado + "' />"
            }
            if (inputTypeId == 14) {
                var valueText = o.Lancado == "" || o.Lancado == "undefined" || o.Lancado == null ? "Sem valor atual" : o.Lancado;
                html += "<label> @Resources.Resource.current_value : </label>&nbsp" + valueText +
                    "<br>" +
                    "<label> @Resources.Resource.new_value : </label>" +
                    "<input type='time' id='inputValor' class='form-control text' value='" + o.Lancado + "' />"
            }
            if (inputTypeId == 1 || inputTypeId == 6) {
                var checkedAttr = o.Conforme == true ? "checked='checked'" : "";
                html += "<br>" +
                        "<label> @Resources.Resource.conform2  </label>&nbsp" +
                        "<input class='.check-box' id='conform' name='conform'  "+ checkedAttr +"  type='checkbox' value='true'><input name='conform' type='hidden' value='false'>" +
                        "<br>";
            }
            if (dataEdit.IsAtiveNa) {
                var naoAvaliado = o.NA == true ? "checked='checked'" : "";
                html += "<br>" +
                        "<label> @Resources.Resource.unvalued  </label>&nbsp" +
                        "<input type='checkbox' id='IsEvaluated' "+ naoAvaliado +" class='.check-box' />";
            }
            html += '</div>';

            return html;
        }

        function SalvarResultLevel3() {

            var dadosResultLevel3 = {};

            dadosResultLevel3["Id"] = $('#ResultLevel3_Id').val();
            dadosResultLevel3["IsNotEvaluate"] = $('#IsEvaluated').is(':checked');

            if ($('#inputValor').length)
                dadosResultLevel3["Value"] = $('#inputValor').val().replace(',', '.');

            if ($('#texto').length) {
                dadosResultLevel3["ValueText"] = $('#texto').val();
            }

            //verifica se o valor inserido é maior que o permitido, se for, a flag isconform fica falsa e salva como nao conforme
            if ((parseFloat($("#intervalMin").text().replace(',', '.')) != NaN
                && parseInt(dadosResultLevel3["Value"]) <= parseInt($("#intervalMax").text().replace(',', '.'))
                && parseInt(dadosResultLevel3["Value"]) >= parseInt($("#intervalMin").text().replace(',', '.')))
                || (parseInt(dadosResultLevel3["Value"]) <= parseInt($("#intervalMax").text().replace(',', '.')))
                || dadosResultLevel3["Value"] == "")
                dadosResultLevel3["IsConform"] = true;
            else
                dadosResultLevel3["IsConform"] = false;

            if (dataEdit.ParLevel3InputType_Id == 1 || dataEdit.ParLevel3InputType_Id == 6)
                dadosResultLevel3["IsConform"] = $('#conform').is(':checked');

            if (dataEdit.ParLevel3InputType_Id == 5) {

                if ($('#texto').val() != "" && $('#texto').val() != null && $('#texto').val() != "undefined") {

                    dadosResultLevel3["IsConform"] = false;

                } else {

                    dadosResultLevel3["IsConform"] = true;
                }
            }

            if (dataEdit.IsNcTextRequired && !dadosResultLevel3["IsConform"] && !dadosResultLevel3["IsNotEvaluate"]) {

                if ($('#texto').val() == "" || $('#texto').val() == null || $('#texto').val() == "undefined") {

                    $('.alertTextIsRequired').removeClass('hide');
                    $('#texto').attr('style', 'border:1px solid red;');
                    return;

                } else {

                    $('.alertTextIsRequired').addClass('hide');
                    $('#texto').attr('style', '');

                }

            } else if (dataEdit.IsNcTextRequired && dadosResultLevel3["IsConform"]) {

                $('.alertTextIsRequired').addClass('hide');
                $('#texto').attr('style', '');

            }

            if (dataEdit.ParLevel3InputType_Id == 11 || dataEdit.ParLevel3InputType_Id == 13 || dataEdit.ParLevel3InputType_Id == 14)
                dadosResultLevel3["IsConform"] = true;

            var selectParReasonEdit = $('select[name="selectParReasonEdit"]:visible').val();
            var textareaParReasonEdit = $('textarea[name="textareaParReasonEdit"]:visible').val();

            dadosResultLevel3["Motivo"] = textareaParReasonEdit;

            $('textarea[name="textareaParReasonEdit"]:visible').attr('style', '');
            $('.alertParReasonEditIsRequired').addClass('hide');

            if (selectParReasonEdit != null && selectParReasonEdit.length <= 0 || textareaParReasonEdit.length < 1) {

                $('.alertParReasonEditIsRequired').removeClass('hide');
                $('textarea[name="textareaParReasonEdit"]:visible').attr('style', 'border:1px solid red;');
                return;

            }

            $.post(urlSave + "/" + @Html.Raw(ViewBag.UserId) + "/" + selectParReasonEdit, dadosResultLevel3, function (r, x, e) {

                $('textarea[name="textareaParReasonEdit"]:visible').val('');
                $("#myModal").modal('hide');
                openMessageModal(Resources('done'), Resources('registry_alter_success'));

            }).fail(function (r, x, e) {

                console.log(r);
                console.log(x);
                console.log(e);
                openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));

            });

        }
    </script>

}