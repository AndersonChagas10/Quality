@model SgqService.ViewModels.FormularioParaRelatorioViewModel
@{
    ViewBag.Title = Resources.Resource.daily_apointments; //"Apontamentos Diarios";
    var url = Url.Action("Index", "Home");
    var urlGet = Url.Action("Get", "api/ApontamentosDiarios");
    var urlEdit = Url.Action("Edit", "api/ApontamentosDiarios");
    var urlSave = Url.Action("Save", "api/ApontamentosDiarios");
    var urlPhotos = Url.Action("Photos", "api/ApontamentosDiarios");
    var urlPhotoPreview = Url.Action("PhotoPreview", "api/ApontamentosDiarios");
    var urlGetCarousel = Url.Action("GetCarousel", "RelatoriosSgq");
    var urlLogTrack = Url.Action("Get", "api/LogTrack");
    var urlLogTrackHeaderField = Url.Action("GetHeaderFieldByResult_Level3", "api/LogTrack");
    
}

<style>
    /*Não quebra a linha nos campos de cabeçalho*/
    #resultsApontamentos > tbody > tr:last-child > td:last-child {
        white-space: nowrap;
    }

    .progress-bar.animate {
        width: 100%;
    }

    .loading-center {
        margin: 100px auto;
        display: table !important;
    }

    .itemHeaderField {
        padding-right: 4px !important;
        padding-left: 4px !important;
        height: 100px;
    }

        .itemHeaderField .labelHeaderField {
            height: 49px;
            display: flex;
            align-items: flex-end;
        }

        .itemHeaderField .labelHeaderFieldIntegracao {
            color: rgb(167, 176, 24);
        }

    .productNamelabel {
        font-size: 10px;
        color: blue;
    }
</style>

<div class="modal fade bd-example-modal-lg" id="modalHeaderField" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:895px!important">
            <div class="modal-header modal-header-gray" style="font-size:14px;font-weight:bold">
                <div class="unitCode"><span id="estName"></span></div>
            </div>
            <div class="modal-body">
                <div id="divMensagemVazio" style="display: none" class="alert alert-info" role="alert">
                    <span id="mensagemVazio" class="icon-info-sign"></span>
                </div>
                <div id="correctiveActionModal" class="modal-padrao" style="margin-left:10px;margin-right:10px;margin-top:15px;">
                    <span id="Level3Name" class="levelName" name="" style=""></span>
                    <div class="container-fluid">
                        <form id="divEdit" class="row"></form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">

                @Html.Partial("~/Views/RelatoriosSgq/_SelectTextAreaEditReason.cshtml")

                <button type="button" data-dismiss="modal" class="btn btn-default non-printable">@Resources.Resource.close</button>
                <button type="button" onclick="SaveHeaderField()" class="btn btn-default non-printable">@Resources.Resource.save</button>
            </div>
        </div>
    </div>
</div>

<div class="page-content-wrapper">
    <div class="page-content">
        @Html.Partial("~/Views/Shared/_FormToQueryFullScreen.cshtml", "")

        <div id="formBodyContent">

            <div id="divClock" style="text-align:right; width:500px; margin-top:-50px; float:right; display: inline; height:30px; line-height:45px; font-size:small; font-weight:bold;">
                <button type="button" class="btn btn-primary" id="btnSend" onclick="Send();">@Resources.Resource.refresh</button>
            </div>

            @Html.Partial("~/Views/Shared/_mensagemObrigatorio.cshtml")
            @Html.Partial("~/Views/RelatoriosSgq/_ResultLevel3Edit.cshtml")
            @Html.Partial("~/Views/RelatoriosSgq/_Image.cshtml")
            @Html.Partial("~/Views/RelatoriosSgq/_LogTrackHistory.cshtml")

            <div id="load"></div>
            <div id="divTable">
                <table id="resultsApontamentos" class="table table-striped"></table>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">

        $('button').button({ loadingText: '@Resources.Resource.loading...' });

        var urlGet = '@Html.Raw(@urlGet)';
        var urlEdit = '@Html.Raw(@urlEdit)';
        var urlSave = '@Html.Raw(@urlSave)';
        var urlPhotos = '@Html.Raw(urlPhotos)';
        var urlPhotoPreview = '@Html.Raw(urlPhotoPreview)';
        var urlGetCarousel = '@Html.Raw(urlGetCarousel)';
        var urlLogTrack = '@Html.Raw(urlLogTrack)';
        var urlLogTrackHeaderField = '@Html.Raw(urlLogTrackHeaderField)';
        var $btn = $('#btnSend');
        var RoleUser = @Html.Raw(Json.Encode(ViewBag.Roles));
        var urlEditCabecalho = '@Html.Raw(Url.Action("EditCabecalho", "api/ApontamentosDiarios"))';
        var urlSaveHeaderField = '@Html.Raw(Url.Action("SaveCabecalho", "api/ApontamentosDiarios"))';
        var listaProdutosJson = @Html.Raw(Json.Encode(ViewBag.Produtos));

        $('#simpleCallendar').hide().attr('disabled', true);

        $(document).ready(function () {

            closeLeftSidebar();

            $("#btnSend").click(function (e) {
                $('#unitId').change();
                Send(true);
            });
        });

        function Send(toggle) {
            $btn.button('loading');
            $('#resultsApontamentos').empty();

            if (!ValidaDadosParaEnvio()) {
                $btn.button('reset');
                return;
            }

            $('#divTable').hide();

            enviar["auditorId"] = GetUsuarioId();

            EasyAjax(urlGet, enviar, GerarTabela, "load", toggle);//AJAX
        };

        function GerarTabela(retornoArray) {

            if(retornoArray.length == 0){
                GuardJs.exibirMensagemAlerta(@Html.Raw(Json.Encode(Resources.Resource.no_appointments_in_this_period)))
            }

            else {

                //Regra para habilitar o botão de edição somente para quem contiver as roles 366 e 346 e Admin
                var regraEdit = false;

                var roles = $.grep(getCookie('webControlCookie'), function (a, b) {
                    return a.indexOf('roles') != -1;
                })[0].split('=')[1].split(',');

                var role = roles.find(function(e) {
                    return e === 'Admin';
                });

                if (RoleUser.indexOf("366") >= 0 || RoleUser.indexOf("346") >= 0 || RoleUser.indexOf("1885") >= 0 || role == 'Admin') {
                    regraEdit = true ;
                }else{
                    regraEdit = false;
                }

                //Fim Regra
                var Tipo1 = {};
                var Tipo2 = {};

                if(retornoArray[0].HashKey == 1 || retornoArray[0].HashKey == 5){

                    Tipo1 = { title: "@Resources.Resource.sequential", mData: "Sequencial" };
                    Tipo2 = { title: "@Resources.Resource.side_banda", mData: "Banda" };
                }else{
                    Tipo1 = { title: "@Resources.Resource.evaluation", mData: "Avaliacao" };
                    Tipo2 = { title: "@Resources.Resource.sample", mData: "Amostra" };
                }

                $('#divTable').show();

                var colunas =
                    [
                        {
                            title: "@Resources.Resource.edit", mData: null, mRender: function (data, type, full) {
                                if (data.ParLevel3InputType_Id == 11) {
                                    return '<button class="btn btn-link custom-button" disabled style="cursor: not-allowed;">' + "@Resources.Resource.edit" + '</button>';
                                } else {
                                    return '<button id="edit" data-ParLevel3InputType_Id="' + data.ParLevel3InputType_Id + '" class="btn btn-link custom-button" data-toggle="modal" data-target="#myModal">' + "@Resources.Resource.edit" + '</button>';
                                }
                            }, "visible": regraEdit
                        },

                        { title: "@Resources.Resource.edit_header", mData: null, defaultContent: '<button id="editHeader" class="btn btn-link custom-button" data-toggle="modal" data-target="#modalHeaderField">' + "@Resources.Resource.edit_header" + '</button>', "visible": regraEdit },


                        { title: "@Resources.Resource.unit", mData: "Unidade" },
                        { title: "@Resources.Resource.cluster", mData: "Processo" },
                        { title: "@Resources.Resource.shift", mData: "Turno" },
                        { title: "@Resources.Resource.period", mData: "Periodo" },
                        { title: "@Resources.Resource.auditor", mData: "Auditor" },
                        { title: "@Resources.Resource.date", mData: "_Data" },
                        { title: "@Resources.Resource.time", mData: "_Hora" },
                        { title: "@Resources.Resource.audit", mData: "Indicador" },
                        { title: "@Resources.Resource.monitoring", mData: "Monitoramento" },
                        { title: "@Resources.Resource.task", mData: "Tarefa" },
                        { title: "@Resources.Resource.weight", mData: "Peso" },
                        {
                            title: "@Resources.Resource.min_interval", mData: "IntervaloMinimo", mRender: function (data, type, full) {

                                if (isNaN(parseFloat(data))) {

                                    return data;

                                } else {

                                    return data.toString().match(/^-?\d+(\.\d{1,2})?/g)[0];
                                }

                            }
                        },
                        {
                            title: "@Resources.Resource.max_interval ", mData: "IntervaloMaximo", mRender: function (data, type, full) {

                                if (isNaN(parseFloat(data))) {

                                    return data;

                                } else {

                                    return data.toString().match(/^-?\d+(\.\d{1,2})?/g)[0];
                                }

                            }
                        },
                        { title: "@Resources.Resource.value", mData: "Lancado" },
                        { title: "@Resources.Resource.deviation ?", mData: "_Conforme" },
                        { title: "@Resources.Resource.na ?", mData: "_NA" },
                        { title: "@Resources.Resource.weighted_ev", mData: "AV_Peso" },
                        { title: "@Resources.Resource.weighted_defects", mData: "NC_Peso" },
                        { title: "@Resources.Resource.valueText", mData: "ValueText" },
                        Tipo1,
                        Tipo2,
                        { title: "@Resources.Resource.header_fields", mData: "HeaderFieldList", "width": "50%" },
                        { title: "@Resources.Resource.platform", mData: "Platform", "width": "50%" },
                        { title: "@Resources.Resource.add_date", mData: "_AddDate", "width": "50%" },
                        {
                            title: "@Resources.Resource.type ", mData: "Type", mRender: function (data, type, full) {

                                if (data == "2") {
                                    return '@Resources.Resource.retroactive';
                                } else if (data == "3") {
                                    return '@Resources.Resource.anticipated';
                                } else if (data == "4") {
                                    return '@Resources.Resource.import';
                                } else if (data == '1') {
                                    return '@Resources.Resource.edited';
                                } else {
                                    return '@Resources.Resource.normal';
                                }
                            }
                        },
                        {
                            title: "@Resources.Resource.reason_type", mData: "ParReasonType", mRender: function (data, type, full) {

                                return data;
                                @*if (data == 0) {
                                    return '@Resources.Resource.no'
                                } else {
                                    return '@Resources.Resource.yes'
                                }*@

                            }
                        },
                        { title: "@Resources.Resource.reason", mData: "ParReason", "width": "50%" },
                        {

                            title: "Histórico Resultado", mData: null, mRender: function (data, type, full) {
                                return full.HasHistoryResult_Level3 ?
                                    '<button class="btn btn-info btn-sm" id="viewHistory" class="btn btn-link custom-button" height="60" style="width:80px;"  data-toggle="modal" data-target="#modalLogTrackHistory">' + "Visualizar" + '</button>'
                                    :
                                    '<button class="btn btn-default btn-sm" disabled="" title="Não há edições" style="width:80px;">-</button>';
                            }
                        },
                        {

                            title: "Histórico Cabeçalho", mData: null, mRender: function (data, type, full) {
                                return full.HasHistoryHeaderField ?
                                    '<button class="btn btn-info btn-sm" id="viewHeaderFieldHistory" class="btn btn-link custom-button" height="60" style="width:80px;"  data-toggle="modal" data-target="#modalLogTrackHistory">' + "Visualizar" + '</button>'
                                    :
                                    '<button class="btn btn-default btn-sm" disabled="" title="Não há edições" style="width:80px;">-</button>';
                            }
                        },
                        {
                            title: "@Resources.Resource.photo", mData: "ResultLevel3Id", "width": "50%", mRender: function (data, type, full) {
                                return full.HasPhoto ?
        "<button class='btn btn-info btn-sm' data-toggle='modal' data-target='#imageModal' data-photo='"+data+"' height='60' id='imgResult" + data +"' style='width:50px;'>@Resources.Resource.photo</button>"
                                    :
                                    '<button class="btn btn-default btn-sm" disabled="" title="Não há fotos para esta tarefa" style="width:50px;">Vazio</button>';
                            }
                        }
                    ];

                var initDatatable = function () {

                    $('#loading').hide();
                    setTimeout(function (e) {
                        var oTable = $('#resultsApontamentos').dataTable();
                        if (oTable.length > 0) {
                            oTable.fnAdjustColumnSizing();
                        }
                    }, 100);

                    $('#resultsApontamentos tbody').on('click', 'button#edit', function (data) {

                        var data = table.row($(this).parents('tr')).data();

                        $.post(urlEdit + "/" + data.ResultLevel3Id, function (r) {

                            if (r != null) {
                                $('#myModal #estName').html(data.Unidade + " > " + data.Indicador + " > " + data.Monitoramento + " > " + data.Tarefa);
                                $('#myModal #ResultLevel3_Id').val(r.Id);

                                $('#myModal #changeConform').empty();
                                $('#myModal #changeConform').append($(r.showGeneric));
                                $("#botaoSalvar").show();
                                InitiMasksDefaults();
                            } else {
                                $('#myModal #changeConform').empty();
                                $('#myModal #estName').html(data.Unidade + " > " + data.Indicador + " > " + data.Monitoramento + " > " + data.Tarefa);
                                $("#myModal #Level3Name").append("<div class='alert alert-warning' id='mensagemErro'>O item selecionado possui vínculos de resultado. A edição esta desabilitada.</div>");
                                $("#botaoSalvar").hide();

                            }
                        })
                    });

                    $('#resultsApontamentos tbody').on('click', 'button#viewHistory', function (data) {

                        var data = table.row($(this).parents('tr')).data();

                        var tableHead = $('#modalLogTrackHistory .modal-body table thead');
                        var tableBody = $('#modalLogTrackHistory .modal-body table tbody');

                        $(tableHead).html('');
                        $(tableBody).html('');

                        $.get(urlLogTrack + "/Result_Level3/" + data.ResultLevel3Id, function (r) {

                            var htmlHead = "<tr>";
                            htmlHead += "<th>-</th>";
                            htmlHead += "<th>Data Alteração</th>";
                            htmlHead += "<th>Quem</th>";
                            htmlHead += "<th>Valor</th>";
                            htmlHead += "<th>Valor do Texto</th>";
                            htmlHead += "<th>Está conforme?</th>";
                            htmlHead += "<th>Não avaliado</th>";
                            htmlHead += "<th>Tipo Motivo</th>";
                            htmlHead += "<th>Motivo</th>";
                            htmlHead += "</tr>";

                            var htmlBody = "";
                            var quantidadeNaLista = r.length;
                            r.splice(0, 0, r[r.length - 1]);
                            r = r.slice(0, -1);
                            $.each(r, function (i, o) {
                                
                                if (i == 0) {
                                    htmlBody += "<tr style='background-color:#ddd;' title='Original'>";
                                    htmlBody += "<td>Original</td>";
                                } else {
                                    htmlBody += "<tr>";
                                    htmlBody += "<td>Edição "+(quantidadeNaLista-i)+"</td>";
                                }

                                htmlBody += "<td>"+o.addDate+"</td>";
                                htmlBody += "<td>"+o.userSgq_FullName+"</td>";
                                htmlBody += "<td>"+o.obj.Value+"</td>";
                                htmlBody += "<td>"+(o.obj.ValueText == 'null' || o.obj.ValueText == 'undefined' ? "" : o.obj.ValueText)+"</td>";
                                htmlBody += "<td>"+(o.obj.IsConform ? "SIM" : "NÃO")+"</td>";
                                htmlBody += "<td>"+(o.obj.IsNotEvaluate ? "SIM" : "NÃO")+"</td>";
                                htmlBody += "<td>"+o.parReason+"</td>";
                                htmlBody += "<td>"+o.motivo+"</td>";
                                htmlBody += "</tr>";
                            });

                            $(tableHead).html(htmlHead);
                            $(tableBody).html(htmlBody);


                        })
                    });

                    $('#resultsApontamentos tbody').on('click', 'button#viewHeaderFieldHistory', function (data) {

                        var data = table.row($(this).parents('tr')).data();

                        var tableHead = $('#modalLogTrackHistory .modal-body table thead');
                        var tableBody = $('#modalLogTrackHistory .modal-body table tbody');

                        $(tableHead).html('');
                        $(tableBody).html('');

                        $.get(urlLogTrackHeaderField + "/" + data.ResultLevel3Id, function (r) {

                            var htmlHead = "<tr>";
                            htmlHead += "<th>Data Alteração</th>";
                            htmlHead += "<th>Quem</th>";
                            htmlHead += "<th>Nome Cabeçalho</th>";
                            htmlHead += "<th>Valor</th>";
                            htmlHead += "<th>Tipo Motivo</th>";
                            htmlHead += "<th>Motivo</th>";
                            htmlHead += "</tr>";

                            var htmlBody = "";
                            $.each(r, function (i, o){
                                htmlBody += "<tr>";
                                htmlBody += "<td>"+o.addDate+"</td>";
                                htmlBody += "<td>"+o.userSgq_FullName+"</td>";
                                htmlBody += "<td>"+o.obj.ParHeaderField_Name+"</td>";
                                htmlBody += "<td>"+(!!o.obj.ParHeaderField_ValueName ? o.obj.ParHeaderField_ValueName : o.obj.Value)+"</td>";
                                htmlBody += "<td>"+o.parReason+"</td>";
                                htmlBody += "<td>"+o.motivo+"</td>";
                                htmlBody += "</tr>";
                            });

                            $(tableHead).html(htmlHead);
                            $(tableBody).html(htmlBody);


                        })
                    });

                    $('#myModal').on('hidden.bs.modal', function () {
                        $("#myModal #mensagemErro").remove();
                    })

                    $('#myModal, #modalHeaderField').on('hidden.bs.modal', function () {
                        $('select[name="selectParReasonEdit"]').removeClass('btn-danger');
                        $('textarea[name="textareaParReasonEdit"]').removeClass('btn-danger');
                    })
                    //$("#botaoFecharModal").on('click', function () {
                    //    $("#myModal #mensagemErro").remove();
                    //});

                    $('#resultsApontamentos tbody').on('click', 'button#editHeader', function (data) {

                        var data = table.row($(this).parents('tr')).data();

                        escondeMensagemVazio();

                        $.post(urlEditCabecalho + "/" + data.ResultLevel3Id, function (r) {

                            $('#divEdit').empty();

                            $('modalHeaderField #estName').html("");

                            r = JSON.parse(r);

                            if (r.length > 0) {

                                r.forEach(function (o) {

                                    let html = "";
                                    switch (o.HeaderField.ParFieldType_Id) {
                                        case 1:
                                            html =
                                                `<div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                <div class="form-group header" name="" style="margin-bottom: 4px;">
                                                    <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                    <select class="form-control input-sm ddl" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" idpai="0" linknumberevaluetion="false" IsRequired="${o.HeaderField.IsRequired}">
                                                        <option value="">Selecione...</option>`

                                            if (o.Values) {

                                                o.Values.forEach(function (oo) {

                                                    let selected = '';

                                                    if (oo.Id == o.ValueSelected)
                                                        selected = 'selected="selected"';

                                                    html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';
                                                });

                                            }

                                            html += `</select> <label class="">
                                                    </label>
                                                </div>
                                            </div>`;
                                            break;

                                        case 2:

                                            if (o.HeaderField.Description == "Produto") {

                                                if (o.ValueSelected == null)
                                                    o.ValueSelected = "";

                                                html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                        <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                            <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                            <input class="form-control input-sm produto" type="number" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderField.IsRequired}" onkeyup="buscarProduto(this, $(this).val());" onchange="validaProduto(this, $(this).val());" onmouseup="buscarProduto(this, $(this).val());">
                                                            <label class="productNamelabel" title=""></label>
                                                        </div>
                                                    </div>`;

                                            } else {

                                                html =
                                                    `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                        <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                            <label class="font-small labelHeaderField labelHeaderFieldIntegracao">${o.HeaderField.Name}</label>
                                                            <select class="form-control input-sm " CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" linknumberevaluetion="true" style="border: 1px solid rgb(167, 176, 24);" IsRequired="${o.HeaderField.IsRequired}">
                                                                <option value="">Selecione...</option>`

                                                if (o.Values) {

                                                    o.Values.forEach(function (oo) {

                                                        let selected = '';

                                                        if (oo.Id == o.ValueSelected)
                                                            selected = 'selected="selected"';

                                                        html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';
                                                    });
                                                }

                                                html += `</select>
                                                        </div>
                                                    </div>`;
                                            }

                                            break;
                                        case 3:

                                            html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                      <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                        <select class="form-control input-sm" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParHeaderField_Name="${o.HeaderField.Id}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" linknumberevaluetion="false" IsRequired="${o.HeaderField.IsRequired}">`;

                                            if (o.Values) {

                                                o.Values.forEach(function (oo) {

                                                    let selected = '';

                                                    if (oo.Id == o.ValueSelected)
                                                        selected = 'selected="selected"';

                                                    html += '<option value="' + oo.Id + '" punishmentvalue="' + oo.PunishmentValue + '" ' + selected + '>' + oo.Name + '</option>';

                                                });

                                            }

                                            html += `</select>
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                            break;
                                        case 4:

                                            if (o.ValueSelected == null)
                                                o.ValueSelected = "";

                                            html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                        <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                            <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                            <input class="form-control input-sm" type="text" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderField.IsRequired}">
                                                            <label class=""></label>
                                                        </div>
                                                    </div>`;

                                            break;

                                        case 5:

                                            if (o.ValueSelected == null)
                                                o.ValueSelected = "";

                                            html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                        <input class="form-control input-sm" type="number" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderField.IsRequired}">
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                            break;

                                        case 6:

                                            if (o.ValueSelected == null)
                                                o.ValueSelected = "";

                                            html = `<div class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div class="form-group" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                            <input class="form-control input-sm" type="date" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderField.IsRequired}">
                                                            <label class=""></label>
                                                        </div>
                                                    </div>`;
                                            break;

                                        case 7:

                                            if (o.ValueSelected == null)
                                                o.ValueSelected = "";

                                            html = `<div id="" class="col-xs-6 col-sm-4 col-md-3 col-lg-3 itemHeaderField" name="">
                                                    <div id="" class="form-group header" name="" style="margin-bottom: 4px;">
                                                        <label class="font-small labelHeaderField">${o.HeaderField.Name}</label>
                                                        <input class="form-control input-sm" type="time" CollectionLevel2XParHeaderField_Id="${o.CollectionLevel2XParHeaderField_Id}" CollectionLevel2_Id="${o.CollectionLevel2.Id}" ParHeaderField_Id="${o.HeaderField.Id}" ParHeaderField_Name="${o.HeaderField.Name}" ParFieldType_Id="${o.HeaderField.ParFieldType_Id}" value="${o.ValueSelected}" Evaluation="${o.CollectionLevel2.EvaluationNumber}" Sample="${o.CollectionLevel2.Sample}" IsRequired="${o.HeaderField.IsRequired}">
                                                        <label class=""></label>
                                                    </div>
                                                </div>`;

                                            break;

                                        default:
                                    }

                                    $('#modalHeaderField #estName').html(data.Unidade + " > " + data.Indicador + " > " + data.Monitoramento);

                                    $('#divEdit').append(html);

                                    $('.produto').trigger('onkeyup');

                                });
                            } else {
                                exibeMensagemVazio(Resources('no_data_to_show'));
                            }
                        });
                    });
                }

                var table = datatableGRT.Inicializar({
                    idTabela: "resultsApontamentos",
                    listaDeDados: retornoArray,
                    colunaDosDados: colunas,
                    numeroLinhasNaTabela: 25,
                    aplicarResponsividade: true,
                    tamanhosDoMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "-"]],
                    loadingRecords: true,
                    destroy: true,
                    info: true,
                    initComplete: initDatatable,
                    createdRow: function (row, data, index)
                    {
                    }
                });
            }

        }

        $('body').on('click','[data-photo]',function(){

            var rl3_id = $(this).attr('data-photo');
            $.get(urlPhotos + "/" + rl3_id, function (photos) {
                if (photos.length > 0) {
                    var _photos = [];
                    $.grep(photos, function (o) {
                        if (o) _photos.push(o.ID);
                        //if (o) _photos.push(o.Photo);
                    });
                    $.get(urlGetCarousel, function (carousel) {
                        $('#imageModal .modal-body').html(carousel);
                        carouselMain.setPicturesBase64(_photos);

                        $('#imageModal .modal-loading, #imageModal .modal-title-loading').addClass('hide');
                        $('#imageModal .modal-body').removeClass('hide');
                        //$('#imageModal .modal-body, #imageModal .modal-title').removeClass('hide');
                    });

                    $('#latitudeModal').text(photos[0].Latitude);
                    $('#longitudeModal').text(photos[0].Longitude);
                }
            });
        });

        function SalvarResultLevel3() {

            var dadosResultLevel3 = {};

            if ($('#sample') != undefined) {

                if ($('#sample').val() > $('#numeroDeDefeitos').val()) {
                    openMessageModal("O numero de defeitos não pode ser maior que o numero avaliado.")
                    return;

                } else {
                    dadosResultLevel3["Value"] = $('#numeroDeDefeitos').val();
                }
            }

            dadosResultLevel3["Id"] = $('#ResultLevel3_Id').val();



            dadosResultLevel3["IsNotEvaluate"] = $('#IsEvaluated').is(':checked');

            if ($('#decimal').length)
                dadosResultLevel3["Value"] = $('#decimal').val() + "x10^" + $('#precisao').val();
            if ($('#numeroDeDefeitos').length)
                dadosResultLevel3["Value"] = $('#numeroDeDefeitos').val();
            if ($('#intervaloValor').length)
                dadosResultLevel3["Value"] = $('#intervaloValor').val();
            if ($('#texto').length){
                dadosResultLevel3["ValueText"] = $('#texto').val();
                if(dadosResultLevel3.ValueText == ""){
                    dadosResultLevel3.IsNotEvaluate = true;
                }
            }

            //verifica se o valor inserido é maior que o permitido, se for, a flag isconform fica falsa e salva como nao conforme
            if (parseInt(dadosResultLevel3["Value"]) <= parseInt($("#intervalMax").text()) && parseInt(dadosResultLevel3["Value"]) >= parseInt($("#intervalMin").text()))
                dadosResultLevel3["IsConform"] = $('#conform').is(':checked');
            else
                dadosResultLevel3["IsConform"] = false;

            if ($("#intervalMax").text() == "" && $("#intervalMin").text() == "")
                dadosResultLevel3["IsConform"] = $('#conform').is(':checked');

            var selectParReasonEdit = $('select[name="selectParReasonEdit"]:visible').val();
            var textareaParReasonEdit = $('textarea[name="textareaParReasonEdit"]:visible').val();
            $('select[name="selectParReasonEdit"]:visible').removeClass('btn-danger');
            $('textarea[name="textareaParReasonEdit"]:visible').removeClass('btn-danger');

            if (selectParReasonEdit.length <= 0 || textareaParReasonEdit.length <= 0) {
                $('select[name="selectParReasonEdit"]:visible').addClass('btn-danger');
                $('textarea[name="textareaParReasonEdit"]:visible').addClass('btn-danger');
                return;
            }

            $.post(urlSave + "/" + @Html.Raw(ViewBag.UserId) + "/" + selectParReasonEdit + "/" + textareaParReasonEdit, dadosResultLevel3, function (r, x, e) {

                $('textarea[name="textareaParReasonEdit"]:visible').val('');
                $("#myModal").modal('hide');
                openMessageModal(Resources('done'), Resources('registry_alter_success')); //"Feito", "Registro alterado com sucesso. (por favor atualize a tabela de apontamentos diários).");

            }).fail(function (r, x, e) {

                console.log(r);
                console.log(x);
                console.log(e);
                openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));//"Impossível realizar a ação: ", "Não foi possível atualizar o resultado.");

            });

        }

        function ValidaDadosParaEnvio() {

            GuardJs.resetForValidation();
            GuardJs.CheckRangeDateTime(enviar.endDate, enviar.startDate, "Initial date", "End date");

            if (!(parseInt( $('#unitId').val().replace(/\D/g, ''), 10) > 0)) {
                GuardJs.exibirMensagemAlerta("@Resources.Resource.select_the_unit_first");
                return false;
            }

            if (!(parseInt( $('#level1Id').val().replace(/\D/g, ''), 10) > 0)) {
                GuardJs.exibirMensagemAlerta(@Html.Raw(Json.Encode(Resources.Resource.select_the_level1)));
                return false;
            }

            if (!GuardJs.isValid)
                return !GuardJs.isValid;

            GuardJs.esconderMensagem();
            return true;
        }

        $(document).ready(function () {

            formControl.showFullCallendar();
            formControl.showUnit();
            formControl.showLevel1();
            formControl.showShift();

            closeLeftSidebar();
            $(".sidebar-toggler").removeClass("hide");
            $(".page-sidebar-wrapper").removeClass("hide");
            $('button.refresh-btn-right-top').removeClass("hide");

            //Remove o "Todos" da Unidade
            $("#unitId option[value='']").remove();
        });

        function SaveHeaderField() {

            let objToSave = [];
            let isValid = false;

            $('form#divEdit input, form#divEdit select').each(function (i, o) {

                let CollectionLevel2XParHeaderField_Id = $(o).attr("CollectionLevel2XParHeaderField_Id");
                let CollectionLevel2_Id = $(o).attr("CollectionLevel2_Id");
                let ParHeaderField_Id = $(o).attr("ParHeaderField_Id");
                let ParHeaderField_Name = $(o).attr("ParHeaderField_Name");
                let ParFieldType_Id = $(o).attr("ParFieldType_Id");
                let Evaluation = $(o).attr("Evaluation");
                let Sample = $(o).attr("Sample");
                let Value = $(o).val();
                let IsRequired = JSON.parse($(o).attr("IsRequired"));

                $(o).css("background-color", "");

                if (IsRequired && !Value) {
                    $(o).focus();
                    $(o).css("background", "#ffb7b7");
                    isValid = false;
                    return false;
                }

                objToSave.push({
                    "Id": CollectionLevel2XParHeaderField_Id,
                    "CollectionLevel2_Id": CollectionLevel2_Id,
                    "ParHeaderField_Id": ParHeaderField_Id,
                    "ParHeaderField_Name": ParHeaderField_Name,
                    "ParFieldType_Id": ParFieldType_Id,
                    "Evaluation": Evaluation,
                    "Sample": Sample,
                    "Value": Value
                });

                isValid = true;

            });

            if (isValid) {

                var selectParReasonEdit = $('select[name="selectParReasonEdit"]:visible').val();
                var textareaParReasonEdit = $('textarea[name="textareaParReasonEdit"]:visible').val();
                $('select[name="selectParReasonEdit"]:visible').removeClass('btn-danger');
                $('textarea[name="textareaParReasonEdit"]:visible').removeClass('btn-danger');

                if (selectParReasonEdit.length <= 0 || textareaParReasonEdit.length <= 0) {
                    $('select[name="selectParReasonEdit"]:visible').addClass('btn-danger');
                    $('textarea[name="textareaParReasonEdit"]:visible').addClass('btn-danger');
                    return;
                }

                $.post(urlSaveHeaderField,
                    {
                        "HeaderField": objToSave,
                        "UserSgq_Id": @Html.Raw(ViewBag.UserId),
                        "ParReason_Id": selectParReasonEdit,
                        "Motivo": textareaParReasonEdit
                    },
                    function (IsSaved) {

                    if (IsSaved) {

                        $('textarea[name="textareaParReasonEdit"]:visible').val('');
                        openMessageModal(Resources('done'), Resources('registry_alter_success'));
                        $('#modalHeaderField').modal('hide');

                    } else {
                        openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));
                    }

                }).fail(function (r, x, e) {
                    console.log(r);
                    console.log(x);
                    console.log(e);
                    openMessageModal(Resources('impossible_refresh_result'), Resources('impossible_refresh_result'));
                });
            }
        }

        function exibeMensagemVazio(mensagem) {
            $('#divMensagemVazio').show();
            $('#mensagemVazio').html(mensagem);
        }

        function escondeMensagemVazio() {
            $('#divMensagemVazio').hide();
            $('#mensagemVazio').html();
        }

        function buscarProduto(a, valor) {

            for (var j = 0; j < listaProdutosJson.length; j++) {
                if (listaProdutosJson[j].id == valor) {

                    $(a).next().html(listaProdutosJson[j].nome.substring(0, 24));
                    $(a).next().prop('title', listaProdutosJson[j].nome);

                    return;
                }
            }

            $(a).next().html('');
            $(a).next().prop('title', '');
        }

        function validaProduto(a, valor) {

            for (var j = 0; j < listaProdutosJson.length; j++) {
                if (listaProdutosJson[j].id == valor) {
                    return;
                }
            }

            $(a).val('');
        }

    </script>

}
