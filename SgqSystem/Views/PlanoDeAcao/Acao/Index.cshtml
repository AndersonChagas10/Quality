@model SgqService.ViewModels.FormularioParaRelatorioViewModel
@{
    ViewBag.Title = "Listagem de ações";

    Layout = "~\\Views\\RelatoriosSgq\\_FilterReportsHorizontal.cshtml";


    ViewBag.ShowRangeDate = true;
    ViewBag.ShowParStructure2 = true;
    ViewBag.ShowParStructure3PlanoDeAcao = true;
    ViewBag.ShowParCompany = true;
    ViewBag.ShowParClusterGroupPlanoDeAcao = true;
    ViewBag.ShowParClusterPlanoDeAcao = true;
    ViewBag.ShowParLevel1 = true;

    ViewBag.ShowCurrentDate = false;
    ViewBag.ShowParLevel2GQ = false;
    ViewBag.ShowUserSgqAuditor = false;
    ViewBag.ShowParLevel2 = false;
    ViewBag.ShowParDepartment = false;
    ViewBag.ShowUserCompanies = false;

    var userToken = ViewBag.UserToken;
}

@section Content{
    <style>
        table#tabelaDeResultados tr:hover {
            background: #ff6a0099 !important;
        }

        .selected {
            border: #2f353b 2px solid !important;
        }

        span.select2-container--open {
            z-index: 11000;
        }

        .required:before {
            content: " *";
            color: red;
        }
    </style>

    <div class="modal fade" id="modalPrint" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div id="cabecalhoDiv" class="modal-header modal-header-gray" style="font-size:14px;font-weight:bold">
                    <h3 style="font-weight: bold;">Ação</h3>
                </div>
                <div class="col-xs-12">
                    <ul class="nav nav-tabs">
                        <li class="visualizacao active">
                            <a href="#acao_visualizacao" data-toggle="tab" id="tabAcaoVisualizacao">
                                Visualizar
                            </a>
                        </li>
                        <li class="log">
                            <a href="#acao_log" data-toggle="tab" id="tabAcaoLog">
                                Logs
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="col-xs-12">
                    <div class="tab-content">
                        <div class="tab-pane active" id="acao_visualizacao">
                            <form id="formAcaoPrint" style="background-color: #c3c3c3 !important;-webkit-print-color-adjust: exact !important;">
                                <div id="formBodyPrint" class="modal-body">
                                    <input type="hidden" name="Id" />
                                    <input type="hidden" id="statusPrint" name="Status" />
                                    <div class="row">
                                        <div class="col-xs-12" style="margin: 10px 0;">
                                            <strong>Código da Ação:</strong>
                                            <label id="CodigoAcaoPrint"></label>
                                        </div>
                                        <div class="col-xs-3" style="margin: 10px 0;">
                                            <strong>Data Emissão:</strong>
                                            <label id="dataEmissaoPrint"></label>
                                        </div>
                                        <div class="col-xs-3" style="margin: 10px 0;">
                                            <strong>Hora Emissão:</strong>
                                            <label id="horaEmissaoPrint"></label>
                                        </div>
                                        <div class="col-xs-3" style="margin: 10px 0;">
                                            <strong>Emissor:</strong>
                                            <label id="usuarioEmissorPrint"></label>
                                        </div>
                                        <div class="col-sm-12">
                                            <div style="margin: 10px 0;">
                                                <strong>Unidade: </strong><label id="actionParCompany_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Centro de Custo/Setor: </strong><label id="actionParDepartment_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Seção/Atividade: </strong><label id="actionParDepartmentParent_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Item/Tarefa: </strong><label id="actionParCargo_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Indicador/Origem: </strong><label id="actionParLevel1_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Monitoramento: </strong><label id="actionParLevel2_IdPrint"></label>
                                                <br>
                                            </div>
                                            <div style="margin: 10px 0;">
                                                <strong>Desvio/Medida de Controle: </strong><label id="actionParLevel3_IdPrint"></label>
                                            </div>
                                        </div>

                                        <div class="col-sm-12" style="margin: 10px 0;">
                                            <div class="form-group">
                                                <label for="txtAcao_Naoconformidade"><strong>Não Conformidade/Ocorrência: </strong></label>
                                                <text id="txtAcao_NaoconformidadePrint" name="Acao_Naoconformidade" class="form-control" style="resize: none; height: 100px;"></text>
                                            </div>
                                        </div>
                                        <div class="col-sm-12" style="margin: 10px 0;">
                                            <div class="form-group">
                                                <label for="txtAcaoText"><strong>Ação: </strong></label>
                                                <text id="txtAcaoTextPrint" name="AcaoText" class="form-control" style="resize: none; height: 100px;"></text>
                                            </div>
                                        </div>

                                        <hr />
                                        <div class="col-xs-12" style="margin: 10px 0;">
                                            <strong>Evidências da Não conformidade: </strong>
                                        </div>

                                        <div class="col-xs-12">
                                            <div id="divEvidencias" class="row">
                                                <div class="fotos"></div>
                                            </div>
                                        </div>
                                        <hr />

                                        <div class="col-xs-12" style="margin: 10px 0;">
                                            <label><strong>Ver e Agir:</strong></label><input type="checkbox" id="checkVerAgir" />
                                        </div>

                                        <div id="evidenciasConcluidasImpressao" class="col-xs-12" hidden="hidden" style="margin: 10px 0;">
                                            <b>Evidencias da Ação Concluida: </b>
                                            <div id="actionsEvidencies">
                                                <div class="fotosConcluidas"></div>
                                            </div>
                                        </div>

                                        <div class="col-xs-4" style="margin: 10px 0;">
                                            <label><strong>Data da conclusão:</strong></label>
                                            <text id="actionConclusionDatePrint" name="DataConclusao" type="date" class="form-control"></text>
                                        </div>

                                        <div class="col-xs-4 vereagir" style="margin: 10px 0;">
                                            <label><strong>Hora da conclusão:</strong></label>
                                            <text id="actionConclusionHourPrint" name="HoraConclusao" type="time" class="form-control"></text>
                                        </div>

                                        <div class="col-xs-4" style="margin: 10px 0;">
                                            <label><strong>Referência:</strong></label>
                                            <text id="actionReferencePrint" name="Referencia" type="text" class="form-control"></text>
                                        </div>

                                        <div class="col-xs-4" style="margin: 10px 0;">
                                            <label><strong>Responsável:</strong></label>
                                            <text id="selectResponsavelPrint" name="Responsavel" class="form-control"></text>
                                        </div>

                                        <div class="col-xs-4 divActionPriority" style="margin: 10px 0;">
                                            <label><strong>Prioridade:</strong></label>
                                            <text id="selectPrioridadePrint" name="Prioridade" class="form-control"></text>
                                        </div>
                                        <div class="col-xs-12" style="margin: 20px 0;">
                                            <label><b>Lista de Notificação:</b></label>
                                            <table id="tableNotificarAcao" class="table table-striped" style="font-size:14px;">
                                                <thead>
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Nome</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                                <div id="rodapeDiv" class="modal-footer">
                                    <button id="btnClosePrint" type="button" data-dismiss="modal" class="btn btn-default non-printable">@Resources.Resource.close</button>
                                    <button id="btnPrint" type="button" class="btn btn-primary" onclick="print()">Imprimir</button>
                                </div>
                            </form>
                        </div>
                        <div class="tab-pane" id="acao_log">
                           <div id="page-form">
                                <div class="panel panel-default">
                                    <div style="margin-top: 5px;">
                                        <h5 style="text-align: center;"><b>Código da Ação: </b><span class="acaoId"></span></h5>
                                    </div>
                                    <div class="panel-heading cabecalho">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <b>Unidade: </b><span class="unidade"></span>
                                            </div>

                                            <div class="col-md-12">
                                                <b>Seção/Atividade: </b><span class="secaoAtividade"></span>
                                            </div>  

                                            <div class="col-md-12">
                                                <b>Item/Tarefa: </b><span class="itemTarefa"></span>
                                            </div>  

                                            <div class="col-md-8">
                                                <b>Centro Custo: </b><span class="centroCusto"></span>
                                            </div> 
                                        </div>
                                    </div>
                                    <div class="panel-body layoutDeLogs">
                                       
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modalEditar" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header modal-header-gray" style="font-size:14px;font-weight:bold">
                    <h3 style="font-weight:bold;">Ação</h3>
                </div>
                <div class="col-xs-12">
                    <ul class="nav nav-tabs">
                        <li class="edicao">
                            <a href="#acao_edicao" data-toggle="tab" id="tabAcaoEdicao">
                                Edição
                            </a>
                        </li>
                        <li class="acompanhamento">
                            <a href="#acao_acompanhamento" data-toggle="tab" id="tabAcaoAcompanhamento">
                                Acompanhamento
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="col-xs-12">
                    <div class="tab-content">
                        <div class="tab-pane active" id="acao_edicao">
                            <form id="formAcao" style="background-color: #c3c3c3 !important;-webkit-print-color-adjust: exact !important;">
                                <div class="modal-body">
                                    <input type="hidden" name="Id" />
                                    <input type="hidden" name="ParCompany_Id" />
                                    <input type="hidden" id="status" name="Status" />
                                    <div class="row">
                                        <div class="col-xs-4">
                                            <strong>Data Emissão:</strong>
                                            <label id="dataEmissao"></label>
                                        </div>
                                        <div class="col-xs-4">
                                            <strong>Hora Emissão:</strong>
                                            <label id="horaEmissao"></label>
                                        </div>
                                        <div class="col-xs-4">
                                            <strong>Emissor:</strong>
                                            <label id="usuarioEmissor"></label>
                                        </div>
                                        <div class="col-sm-12">
                                            <strong>Unidade:</strong><label id="actionParCompany_Id"></label>
                                            <br />
                                            <strong>Centro de Custo/Setor:</strong><label id="actionParDepartment_Id"></label>
                                            <br />
                                            <strong>Seção/Atividade:</strong><label id="actionParDepartmentParent_Id"></label>
                                            <br />
                                            <strong>Item/Tarefa:</strong><label id="actionParCargo_Id"></label>
                                            <br />
                                            <strong>Indicador/Origem:</strong><label id="actionParLevel1_Id"></label>
                                            <br />
                                            <strong>Monitoramento:</strong><label id="actionParLevel2_Id"></label>
                                            <br />
                                            <strong>Desvio/Medida de Controle:</strong><label id="actionParLevel3_Id"></label>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label for="txtAcao_Naoconformidade"><strong>Não Conformidade/Ocorrencia</strong></label>
                                                <textarea id="txtAcao_Naoconformidade" name="Acao_Naoconformidade" class="form-control" style="resize: none; height: 100px;"></textarea>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <label for="txtAcaoText"><strong>Ação</strong></label>
                                                <textarea id="txtAcaoText" name="AcaoText" class="form-control" style="resize: none; height: 100px;"></textarea>
                                            </div>
                                        </div>
                                        <hr />
                                        <div class="col-xs-12">
                                            <strong>Evidencias de Não conformidade</strong>
                                            <input type="file" id="uploadPhoto" onchange="uploadFile(event,'evidencia')" />
                                        </div>
                                        <div class="col-xs-12">
                                            <div id="divEvidencias" class="row">
                                                <div class="fotos"></div>
                                            </div>
                                        </div>
                                        <hr />

                                        <div class="col-xs-12">
                                            <label><strong>Ver e Agir:</strong></label><input type="checkbox" id="checkVerAgir" />
                                        </div>
                                        <div id="evidenciasConcluidasEdicao" class="col-xs-12" hidden="hidden">
                                            <p>Evidencias da Ação Concluida</p>
                                            <input type="file" id="uploadPhotox" onchange="uploadFile(event, 'evidenciaConcluida')" />
                                            <div id="actionsEvidencies">
                                                <div class="fotosConcluidas"></div>
                                            </div>
                                        </div>
                                        <div class="col-xs-4">
                                            <label class="dataConclusao"><strong>Data da conclusão:</strong></label>
                                            <input id="actionConclusionDate" name="DataConclusao" type="date" class="form-control">
                                        </div>
                                        <div class="col-xs-4 vereagir">
                                            <label class="horaConclusao"><strong>Hora da conclusão:</strong></label>
                                            <input id="actionConclusionHour" name="HoraConclusao" type="time" class="form-control">
                                        </div>
                                        <div class="col-xs-4">
                                            <label><strong>Referencia:</strong></label>
                                            <input id="actionReference" name="Referencia" type="text" class="form-control">
                                        </div>
                                        <div class="col-xs-4">
                                            <label class="responsavel"><strong>Responsavel:</strong></label>
                                            <select id="selectResponsavel" name="Responsavel" class="form-control"></select>
                                        </div>
                                        <div class="col-xs-4 divActionPriority">
                                            <label><strong>Prioridade:</strong></label>
                                            <select id="selectPrioridade" name="Prioridade" class="form-control"></select>
                                        </div>
                                        <div class="col-xs-12">
                                            <label><strong>Notificar:</strong></label>
                                            <div class="form-inline">
                                                <select id="selectNotificarAcao" class="form-control" style="width: 260px;"></select>
                                                <button onclick="notificacao.inserirNaListaNotificarAcao();" type="button" class="btn btn-primary">+</button>
                                            </div>
                                        </div>
                                        <div class="col-xs-12">
                                            <table id="tableNotificarAcao" class="table table-striped" style="font-size:14px;">
                                                <thead>
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Nome</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button id="btnClose" type="button" data-dismiss="modal" class="btn btn-default non-printable">@Resources.Resource.close</button>
                                    <button class="btn btn-success" onclick="enviarFormularioEditarAcao('2')">Salvar e iniciar ação</button>
                                    <button class="btn btn-success preencherDepois" onclick="enviarFormularioEditarAcao('1')">Salvar e preencher a ação depois</button>
                                </div>
                        </form>
                        </div>

                        <div class="tab-pane active" id="acao_acompanhamento">
                            <form id="formAcompanhamento">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="col-sm-8">
                                            <div class="col-xs-12">
                                                <div class="form-group">
                                                    <label for="txtAcompanhamento_Observacao"><strong>Observação</strong></label>
                                                    <textarea id="txtAcompanhamento_Observacao" name="Observacao" class="form-control acompanhamento" style="resize: none; height: 100px;"></textarea>
                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                                <label><strong>Notificar:</strong></label>
                                                <div class="form-inline">
                                                    <select id="selectAcompanhamento_Notificar" class="form-control acompanhamento"></select>
                                                    <button onclick="acompanhamento.inserirNaListaNotificar();" type="button" class="btn btn-primary acompanhamento">+</button>
                                                </div>
                                            </div>
                                            <div class="col-xs-12">
                                                <table id="tableAcompanhamento_Notificar" class="table table-striped" style="font-size:14px;">
                                                    <thead>
                                                        <tr>
                                                            <th>Id</th>
                                                            <th>Nome</th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                            <div class="col-xs-12">
                                                <b>Evidencias do Acompanhamento</b>
                                                <input type="file" id="anexarEvidenciaAcompanhamento" onchange="uploadFile(event,'evidenciaAcompanhamento')" />
                                            </div>
                                            <div class="col-xs-12">
                                                <div class="row">
                                                    <div class="evidenciasAcompanhamento"></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-4">
                                            <div class="form-group">
                                                <label for="txtAcompanhamento_Status"><strong>Status</strong></label>
                                                <select id="txtAcompanhamento_Status" name="Status" class="form-control acompanhamento">
                                                
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <button type="button" class="btn btn-success acompanhamento" onclick="acompanhamento.salvarAcompanhamento()">Salvar</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>

                            <div class="col-sm-12" id="Acompanhamento_Listagem">
                            </div>

                            <div class="modal-footer">
                                <button id="btnClose" type="button" data-dismiss="modal" class="btn btn-default non-printable">@Resources.Resource.close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="clearfix"></div>
            </div>
        </div>
    </div>

<div class="modal fade" id="modalNovaAcao" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header modal-header-gray" style="font-size:14px;font-weight:bold">
                <h3 style="font-weight:bold;">Nova Ação</h3>
            </div>

            <div class="col-xs-12 ">
                <div class="tab-content">
                    <div class="tab-pane active" id="acao_NovaAcao">
                        <form id="formNovaAcao"  >
                            <div class="modal-body"> 
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="col-sm-6">
                                            <div class="form-group" style="margin-bottom:0" data-filtroselect3>
                                                <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                    <label><strong>@Resources.Resource.unit:</strong></label>
                                                    <button type="button"
                                                            data-filtroselect3-btn
                                                            data-filtroselect3-select="#modalNovaAcao select[name=parCompany_Ids]"
                                                            data-filtroselect3-url="@Url.Action("GetUnityByCurrentUser", "api/AcaoApi")"
                                                            data-filtroselect3-default-select="@ViewBag.ShowParCompanyDefault"
                                                            data-filtroselect3-custom-filter="planoDeAcao">
                                                        Abrir
                                                    </button>
                                                </div>
                                                <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                    <select id="selectUnidade" class="form-control " name="parCompany_Ids" style="width:100%;"></select>
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>
                                        <div id="divCentroCusto" class="col-sm-6" hidden>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>Centro de Custo:</strong></label>
                                                <button type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parDepartment_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParDepartment", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParDepartmentDefault"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select id="selectCentroCusto" class="form-control" name="parDepartment_Ids" style="width:100%;">
                                                    @if (ViewBag.ShowParDepartmentDefault != null)
                                                    {
                                                        <option value="">@ViewBag.ShowParDepartmentDefault</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        <div id="divSecaoAtividade" class="col-sm-6" hidden>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>Seção/Atividade:</strong></label>
                                                <button type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parSecao_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParDepartmentFilho", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParSecaoDefault"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select id="selectSecaoAtividade" class="form-control" name="parSecao_Ids" style="width:100%;"></select>
                                            </div>
                                        </div> 
                                        <div id="divItemCargo" class="col-sm-6" hidden>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>Item/Tarefa</strong></label>
                                                <button type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parCargo_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParCargo", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParCargoDefault"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select id="selectItemCargo" class="form-control" name="parCargo_Ids" style="width:100%;"></select>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>Indicador/Origem:</strong></label>
                                                <button type="button" data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parLevel1_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParLevel1", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParLevel2Default"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select id="selectIndicador" class="form-control" name="parLevel1_Ids" style="width:100%;"></select>
                                            </div>
                                        </div>
                                        <div id="divMonitoramento" class="col-sm-6" hidden>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>@Resources.Resource.level2:</strong></label>
                                                <button type="button" data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parLevel2_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParLevel2", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParLevel2Default"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select id="selectMonitoramento" class="form-control" name="parLevel2_Ids" style="width:100%;"></select>
                                            </div>
                                        </div>
                                        <div id="divDesvioTarefa" class="col-sm-6" hidden>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <label><strong>Desvio/Tarefa:</strong></label>
                                                <button type="button" data-filtroselect3-btn
                                                        data-filtroselect3-select="#modalNovaAcao select[name=parLevel3_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParLevel3", "api/Formulario")"
                                                        data-filtroselect3-default-select="@ViewBag.ShowParLevel3Default"
                                                        data-filtroselect3-custom-filter="planoDeAcao">
                                                    Abrir
                                                </button>
                                            </div>
                                            <div class="col-sm-12 p-0" style="padding-left:0px;">
                                                <select class="form-control" name="parLevel3_Ids" style="width:100%;"></select>
                                            </div>
                                        </div> 
                                    </div>
                                    <hr />
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label for="txtNovaAcao_Naoconformidade"><strong>Não Conformidade/Ocorrencia</strong></label>
                                            <textarea id="txtNovaAcao_Naoconformidade" name="NovaAcao_Naoconformidade" class="form-control" style="resize: none; height: 100px;"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label for="txtNovaAcaoText"><strong>Ação</strong></label>
                                            <textarea id="txtNovaAcaoText" name="NovaAcaoText" class="form-control" style="resize: none; height: 100px;"></textarea>
                                        </div>
                                    </div>
                                    <hr /> 
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button id="btnCloseNovaAcao" type="button" data-dismiss="modal" class="btn btn-default non-printable">@Resources.Resource.close</button>

                                @*<button id="btnSave" type="submit" class="btn btn-primary non-printable">@Resources.Resource.save</button>*@

                                <button class="btn btn-success" onclick="salvarNovaAcao('1')">Próximo</button>
                            </div>
                        </form>
                    </div> 
                </div>
            </div>

            <div class="clearfix"></div>
        </div>
    </div>
</div>

<div class="page-content-wrapper">
    <div class="page-content">

            <div class="caption">
                <i class="icon-share font-dark"></i>
                <h4 class="text-center"><strong>Workflow de Ações</strong></h4>
            </div>
            <div class="col-md-12 col-xs-12 col-sm-6" style="text-align: left;">
                <button id="btnNovaAcao" onclick="abrirNovaAcao()" class="btn btn-primary">Nova Ação <text></text></button> 
            </div>
            <div class="col-md-12 col-xs-12 col-sm-6 filtros" style="text-align: center; margin: 30px 0;">
                <button type="button" id="btnPendente" onclick="status.obterAcoesPorStatus('1')" class="btn btn-danger">Pendente <text></text></button>
                <button type="button" id="btnAndamento" onclick="status.obterAcoesPorStatus('2')" class="btn btn-info">Em Andamento <text></text></button>
                <button type="button" id="btnConcluida" onclick="status.obterAcoesPorStatus('3')" class="btn btn-success">Concluida <text></text></button>
                <button type="button" id="btnAtrasada" onclick="status.obterAcoesPorStatus('4')" class="btn btn-warning">Atrasada <text></text></button>
                <button type="button" id="btnCancelada" onclick="status.obterAcoesPorStatus('5')" class="btn btn-default">Cancelada <text></text></button>
                <button type="button" id="btnTodas" onclick="enviarFiltro(null)" class="btn btn-primary">Todas as ações <text></text></button>
            </div>

            <table id="tabelaDeResultados" class="table table-striped"></table>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/Print/printGRT.js"></script>
    <script type="text/javascript">

        const enumStatus = [1, 2, 3, 4, 5];
        let listaDeAcoes = []
        var isVisualizar = false;
        var showVerAgir = false;

        $(document).ready(function () {
            configurarCamposCascata();
        });

        function configurarCamposCascata(){

            if ($('#selectUnidade').val() == null) {
                $('#divCentroCusto').attr('hidden', 'hidden');
                $('#divSecaoAtividade').attr('hidden', 'hidden');
                $('#divItemCargo').attr('hidden', 'hidden');
            }

            if ($('#selectIndicador').val() ==  null) {
                $('#divMonitoramento').attr('hidden', 'hidden');
                $('#divDesvioTarefa').attr('hidden', 'hidden');
            }

            //Exibição campo Centro de Custo
            $('#selectUnidade').change(function () {
                if ($('#selectUnidade').val() != null) {
                    $('#divCentroCusto').removeAttr('hidden');
                }
                else {
                    $('#divCentroCusto').attr('hidden', 'hidden');
                }
            });

            //Exibição campo Seção/Atividade
            $('#selectCentroCusto').change(function () {
                if ($('#selectCentroCusto').val() != null) {
                    $('#divSecaoAtividade').removeAttr('hidden');
                }
                else {
                    $('#divSecaoAtividade').attr('hidden', 'hidden');
                }
            });

            //Exibição campo Item/Cargo
            $('#selectSecaoAtividade').change(function () {
                if ($('#selectSecaoAtividade').val() != null) {
                    $('#divItemCargo').removeAttr('hidden');
                }
                else {
                    $('#divItemCargo').attr('hidden', 'hidden');
                }
            });

            //Exibição campo Monitoramento
            $('#selectIndicador').change(function () {
                if ($('#selectIndicador').val() != null) {
                    $('#divMonitoramento').removeAttr('hidden');
                }
                else {
                    $('#divMonitoramento').attr('hidden', 'hidden');
                }
            });

            //Exibição campo Desvio/Tarefa
            $('#selectMonitoramento').change(function () {
                if ($('#selectMonitoramento').val() != null) {
                    $('#divDesvioTarefa').removeAttr('hidden');
                }
                else {
                    $('#divDesvioTarefa').attr('hidden', 'hidden');
                }
            });


        }

        function enviarFiltro(filtro) {
            openLoader("Carregando Dados");

            $.ajax({
                type: 'POST',
                url: '@Html.Raw(Url.Action("GetAcaoByFilter", "api/AcaoApi"))',
                data: JSON.stringify(objFiltro),
                headers: {
                    "token": '@Html.Raw(userToken)'
                },
                contentType: "application/json",
                success: function (dados) {
                    if (dados && dados.length > 0) {
                        carregarTabela(dados)
                        listaDeAcoes = dados
                    } else {
                        openMessageModal('Alerta', 'Não há dados')
                    }
                    closeLoader();
                },
                error: function (e) {
                    console.error(e);
                    closeLoader();
                }
            });
        }

        function carregarTabela(dados) {
            var colunas = montarColunasDaTabela();

            montarBotoesDosStatus(dados)

            montarTabela(dados, colunas);
        }

        function montarColunasDaTabela() {
            var colunas = [
                {
                    "title": "Ações", "mData": null, "visible": true, mRender: function (data, type, full, cell) {
                        var id = full["Id"];

                        let btnEditar = () => {
                            if (data.PermitirEditar) {
                                return `<button class="btn btn-sm btn-info botaoEditar" onclick="abrirAcao('editar',${id})">Editar</button>`;
                            }
                            return `<button class="btn btn-sm btn-info botaoEditar" onclick="abrirAcao('editar',${id})" disabled>Editar</button>`;
                        }

                        let btnAcompanhar = () => {
                            if (data.PermitirVisualizarAcompanhamento) {
                                return `<button class="btn btn-sm btn-success" onclick="abrirAcao('acompanhamento',${id})">Acompanhar</button>`;
                            }
                            return `<button class="btn btn-sm btn-success" onclick="abrirAcao('acompanhamento',${id})" disabled>Acompanhar</button>`;
                        }
                        return btnEditar() + btnAcompanhar();
                    }
                },
                {
                    "title": "Ações", "mData": null, "visible": true, mRender: function (data, type, full, cell) {
                        var id = full["Id"];
                        return `<button class="btn btn-sm btn-warning" onclick="abrirImpressao(${id})">Visualizar</button>`;
                    }
                },
                { "title": "Código da Ação", "mData": "Codigo_Acao", "visible": true },
                { "title": "Data Emissão", "mData": "_DataEmissao", "visible": true },
                { "title": "Hora Emissão", "mData": "HoraEmissao", "visible": true },
                { "title": "ParCompany_Id", "mData": "ParCompany_Id", "visible": false },
                { "title": "Unidade", "mData": "ParCompany_Name", "visible": true },
                { "title": "ParDepartmentParent_Id", "mData": "ParDepartmentParent_Id", "visible": false },
                { "title": "Centro de Custo", "mData": "ParDepartmentParent_Name", "visible": true },
                { "title": "ParDepartment_Id", "mData": "ParDepartment_Id", "visible": false },
                { "title": "Seção/Atividade", "mData": "ParDepartmentParent_Name", "visible": true },
                { "title": "ParCargo_Id", "mData": "ParCargo_Id", "visible": false },
                { "title": "Item/Tarefa", "mData": "ParCargo_Name", "visible": true },
                { "title": "ParLevel1_Id", "mData": "ParLevel1_Id", "visible": false },
                {
                    "title": "Indicador/Origem", "mData": "ParLevel1_Name", "visible": true,
                    mRender: function (data, type, full, cell) {
                        return montarCampo(data);
                    }
                },
                { "title": "ParLevel2_Id", "mData": "ParLevel2_Id", "visible": false },
                {
                    "title": "Monitoramento", "mData": "ParLevel2_Name", "visible": true,
                    mRender: function (data, type, full, cell) {
                        return montarCampo(data);
                    } },
                { "title": "ParLevel3_Id", "mData": "ParLevel3_Id", "visible": false },
                {
                    "title": "Desvio/Medida de Controle", "mData": "ParLevel3_Name", "visible": true,
                    mRender: function (data, type, full, cell) {
                        return montarCampo(data);
                    }
                },
                {
                    "title": "Não Conformidade/Ocorrência", "mData": "Acao_Naoconformidade", "visible": true,
                    mRender: function (data, type, full, cell) {
                        return montarCampo(data);
                    }
                },
                {
                    "title": "Ação", "mData": "AcaoText", "visible": true,
                    mRender: function (data, type, full, cell) {
                        return montarCampo(data);
                    }
                },
                { "title": "Data Conclusão", "mData": "_DataConclusao", "visible": true },
                { "title": "Emissor", "mData": "EmissorNome", "visible": true},
                { "title": "Hora Conclusão", "mData": "HoraConclusao", "visible": true },
                { "title": "Referência", "mData": "Referencia", "visible": true },
                {"title": "Nome do Responsável", "mData": "Responsavel_Name", "visible": true},
                /*{ "title": "Notificar", "mData": "null", "visible": true },*/
                { "title": "Prioridade", "mData": "PrioridadeNome", "visible": true },
                {
                    "title": "Status", "mData": "Status", "visible": true,
                    mRender: function (data, type, full, cell) {
                        if (data == "1") {
                            return "Pendente"
                        } else if (data == "2") {
                            return "Em andamento"
                        } else {
                            return "Concluída"
                        }
                    }},
                { "title": "Ativo", "mData": "IsActive", "visible": false }
            ];
            return colunas;
        }

        function montarCampo(data) {
            return `<label style="word-break: break-word;max-width: 200px;min-width: 200px;white-space: break-spaces;">${data}</label>`;
        }

        function montarBotoesDosStatus(dados) {       

            for (var i = 0; i < enumStatus.length; i++) {
                let acoesFiltradasPorStatus = dados.filter(acao => acao.Status == enumStatus[i])
                let porcentagem = (acoesFiltradasPorStatus.length / dados.length) * 100

                status.alterarTextoDosStatus(enumStatus[i], acoesFiltradasPorStatus, porcentagem)
            }
            $('#btnTodas').addClass('selected')
            $('#btnTodas text').text(` - ${dados.length}`);
        }

        const status = {
            filtrar: (statusDaAcao) => {
                return listaDeAcoes.filter(acao => acao.Status == statusDaAcao)
            },

            obterPorcentagemDasAcoes: (acoesFiltradasPorStatus) => {
                return (acoesFiltradasPorStatus.length / listaDeAcoes.length) * 100
            },

            obterAcoesPorStatus: (statusDaAcao) => {
                let acoesFiltradasPorStatus = status.filtrar(statusDaAcao)
                let porcentagem = status.obterPorcentagemDasAcoes(acoesFiltradasPorStatus)

                status.alterarTextoDosStatus(statusDaAcao, acoesFiltradasPorStatus, porcentagem)

                $('#btnTodas text').text(` - ${listaDeAcoes.length}`);
                status.destacarBotaoClicado()

                var colunas = montarColunasDaTabela();

                montarTabela(acoesFiltradasPorStatus, colunas);
            },

            alterarTextoDosStatus: (status, acoesFiltradasPorStatus, porcentagem) => {
                switch (status) {
                    case 1:
                        $('#btnPendente text').text(` - ${acoesFiltradasPorStatus.length} (${porcentagem.toFixed(2)}%)`);
                        break;
                    case 2:
                        $('#btnAndamento text').text(` - ${acoesFiltradasPorStatus.length} (${porcentagem.toFixed(2)}%)`);
                        break;
                    case 3:
                        $('#btnConcluida text').text(` - ${acoesFiltradasPorStatus.length} (${porcentagem.toFixed(2)}%)`);
                        break;
                    case 4:
                        $('#btnAtrasada text').text(`- ${acoesFiltradasPorStatus.length} (${porcentagem.toFixed(2)}%)`);
                        break;
                    case 5:
                        $('#btnCancelada text').text(` - ${acoesFiltradasPorStatus.length} (${porcentagem.toFixed(2)}%)`);
                        break;
                }
            },

            destacarBotaoClicado:() => {
                $(".filtros button").click(function () {
                    $(".filtros button").removeClass("selected");
                    $(this).addClass("selected");
                });
            }
        }

        let acao = {

            evidenciaConcluida: {

                listaDeEvidencias: [],

                imprimirEvidencia: (dados, isVisualizar) => {

                    let htmlEdicao = "";
                    let htmlVisualizacao = "";

                    $('#actionsEvidencies .fotosConcluidas').empty();

                    dados.forEach(function (elemento, indice) {

                        var evidencia = {
                            base64: elemento.Byte,
                            path: elemento.Path
                        };

                        acao.evidenciaConcluida.listaDeEvidencias.push(evidencia)

                        htmlEdicao += `
                                <div class="col-sm-4" style="display:inline-block; width:49%; height:20%;">
                                    <img src="data:image/png;base64,${evidencia.base64}" data-img class="img-responsive" style="width:100%; height:100%"/>
                                     <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciaConcluida.removerEvidencia(${indice + 1})" >Excluir</button>
                                </div>`;

                        htmlVisualizacao += `
                                <div class="col-sm-4" style="display:inline-block; width:49%; height:20%;">
                                    <img src="data:image/png;base64,${evidencia.base64}" data-img class="img-responsive" style="width:100%; height:100%"/>
                                </div>`;
                    });

                    if (isVisualizar) {
                        $('#divEvidencias .fotos').append(htmlVisualizacao);
                    }
                    else {
                        $('#divEvidencias .fotos').append(htmlEdicao);
                    }
                },

                adicionarEvidencia: (base64) => {

                    if (acao.evidenciaConcluida.listaDeEvidencias.length < 2) {

                        var evidencia = {
                            base64: base64
                        };

                        acao.evidenciaConcluida.listaDeEvidencias.push(evidencia);

                        let html;

                        if (evidencia["base64"]) {
                            html += `<div class="col-sm-4">
                                    <img src="data:image/png;base64,${evidencia["base64"]}" data-img class="img-responsive"/>
                                    <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciaConcluida.removerEvidencia(${acao.evidenciaConcluida.listaDeEvidencias.length})">Excluir</button>
                                    </div>`;
                        }
                        else {
                            html = `<div class="col-sm-4"><img src="#${evidencia["Nome"]}" class="img-responsive"/></div>`;
                        }
                        $('#actionsEvidencies .fotosConcluidas').append(html);
                    } else {
                        openMessageModal("Alerta", "Quantidade máxima de fotos atingida.");
                    }
                },

                removerEvidencia: (index) => {

                    acao.evidenciaConcluida.listaDeEvidencias.splice((index - 1), 1);

                    $('#actionsEvidencies .fotosConcluidas').empty();

                    if (acao.evidenciaConcluida.listaDeEvidencias.length > 0) {
                        acao.evidenciaConcluida.listaDeEvidencias.forEach(function (elemento, indice) {

                            let html;

                            if (elemento["base64"]) {
                                html += `<div class="col-sm-4">
                                    <img src="data:image/png;base64,${elemento["base64"]}" data-img class="img-responsive"/>
                                    <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciaConcluida.removerEvidencia(${acao.evidenciaConcluida.listaDeEvidencias.length})">Excluir</button>
                                    </div>`;
                            }
                            else {
                                html = `<div class="col-sm-4"><img src="#${elemento["Nome"]}" class="img-responsive"/></div>`;
                            }
                            $('#actionsEvidencies .fotosConcluidas').append(html);
                        })
                    } else {
                        $("#checkVerAgir").trigger('click');
                    }
                }
            },

            evidenciasNaoConforme: {

                listaDeEvidencias: [],

                imprimirEvidencia: (dados, isVisualizar) => {

                    let htmlEdicao = "";
                    let htmlVisualizacao = "";

                    $('#divEvidencias .fotos').empty();

                    dados.forEach(function (elemento, indice) {

                        var evidencia = {
                            base64: elemento.Byte,
                            path: elemento.Path
                        };

                        acao.evidenciasNaoConforme.listaDeEvidencias.push(evidencia);

                        htmlEdicao += `
                                <div class="col-sm-4" style="display:inline-block; width:49%; height:20%;">
                                    <img src="data:image/png;base64,${evidencia.base64}" data-img class="img-responsive" style="width:100%; height:100%"/>
                                     <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciasNaoConforme.removerEvidencia(${indice + 1})" >Excluir</button>
                                </div>`;

                        htmlVisualizacao += `
                                <div class="col-sm-4" style="display:inline-block; width:49%; height:20%;">
                                    <img src="data:image/png;base64,${evidencia.base64}" data-img class="img-responsive" style="width:100%; height:100%"/>
                                </div>`;
                    });

                    if (isVisualizar) {
                        $('#divEvidencias .fotos').append(htmlVisualizacao);
                    }
                    else {
                        $('#divEvidencias .fotos').append(htmlEdicao);
                    }                    
                 },

                removerEvidencia: (index) => {
                    acao.evidenciasNaoConforme.listaDeEvidencias.splice((index - 1), 1);

                    $('#divEvidencias .fotos').empty();

                    acao.evidenciasNaoConforme.listaDeEvidencias.forEach(function (elemento, indice) {

                        let html;

                        if (elemento["base64"]) {
                            html += `<div class="col-sm-4">
                                    <img src="data:image/png;base64,${elemento["base64"]}" data-img class="img-responsive"/>
                                    <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciasNaoConforme.removerEvidencia(${acao.evidenciasNaoConforme.listaDeEvidencias.length})">Excluir</button>
                                    </div>`;
                        }
                        else {
                            html = `<div class="col-sm-4"><img src="#${elemento["Nome"]}" class="img-responsive"/></div>`;
                        }
                        $('#divEvidencias .fotos').append(html);
                    })
                },

                adicionarEvidencia: (base64) => {

                    if (acao.evidenciasNaoConforme.listaDeEvidencias.length < 2) {

                        var evidencia = {
                            base64: base64
                        };

                        acao.evidenciasNaoConforme.listaDeEvidencias.push(evidencia);

                        let html;

                        if (evidencia["base64"]) {
                            html += `<div class="col-sm-4">
                                    <img src="data:image/png;base64,${evidencia["base64"]}" data-img class="img-responsive"/>
                                    <button class="btn btn-danger btn-sm form-control" onclick="acao.evidenciasNaoConforme.removerEvidencia(${acao.evidenciasNaoConforme.listaDeEvidencias.length})">Excluir</button>
                                    </div>`;
                        }
                        else {
                            html = `<div class="col-sm-4"><img src="#${evidencia["Nome"]}" class="img-responsive"/></div>`;
                        }
                        $('#divEvidencias .fotos').append(html);
                    }
                    else {
                        openMessageModal("Alerta", "Quantidade máxima de fotos atingida.");
                    }
                }
            }
        }

        const log = {

            preencherModal: (dados) => {

                log.limparModal()

                $('.acaoId').append(dados.Codigo_Acao)
                $('.unidade').append(dados.ParCompany_Name)
                $('.secaoAtividade').append(dados.ParDepartmentParent_Name)
                $('.itemTarefa').append(dados.ParCargo_Name)
                $('.centroCusto').append(dados.ParDepartmentParent_Name)

                log.obterLogs(dados.Id)
            },

            limparModal: () => {

                $('.acaoId').text(' ')
                $('.unidade').text(' ')
                $('.secaoAtividade').text(' ')
                $('.itemTarefa').text(' ')
                $('.centroCusto').text(' ')
                $('.layoutDeLogs').empty(' ')
            },

            obterLogs: (id) => {

                const url = '@Url.Action("ObterLogs", "api/EntityTrackApi")';

                $.ajax({
                    type: 'GET',
                    url: `${url}/${id}`,
                    contentType: "application/json",
                    success: function (dados) {
                        log.percorrerLogs(dados)
                    },
                    error: function (e) {
                        console.error(e);
                        closeLoader();
                    }
                });
            },

            percorrerLogs: (dados) => {

                if(dados.length == 0){
                    openMessageModal("Sem Log's para essa ação");
                    return
                }

                function verificarNomeDoCampo(nomeDoCampo, nomeQueDeveAparecer){
                    dados.filter(dado => {
                        if(dado.FieldName === nomeDoCampo){
                            log.montarHtmlDosCampos(dado, nomeQueDeveAparecer)
                        }                        
                    }) 
                }
                verificarNomeDoCampo('Acao_Naoconformidade', 'Ação não conformidade')
                verificarNomeDoCampo('AcaoText', 'Ação texto')
                verificarNomeDoCampo('EvidenciaNaoConformidade', 'Evidências não conforme')
                verificarNomeDoCampo('EvidenciaAcaoConcluida', 'Evidências Concluídas')
                verificarNomeDoCampo('DataConclusao', 'Data de conclusão')
                verificarNomeDoCampo('HoraConclusao', 'Hora de conclusão')
                verificarNomeDoCampo('Referencia', 'Referência')
                verificarNomeDoCampo('Responsavel', 'Responsável')
                verificarNomeDoCampo('Prioridade', 'Prioridade')
                verificarNomeDoCampo('Status', 'Status')
                verificarNomeDoCampo('ListaNotificarAcao', 'Notificáveis')
            },

            montarHtmlDosCampos:(campo, nomeQueDeveAparecer) => {

                log.preencherNulo(campo)

                let thead = ` <h4 class="text-center" ><button type="button" class="btn btn-info" data-toggle="collapse" data-target="#tabela${campo.FieldName}" style="width: 100%;">${nomeQueDeveAparecer}</button></h4> 
                                            <table id="tabela${campo.FieldName}" class="table table-bordered collapse">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th scope="col">Data de Modificação</th>
                                                        <th scope="col">Usuário Modificação</th>
                                                        <th scope="col">Valor Anterior</th>
                                                        <th scope="col">Valor Alterado</th>
                                                    </tr>
                                                </thead>
                                                <tbody>                                        
                                                </tbody>
                                            </table>
                                        <hr>`

                
                let tbody = `<tr>
                                    <td style="width:209px;">${campo.UpdateDate}</td>   
                                    <td style="width:209px;">${campo.UserName}</td>
                                    <td style="width:209px;">${campo.OldValue}</td>
                                    <td style="width:209px;">${campo.NewValue}</td>
                                </tr>`

                if($(`#tabela${campo.FieldName}`).length){
                    $(`.layoutDeLogs #tabela${campo.FieldName} tbody`).append(tbody)
                }
                else{
                    $(`.layoutDeLogs`).append(thead)
                    $(`.layoutDeLogs #tabela${campo.FieldName} tbody`).append(tbody)
                }
            },

            preencherNulo:(nomeDoCampo) => {

                if (nomeDoCampo.UpdateDate == null) {
                    nomeDoCampo.UpdateDate = " - ";
                }
                if (nomeDoCampo.FieldName == null) {
                    nomeDoCampo.FieldName = " - ";
                }
                if (nomeDoCampo.UserName == null) {
                    nomeDoCampo.UserName = " - ";
                }
                if (nomeDoCampo.OldValue == null) {
                    nomeDoCampo.OldValue = " - ";
                }
                if (nomeDoCampo.NewValue == null) {
                    nomeDoCampo.NewValue = " - ";
                }
            }
        }

        function abrirImpressao(id) {
            openLoader("...");
            isVisualizar = true;
            const url = '@Url.Action("GetById", "api/AcaoApi")';
            $.ajax({
                type: 'GET',
                url: `${url}/${id}`,
                contentType: "application/json",
                success: function (dados) {
                    preencherModalImpressão(dados);
                    log.preencherModal(dados)

                    buscarFotos(id, isVisualizar);

                    closeLoader();
                },
                error: function (e) {
                    console.error(e);
                    closeLoader();
                }
            });
            $("#modalPrint").modal();
        }

        function resetarAbasModalAcao() {
            $('#tabAcaoEdicao').prop('disabled', false)
            $('.edicao').removeClass('disabled');
            $('#formAcompanhamento').removeClass('hide');
            $('#tabAcaoAcompanhamento').prop('disabled', false)
            $('.acompanhamento').removeClass('disabled');
        }

        function abrirAcao(acao, id) {
            resetarAbasModalAcao();

            switch (acao) {
                case "editar":
                    $('#tabAcaoEdicao').click();
                    carregarDados(id)
                    break;
                case "acompanhamento":
                    $('#tabAcaoAcompanhamento').click();
                    carregarDados(id);
                    break;
            }

            $('.modal input').val('');
            $("#modalEditar").modal();
        }

        function preencheUnidadeCurrentUser() {
            const url = '@Url.Action("GetUnityByCurrentUser", "api/AcaoApi")';

            $.ajax({
                type: 'POST',
                url: `${url}?search=`,
                contentType: "application/json",
                success: function (data) {

                    if (data.length == 1) {
                        var titleParCompany = data[0].ParCompany_Id + " - " + data[0].Name;
                        var idParCompany = data[0].ParCompany_Id;

                        $('#selectUnidade').append($('<option>',
                            {
                                value: `${idParCompany}`,
                                text: `${titleParCompany}`
                            }
                        ));

                        $('#divCentroCusto').removeAttr('hidden');

                    }
                },
                error: function (e) {
                    console.error(e);
                }
            });
        }

        function abrirNovaAcao() {
            limparCampoModalNovaAcao();

            preencheUnidadeCurrentUser();

            configurarCamposCascata();
            Select3.customFilter["planoDeAcao"] = {};

            $("#modalNovaAcao").modal('show');
        }

        function print() {

            var winPrint = window.open('', '', '');
            winPrint.document.write(document.getElementById('formAcaoPrint').innerHTML);
            winPrint.document.close();
            winPrint.focus();
            winPrint.print();
        }

        function carregarDados(id) {
            openLoader("...");
            isVisualizar = false;
            const url = '@Url.Action("GetById", "api/AcaoApi")';
            $.ajax({
                type: 'GET',
                url: `${url}/${id}`,
                contentType: "application/json",
                success: function (dados) {
                    preencherModalDeEdicao(dados, isVisualizar);
                    buscarFotos(id, isVisualizar);
                    closeLoader();
                },
                error: function (e) {
                    console.error(e);
                    closeLoader();
                }
            });
        }

        function buscarFotos(id, isVisualizar) {
            const url = '@Url.Action("GetFotosEvidencia", "api/EvidenciaNaoConformeApi")';
            $.ajax({
                type: 'GET',
                url: `${url}/${id}`,
                contentType: "application/json",
                headers: {
                    "token": '@Html.Raw(userToken)'
                },
                success: function (dados) {

                    if (dados.length > 0) {
                        acao.evidenciasNaoConforme.imprimirEvidencia(dados, isVisualizar);

                        buscarEvidenciaConcluida(id, isVisualizar);
                    }
                    closeLoader();
                },
                error: function (e) {
                    console.error(e);
                    closeLoader();
                }
            });

        }

        function buscarEvidenciaConcluida(id) {
            const url = '@Url.Action("GetFotosEvidenciaConcluida", "api/EvidenciaConcluidaApi")';
            $.ajax({
                type: 'GET',
                url: `${url}/${id}`,
                contentType: "application/json",
                headers: {
                    "token": '@Html.Raw(userToken)'
                },
                success: function (dados) {

                    if (dados.length > 0) {
                        acao.evidenciaConcluida.imprimirEvidencia(dados, isVisualizar)
                        showVerAgir = true;
                    } else
                        showVerAgir = false;

                    closeLoader();
                },
                error: function (e) {
                    console.error(e);
                    closeLoader();
                },
                complete: function () {
                    if (showVerAgir) {
                        $("#checkVerAgir").trigger('click');
                    }
                }
            });
        }

        function preencherModalImpressão(dados) {

            if (dados.ListaPrioridade) {
                var prioridade = {};
                for (var i = 0; i < dados.ListaPrioridade.length; i++) {
                     prioridade = dados.ListaPrioridade[i];
                }
            }

            $("input[name='Id']").val(dados.Id);
            $("#CodigoAcaoPrint").text(dados.Codigo_Acao);
            $("#dataEmissaoPrint").text(dados._DataEmissao);
            $("#horaEmissaoPrint").text(dados.HoraEmissao);
            $("#usuarioEmissorPrint").text(dados.EmissorNome);
            $("#actionParCompany_IdPrint").text(dados.ParCompany_Name);
            $("#actionParDepartment_IdPrint").text(dados.ParDepartment_Name);
            $("#actionParDepartmentParent_IdPrint").text(dados.ParDepartment_Name);
            $("#actionParCargo_IdPrint").text(dados.ParCargo_Name);
            $("#actionParLevel1_IdPrint").text(dados.ParLevel1_Name);
            $("#actionParLevel2_IdPrint").text(dados.ParLevel2_Name);
            $("#actionParLevel3_IdPrint").text(dados.ParLevel3_Name);
            $("#selectPrioridadePrint").text(prioridade['Nome']);
            $("#selectResponsavelPrint").text(dados.Responsavel_Name);
            $("#actionConclusionDatePrint").text(dados.DataConclusao == null ? null : dados.DataConclusao.split('T')[0]);
            $("#actionConclusionHourPrint").text(dados.HoraConclusao);
            $("#actionReferencePrint").text(dados.Referencia);
            $("#statusPrint").val(dados.Status);

            $("#txtAcao_NaoconformidadePrint").text(dados.Acao_Naoconformidade);
            $("#txtAcaoTextPrint").text(dados.AcaoText);

            notificacao.imprimirNotificaveisNoModalDeVisualizacao(dados.ListaNotificarAcao);

            if (dados.ListaEvidencia == null) {
                $('#divEvidencias .fotos').empty();
                $('#actionsEvidencies .fotosConcluidas').empty();
            }

        }

        function limparCamposDoModal() {
            acao.evidenciaConcluida.listaDeEvidencias = []
            acao.evidenciasNaoConforme.listaDeEvidencias = []
            acompanhamento.listaDeEvidencias = []
            $('#divEvidencias .fotos').empty();
            $('#actionsEvidencies .fotosConcluidas').empty();
            $('.evidenciasAcompanhamento').empty()
            $('.responsavel').removeClass('required')
            $('.dataConclusao').removeClass('required')
        }

         function limparCampoModalNovaAcao() {
            $("select[name=parCompany_Ids]").empty();
            $("select[name=parDepartment_Ids]").empty();
            $("select[name=parSecao_Ids]").empty();
            $("select[name=parCargo_Ids]").empty();
            $("select[name=parLevel1_Ids]").empty();
            $("select[name=parLevel2_Ids]").empty();
            $("select[name=parLevel3_Ids]").empty();
            $("#txtNovaAcao_Naoconformidade").val("");
            $("#txtNovaAcaoText").val("");
        }

        var acaoEditar = {};

        var permitirAlterarStatus = (dados) => {
            $('#txtAcompanhamento_Status').empty();
            $('#txtAcompanhamento_Status').append(new Option(dados["StatusName"], dados["Status"], true));
            if (dados.PermitirAlterarStatus) {
                $('#txtAcompanhamento_Status').append(new Option('Cancelado', 5, false));
                $('#txtAcompanhamento_Status').append(new Option('Concluído', 3, false));
            }
        }

        var permitirInserirAcompanhamento = (dados) => {
            if (!dados.PermitirInserirAcompanhamento) {
                $('#formAcompanhamento').addClass('hide');
            }
        }

        var permitirVisualizarAcompanhamento = (dados) => {
            if (!dados.PermitirVisualizarAcompanhamento) {
                $('#tabAcaoAcompanhamento').prop('disabled', true)
                $('.acompanhamento').addClass('disabled');
            }
        }

        var permitirEditar = (dados) => {
            if (!dados.PermitirEditar) {
                $('#tabAcaoEdicao').prop('disabled', true)
                $('.edicao').addClass('disabled')
            }
        }

        var desabilitarBotaoSalvarEPreencherDepois = (dados) => {

            $('.preencherDepois').prop('disabled', false)

            if(dados.Status == 2)
            $('.preencherDepois').prop('disabled', true)
        }

        let desabilitarSelecaoDeDataMenorQueHoje = () => $('#actionConclusionDate').attr('min', new Date().toISOString().split("T")[0])

        function preencherModalDeEdicao(dados) {

            desabilitarSelecaoDeDataMenorQueHoje()
            preencherInformacoesAcompanhamento(dados);
            permitirInserirAcompanhamento(dados);
            permitirVisualizarAcompanhamento(dados);

            acaoEditar = dados;
            limparCamposDoModal()

            if (dados.ListaResponsavel) {
                var html = `<option value="">Selecione...</option>`;
                for (var i = 0; i < dados.ListaResponsavel.length; i++) {
                    var responsavel = dados.ListaResponsavel[i];
                    html += `<option value="${responsavel["Id"]}">${responsavel["Nome"]}</option>`;
                }

                $('#selectResponsavel').html(html);
                $('#selectAcompanhamento_Notificar').html(html);

                $("#selectResponsavel option[value=" + dados.Responsavel + "]").attr('selected', 'selected')
            }

            if (dados.ListaPrioridade) {
                var html = `<option value="">Selecione...</option>`;
                for (var i = 0; i < dados.ListaPrioridade.length; i++) {
                    var prioridade = dados.ListaPrioridade[i];
                    html += `<option value="${prioridade["Id"]}">${prioridade["Nome"]}</option>`;
                }
                $('#selectPrioridade').html(html);
            }

            $("input[name='Id']").val(dados.Id);
            $("input[name='ParCompany_Id']").val(dados.ParCompany_Id);
            $("#dataEmissao").text(dados._DataEmissao);
            $("#horaEmissao").text(dados.HoraEmissao);
            $("#usuarioEmissor").text(dados.EmissorNome);
            $("#actionParCompany_Id").text(dados.ParCompany_Name);
            $("#actionParDepartment_Id").text(dados.ParDepartment_Name);
            $("#actionParDepartmentParent_Id").text(dados.ParDepartmentParent_Name);
            $("#actionParCargo_Id").text(dados.ParCargo_Name);
            $("#actionParLevel1_Id").text(dados.ParLevel1_Name);
            $("#actionParLevel2_Id").text(dados.ParLevel2_Name);
            $("#actionParLevel3_Id").text(dados.ParLevel3_Name);
            $("#actionConclusionDate").val(dados.DataConclusao == null ? null : dados.DataConclusao.split('T')[0]);
            $("#actionConclusionHour").val(dados.HoraConclusao);
            $("#actionReference").val(dados.Referencia);
            $("#status").val(dados.Status);
            permitirAlterarStatus(dados)
            permitirEditar(dados)
            desabilitarBotaoSalvarEPreencherDepois(dados)

            $("#txtAcao_Naoconformidade").val(dados.Acao_Naoconformidade);
            $("#txtAcaoText").val(dados.AcaoText);

            notificacao.imprimirNotificaveisNoModalDeEdicao(dados.ListaNotificarAcao);

            if (dados.ListaNotificar) {
                var html = `<option value="">Selecione...</option>`;
                for (var i = 0; i < dados.ListaNotificar.length; i++) {
                    var notificar = dados.ListaNotificar[i];
                    html += `<option value="${notificar["Id"]}">${notificar["Nome"]}</option>`;
                }
                $('#selectNotificarAcao').html(html);
            }
        }

        const notificacao = {

            imprimirNotificaveisNoModalDeVisualizacao(lista) {
                let html = "";

                lista.forEach(item => {
                    html += `<tr>
                            <td>${item["Id"]}</td>
                            <td>${item["Nome"]}</td>
                         </tr>`;
                })

                $('#tableNotificarAcao tbody').html(html);
            },

            imprimirNotificaveisNoModalDeEdicao(lista) {

                if (lista) {
                    var html = "";
                    for (var i = 0; i < lista.length; i++) {
                        var notificarAcao = lista[i];
                        html += `<tr>
                                <td>${notificarAcao["Id"]}</td>
                                <td>${notificarAcao["Nome"]}</td>
                                <td>
                                <button class="btn btn-sm btn-danger" onclick="notificacao.removerDaListaNotificarAcao(${i})">X</button>
                                </td>
                            </tr>`;
                    }
                    $('#tableNotificarAcao tbody').html(html);
                }
            },

            removerDaListaNotificarAcao(index) {
                acaoEditar["ListaNotificarAcao"].splice(index, 1);
                notificacao.imprimirNotificaveisNoModalDeEdicao(acaoEditar["ListaNotificarAcao"])
            },

            inserirNaListaNotificarAcao() {
                if ($('#selectNotificarAcao').val() > 0) {
                    var obj = {
                        Id: $('#selectNotificarAcao').val(),
                        Nome: $('#selectNotificarAcao option:selected').text(),
                        IsActive: true
                    };
                    acaoEditar["ListaNotificarAcao"].push(obj);
                    notificacao.imprimirNotificaveisNoModalDeEdicao(acaoEditar["ListaNotificarAcao"])
                }
            }
        }

        //Formulário
        function enviarFormularioEditarAcao(status) {

            event.preventDefault();

            limparCamposObrigatoriosEdicao()
            let form = $("#formAcao").serializeObject();

            form["ListaNotificarAcao"] = acaoEditar["ListaNotificarAcao"];
            form["ListaEvidenciaConcluida"] = acao.evidenciaConcluida.listaDeEvidencias;
            form["ListaEvidencia"] = acao.evidenciasNaoConforme.listaDeEvidencias;

            form.Status = status;

            const url = '@Url.Action("Post", "api/AcaoApi")';

            if (!verificarSeExistemCamposNulos(form)) {
                openMessageModal("Existem campos vazios que são obrigatórios!")
                return
            }                

            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(form),
                contentType: "application/json",
                success: function (data) {
                    openMessageModal("Concluido", "Ação salva com sucesso");
                    $("#btnClose").trigger('click');
                    setTimeout(function () {
                        enviarFiltro(null);
                    }, 1000);

                },
                error: function () {
                    console.log('erro ao salvar ação');
                }
            });
        }

        function limparCamposObrigatoriosEdicao() {
            $('.responsavel').removeClass('required')
            $('.dataConclusao').removeClass('required')
        }

        function verificarSeExistemCamposNulos(form) {
            let existeCampoNulo = true

            if (form.Status == 2) {                

                if (form.Responsavel === '') {
                    $('.responsavel').addClass('required')
                    existeCampoNulo = false
                }
                if (form.DataConclusao === '') {
                    $('.dataConclusao').addClass('required')
                    existeCampoNulo = false
                }              
            }
            return existeCampoNulo
        }

        function verificaObrigatoriedade() {

            var unidade = $('#selectUnidade').val();
            var indicador = $('#selectIndicador').val();

            if (unidade == null || indicador == null) {
                return true;
            }

        }

        //Formulário
        function salvarNovaAcao(status) {

            event.preventDefault();

            if (verificaObrigatoriedade() == true) {
                alert('Os campos Unidade e Indicador são obrigatórios.');
            }
            else {
                var form = $("#formNovaAcao").serializeObject();

                salvarAcao(form, status);
            }
        }

        function salvarAcao(form,status) {

            var objAcao = {};

            objAcao["ParCompany_Id"] = form["parCompany_Ids"];
            objAcao["ParDepartment_Id"] = form["parDepartment_Ids"];
            objAcao["ParDepartmentParent_Id"] = form["parSecao_Ids"];
            objAcao["ParCargo_Id"] = form["parCargo_Ids"];
            objAcao["ParLevel1_Id"] = form["parLevel1_Ids"];
            objAcao["ParLevel2_Id"] = form["parLevel2_Ids"];
            objAcao["ParLevel3_Id"] = form["parLevel3_Ids"];
            objAcao["Acao_Naoconformidade"] = form["NovaAcao_Naoconformidade"];
            objAcao["AcaoText"] = form["NovaAcaoText"];
            objAcao["Status"] = status;

             const url = '@Url.Action("SalvarAcao", "api/AcaoApi")';

            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(objAcao),
                contentType: "application/json",
                success: function (Id) {
                    openMessageModal("Concluido", "Ação salva com sucesso");
                    $("#btnCloseNovaAcao").trigger('click');
                    limparCampoModalNovaAcao();
                    abrirAcao("editar", Id);
                },
                error: function () {
                    console.log('erro ao salvar ação');
                }
            });
        }

        function montarTabela(dados, colunas) {
            var table = datatableGRT.Inicializar({
                idTabela: "tabelaDeResultados",
                listaDeDados: dados,
                colunaDosDados: colunas,
                numeroLinhasNaTabela: 25,
                aplicarResponsividade: true,
                tamanhosDoMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "-"]],
                loadingRecords: true,
                destroy: true,
                info: true,
                initComplete: () => { },
                createdRow: function (row, data, index) {
                }
            });
        }

        function montarColunasDaTabelaDinamico(dados) {
            var keys = Object.keys(dados[0]);
            var colunas = [];
            for (var i = 0; i < keys.length; i++) {
                var nomeColuna = keys[i];
                var coluna = {
                    title: keys[i],
                    mData: keys[i],
                    mRender: function (data, type, full) {
                        return data;
                    },
                    "visible": true
                };
                colunas.push(coluna);
            }
            return colunas;
        }

        function validateUploadFile(evt) {

            if (evt.target.files.length == 0) return false;

            else if (!evt.target.files[0].type.match(/.(jpg|jpeg|png)$/i)) {
                $('#uploadPhoto').val('')
                $('#uploadPhotox').val('')
                openMessageModal('Alerta! Não é uma imagem!')
                return false;
            }

            else if (evt.target.files[0].size <= 0) return false;

            return true;
        }

        function uploadFile(evt, tipoEvidencia) {

            if (!validateUploadFile(evt))
                return;

            var e = evt.target.files[0];
            var reader = new FileReader();

            reader.onload = (e) => {
                var binaryData = e.target.result;
                var base64String = window.btoa(binaryData);

                if (tipoEvidencia == 'evidencia')
                    acao.evidenciasNaoConforme.adicionarEvidencia(base64String);

                else if (tipoEvidencia == 'evidenciaConcluida')
                    acao.evidenciaConcluida.adicionarEvidencia(base64String);

                else if (tipoEvidencia == 'evidenciaAcompanhamento')
                    acompanhamento.adicionarEvidencia(base64String)

                $('input[type=file]').val('');
            };

            reader.readAsBinaryString(e);
        }

        $('body')
            .on('click, change', '#checkVerAgir', function () {

                if ($(this).is(":checked")) {
                    $("#evidenciasConcluidasImpressao").removeAttr('hidden');
                    $("#evidenciasConcluidasEdicao").removeAttr('hidden');
                    $('.vereagir').removeClass('hide');
                } else {
                    $("#evidenciasConcluidasImpressao").attr('hidden', 'hidden');
                    $("#evidenciasConcluidasEdicao").attr('hidden', 'hidden');
                    $('.vereagir').addClass('hide');
                }
            });

        function preencherInformacoesAcompanhamento(dados) {
            acompanhamento.objeto = {
                AcaoId: dados.Id,
                ListaNotificar: dados.ListaNotificarAcao
            };

            acompanhamento.limparCampoObservacao();
            acompanhamento.imprimirListaNotificar();

            if (dados.ListaAcompanhamento) {
                var html = `<div>`;
                for (var i = 0; i < dados.ListaAcompanhamento.length; i++) {

                    let evidencia1 = ''
                    let evidencia2 = ''

                    var objAcompanhamento = dados.ListaAcompanhamento[i];

                    var htmlTabelaNotificar = acompanhamento.montarHtmlTabelaListaNotificar(objAcompanhamento['ListaNotificar']);

                    if (objAcompanhamento['Evidencia1'] != null) {
                        evidencia1 = acompanhamento.montarHtmlDaEvidencia(objAcompanhamento['Evidencia1'])
                    }

                    if (objAcompanhamento['Evidencia2'] != null) {
                        evidencia2 = acompanhamento.montarHtmlDaEvidencia(objAcompanhamento['Evidencia2'])
                    }

                    html += `
                        <div class="row layoutAcompanhamento">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    <label><strong>Observação</strong></label>
                                    <textarea disabled readonly class="form-control" style="resize: none; height: 100px;">${objAcompanhamento["Observacao"]}</textarea>
                                </div>
                                <div class="form-group">
                                    <label><strong>Notificar</strong></label>
                                    ${htmlTabelaNotificar}
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label><strong>Data Registro</strong></label>
                                    <input disabled readonly class="form-control" value="${objAcompanhamento["DataRegistroFormatada"]}">
                                </div>
                                <div class="form-group">
                                    <label><strong>Responsavel</strong></label>
                                    <input disabled readonly class="form-control" value="${objAcompanhamento["Responsavel"]}">
                                </div>
                                <div class="form-group">
                                    <label><strong>Status</strong></label>
                                    <input disabled readonly class="form-control" value="${objAcompanhamento["StatusName"]}">
                                </div>
                            </div>
                            ${evidencia1}
                            ${evidencia2}
                        </div>
                        <hr/>`;                    
                }
                html += `</div>`;
                $('#Acompanhamento_Listagem').html(html);
            }
        }

        //Notificar ação
        var acompanhamento = {

            objeto: {},
            listaDeEvidencias: [],

            montarHtmlDaEvidencia: (evidencia) => {

                let html = '';

                var imagem = {
                    base64: evidencia.Byte,
                    path: evidencia.Path
                };

                html += `<div class="col-sm-6" style="display:inline-block; width:49%; height:20%;">
                              <img src="data:image/png;base64,${imagem.base64}" data-img class="img-responsive" style="width:100%; height:100%"/>
                         </div>`;
            
                return html
            },

            adicionarEvidencia: (base64) => {

                var evidencia = {
                    base64: base64
                };

                acompanhamento.listaDeEvidencias.push(evidencia);

                if (acompanhamento.listaDeEvidencias.length <= 2) {

                    acompanhamento.imprimirEvidenciaNoAcompanhamento(evidencia)
                }
                else {
                    openMessageModal("Alerta", "Quantidade máxima de fotos atingida.");
                }
            },
            removerEvidencia: (index) => {

                acompanhamento.listaDeEvidencias.splice((index - 1), 1);

                $('.evidenciasAcompanhamento').empty();

                acompanhamento.listaDeEvidencias.forEach(function (elemento, indice) {

                    acompanhamento.imprimirEvidenciaNoAcompanhamento(elemento)
                })
            },

            imprimirEvidenciaNoAcompanhamento: (elemento) => {
                let html;

                if (elemento["base64"]) {
                    html += `<div class="col-sm-4">
                                    <img src="data:image/png;base64,${elemento["base64"]}" data-img class="img-responsive"/>
                                    <button class="btn btn-danger btn-sm form-control" onclick="acompanhamento.removerEvidencia(${acompanhamento.listaDeEvidencias.length})">Excluir</button>
                                    </div>`;
                }
                else {
                    html = `<div class="col-sm-4"><img src="#${elemento["Nome"]}" class="img-responsive"/></div>`;
                }
                $('.evidenciasAcompanhamento').append(html);
            },

            montarHtmlTabelaListaNotificar: (lista) => {
                var html = ''
                if (lista) {
                    var valoresNotificarAcao = '';
                    for (var i = 0; i < lista.length; i++) {
                        var notificarAcao = lista[i];
                        valoresNotificarAcao += `<tr>
                                    <td>${notificarAcao["Id"]}</td>
                                    <td>${notificarAcao["Nome"]}</td>
                                </tr>`;
                    }

                    html = `<table class="table table-striped" style="font-size:14px;">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Nome</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${valoresNotificarAcao}
                                </tbody>
                            </table>`;
                }
                return html;
            },

            imprimirListaNotificar: () => {
                var lista = acompanhamento.objeto["ListaNotificar"];
                if (lista) {
                    var html = "";
                    for (var i = 0; i < lista.length; i++) {
                        var notificar = lista[i];
                        html += `<tr>
                                    <td>${notificar["Id"]}</td>
                                    <td>${notificar["Nome"]}</td>
                                    <td>
                                    <button class="btn btn-sm btn-danger acompanhamento" onclick="acompanhamento.removerDaListaNotificar(${i})">X</button>
                                    </td>
                                </tr>`;
                    }
                    $('#tableAcompanhamento_Notificar tbody').html(html);
                }
            },

            removerDaListaNotificar: (index) => {
                acompanhamento.objeto["ListaNotificar"].splice(index, 1);
                acompanhamento.imprimirListaNotificar(acompanhamento.objeto["ListaNotificar"])
            },

            inserirNaListaNotificar: () => {
                if ($('#selectAcompanhamento_Notificar').val() > 0) {
                    var obj = {
                        Id: $('#selectAcompanhamento_Notificar').val(),
                        Nome: $('#selectAcompanhamento_Notificar option:selected').text(),
                        IsActive: true
                    };
                    acompanhamento.objeto["ListaNotificar"].push(obj);
                    acompanhamento.imprimirListaNotificar(acompanhamento.objeto["ListaNotificar"])
                }
            },

            limparCampoObservacao:() => {
                $('#txtAcompanhamento_Observacao').val('')
            },

            salvarAcompanhamento: () => {
                openLoader("Aguarde");
                var form = $("#formAcompanhamento").serializeObject();

                form["ListaNotificar"] = acompanhamento.objeto["ListaNotificar"];
                form['Evidencia1_Base64'] = acompanhamento.listaDeEvidencias[0] ? acompanhamento.listaDeEvidencias[0].base64 : null
                form['Evidencia2_Base64'] = acompanhamento.listaDeEvidencias[1] ? acompanhamento.listaDeEvidencias[1].base64 : null

                const url = '@Url.Action("Post/Acompanhamento", "api/AcompanhamentoApi")';
                $.ajax({
                    url: url + "/" + acompanhamento.objeto["AcaoId"],
                    type: 'POST',
                    data: JSON.stringify(form),
                    headers: {
                    "token": '@Html.Raw(userToken)'
                    },
                    contentType: "application/json",
                    success: function (data) {
                        openMessageModal("Concluido", "Ação salva com sucesso");
                        closeLoader();
                        $("#btnClose").trigger('click');
                        setTimeout(function () {
                            enviarFiltro(null);
                        }, 1000);
                    },
                    error: function () {
                        console.log('erro ao salvar ação');
                        closeLoader();
                    }
                });
                closeLoader();
            }

        }
    </script>

}
