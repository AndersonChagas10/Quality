@model SgqSystem.ViewModels.ParamsViewModel
@{
    Layout = null;
    var url = Url.Action("AddUpdateLevel1", "api/ParamsApi"); //URL relativa
}


<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel1">New Level 1</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 01</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel2">New Level 2</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 02</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel3">New Level 3</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 03</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="newLevel1Modal" class="modal fade" tabindex="-1" role="dialog">
    @using (Html.BeginForm())
    {
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 1</h4>
            </div>
            <div class="modal-body">

                @Html.LinkVoltar("back", "Voltando")
                @Html.Label("Id (para testes)");
                @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Id);

                <div id="divCadastroIndicadores" style="display: table; border: 1px solid #ccc;">

                    <div style="padding: 5px; display:inline-table;">
                        <b>@Resources.Resource.indicator_name :</b>
                        @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Name, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
                    </div>
                    <br>
                    <div style="padding: 5px; display:inline-table;">
                        <b>@Resources.Resource.indicator_description :</b>
                        @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Description, htmlAttributes: new { @class = "", @style = "padding: 2px; width: 300px; background-color: rgb(255, 255, 255);" })
                    </div>

                    <div id="corpoIndicador" style="display: block; margin-top: 10px;">

                        <table>
                            <tbody>
                                <tr>
                                    <td>
                                        <b>@Resources.Resource.consolidation_type: </b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Definir o tipo da consolidação dentre os tipos padrões. Contadores do sistema serão baseados no tipo da consolidação.')">
                                    </td>
                                    <td>
                                        @Html.DropDownList("paramsDto.parLevel1Dto.ParConsolidationType_Id", Model.DdlParConsolidation, "Selecione o tipo de consolidacao", htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectConsolidacao" })
                                        @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                                            <option>Selecione o tipo de consolidacao</option>
                                            <option>por Tarefa (level 3)</option>
                                            <option>por monitormento (level 2)</option>
                                            <option>por outros</option>
                                        </select>*@
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Frequencia</b> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Frequencia.')">
                                    </td>
                                    <td>
                                        @Html.DropDownList("paramsDto.parLevel1Dto.ParFrequency_Id", Model.DdlFrequency, "Selecione a frequência", htmlAttributes: new { @class = "", @style = "padding: 2px;", @id = "selectFrequencia" })
                                        @*<select style="padding: 2px;" name="" id="selectConsolidacao">
                                            <option>Selecione o tipo de consolidacao</option>
                                            <option>por Tarefa (level 3)</option>
                                            <option>por monitormento (level 2)</option>
                                            <option>por outros</option>
                                        </select>*@
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Botão de salvar nos monitoramentos</b> <span class="labelUSA">(USA)</span> <input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão para salvar o level 2 sem inserir dados (sem não conformidades)')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SaveLevel2)
                                            <span><a></a></span>
                                        </label>
                                    </td>


                                </tr>

                                <tr>
                                    <td>
                                        <b>Botão Não Aplicado (N/A) nos monitoramentos</b> <span class="labelUSA">(USA)</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se haverá botão de N/A no level 2 para quando os mesmos não se aplicarem à auditoria')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.NoApplicableLevel2)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Agrupador de Monitoramentos</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.GroupLevel2)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Emite Alerta</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.Alert)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Permite cadastro especifico por unidade</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.Specific)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Permite editar campos do cabeçalho</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificHeaderField)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Permite editar numeros de avaliação</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificNumberEvaluetion)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Permite editar numeros de amostras</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificNumberSample)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <b>Permite editar vínculo com tarefas</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificLevel3)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>


                                <tr>
                                    <td>
                                        <b>Permite editar metodo indicador por unidade</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                                    </td>
                                    <td>
                                        <label class="on-off">
                                            @Html.EditorFor(model => model.paramsDto.parLevel1Dto.SpecificGoal)
                                            <span><a></a></span>
                                        </label>
                                    </td>
                                </tr>

                            </tbody>
                        </table>

                        <div style="width: 100%; float: left;">
                            <input type="button" Salvar o Indicador" style="font-size: small; padding: 10px; font-weight: bold;">
                        </div>

                    </div>

                </div>

            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel1Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <input type="button" id="btnSaveNewLevel1Modal" onclick="indexParamsLevel1.enviarDadosParaApi();" class="btn btn-primary" value="Save changes" />
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
    }
</div><!-- /.modal -->

<div id="newLevel2Modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 2</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel2Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnSaveNewLevel2Modal" class="btn btn-primary">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="newLevel3Modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 3</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel3Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnSaveNewLevel3Modal" class="btn btn-primary">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section scripts{
<script>

    $(".js-example-basic-single").select2();

    //level 1
    $("#newLevel1").click(function () {
        $('#newLevel1Modal').modal('show');
    });

    $("#btnCloseNewLevel1Modal").click(function () {
        $('#newLevel1Modal').modal('close');
    });

    //level 2
    $("#newLevel2").click(function () {
        $('#newLevel2Modal').modal('show');
    });

    $("#btnCloseNewLevel2Modal").click(function () {
        $('#newLevel2Modal').modal('close');
    });

    //level 3
    $("#newLevel3").click(function () {
        $('#newLevel3Modal').modal('show');
    });

    $("#btnCloseNewLevel3Modal").click(function () {
        $('#newLevel3Modal').modal('close');
    });

    var url1 = '@Html.Raw(@url)';

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    var indexParamsLevel1 = {

        enviarDadosParaApi: function (e) {

            var dados = $('form').serializeObject();

            $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                console.log(objetoReturn);
                console.log(statusmessage);
                console.log(respostaCompleta);
            });

        }

    }



</script>
}
