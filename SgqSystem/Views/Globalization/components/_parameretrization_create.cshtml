@model SgqSystem.ViewModels.ParamsViewModel
@{
    Layout = null;
    var url = Url.Action("AddUpdateLevel1", "api/ParamsApi"); //URL relativa
}


<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel1">New Level 1</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 01</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel2">New Level 2</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 02</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-3"><button class="btn btn-primary btn-block" id="newLevel3">New Level 3</button></div>
    <div class="col-xs-9">
        <div class="form-group">
            <label>Select the level</label>
            <select class="js-example-basic-single form-control select2">
                <option value="WY">CCA</option>
                <option value="AL">CFF</option>
                <option value="WY">HTP</option>
            </select>
        </div>
    </div>
    <hr />
    <div class="col-xs-12">
        <div class="widget-thumb widget-bg-color-white text-uppercase margin-bottom-20 bordered">
            <h4 class="widget-thumb-heading">Level 03</h4>
            <div class="widget-thumb-wrap">
                <i class="widget-thumb-icon bg-red icon-layers"></i>
                <div class="widget-thumb-body">
                    <span class="widget-thumb-subtitle">USD</span>
                    <span class="widget-thumb-body-stat" data-counter="counterup" data-value="1,293">1,293</span>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="newLevel1Modal" class="modal fade" tabindex="-1" role="dialog">
    @using (Html.BeginForm())
    {
    <div class="modal-dialog modal-lg"  role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 1</h4>
            </div>
            <div class="modal-body">

                @*@Html.LinkVoltar("back", "Voltando")
                @Html.Label("Id (para testes)");
                @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Id);*@
                
                <div class="row">
                    <div class="col-xs-6"><b>@Resources.Resource.level1_name: </b>
                    </div>
                    <div class="col-xs-6"> 
                        @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Name, htmlAttributes: new { @class = "form-control input-sm", @style = "" })
                    </div>                    
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.level1_description:</b>
                    </div>
                    <div class="col-xs-6">
                        @Html.TextBoxFor(m => m.paramsDto.parLevel1Dto.Description, htmlAttributes: new { @class = "form-control input-sm", @style = "" })
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b class="btQuestion"> @Resources.Resource.consolidation_type: </b> 
                        <i class="fa fa-question-circle popovers" data-container="body" data-trigger="hover" data-placement="bottom" data-content="@Resources.Resource.consolidation_type_popover" aria-hidden="true"></i>
                    </div>
                    <div class="col-xs-6">
                        @Html.DropDownList("paramsDto.parLevel1Dto.ParConsolidationType_Id", Model.paramsDdl.DdlParConsolidation, Resources.Resource.select_the_consolidation_type, htmlAttributes: new { @class = "form-control input-sm", @style = "", @id = "selectConsolidacao" })
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.frequency</b>
                    </div>
                    <div class="col-xs-6">
                        @Html.DropDownList("paramsDto.parLevel1Dto.ParFrequency_Id", Model.paramsDdl.DdlFrequency, "Selecione a frequência", htmlAttributes: new { @class = "form-control input-sm", @style = "", @id = "selectFrequencia" })
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.save_button_on_level2</b>
                        <i class="fa fa-question-circle popovers" data-container="body" data-trigger="hover" data-placement="bottom" data-content="@Resources.Resource.save_button_on_level2_popover" aria-hidden="true"></i>
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasSaveLevel2)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.not_applicable_on_level_2</b> <span class="labelUSA">(USA)</span>
                        <i class="fa fa-question-circle popovers" data-container="body" data-trigger="hover" data-placement="bottom" data-content="@Resources.Resource.not_applicable_on_level_2_popover" aria-hidden="true"></i>
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasNoApplicableLevel2)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.level2_group</b> <span class="labelUSA">USA</span>
                        <i class="fa fa-question-circle popovers" data-container="body" data-trigger="hover" data-placement="bottom" data-content="@Resources.Resource.level2_group_popover" aria-hidden="true"></i>
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasGroupLevel2)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.emit_warning</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.HasAlert)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>Permite cadastro especifico por unidade</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecific)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.allow_field_edition_of_the_header</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificHeaderField)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.allow_the_edition_of_the_evaluation_number</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberEvaluetion)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.allow_the_edition_of_the_sample_number </b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificNumberSample)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.allow_create_and_or_edit_of_tasks</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificLevel3)
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col-xs-6">
                        <b>@Resources.Resource.level2_group</b> <span class="labelUSA">USA</span>	<input class="btQuestion" type="button" value="?" onclick="getAlerta('Define se existirão agrupadores de Monitoramentos. Se sim, Abre uma lista para criar os grupos.')">
                    </div>
                    <div class="col-xs-6">
                        @Html.EditorFor(model => model.paramsDto.parLevel1Dto.IsSpecificGoal)
                    </div>
                </div>
                <br>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel1Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <input type="button" id="btnSaveNewLevel1Modal" onclick="indexParamsLevel1.enviarDadosParaApi();" class="btn btn-primary" value="Save changes" />
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
    }
</div><!-- /.modal -->

<div id="newLevel2Modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 2</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel2Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnSaveNewLevel2Modal" class="btn btn-primary">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div id="newLevel3Modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">New Level 3</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseNewLevel3Modal" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnSaveNewLevel3Modal" class="btn btn-primary">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script>

    $(".js-example-basic-single").select2();

    //level 1
    $("#newLevel1").click(function () {
        $('#newLevel1Modal').modal('show');
    });

    $("#btnCloseNewLevel1Modal").click(function () {
        $('#newLevel1Modal').modal('close');
    });

    //level 2
    $("#newLevel2").click(function () {
        $('#newLevel2Modal').modal('show');
    });

    $("#btnCloseNewLevel2Modal").click(function () {
        $('#newLevel2Modal').modal('close');
    });

    //level 3
    $("#newLevel3").click(function () {
        $('#newLevel3Modal').modal('show');
    });

    $("#btnCloseNewLevel3Modal").click(function () {
        $('#newLevel3Modal').modal('close');
    });

    var url1 = '@Html.Raw(@url)';

    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    var indexParamsLevel1 = {

        enviarDadosParaApi: function (e) {

            var dados = $('form').serializeObject();

            $.post(url1, dados, function (objetoReturn, statusmessage, respostaCompleta) {
                console.log(objetoReturn);
                console.log(statusmessage);
                console.log(respostaCompleta);
            });

        }

    }



</script>

