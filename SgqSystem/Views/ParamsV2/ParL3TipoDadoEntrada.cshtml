<h3 class="titulo2">Tipo de dados de entrada</h3>

<form id="ParL3TipoDado">

    <br />
    <div class="row" data-form>

        <div class="col-sm-12">

            <input type="hidden" name="ParLevel3_Id" data-id />
            <input type="hidden" name="IsActive" value="true" data-notnull />

            <div class="form-group">
                <label for="ParLevel3InputType_Id">Tipo do dado:</label>
                <select id="selectL3TipoDadoParLevel3InputType" class="input input-lg col-sm-12 required" name="ParLevel3InputType_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="ParLevel1_Id">Indicador:</label>
                <select id="selectL3TipoDadoParLevel1" class="input input-lg col-sm-12 required" name="ParLevel1_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="ParLevel2_Id">Monitorador:</label>
                <select id="selectL3TipoDadoParLevel2" class="input input-lg col-sm-12 required" name="ParLevel2_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">
            <div class="form-group">
                <label for="ParCompany_Id">Empresa:</label>
                <select id="selectL3TipoDadoParCompany" class="input input-lg col-sm-12 required" name="ParCompany_Id"></select>
            </div>
        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="ParLevel3BoolTrue_Id">Valor positivo:</label>
                <select id="selectL3TipoDadoParLevel3BoolTrue" class="input input-lg col-sm-12 required" name="ParLevel3BoolTrue_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="ParLevel3BoolFalse_Id">Valor negativo:</label>
                <select id="selectL3TipoDadoParLevel3BoolFalse" class="input input-lg col-sm-12 required" name="ParLevel3BoolFalse_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="ParMeasurementUnit_Id">Unidade de medida:</label>
                <select id="selectL3TipoDadoParMeasurementUnit" class="input input-lg col-sm-12 required" name="ParMeasurementUnit_Id"></select>
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="IntervalMin">Limite inferior:</label>
                <input type="text" class="form-control required" id="IntervalMin" name="IntervalMin">
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="IntervalMax">Limite superior:</label>
                <input type="text" class="form-control required" id="IntervalMax" name="IntervalMax">
            </div>

        </div>

        <div class="col-sm-4">

            <div class="form-group">
                <label for="DynamicValue">Equação:</label>
                <input type="text" class="form-control required" id="DynamicValue" name="DynamicValue">
            </div>

        </div>

        <div class="col-sm-2">

            <div class="form-group" data-action>
                <label></label>
                <button class="form-control btn btn-primary" data-add>+</button>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <table id="tableParL3TipoDado" class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th class="col-sm-2">
                            Tipo do campo
                        </th>
                        <th class="col-sm-1">
                            Empresa
                        </th>
                        <th class="col-sm-2">
                            Indicador
                        </th>
                        <th class="col-sm-2">
                            Monitoramento
                        </th>
                        <th class="col-sm-1">
                            Intervalo Minimo
                        </th>
                        <th class="col-sm-1">
                            Intervalo Máximo
                        </th>
                        <th class="col-sm-1">
                            Equação
                        </th>
                        <th class="col-sm-2">

                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</form>

<script>

    var ParL3TipoDado = {

        //paramtros
        id: 'ParL3TipoDado',
        urlSave: '@Url.Action("PostParTipoDado", "api/ParLevel3Api")',

        load: function (list) {

            let id = this.id;
            let urlSave = this.urlSave;

            apagaCampos(id);
            setInputsInputTypeHidden();

            $('table#table' + id + ' tbody').html('');

            $(list).each(function (i, o) {

                var html = '<tr>';
                html += '<td>' + valorDoSelect('#ParL3TipoDado select[name="ParLevel3InputType_Id"]', o.ParLevel3InputType_Id, 'Todos') + '</td>';
                html += '<td>' + valorDoSelect('#ParL3TipoDado select[name="ParCompany_Id"]', o.ParCompany_Id, 'Todos') + '</td>';
                html += '<td>' + valorDoSelect('#ParL3TipoDado select[name="ParLevel1_Id"]', o.ParLevel1_Id, 'Todos') + '</td>';
                html += '<td>' + valorDoSelect('#ParL3TipoDado select[name="ParLevel2_Id"]', o.ParLevel2_Id, 'Todos') + '</td>';
                html += '<td>' + (o.IntervalMin == null ? "" : o.IntervalMin) + '</td>';
                html += '<td>' + (o.IntervalMax == null ? "" : o.IntervalMax) + '</td>';
                html += '<td>' + (o.DynamicValue == null ? "" : o.DynamicValue) + '</td>';
                html += '<td><button class="btn btn-sm btn-success" data-table-edit><i class="fa fa-pencil" alt="Editar"></i></button><button class="btn btn-sm btn-danger" data-table-delete alt="Excluir"><i class="fa fa-trash-o"></i></button></td>';
                html += '</tr>';

                $('table#table' + id + ' tbody').append(html);
                $('table#table' + id + ' tbody tr:last').data('sgq', o);

            });

            function Save(obj) {

                $.ajax({
                    url: urlSave,
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify(obj),
                    contentType: "application/json",
                    success: function (data) {
                        openMessageModal("Feito", "Dados Salvos");
                        $('#selectL3').trigger('change');
                        closeLoader();

                    },
                    error: function (request, error) {
                        closeLoader();
                        openMessageModal("Ocorreu um erro", JSON.stringify(request));
                        console.log(error)
                    }
                });
            }

            $('#' + id).off('click');

            //Adicionar os dados no data-form
            $('#' + id).on('click', '[data-table-edit]', function (e) {

                var obj = $(this).parents('tr').data('sgq');

                apagaCampos(id);
                preencheCampos(id + ' [data-form]', '', obj);

                $('#' + id + ' [data-form]').data('sgq', obj);
                $('#' + id + ' [data-form]').addClass('alert alert-success');
                $('#' + id + ' [data-form] [data-action] [data-add]').addClass('hide');

                $('#' + id + ' [data-form] [data-action]').append('<button class="form-control btn btn-success" data-edit>Salvar</button>');
                $('#' + id + ' [data-form] [data-action]').append('<button class="form-control btn btn-danger" data-cancel>Cancelar</button>');

            });

            //Adicionar os dados no data-form
            $('#' + id).on('click', '[data-table-delete]', function (e) {

                var r = confirm("Deseja Excluir?");

                if (r == false) {
                    return false;
                }

                var obj = $(this).parents('tr').data('sgq');
                obj.IsActive = false;
                Save(obj);
            });

            $('#' + id).on('click', '[data-cancel]', function (e) {
                apagaCampos(id);
            });

            //Salvar o campo editado ou cria um novo
            $('#' + id).on('click', '[data-edit],[data-add]', function (e) {               

                var obj = $('#' + id + ' [data-form]').data('sgq');
                var formdata = $('#' + id + ' [data-form]').serializeFormToObjetc();

                if (!(typeof (obj) == 'undefined')) {
                    obj = atualizaValoresDoObjeto(obj, formdata);
                } else {
                    obj = null;
                    obj = atualizaValoresDoObjeto(obj, formdata);
                }

                if (!formIsValid(id)) {
                    return false;
                }

                if (formIsDuplicate()) {
                    return false;
                }          

                if (!intervalIsValid(obj)) {
                    return false;
                }


                openLoader(Resources("please_wait"));

                Save(obj);
            });           

            $('#' + id + ' #selectL3TipoDadoParLevel3InputType').on('change', function () {

                setInputsInputTypeHidden();

                let parLevel3InputType_Id = parseInt($(this).val());

                switch (parLevel3InputType_Id) {

                    case 1: //Binário
                    case 6: //Binario Com Texto
                    case 12: //Binário Obrigatório

                        showInput('selectL3TipoDadoParLevel3BoolTrue');
                        showInput('selectL3TipoDadoParLevel3BoolFalse');

                        break;

                    case 3: //Intervalos
                    case 4: //Calculado
                    case 9: //Intervalo com Observação

                        showInput('selectL3TipoDadoParMeasurementUnit');
                        showInput('IntervalMin');
                        showInput('IntervalMax');

                        break;

                    case 7: //Intervalo em Minutos
                    case 8: //Escala Likert

                        showInput('IntervalMin');
                        showInput('IntervalMax');

                        break;

                    case 2: //Número de defeitos

                        showInput('IntervalMax');

                        break;

                    case 5: //Texto
                    case 11: //Observação

                        //Não exibe nada
                        break;

                    case 10: //Resultado

                        showInput('IntervalMin');
                        showInput('IntervalMax');
                        showInput('DynamicValue');

                        break;

                    default:
                }

            });


            let formIsDuplicate = function () {               

                var obj = $('#' + id +'  [data-form]').data('sgq');
                var formdata = $('#' + id +' [data-form]').serializeFormToObjetc();

                if (!(typeof (obj) == 'undefined')) {
                    obj = atualizaValoresDoObjeto(obj, formdata);
                } else {
                    obj = null;
                    obj = atualizaValoresDoObjeto(obj, formdata);
                }

                let ParLevel3Value = [];

                $('#tableParL3TipoDado tbody tr').each(function () {
                    ParLevel3Value.push($(this).data('sgq'));
                });

                let isDuplicate = ParLevel3Value.filter((item) => {

                    return (item.Id != obj.Id &&
                        item.ParCompany_Id == obj.ParCompany_Id &&
                        item.ParLevel1_Id == obj.ParLevel1_Id &&
                        item.ParLevel2_Id == obj.ParLevel2_Id);

                }).length > 0;

                if (isDuplicate) {
                    openMessageModal("Alerta", "Já existe um Tipo de entrada para esta Unidade, Indicador e Monitoramento!")
                }

                return isDuplicate;

            }

            let intervalIsValid = function (obj) {

                let isValid = true;

                if (obj.ParLevel3InputType_Id == 3 ||
                    obj.ParLevel3InputType_Id == 7 ||
                    obj.ParLevel3InputType_Id == 8 ||
                    obj.ParLevel3InputType_Id == 9) {

                    if (parseFloat(obj.IntervalMax) < parseFloat(obj.IntervalMin)) {
                        openMessageModal("Alerta", "O valor de  Intervalo Minímo deve ser menor que o valor Máximo");
                        isValid = false;
                    }
                }

                return isValid;
            }
        },
    };

    let setInputsInputTypeHidden = function () {

        hideInput('selectL3TipoDadoParLevel3BoolTrue');
        hideInput('selectL3TipoDadoParLevel3BoolFalse');
        hideInput('selectL3TipoDadoParMeasurementUnit');
        hideInput('IntervalMin');
        hideInput('IntervalMax');
        hideInput('DynamicValue');
    }

    let hideInput = function (id) {
        $('#' + id).parent().parent().hide();
    }

    let showInput = function (id) {
        $('#' + id).parent().parent().show();
    }

</script>