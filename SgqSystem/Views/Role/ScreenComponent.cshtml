@using SgqSystem.Helpers
<div>
    <button class="btn btn-primary" onclick="indexScreenComponent.openNewComponent()">@Resources.Resource.new_component</button>

    <table class="table margin-top">
        <thead>
            <tr>
                <th style="width:20%">@Resources.Resource.hashkey</th>
                <th style="width:20%">@Resources.Resource.component</th>
                <th style="width:15%">@Resources.Resource.type</th>
            </tr>
        </thead>
        <tbody>
            @*@if (Model.paramsDto.parLevel1Dto.cabecalhosInclusos != null)
            {
                foreach (var parLevel1XHeaderField in Model.paramsDto.parLevel1Dto.cabecalhosInclusos)
                {

                    <tr class="alteracao">
                        @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 1)
                        {
                            <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>

                                                                    @Html.DropDownList("DropDownList", parLevel1XHeaderField.ParHeaderField.DropDownList, htmlAttributes: new { @class = "form-control input-sm fixed-width", @id = parLevel1XHeaderField.ParHeaderField.Id })
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @disabled = "disabled" })
                                                                </td>

                        }


                        @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 3)
                        {
                            <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    @foreach (var radioOpt in parLevel1XHeaderField.ParHeaderField.ParMultipleValues)
                                                                    {
                                                                        <label>@radioOpt.Name</label>
                                                                        @Html.RadioButton("removerParHeaderField", true, new { @class = "" });
                                                                    }
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                        }

                        @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 4)
                        {
                            <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    @Html.TextBox("a", null, new { @class = "fixed-width form-control input-sm" })
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                        }

                        @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 5)
                        {
                            <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    <input type="number" class="fixed-width form-control input-sm" />
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                        }
                        @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 6)
                        {
                            <td>@parLevel1XHeaderField.ParHeaderField.ParLevelDefiniton.Name</td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.Name </td>
                                                                <td>@parLevel1XHeaderField.ParHeaderField.ParFieldType.Name</td>
                                                                <td>
                                                                    <input type="text" class="dataInput active form-control input-sm">
                                                                    @Html.Hidden("paramsDto.parLevel1Dto.removerParHeaderField", parLevel1XHeaderField.Id, htmlAttributes: new { @class = "", @disabled = "disabled" })
                                                                </td>
                        }
                        <td>
                            <button type="button" class="btn btn-danger btn-xs" onclick="Cabecalhos.RemoveCabecalhoEDICAO($(this));"><i class="fa fa-times"></i></button>
                            <button type="button" id="required" class="btn btn-danger btn-xs" onclick="Cabecalhos.SetRequired($(this), @parLevel1XHeaderField.ParHeaderField.Id);">
                                @if (parLevel1XHeaderField.ParHeaderField.IsRequired != null)
                                {
                                    if (parLevel1XHeaderField.ParHeaderField.IsRequired.Value)
                                    {
                                        @Html.Label("Obrigatório")
                                    }
                                    else
                                    {
                                        @Html.Label("Não Obrigatório")
                                    }
                                }
                                else
                                {
                                    @Html.Label("Não Obrigatório")
                                }
                            </button>

                        </td>
                        <td>
                            @if (parLevel1XHeaderField.ParHeaderField.ParFieldType_Id == 1)
                            {
                                <div class="input-group">
                                    <div class="input-group-btn">
                                        <select class="form-control input-sm" id="@parLevel1XHeaderField.ParHeaderField_Id">
                                            <option value="0" selected>Nenhum</option>
                                            @foreach (var radioOpt in parLevel1XHeaderField.ParHeaderField.ParMultipleValues)
                                            {
                                                if (radioOpt.IsDefaultOption == true)
                                                {
                                                    <option value="@radioOpt.Id" selected>@radioOpt.Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@radioOpt.Id">@radioOpt.Name</option>
                                                }
                                            }
                                        </select>
                                        <button type="button" onclick="Cabecalhos.SetMultipleDefault($(this));" class="btn btn-default btn-sm"><i class="fa fa-check" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            }

                        </td>



                    </tr>
                }
            }*@

        </tbody>
        <tfoot>

        </tfoot>
    </table>

    <div class="modal fade" id="modalScreenComponent" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">@Resources.Resource.new_component</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12">
                            <form id="formScreenComponent">
                                <div class="form-group hide">
                                    <label>@Resources.Resource.id</label>
                                    <input name="screenComponentDto.Id" class="form-control input-sm">
                                </div>
                                <div class="form-group">
                                    <label>@Resources.Resource.hashkey</label>
                                    <input name="screenComponentDto.HashKey" class="form-control input-sm">
                                </div>
                                <div class="form-group">
                                    <label>@Resources.Resource.component</label>
                                    <input name="screenComponentDto.Component" class="form-control input-sm">
                                </div>
                                <div class="form-group">
                                    <label>@Resources.Resource.type</label>
                                    <select name="screenComponentDto.Type" class="form-control input-sm">

                                    </select>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resource.close</button>
                    <button type="button" class="btn btn-primary" onclick="indexScreenComponent.saveComponent()">@Resources.Resource.save</button>
                </div>
            </div>
        </div>
    </div>


</div>

<script>

    var indexScreenComponent = {
        openNewComponent: function () {
            $('#modalScreenComponent').modal();
        },
        saveComponent: function () {

        }

    };

</script>