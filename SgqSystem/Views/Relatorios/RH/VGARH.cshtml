@model SgqSystem.ViewModels.FormularioParaRelatorioViewModel
@using DTO
@{
    Layout = "~\\Views\\RelatoriosSgq\\_FilterReports.cshtml";
    ViewBag.Title = Resources.Resource.general_view_of_the_area; ;

    var urlGet = Url.Action("GetApontamentosDiariosRH", "api/ApontamentosDiarios");

    ViewBag.ShowCurrentDate = false;
    ViewBag.ShowRangeDate = true;
    ViewBag.ShowParStructure = true;
    ViewBag.ShowParCompany = true;
    ViewBag.ShowShift = true;
    ViewBag.ShowParDepartment = true;
    ViewBag.ShowParSecao = true;
    ViewBag.ShowParCargo = true;
    ViewBag.ShowParCriticalLevel = true;
    ViewBag.ShowParLevel1 = false;
    ViewBag.ShowParLevel2 = false;
    ViewBag.ShowParLevel3 = false;
    ViewBag.ShowParCluster = true;
    ViewBag.ShowParClusterGroup = true;
    ViewBag.ShowParStructureGroup = true;
}

@section Content {

    <div class="page-content-wrapper">
        <div class="page-content">
            <div class="col-sm-12">
                <div id="container" style="height: 800px; min-width: 310px; max-width: 1000px; margin: 0 auto"></div>
                <div id="container2" style="height: 800px; min-width: 310px; max-width: 1000px; margin: 0 auto"></div>
            </div>
        </div>
    </div>

}


@section Scripts {

    <script type="text/javascript">


        var urlGet = '@Html.Raw(@urlGet)';

        function enviarFiltro() {
            openLoader('Aguarde...');
            $('#resultsApontamentos').empty();
            $('#divApontamentosDiarios').empty();

            $('#divTable').hide();

            $.ajax({
                url: urlGet,
                type: 'post',
                data: JSON.stringify(objFiltro),
                dataType: "JSON",
                contentType: "APPLICATION/JSON; CHARSET=UTF-8",
                beforeSend: function () {
                }
            })
            .done(function (data) {
                GerarGraficoBolha(data);
                closeLoader();
            })
            .fail(function (jqXHR, textStatus, msg) {
                console.log(msg);
                preencheRetornoGrafico("Ocorreu um erro ao buscar os dados. Erro: " + msg);
                closeLoader();
            });
        }

        function GerarGraficoBolha(data) {

            Highcharts.chart('container', {

                chart: {
                    type: 'bubble',
                    plotBorderWidth: 1,
                    zoomType: 'xy',

                },

                legend: {
                    enabled: true
                },

                title: {
                    text: 'Nível 4 Regional 1 - Gravidade x Frequência (Oficial)'
                },

                subtitle: {
                    text: 'Negócio Friboi - 1º semestre 2019'
                },

                xAxis: {
                    gridLineWidth: 1,
                    title: {
                        text: 'Gravidade'
                    },
                    labels: {
                        format: '{value}'
                    }

                },

                yAxis: {
                    startOnTick: false,
                    endOnTick: false,
                    title: {
                        text: 'Frequência'
                    },
                    labels: {
                        format: '{value}'
                    },
                    maxPadding: 0.2

                },

                tooltip: {
                    useHTML: true,
                    headerFormat: '<table>',
                    pointFormat: '<tr><th colspan="2"><h3>{point.country}</h3></th></tr>' +
                        '<tr><th>Frequência:</th><td>{point.y}</td></tr>' +
                        '<tr><th>Gravidade:</th><td>{point.x}</td></tr>'+
                        '<tr><th>Número de acidentes:</th><td>{point.z}</td></tr>',
                    footerFormat: '</table>',
                    followPointer: true
                },

                plotOptions: {
                    series: {
                        dataLabels: {
                            enabled: true,
                            format: '{point.name}'
                        }
                    }
                },

                series: [

                        {name: 'JUI', data: [ { x: 71, y: 93.2, z: 24.7, name: 'JUI', country: 'Juína' }]},
                        {name: 'PEL', data: [{ x: 69.2, y: 57.6, z: 10.4, name: 'PEL', country: 'Pontes e Lacerda' }]},
                        {name: 'TCM', data: [{ x: 68.6, y: 20, z: 16, name: 'TCM', country: 'Tucumâ' }]},
                        {name: 'RED', data: [{ x: 65.5, y: 126.4, z: 35.3, name: 'RED', country: 'Redenção' }]},
                        {name: 'BTS', data: [{ x: 65.4, y: 50.8, z: 28.5, name: 'BTS', country: 'Barretos' }]},
                        {name: 'PIB', data: [{ x: 63.4, y: 51.8, z: 15.4, name: 'PIB', country: 'Pimenta Bueno' }]},
                        {name: 'CFS', data: [{ x: 64, y: 82.9, z: 31.3, name: 'CFS', country: 'Confresa' }]},
                        {name: 'ATO', data: [{ x: 95, y: 95, z: 13.8, name: 'ATO', country: 'Anastácio' }]},
                        {name: 'PVH', data: [{ x: 86.5, y: 102.9, z: 14.7, name: 'PVH', country: 'Porto Velho' }]},
                        {name: 'BAR', data: [{ x: 80.8, y: 91.5, z: 15.8, name: 'BAR', country: 'Barra do Garça' }]},
                        {name: 'LIN', data: [{ x: 80.4, y: 102.5, z: 12, name: 'LIN', country: 'Lins' }]},
                        {name: 'JUA', data: [{ x: 80.3, y: 86.1, z: 11.8, name: 'JUA', country: 'Juara' }]},
                        {name: 'RED', data: [{ x: 78.4, y: 70.1, z: 16.6, name: 'RED', country: 'Redenção' }]},
                        {name: 'DMT', data: [{ x: 74.2, y: 68.5, z: 14.5, name: 'DMT', country: 'Diamantino' }]},
                        {name: 'NVR', data: [{ x: 73.5, y: 83.1, z: 10, name: 'NVR', country: 'Naviraí' }]}
                ]

            });

            Highcharts.chart('container2', {
                title: {
                    text: 'Combination chart'
                },
                xAxis: {
                    categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
                },
                labels: {
                    items: [{
                        html: 'Total fruit consumption'
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Jane',
                    data: [3, 2, 1, 3, 4]
                }, {
                    type: 'column',
                    name: 'John',
                    data: [2, 3, 5, 7, 6]
                }, {
                    type: 'column',
                    name: 'Joe',
                    data: [4, 3, 3, 9, 0]
                }, {
                    type: 'spline',
                    name: 'Average',
                    data: [3, 2.67, 3, 6.33, 3.33],
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }, {
                    type: 'spline',
                    name: 'Average',
                    data: [10, 1.67, 0, 9.33, 8.33],
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }]
            });

        }
    </script>

}
