@model SgqSystem.ViewModels.ContextExampleViewModel

@{

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TipoosDeInputSgq</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>ContextExampleViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @* 
                ADDDATE e ALTER Date devem ser tratado quando possivel com PRIORIDADE no CONTROLLER/DOMINIO.
             *@
            @*<div class="form-group">
                @Html.LabelFor(model => model.AddDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddDate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.AlterDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AlterDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlterDate, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            @*
                INPUT INTEGER
            *@
            <div class="form-group">
                @Html.LabelFor(model => model.IntegerProp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.IntegerProp, new { htmlAttributes = new { @class = "form-control integer" } })
                    @Html.ValidationMessageFor(model => model.IntegerProp, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @* 
                INPUT DECIMAL
             *@
            <div class="form-group">
                @Html.LabelFor(model => model.DecimalProp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DecimalProp, Model.DecimalProp.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture), new { htmlAttributes = new { @class = "form-control decimal" } })
                    @Html.ValidationMessageFor(model => model.DecimalProp, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*
                INPUT FLOAT
            *@
            <div class="form-group">
                @Html.LabelFor(model => model.FloatProp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FloatProp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FloatProp, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*
                INPUT DATETIME
            *@
            <div class="form-group">
                @Html.LabelFor(model => model.DateTimeProp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateTimeProp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateTimeProp, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>

<script>

    /*UTILIZE A CLASSE NO INPUT*/
    //$('#IntegerProp').inputmask("integer", { rightAlign: false });
    //$('#DecimalProp').inputmask("decimal", { rightAlign: false });

</script>