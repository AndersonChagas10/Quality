@model Dominio.VolumeCepDesossa

@{
    ViewBag.Title = "CEP Dessosa - Volume";
}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                    <a href="@Url.Action("Index", "CepDesossas")">Volume de @Resources.Resource.cep_desossa</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>Cadastro</span>
                </li>
            </ul>
            <div class="page-toolbar">
                <!--<div id="dashboard-report-range" class="pull-right tooltips btn btn-fit-height green" data-placement="top" data-original-title="Change dashboard date range">-->
                @*<div id="dashboard-report-range" class="pull-right tooltips btn btn-fit-height green">
                    <i class="fa fa-calendar"></i>&nbsp;
                    <span class="thin uppercase" id="currentDate"></span>&nbsp;
                </div>*@
            </div>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.cep_desossa</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">

                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        
                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.Indicador, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Indicador, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Indicador, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                       
                                        
                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.Unidade, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Unidade, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Unidade, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                            
                                        @{ Html.EnableClientValidation(false); }
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2 ignore" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @{ Html.EnableClientValidation(true); }
                                        
                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.Departamento, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                        

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCompany_id, "Unidade", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ParCompany_id", new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), Resources.Resource.select + "...", new { @class = "form-control" })                                            
                                                @*@Html.DropDownList("ParCompany_id", null, htmlAttributes: new { @class = "form-control" })*@
                                                @Html.ValidationMessageFor(model => model.ParCompany_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @*<div class="form-group">
                                            @Html.LabelFor(model => model.ParLevel1_id, "Indicador", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("ParLevel1_id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParLevel1_id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.HorasTrabalhadasPorDia, "Horas trabalhadas por dia", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.HorasTrabalhadasPorDia, new { @class = "form-control" } )
                                                @Html.ValidationMessageFor(model => model.HorasTrabalhadasPorDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AmostraPorDia, "Amostra por dia", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <select id="AmostraPorDia" name="AmostraPorDia" class="form-control valid">
                                                    <option value="60">60</option>
                                                    <option value="120">120</option>
                                                    <option value="240">240</option>
                                                    <option value="450">450</option>
                                                    <option value="900">900</option>
                                                    <option value="1800">1800</option>
                                                </select>
                                                @*@Html.EditorFor(model => model.AmostraPorDia, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.AmostraPorDia, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.QtdadeFamiliaProduto, "Número de famílias cadastradas", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(model => model.QtdadeFamiliaProduto, new {  @class = "form-control", @readonly = "true" } )
                                                @Html.ValidationMessageFor(model => model.QtdadeFamiliaProduto, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        
                                        

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Avaliacoes, "Avaliações", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Avaliacoes, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                                @Html.ValidationMessageFor(model => model.Avaliacoes, "", new { @class = "text-danger" })
                                                @*@Html.HiddenFor(model => model.Avaliacoes, htmlAttributes: new { @id = "avaliacaoHidden" })*@
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amostras, "Amostras por Avaliação", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Amostras, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                                                @Html.ValidationMessageFor(model => model.Amostras, "", new { @class = "text-danger" })
                                                @*@Html.HiddenFor(model => model.Amostras, htmlAttributes: new {@id = "amostraHidden" })*@
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Salvar" onclick="habilitar()" class="btn btn-primary" />
                                                @Html.ActionLink("Voltar para Volume de CEP Desossa", "Index", null, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                }

                             
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
<script>

    $(document).ready(function() {
        $('#QtdadeFamiliaProduto').val("");
        $('#ParCompany_id').on('change', function () {
            if ($('#ParCompany_id').val() > 0) {
                $.post('@Url.Action("GetVolumeDesossa", "api/Volume")' + "/" + $('#ParCompany_id').val(), {}, function (r) {
                    $('#QtdadeFamiliaProduto').val(r);
                    applyMath();
                });
            } else {
                $('#QtdadeFamiliaProduto').val("");
            }
        });
        $('#ParCompany_id').change();
    })


    function IsValid() {

        if ($('#Data').val().length > 0) {
            
            return false;
        }
        if ($('#ParCompany_id :selected').val() > 0) {

            return false;
        }
        if ($('#ParLevel1_id :selected').val() > 0) {

            return false;
        }
        if ($('#HorasTrabalhadasPorDia').val().length > 0) {

            return false;
        }
        if ($('#AmostraPorDia :selected').val() > 0) {

            return false;
        }
        if ($('#QtdadeFamiliaProduto').val().length > 0) {

            return false;
        }

    }

    $('#QtdadeFamiliaProduto').inputmask("integer", { rightAlign: false  });
    $('#HorasTrabalhadasPorDia').inputmask("integer", { rightAlign: false , min:0, max:24 });

    //$('input[name="birthdate"]').daterangepicker({
    //    singleDatePicker: true,
    //    showDropdowns: true
    //},
    //function (start, end, label) {
    //    var years = moment().diff(start, 'years');
    //    alert("You are " + years + " years old.");
    //});

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");
    navbarSelect("navbar6");

    $('#HorasTrabalhadasPorDia').on('input', function () {        
        $('#Avaliacoes').val($(this).val());
        //$('#avaliacaoHidden').val($(this).val());
        applyMath();
    });

    $('#AmostraPorDia, #QtdadeFamiliaProduto').on('input', function () {
        applyMath();
    });

    function habilitar() {

        $('#Avaliacoes').attr('disabled', false)
        $('#Amostras').attr('disabled', false)
    }

    $(document).ready(function () {

        $('#Data').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            'locale': {
                "format": "DD/MM/YYYY",
            }
        })
        $('#Avaliacoes').val($('#HorasTrabalhadasPorDia').val());
        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));

    });

    //TASK FORCE
    function applyMath() {
        $('#Amostras').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val() ));
        //$('#amostraHidden').val(Math.ceil(($('#AmostraPorDia').val() / $('#QtdadeFamiliaProduto').val()) / $('#HorasTrabalhadasPorDia').val()));
    }

</script>
<script>

    $(".sidebar-toggler").removeClass("hide");
    $(".page-sidebar-wrapper").removeClass("hide");
    navbarSelect("navbar7");

    $(document).ready(function () {
        closeLeftSidebar();
    });

</script>