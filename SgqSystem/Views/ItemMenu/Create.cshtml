@model DTO.DTO.ItemMenuDTO

@{
    ViewBag.Title = Resources.Resource.item_menu;
}

<div class="page-content-wrapper">
    <div class="page-content">
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "ItemMenu")">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <a href="@Url.Action("Index", "RoleUserSgq")">@Resources.Resource.item_menu</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource._novo</span>
                </li>
            </ul>
            <div class="page-toolbar">
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.item_menu</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">

                            <div class="tab-pane active" id="setup_tab">
                                @using (Html.BeginForm())
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @if (Model != null)
                                        {
                                            @Html.HiddenFor(model => model.Id)
                                        }

                                        <div class="form-group">
                                            @Html.Label(Resources.Resource.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.Label(Resources.Resource.icon, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.Label(Resources.Resource.url, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.Label(Resources.Resource.resource, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Resource, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Resource, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.Label(Resources.Resource.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsActive)
                                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="@Resources.Resource.save" class="btn btn-primary" />
                                                @Html.ActionLink(Resources.Resource.back, "Index", null, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        $.fn.bootstrapSwitch.defaults.size = 'small';
        $.fn.bootstrapSwitch.defaults.onText = '@Resources.Resource.yes';
        $.fn.bootstrapSwitch.defaults.offText = '@Resources.Resource.no';
        $("[type='checkbox']").bootstrapSwitch();

        $("#RoleUserSgqXItemMenuDTO").select2();

    });
</script>