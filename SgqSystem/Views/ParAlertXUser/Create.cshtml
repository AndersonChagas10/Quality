@model Dominio.ParAlertXUser

@{
    ViewBag.Title = Resources.Resource.create;
}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                    <a href="@Url.Action("Details", "ParAlert", new { id = ViewBag.ParAlertId })">@Resources.Resource.alert X Usuário</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource.create</span>
                </li>
            </ul>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.create @Resources.Resource.alert X Usuário</span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">
                                @using (Html.BeginForm("Create","ParAlertXUser", FormMethod.Post, new { @id = "filterReports" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.ParAlert_Id)

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCompany_Ids, "Unidade", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <button id="btnBuscarUnidade" type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="select[name=ParCompany_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParCompany", "api/Formulario")">
                                                    Abrir
                                                </button>
                                                <select class="form-control" id="ParCompany_Ids" name="ParCompany_Ids"></select>
                                                @Html.ValidationMessageFor(model => model.ParCompany_Ids, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UserSgq_Id, "Usuário", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <button id="btnBuscarUsuario" type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="select[name=UserSgq_Id]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredUserSgqByCompany", "api/Formulario")">
                                                    Abrir
                                                </button>
                                                <select class="form-control" id="UserSgq_Id" name="UserSgq_Id"></select>
                                                @Html.ValidationMessageFor(model => model.UserSgq_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsActive, Resources.Resource.active as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsActive)
                                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="@Resources.Resource.create" class="btn btn-primary" />
                                                @Html.ActionLink(Resources.Resource.back_to_list as string, "Details", "ParAlert", new { id = ViewBag.ParAlertId }, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
<script src="~/Scripts/Select3/select3.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $("#IsActive").prop('checked', true);

    $('#filterReports select').on('change', function () {
        atualizaObjFiltro();
    });

    var dataFiltro = [];
    var objFiltro = { Param: {} };

    function atualizaObjFiltro() {
        var objFiltroParam = objFiltro.Param;
        objFiltro = $('#filterReports').serializeObject();
        $(Object.keys(objFiltro)).each(function (i, o) {
            if (o.indexOf("Date") < 0) {
                objFiltro[o] = Array.isArray(objFiltro[o]) ? objFiltro[o] : [objFiltro[o]];
            }
        });
        objFiltro.Param = objFiltroParam;
    }

    Select3.initialize(function () { return objFiltro });
</script>
