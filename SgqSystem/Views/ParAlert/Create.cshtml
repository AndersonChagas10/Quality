@model Dominio.ParAlert


@{
    /**/

    /**/

    ViewBag.Title = Resources.Resource.create;
}


<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->
        <!-- BEGIN PAGE BAR -->
        <div class="page-bar">
            <ul class="page-breadcrumb">
                <li>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                    <i class="fa fa-angle-right"></i>
                    <a href="@Url.Action("Index", "ParAlert")">@Resources.Resource.alert</a>
                    <i class="fa fa-angle-right"></i>
                </li>
                <li>
                    <span>@Resources.Resource.create</span>
                </li>
            </ul>
        </div>
        <!-- END PAGE BAR -->
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-xs-12">
                <div class="portlet light bordered">
                    <div class="portlet-title tabbable-line">
                        <div class="caption">
                            <i class="icon-share font-dark"></i>
                            <span class="caption-subject font-dark bold uppercase">@Resources.Resource.create @Resources.Resource.alert </span>
                        </div>
                    </div>
                    <div class="portlet-body">
                        <div class="tab-content">
                            <div class="tab-pane active" id="setup_tab">
                                @using (Html.BeginForm("Create", "ParAlert", FormMethod.Post, new { @id = "filterReports" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, Resources.Resource.name as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                @Html.TextBoxFor(model => model.Name, null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCompany_Id, Resources.Resource.unit as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <button id="btnBuscarUnidade" type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="select[name=ParCompany_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParCompany", "api/Formulario")">
                                                    Abrir
                                                </button>
                                                <select class="form-control" id="idSelectedParCompany" name="ParCompany_Ids"></select>
                                            </div>
                                            @Html.HiddenFor(model => model.ParCompany_Id)
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParDepartment_Id, Resources.Resource.costcenter as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <button id="btnBuscarDepartamentos" type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="select[name=ParSecao_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParDepartmentFilho", "api/Formulario")">
                                                    Abrir
                                                </button>
                                                <select class="form-control" name="ParSecao_Ids"></select>
                                            </div>
                                            @Html.HiddenFor(model => model.ParDepartment_Id)
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParCargo_Id, "Cargo", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <button type="button"
                                                        data-filtroselect3-btn
                                                        data-filtroselect3-select="select[name=parCargo_Ids]"
                                                        data-filtroselect3-url="@Url.Action("GetFilteredParCargo", "api/Formulario")">
                                                    Abrir
                                                </button>
                                                <select class="form-control" name="parCargo_Ids"></select>
                                            </div>
                                            @Html.HiddenFor(model => model.ParCargo_Id)
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParLevel1, Resources.Resource.level1 as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                @Html.DropDownList("ParLevel1_Id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParLevel1_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParLevel2, Resources.Resource.level2 as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                @Html.DropDownList("ParLevel2_Id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParLevel2_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParLevel3, Resources.Resource.level3 as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                @Html.DropDownList("ParLevel3_Id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParLevel3_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ParAlertType, Resources.Resource.alert as string + " " + Resources.Resource.type as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                @Html.DropDownList("ParAlertType_Id", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ParAlertType_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsActive, Resources.Resource.is_active as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsActive)
                                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsCollectAlert, Resources.Resource.isCollectAlert as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsCollectAlert)
                                                    @Html.ValidationMessageFor(model => model.IsCollectAlert, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.HasCorrectiveAction, Resources.Resource.hasCorrectiveAction as string, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-6">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.HasCorrectiveAction)
                                                    @Html.ValidationMessageFor(model => model.HasCorrectiveAction, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="@Resources.Resource.create" class="btn btn-primary" />
                                                @Html.ActionLink(Resources.Resource.back_to_list as string, "Index", null, new { @class = "btn btn-default" })
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>
@section Scripts {
    <script src="~/Scripts/Select3/select3.js"></script>
    <script>
        var objFiltro = { Param: {} };
        $(document).ready(function () {

            $('.form-horizontal select').select2();

            $('#filterReports select').on('change', function () {

                var objFiltroParam = objFiltro.Param;
                objFiltro = $('#filterReports').serializeObject();
                $(Object.keys(objFiltro)).each(function (i, o) {
                    objFiltro[o] = [objFiltro[o]];
                });

                objFiltro.Param = objFiltroParam;

                $("#ParCompany_Id").val(objFiltro.ParCompany_Id[0]);
                if (objFiltro.ParSecao_Ids != null || objFiltro.ParSecao_Ids != undefined)
                    $("#ParDepartment_Id").val(objFiltro.ParSecao_Ids[0]);
                if (objFiltro.parCargo_Ids != null || objFiltro.parCargo_Ids != undefined)
                    $("#ParCargo_Id").val(objFiltro.parCargo_Ids[0]);

            }).change();

            Select3.initialize(function () { return objFiltro });
        });

    </script>
}
