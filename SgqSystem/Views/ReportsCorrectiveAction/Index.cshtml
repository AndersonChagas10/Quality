@model SgqSystem.ViewModels.FormularioParaRelatorioViewModel
@{
    ViewBag.Title = "Corrective Action Reports";
    var url = Url.Action("Index", "Home");
    var urlTabelaRelatorio = Url.Action("GetCorrectiveAction", "api/CorrectiveAction");
    var urlGetCa = Url.Action("GetCorrectiveActionById", "api/CorrectiveAction");
    
}

<link href="@Url.Content("~/Content/DataTables/css/jquery.dataTables.min.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/DataTables/css/buttons.dataTables.min.css")" rel="stylesheet" />

<h2>@ViewBag.Title</h2>
<p><a href="@url" class=""><< Back</a></p>

<table style="width: 100%">
    <tr>
        <td style="text-align: right">
            <a href="javascript:void(0);" onclick="window.print();">Imprimir</a>
        </td>
    </tr>
</table>

@Html.Partial("~/Views/Shared/_mensagemObrigatorio.cshtml")
@Html.Partial("~/Views/Shared/_formularioParaPesquisa.cshtml", Model)
@Html.Partial("~/Views/Shared/_CorrectiveActionReportEdit.cshtml", new DTO.DTO.CorrectiveActionDTO())

<div id="loading" style="display:none"> Loading. </div>
&nbsp;
<table id="results" class="display" cellspacing="0"></table>

@section Scripts {

    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datepicker.js")
    @Scripts.Render("~/Scripts/locales/bootstrap-datepicker.eu.min.js")
    @Scripts.Render("~/Scripts/gridmvc.min.js")
    @Scripts.Render("~/Scripts/GuardJs.js")

    @Scripts.Render("~/Scripts/DataTables/dataTables.buttons.min.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.flash.min.js")
    @Scripts.Render("~/Scripts/DataTables/jszip.min.js")
    @Scripts.Render("~/Scripts/DataTables/pdfmake.min.js")
    @Scripts.Render("~/Scripts/DataTables/vfs_fonts.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.html5.min.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.print.min.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.colVis.min.js")
    @Scripts.Render("~/Scripts/DataTables/buttons.print.min.js")

    <script type="text/javascript">
        $('#sandbox-container input').datepicker();
        var url1 = '@Html.Raw(@urlTabelaRelatorio)';
        var url2 = '@Html.Raw(@urlGetCa)';
        function send() {

            $('#loading').show();
            $('#results').empty();
            var enviar = {};
            enviar['startDate'] = $('#sandbox-container input')[0].value;
            enviar['endDate'] = $('#sandbox-container input')[1].value;
            enviar['unitId'] = $('#unitId option:selected').val();
            enviar['shift'] = $('#shift option:selected').val();
            enviar['period'] = $('#period option:selected').val();
            enviar['level01Id'] = null;
            enviar['level02Id'] = null;
            enviar['level03Id'] = null;
            enviar['auditorId'] = $('#auditorId').val();

            GuardJs.resetForValidation();
            GuardJs.CheckRangeDateTime(enviar.endDate, enviar.startDate, "Initial date", "End date");

            if (!GuardJs.isValid)
                return;

            GuardJs.esconderMensagem();


            $.post('http://localhost:63128/api/CorrectiveAction/GetCorrectiveAction', enviar, function (r) {

                var retornoArray = r.Retorno;
                console.log(retornoArray);

                var table = $('#results').empty().DataTable({
                    data: retornoArray,
                    columns: [{ title: "View", mData: null, defaultContent: '<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">View</button>' },
                       { title: "Auditor", mData: "AuditorId" },
                       { title: "Add Date", mData: "AddDate" },
                       { title: "Slaughter", mData: "NameSlaughter" },
                       { title: "Techinical", mData: "NameTechinical" },
                       { title: "level01", mData: "level01Name" },
                       { title: "level02", mData: "level02Name" },
                       { title: "Audit Start Time", mData: "AuditStartTime" },
                       { title: "Description Failure", mData: "DescriptionFailure" },
                       { title: "Immediate Corrective Action", mData: "ImmediateCorrectiveAction" },
                       { title: "Preventative Measure", mData: "PreventativeMeasure" },
                       { title: "Product Disposition", mData: "ProductDisposition" },
                       //{ title: "Auditor", mData: "Id" }
                    ],
                    //dom: 'Bfrtip',
                    //buttons: [
                    //   'copy', 'excel', 'pdf'
                    //],
                    //columnDefs: config.columnDefs,
                    //bSort: true,
                    //bAutoWidth: true,
                    //bFilter: true,
                    scrollX: true,
                    lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                    pageLength: 10,
                    //processing: true,
                    loadingRecords: true,
                    destroy: true,
                    //paginate: true,
                    //paging: true,
                    info: true,
                    //searching: true,
                    //createdRow: config.createdRow,
                    //fnDrawCallback: config.fnDrawCallback,
                    initComplete: function () {
                        $('#loading').hide();
                        $('#results tbody').on('click', 'button', function (data, a,b) {
                            var data = table.row($(this).parents('tr')).data();
                            //alert(data.Id + "Id is: " + data.Id);
                            $.post(url2, { "": data.Id }, function (r, x, e) {
                                if (!!r.Retorno) {
                                    console.log(r.Retorno);
                                    $('#correctiveActionModal  #datetime').html(r.Retorno.DateCorrectiveActionFormatado); // ?
                                    $('#correctiveActionModal  #auditor').html(r.Retorno.AuditorName);
                                    $('#correctiveActionModal  #auditText').html(r.Retorno.level01Name);
                                    $('#correctiveActionModal  #shift').html(r.Retorno.ShiftName);
                                    $('#correctiveActionModal  #starttime').html(r.Retorno.StartTimeFormatado);
                                    $('#correctiveActionModal  #correctivePeriod').html(r.Retorno.PeriodName);

                                    $('#correctiveActionModal  #DescriptionFailure').html(r.Retorno.DescriptionFailure);
                                    $('#correctiveActionModal  #ImmediateCorrectiveAction').html(r.Retorno.ImmediateCorrectiveAction);
                                    $('#correctiveActionModal  #ProductDisposition').html(r.Retorno.ProductDisposition);
                                    $('#correctiveActionModal  #PreventativeMeasure').html(r.Retorno.PreventativeMeasure);

                                    $('#correctiveActionModal  #Slaugther .name').html(r.Retorno.NameSlaughter);
                                    $('#correctiveActionModal  #Slaugther .date').html(r.Retorno.DateTimeSlaughterFarmatado);

                                    $('#correctiveActionModal  #Technical .name').html(r.Retorno.NameTechinical);
                                    $('#correctiveActionModal  #Technical .date').html(r.Retorno.DateTimeTechinicalFarmatado);
                                } else {
                                    GuardJs.exibirMensagemAlerta(r.Mensagem);
                                }

                                $('#correctiveActionModal').show();
                            });
                        });
                    },
                    //order: config.order || [[0, 'asc']],
                    //serverSide: !config.serverSide == undefined || config.serverSide,
                    //sPaginationType: 'full_numbers',
                });


                new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'print',
                            exportOptions: {
                                columns: ':visible'
                            }
                        },
                        'excel',
                        'pdf',
                        'colvis',
                        //{
                        //    text: 'Extra 2',
                        //    action: function (e, dt, node, conf) {
                        //        console.log('Button 2 clicked on');
                        //    }
                        //}
                    ]
                });

                table.buttons(0, null).container().prependTo(
                    table.table().container()
                );

            });

            $('#loading').hide();
        };

        function printElement(elem, append, delimiter) {
            var domClone = elem.cloneNode(true);

            var $printSection = document.getElementById("printSection");

            if (!$printSection) {
                $printSection = document.createElement("div");
                $printSection.id = "printSection";
                document.body.appendChild($printSection);
            }

            if (append !== true) {
                $printSection.innerHTML = "";
            }

            else if (append === true) {
                if (typeof (delimiter) === "string") {
                    $printSection.innerHTML += delimiter;
                }
                else if (typeof (delimiter) === "object") {
                    $printSection.appendChlid(delimiter);
                }
            }

            $printSection.appendChild(domClone);
        }

        document.getElementById("btnPrint").onclick = function () {
            printElement(document.getElementById("printThis"));

            var modThis = document.querySelector("#printSection .modifyMe");
            modThis.appendChild(document.createTextNode(" "));

            window.print();
        }
    </script>
}
