@using DTO

@{
    Layout = null;
    var urlDataCollection = ViewBag.UrlDataCollect;

    var ListItensMenu = (IEnumerable<DTO.DTO.ItemMenuDTO>)ViewBag.ItensMenu;
}

@functions{


    string RetornaIcone(DTO.DTO.ItemMenuDTO item)
    {
        if (!string.IsNullOrEmpty(item.Icon))
        {
            return $"<i class='{item.Icon}'></i>";
        }
        return "";
    }

    string MontaSubItem(DTO.DTO.ItemMenuDTO item)
    {
        string html = "";
        html += "<li class='nav-item'>";
        if (item.ListaFilho.Count > 0)
        {
            html += $@"<a href = 'javascript:;' class='nav-link nav-toggle'>
                {RetornaIcone(item)}
                <span class='title'>{item.Name}</span>
                <span class='arrow'></span>
            </a>";
            html += $@"<ul class='sub-menu'>";
            foreach (var filho in item.ListaFilho)
            {
                html += MontaSubItem(filho);
            }
            html += "</ul>";
        }
        else
        {
            var url = ((item.Url != null) ? Html.Action(item.Url) : Html.Raw("javascript:;"));
            html += $@"<a href = '{url}' class='nav-link nav-toggle'>
                {RetornaIcone(item)}
                <span class='title'>{item.Name}</span>
            </a>";
        }
        html += "</li>";
        return html;
    }
}
&nbsp;
<div class="page-sidebar-wrapper hide">
    <div class="page-sidebar navbar-collapse collapse zindex-control" style="height: 100% !important; z-index: 2000;">
        <ul class="page-sidebar-menu  page-header-fixed page-sidebar-menu-closed" data-keep-expanded="false" data-auto-scroll="true" data-slide-speed="200">
            <li class="sidebar-toggler-wrapper hide">
                <div class="sidebar-toggler">
                    <span></span>icon-home
                </div>
            </li>


            @{
                if (ListItensMenu != null)
                {
                    //Prepara as classes para a montagem do menu
                    foreach (var item in ListItensMenu)
                    {
                        foreach (var filho in ListItensMenu)
                        {
                            if (item.Id == filho.ItemMenu_Id)
                            {
                                item.ListaFilho.Add(filho);
                                filho.IsSubItem = true;
                            }
                        }
                    }


                    //Gera a visualização do menu
                    foreach (var item in ListItensMenu.Where(i => !i.IsSubItem))
                    {
                        @Html.Raw(MontaSubItem(item))
                    }
                }
            }
        </ul>
    </div>
</div>

<div class="modal fade update-all-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalUpdateAllTablets" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <table class="table col-sm-12" id="tableAllUnitTelaTablet">
                <thead>
                    <tr>
                        <td></td>
                        <td>Data Inicio</td>
                        <td>Data Fim</td>
                        <td>Unidade</td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>

    function navbarSelect(id) {
        $('.nav-item').removeClass('active').removeClass('start').removeClass('open');
        $('#' + id).addClass('active').addClass('start').addClass('open');
    };

    $('.nav-item a').click(function () {
        var open = $(this).parent().hasClass('open');
        $(this).parent().siblings('.open').find('a').click();
        $(this).parent().find('.sub-menu').css("display", "none");
        if (open) {
            $(this).children('span.arrow').removeClass('open')
            $(this).parent().removeClass('open');
        } else {
            $(this).parent().find('.open').removeClass('open');
            $(this).children('span.arrow').addClass('open');
            $(this).parent().addClass('open');
            $(this).parent().children('.sub-menu').css("display", "block");
        }
    });

    var root = @Html.Raw(Json.Encode(GlobalConfig.urlPreffixAppColleta));

    var progress = new LoadingOverlayProgress();

    let ListItensMenu = @Html.Raw(Json.Encode(ListItensMenu));


</script>