@using DTO
@model SgqSystem.ViewModels.FormularioParaRelatorioViewModel
@{

    var GetListLevel1 = Url.Action("GetListLevel1", "api/ParamsApi");
    var GetListLevel2 = Url.Action("GetListLevel2", "api/ParamsApi");
    var GetListLevel3 = Url.Action("GetListLevel3", "api/ParamsApi");
    var GetListLevel2VinculadoLevel1 = Url.Action("GetListLevel2VinculadoLevel1", "api/ParamsApi");
    var GetListLevel3VinculadoLevel2 = Url.Action("GetListLevel3VinculadoLevel2", "api/ParamsApi");
    var GetListLevel3VinculadoLevel2Level1 = Url.Action("GetListLevel3VinculadoLevel2Level1", "api/ParamsApi");

}

<style>
    /*!
     * Start Bootstrap - Simple Sidebar (http://startbootstrap.com/)
     * Copyright 2013-2016 Start Bootstrap
     * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
     */

    body {
        overflow-x: hidden;
    }

    .wrapper {
        padding-left: 0;
    }

        .wrapper.toggled {
            padding-left: 300px;
        }

    #sidebar-wrapper {
        z-index: 2500;
        position: absolute;
        margin-left: -300px;
        left: 300px;
        width: 0;
        height: 100%;
        overflow-y: scroll;
        background: #ecebeb;
    }

    .wrapper.toggled #sidebar-wrapper {
        width: 300px;
    }

    .page-content-wrapper {
        width: 100%;
        padding: 0px !important;
    }

    .wrapper.toggled .page-content-wrapper {
        margin-right: -300px;
    }

    .page-content-wrapper {
        float: none !important;
        width: 100%;
    }

    .sidebar-nav {
        position: absolute;
        top: 0;
        margin: 0;
        padding: 0;
        list-style: none;
    }

        .sidebar-nav button {
            margin-left: 15px;
            margin-top: 20px;
        }

        .sidebar-nav span.redLabel {
            margin-left: 15px;
            line-height: 25px;
            font-size: 14px;
            font-family: Verdana;
            color: #247DBD;
        }

        .sidebar-nav span.redLabelTitle {
            margin-left: 15px;
            line-height: 30px;
            font-size: 19px;
            font-family: Verdana;
            color: #247DBD;
        }

    span.redLabelSecTitle {
        margin-left: 15px;
        line-height: 25px;
        font-size: 14px;
        font-family: Verdana;
        color: #247DBD;
    }

    .sidebar-nav input {
        margin-left: 20px;
    }

    .sidebar-nav select {
        margin-left: 20px !important;
    }

    .sidebar-nav div {
        margin-left: 20px;
        text-indent: 5px;
        line-height: 30px;
    }

    .sidebar-nav li a {
        display: block;
        text-decoration: none;
        color: #999999;
    }

        .sidebar-nav li a:hover {
            text-decoration: none;
            color: #fff;
            background: rgba(255,255,255,0.2);
        }

        .sidebar-nav li a:active,
        .sidebar-nav li a:focus {
            text-decoration: none;
        }

    .sidebar-nav > .sidebar-brand {
        height: 65px;
        font-size: 18px;
        line-height: 60px;
    }

        .sidebar-nav > .sidebar-brand a {
            color: #999999;
        }

            .sidebar-nav > .sidebar-brand a:hover {
                color: #fff;
                background: none;
            }

    @@media(min-width:01px) {
        .wrapper {
            padding-left: 300px;
        }

            .wrapper.toggled {
                padding-left: 0;
            }

        #sidebar-wrapper {
            width: 300px;
        }

        .wrapper.toggled #sidebar-wrapper {
            width: 0;
        }

        .page-content-wrapper {
            padding: 20px;
            position: relative;
        }

            .page-content-wrapper .page-content {
                padding-top: 0px !important;
            }

        .wrapper.toggled .page-content-wrapper {
            position: relative;
            margin-right: 0;
        }
    }

    .input-mini {
        width: 100% !important;
    }

    .singleCalendar {
        background-image:;
        background-repeat: no-repeat;
        padding-left: 25px;
    }

    /*Fullscreen*/
    .fullScreen {
        margin-top: 0px !important;
    }

    #indicadores .radio, .checkbox {
        margin-top: 4px;
        margin-bottom: 4px;
    }

    #indicadores td {
        font-size: x-small;
    }

    .sidebar-nav #indicadores input {
        margin-left: 0px !important;
    }

    .select2.select2-container.select2-container--default {
        margin-left: 20px !important;
    }
</style>

<!-- Sidebar -->
<div id="sidebar-wrapper">
    <ul class="sidebar-nav">
        <li class="sidebar-brand">
            <span class="redLabelTitle">
                @ViewBag.Title
            </span>
        </li>

        <li>
            <div class="" id="simpleCallendar" style="display:none">
                <span class="redLabel">@Resources.Resource.date </span>
                <span>
                    <input type="text" class="" name="datefilter" style="background: #fff; cursor: pointer; border: 1px solid #ccc; width: 210px" />
                </span>
            </div>
        </li>

        <li>
            <div class="" id="complexCallendar" style="display:none">
                <span class="redLabel">@Resources.Resource.date</span>
                <div id="reportrange" class="" style="background: #fff; cursor: pointer; border: 1px solid #ccc; width: 210px">
                    <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                    <span></span> <b class="caret"></b>
                </div>
            </div>
        </li>

        <li>
            <div class="dropdown" id="showModulo" style="display:none">
                <span class="redLabel">Modulo</span>
                @Html.DropDownList("ModuloId", new SelectList(ViewBag.Modulos, "Id", "Name"), Resources.Resource.select, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showUnit" style="display:none">
                <span class="redLabel">@Resources.Resource.unit</span>

                @if (ViewBag.UnitArr == null)
                {
                    @Html.DropDownList("unitId", new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
                }
                else
                {
                    @Html.DropDownList("unitId", new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px", @multiple = "multiple" })
                }
            </div>
        </li>

        <li>
            <div id="showGroupLevel1" style="display:none">
                <span class="redLabel">Liderança</span>
                @Html.DropDownList("GroupLevel1", new SelectList(ViewBag.GroupLevel1, "Id", "Name"), htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
            </div>
        </li>

        @if (ViewBag.ListaCEP != null)
        {
            <li>
                <div id="showTipoCEP" style="display:none">
                    <span class="redLabel">@Resources.Resource.letters_cep</span>

                    @Html.DropDownList("tipoCEP", new SelectList(ViewBag.ListaCEP, "Value", "Text"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
                </div>
            </li>
        }

        <li>
            <div id="showModulo" style="display:none">
                <span class="redLabel">Módulo</span>
            </div>
        </li>

        <li>
            <div id="showProcesso" style="display:none">
                <span class="redLabel">Processo</span>
            </div>
        </li>

        <li>
            <div id="showShift" style="display:none">
                <span class="redLabel">@Resources.Resource.shift</span>
                @Html.DropDownList("shift", new SelectList(ViewBag.Shift, "Id", "Name"), Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
            </div>
        </li>

        @if (ViewBag.Department != null)
        {
            <li>
                <div id="showDepartment" style="display:none">
                    <span class="redLabel">Teste</span>

                    @Html.DropDownList("departmentId", new SelectList(ViewBag.Department, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
                </div>
            </li>
        }

        @Html.Partial("~/Views/Shared/_ClusterRegionalUnidadeCriticalLevel123.cshtml")

        @Html.Partial("~/Views/Shared/_Level321Chain.cshtml")

        <li>
            <div id="showPeriod" style="display:none">
                <span class="redLabel">@Resources.Resource.period</span>
                @Html.DropDownList("period", new SelectList(ViewBag.Period, "Id", "Name"), Resources.Resource.all, htmlAttributes: new { @class = "form-control select2", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showUsers" style="display:none">
                <span class="redLabel">@Resources.Resource.auditor</span>
                @Html.DropDownList("auditorId", new SelectList(ViewBag.UserSgq, "Id", "Name"), Resources.Resource.all, htmlAttributes: new { @class = "form-control required select2", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showStatusIndicador" style="display:none">
                <span class="redLabel">@Resources.Resource.level1Status</span>
                <select id="statusIndicador" class="form-control select2" style="width: 210px;">
                    <option>@Resources.Resource.all</option>
                    <option value="1">@Resources.Resource.off_goal</option>
                    <option value="2">@Resources.Resource.within_goal</option>
                </select>
            </div>
        </li>

        <li>
            <div id="showCreateActionPlane" style="display:none">
                <span class="redLabel">@Resources.Resource.conclued_plan_action</span>
                <select id="createActionPlane" class="form-control select2" style="width: 210px;">
                    <option>@Resources.Resource.all</option>
                    <option value="1">@Resources.Resource.yes</option>
                    <option value="2">@Resources.Resource.no</option>
                </select>
            </div>
        </li>

        <li>
            <div id="showDimensaoData" style="display:none">
                <span class="redLabel">@Resources.Resource.period_type_chart</span>
                <select id="createDimensaoData" class="form-control select2" style="width: 210px;">
                    <option value="1">@Resources.Resource.per_day</option>
                    <option value="2">@Resources.Resource.per_week</option>
                    <option value="4">@Resources.Resource.a_month</option>
                </select>
            </div>
        </li>

        <li>
            <div class="dropdown" id="showTipoVisao" style="display:none">
                <span class="redLabel">Visão</span>
                <select id="tipoVisao" class="form-control select2" style="width:210px">
                    <option value="1">Coletados</option>
                    <option value="2">Total</option>
                </select>
            </div>
        </li>

        <li>
            <button style="margin-bottom: 40px; margin-left: 40px; max-width: 210px;" type="button" class="btn margin-top margin-bottom btn-block btn-primary" id="btnSend" onclick="">@Resources.Resource.send</button>
        </li>

    </ul>
</div>

<script>

    var enviar = {};
    var start = moment();
    var end = moment();
    var exibeTodosLevels = true;

    var monthNames = [
        '@Resources.Resource.january',
        '@Resources.Resource.february',
        '@Resources.Resource.march',
        '@Resources.Resource.april',
        '@Resources.Resource.may',
        '@Resources.Resource.june',
        '@Resources.Resource.july',
        '@Resources.Resource.august',
        '@Resources.Resource.september',
        '@Resources.Resource.october',
        '@Resources.Resource.november',
        '@Resources.Resource.december'];

    $(function () {

        function RetornaArrayInteiro(array){
            for(var i=0; i<array.length;i++) array[i] = parseInt(array[i].replace(/\D/g, ''), 10);
            return array;
        }

        $('#level1Id').on('change', function (e) {
            @if(ViewBag.Level1IdArr == null){
                <text>
                    enviar['level1Id'] = parseInt( $('#level1Id').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level1IdArr'] = RetornaArrayInteiro($('#level1Id').val());
                </text>
            }
            $('#level2Id').change();
        });

        $('#level2Id').on('change', function (e) {
            @if(ViewBag.Level2IdArr == null){
                <text>
                    enviar['level2Id'] = parseInt( $('#level2Id').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level2IdArr'] = RetornaArrayInteiro($('#level2Id').val());
                </text>
            }
            $('#level3Id').change();
        });

        $('#level3Id').on('change', function (e) {
            @if(ViewBag.Level3IdArr == null){
                <text>
                    enviar['level3Id'] = parseInt( $('#level3Id').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level3IdArr'] = RetornaArrayInteiro($('#level3Id').val());
                </text>
            }
        });

        $('#unitId').on('change', function (e) {
            enviar['unitId'] = $('#unitId option:selected').val();
            enviar['unitIdArr'] = $('#unitId').val();
        });

        $('#tipoCEP').on('change', function (e) {
            enviar['tipoCEP'] = $('#tipoCEP option:selected').val();
        });

        $('#shift').on('change', function (e) {
            enviar['shift'] = $('#shift option:selected').val();
        });

        $('#shiftIdV').on('change', function (e) {
            enviar['shift'] = $('#shiftIdV option:selected').val();
        });

        $('#period').on('change', function (e) {
            enviar['period'] = $('#period option:selected').val();
        });

        $('#auditorId').on('change', function (e) {
            enviar['auditorId'] = $('#auditorId option:selected').val();
        });

        $('#clusterId').on('change', function (e) {
            enviar['clusterSelected_Id'] = $('#clusterId option:selected').val();
        });

        $('#statusIndicador').on('change', function (e) {
            enviar['statusIndicador'] = $('#statusIndicador option:selected').val();
        });

        $('#createActionPlane').on('change', function (e) {
            enviar['createActionPlane'] = $('#createActionPlane option:selected').val();
        });

        $('#structureId').on('change',function(e){
            enviar['structureIdArr'] = $('#structureId').val();
            enviar['structureId'] = $('#structureId option:selected').val();
        });

        $('#unitIdV').on('change',function(e){
            enviar['unitIdArr'] = $('#unitIdV').val();
            enviar['unitId'] = $('#unitIdV option:selected').val();
        });

        $('#GroupLevel1').on('change', function (e) {
            enviar['GroupLevel1'] = $('#GroupLevel1').val();
        });

        $('#criticalLevelId').on('change',function(e){
            enviar['criticalLevelId'] = $('#criticalLevelId option:selected').val();
        });

        $('#level1Groupv').on('change', function (e) {
            @if(ViewBag.Level3IdArr == null){
                <text>
            enviar['groupParLevel1IdArr'] = parseInt($('#level1Groupv').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['groupParLevel1IdArr'] = RetornaArrayInteiro($('#level1Groupv').val());
                </text>
            }
            $('#level1Idv').change();
        });

        $('#level1Idv').on('change', function (e) {
            @if(ViewBag.Level3IdArr == null){
                <text>
                    enviar['level1Idv'] = parseInt( $('#level1Idv').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level1IdArr'] = RetornaArrayInteiro($('#level1Idv').val());
                </text>
            }
            $('#level2Idv').change();
        });

        $('#level2Idv').on('change', function (e) {
            @if(ViewBag.Level3IdArr == null){
                <text>
                    enviar['level2Idv'] = parseInt( $('#level2Idv').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level2IdArr'] = RetornaArrayInteiro($('#level2Idv').val());
                </text>
            }
            $('#level3Idv').change();
        });

        $('#level3Idv').on('change', function (e) {
            @if(ViewBag.Level3IdArr == null){
                <text>
                    enviar['level3Idv'] = parseInt( $('#level3Idv').val().replace(/\D/g, ''), 10);
                </text>
            }else{
                <text>
            enviar['level3IdArr'] = RetornaArrayInteiro($('#level3Idv').val());
                </text>
            }
        });

        $('#departmentId').on('change', function(e){
            enviar['departmentId'] = $('#departmentId option:selected').val();
        });

        $('#clusterGroupId').on('change', function (e) {
            enviar['clusterGroupId'] = $('#clusterGroupId option:selected').val();
        });

        $('#tipoVisao').on('change', function (e) {
            enviar['tipoVisao'] = $('#tipoVisao option:selected').val();
        });

        $('#ModuloId').on('change', function (e) {
            enviar['moduloId'] = $('#ModuloId :selected').val();
        });

        $('input[name="datefilter"]').daterangepicker({
            singleDatePicker: true,
            autoUpdateInput: false,
            autoApply: true,
            showDropdowns: true,
            startDate: start,
            endDate: end,
            locale: {
                cancelLabel: 'Clear'
            }
        }, function (start, end, label) {
            enviar['startDate'] = start.format();
            enviar['endDate'] = start.format();
        });

        $('input[name="datefilter"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format());
        });

        $('input[name="datefilter"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
            enviar['startDate'] = "";
            enviar['endDate'] = "";
        });

        var start = moment();
        var end = moment();

        function cb(start, end) {
            $('#reportrange span').html(start.format() + ' - ' + end.format());
            enviar['startDate'] = start.format();
            enviar['endDate'] = end.format();
        }

        var configQueryData = @Html.Raw(Json.Encode(GlobalConfig.LanguageBrasil));
        var configCallendar = {};
        if(configQueryData){
            $('#reportrange').daterangepicker({
                minDate: "01/01/2015",
                startDate: start,
                endDate: end,
                locale: {
                    "format": "DD/MM/YYYY",
                    "separator": " - ",
                    "applyLabel": "Aplicar",
                    "cancelLabel": "Cancelar",
                    "customRangeLabel": "Seleção",
                },
                alwaysShowCalendars: true,
                showDropdowns: true,
                ranges: rangesCalendar,
                linkedCalendars: false
            }, cb);
        }else{
            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                locale: {
                    "format": "MM/DD/YYYY",
                    "separator": " - ",
                },
                alwaysShowCalendars: true,
                showDropdowns: true,
                ranges: rangesCalendar,
                linkedCalendars: false
            }, cb);
        }

        cb(start, end);

        enviar['startDate'] = moment().format();
        enviar['endDate'] = moment().format();

    });


    (function (H) {

    }(Highcharts));


    $(document).ready(function () {

       // $('#unitId').select2();
        //$('#ModuloId').select2();
        //$('#shift').select2();
        //$('#period').select2();
        //$('#auditorId').select2();
        //$('#tipoCEP').select2();
        $('.select2').select2();

        var isEua = @Html.Raw(Json.Encode(GlobalConfig.Eua));

        if (isEua) {
            $('#showModulo2').hide();
        }

         $('body').on("click", "#menu-toggle",function (e) {
            $("#menu-toggle > i").toggleClass("glyphicon-chevron-right");
            $('.redLabelSecTitle').toggle();
            e.preventDefault();
            $(".wrapper").toggleClass("toggled");

            //Ajusta as datatables presentes.
            var tables = $('table[id]')
            setTimeout(function (e) {

                tables.each(function (c, o) {
                    if ($.fn.DataTable.isDataTable('#' + $(o).attr('id'))) {
                        var oTable = $(o).dataTable();
                        if (oTable.length > 0) {
                            oTable.fnAdjustColumnSizing();
                        }
                        oTable = null;
                    }
                });

                $(Highcharts.charts).each(function (c, chart) {
                    if (chart != undefined) {
                        chart.reflow()
                    }
                });

            }, 500)

        });


        //Se não for multiplo força um change para selecionar o valor (motivo: ele remove o primeiro item 'todos' e não aplicava o evento change)
        if(!$('#unitId').attr('multiple'))
            setTimeout(function(){$('#unitId').trigger('change');},500);

            let ItemMenu = @Html.Raw(Json.Encode(ViewBag.itemMenu));

            if (ItemMenu) {

                enviar["ItemMenu_Id"] = ItemMenu.Id;
            }

        });

    var formControl = {

        showLevel1: function () {
        $('#showLevel1').show();

        },
        showLevel2: function () {
            $('#showLevel2').show();
        },
        showLevel3: function () {
            $('#showLevel3').show();
        },
        showUsers: function () {
            $('#showUsers').show();
        },
        showPeriod: function () {
            $('#showPeriod').show();
        },
        showUnit: function () {
            $('#showUnit').show();
        },
        showGroupLevel1: function () {
            $('#showGroupLevel1').show();
        },
        showTipoCEP: function () {
            $('#showTipoCEP').show();
        },
        showProcesso: function () {
            $('#showProcesso').show();
        },
        showShift: function () {
            $('#showShift').show();
        },
        showSimpleDate: function () {
            $('#simpleCallendar').show();
        },
        showFullCallendar: function () {
            $('#complexCallendar').show();
        },
        ShowAllFielsAndFullCallendar() {
            formControl.showPeriod();
            formControl.showFullCallendar();
            formControl.showShift();
            formControl.showUnit();
            formControl.showUsers();
        },
        showLevel123: function (){
            $('#showLevel123').show();
        },
        showStatusIndicador: function() {
            $('#showStatusIndicador').show();
        },
        showCreateActionPlane: function () {
            $('#showCreateActionPlane').show();
        },
        showDimensaoData: function () {
            $('#showDimensaoData').show();
        },
        showClustRegUnitCriticalLevel123: function(){
            $('#showClustRegUnitCriticalLevel123').show();
        },
        showDepartment: function(){
            $('#showDepartment').show();
        },
        showTipoVisao: function () {
            $('#showTipoVisao').show();
        },
        showModulo: function () {
            $('#showModulo').show();
        }
    }

     //Esconde o header e o footer quando tecla f11
     $(document).keyup(function (e) {
         if (e.which == 122) {
             e.preventDefault();
             expand();
             return false;
         }
     });

     //Toggle navbar, header e footer
     function expand() {

         $(".navbar").toggle();
         $(".page-header-fixed .page-container").toggleClass("fullScreen");
         $("footer").toggle();

     }

     //Toggle fullscreen para todos os navegadores
     function toggleFullScreen() {
         if (!document.fullscreenElement &&
             !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {
             if (document.documentElement.requestFullscreen) {
                 document.documentElement.requestFullscreen();
             } else if (document.documentElement.msRequestFullscreen) {
                 document.documentElement.msRequestFullscreen();
             } else if (document.documentElement.mozRequestFullScreen) {
                 document.documentElement.mozRequestFullScreen();
             } else if (document.documentElement.webkitRequestFullscreen) {
                 document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
             }
         } else {
             if (document.exitFullscreen) {
                 document.exitFullscreen();
             } else if (document.msExitFullscreen) {
                 document.msExitFullscreen();
             } else if (document.mozCancelFullScreen) {
                 document.mozCancelFullScreen();
             } else if (document.webkitExitFullscreen) {
                 document.webkitExitFullscreen();
             }
         }

         expand();
     }

</script>