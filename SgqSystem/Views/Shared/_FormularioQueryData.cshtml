@model SgqSystem.ViewModels.FormularioParaRelatorioViewModel
@{
    var GetListLevel1 = Url.Action("GetListLevel1", "api/ParamsApi");
    var GetListLevel2 = Url.Action("GetListLevel2", "api/ParamsApi");
    var GetListLevel3 = Url.Action("GetListLevel3", "api/ParamsApi");
    var GetListLevel2VinculadoLevel1 = Url.Action("GetListLevel2VinculadoLevel1", "api/ParamsApi");
    var GetListLevel3VinculadoLevel2 = Url.Action("GetListLevel3VinculadoLevel2", "api/ParamsApi");
    var GetListLevel3VinculadoLevel2Level1 = Url.Action("GetListLevel3VinculadoLevel2Level1", "api/ParamsApi");

}
<style>
    /*!
     * Start Bootstrap - Simple Sidebar (http://startbootstrap.com/)
     * Copyright 2013-2016 Start Bootstrap
     * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap/blob/gh-pages/LICENSE)
     */

    body {
        overflow-x: hidden;
    }

    /* Toggle Styles */

    .wrapper {
        padding-left: 0;
        -webkit-transition: all 0.5s ease;
        -moz-transition: all 0.5s ease;
        -o-transition: all 0.5s ease;
        transition: all 0.5s ease;
    }

        .wrapper.toggled {
            padding-left: 300px;
        }

    #sidebar-wrapper {
        z-index: 1000;
        position: fixed;
        left: 300px;
        width: 0;
        height: 95%;
        margin-left: -300px;
        overflow-y: scroll;
        background: #ecebeb;
        -webkit-transition: all 0.5s ease;
        -moz-transition: all 0.5s ease;
        -o-transition: all 0.5s ease;
        transition: all 0.5s ease;
    }

    .wrapper.toggled #sidebar-wrapper {
        width: 300px;
    }

    .page-content-wrapper {
        width: 100%;
        position: absolute;
        padding: 15px;
    }

    .wrapper.toggled .page-content-wrapper {
        position: absolute;
        margin-right: -300px;
    }

    .page-content-wrapper {
        float: none !important;
        width: 100%;
    }
    /* Sidebar Styles */

    .sidebar-nav {
        position: absolute;
        top: 0;
        width: 300px;
        margin: 0;
        padding: 0;
        list-style: none;
    }



        .sidebar-nav button {
            margin-left: 15px;
            margin-top: 20px;
        }

        .sidebar-nav span.redLabel {
            margin-left: 15px;
            line-height: 25px;
            font-size: 14px;
            font-family: Verdana;
            color: #247DBD;
        }

        .sidebar-nav span.redLabelTitle {
            margin-left: 15px;
            line-height: 30px;
            font-size: 19px;
            font-family: Verdana;
            color: #247DBD;
        }

    span.redLabelSecTitle {
        margin-left: 15px;
        line-height: 25px;
        font-size: 14px;
        font-family: Verdana;
        color: #247DBD;
    }

    .sidebar-nav input {
        margin-left: 20px;
    }

    .sidebar-nav select {
        margin-left: 20px;
    }

    .sidebar-nav div {
        margin-left: 20px;
        text-indent: 5px;
        line-height: 30px;
    }

    .sidebar-nav li a {
        display: block;
        text-decoration: none;
        color: #999999;
    }

        .sidebar-nav li a:hover {
            text-decoration: none;
            color: #fff;
            background: rgba(255,255,255,0.2);
        }

        .sidebar-nav li a:active,
        .sidebar-nav li a:focus {
            text-decoration: none;
        }

    .sidebar-nav > .sidebar-brand {
        height: 65px;
        font-size: 18px;
        line-height: 60px;
    }

        .sidebar-nav > .sidebar-brand a {
            color: #999999;
        }

            .sidebar-nav > .sidebar-brand a:hover {
                color: #fff;
                background: none;
            }

    @@media(min-width:768px) {
        .wrapper {
            padding-left: 300px;
        }

            .wrapper.toggled {
                padding-left: 0;
            }

        #sidebar-wrapper {
            width: 300px;
        }

        .wrapper.toggled #sidebar-wrapper {
            width: 0;
        }

        .page-content-wrapper {
            padding: 20px;
            position: relative;
        }

        .wrapper.toggled .page-content-wrapper {
            position: relative;
            margin-right: 0;
        }
    }

    .input-mini {
        width: 100% !important;
    }

    .singleCalendar {
        background-image:;
        background-repeat: no-repeat;
        padding-left: 25px;
    }

    /*Fullscreen*/
    .fullScreen {
        margin-top: 0px !important;
    }
    /*Fullscreen*/
    #showIndicadoresManutencao label {
        font-size: 11px;
    }

    #showIndicadoresManutencao table {
        min-width: 280px;
    }

    #indicadores .radio, .checkbox {
        margin-top: 4px;
        margin-bottom: 4px;
    }
</style>

<!-- Sidebar -->
<div id="sidebar-wrapper">
    <ul class="sidebar-nav">
        <li class="sidebar-brand">
            <span class="redLabelTitle">
                @ViewBag.Title
            </span>
        </li>

        <li>
            <div class="" id="simpleCallendar" style="display:none">
                <span class="redLabel">@Resources.Resource.date </span>
                <!--<div class="has-feedback">-->
                <span>
                    @*<i class="glyphicon glyphicon-calendar fa fa-calendar"></i>*@
                    <input type="text" class="" name="datefilter" style="background: #fff; cursor: pointer; border: 1px solid #ccc; width: 210px" />
                </span>
                <!--</div>-->
            </div>
        </li>

        <li>
            <div class="" id="complexCallendar" style="display:none">
                <span class="redLabel">@Resources.Resource.date @*<i class="glyphicon glyphicon-calendar fa fa-calendar"></i>*@</span>
                <div id="reportrange" class="" style="background: #fff; cursor: pointer; border: 1px solid #ccc; width: 210px">
                    <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>&nbsp;
                    <span></span> <b class="caret"></b>
                </div>
            </div>
        </li>

        <li>
            <div class="dropdown" id="showFiltroManutencao" style="display:none">
                <span class="redLabel">Tipo de Relatorio</span>
                <select id="tipoRelatorio" class="form-control" style="width:210px">
                    <option value="Por Unidade">Por Unidade</option>
                    <option value="Por Regional">Por Regional</option>
                </select>
            </div>
        </li>

        @if (ViewBag.Anos != null)
        {
            <li>
                <div class="dropdown" id="showYearManutencao" style="display:none">
                    <span class="redLabel">Ano</span>
                    @Html.DropDownList("yearId", new SelectList(ViewBag.Anos, "Ano", "Ano"), htmlAttributes: new { @class = "form-control", @style = "width:210px" })
                </div>
            </li>
        }

        <li>
            <div class="dropdown" id="showMonthManutencao" style="display:none">
                <span class="redLabel">Mês</span>
                <select class="form-control select2Init" style="width:210px" id="mouthId">
                    <option value="0">Total Acumulado</option>
                    <option value="1">Janeiro</option>
                    <option value="2">Fevereiro</option>
                    <option value="3">Março</option>
                    <option value="4">Abril</option>
                    <option value="5">Maio</option>
                    <option value="6">Junho</option>
                    <option value="7">Julho</option>
                    <option value="8">Agosto</option>
                    <option value="9">Setembro</option>
                    <option value="10">Outubro</option>
                    <option value="11">Novembro</option>
                    <option value="12">Dezembro</option>
                </select>
            </div>
        </li>

        @if (ViewBag.Regionais != null)
        {
            <li>
                <div class="dropdown" id="showRegionaisManutencao" style="display:none">
                    <span class="redLabel">Regional</span>
                    @Html.DropDownList("RegionalId", new SelectList(ViewBag.Regionais, "Nome", "Nome"), htmlAttributes: new { @class = "form-control", @style = "width:210px" })
                </div>
            </li>
        }
        @if (ViewBag.SubRegionais != null)
        {
            <li>
                <div class="dropdown" id="showSubRegionaisManutencao" style="display:none">
                    <span class="redLabel">Sub Regional</span>
                    @Html.DropDownList("SubRegionalId", new SelectList(ViewBag.SubRegionais, "Grupo", "Nome"), htmlAttributes: new { @class = "form-control", @style = "width:210px" })
                </div>
            </li>
        }
        @if (ViewBag.Unidades != null)
        {
            <li>
                <div class="dropdown" id="showUnidadesManutencao" style="display:none">
                    <span class="redLabel">Unidade</span>
                    @Html.DropDownList("UnidadeId", new SelectList(ViewBag.Unidades, "Grupo", "Nome"), htmlAttributes: new { @class = "form-control", @style = "width:210px" })
                </div>
            </li>
        }
        <li>
            <div id="showUnit" style="display:none">
                <span class="redLabel">@Resources.Resource.unit</span>

                @Html.DropDownList("unitId", new SelectList(ViewBag.UnidadeUsuario, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control", @style = "width:210px" })
            </div>
        </li>

        <li data-ng-app="myApp">
            @*    @Html.DropDownList("level1Id", new SelectList(ViewBag.Level1, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2Init", @style = "width:210px" })*@
            <div data-ng-controller="MainCtrl" id="showLevel1" style="display:none; margin-left:0px!important">
                <div>
                    <span class="redLabel">@Resources.Resource.level1</span>
                    <select data-ng-model="level1Value"
                            data-ng-options="s.Id as s.Name for s in level1"
                            data-ng-change="GetListLevel2VinculadoLevel1()" class="form-control" style="width:210px">
                        <option value="">@Resources.Resource.select</option>
                    </select>
                </div>

                <div>
                    <span class="redLabel">@Resources.Resource.level2</span>
                        <select data-ng-model="level2Value" 
                                @*data-ng-disabled="!level2"*@
                                data-ng-options="s.Id as s.Name for s in level2"
                                data-ng-change="GetListLevel3VinculadoLevel2()" class="form-control" style="width:210px">
                            <option value="">@Resources.Resource.select</option>
                        </select>
                </div>

                <div>
                    <span class="redLabel">@Resources.Resource.level3</span>
                    <select data-ng-model="level3Value"
                            @*data-ng-disabled="!level3"*@
                            data-ng-options="s.Id as s.Name for s in level3"
                            data-ng-change="" class="form-control" style="width:210px">
                        <option value="">@Resources.Resource.select</option>
                    </select>
                </div>

            </div>
        </li>

        <li>
            <div id="showLevel2" style="display:none">
                <span class="redLabel">@Resources.Resource.level2</span>
                @Html.DropDownList("level2Id", new SelectList(ViewBag.Level2, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2Init", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showLevel3" style="display:none">
                <span class="redLabel">@Resources.Resource.level3</span>
                @Html.DropDownList("level3Id", new SelectList(ViewBag.Level3, "Id", "Name"), @Resources.Resource.all, htmlAttributes: new { @class = "form-control select2Init", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showShift" style="display:none">
                <span class="redLabel">@Resources.Resource.shift</span>
                @Html.DropDownList("shift", new SelectList(ViewBag.Shift, "Id", "Name"), "All", htmlAttributes: new { @class = "form-control", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showPeriod" style="display:none">
                <span class="redLabel">@Resources.Resource.period</span>
                @Html.DropDownList("period", new SelectList(ViewBag.Period, "Id", "Name"), "All", htmlAttributes: new { @class = "form-control", @style = "width:210px" })
            </div>
        </li>

        <li>
            <div id="showUsers" style="display:none">
                <span class="redLabel">@Resources.Resource.auditor</span>
                @Html.DropDownList("auditorId", new SelectList(ViewBag.UserSgq, "Id", "Name"), "All", htmlAttributes: new { @class = "form-control required", @style = "width:210px" })
            </div>


        </li>

        <li>
            <br />
            <div id="showManutencao" style="display:none">

                <div class="btn-group hide" data-toggle="buttons">
                    <label class="btn btn-primary" style="min-width: 0px; margin-left: -1px; margin-right: 0px;">
                        <!--<input type="checkbox" autocomplete="off" class="manutencaoAno2015"> 2015-->
                        @Html.CheckBox("manutencaoAno2015", false, new { @class = "redLabel" })
                        @Html.Label("2015")
                    </label>
                    <label class="btn btn-primary" style="min-width: 0px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoAno2016", false, new { @class = "redLabel" })
                        @Html.Label("2016")
                    </label>
                    <label class="btn btn-primary" style="min-width: 0px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoAno2017", false, new { @class = "redLabel" })
                        @Html.Label("2017")
                    </label>
                </div>


                <div class="btn-group hide" data-toggle="buttons">
                    <label class="btn btn-primary data" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoJaneiro", false, new { @class = "redLabel" })
                        @Html.Label("Jan")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoFevereiro", false, new { @class = "redLabel" })
                        @Html.Label("Fev")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoMarco", false, new { @class = "redLabel" })
                        @Html.Label("Mar")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoAbril", false, new { @class = "redLabel" })
                        @Html.Label("Abr")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoMaio", false, new { @class = "redLabel" })
                        @Html.Label("Mai")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoJunho", false, new { @class = "redLabel" })
                        @Html.Label("Jun")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoJulho", false, new { @class = "redLabel" })
                        @Html.Label("Jul")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoAgosto", false, new { @class = "redLabel" })
                        @Html.Label("Ago")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoSetembro", false, new { @class = "redLabel" })
                        @Html.Label("Set")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoOutubro", false, new { @class = "redLabel" })
                        @Html.Label("Out")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoNovembro", false, new { @class = "redLabel" })
                        @Html.Label("Nov")
                    </label>
                    <label class="btn btn-primary" style="min-width: 66px; margin-left: 0px; margin-right: 0px;">
                        @Html.CheckBox("manutencaoDezembro", false, new { @class = "redLabel" })
                        @Html.Label("Dez")
                    </label>

                </div>

                <div class="form-group" id="cbxlistaRegionais"></div>

                <div class="form-group" id="cbxlistaAnos"></div>

                <div class="form-group" id="cbxlistaMeses"></div>

                <br />
            </div>

            <div id="showIndicadoresManutencao" style="display:none">
                <table id="indicadores">
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Bois Abatidos">Bois Abatidos</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Manutenção R$">Manutenção R$</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Eficiên.Programção">Eficiên.Programção</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Apropr Planej...to">Apropr Planej...to</label></td>
                    </tr>
                    @*<tr>
                            <td><label class="radio"><input type="radio" name="optradio" value="Rend.(Sebo+Farinha)">Rend.(Sebo+Farinha)</label></td>
                            <td><label class="radio"><input type="radio" name="optradio" value="Sebo Flotado">Sebo Flotado</label></td>
                        </tr>*@
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Scorecard Unidade">Scorecard Unidade</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Scorecard Vácuo">Scorecard Vácuo</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Head Count">Head Count</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Scorecard Aspersão">Scorecard Aspersão</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Scorecard Energia">Scorecard Energia</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Scorecard Vapor">Scorecard Vapor</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Pilar Manutenção">Pilar Manutenção</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Devoluções %">Devoluções %</label></td>
                    </tr>
                    @*<tr>
                            <td><label class="radio"><input type="radio" name="optradio" value="Devoluções R$">Devoluções R$</label></td>
                            <td><label class="radio"><input type="radio" name="optradio" value="Absenteísmo">Absenteísmo</label></td>
                        </tr>*@
                    @*<tr>
                            <td><label class="radio"><input type="radio" name="optradio" value="Rotatividade">Rotatividade</label></td>
                            <td><label class="radio"><input type="radio" name="optradio" value="Scorecard  Água">Scorecard  Água</label></td>
                        </tr>*@
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="R$/CB Manut">R$/CB Manut</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="R$/CB Manut+Utilid">R$/CB Manut+Utilid</label></td>
                    </tr>

                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Sobra de Animais">Sobra de Animais</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="R$ Manut Comb.">R$ Manut Comb.</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Energia R$">Energia R$</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="KWh/Boi Proc">KWh/Boi Proc</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Caldeira R$">Caldeira R$</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Mcal/Boi Proc">Mcal/Boi Proc</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Fator de Potência">Fator de Potência</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Água M³/Boi">Água M³/Boi</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="M³ de Lenha">M³ de Lenha</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Disponibilidade Ab">Disponibilidade Ab</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Disponibilidade Des">Disponibilidade Des</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="KWh">KWh</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Parada Abate (min)">Parada Abate (min)</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Parada Des. (min)">Parada Des. (min)</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="OBRAS">OBRAS</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="Horas Extras R$">Horas Extras R$</label></td>
                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Horas Extras Nº">Horas Extras Nº</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="CAPEX">CAPEX</label></td>

                    </tr>
                    <tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Apropriação de O.S">Apropriação de O.S</label></td>
                        <td><label class="radio"><input type="radio" name="optradio" value="CARTA META">CARTA METAS</label></td>
                    </tr>
                    @*<tr>
                        <td><label class="radio"><input type="radio" name="optradio" value="Consumo Agua m³">Consumo Agua m³</label></td>
                    </tr>*@
                    @*<tr>
                            <td><label class="radio"><input type="radio" name="optradio" value="Scorecard M. Amb">Scorecard M. Amb</label></td>
                            <td><label class="radio"><input type="radio" name="optradio" value="Taxa de Frequência">Taxa de Frequência</label></td>
                        </tr>*@
                </table>

            </div>

        </li>

        <li>
            <button style="margin-bottom: 40px; margin-left: 40px; max-width: 210px;" type="button" class="btn margin-top margin-bottom btn-block btn-primary" id="btnSend" onclick="">@Resources.Resource.send</button>
        </li>

    </ul>
</div>

@*Referencing the Angular library to the page*@
@Scripts.Render("~/Scripts/angular.js")
@*<script src="~/Scripts/angular.min.js"></script>*@

<script type="text/javascript">

    var GetListLevel1 = @Html.Raw(Json.Encode(GetListLevel1));
    var GetListLevel2 = @Html.Raw(Json.Encode(GetListLevel2));
    var GetListLevel3 = @Html.Raw(Json.Encode(GetListLevel3));
    var GetListLevel2VinculadoLevel1 = @Html.Raw(Json.Encode(GetListLevel2VinculadoLevel1));
    var GetListLevel3VinculadoLevel2 = @Html.Raw(Json.Encode(GetListLevel3VinculadoLevel2));
    var GetListLevel3VinculadoLevel2Level1 = @Html.Raw(Json.Encode(GetListLevel3VinculadoLevel2Level1));
    

    /*
    START ANGULAR MODULE
    */

    //Defining a module
    var myApp = angular.module('myApp', []);
    //Defining a Controller
    myApp.controller('MainCtrl', ['$scope', '$http',
        function ($scope, $http) {
            //Defining the $http service for getting the Level1 2 and 3 by default
            $http({
                method: 'POST',
                url: GetListLevel1
            }).
            then(function (r) {
                $scope.level1 = r.data;
            });

            $http({
                method: 'POST',
                url: GetListLevel2
            }).
            then(function (r) {
                $scope.level2 = r.data;
            });

            $http({
                method: 'POST',
                url: GetListLevel3
            }).
            then(function (r) {
                $scope.level3 = r.data;
            });

            //Defining the $http service for getting Level2 By Level1
            $scope.GetListLevel2VinculadoLevel1 = function () {
                if ($scope.level1Value) {
                    $http({
                        method: 'POST',
                        url: GetListLevel2VinculadoLevel1 + "/" + $scope.level1Value, 
                        //data: JSON.stringify({ Id: $scope.level1Value })
                    }).
                    then(function (r) {
                        $scope.level2 = r.data;
                    });
                }
                else {
                    $http({
                        method: 'POST',
                        url: GetListLevel2
                    }).
                   then(function (r) {
                       $scope.level2 = r.data;
                   });
                }
            }

            $scope.GetListLevel3VinculadoLevel2 = function () {
                //Defining the $http service for getting Level3 By Level2
                if ($scope.level2Value && !$scope.level1Value) {
                    $http({
                        method: 'POST',
                        url: GetListLevel3VinculadoLevel2 + "/" + $scope.level2Value,
                        //data: JSON.stringify({ Id: $scope.level2Value })
                    }).
                    then(function (r) {
                        $scope.level3 = r.data;
                    });
                }
                //Defining the $http service for getting Level3 By Level2 and Level1
                else if  ($scope.level2Value && $scope.level1Value) {
                    $http({
                        method: 'POST',
                        url: GetListLevel3VinculadoLevel2Level1 + "/" + $scope.level1Value + "/" + $scope.level2Value,
                        //data: JSON.stringify({ Id:  } + { Id:  })
                    }).
                    then(function (r) {
                        $scope.level3 = r.data;
                    });
                }
                else {
                    $http({
                        method: 'POST',
                        url: GetListLevel3
                    }).
                   then(function (r) {
                       $scope.level3 = r.data;
                   });
                }
            }
        }]);

    /*
        END ANGULAR MODULE
    */

</script>

<!-- Menu Toggle Script -->

<script>

    var enviar = {};
    var start = moment();
    var end = moment();

    var monthNames = [
        '@Resources.Resource.january',
        '@Resources.Resource.february',
        '@Resources.Resource.march',
        '@Resources.Resource.april',
        '@Resources.Resource.may',
        '@Resources.Resource.june',
        '@Resources.Resource.july',
        '@Resources.Resource.august',
        '@Resources.Resource.september',
        '@Resources.Resource.october',
        '@Resources.Resource.november',
        '@Resources.Resource.december'];

    $(function () {

        $('#level1Id').on('change', function (e) {
            enviar['level1Id'] = $('#level1Id option:selected').val();
        });

        $('#level2Id').on('change', function (e) {
            enviar['level2Id'] = $('#level2Id option:selected').val();
        });

        $('#level3Id').on('change', function (e) {
            enviar['level3Id'] = $('#level3Id option:selected').val();
        });

        $('#unitId').on('change', function (e) {
            enviar['unitId'] = $('#unitId option:selected').val();
        });

        $('#shift').on('change', function (e) {
            enviar['shift'] = $('#shift option:selected').val();
        });

        $('#period').on('change', function (e) {
            enviar['period'] = $('#period option:selected').val();
        });

        $('#auditorId').on('change', function (e) {
            enviar['auditorId'] = $('#auditorId option:selected').val();
        });

        //enviar['level01Id'] = null;
        //enviar['level02Id'] = null;
        //enviar['level03Id'] = null;

        //Start config datepickerrange simple
        $('input[name="datefilter"]').daterangepicker({
            singleDatePicker: true,
            autoUpdateInput: false,
            autoApply: true,
            showDropdowns: true,
            startDate: start,
            endDate: end,
            //opens: "left",
            //"locale": localCultureRangePicker,
            locale: {
                cancelLabel: 'Clear'
            }
        }, function (start, end, label) {
            //console.log("New date range selected: ' + start.format('MM/DD/YYYY') + ' to ' + end.format('MM/DD/YYYY') + ' (predefined range: ' + label + ')");
            enviar['startDate'] = start.format();
            enviar['endDate'] = start.format();
        });

        $('input[name="datefilter"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format());
        });

        $('input[name="datefilter"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
            enviar['startDate'] = "";
            enviar['endDate'] = "";
        });
        //Start config datepickerrange simple

        //Start config datepickerrange full
        var start = moment();
        var end = moment();

        function cb(start, end) {
            $('#reportrange span').html(start.format() + ' - ' + end.format());
            enviar['startDate'] = start.format();
            enviar['endDate'] = end.format();
        }

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            //opens: "left",
            locale: {
                "format": "DD/MM/YYYY",
                "separator": " - ",
                "applyLabel": "Aplicar",
                "cancelLabel": "Cancelar",
                "customRangeLabel": "Seleção",
            },
            //autoApply: false,
            alwaysShowCalendars: true,
            showDropdowns: true,
            ranges: rangesBR,
            linkedCalendars: false
        }, cb);

        cb(start, end);
        //End config datepickerrange full

        enviar['startDate'] = moment().format();
        enviar['endDate'] = moment().format();
    });

    $(document).ready(function () {
        $("#menu-toggle").click(function (e) {
            $("#menu-toggle > i").toggleClass("glyphicon-chevron-right");
            $('.redLabelSecTitle').toggle();
            e.preventDefault();
            $(".wrapper").toggleClass("toggled");

            //Ajusta as datatables presentes.
            var tables = $('table[id]')
            setTimeout(function (e) {

                tables.each(function (c, o) {
                    if ($.fn.DataTable.isDataTable('#' + $(o).attr('id'))) {
                        var oTable = $(o).dataTable();
                        if (oTable.length > 0) {
                            oTable.fnAdjustColumnSizing();
                        }
                        oTable = null;
                    }
                });

                $(Highcharts.charts).each(function (c, chart) {
                    if (chart != undefined) {
                        chart.reflow()
                    }
                });

            }, 500)


        });
    });

    var formControl = {
        showLevel1: function () {
            $('#showLevel1').show();
        },
        showLevel2: function () {
            $('#showLevel2').show();
        },
        showLevel3: function () {
            $('#showLevel3').show();
        },
        showUsers: function () {
            $('#showUsers').show();
        },
        showPeriod: function () {
            $('#showPeriod').show();
        },
        showUnit: function () {
            $('#showUnit').show();
        },
        showShift: function () {
            $('#showShift').show();
        },
        showSimpleDate: function () {
            $('#simpleCallendar').show();
        },
        showFullCallendar: function () {
            $('#complexCallendar').show();
        },
        ShowAllFielsAndFullCallendar() {
            formControl.showPeriod();
            formControl.showFullCallendar();
            formControl.showShift();
            formControl.showUnit();
            formControl.showUsers();
        },
        orderDdls: function () {

        },
        showManutencao: function () {
            $("#showManutencao").show();
        },
        loadManutencaoParametros: function () {

            $("#cbxlistaAnos").empty();

            var data = new Date();

            var ano = data.getFullYear();
            var selectAnos = $("<select multiple='multiple' class='form-control'></select>");
            for (var i = ano; i > 2010; i--) {
                selectAnos.append("<option value='" + i + "'>" + i + "</option>");
            }
            $("#cbxlistaAnos").append("<label>Anos: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>").append(selectAnos);
            $("#cbxlistaAnos select").select2();

            $("#cbxlistaMeses").empty();
            var selectMeses = $("<select multiple='multiple' class='form-control'></select>");
            for (var i = 0; i < 12; i++) {
                selectMeses.append("<option value='" + parseInt(i + 1) + "'>" + monthNames[i] + "</option>");
            }
            $("#cbxlistaMeses").append("<label>Meses:     </label>").append(selectMeses);
            $("#cbxlistaMeses select").select2();


            $("#cbxlistaRegionais").empty();
            var selectRegionais = $("<select multiple='multiple' class='form-control'></select>");
            $.post("../api/Manutencao/getSelectEmpresaRegionalList", function (r) {
                for (var i = 0 ; i < r.length; i++) {
                    selectRegionais.append("<option value='" + r[i].Regional + "'>" + r[i].Regional + "</option>");
                }
                $("#cbxlistaRegionais").append("<label>Regionais:    </label>").append(selectRegionais);
                $("#cbxlistaRegionais select").select2();

                $("#showManutencao").find(".select2").css("width", "210px");
            });

            $("#showManutencao").find(".select2").css("width", "210px");
        },
        showIndicadoresManutencao: function () {
            $("#showIndicadoresManutencao").show();
        },

        showYear: function () {
            $("#showYearManutencao").show();
        },

        showMonthManutencao: function(){
            $("#showMonthManutencao").show();
        },

        showFiltroManutencao: function () {
            $("#showFiltroManutencao").show();
        },

        showRegionaisManutencao: function () {
            $("#showRegionaisManutencao").show();
        },

        showSubRegionaisManutencao: function () {
            $("#showSubRegionaisManutencao").show();
        },

        showUnidadesManutencao: function (){
            $('#showUnidadesManutencao').show();
        }

    }

    //Esconde o header e o footer quando tecla f11
    $(document).keyup(function (e) {
        if (e.which == 122) {
            e.preventDefault();

            expand();


            return false;
        }
    });

    //Toggle navbar, header e footer
    function expand() {

        $(".navbar").toggle();
        $(".page-header-fixed .page-container").toggleClass("fullScreen");
        $("footer").toggle();

    }

    //Toggle fullscreen para todos os navegadores
    function toggleFullScreen() {
        if (!document.fullscreenElement &&
            !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {  // current working methods
            if (document.documentElement.requestFullscreen) {
                document.documentElement.requestFullscreen();
            } else if (document.documentElement.msRequestFullscreen) {
                document.documentElement.msRequestFullscreen();
            } else if (document.documentElement.mozRequestFullScreen) {
                document.documentElement.mozRequestFullScreen();
            } else if (document.documentElement.webkitRequestFullscreen) {
                document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        } else {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            }
        }

        expand();
    }

</script>
