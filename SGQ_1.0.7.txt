


Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.6_InsercaoReportXUserSgq',GetDate());

GO

IF EXISTS (SELECT * FROM sysobjects WHERE name='ReportXUserSgq' AND xtype='U')
drop table ReportXUserSgq

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ReportXUserSgq' AND xtype='U')
create table ReportXUserSgq(
	Id int not null identity primary key,
	AddDate Date not null,
	AlterDate Date,
	ItemMenu_Id int not null FOREIGN KEY REFERENCES ItemMenu(Id),
	Elaborador varchar(100) null,
	Aprovador varchar(100) null,
	CodigoRelatorio varchar(100) null,
	ParLevel1_Id int not null FOREIGN key REFERENCES ParLevel1(Id),
	ParCompany_Id int FOREIGN key REFERENCES ParCompany(Id),
	IsActive bit not null
)

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('20180927_1600_AdicionarParCluster_Id_na_PARLEVEL1XMODULE',GetDate())

GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	SET ANSI_NULLS ON
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	SET QUOTED_IDENTIFIER ON
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParLevel1XModule' AND xtype='U')
BEGIN
	CREATE TABLE [dbo].[ParLevel1XModule](
		[Id] [int] IDENTITY(1,1) NOT NULL,
		[ParLevel1_Id] [int] NOT NULL,
		[ParModule_Id] [int] NOT NULL,
		[Points] [decimal](38, 5) NOT NULL,
		[AddDate] [datetime2](7) NOT NULL,
		[AlterDate] [datetime2](7) NULL,
		[IsActive] [bit] NOT NULL CONSTRAINT [DF_ParLevel1Module_Active]  DEFAULT ((1)),
		[EffectiveDateStart] [datetime] NULL DEFAULT ('2000-01-01'),
		[EffectiveDateEnd] [datetime] NULL DEFAULT ('2000-01-01'),
		[ParCluster_Id] [int] NULL,
	 CONSTRAINT [PK_ParLevel1Module] PRIMARY KEY CLUSTERED 
	(
		[Id] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN

	ALTER TABLE [dbo].[ParLevel1XModule]  WITH CHECK ADD  CONSTRAINT [FK_ParLevel1XModule_ParCluster] FOREIGN KEY([ParCluster_Id])
	REFERENCES [dbo].[ParCluster] ([Id])
	
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	ALTER TABLE [dbo].[ParLevel1XModule] CHECK CONSTRAINT [FK_ParLevel1XModule_ParCluster]
	
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	ALTER TABLE [dbo].[ParLevel1XModule]  WITH CHECK ADD  CONSTRAINT [FK_ParLevel1XModule_ParLevel1] FOREIGN KEY([ParLevel1_Id])
	REFERENCES [dbo].[ParLevel1] ([Id])
	
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN

	ALTER TABLE [dbo].[ParLevel1XModule] CHECK CONSTRAINT [FK_ParLevel1XModule_ParLevel1]
	
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	ALTER TABLE [dbo].[ParLevel1XModule]  WITH CHECK ADD  CONSTRAINT [FK_ParLevel1XModule_ParModule] FOREIGN KEY([ParModule_Id])
	REFERENCES [dbo].[ParModule] ([Id])
	
END
GO

IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
BEGIN
	ALTER TABLE [dbo].[ParLevel1XModule] CHECK CONSTRAINT [FK_ParLevel1XModule_ParModule]
	
  END 

GO

IF NOT EXISTS 
	(
		SELECT * FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE 
		WHERE 1=1
		 AND TABLE_NAME = 'ParGroupParLevel1'
		 AND COLUMN_NAME = 'Id'
	) 
  BEGIN
	ALTER TABLE ParGroupParLevel1
	ADD PRIMARY KEY (Id)
  END 

GO

IF COL_LENGTH('PARLEVEL1XMODULE','ParCluster_Id') IS NULL
    BEGIN
		ALTER TABLE PARLEVEL1XMODULE
		ADD ParCluster_Id Int null;
		
		ALTER TABLE [dbo].[ParLevel1XModule]  WITH CHECK ADD  CONSTRAINT [FK_ParLevel1XModule_ParCluster] FOREIGN KEY([ParCluster_Id])
		REFERENCES [dbo].[ParCluster] ([Id])
    END

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.7_InsercaoParVinculoPeso',GetDate());

GO


IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ParVinculoPeso' AND xtype='U')
create table ParVinculoPeso(
	Id int not null identity primary key,
	Name varchar(max) NOT NULL,
	AddDate datetime not null,
	AlterDate datetime,	
	IsActive bit not null,
	Peso int not null,
	ParCompany_Id int not null FOREIGN key REFERENCES ParCompany(Id),
	ParDepartment_Id int not null FOREIGN key REFERENCES ParDepartment(Id),
	ParLevel2_Id int not null FOREIGN key REFERENCES ParLevel2(Id),
	ParGroupParLevel1_Id int NOT NULL FOREIGN key REFERENCES ParGroupParLevel1(Id),
	ParLevel1_Id int not null FOREIGN key REFERENCES ParLevel1(Id),
	ParLevel3_Id int not null FOREIGN key REFERENCES ParLevel3(Id),	
)

GO



Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.7_InsercaoDeTabelaDeLogDeBanco',GetDate());

GO


IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DatabaseLog' AND xtype='U')
create table DatabaseLog(
	Id bigint not null identity primary key,
	Tabela varchar(200) NOT NULL,
	Json varchar(max) NOT NULL,
	Operacao int NOT NULL,
	AddDate datetime not null
)

GO



Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.7_InsercaoDeTabelaDeLogDeErro',GetDate());

GO


IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ErrorLog' AND xtype='U')
create table ErrorLog(
	Id bigint not null identity primary key,
	StackTrace varchar(max) NOT NULL,
	AddDate datetime not null
)

GO
 
IF COL_LENGTH('ParGroupParLevel1','Parent_Id') IS NULL
    BEGIN
		ALTER TABLE ParGroupParLevel1
		ADD Parent_Id int;
    END

go
 
IF COL_LENGTH('ParGroupParLevel1','Hash') IS NULL
    BEGIN
		ALTER TABLE ParGroupParLevel1
		ADD Hash varchar(900);
    END

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.7_InsercaoDepartamentoCentroCusto',GetDate());

GO
 
IF COL_LENGTH('ParDepartment','Parent_Id') IS NULL
    BEGIN
		ALTER TABLE ParDepartment
		ADD Parent_Id int;
    END

go
 
IF COL_LENGTH('ParDepartment','Hash') IS NULL
    BEGIN
		ALTER TABLE ParDepartment
		ADD Hash varchar(900);
    END

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('SGQ_1.0.7_VolumePorTurno',GetDate());

GO

IF COL_LENGTH('VolumePCC1b','Shift_Id') IS NULL
    BEGIN
		ALTER TABLE VolumePCC1b 
		ADD Shift_Id int null
    END

GO

IF COL_LENGTH('VolumeCEPDesossa','Shift_Id') IS NULL
    BEGIN
		ALTER TABLE VolumeCEPDesossa 
		ADD Shift_Id int null
    END

GO

IF COL_LENGTH('VolumeVacuoGRD','Shift_Id') IS NULL
    BEGIN
		ALTER TABLE VolumeVacuoGRD 
		ADD Shift_Id int null
    END

GO

IF COL_LENGTH('VolumeCepRecortes','Shift_Id') IS NULL
    BEGIN
		ALTER TABLE VolumeCepRecortes 
		ADD Shift_Id int null
    END
GO

Insert into MigrationHistory (Name, AddDate) VALUES ('PA_DiretrizesPriorizadas',GetDate());

GO

IF COL_LENGTH('Pa_Objetivo','IsPriority') IS NULL
    BEGIN
		ALTER TABLE Pa_Objetivo
		ADD IsPriority bit not null default 0;
    END
GO

IF COL_LENGTH('ReportXUserSgq','NomeRelatorio') IS NULL
    BEGIN
		ALTER TABLE ReportXUserSgq
		ADD NomeRelatorio varchar(100);
    END

GO

Insert into MigrationHistory (Name, AddDate) VALUES ('DescriçõesCampoCabeçalhos',GetDate());

update ParLevelDefiniton set Name = 'Cabeçalho na lista de Monitoramentos', Description = 'Cabeçalho na lista de Monitoramentos' where id = 1
update ParLevelDefiniton set Name = 'Cabeçalho na lista de Tarefas', Description = 'Cabeçalho na lista de Tarefas' where id = 2