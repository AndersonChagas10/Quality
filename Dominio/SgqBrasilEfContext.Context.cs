//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dominio
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SGQ_GlobalEntities : DbContext
    {
        public SGQ_GlobalEntities()
            : base("name=SGQ_GlobalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Equipamentos> Equipamentos { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<UsuarioPerfilEmpresa> UsuarioPerfilEmpresa { get; set; }
        public virtual DbSet<Unidades> Unidades { get; set; }
        public virtual DbSet<VerificacaoTipificacao> VerificacaoTipificacao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoResultados> VerificacaoTipificacaoResultados { get; set; }
        public virtual DbSet<Metas> Metas { get; set; }
        public virtual DbSet<Monitoramentos> Monitoramentos { get; set; }
        public virtual DbSet<Operacoes> Operacoes { get; set; }
        public virtual DbSet<Produtos> Produtos { get; set; }
        public virtual DbSet<Resultados> Resultados { get; set; }
        public virtual DbSet<Tarefas> Tarefas { get; set; }
        public virtual DbSet<Departamentos> Departamentos { get; set; }
        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<VerificacaoTipificacaoComparacao> VerificacaoTipificacaoComparacao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoTarefaIntegracao> VerificacaoTipificacaoTarefaIntegracao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoValidacao> VerificacaoTipificacaoValidacao { get; set; }
        public virtual DbSet<AreasParticipantes> AreasParticipantes { get; set; }
        public virtual DbSet<VTVerificacaoTipificacaoResultados> VTVerificacaoTipificacaoResultados { get; set; }
        public virtual DbSet<CaracteristicaTipificacao> CaracteristicaTipificacao { get; set; }
        public virtual DbSet<VTVerificacaoTipificacao> VTVerificacaoTipificacao { get; set; }
        public virtual DbSet<VTVerificacaoTipificacaoValidacao> VTVerificacaoTipificacaoValidacao { get; set; }
        public virtual DbSet<ClusterDepartamentos> ClusterDepartamentos { get; set; }
        public virtual DbSet<Clusters> Clusters { get; set; }
        public virtual DbSet<DepartamentoOperacoes> DepartamentoOperacoes { get; set; }
        public virtual DbSet<TarefaMonitoramentos> TarefaMonitoramentos { get; set; }
        public virtual DbSet<Regionais> Regionais { get; set; }
        public virtual DbSet<UsuarioUnidades> UsuarioUnidades { get; set; }
        public virtual DbSet<FamiliaProdutos> FamiliaProdutos { get; set; }
        public virtual DbSet<TarefaAmostras> TarefaAmostras { get; set; }
        public virtual DbSet<VolumeProducao> VolumeProducao { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<TarefaAvaliacoes> TarefaAvaliacoes { get; set; }
        public virtual DbSet<PenalidadeReincidencia> PenalidadeReincidencia { get; set; }
    
        public virtual ObjectResult<GetOperacoes_Result> GetOperacoes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOperacoes_Result>("GetOperacoes");
        }
    
        public virtual ObjectResult<sp_ChartTarefasNC_Result> sp_ChartTarefasNC(Nullable<int> unidadeId, string unidade, Nullable<int> departamentoId, string departamento, Nullable<int> operacaoId, string operacao, string dataInicio, string dataFim)
        {
            var unidadeIdParameter = unidadeId.HasValue ?
                new ObjectParameter("UnidadeId", unidadeId) :
                new ObjectParameter("UnidadeId", typeof(int));
    
            var unidadeParameter = unidade != null ?
                new ObjectParameter("Unidade", unidade) :
                new ObjectParameter("Unidade", typeof(string));
    
            var departamentoIdParameter = departamentoId.HasValue ?
                new ObjectParameter("DepartamentoId", departamentoId) :
                new ObjectParameter("DepartamentoId", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var operacaoIdParameter = operacaoId.HasValue ?
                new ObjectParameter("OperacaoId", operacaoId) :
                new ObjectParameter("OperacaoId", typeof(int));
    
            var operacaoParameter = operacao != null ?
                new ObjectParameter("Operacao", operacao) :
                new ObjectParameter("Operacao", typeof(string));
    
            var dataInicioParameter = dataInicio != null ?
                new ObjectParameter("DataInicio", dataInicio) :
                new ObjectParameter("DataInicio", typeof(string));
    
            var dataFimParameter = dataFim != null ?
                new ObjectParameter("DataFim", dataFim) :
                new ObjectParameter("DataFim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ChartTarefasNC_Result>("sp_ChartTarefasNC", unidadeIdParameter, unidadeParameter, departamentoIdParameter, departamentoParameter, operacaoIdParameter, operacaoParameter, dataInicioParameter, dataFimParameter);
        }
    
        public virtual ObjectResult<GetScoreCardConsolidado_Result> GetScoreCardConsolidado(string dataInicio, string dataFim, Nullable<int> unidadeId)
        {
            var dataInicioParameter = dataInicio != null ?
                new ObjectParameter("DataInicio", dataInicio) :
                new ObjectParameter("DataInicio", typeof(string));
    
            var dataFimParameter = dataFim != null ?
                new ObjectParameter("DataFim", dataFim) :
                new ObjectParameter("DataFim", typeof(string));
    
            var unidadeIdParameter = unidadeId.HasValue ?
                new ObjectParameter("UnidadeId", unidadeId) :
                new ObjectParameter("UnidadeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScoreCardConsolidado_Result>("GetScoreCardConsolidado", dataInicioParameter, dataFimParameter, unidadeIdParameter);
        }
    }
}
