//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dominio
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SGQ_GlobalEntities : DbContext
    {
        public SGQ_GlobalEntities()
            : base("name=SGQ_GlobalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acoes> Acoes { get; set; }
        public virtual DbSet<AcoesCorretivas> AcoesCorretivas { get; set; }
        public virtual DbSet<AcoesPreventivas> AcoesPreventivas { get; set; }
        public virtual DbSet<AcompanhamentoTarefa> AcompanhamentoTarefa { get; set; }
        public virtual DbSet<Alertas> Alertas { get; set; }
        public virtual DbSet<AreasParticipantes> AreasParticipantes { get; set; }
        public virtual DbSet<BkpCollection> BkpCollection { get; set; }
        public virtual DbSet<Cabecalho> Cabecalho { get; set; }
        public virtual DbSet<Campo> Campo { get; set; }
        public virtual DbSet<CategoriaProdutos> CategoriaProdutos { get; set; }
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<CausaEspecifica> CausaEspecifica { get; set; }
        public virtual DbSet<CausaGenerica> CausaGenerica { get; set; }
        public virtual DbSet<Classificacao> Classificacao { get; set; }
        public virtual DbSet<ClassificacaoProduto> ClassificacaoProduto { get; set; }
        public virtual DbSet<ClusterDepartamentos> ClusterDepartamentos { get; set; }
        public virtual DbSet<Clusters> Clusters { get; set; }
        public virtual DbSet<ConfiguracaoEmail> ConfiguracaoEmail { get; set; }
        public virtual DbSet<ConfiguracaoEmailPA> ConfiguracaoEmailPA { get; set; }
        public virtual DbSet<ContramedidaEspecifica> ContramedidaEspecifica { get; set; }
        public virtual DbSet<ContramedidaGenerica> ContramedidaGenerica { get; set; }
        public virtual DbSet<DepartamentoOperacoes> DepartamentoOperacoes { get; set; }
        public virtual DbSet<DepartamentoProdutos> DepartamentoProdutos { get; set; }
        public virtual DbSet<Departamentos> Departamentos { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<DesvioNiveis> DesvioNiveis { get; set; }
        public virtual DbSet<Desvios> Desvios { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<Equipamentos> Equipamentos { get; set; }
        public virtual DbSet<EquipamentosAvaliados> EquipamentosAvaliados { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<Example> Example { get; set; }
        public virtual DbSet<fa_CausaEspecifica> fa_CausaEspecifica { get; set; }
        public virtual DbSet<fa_CausaGenerica> fa_CausaGenerica { get; set; }
        public virtual DbSet<fa_ContramedidaEspecifica> fa_ContramedidaEspecifica { get; set; }
        public virtual DbSet<fa_ContramedidaGenerica> fa_ContramedidaGenerica { get; set; }
        public virtual DbSet<fa_GrupoCausa> fa_GrupoCausa { get; set; }
        public virtual DbSet<fa_PlanoDeAcaoQuemQuandoComo> fa_PlanoDeAcaoQuemQuandoComo { get; set; }
        public virtual DbSet<FamiliaProdutos> FamiliaProdutos { get; set; }
        public virtual DbSet<FormularioTratamentoAnomalia> FormularioTratamentoAnomalia { get; set; }
        public virtual DbSet<GrupoCabecalho> GrupoCabecalho { get; set; }
        public virtual DbSet<GrupoCausa> GrupoCausa { get; set; }
        public virtual DbSet<GrupoProjeto> GrupoProjeto { get; set; }
        public virtual DbSet<GrupoTipoAvaliacaoMonitoramentos> GrupoTipoAvaliacaoMonitoramentos { get; set; }
        public virtual DbSet<GrupoTipoAvaliacoes> GrupoTipoAvaliacoes { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<LogAlteracoes> LogAlteracoes { get; set; }
        public virtual DbSet<Metas> Metas { get; set; }
        public virtual DbSet<MonitoramentoEquipamentos> MonitoramentoEquipamentos { get; set; }
        public virtual DbSet<Monitoramentos> Monitoramentos { get; set; }
        public virtual DbSet<MonitoramentosConcorrentes> MonitoramentosConcorrentes { get; set; }
        public virtual DbSet<MultiplaEscolha> MultiplaEscolha { get; set; }
        public virtual DbSet<Niveis> Niveis { get; set; }
        public virtual DbSet<NiveisUsuarios> NiveisUsuarios { get; set; }
        public virtual DbSet<Observacoes> Observacoes { get; set; }
        public virtual DbSet<ObservacoesPadroes> ObservacoesPadroes { get; set; }
        public virtual DbSet<Operacoes> Operacoes { get; set; }
        public virtual DbSet<pa_acompanhamento_tarefa> pa_acompanhamento_tarefa { get; set; }
        public virtual DbSet<pa_campo> pa_campo { get; set; }
        public virtual DbSet<pa_configuracao_email> pa_configuracao_email { get; set; }
        public virtual DbSet<pa_empresa> pa_empresa { get; set; }
        public virtual DbSet<pa_grupo_projeto> pa_grupo_projeto { get; set; }
        public virtual DbSet<pa_log_operacao> pa_log_operacao { get; set; }
        public virtual DbSet<pa_multipla_escolha> pa_multipla_escolha { get; set; }
        public virtual DbSet<pa_participante> pa_participante { get; set; }
        public virtual DbSet<pa_projeto> pa_projeto { get; set; }
        public virtual DbSet<pa_tarefa> pa_tarefa { get; set; }
        public virtual DbSet<pa_vinculo_campo_tarefa> pa_vinculo_campo_tarefa { get; set; }
        public virtual DbSet<pa_vinculo_participante_multipla_escolha> pa_vinculo_participante_multipla_escolha { get; set; }
        public virtual DbSet<pa_vinculo_participante_projeto> pa_vinculo_participante_projeto { get; set; }
        public virtual DbSet<Pacotes> Pacotes { get; set; }
        public virtual DbSet<PacotesOperacoes> PacotesOperacoes { get; set; }
        public virtual DbSet<PadraoMonitoramentos> PadraoMonitoramentos { get; set; }
        public virtual DbSet<PadraoTolerancias> PadraoTolerancias { get; set; }
        public virtual DbSet<Padroes> Padroes { get; set; }
        public virtual DbSet<Pcc1b> Pcc1b { get; set; }
        public virtual DbSet<PenalidadeReincidencia> PenalidadeReincidencia { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Period> Period { get; set; }
        public virtual DbSet<PlanoDeAcaoQuemQuandoComo> PlanoDeAcaoQuemQuandoComo { get; set; }
        public virtual DbSet<Pontos> Pontos { get; set; }
        public virtual DbSet<Produto> Produto { get; set; }
        public virtual DbSet<ProdutoInNatura> ProdutoInNatura { get; set; }
        public virtual DbSet<Produtos> Produtos { get; set; }
        public virtual DbSet<ProdutosAvaliados> ProdutosAvaliados { get; set; }
        public virtual DbSet<Projeto> Projeto { get; set; }
        public virtual DbSet<Regionais> Regionais { get; set; }
        public virtual DbSet<Resultados> Resultados { get; set; }
        public virtual DbSet<ResultadosData> ResultadosData { get; set; }
        public virtual DbSet<ResultadosPCC> ResultadosPCC { get; set; }
        public virtual DbSet<Shift> Shift { get; set; }
        public virtual DbSet<Sugestoes> Sugestoes { get; set; }
        public virtual DbSet<TarefaAmostras> TarefaAmostras { get; set; }
        public virtual DbSet<TarefaAvaliacoes> TarefaAvaliacoes { get; set; }
        public virtual DbSet<TarefaCategorias> TarefaCategorias { get; set; }
        public virtual DbSet<TarefaMonitoramentos> TarefaMonitoramentos { get; set; }
        public virtual DbSet<TarefaPA> TarefaPA { get; set; }
        public virtual DbSet<Tarefas> Tarefas { get; set; }
        public virtual DbSet<Terceiro> Terceiro { get; set; }
        public virtual DbSet<TipificacaoReal> TipificacaoReal { get; set; }
        public virtual DbSet<TipoAvaliacoes> TipoAvaliacoes { get; set; }
        public virtual DbSet<Unidades> Unidades { get; set; }
        public virtual DbSet<UnidadesMedidas> UnidadesMedidas { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioPerfilEmpresa> UsuarioPerfilEmpresa { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<UsuarioUnidades> UsuarioUnidades { get; set; }
        public virtual DbSet<VacuoGRD> VacuoGRD { get; set; }
        public virtual DbSet<VerificacaoContagem> VerificacaoContagem { get; set; }
        public virtual DbSet<VerificacaoTipificacao> VerificacaoTipificacao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoComparacao> VerificacaoTipificacaoComparacao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoResultados> VerificacaoTipificacaoResultados { get; set; }
        public virtual DbSet<VerificacaoTipificacaoTarefaIntegracao> VerificacaoTipificacaoTarefaIntegracao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoValidacao> VerificacaoTipificacaoValidacao { get; set; }
        public virtual DbSet<VinculoCampoCabecalho> VinculoCampoCabecalho { get; set; }
        public virtual DbSet<VinculoCampoTarefa> VinculoCampoTarefa { get; set; }
        public virtual DbSet<VinculoParticipanteMultiplaEscolha> VinculoParticipanteMultiplaEscolha { get; set; }
        public virtual DbSet<VinculoParticipanteProjeto> VinculoParticipanteProjeto { get; set; }
        public virtual DbSet<VolumeAbate> VolumeAbate { get; set; }
        public virtual DbSet<VolumeProducao> VolumeProducao { get; set; }
        public virtual DbSet<Z_Sistema> Z_Sistema { get; set; }
        public virtual DbSet<ControleMetaTolerancia> ControleMetaTolerancia { get; set; }
        public virtual DbSet<Resultados_BKP_OCT> Resultados_BKP_OCT { get; set; }
        public virtual DbSet<ScorecardConsolidadoDia> ScorecardConsolidadoDia { get; set; }
        public virtual DbSet<Tipificacao> Tipificacao { get; set; }
        public virtual DbSet<VerificacaoTipificacaoJBS> VerificacaoTipificacaoJBS { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
